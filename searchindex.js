Search.setIndex({"alltitles": {"1 distplot()": [[128, "distplot"]], "1. Arithmatic Operators": [[70, "arithmatic-operators"]], "1. Bar Plot": [[133, "bar-plot"]], "1. Basic Operators for concatenation of two or more strings": [[27, "basic-operators-for-concatenation-of-two-or-more-strings"]], "1. Changing a Tuple": [[29, "changing-a-tuple"]], "1. Dictionary Membership Test": [[30, "dictionary-membership-test"]], "1. Docstrings for Python Modules": [[59, "docstrings-for-python-modules"]], "1. Easy to Implement": [[10, "easy-to-implement"]], "1. Identity operators": [[70, "identity-operators"]], "1. Implicit Type Conversion": [[68, "implicit-type-conversion"]], "1. Import the numpy package under the name np and print the numpy version and the configuration (\u2605\u2606\u2606)": [[105, "import-the-numpy-package-under-the-name-np-and-print-the-numpy-version-and-the-configuration"]], "1. Indexing": [[29, "indexing"]], "1. List Membership Test": [[28, "list-membership-test"]], "1. Numeric Literals": [[66, "numeric-literals"]], "1. Opening Files in Python": [[43, "opening-files-in-python"]], "1. Python Keywords": [[63, "python-keywords"]], "1. Python Numbers": [[67, "python-numbers"]], "1. Python Output Using print() function": [[69, "python-output-using-print-function"]], "1. Python Statement": [[64, "python-statement"]], "1. Python Syntax Errors": [[45, "python-syntax-errors"]], "1. Python Variables": [[65, "python-variables"]], "1. Python break statement": [[24, "python-break-statement"]], "1. Set Membership Test": [[31, "set-membership-test"]], "1. Single lined comment:": [[64, "single-lined-comment"]], "1. Strip Plot": [[130, "strip-plot"]], "1. Tuple Membership Test": [[29, "tuple-membership-test"]], "1. [] - Square brackets": [[14, "square-brackets"]], "1. break Statement in Nested Loop": [[24, "break-statement-in-nested-loop"]], "1. continue Statement in Nested Loop": [[24, "continue-statement-in-nested-loop"]], "1. match.group()": [[14, "match-group"]], "1. re.findall()": [[14, "re-findall"]], "10. () - Group": [[14, "group"]], "10. Find indices of non-zero elements from [3,7,0,0,9,0] (\u2605\u2606\u2606)": [[105, "find-indices-of-non-zero-elements-from-3-7-0-0-9-0"]], "100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (\u2605\u2605\u2605)": [[105, "compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1d-array-x-i-e-resample-the-elements-of-an-array-with-replacement-n-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means"]], "11. Create a 4x4 identity matrix (\u2605\u2606\u2606)": [[105, "create-a-4x4-identity-matrix"]], "11. \\ - Backslash": [[14, "backslash"]], "12. Create a 2x2x2 array with random values (\u2605\u2606\u2606)": [[105, "create-a-2x2x2-array-with-random-values"]], "13. Create a 9x9 array with random values and find the minimum and maximum values (\u2605\u2606\u2606)": [[105, "create-a-9x9-array-with-random-values-and-find-the-minimum-and-maximum-values"]], "15. Create a 2d array with 1 on the border and 0 inside (\u2605\u2606\u2606)": [[105, "create-a-2d-array-with-1-on-the-border-and-0-inside"]], "16. How to add a border (filled with 0\u2019s) around an existing array? (\u2605\u2606\u2606)": [[105, "how-to-add-a-border-filled-with-0s-around-an-existing-array"]], "17. What is the result of the following expression? (\u2605\u2606\u2606)": [[105, "what-is-the-result-of-the-following-expression"]], "18. Create a 6x6 matrix with values 1,2,3,4 just below the diagonal (\u2605\u2606\u2606)": [[105, "create-a-6x6-matrix-with-values-1-2-3-4-just-below-the-diagonal"]], "19. Create a 6x6 matrix and fill it with a checkerboard pattern (\u2605\u2606\u2606)": [[105, "create-a-6x6-matrix-and-fill-it-with-a-checkerboard-pattern"]], "2 jointplot()": [[128, "jointplot"]], "2. . - Period": [[14, "period"]], "2. Closing Files in Python": [[43, "closing-files-in-python"]], "2. Comparison/Relational operators": [[70, "comparison-relational-operators"]], "2. Constants": [[65, "constants"]], "2. Convert a list of numeric value into a one-dimensional NumPy array (\u2605\u2606\u2606)": [[105, "convert-a-list-of-numeric-value-into-a-one-dimensional-numpy-array"]], "2. Deleting a Tuple": [[29, "deleting-a-tuple"]], "2. Docstrings for Python Functions": [[59, "docstrings-for-python-functions"]], "2. Explicit Type Conversion": [[68, "explicit-type-conversion"]], "2. Inline comments": [[64, "inline-comments"]], "2. Iterating Through a Dictionary": [[30, "iterating-through-a-dictionary"]], "2. Iterating Through a List": [[28, "iterating-through-a-list"]], "2. Iterating Through a Set": [[31, "iterating-through-a-set"]], "2. Iterating Through a Tuple": [[29, "iterating-through-a-tuple"]], "2. Membership operators": [[70, "membership-operators"]], "2. Memory Efficient": [[10, "memory-efficient"]], "2. Negative Indexing": [[29, "negative-indexing"]], "2. Point Plot": [[133, "point-plot"]], "2. Python Identifiers": [[63, "python-identifiers"]], "2. Python Indentation": [[64, "python-indentation"]], "2. Python Input Using input() function": [[69, "python-input-using-input-function"]], "2. Python List []": [[67, "python-list"]], "2. Python Logical Errors (Exceptions)": [[45, "python-logical-errors-exceptions"]], "2. Python String Membership Operators": [[27, "python-string-membership-operators"]], "2. Python continue statement": [[24, "python-continue-statement"]], "2. String literals (unicode character strings)": [[66, "string-literals-unicode-character-strings"]], "2. break Statement in Outer Loop": [[24, "break-statement-in-outer-loop"]], "2. continue Statement in Outer Loop": [[24, "continue-statement-in-outer-loop"]], "2. match.start(), match.end() and match.span()": [[14, "match-start-match-end-and-match-span"]], "2. re.split()": [[14, "re-split"]], "20. Consider a (8,9,10) shape array, what is the index (x,y,z) of the 100th element? (\u2605\u2606\u2606)": [[105, "consider-a-8-9-10-shape-array-what-is-the-index-x-y-z-of-the-100th-element"]], "21. Create a checkerboard 8x8 matrix using the tile function (\u2605\u2606\u2606)": [[105, "create-a-checkerboard-8x8-matrix-using-the-tile-function"]], "22. Normalize a 6x6 random matrix (\u2605\u2606\u2606)": [[105, "normalize-a-6x6-random-matrix"]], "23. find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements. (\u2605\u2606\u2606)": [[105, "find-the-number-of-elements-of-an-array-length-of-one-array-element-in-bytes-and-total-bytes-consumed-by-the-elements"]], "24. Multiply a 6x3 matrix by a 3x4 matrix (real matrix product) (\u2605\u2606\u2606)": [[105, "multiply-a-6x3-matrix-by-a-3x4-matrix-real-matrix-product"]], "25. Given a 1D array, negate all elements which are between 3 and 8, in place. (\u2605\u2606\u2606)": [[105, "given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place"]], "26. What is the output of the following script? (\u2605\u2606\u2606)": [[105, "what-is-the-output-of-the-following-script"]], "27. Write a Python program compare two arrays using numpy (\u2605\u2606\u2606)": [[105, "write-a-python-program-compare-two-arrays-using-numpy"]], "28. What are the result of the following expressions? (\u2605\u2606\u2606)": [[105, "what-are-the-result-of-the-following-expressions"]], "29. How to round away from zero a float array ? (\u2605\u2606\u2606)": [[105, "how-to-round-away-from-zero-a-float-array"]], "3 pairplot()": [[128, "pairplot"]], "3. Boolean literals": [[66, "boolean-literals"]], "3. Count Plot": [[133, "count-plot"]], "3. Create a null vector of size 9 (\u2605\u2606\u2606)": [[105, "create-a-null-vector-of-size-9"]], "3. Docstrings for Python Classes": [[59, "docstrings-for-python-classes"]], "3. Logical/Boolean operators": [[70, "logical-boolean-operators"]], "3. Multi lined comment:": [[64, "multi-lined-comment"]], "3. Other List Operations in Python": [[28, "id1"]], "3. Python Comments": [[64, "python-comments"]], "3. Python Import function": [[69, "python-import-function"]], "3. Python NameError": [[45, "python-nameerror"]], "3. Python Relational Operators": [[27, "python-relational-operators"]], "3. Python Tuple ()": [[67, "python-tuple"]], "3. Python pass statement": [[24, "python-pass-statement"]], "3. Represent Infinite Stream": [[10, "represent-infinite-stream"]], "3. Slicing": [[29, "slicing"]], "3. Writing to Files in Python": [[43, "writing-to-files-in-python"]], "3. ^ - Caret": [[14, "caret"]], "3. match.re and match.string": [[14, "match-re-and-match-string"]], "3. re.sub()": [[14, "re-sub"]], "30. How to find common values between two arrays? (\u2605\u2606\u2606)": [[105, "how-to-find-common-values-between-two-arrays"]], "31. How to ignore all numpy warnings (not recommended)? (\u2605\u2606\u2606)": [[105, "how-to-ignore-all-numpy-warnings-not-recommended"]], "32. Is the following expressions true? (\u2605\u2606\u2606)": [[105, "is-the-following-expressions-true"]], "33. How to get the dates of yesterday, today and tomorrow? (\u2605\u2606\u2606)": [[105, "how-to-get-the-dates-of-yesterday-today-and-tomorrow"]], "34. How to get all the dates corresponding to the month of January 2016? (\u2605\u2605\u2606)": [[105, "how-to-get-all-the-dates-corresponding-to-the-month-of-january-2016"]], "35. How to compute ((A+B)*(-A/2)) in place (without copy)? (\u2605\u2605\u2606)": [[105, "how-to-compute-a-b-a-2-in-place-without-copy"]], "36. Extract the integer part of a random array of positive numbers using 4 different methods (\u2605\u2605\u2606)": [[105, "extract-the-integer-part-of-a-random-array-of-positive-numbers-using-4-different-methods"]], "37. Create a 3x3 matrix with row values ranging from 0 to 2 (\u2605\u2605\u2606)": [[105, "create-a-3x3-matrix-with-row-values-ranging-from-0-to-2"]], "38. Consider a generator function that generates 9 integers and use it to build an array (\u2605\u2606\u2606)": [[105, "consider-a-generator-function-that-generates-9-integers-and-use-it-to-build-an-array"]], "39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (\u2605\u2605\u2606)": [[105, "create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded"]], "4 rugplot()": [[128, "rugplot"]], "4. $ - Dollar": [[14, "dollar"]], "4. Bitwise operators": [[70, "bitwise-operators"]], "4. Docstrings for Python Scripts": [[59, "docstrings-for-python-scripts"]], "4. Docstrings in Python": [[64, "docstrings-in-python"]], "4. How to find the memory size of any array (\u2605\u2606\u2606)": [[105, "how-to-find-the-memory-size-of-any-array"]], "4. Pipelining Generators": [[10, "pipelining-generators"]], "4. Python IndexError": [[45, "python-indexerror"]], "4. Python Strings": [[67, "python-strings"]], "4. Reading Files in Python": [[43, "reading-files-in-python"]], "4. re.subn()": [[14, "re-subn"]], "40. Create a random vector of size 10 and sort it (\u2605\u2605\u2606)": [[105, "create-a-random-vector-of-size-10-and-sort-it"]], "41. How to sum a small array faster than np.sum? (\u2605\u2605\u2606)": [[105, "how-to-sum-a-small-array-faster-than-np-sum"]], "42. Consider two random array A and B, check if they are equal (\u2605\u2605\u2606)": [[105, "consider-two-random-array-a-and-b-check-if-they-are-equal"]], "43. Make an array immutable (read-only) (\u2605\u2605\u2606)": [[105, "make-an-array-immutable-read-only"]], "44. Consider a random 5x2 matrix representing cartesian coordinates, convert them to polar coordinates (\u2605\u2605\u2606)": [[105, "consider-a-random-5x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates"]], "45. Create random vector of size 5 and replace the maximum value by 0 (\u2605\u2605\u2606)": [[105, "create-random-vector-of-size-5-and-replace-the-maximum-value-by-0"]], "46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (\u2605\u2605\u2606)": [[105, "create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area"]], "47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj)) (\u2605\u2605\u2606)": [[105, "given-two-arrays-x-and-y-construct-the-cauchy-matrix-c-cij-1-xi-yj"]], "48. Print the minimum and maximum representable value for each numpy scalar type (\u2605\u2605\u2606)": [[105, "print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type"]], "49. How to print all the values of an array? (\u2605\u2605\u2606)": [[105, "how-to-print-all-the-values-of-an-array"]], "5 kdeplot()": [[128, "kdeplot"]], "5. * - Star": [[14, "star"]], "5. Assignment operators": [[70, "assignment-operators"]], "5. Docstrings for Python Packages": [[59, "docstrings-for-python-packages"]], "5. How to get the documentation of the numpy add function from the command line? (\u2605\u2606\u2606)": [[105, "how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line"]], "5. Python ModuleNotFoundError": [[45, "python-modulenotfounderror"]], "5. Python Set {}": [[67, "python-set"]], "5. re.search()": [[14, "re-search"]], "50. How to find the closest value (to a given scalar) in a vector? (\u2605\u2605\u2606)": [[105, "how-to-find-the-closest-value-to-a-given-scalar-in-a-vector"]], "51. Create a structured array representing a position (x,y) and a color (r,g,b) (\u2605\u2605\u2606)": [[105, "create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b"]], "52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (\u2605\u2605\u2606)": [[105, "consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances"]], "53. How to convert a float (32 bits) array into an integer (32 bits) in place?": [[105, "how-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"]], "54. How to read the following file? (\u2605\u2605\u2606)": [[105, "how-to-read-the-following-file"]], "55. What is the equivalent of enumerate for numpy arrays? (\u2605\u2605\u2606)": [[105, "what-is-the-equivalent-of-enumerate-for-numpy-arrays"]], "56. Generate a generic 2D Gaussian-like array (\u2605\u2605\u2606)": [[105, "generate-a-generic-2d-gaussian-like-array"]], "57. How to randomly place e elements in a 2D array? (\u2605\u2605\u2606)": [[105, "how-to-randomly-place-e-elements-in-a-2d-array"]], "58. Subtract the mean of each row of a matrix (\u2605\u2605\u2606)": [[105, "subtract-the-mean-of-each-row-of-a-matrix"]], "59. How to sort an array by the nth column? (\u2605\u2605\u2606)": [[105, "how-to-sort-an-array-by-the-nth-column"]], "6# 6# 14. Create a random vector of size 20 and find the mean value (\u2605\u2606\u2606)": [[105, "create-a-random-vector-of-size-20-and-find-the-mean-value"]], "6. + - Plus": [[14, "plus"]], "6. Create a null vector of size 12 but the sixth value which is 1 (\u2605\u2606\u2606)": [[105, "create-a-null-vector-of-size-12-but-the-sixth-value-which-is-1"]], "6. Python AttributeError": [[45, "python-attributeerror"]], "6. Python Dictionary {}": [[67, "python-dictionary"]], "6. Special operators": [[70, "special-operators"]], "60. How to tell if a given 2D array has null columns? (\u2605\u2605\u2606)": [[105, "how-to-tell-if-a-given-2d-array-has-null-columns"]], "61. Find the nearest value from a given value in an array (\u2605\u2605\u2606)": [[105, "find-the-nearest-value-from-a-given-value-in-an-array"]], "62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (\u2605\u2605\u2606)": [[105, "considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator"]], "63. Create an array class that has a name attribute (\u2605\u2605\u2606)": [[105, "create-an-array-class-that-has-a-name-attribute"]], "64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (\u2605\u2605\u2605)": [[105, "consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices"]], "65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (\u2605\u2605\u2605)": [[105, "how-to-accumulate-elements-of-a-vector-x-to-an-array-f-based-on-an-index-list-i"]], "66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (\u2605\u2605\u2606)": [[105, "considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors"]], "67. Considering a four dimensions array, how to get sum over the last two axis at once? (\u2605\u2605\u2605)": [[105, "considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once"]], "68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (\u2605\u2605\u2605)": [[105, "considering-a-one-dimensional-vector-d-how-to-compute-means-of-subsets-of-d-using-a-vector-s-of-same-size-describing-subset-indices"]], "69. How to get the diagonal of a dot product? (\u2605\u2605\u2605)": [[105, "how-to-get-the-diagonal-of-a-dot-product"]], "7. ? - Question Mark": [[14, "question-mark"]], "7. Create a vector with values ranging from 20 to 59 (\u2605\u2606\u2606)": [[105, "create-a-vector-with-values-ranging-from-20-to-59"]], "7. Python KeyError": [[45, "python-keyerror"]], "70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (\u2605\u2605\u2605)": [[105, "consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value"]], "71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (\u2605\u2605\u2605)": [[105, "consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5"]], "72. How to swap two rows of an array? (\u2605\u2605\u2605)": [[105, "how-to-swap-two-rows-of-an-array"]], "73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (\u2605\u2605\u2605)": [[105, "consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles"]], "74. Given a sorted array C that corresponds to a bincount, how to produce an array A such that np.bincount(A) == C? (\u2605\u2605\u2605)": [[105, "given-a-sorted-array-c-that-corresponds-to-a-bincount-how-to-produce-an-array-a-such-that-np-bincount-a-c"]], "75. How to compute averages using a sliding window over an array? (\u2605\u2605\u2605)": [[105, "how-to-compute-averages-using-a-sliding-window-over-an-array"]], "76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (\u2605\u2605\u2605)": [[105, "consider-a-one-dimensional-array-z-build-a-two-dimensional-array-whose-first-row-is-z-0-z-1-z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-z-3-z-2-z-1"]], "77. How to negate a boolean, or to change the sign of a float inplace? (\u2605\u2605\u2605)": [[105, "how-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace"]], "78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[105, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-p0-i-p1-i"]], "79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[105, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-set-of-points-p-how-to-compute-distance-from-each-point-j-p-j-to-each-line-i-p0-i-p1-i"]], "8. Python TypeError": [[45, "python-typeerror"]], "8. Reverse a vector (first element becomes last) (\u2605\u2606\u2606)": [[105, "reverse-a-vector-first-element-becomes-last"]], "8. {} - Braces": [[14, "braces"]], "80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (\u2605\u2605\u2605)": [[105, "consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary"]], "81. Consider an array a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], \u2026, [11,12,13,14]]? (\u2605\u2605\u2605)": [[105, "consider-an-array-a-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-b-1-2-3-4-2-3-4-5-3-4-5-6-11-12-13-14"]], "82. Compute a matrix rank (\u2605\u2605\u2605)": [[105, "compute-a-matrix-rank"]], "83. How to find the most frequent value in an array?": [[105, "how-to-find-the-most-frequent-value-in-an-array"]], "84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (\u2605\u2605\u2605)": [[105, "extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix"]], "85. Create a 2D array subclass such that a[i,j] == a[j,i] (\u2605\u2605\u2605)": [[105, "create-a-2d-array-subclass-such-that-a-i-j-a-j-i"]], "86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (\u2605\u2605\u2605)": [[105, "consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-how-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1"]], "87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (\u2605\u2605\u2605)": [[105, "consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4"]], "88. How to implement the Game of Life using numpy arrays? (\u2605\u2605\u2605)": [[105, "how-to-implement-the-game-of-life-using-numpy-arrays"]], "89. How to get the n largest values of an array (\u2605\u2605\u2605)": [[105, "how-to-get-the-n-largest-values-of-an-array"]], "9. Create a 3x3 matrix with values ranging from 12 to 20 (\u2605\u2606\u2606)": [[105, "create-a-3x3-matrix-with-values-ranging-from-12-to-20"]], "9. Python ValueError": [[45, "python-valueerror"]], "9. | - Alternation": [[14, "alternation"]], "90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (\u2605\u2605\u2605)": [[105, "given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item"]], "91. How to create a record array from a regular array? (\u2605\u2605\u2605)": [[105, "how-to-create-a-record-array-from-a-regular-array"]], "92. Consider a large vector A, compute A to the power of 3 using 3 different methods (\u2605\u2605\u2605)": [[105, "consider-a-large-vector-a-compute-a-to-the-power-of-3-using-3-different-methods"]], "93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (\u2605\u2605\u2605)": [[105, "consider-two-arrays-a-and-b-of-shape-8-3-and-2-2-how-to-find-rows-of-a-that-contain-elements-of-each-row-of-b-regardless-of-the-order-of-the-elements-in-b"]], "94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (\u2605\u2605\u2605)": [[105, "considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3"]], "95. Convert a vector of ints into a matrix binary representation (\u2605\u2605\u2605)": [[105, "convert-a-vector-of-ints-into-a-matrix-binary-representation"]], "96. Given a two dimensional array, how to extract unique rows? (\u2605\u2605\u2605)": [[105, "given-a-two-dimensional-array-how-to-extract-unique-rows"]], "97. Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (\u2605\u2605\u2605)": [[105, "considering-2-vectors-a-b-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function"]], "98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (\u2605\u2605\u2605)?": [[105, "considering-a-path-described-by-two-vectors-x-y-how-to-sample-it-using-equidistant-samples"]], "99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (\u2605\u2605\u2605)": [[105, "given-an-integer-n-and-a-2d-array-x-select-from-x-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n"]], "AI/ML Learning Path": [[144, "ai-ml-learning-path"]], "About Python Programming": [[4, "about-python-programming"]], "Accept float input from User": [[69, "accept-float-input-from-user"]], "Accept multiline input from a user": [[69, "accept-multiline-input-from-a-user"]], "Accepting User Inputs (as both integer and string)": [[69, "accepting-user-inputs-as-both-integer-and-string"]], "Accepting User Inputs (only as integer)": [[69, "accepting-user-inputs-only-as-integer"]], "Access Tuple Elements": [[29, "access-tuple-elements"]], "Access elements from a list": [[28, "access-elements-from-a-list"]], "Accessing Attributes with self Parameter": [[77, "accessing-attributes-with-self-parameter"]], "Accessing Elements from Dictionary": [[30, "accessing-elements-from-dictionary"]], "Accessing output string arguments by name": [[69, "accessing-output-string-arguments-by-name"]], "Accessing the index in for loop": [[22, "accessing-the-index-in-for-loop"]], "Add/Change List Elements": [[28, "add-change-list-elements"]], "Adding or Removing Elements": [[100, "adding-or-removing-elements"]], "Additional Regression Plots": [[127, "additional-regression-plots"]], "Advanced Level": [[144, "advanced-level"]], "Advanced string processing": [[27, "advanced-string-processing"]], "Advantage": [[55, "advantage"]], "Advantages of Recursion": [[53, "advantages-of-recursion"]], "Advantages of Tuple over List": [[29, "advantages-of-tuple-over-list"]], "Advantages of user-defined functions": [[60, "advantages-of-user-defined-functions"]], "Aggregate Statistics (Groupby)": [[118, "aggregate-statistics-groupby"]], "An example cell": [[0, "an-example-cell"], [84, "an-example-cell"], [142, "an-example-cell"]], "Anatomy of Box Plot": [[131, "anatomy-of-box-plot"]], "Anatomy of Violin Plot": [[132, "anatomy-of-violin-plot"]], "Apply condition": [[107, "apply-condition"]], "Argument of an Exception": [[46, "argument-of-an-exception"]], "Array": [[100, "array"]], "Array Attributes and Methods": [[101, "array-attributes-and-methods"]], "Array Manipulation": [[100, "array-manipulation"]], "Array datatypes": [[101, "array-datatypes"]], "Array indexing": [[102, "array-indexing"]], "Array math": [[103, "array-math"]], "Arrays reorganizing": [[104, "arrays-reorganizing"]], "Assigning value to constant in Python": [[65, "assigning-value-to-constant-in-python"]], "Assigning values to Variables in Python": [[65, "assigning-values-to-variables-in-python"]], "Backward Iteration using the reversed() function": [[22, "backward-iteration-using-the-reversed-function"]], "Bar Chart": [[97, "bar-chart"]], "Bar Plot, Point Plot and Count plot": [[133, "bar-plot-point-plot-and-count-plot"]], "Basic Graph": [[97, "basic-graph"]], "Basic Statistics": [[100, "basic-statistics"]], "Be careful when copying arrays!!!": [[102, "be-careful-when-copying-arrays"]], "Beginner Level": [[144, "beginner-level"]], "Boolean Masking and Advanced Indexing": [[104, "boolean-masking-and-advanced-indexing"]], "Boolean array indexing": [[102, "boolean-array-indexing"]], "Box and Whiskers Chart": [[97, "box-and-whiskers-chart"]], "Box plot #1": [[97, "box-plot-1"]], "Box plot #2": [[97, "box-plot-2"]], "Breaking appart strings": [[27, "breaking-appart-strings"]], "Broadcasting": [[103, "broadcasting"]], "Broadcasting with array reorganizing": [[104, "broadcasting-with-array-reorganizing"]], "Building Custom Iterators": [[9, "building-custom-iterators"]], "Building color palettes:": [[124, "building-color-palettes"]], "Built-In Class Attributes": [[77, "built-in-class-attributes"]], "Built-in Functions with Set": [[31, "built-in-functions-with-set"]], "Built-in Higher Order Functions": [[12, "built-in-higher-order-functions"]], "Built-in functions to Work with Python": [[27, "built-in-functions-to-work-with-python"]], "Cart ^": [[14, "cart"]], "Catching Exceptions in Python": [[46, "catching-exceptions-in-python"]], "Catching Specific Exceptions in Python": [[46, "catching-specific-exceptions-in-python"]], "Catching exceptions with continue statement": [[24, "catching-exceptions-with-continue-statement"]], "Categorical Data Background": [[129, "categorical-data-background"]], "Chaining Decorators in Python": [[12, "chaining-decorators-in-python"]], "Changing Dictionary to JSON": [[43, "changing-dictionary-to-json"]], "Changing Directory chdir() -": [[44, "changing-directory-chdir"]], "Changing JSON to Dictionary": [[43, "changing-json-to-dictionary"]], "Changing and Adding Dictionary elements": [[30, "changing-and-adding-dictionary-elements"]], "Check python datatypes": [[6, "check-python-datatypes"]], "Class": [[76, "class"]], "Class Constructor": [[76, "class-constructor"]], "Class Without Getters and Setters": [[13, "class-without-getters-and-setters"]], "Code blocks and outputs": [[7, "code-blocks-and-outputs"], [82, "code-blocks-and-outputs"], [86, "code-blocks-and-outputs"]], "Combining Arrays": [[100, "combining-arrays"]], "Common Python String Methods": [[27, "common-python-string-methods"]], "Compare DataFrame drop() vs. pop() vs. del": [[111, "compare-dataframe-drop-vs-pop-vs-del"]], "Comparision operators in Python": [[55, "comparision-operators-in-python"]], "Comparison": [[100, "comparison"]], "Concepts": [[145, "concepts"]], "Conclusion": [[91, "conclusion"]], "Conditional Changes": [[118, "conditional-changes"]], "Conditional statements": [[17, "conditional-statements"]], "Conditionals in List Comprehension": [[32, "conditionals-in-list-comprehension"]], "Constants  -": [[55, "constants"]], "Constructors in Python": [[77, "constructors-in-python"]], "Content with notebooks": [[7, "content-with-notebooks"], [82, "content-with-notebooks"], [86, "content-with-notebooks"]], "Control Flow Statements": [[17, "control-flow-statements"]], "Control Statements in Python": [[24, "control-statements-in-python"]], "Control Statements in Python FAQs": [[24, "control-statements-in-python-faqs"]], "Controlling Aesthetics of Seaborn Plots": [[122, "controlling-aesthetics-of-seaborn-plots"]], "Convert Pandas DataFrame to Python dictionary": [[115, "convert-pandas-dataframe-to-python-dictionary"]], "Copying/Sorting": [[100, "copying-sorting"]], "Core engineering": [[145, "core-engineering"]], "Course Structure": [[145, "course-structure"]], "Create DataFrame from Hierarchical lists as columns": [[109, "create-dataframe-from-hierarchical-lists-as-columns"]], "Create DataFrame from dict using constructor": [[108, "create-dataframe-from-dict-using-constructor"]], "Create DataFrame from hierarchical lists as rows": [[109, "create-dataframe-from-hierarchical-lists-as-rows"]], "Create DataFrame from list by changing data type": [[109, "create-dataframe-from-list-by-changing-data-type"]], "Create DataFrame from list of dict": [[108, "create-dataframe-from-list-of-dict"]], "Create DataFrame from list using constructor": [[109, "create-dataframe-from-list-using-constructor"]], "Create DataFrame from list with a customized column name": [[109, "create-dataframe-from-list-with-a-customized-column-name"]], "Create DataFrame from list with a customized index": [[109, "create-dataframe-from-list-with-a-customized-index"]], "Create DataFrame from multiple lists": [[109, "create-dataframe-from-multiple-lists"]], "Create Generators in Python": [[10, "create-generators-in-python"]], "Create Pandas DataFrame from Python Dictionary": [[108, "create-pandas-dataframe-from-python-dictionary"]], "Create Pandas DataFrame from Python List": [[109, "create-pandas-dataframe-from-python-list"]], "Create Test Objects": [[107, "create-test-objects"]], "Create a NumPy Array": [[101, "create-a-numpy-array"]], "Create a notebook with MyST Markdown": [[0, "create-a-notebook-with-myst-markdown"], [84, "create-a-notebook-with-myst-markdown"], [142, "create-a-notebook-with-myst-markdown"]], "Creating Custom Exceptions": [[47, "creating-custom-exceptions"]], "Creating Instance Objects": [[77, "creating-instance-objects"]], "Creating Python Dictionary": [[30, "creating-python-dictionary"]], "Creating Python List": [[28, "creating-python-list"]], "Creating Python Sets": [[31, "creating-python-sets"]], "Creating Python Tuple": [[29, "creating-python-tuple"]], "Creating a Lambda Function": [[32, "creating-a-lambda-function"]], "Creating a module in Python": [[55, "creating-a-module-in-python"]], "Creating an Object in Python": [[77, "creating-an-object-in-python"]], "Creating an empty set is a bit tricky.": [[31, "creating-an-empty-set-is-a-bit-tricky"]], "Customizing Exception Classes": [[47, "customizing-exception-classes"]], "Data": [[128, "data"]], "Data Cleaning": [[107, "data-cleaning"]], "Data Hiding": [[77, "data-hiding"]], "Data structures and algorithms": [[72, "data-structures-and-algorithms"]], "DataFrame Attributes": [[107, "dataframe-attributes"]], "DataFrame GroupBy": [[107, "dataframe-groupby"]], "DataFrame Iteration": [[107, "dataframe-iteration"]], "DataFrame Join": [[107, "dataframe-join"]], "DataFrame Options": [[107, "dataframe-options"]], "DataFrame Sorting": [[107, "dataframe-sorting"]], "DataFrame constructor": [[107, "dataframe-constructor"]], "DataFrame constructor vs from_dict()": [[108, "dataframe-constructor-vs-from-dict"]], "DataFrame conversion": [[107, "dataframe-conversion"]], "DataFrame creation": [[107, "dataframe-creation"]], "DataFrame filter columns": [[107, "dataframe-filter-columns"]], "DataFrame from dict by changing the column data type": [[108, "dataframe-from-dict-by-changing-the-column-data-type"]], "DataFrame from dict nested dict": [[108, "dataframe-from-dict-nested-dict"]], "DataFrame from dict where values are variable-length lists": [[108, "dataframe-from-dict-where-values-are-variable-length-lists"]], "DataFrame from dict with a single value": [[108, "dataframe-from-dict-with-a-single-value"]], "DataFrame from dict with dict keys as a row": [[108, "dataframe-from-dict-with-dict-keys-as-a-row"]], "DataFrame from dict with key and value as a column": [[108, "dataframe-from-dict-with-key-and-value-as-a-column"]], "DataFrame from dict with required columns only": [[108, "dataframe-from-dict-with-required-columns-only"]], "DataFrame from dict with user-defined indexes": [[108, "dataframe-from-dict-with-user-defined-indexes"]], "DataFrame metadata": [[107, "dataframe-metadata"]], "DataFrame modification": [[107, "dataframe-modification"]], "DataFrame rename columns": [[107, "dataframe-rename-columns"]], "DataFrame selection": [[107, "dataframe-selection"]], "DataFrame to dict by row": [[115, "dataframe-to-dict-by-row"]], "DataFrame to dict by row index": [[115, "dataframe-to-dict-by-row-index"]], "DataFrame to dict using into parameter": [[115, "dataframe-to-dict-using-into-parameter"]], "DataFrame to dict with a list of values": [[115, "dataframe-to-dict-with-a-list-of-values"]], "DataFrame to dict with one column as the key": [[115, "dataframe-to-dict-with-one-column-as-the-key"]], "DataFrame to dict with pandas series of values": [[115, "dataframe-to-dict-with-pandas-series-of-values"]], "DataFrame to dict without header and index": [[115, "dataframe-to-dict-without-header-and-index"]], "Dataframe from CSV": [[107, "dataframe-from-csv"]], "Dataframe from dict": [[107, "dataframe-from-dict"]], "Decorating Functions with Parameters": [[12, "decorating-functions-with-parameters"]], "Decorators in Python": [[12, "decorators-in-python"]], "Defining a Class in Python": [[77, "defining-a-class-in-python"]], "Defining a Closure Function": [[11, "defining-a-closure-function"]], "Defining a Function": [[49, "defining-a-function"]], "Defining a function with parameters": [[49, "defining-a-function-with-parameters"]], "Defining a function with parameters and return value": [[49, "defining-a-function-with-parameters-and-return-value"]], "Defining a function without any parameters": [[49, "defining-a-function-without-any-parameters"]], "Defining a function without parameters and return value": [[49, "defining-a-function-without-parameters-and-return-value"]], "Delete Objects": [[77, "delete-objects"]], "Delete object properties": [[77, "delete-object-properties"]], "Delete/Remove List Elements": [[28, "delete-remove-list-elements"]], "Deleting Files": [[43, "deleting-files"]], "Determinant": [[103, "determinant"]], "Dictionary Built-in Dictionary Functions": [[30, "dictionary-built-in-dictionary-functions"]], "Differences Between Interpreter and Compiler": [[73, "differences-between-interpreter-and-compiler"]], "Differences between Generator function and Normal function": [[10, "differences-between-generator-function-and-normal-function"]], "Disadvantages of Recursion": [[53, "disadvantages-of-recursion"]], "Display numbers in floating-point format": [[69, "display-numbers-in-floating-point-format"]], "Display output Number in various type format": [[69, "display-output-number-in-various-type-format"]], "Docstring Formats": [[59, "docstring-formats"]], "Docstrings": [[49, "docstrings"]], "Draw a scatterplot for each pairwise relationship": [[136, "draw-a-scatterplot-for-each-pairwise-relationship"]], "Draw strips of observations on top of a box plot": [[130, "draw-strips-of-observations-on-top-of-a-box-plot"]], "Draw strips of observations on top of a violin plot": [[130, "draw-strips-of-observations-on-top-of-a-violin-plot"]], "Draw swarm observations on top of a violin plot": [[130, "draw-swarm-observations-on-top-of-a-violin-plot"]], "Drop NA from defined rows": [[113, "drop-na-from-defined-rows"]], "Drop all duplicates": [[112, "drop-all-duplicates"]], "Drop all the columns using loc": [[111, "drop-all-the-columns-using-loc"]], "Drop column by index position": [[111, "drop-column-by-index-position"]], "Drop column by suppressing errors": [[111, "drop-column-by-suppressing-errors"]], "Drop column from multi-index DataFrame": [[111, "drop-column-from-multi-index-dataframe"]], "Drop column in place": [[111, "drop-column-in-place"]], "Drop column using a function": [[111, "drop-column-using-a-function"]], "Drop column using pandas DataFrame delete": [[111, "drop-column-using-pandas-dataframe-delete"]], "Drop column using pandas DataFrame.pop() function": [[111, "drop-column-using-pandas-dataframe-pop-function"]], "Drop column where all values are missing": [[113, "drop-column-where-all-values-are-missing"]], "Drop column where at least one value is missing": [[113, "drop-column-where-at-least-one-value-is-missing"]], "Drop column with missing values in place": [[113, "drop-column-with-missing-values-in-place"]], "Drop column with the number of NA": [[113, "drop-column-with-the-number-of-na"]], "Drop columns": [[107, "drop-columns"]], "Drop columns in pandas DataFrame": [[111, "drop-columns-in-pandas-dataframe"]], "Drop columns with NA in pandas DataFrame": [[113, "drop-columns-with-na-in-pandas-dataframe"]], "Drop duplicates and reset the index": [[112, "drop-duplicates-and-reset-the-index"], [113, "drop-duplicates-and-reset-the-index"]], "Drop duplicates but keep first": [[112, "drop-duplicates-but-keep-first"]], "Drop duplicates but keep last": [[112, "drop-duplicates-but-keep-last"]], "Drop duplicates from defined columns": [[112, "drop-duplicates-from-defined-columns"]], "Drop duplicates in pandas DataFrame": [[112, "drop-duplicates-in-pandas-dataframe"]], "Drop duplicates in place": [[112, "drop-duplicates-in-place"]], "Drop first n columns": [[111, "drop-first-n-columns"]], "Drop multiple columns": [[111, "drop-multiple-columns"]], "Drop range of columns using iloc": [[111, "drop-range-of-columns-using-iloc"]], "Drop single column": [[111, "drop-single-column"]], "Drop the last column": [[111, "drop-the-last-column"]], "Encapsulation": [[76, "encapsulation"]], "Enjoy Learning \ud83d\ude03": [[145, "enjoy-learning"]], "Enumerate": [[46, "enumerate"]], "Error Handling": [[91, "error-handling"]], "Escape Sequence": [[27, "escape-sequence"]], "Escape character \\": [[14, "escape-character"]], "Essentials": [[145, "essentials"]], "Example 10: Print year, month, hour, minute and timestamp": [[34, "example-10-print-year-month-hour-minute-and-timestamp"]], "Example 11: Difference between two dates and times": [[34, "example-11-difference-between-two-dates-and-times"]], "Example 12: Difference between two timedelta objects": [[34, "example-12-difference-between-two-timedelta-objects"]], "Example 13: Printing negative timedelta object": [[34, "example-13-printing-negative-timedelta-object"]], "Example 14: Time duration in seconds": [[34, "example-14-time-duration-in-seconds"]], "Example 15: Format date using strftime()": [[34, "example-15-format-date-using-strftime"]], "Example 16: strptime()": [[34, "example-16-strptime"]], "Example 1:": [[21, "example-1"], [62, "example-1"]], "Example 1: Current time using datetime object": [[38, "example-1-current-time-using-datetime-object"]], "Example 1: Declaring and assigning value to a constant": [[65, "example-1-declaring-and-assigning-value-to-a-constant"]], "Example 1: Declaring and assigning value to a variable": [[65, "example-1-declaring-and-assigning-value-to-a-variable"]], "Example 1: Get Current Date and Time": [[34, "example-1-get-current-date-and-time"]], "Example 1: Python get today\u2019s date": [[37, "example-1-python-get-todays-date"]], "Example 1: Python sleep()": [[41, "example-1-python-sleep"]], "Example 1: Python timestamp to datetime": [[39, "example-1-python-timestamp-to-datetime"]], "Example 1: datetime to string using strftime()": [[35, "example-1-datetime-to-string-using-strftime"]], "Example 1: string to datetime object": [[36, "example-1-string-to-datetime-object"]], "Example 2:": [[21, "example-2"], [62, "example-2"]], "Example 2: Creating string from a timestamp": [[35, "example-2-creating-string-from-a-timestamp"]], "Example 2: Current date in different formats": [[37, "example-2-current-date-in-different-formats"]], "Example 2: Current time using time module": [[38, "example-2-current-time-using-time-module"]], "Example 2: Declaring multiple variables in one line** using comma  ,  and semicolon ;": [[65, "example-2-declaring-multiple-variables-in-one-line-using-comma-and-semicolon"]], "Example 2: Get Current Date": [[34, "example-2-get-current-date"]], "Example 2: Python create a digital clock": [[41, "example-2-python-create-a-digital-clock"]], "Example 2: Python datetime to timestamp": [[39, "example-2-python-datetime-to-timestamp"]], "Example 2: string to datetime object": [[36, "example-2-string-to-datetime-object"]], "Example 3: Changing the value of a variable": [[65, "example-3-changing-the-value-of-a-variable"]], "Example 3: Current time of a timezone": [[38, "example-3-current-time-of-a-timezone"]], "Example 3: Date object to represent a date": [[34, "example-3-date-object-to-represent-a-date"]], "Example 3: Get the current date and time": [[37, "example-3-get-the-current-date-and-time"]], "Example 3: Locale\u2019s appropriate date and time": [[35, "example-3-locales-appropriate-date-and-time"]], "Example 3: Python multithreading": [[41, "example-3-python-multithreading"]], "Example 4: Get current date": [[34, "example-4-get-current-date"]], "Example 4: Time Objects to Represent Time": [[38, "example-4-time-objects-to-represent-time"]], "Example 4: sleep() in a multithreaded program": [[41, "example-4-sleep-in-a-multithreaded-program"]], "Example 5: Difference Between Two Points in Time Using": [[38, "example-5-difference-between-two-points-in-time-using"]], "Example 5: Get date from a timestamp": [[34, "example-5-get-date-from-a-timestamp"]], "Example 6: Difference Between Two Points in Time Using timedelata": [[38, "example-6-difference-between-two-points-in-time-using-timedelata"]], "Example 6: Print today\u2019s year, month and day": [[34, "example-6-print-todays-year-month-and-day"]], "Example 7: Time object to represent time": [[34, "example-7-time-object-to-represent-time"]], "Example 8: Print hour, minute, second and microsecond": [[34, "example-8-print-hour-minute-second-and-microsecond"]], "Example 9: Python datetime object": [[34, "example-9-python-datetime-object"]], "Example : Arithmetic operators in Python": [[70, "example-arithmetic-operators-in-python"]], "Example : Comparison operators in Python": [[70, "example-comparison-operators-in-python"]], "Example : Identity operators in Python": [[70, "example-identity-operators-in-python"]], "Example : Logical operators in Python": [[70, "example-logical-operators-in-python"]], "Example : Membership operators in Python": [[70, "example-membership-operators-in-python"]], "Example : Share a global Variable Across Python Modules": [[51, "example-share-a-global-variable-across-python-modules"]], "Example Using decimal Module": [[55, "example-using-decimal-module"]], "Example Using math Module": [[55, "example-using-math-module"]], "Example Using operator Module": [[55, "example-using-operator-module"]], "Example Using os Module": [[55, "example-using-os-module"]], "Example Using random Module": [[55, "example-using-random-module"]], "Example Using statistics Module": [[55, "example-using-statistics-module"]], "Example Using string Module": [[55, "example-using-string-module"]], "Example Using sys Module": [[55, "example-using-sys-module"]], "Example of Inheritance in Python": [[78, "example-of-inheritance-in-python"]], "Example of Method Overriding in Python": [[78, "example-of-method-overriding-in-python"]], "Example of RegEx with Metacharacters": [[14, "example-of-regex-with-metacharacters"]], "Example to convert pandas DataFrame to dict": [[115, "example-to-convert-pandas-dataframe-to-dict"]], "Example:": [[24, "example"], [62, "example"]], "Example: Nested for loop": [[22, "example-nested-for-loop"]], "Example: Nested for loop to print pattern": [[22, "example-nested-for-loop-to-print-pattern"]], "Example: Nested while loop": [[23, "example-nested-while-loop"]], "Example: Nested while loop to print the pattern": [[23, "example-nested-while-loop-to-print-the-pattern"]], "Example: User-Defined Exception in Python": [[47, "example-user-defined-exception-in-python"]], "Exceptions in Python": [[46, "exceptions-in-python"]], "Exercise 10: Merge two data frames using the following condition": [[119, "exercise-10-merge-two-data-frames-using-the-following-condition"]], "Exercise 1: From the given dataset print the first and last five rows": [[119, "exercise-1-from-the-given-dataset-print-the-first-and-last-five-rows"]], "Exercise 1: Read Total profit of all months and show it using a line plot": [[98, "exercise-1-read-total-profit-of-all-months-and-show-it-using-a-line-plot"]], "Exercise 2: Clean the dataset and update the CSV file": [[119, "exercise-2-clean-the-dataset-and-update-the-csv-file"]], "Exercise 2: Get total profit of all months and show line plot with the following Style properties": [[98, "exercise-2-get-total-profit-of-all-months-and-show-line-plot-with-the-following-style-properties"]], "Exercise 3: Find the most expensive car company name": [[119, "exercise-3-find-the-most-expensive-car-company-name"]], "Exercise 3: Read all product sales data and show it  using a multiline plot": [[98, "exercise-3-read-all-product-sales-data-and-show-it-using-a-multiline-plot"]], "Exercise 4: Print All Toyota Cars details": [[119, "exercise-4-print-all-toyota-cars-details"]], "Exercise 4: Read toothpaste sales data of each month and show it using a scatter plot": [[98, "exercise-4-read-toothpaste-sales-data-of-each-month-and-show-it-using-a-scatter-plot"]], "Exercise 5: Count total cars per company": [[119, "exercise-5-count-total-cars-per-company"]], "Exercise 5: Read face cream and facewash product sales data and show it using the bar chart": [[98, "exercise-5-read-face-cream-and-facewash-product-sales-data-and-show-it-using-the-bar-chart"]], "Exercise 6: Find each company\u2019s Higesht price car": [[119, "exercise-6-find-each-companys-higesht-price-car"]], "Exercise 6: Read sales data of bathing soap of all months and show it using a bar chart. Save this plot to your hard disk": [[98, "exercise-6-read-sales-data-of-bathing-soap-of-all-months-and-show-it-using-a-bar-chart-save-this-plot-to-your-hard-disk"]], "Exercise 7: Find the average mileage of each car making company": [[119, "exercise-7-find-the-average-mileage-of-each-car-making-company"]], "Exercise 7: Read the total profit of each month and show it using the histogram to see the most common profit ranges": [[98, "exercise-7-read-the-total-profit-of-each-month-and-show-it-using-the-histogram-to-see-the-most-common-profit-ranges"]], "Exercise 8: Calculate total sale data for last year for each product and show it using a Pie chart": [[98, "exercise-8-calculate-total-sale-data-for-last-year-for-each-product-and-show-it-using-a-pie-chart"]], "Exercise 8: Sort all cars by Price column": [[119, "exercise-8-sort-all-cars-by-price-column"]], "Exercise 9: Concatenate two data frames using the following conditions": [[119, "exercise-9-concatenate-two-data-frames-using-the-following-conditions"]], "Exercise 9: Read Bathing soap facewash of all months and display it using the Subplot": [[98, "exercise-9-read-bathing-soap-facewash-of-all-months-and-display-it-using-the-subplot"]], "Exercise Question 10: Read all product sales data and show it using the stack plot": [[98, "exercise-question-10-read-all-product-sales-data-and-show-it-using-the-stack-plot"]], "Exercises \u279e <span class='label label-default'>Level 1</span>": [[12, "exercises-level-1"], [14, "exercises-level-1"], [20, "exercises-level-1"], [22, "exercises-level-1"], [28, "exercises-level-1"], [29, "exercises-level-1"], [31, "exercises-level-1"], [39, "exercises-level-1"], [43, "exercises-level-1"], [46, "exercises-level-1"], [49, "exercises-level-1"], [55, "exercises-level-1"], [65, "exercises-level-1"], [76, "exercises-level-1"]], "Exercises \u279e <span class='label label-default'>Level 2</span>": [[12, "exercises-level-2"], [14, "exercises-level-2"], [20, "exercises-level-2"], [22, "exercises-level-2"], [28, "exercises-level-2"], [29, "exercises-level-2"], [31, "exercises-level-2"], [43, "exercises-level-2"], [49, "exercises-level-2"], [55, "exercises-level-2"], [65, "exercises-level-2"], [76, "exercises-level-2"]], "Exercises \u279e <span class='label label-default'>Level 3</span>": [[12, "exercises-level-3"], [14, "exercises-level-3"], [20, "exercises-level-3"], [22, "exercises-level-3"], [31, "exercises-level-3"], [49, "exercises-level-3"], [55, "exercises-level-3"]], "Expert Level": [[144, "expert-level"]], "Exporting Data": [[107, "exporting-data"]], "FacetGrid": [[137, "facetgrid"], [137, "id1"]], "Factor Plot": [[134, "factor-plot"]], "Feature 1": [[91, "feature-1"]], "Feature 2": [[91, "feature-2"]], "Feature 3": [[91, "feature-3"]], "File Positions": [[43, "file-positions"]], "File Types": [[43, "file-types"]], "File with csv Extension": [[43, "file-with-csv-extension"]], "File with json Extension": [[43, "file-with-json-extension"]], "File with txt Extension": [[43, "file-with-txt-extension"]], "File with xlsx Extension": [[43, "file-with-xlsx-extension"]], "File with xml Extension": [[43, "file-with-xml-extension"]], "Files": [[43, "files"]], "Filter, Sort, and Groupby": [[107, "filter-sort-and-groupby"]], "Filtering Data": [[118, "filtering-data"]], "Flatten Data": [[104, "flatten-data"]], "For instance if you want to generate a list of numbers": [[32, "for-instance-if-you-want-to-generate-a-list-of-numbers"]], "Format Code List": [[35, "format-code-list"], [36, "format-code-list"]], "Format output strings by its positions": [[69, "format-output-strings-by-its-positions"]], "Frozenset methods": [[31, "frozenset-methods"]], "Function Argument and Parameter": [[52, "function-argument-and-parameter"]], "Function as a Parameter": [[11, "function-as-a-parameter"]], "Function as a Parameter of Another Function": [[52, "function-as-a-parameter-of-another-function"]], "Function as a Return Value": [[11, "function-as-a-return-value"]], "Function pass Statement": [[49, "function-pass-statement"]], "Function return Statement": [[49, "function-return-statement"]], "Functions in Python Math Module": [[57, "functions-in-python-math-module"]], "Generate Random Numbers": [[104, "generate-random-numbers"]], "Generators in Python": [[10, "generators-in-python"]], "Generic Seaborn Plots:": [[124, "generic-seaborn-plots"]], "Get Current Directory getcwd() -": [[44, "get-current-directory-getcwd"]], "Get multiple input values from a user in one line": [[69, "get-multiple-input-values-from-a-user-in-one-line"]], "Get the statistics of DataFrame": [[107, "get-the-statistics-of-dataframe"]], "Getting Started with Python": [[6, "getting-started-with-python"]], "Getting back to Decorators": [[12, "getting-back-to-decorators"]], "Global Variables": [[50, "global-variables"]], "Global Variables Across Python Modules": [[51, "global-variables-across-python-modules"]], "Global and local variables": [[50, "global-and-local-variables"]], "Global in Nested Functions": [[51, "global-in-nested-functions"]], "Good news is \ud83d\ude0d": [[145, "good-news-is"]], "Group the strips by a categorical variable": [[130, "group-the-strips-by-a-categorical-variable"]], "HIGH-LEVEL LANGUAGES": [[73, "high-level-languages"]], "Handling timezone in Python": [[34, "handling-timezone-in-python"]], "Help topics": [[64, "help-topics"]], "Here is a list of all the escape sequences supported by Python.": [[27, "here-is-a-list-of-all-the-escape-sequences-supported-by-python"]], "Here\u2019s my first section": [[1, "heres-my-first-section"], [3, "heres-my-first-section"], [85, "heres-my-first-section"], [88, "heres-my-first-section"], [141, "heres-my-first-section"], [143, "heres-my-first-section"]], "Here\u2019s my sample title": [[1, "heres-my-sample-title"], [3, "heres-my-sample-title"], [85, "heres-my-sample-title"], [88, "heres-my-sample-title"], [141, "heres-my-sample-title"], [143, "heres-my-sample-title"]], "Hierarchical Inheritance": [[78, "hierarchical-inheritance"]], "Higher Order Functions": [[11, "higher-order-functions"]], "Histogram": [[97, "histogram"]], "How Are Sets Better Than Other DataTypes?": [[31, "how-are-sets-better-than-other-datatypes"]], "How strftime() works?": [[35, "how-strftime-works"]], "How strptime() works?": [[36, "how-strptime-works"]], "How to Install NumPy?": [[100, "how-to-install-numpy"]], "How to access characters in a string?": [[27, "how-to-access-characters-in-a-string"]], "How to call a function in python?": [[49, "how-to-call-a-function-in-python"]], "How to change or delete a string?": [[27, "how-to-change-or-delete-a-string"]], "How to create a string in Python?": [[27, "how-to-create-a-string-in-python"]], "How to get current date and time in Python?": [[37, "how-to-get-current-date-and-time-in-python"]], "How to import modules in Python?": [[55, "how-to-import-modules-in-python"]], "How to learn Python?": [[4, "how-to-learn-python"]], "How to print blank lines": [[62, "how-to-print-blank-lines"]], "How to slice a string in Python?": [[27, "how-to-slice-a-string-in-python"]], "How to slice lists in Python?": [[28, "how-to-slice-lists-in-python"]], "How to use DataFrame.head() function": [[110, "how-to-use-dataframe-head-function"]], "How to use DataFrame.tail() function": [[110, "how-to-use-dataframe-tail-function"]], "Hybrid Inheritance": [[78, "hybrid-inheritance"]], "Import NumPy and Check Version": [[100, "import-numpy-and-check-version"]], "Importing Data": [[107, "importing-data"]], "Importing module from a package": [[58, "importing-module-from-a-package"]], "Importing the Package": [[91, "importing-the-package"]], "In the upcoming tutorials, we will deep dive into specific concepts of Python, hold on your breath and start your journey": [[6, "in-the-upcoming-tutorials-we-will-deep-dive-into-specific-concepts-of-python-hold-on-your-breath-and-start-your-journey"]], "Index": [[107, "index"]], "Indexing": [[107, "indexing"]], "Indexing a 1D array": [[102, "indexing-a-1d-array"]], "Indexing a 2D array (matrices)": [[102, "indexing-a-2d-array-matrices"]], "Informal introduction to python: using python as calculator": [[6, "informal-introduction-to-python-using-python-as-calculator"]], "Inheritance": [[76, "inheritance"]], "Inheritance in Python": [[78, "inheritance-in-python"]], "Initializing the Langchain": [[91, "initializing-the-langchain"]], "Insert columns": [[107, "insert-columns"]], "Inspecting Strings": [[27, "inspecting-strings"]], "Installation": [[91, "installation"]], "Instance Variables and Methods": [[76, "instance-variables-and-methods"]], "Integer array indexing": [[102, "integer-array-indexing"]], "Interactive widget to create a sequential cubehelix palette:": [[124, "interactive-widget-to-create-a-sequential-cubehelix-palette"]], "Intermediate Level": [[144, "intermediate-level"]], "Interpreter Vs Compiler": [[73, "interpreter-vs-compiler"]], "Introduction": [[91, "introduction"]], "Introduction to *args and **kwargs in Python": [[15, "introduction-to-args-and-kwargs-in-python"]], "Introduction to HuggingFace": [[89, "introduction-to-huggingface"]], "Iterate Dictionary using for loop": [[22, "iterate-dictionary-using-for-loop"]], "Iterate List using for loop": [[22, "iterate-list-using-for-loop"]], "Iterate List using while loop": [[23, "iterate-list-using-while-loop"]], "Iterate Numbers using while loop": [[23, "iterate-numbers-using-while-loop"]], "Iterate Set using for loop": [[22, "iterate-set-using-for-loop"]], "Iterate String using for loop": [[22, "iterate-string-using-for-loop"]], "Iterate String using while loop": [[23, "iterate-string-using-while-loop"]], "Iterate Tuple using for loop": [[22, "iterate-tuple-using-for-loop"]], "Iterating Through a string": [[27, "iterating-through-a-string"]], "Iterating Through an Iterator": [[9, "iterating-through-an-iterator"]], "Iterative statements": [[17, "iterative-statements"]], "Iterators in Python": [[9, "iterators-in-python"]], "Java is both Compiled and Interpreted.": [[73, "java-is-both-compiled-and-interpreted"]], "Join/Combine": [[107, "join-combine"]], "KEY DIFFERENCE": [[73, "key-difference"]], "KEY SIMILARITIES": [[73, "key-similarities"]], "Key Points to Remember": [[32, "key-points-to-remember"], [68, "key-points-to-remember"]], "Key Points to Remember:": [[76, "key-points-to-remember"]], "LM Plot and Reg Plot": [[125, "lm-plot-and-reg-plot"]], "Lambda Function": [[32, "lambda-function"]], "LangGraphs": [[93, "langgraphs"]], "LangServe": [[94, "langserve"]], "LangSmith": [[95, "langsmith"]], "Langchain expression language": [[96, "langchain-expression-language"]], "Langchain modules": [[92, "langchain-modules"]], "Learn Python Programming": [[4, "learn-python-programming"]], "Let us see valid variable names": [[65, "let-us-see-valid-variable-names"]], "Letter Value (LV) Plot": [[135, "letter-value-lv-plot"]], "Let\u2019s break down the different components of the code.": [[62, "lets-break-down-the-different-components-of-the-code"]], "Let\u2019s discuss some plots that allow us to visualize the distribution of a dataset. These plots are:": [[128, "lets-discuss-some-plots-that-allow-us-to-visualize-the-distribution-of-a-dataset-these-plots-are"]], "Let\u2019s implement with dataset": [[128, "lets-implement-with-dataset"]], "Line Graph": [[97, "line-graph"]], "Linear Algebra": [[8, "linear-algebra"]], "Linspace": [[104, "linspace"]], "List Comprehension vs String vs For Loop in Python": [[32, "list-comprehension-vs-string-vs-for-loop-in-python"]], "List Comprehension: Elegant way to create new List": [[28, "list-comprehension-elegant-way-to-create-new-list"]], "List Comprehensions vs Lambda functions": [[32, "list-comprehensions-vs-lambda-functions"]], "List Directories and Files listdir() -": [[44, "list-directories-and-files-listdir"]], "List Index": [[28, "list-index"]], "List comprehension can be combined with if statement": [[32, "list-comprehension-can-be-combined-with-if-statement"]], "Literal Collections": [[66, "literal-collections"]], "Load Data from File": [[104, "load-data-from-file"]], "Load Fifa Data": [[97, "load-fifa-data"]], "Load Necessary Libraries": [[97, "load-necessary-libraries"]], "Load in NumPy Library": [[101, "load-in-numpy-library"]], "Loading Datasets in Seaborn": [[121, "loading-datasets-in-seaborn"]], "Loading data into Pandas": [[118, "loading-data-into-pandas"]], "Local Variables": [[50, "local-variables"]], "LogSpace": [[104, "logspace"]], "Loops in Python": [[22, "loops-in-python"], [23, "loops-in-python"]], "MACHINE CODE": [[73, "machine-code"]], "Making a New Directory mkdir() -": [[44, "making-a-new-directory-mkdir"]], "Making changes to the data": [[118, "making-changes-to-the-data"]], "Markdown + notebooks": [[7, "markdown-notebooks"], [82, "markdown-notebooks"], [86, "markdown-notebooks"]], "Markdown Files": [[2, "markdown-files"], [83, "markdown-files"], [87, "markdown-files"]], "Match object": [[14, "match-object"]], "Mathematics": [[100, "mathematics"]], "Mathematics for Machine Learning": [[5, "mathematics-for-machine-learning"]], "Matplotlib": [[97, "matplotlib"]], "Matplotlib vs. Seaborn Plotting Code": [[123, "matplotlib-vs-seaborn-plotting-code"]], "Matrix Multiplication": [[103, "matrix-multiplication"]], "MetaCharacters": [[14, "metacharacters"]], "Metadata info of DataFrame": [[107, "metadata-info-of-dataframe"]], "Method Overriding": [[78, "method-overriding"]], "Method Resolution Order in Python": [[78, "method-resolution-order-in-python"]], "Method to Modify Class Default Values": [[76, "method-to-modify-class-default-values"]], "Miscellaneous": [[104, "miscellaneous"]], "Modify Object Properties": [[77, "modify-object-properties"]], "Modifying a set in Python": [[31, "modifying-a-set-in-python"]], "More": [[100, "more"], [100, "id2"]], "Multi-line Docstrings in Python": [[59, "multi-line-docstrings-in-python"]], "Multi-line statement": [[64, "multi-line-statement"]], "Multithreading in Python": [[41, "multithreading-in-python"]], "MyST markdown": [[7, "myst-markdown"], [82, "myst-markdown"], [86, "myst-markdown"]], "Need of Encapsulation": [[76, "need-of-encapsulation"]], "Negative indexing": [[28, "negative-indexing"]], "Nested Loops in List Comprehension": [[32, "nested-loops-in-list-comprehension"]], "Nested break loops": [[24, "nested-break-loops"]], "Nested continue loops": [[24, "nested-continue-loops"]], "Nested for loops": [[22, "nested-for-loops"]], "Nested while loops": [[23, "nested-while-loops"]], "Nonlocal Variables": [[50, "nonlocal-variables"]], "Nonlocal variable in a nested function": [[11, "nonlocal-variable-in-a-nested-function"]], "Notebooks with MyST Markdown": [[0, "notebooks-with-myst-markdown"], [84, "notebooks-with-myst-markdown"], [142, "notebooks-with-myst-markdown"]], "NumPy Array Types:": [[101, "numpy-array-types"]], "NumPy Basics": [[100, "numpy-basics"], [100, "id1"]], "Number Data Type in Python": [[26, "number-data-type-in-python"]], "Numpy Array basics": [[101, "numpy-array-basics"]], "Numpy Documentation": [[104, "numpy-documentation"]], "Numpy also provides many functions to create arrays:": [[101, "numpy-also-provides-many-functions-to-create-arrays"]], "OBJECT CODE": [[73, "object-code"]], "Object": [[76, "object"]], "Object Default Methods": [[76, "object-default-methods"]], "Object Method": [[76, "object-method"]], "Object Oriented Programming": [[76, "object-oriented-programming"]], "Object Properties": [[77, "object-properties"]], "Old style formatting": [[27, "old-style-formatting"]], "One or more times +": [[14, "one-or-more-times"]], "Operations": [[100, "operations"]], "Other Dictionary Operations": [[30, "other-dictionary-operations"]], "Other Frozenset methods": [[31, "other-frozenset-methods"]], "Other List Operations in Python": [[28, "other-list-operations-in-python"]], "Other Python Set Methods": [[31, "other-python-set-methods"]], "Other Set Operations": [[31, "other-set-operations"]], "Other Tuple Operations": [[29, "other-tuple-operations"]], "Output String justification": [[69, "output-string-justification"]], "Output formatting": [[69, "output-formatting"]], "Output text alignment specifying a width": [[69, "output-text-alignment-specifying-a-width"]], "Overloading Comparison Operators": [[79, "overloading-comparison-operators"]], "Overloading the + Operator": [[79, "overloading-the-operator"]], "Overriding parent method": [[76, "overriding-parent-method"]], "Package manager and virtual environment": [[6, "package-manager-and-virtual-environment"]], "Packing": [[46, "packing"]], "Packing Dictionaries": [[46, "packing-dictionaries"]], "Packing Lists": [[46, "packing-lists"]], "Packing and Unpacking Arguments in Python": [[46, "packing-and-unpacking-arguments-in-python"]], "PairGrid": [[136, "pairgrid"]], "Pandas DataFrame head, tail, at, iat": [[110, "pandas-dataframe-head-tail-at-iat"]], "Parameters:": [[107, "parameters"]], "Part 1: with Iris dataset": [[136, "part-1-with-iris-dataset"]], "Part 1: with Tips dataset": [[136, "part-1-with-tips-dataset"]], "Part 1: with Titanic dataset": [[133, "part-1-with-titanic-dataset"]], "Part 2: with Tips dataset": [[133, "part-2-with-tips-dataset"]], "Passing Arguments with Key and Value": [[49, "passing-arguments-with-key-and-value"]], "Period .": [[14, "id3"]], "Pie Chart": [[97, "pie-chart"]], "Pie Chart #1": [[97, "pie-chart-1"]], "Pie Chart #2": [[97, "pie-chart-2"]], "Pie Chart #3": [[97, "pie-chart-3"]], "Placeholders": [[100, "placeholders"]], "Plot the distribution on the vertical axis:": [[128, "plot-the-distribution-on-the-vertical-axis"]], "Polymorphism": [[76, "polymorphism"]], "Positional Arguments (Basic)": [[52, "positional-arguments-basic"]], "Practice Problem": [[69, "practice-problem"]], "Prerequisites for learning decorators": [[12, "prerequisites-for-learning-decorators"]], "Print end command": [[62, "print-end-command"]], "Private members of parent class": [[78, "private-members-of-parent-class"]], "Programming Steps Comparision:": [[73, "programming-steps-comparision"]], "Python  Classes and Objects": [[77, "python-classes-and-objects"]], "Python **kwargs": [[15, "python-kwargs"]], "Python *args": [[15, "python-args"]], "Python *args and **kwargs": [[15, "python-args-and-kwargs"]], "Python - filter Function": [[12, "python-filter-function"]], "Python - map Function": [[12, "python-map-function"]], "Python @property decorator": [[13, "python-property-decorator"]], "Python Advanced Topics": [[4, "python-advanced-topics"], [16, "python-advanced-topics"]], "Python Anonymous/lambda Function": [[54, "python-anonymous-lambda-function"]], "Python Applications Area": [[6, "python-applications-area"]], "Python Arbitrary/Variable-length Arguments": [[52, "python-arbitrary-variable-length-arguments"]], "Python Built-In Modules Examples": [[55, "python-built-in-modules-examples"]], "Python Built-in Exceptions": [[45, "python-built-in-exceptions"]], "Python Built-in List Functions": [[28, "python-built-in-list-functions"]], "Python Built-in Tuple Functions": [[29, "python-built-in-tuple-functions"]], "Python Classes and Objects": [[77, "id1"]], "Python Closures": [[11, "python-closures"]], "Python Comments": [[59, "python-comments"]], "Python Comments Using Strings": [[59, "python-comments-using-strings"]], "Python Comments vs Docstrings": [[59, "python-comments-vs-docstrings"]], "Python Custom Exceptions": [[47, "python-custom-exceptions"]], "Python Data Types": [[4, "python-data-types"], [33, "python-data-types"], [67, "python-data-types"]], "Python DataFrame": [[107, "python-dataframe"]], "Python Date & Time Module": [[4, "python-date-time-module"], [42, "python-date-time-module"]], "Python Decimal": [[26, "python-decimal"]], "Python Decorators": [[12, "python-decorators"]], "Python Default Arguments": [[52, "python-default-arguments"]], "Python Dictionary": [[30, "python-dictionary"]], "Python Dictionary Comprehension": [[30, "python-dictionary-comprehension"]], "Python Dictionary Methods": [[30, "python-dictionary-methods"]], "Python Directory": [[44, "python-directory"]], "Python Directory and Files Management": [[44, "python-directory-and-files-management"]], "Python Docstrings": [[59, "python-docstrings"]], "Python Errors and Built-in Exceptions": [[45, "python-errors-and-built-in-exceptions"]], "Python Exceptions Handling Using try, except and finally statement": [[46, "python-exceptions-handling-using-try-except-and-finally-statement"]], "Python File I/O": [[43, "python-file-i-o"]], "Python File Methods": [[43, "python-file-methods"]], "Python Files": [[4, "python-files"], [48, "python-files"]], "Python Flow Control": [[4, "python-flow-control"], [25, "python-flow-control"]], "Python Flow-Control (Decision-Making) Statements": [[17, "python-flow-control-decision-making-statements"]], "Python Fractions": [[26, "python-fractions"]], "Python Frozenset": [[31, "python-frozenset"]], "Python Function Arguments": [[52, "python-function-arguments"]], "Python Functions": [[4, "python-functions"], [49, "python-functions"], [61, "python-functions"]], "Python Generator Expression": [[10, "python-generator-expression"]], "Python Generators with a Loop": [[10, "python-generators-with-a-loop"]], "Python Get Current time": [[38, "python-get-current-time"]], "Python Global, Local and Nonlocal variables": [[50, "python-global-local-and-nonlocal-variables"]], "Python Hello, World": [[62, "python-hello-world"]], "Python Infinite Iterators": [[9, "python-infinite-iterators"]], "Python Inheritance": [[78, "python-inheritance"]], "Python Input, Output and Import": [[69, "python-input-output-and-import"]], "Python Installation": [[6, "python-installation"]], "Python Introduction": [[4, "python-introduction"], [75, "python-introduction"]], "Python Iterators": [[9, "python-iterators"]], "Python Keyword Arguments": [[52, "python-keyword-arguments"]], "Python Keywords and Identifiers": [[63, "python-keywords-and-identifiers"]], "Python List": [[28, "python-list"]], "Python List Comprehension": [[32, "python-list-comprehension"]], "Python List Methods": [[28, "python-list-methods"]], "Python List Operations": [[28, "python-list-operations"]], "Python Literals": [[66, "python-literals"]], "Python Mathematical Functions": [[57, "python-mathematical-functions"]], "Python Mathematics": [[26, "python-mathematics"]], "Python Matplotlib": [[98, "python-matplotlib"], [99, "python-matplotlib"]], "Python Matplotlib Module": [[4, "python-matplotlib-module"]], "Python Module Search Path": [[55, "python-module-search-path"]], "Python Modules": [[55, "python-modules"]], "Python Modules List": [[55, "python-modules-list"]], "Python Multilevel Inheritance": [[78, "python-multilevel-inheritance"]], "Python Multiple Inheritance": [[78, "python-multiple-inheritance"]], "Python Namespace and Scope": [[71, "python-namespace-and-scope"]], "Python Nested if statement": [[21, "python-nested-if-statement"]], "Python NumPy": [[100, "python-numpy"]], "Python NumPy Array:": [[100, "python-numpy-array"], [101, "python-numpy-array"]], "Python NumPy Exercises": [[105, "python-numpy-exercises"]], "Python Numbers, Type Conversion and Mathematics": [[26, "python-numbers-type-conversion-and-mathematics"]], "Python Numpy Module": [[4, "python-numpy-module"], [106, "python-numpy-module"]], "Python OOPs Concepts": [[76, "python-oops-concepts"]], "Python Object Class": [[4, "python-object-class"], [80, "python-object-class"]], "Python Operator Overloading": [[79, "python-operator-overloading"], [79, "id1"]], "Python Operators": [[70, "python-operators"]], "Python Package": [[58, "python-package"]], "Python Pandas": [[107, "python-pandas"], [118, "python-pandas"], [119, "python-pandas"]], "Python Pandas Module": [[4, "python-pandas-module"], [120, "python-pandas-module"]], "Python Python Generators": [[10, "python-python-generators"]], "Python Random Module": [[56, "python-random-module"]], "Python Recursion": [[53, "python-recursion"]], "Python Recursive Function": [[53, "python-recursive-function"]], "Python RegEx": [[14, "python-regex"]], "Python RegEx Methods": [[14, "python-regex-methods"]], "Python Resources": [[4, "python-resources"]], "Python Seaborn": [[140, "python-seaborn"]], "Python Set Operations": [[31, "python-set-operations"]], "Python Sets": [[31, "python-sets"]], "Python Single Inheritance": [[78, "python-single-inheritance"]], "Python Special Functions": [[79, "python-special-functions"]], "Python Statement, Indentation and Comments": [[64, "python-statement-indentation-and-comments"]], "Python String Formatting": [[27, "python-string-formatting"]], "Python String Replication Operator (*)": [[27, "python-string-replication-operator"]], "Python Strings": [[6, "python-strings"], [27, "python-strings"]], "Python Strings Operations": [[27, "python-strings-operations"]], "Python Tuple": [[29, "python-tuple"]], "Python Type Conversion and Type Casting": [[68, "python-type-conversion-and-type-casting"]], "Python User-defined Functions": [[60, "python-user-defined-functions"]], "Python Variable Scope": [[71, "python-variable-scope"]], "Python Variables and Constants": [[65, "python-variables-and-constants"]], "Python __doc__ attribute": [[59, "python-doc-attribute"]], "Python datetime": [[34, "python-datetime"]], "Python docstrings": [[59, "id1"]], "Python for Loop": [[22, "python-for-loop"]], "Python format datetime": [[34, "python-format-datetime"]], "Python from-import statement": [[55, "python-from-import-statement"]], "Python global Keyword": [[51, "python-global-keyword"]], "Python if statement": [[18, "python-if-statement"]], "Python if-elif-else statement": [[20, "python-if-elif-else-statement"]], "Python if-else statement": [[19, "python-if-else-statement"]], "Python import statement": [[55, "python-import-statement"]], "Python lists": [[6, "python-lists"]], "Python sleep()": [[41, "python-sleep"]], "Python strftime()": [[35, "python-strftime"]], "Python strftime() - datetime object to string": [[34, "python-strftime-datetime-object-to-string"]], "Python strptime()": [[36, "python-strptime"]], "Python strptime() - string to datetime": [[34, "python-strptime-string-to-datetime"]], "Python super() function": [[78, "python-super-function"]], "Python time Module": [[40, "python-time-module"]], "Python time.asctime()": [[40, "python-time-asctime"]], "Python time.ctime()": [[40, "python-time-ctime"]], "Python time.gmtime()": [[40, "python-time-gmtime"]], "Python time.localtime()": [[40, "python-time-localtime"]], "Python time.mktime()": [[40, "python-time-mktime"]], "Python time.sleep()": [[40, "python-time-sleep"]], "Python time.strftime()": [[40, "python-time-strftime"]], "Python time.strptime()": [[40, "python-time-strptime"]], "Python time.time()": [[40, "python-time-time"]], "Python timestamp to datetime and vice-versa": [[39, "python-timestamp-to-datetime-and-vice-versa"]], "Python try with else clause": [[46, "python-try-with-else-clause"]], "Python try-finally Clause": [[46, "python-try-finally-clause"]], "Python while Loop": [[23, "python-while-loop"]], "Quantifier {}": [[14, "quantifier"]], "Quickly add YAML metadata for MyST Notebooks": [[0, "quickly-add-yaml-metadata-for-myst-notebooks"], [84, "quickly-add-yaml-metadata-for-myst-notebooks"], [142, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Quiz time": [[102, "quiz-time"]], "Raise error while renaming a column": [[114, "raise-error-while-renaming-a-column"]], "Raising Exceptions in Python": [[46, "raising-exceptions-in-python"]], "Raising an Exception": [[46, "raising-an-exception"]], "Random number": [[101, "random-number"]], "Raw String to ignore escape sequence": [[27, "raw-string-to-ignore-escape-sequence"]], "Reading Data in Pandas": [[118, "reading-data-in-pandas"]], "Real World Examples": [[97, "real-world-examples"]], "Real world use cases": [[145, "real-world-use-cases"]], "Reloading a module": [[55, "reloading-a-module"]], "Removing a Directory or a File remove() and rmdir() -": [[44, "removing-a-directory-or-a-file-remove-and-rmdir"]], "Removing elements from Dictionary": [[30, "removing-elements-from-dictionary"]], "Removing elements from a set": [[31, "removing-elements-from-a-set"]], "Rename a single column": [[114, "rename-a-single-column"]], "Rename all columns with a list": [[114, "rename-all-columns-with-a-list"]], "Rename column by adding prefix/suffix": [[114, "rename-column-by-adding-prefix-suffix"]], "Rename column by index position": [[114, "rename-column-by-index-position"]], "Rename column in multi-index DataFrame": [[114, "rename-column-in-multi-index-dataframe"]], "Rename column using DataFrame.set_axis()": [[114, "rename-column-using-dataframe-set-axis"]], "Rename column using a function": [[114, "rename-column-using-a-function"]], "Rename columns by removing leading and trailing spaces": [[114, "rename-columns-by-removing-leading-and-trailing-spaces"]], "Rename columns in Pandas DataFrame": [[114, "rename-columns-in-pandas-dataframe"]], "Rename columns in all levels": [[114, "rename-columns-in-all-levels"]], "Rename columns in defined level": [[114, "rename-columns-in-defined-level"]], "Rename columns in place": [[114, "rename-columns-in-place"]], "Rename multiple columns": [[114, "rename-multiple-columns"]], "Renaming a Directory or a File rename() -": [[44, "renaming-a-directory-or-a-file-rename"]], "Reset index and change column name": [[117, "reset-index-and-change-column-name"]], "Reset index and creates new column in level": [[117, "reset-index-and-creates-new-column-in-level"]], "Reset index and name other level": [[117, "reset-index-and-name-other-level"]], "Reset index by level": [[117, "reset-index-by-level"]], "Reset index in pandas DataFrame": [[117, "reset-index-in-pandas-dataframe"]], "Reset index in place": [[117, "reset-index-in-place"]], "Reset index starts from 1": [[117, "reset-index-starts-from-1"]], "Reset index to starts at 0": [[117, "reset-index-to-starts-at-0"]], "Reset index to the range of numbers": [[117, "reset-index-to-the-range-of-numbers"]], "Reset index without new column": [[117, "reset-index-without-new-column"]], "Reset multi-level index": [[117, "reset-multi-level-index"]], "Reshape Data": [[104, "reshape-data"]], "Residplot()": [[127, "residplot"]], "Resources": [[99, "resources"], [106, "resources"], [120, "resources"], [140, "resources"]], "Return Boolean Values": [[49, "return-boolean-values"]], "Return Multiple Values": [[49, "return-multiple-values"]], "Return Single Value": [[49, "return-single-value"]], "Return a List": [[49, "return-a-list"]], "Reverse for loop": [[22, "reverse-for-loop"]], "Reverse for loop using range()": [[22, "reverse-for-loop-using-range"]], "Reverse while loop": [[23, "reverse-while-loop"]], "Rules and Naming Convention for Variables and constants": [[65, "rules-and-naming-convention-for-variables-and-constants"]], "Rules for writing identifiers": [[63, "rules-for-writing-identifiers"]], "Rules of global Keyword": [[51, "rules-of-global-keyword"]], "Running the \u201cHello, World!\u201d Program": [[62, "running-the-hello-world-program"]], "Sample Roles and Directives": [[83, "sample-roles-and-directives"], [87, "sample-roles-and-directives"]], "Saving as JSON File": [[43, "saving-as-json-file"]], "Saving our Data (Exporting into Desired Format)": [[118, "saving-our-data-exporting-into-desired-format"]], "Scatter Plot and Joint Plot": [[126, "scatter-plot-and-joint-plot"]], "Seaborn Color Palettes": [[124, "seaborn-color-palettes"]], "Seaborn Lmplots:": [[125, "seaborn-lmplots"]], "Seaborn Regplots:": [[125, "seaborn-regplots"]], "Seaborn: Box Plot": [[131, "seaborn-box-plot"]], "Seaborn: Categorical Data Plots": [[129, "seaborn-categorical-data-plots"]], "Seaborn: Strip Plot": [[130, "seaborn-strip-plot"]], "Seaborn: Violin Plot": [[132, "seaborn-violin-plot"]], "Select bottom n rows in pandas DataFrame": [[110, "select-bottom-n-rows-in-pandas-dataframe"]], "Select bottom rows except for first n rows": [[110, "select-bottom-rows-except-for-first-n-rows"]], "Select bottom rows from the multi index DataFrame": [[110, "select-bottom-rows-from-the-multi-index-dataframe"]], "Select top n rows in pandas DataFrame": [[110, "select-top-n-rows-in-pandas-dataframe"]], "Select top rows except for last n rows": [[110, "select-top-rows-except-for-last-n-rows"]], "Select top rows from multi-index DataFrames": [[110, "select-top-rows-from-multi-index-dataframes"]], "Select value using row and column labels using DataFrame.at": [[110, "select-value-using-row-and-column-labels-using-dataframe-at"]], "Select value using row and column position using DataFrame.iat": [[110, "select-value-using-row-and-column-position-using-dataframe-iat"]], "Selection": [[107, "selection"]], "Self Can Be Avoided": [[81, "self-can-be-avoided"]], "Self Is Here To Stay": [[81, "self-is-here-to-stay"]], "Series": [[107, "series"]], "Set Difference": [[31, "set-difference"]], "Set Intersection": [[31, "set-intersection"]], "Set Symmetric Difference": [[31, "set-symmetric-difference"]], "Set Union": [[31, "set-union"]], "Set index but keep column": [[116, "set-index-but-keep-column"]], "Set index by column number": [[116, "set-index-by-column-number"]], "Set index by keeping old index": [[116, "set-index-by-keeping-old-index"]], "Set index in pandas DataFrame": [[116, "set-index-in-pandas-dataframe"]], "Set index in place": [[116, "set-index-in-place"]], "Set index using a Python range": [[116, "set-index-using-a-python-range"]], "Set index using a column": [[116, "set-index-using-a-column"]], "Set index using a column with duplicates": [[116, "set-index-using-a-column-with-duplicates"]], "Set index using a list": [[116, "set-index-using-a-list"]], "Set index using multiple columns": [[116, "set-index-using-multiple-columns"]], "Set multi-index using a list and column": [[116, "set-multi-index-using-a-list-and-column"]], "Set multi-index using two Python series": [[116, "set-multi-index-using-two-python-series"]], "Set specific value in pandas DataFrame": [[110, "set-specific-value-in-pandas-dataframe"], [110, "id1"]], "Shortcut for if statement (Short-hand if or one-line if)": [[18, "shortcut-for-if-statement-short-hand-if-or-one-line-if"]], "Shortcut of if else (Short Hand if \u2026 else or One line if else)": [[19, "shortcut-of-if-else-short-hand-if-else-or-one-line-if-else"]], "Single Parameter:": [[49, "single-parameter"]], "Single-line docstrings in Python": [[59, "single-line-docstrings-in-python"]], "Slicing and Subsetting": [[100, "slicing-and-subsetting"]], "Sorting/Describing Data": [[118, "sorting-describing-data"]], "Special Sequences": [[14, "special-sequences"]], "Special literals": [[66, "special-literals"]], "Specify Pattern Using RegEx": [[14, "specify-pattern-using-regex"]], "Specifying a sign while displaying output numbers": [[69, "specifying-a-sign-while-displaying-output-numbers"]], "Spreading in Python": [[46, "spreading-in-python"]], "Square Brackets []": [[14, "id2"]], "Statistics": [[104, "statistics"], [107, "statistics"]], "String Concatenation Operator (+)": [[27, "string-concatenation-operator"]], "Summary": [[27, "summary"], [28, "summary"], [29, "summary"], [30, "summary"], [31, "summary"], [107, "summary"]], "Summary - MetaCharacters": [[14, "summary-metacharacters"]], "Summary:": [[102, "summary"], [107, "id1"]], "Swarm Plot": [[129, "swarm-plot"], [130, "swarm-plot"]], "Syntax :": [[19, "syntax"], [22, "syntax"]], "Syntax of List Comprehension": [[32, "syntax-of-list-comprehension"]], "Syntax:": [[18, "syntax"], [20, "syntax"], [21, "syntax"], [23, "syntax"]], "Table of Contents": [[91, "table-of-contents"]], "Target Audience \ud83e\uddd0": [[145, "target-audience"]], "The @property Decorator": [[13, "the-property-decorator"]], "The DataFrame.drop() function": [[111, "the-dataframe-drop-function"]], "The DataFrame.drop_duplicates() function": [[112, "the-dataframe-drop-duplicates-function"]], "The DataFrame.dropna() function": [[113, "the-dataframe-dropna-function"]], "The DataFrame.rename() function": [[114, "the-dataframe-rename-function"]], "The DataFrame.reset_index() function": [[117, "the-dataframe-reset-index-function"]], "The DataFrame.set_index() function": [[116, "the-dataframe-set-index-function"]], "The DataFrame.to_dict() function": [[115, "the-dataframe-to-dict-function"]], "The Difference\u2026": [[18, "the-difference"]], "The difference\u2026": [[19, "the-difference"]], "The dir() built-in function": [[55, "the-dir-built-in-function"]], "The except Clause with Multiple Exceptions": [[46, "the-except-clause-with-multiple-exceptions"]], "The except Clause with No Exceptions": [[46, "the-except-clause-with-no-exceptions"]], "The file Object Attributes": [[43, "the-file-object-attributes"]], "The format() Method for Formatting Strings": [[27, "the-format-method-for-formatting-strings"]], "The from_dict() function": [[108, "the-from-dict-function"]], "The property Class": [[13, "the-property-class"]], "Things to Remember": [[63, "things-to-remember"]], "Things to Remember:": [[15, "things-to-remember"]], "Time Series & LV Plot": [[135, "time-series-lv-plot"]], "Time-Series Plot": [[135, "time-series-plot"]], "To customize the display of DataFrame while printing": [[107, "to-customize-the-display-of-dataframe-while-printing"]], "Toolbox": [[145, "toolbox"]], "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80": [[90, "tools-to-get-a-launch"]], "Topics on Learning Data Science and Machine Learning": [[144, "topics-on-learning-data-science-and-machine-learning"]], "Transfer statements": [[17, "transfer-statements"]], "Tuple Methods": [[29, "tuple-methods"]], "Tuple Operations": [[29, "tuple-operations"]], "Two Parameter:": [[49, "two-parameter"]], "Type Conversion": [[26, "type-conversion"]], "Type Conversion of Numbers in Python": [[66, "type-conversion-of-numbers-in-python"]], "Types Of Inheritance": [[78, "types-of-inheritance"]], "Types of Constructors": [[77, "types-of-constructors"]], "Types of Functions": [[49, "types-of-functions"]], "Universal  Array Functions (Mathematical operations)": [[103, "universal-array-functions-mathematical-operations"]], "Unpacking": [[46, "unpacking"]], "Unpacking Dictionaries": [[46, "unpacking-dictionaries"]], "Unpacking List or a Tuple": [[46, "unpacking-list-or-a-tuple"]], "Unpacking Lists": [[46, "unpacking-lists"]], "Unpacking a sequence into separate variables": [[72, "unpacking-a-sequence-into-separate-variables"]], "Use __new__ or __init__?": [[81, "use-new-or-init"]], "Use lambda expressions to rename": [[114, "use-lambda-expressions-to-rename"]], "Use of Python Generators": [[10, "use-of-python-generators"]], "Use of global Keyword": [[51, "use-of-global-keyword"]], "Use of inheritance": [[76, "use-of-inheritance"]], "Use of lambda Function in python": [[54, "use-of-lambda-function-in-python"]], "Using Control Statement in for loops in Python": [[22, "using-control-statement-in-for-loops-in-python"]], "Using Control Statement in while loops in Python": [[23, "using-control-statement-in-while-loops-in-python"]], "Using Getters and Setters": [[13, "using-getters-and-setters"]], "Using Langchain": [[91, "using-langchain"]], "Using Python inside Jupyter notebook": [[6, "using-python-inside-jupyter-notebook"]], "Using a code editor of your choice": [[6, "using-a-code-editor-of-your-choice"]], "Using drop with axis='columns' or axis=1": [[111, "using-drop-with-axis-columns-or-axis-1"]], "Using python in a jupyter notebook": [[6, "using-python-in-a-jupyter-notebook"]], "Using r prefix before RegEx": [[14, "using-r-prefix-before-regex"]], "Using rename with axis='columns' or axis=1": [[114, "using-rename-with-axis-columns-or-axis-1"]], "Using the help() Function for Docstrings": [[59, "using-the-help-function-for-docstrings"]], "Utilizing Langchain Features": [[91, "utilizing-langchain-features"]], "ValueError in strptime()": [[36, "valueerror-in-strptime"]], "Variable Function Arguments": [[52, "variable-function-arguments"]], "Viewing/Inspecting Data": [[107, "viewing-inspecting-data"]], "Welcome to my technical diary \ud83e\udd2f": [[145, "welcome-to-my-technical-diary"]], "What Happens Internally?": [[81, "what-happens-internally"]], "What are lambda functions in Python?": [[54, "what-are-lambda-functions-in-python"]], "What are modules in Python?": [[55, "what-are-modules-in-python"]], "What are packages?": [[58, "what-are-packages"]], "What are user-defined functions in Python?": [[60, "what-are-user-defined-functions-in-python"]], "What is Compiler?": [[73, "what-is-compiler"]], "What is DataFrame in Pandas": [[107, "what-is-dataframe-in-pandas"]], "What is Dictionary in Python?": [[30, "what-is-dictionary-in-python"]], "What is Distribution Plots?": [[128, "what-is-distribution-plots"]], "What is Interpreter?": [[73, "what-is-interpreter"]], "What is List in Python?": [[28, "what-is-list-in-python"]], "What is MyST?": [[2, "what-is-myst"], [83, "what-is-myst"], [87, "what-is-myst"]], "What is Name in Python?": [[71, "what-is-name-in-python"]], "What is Set in Python?": [[31, "what-is-set-in-python"]], "What is String in Python?": [[27, "what-is-string-in-python"]], "What is Tuple in Python?": [[29, "what-is-tuple-in-python"]], "What is a Namespace in Python?": [[71, "what-is-a-namespace-in-python"]], "What is a function in Python?": [[49, "what-is-a-function-in-python"]], "What is cluster map?": [[139, "what-is-cluster-map"]], "What is for loop in Python?": [[22, "what-is-for-loop-in-python"]], "What is global keyword?": [[51, "what-is-global-keyword"]], "What is heat map?": [[138, "what-is-heat-map"]], "What is hstack?": [[104, "what-is-hstack"]], "What is math module in Python?": [[57, "what-is-math-module-in-python"]], "What is recursion?": [[53, "what-is-recursion"]], "What is self in Python?": [[81, "what-is-self-in-python"]], "What is vstack?": [[104, "what-is-vstack"]], "What is while loop in Python?": [[23, "what-is-while-loop-in-python"]], "What\u2019s inside datetime?": [[34, "whats-inside-datetime"]], "When do we have closures?": [[11, "when-do-we-have-closures"]], "When to use Decimal instead of float?": [[26, "when-to-use-decimal-instead-of-float"]], "When to use closures?": [[11, "when-to-use-closures"]], "While loop in Python FAQs": [[23, "while-loop-in-python-faqs"]], "Why Learn Python?": [[4, "why-learn-python"]], "Why and When to use while loop in Python": [[23, "why-and-when-to-use-while-loop-in-python"]], "Why is self explicitly defined everytime?": [[81, "why-is-self-explicitly-defined-everytime"]], "Why should we use Tuple? (Advantages of Tuple)": [[29, "why-should-we-use-tuple-advantages-of-tuple"]], "Why super() keyword": [[78, "why-super-keyword"]], "Why use NumPy?": [[100, "why-use-numpy"]], "Why use for loop?": [[22, "why-use-for-loop"]], "Wide format (untidy)": [[138, "wide-format-untidy"]], "Working of for loop for Iterators": [[9, "working-of-for-loop-for-iterators"]], "Working with large amounts of data": [[118, "working-with-large-amounts-of-data"]], "Wrap up": [[55, "wrap-up"]], "Writing the \u201cHello, World!\u201d Program": [[46, "writing-the-hello-world-program"], [62, "writing-the-hello-world-program"]], "Zero or more times *": [[14, "zero-or-more-times"]], "Zero or one time ?": [[14, "zero-or-one-time"]], "Zip": [[46, "zip"]], "[] . ^ $ * + ? {} () \\ |": [[14, "id1"]], "\\A - Matches if the specified characters are at the start of a string.": [[14, "a-matches-if-the-specified-characters-are-at-the-start-of-a-string"]], "\\B - Opposite of \\b. Matches if the specified characters are not at the beginning or end of a word.": [[14, "b-opposite-of-b-matches-if-the-specified-characters-are-not-at-the-beginning-or-end-of-a-word"]], "\\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \\t\\n\\r\\f\\v].": [[14, "s-matches-where-a-string-contains-any-non-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\W - Matches any non-alphanumeric character. Equivalent to [^a-zA-Z0-9_].": [[14, "w-matches-any-non-alphanumeric-character-equivalent-to-a-za-z0-9"]], "\\Z - Matches if the specified characters are at the end of a string.": [[14, "z-matches-if-the-specified-characters-are-at-the-end-of-a-string"]], "\\b - Matches if the specified characters are at the beginning or end of a word.": [[14, "b-matches-if-the-specified-characters-are-at-the-beginning-or-end-of-a-word"]], "\\d - Matches any non-decimal digit. Equivalent to [^0-9]": [[14, "d-matches-any-non-decimal-digit-equivalent-to-0-9"]], "\\s - Matches where a string contains any whitespace character. Equivalent to [ \\t\\n\\r\\f\\v].": [[14, "s-matches-where-a-string-contains-any-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.": [[14, "w-matches-any-alphanumeric-character-digits-and-alphabets-equivalent-to-a-za-z0-9-by-the-way-underscore-is-also-considered-an-alphanumeric-character"]], "__init__() is not a constructor": [[81, "init-is-not-a-constructor"]], "a) break in for loop": [[22, "a-break-in-for-loop"]], "a) break in while loop": [[23, "a-break-in-while-loop"]], "all(dict) - The all() function returns True when all elements in the given iterable are true. If not, it returns False.": [[30, "all-dict-the-all-function-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "all(list) - The method all() method returns True when all elements in the given iterable are true. If not, it returns False.": [[28, "all-list-the-method-all-method-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "any(dict) - The any() function returns True if any element of an iterable is True. If not, any() returns False.": [[30, "any-dict-the-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "any(list) - any() function returns True if any element of an iterable is True. If not, any() returns False.": [[28, "any-list-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "append() - The append() method adds an item to the end of the list.": [[28, "append-the-append-method-adds-an-item-to-the-end-of-the-list"]], "arange()": [[104, "arange"]], "asarray()": [[104, "asarray"]], "b) continue in for loop": [[22, "b-continue-in-for-loop"]], "b) continue in while loop": [[23, "b-continue-in-while-loop"]], "boxplot() and violinplot()": [[133, "boxplot-and-violinplot"]], "c) pass in for loop": [[22, "c-pass-in-for-loop"]], "c) pass in while loop": [[23, "c-pass-in-while-loop"]], "clear() - The clear() method removes all items from the list.": [[28, "clear-the-clear-method-removes-all-items-from-the-list"]], "clear() - The method clear() removes all items from the dictionary.": [[30, "clear-the-method-clear-removes-all-items-from-the-dictionary"]], "continue statement in while loop": [[24, "continue-statement-in-while-loop"]], "continue statement with else statements": [[24, "continue-statement-with-else-statements"]], "copy()  - The copy() method returns a shallow copy of the list.": [[28, "copy-the-copy-method-returns-a-shallow-copy-of-the-list"]], "copy() - The method copy() returns a shallow copy of the dictionary.": [[30, "copy-the-method-copy-returns-a-shallow-copy-of-the-dictionary"]], "count() - The count() method returns the number of times the specified element appears in the list.": [[28, "count-the-count-method-returns-the-number-of-times-the-specified-element-appears-in-the-list"]], "datetime.date Class": [[34, "datetime-date-class"]], "datetime.datetime": [[34, "datetime-datetime"]], "datetime.time": [[34, "datetime-time"]], "datetime.timedelta": [[34, "datetime-timedelta"]], "extend() - The extend() method adds all the elements of an iterable (list, tuple, string etc.) to the end of the list.": [[28, "extend-the-extend-method-adds-all-the-elements-of-an-iterable-list-tuple-string-etc-to-the-end-of-the-list"]], "for  loop in one line": [[22, "for-loop-in-one-line"]], "for loop inside for loop": [[22, "for-loop-inside-for-loop"]], "for loop inside while loop": [[23, "for-loop-inside-while-loop"]], "for loop with else": [[22, "for-loop-with-else"]], "for loop with if-else": [[22, "for-loop-with-if-else"]], "for loop with range() function": [[22, "for-loop-with-range-function"]], "fromkeys() - The method fromkeys() creates a new dictionary with keys from seq and values set to value.": [[30, "fromkeys-the-method-fromkeys-creates-a-new-dictionary-with-keys-from-seq-and-values-set-to-value"]], "heatmap": [[138, "heatmap"]], "heatmap colors": [[138, "heatmap-colors"]], "heatmap data": [[138, "heatmap-data"]], "if-elif-else statements and Logical Operator": [[20, "if-elif-else-statements-and-logical-operator"]], "if-elif-else statements or Logical Operator": [[20, "if-elif-else-statements-or-logical-operator"]], "if-elif-else statements with logical operators": [[20, "if-elif-else-statements-with-logical-operators"]], "import all names": [[55, "import-all-names"]], "import multiple modules": [[55, "import-multiple-modules"]], "import with renaming": [[55, "import-with-renaming"]], "index() - The index() method returns the index of the specified element in the list.": [[28, "index-the-index-method-returns-the-index-of-the-specified-element-in-the-list"]], "insert() - The insert() method inserts an element to the list at the specified index.": [[28, "insert-the-insert-method-inserts-an-element-to-the-list-at-the-specified-index"]], "issubclass()": [[78, "issubclass"]], "itmes() - The method items() returns a list of dict\u2019s (key, value) tuple pairs.": [[30, "itmes-the-method-items-returns-a-list-of-dicts-key-value-tuple-pairs"]], "keys() - The method keys() returns a list of all the available keys in the dictionary.": [[30, "keys-the-method-keys-returns-a-list-of-all-the-available-keys-in-the-dictionary"]], "lambda function use with filter()": [[54, "lambda-function-use-with-filter"]], "lambda function with map()": [[54, "lambda-function-with-map"]], "lambda function with reduce()": [[54, "lambda-function-with-reduce"]], "len(dict) - The len() function gives the total length of the dictionary. This would be equal to the number of items in the dictionary.": [[30, "len-dict-the-len-function-gives-the-total-length-of-the-dictionary-this-would-be-equal-to-the-number-of-items-in-the-dictionary"]], "len(list) - The len() method returns the number of elements in the list.": [[28, "len-list-the-len-method-returns-the-number-of-elements-in-the-list"]], "len(tuple) - The len() method returns the number of elements in the tuple.": [[29, "len-tuple-the-len-method-returns-the-number-of-elements-in-the-tuple"]], "math module Functions:": [[55, "math-module-functions"]], "max(list) - The max() method returns the elements from the list with maximum value.": [[28, "max-list-the-max-method-returns-the-elements-from-the-list-with-maximum-value"]], "max(tuple) - The max() method returns the elements from the tuple with maximum value. Type of element should be same otherwise complier throw TypeError.": [[29, "max-tuple-the-max-method-returns-the-elements-from-the-tuple-with-maximum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "max, min, argmax, argmin": [[101, "max-min-argmax-argmin"]], "min(list) - this method is used to get min value from the list. In Python3 lists element\u2019s type should be same otherwise compiler throw type Error.": [[28, "min-list-this-method-is-used-to-get-min-value-from-the-list-in-python3-lists-elements-type-should-be-same-otherwise-compiler-throw-type-error"]], "min(tuple) - The min() method returns the elements from the tuple with minimum value. Type of element should be same otherwise complier throw TypeError.": [[29, "min-tuple-the-min-method-returns-the-elements-from-the-tuple-with-minimum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "pop() - The pop() method removes the item at the given index from the list and returns the removed item.": [[28, "pop-the-pop-method-removes-the-item-at-the-given-index-from-the-list-and-returns-the-removed-item"]], "rand": [[101, "rand"]], "randint": [[101, "randint"]], "randn": [[101, "randn"]], "remove() - The remove() method removes the first matching element (which is passed as an argument) from the list.": [[28, "remove-the-remove-method-removes-the-first-matching-element-which-is-passed-as-an-argument-from-the-list"]], "reverse()  - The reverse() method reverses the elements of the list.": [[28, "reverse-the-reverse-method-reverses-the-elements-of-the-list"]], "self in Python, Demystified": [[81, "self-in-python-demystified"]], "setdefault() - The method setdefault() is similar to get but will set dict[key] = default if key is not already in dict.": [[30, "setdefault-the-method-setdefault-is-similar-to-get-but-will-set-dict-key-default-if-key-is-not-already-in-dict"]], "sort()  - The sort() method sorts the elements of a given list in a specific ascending or descending order.": [[28, "sort-the-sort-method-sorts-the-elements-of-a-given-list-in-a-specific-ascending-or-descending-order"]], "sorted(dict) - The sorted() function sorts the elements of a given iterable in a specific order (either ascending or descending) and returns the sorted iterable as a list.": [[28, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [29, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [30, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"]], "str(dict) - The str() function produces a printable string representation of a dictionary.": [[30, "str-dict-the-str-function-produces-a-printable-string-representation-of-a-dictionary"]], "time.sleep() in multithreaded programs": [[41, "time-sleep-in-multithreaded-programs"]], "time.struct_time Class": [[40, "time-struct-time-class"]], "tuple(seq) - The tuple() method converts a list of items into tuples.": [[29, "tuple-seq-the-tuple-method-converts-a-list-of-items-into-tuples"]], "type() - The type() function returns the type of the passed variable. If passed variable is dictionary then it would return a dictionary type.": [[30, "type-the-type-function-returns-the-type-of-the-passed-variable-if-passed-variable-is-dictionary-then-it-would-return-a-dictionary-type"]], "update() - The method update() adds dictionary dict2\u2019s key-values pairs in to dict. This function does not return anything.": [[30, "update-the-method-update-adds-dictionary-dict2s-key-values-pairs-in-to-dict-this-function-does-not-return-anything"]], "value() - The method values() returns a list of all the values available in a given dictionary.": [[30, "value-the-method-values-returns-a-list-of-all-the-values-available-in-a-given-dictionary"]], "while loop inside for loop": [[22, "while-loop-inside-for-loop"]], "while loop inside while loop": [[23, "while-loop-inside-while-loop"]], "while loop with else": [[23, "while-loop-with-else"]], "while loop with if-else": [[23, "while-loop-with-if-else"]], "you output should look like this:": [[76, "you-output-should-look-like-this"]], "\ud83d\udcbb Exercises  \u279e <span class='label label-default'>List</span>": [[19, "exercises-list"], [28, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Date and Time</span>": [[39, "exercises-date-and-time"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Dictionary</span>": [[30, "exercises-dictionary"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Exceptions Handling</span>": [[46, "exercises-exceptions-handling"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Files</span>": [[43, "exercises-files"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Functions</span>": [[49, "exercises-functions"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Higher order functions, Closure and Decorators</span>": [[12, "exercises-higher-order-functions-closure-and-decorators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List Comprehension</span>": [[32, "exercises-list-comprehension"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List</span>": [[20, "exercises-list"], [22, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Module</span>": [[55, "exercises-module"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Objects and Classes</span>": [[76, "exercises-objects-and-classes"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Operators</span>": [[70, "exercises-operators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Python Errors</span>": [[45, "exercises-python-errors"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>RegEx</span>": [[14, "exercises-regex"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Sets</span>": [[31, "exercises-sets"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>String</span>": [[27, "exercises-string"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Tuple</span>": [[29, "exercises-tuple"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Variables</span>": [[65, "exercises-variables"]]}, "docnames": ["content/concepts/markdown-notebooks", "content/concepts/mymarkdown", "content/core/markdown", "content/core/mymarkdown", "content/essentials/000_Intro_to_Python", "content/essentials/intro_mathematics", "content/essentials/intro_python", "content/essentials/intro_statistics", "content/essentials/mathematics/1_linear_algebra", "content/essentials/python/advanced/001_Python_Iterators", "content/essentials/python/advanced/002_Python_Generators", "content/essentials/python/advanced/003_Python_Closure", "content/essentials/python/advanced/004_Python_Decorators", "content/essentials/python/advanced/005_Python_Property", "content/essentials/python/advanced/006_Python_RegEx", "content/essentials/python/advanced/Python_args_and_kwargs", "content/essentials/python/advanced/advanced_toc", "content/essentials/python/controlflow/000_Python_Flow_Control_statement", "content/essentials/python/controlflow/001_Python_if_statement", "content/essentials/python/controlflow/002_Python_if_else_statement", "content/essentials/python/controlflow/003_Python_if_elif_else_statement", "content/essentials/python/controlflow/004_Python_Nested_if_statement", "content/essentials/python/controlflow/005_Python_for_Loop", "content/essentials/python/controlflow/006_Python_while_Loop", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements", "content/essentials/python/controlflow/controlflow_toc", "content/essentials/python/datatypes/001_Python_Numbers", "content/essentials/python/datatypes/002_Python_String", "content/essentials/python/datatypes/003_Python_List", "content/essentials/python/datatypes/004_Python_Tuple", "content/essentials/python/datatypes/005_Python_Dictionary", "content/essentials/python/datatypes/006_Python_Sets", "content/essentials/python/datatypes/Python_List_Comprehension", "content/essentials/python/datatypes/datatypes_toc", "content/essentials/python/datetime/001_Python_datetime_Module", "content/essentials/python/datetime/002_Python_strftime", "content/essentials/python/datetime/003_Python_strptime", "content/essentials/python/datetime/004_Python_current_date_and_time", "content/essentials/python/datetime/005_Python_get_current_time", "content/essentials/python/datetime/006_Python_timestamp_to_datetime", "content/essentials/python/datetime/007_Python_time_Module", "content/essentials/python/datetime/008_Python_sleep", "content/essentials/python/datetime/datetime_toc", "content/essentials/python/files/001_Python_File_Input_Output", "content/essentials/python/files/002_Python_File_Directory", "content/essentials/python/files/003_Python_File_Exception", "content/essentials/python/files/004_Python_Exceptions_Handling", "content/essentials/python/files/005_Python_User_defined_Exceptions", "content/essentials/python/files/files_toc", "content/essentials/python/functions/001_Python_Functions", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal", "content/essentials/python/functions/003_Python_Function_global_Keywords", "content/essentials/python/functions/004_Python_Function_Arguments", "content/essentials/python/functions/005_Python_Function_Recursion", "content/essentials/python/functions/006_Python_Function_Anonymous", "content/essentials/python/functions/007_Python_Function_Module", "content/essentials/python/functions/008_Python_Function_random_Module", "content/essentials/python/functions/009_Python_Function_math_Module", "content/essentials/python/functions/010_Python_Function_Package", "content/essentials/python/functions/Python_Docstrings", "content/essentials/python/functions/Python_User_defined_Functions", "content/essentials/python/functions/functions_toc", "content/essentials/python/introduction/002_Hello_World", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments", "content/essentials/python/introduction/005_Python_Variables_&_Constants", "content/essentials/python/introduction/006_Python_Literals", "content/essentials/python/introduction/007_Python_Data_Types", "content/essentials/python/introduction/008_Python_Type_Conversion", "content/essentials/python/introduction/009_Python_Input_Output_Import", "content/essentials/python/introduction/010_Python_Operators", "content/essentials/python/introduction/011_Python_Namespace_and_Scope", "content/essentials/python/introduction/1_data_structures_and_agorithms", "content/essentials/python/introduction/Interpreter_Vs_Compiler", "content/essentials/python/introduction/constant", "content/essentials/python/introduction/intro_toc", "content/essentials/python/objects/001_Python_OOPs_Concepts", "content/essentials/python/objects/002_Python_Classes_and_Objects", "content/essentials/python/objects/003_Python_Inheritance", "content/essentials/python/objects/004_Python_Operator_Overloading", "content/essentials/python/objects/objects_toc", "content/essentials/python/objects/self_in_Python_Demystified", "content/essentials/statistics/statistics", "content/markdown", "content/markdown-notebooks", "content/mymarkdown", "content/notebooks", "content/real-world/markdown", "content/real-world/mymarkdown", "content/tools/hf/intro", "content/tools/intro_tools", "content/tools/langchain/intro", "content/tools/langchain/langchain-modules", "content/tools/langchain/langgraph", "content/tools/langchain/langserve", "content/tools/langchain/langsmith", "content/tools/langchain/lcel", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2", "content/tools/matplotlib/matplotlib_toc", "content/tools/numpy/001_Python_NumPy", "content/tools/numpy/002_Python_NumPy_Array_Part1", "content/tools/numpy/003_Python_NumPy_Array_Part2", "content/tools/numpy/004_Python_NumPy_Array_Part3", "content/tools/numpy/005_Python_NumPy_Array_Part4", "content/tools/numpy/Python_Numpy_Exercises_with_hints", "content/tools/numpy/numpy_toc", "content/tools/pandas/001_Python_Pandas_DataFrame", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index", "content/tools/pandas/002_Python_Pandas_Exercise_1", "content/tools/pandas/003_Python_Pandas_Exercise_2", "content/tools/pandas/pandas_toc", "content/tools/seaborn/001_Seaborn_Loading_Dataset", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics", "content/tools/seaborn/003_Matplotlib_vs_Seaborn", "content/tools/seaborn/004_Seaborn_Color_Palettes", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots", "content/tools/seaborn/008_Seaborn_Distribution_Plots", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot", "content/tools/seaborn/016_Seaborn_PairGrid_Plot", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot", "content/tools/seaborn/018_Seaborn_Heat_Map", "content/tools/seaborn/019_Seaborn_Cluster_Map", "content/tools/seaborn/seaborn_toc", "content/tools/tools-for-llms", "content/tools/tools-for-ml", "content/tools/tools-for-nn", "curriculum", "intro"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["content/concepts/markdown-notebooks.md", "content/concepts/mymarkdown.md", "content/core/markdown.md", "content/core/mymarkdown.md", "content/essentials/000_Intro_to_Python.ipynb", "content/essentials/intro_mathematics.ipynb", "content/essentials/intro_python.ipynb", "content/essentials/intro_statistics.ipynb", "content/essentials/mathematics/1_linear_algebra.ipynb", "content/essentials/python/advanced/001_Python_Iterators.ipynb", "content/essentials/python/advanced/002_Python_Generators.ipynb", "content/essentials/python/advanced/003_Python_Closure.ipynb", "content/essentials/python/advanced/004_Python_Decorators.ipynb", "content/essentials/python/advanced/005_Python_Property.ipynb", "content/essentials/python/advanced/006_Python_RegEx.ipynb", "content/essentials/python/advanced/Python_args_and_kwargs.ipynb", "content/essentials/python/advanced/advanced_toc.md", "content/essentials/python/controlflow/000_Python_Flow_Control_statement.ipynb", "content/essentials/python/controlflow/001_Python_if_statement.ipynb", "content/essentials/python/controlflow/002_Python_if_else_statement.ipynb", "content/essentials/python/controlflow/003_Python_if_elif_else_statement.ipynb", "content/essentials/python/controlflow/004_Python_Nested_if_statement.ipynb", "content/essentials/python/controlflow/005_Python_for_Loop.ipynb", "content/essentials/python/controlflow/006_Python_while_Loop.ipynb", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements.ipynb", "content/essentials/python/controlflow/controlflow_toc.md", "content/essentials/python/datatypes/001_Python_Numbers.ipynb", "content/essentials/python/datatypes/002_Python_String.ipynb", "content/essentials/python/datatypes/003_Python_List.ipynb", "content/essentials/python/datatypes/004_Python_Tuple.ipynb", "content/essentials/python/datatypes/005_Python_Dictionary.ipynb", "content/essentials/python/datatypes/006_Python_Sets.ipynb", "content/essentials/python/datatypes/Python_List_Comprehension.ipynb", "content/essentials/python/datatypes/datatypes_toc.md", "content/essentials/python/datetime/001_Python_datetime_Module.ipynb", "content/essentials/python/datetime/002_Python_strftime.ipynb", "content/essentials/python/datetime/003_Python_strptime.ipynb", "content/essentials/python/datetime/004_Python_current_date_and_time.ipynb", "content/essentials/python/datetime/005_Python_get_current_time.ipynb", "content/essentials/python/datetime/006_Python_timestamp_to_datetime.ipynb", "content/essentials/python/datetime/007_Python_time_Module.ipynb", "content/essentials/python/datetime/008_Python_sleep.ipynb", "content/essentials/python/datetime/datetime_toc.md", "content/essentials/python/files/001_Python_File_Input_Output.ipynb", "content/essentials/python/files/002_Python_File_Directory.ipynb", "content/essentials/python/files/003_Python_File_Exception.ipynb", "content/essentials/python/files/004_Python_Exceptions_Handling.ipynb", "content/essentials/python/files/005_Python_User_defined_Exceptions.ipynb", "content/essentials/python/files/files_toc.md", "content/essentials/python/functions/001_Python_Functions.ipynb", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal.ipynb", "content/essentials/python/functions/003_Python_Function_global_Keywords.ipynb", "content/essentials/python/functions/004_Python_Function_Arguments.ipynb", "content/essentials/python/functions/005_Python_Function_Recursion.ipynb", "content/essentials/python/functions/006_Python_Function_Anonymous.ipynb", "content/essentials/python/functions/007_Python_Function_Module.ipynb", "content/essentials/python/functions/008_Python_Function_random_Module.ipynb", "content/essentials/python/functions/009_Python_Function_math_Module.ipynb", "content/essentials/python/functions/010_Python_Function_Package.ipynb", "content/essentials/python/functions/Python_Docstrings.ipynb", "content/essentials/python/functions/Python_User_defined_Functions.ipynb", "content/essentials/python/functions/functions_toc.md", "content/essentials/python/introduction/002_Hello_World.ipynb", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers.ipynb", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments.ipynb", "content/essentials/python/introduction/005_Python_Variables_&_Constants.ipynb", "content/essentials/python/introduction/006_Python_Literals.ipynb", "content/essentials/python/introduction/007_Python_Data_Types.ipynb", "content/essentials/python/introduction/008_Python_Type_Conversion.ipynb", "content/essentials/python/introduction/009_Python_Input_Output_Import.ipynb", "content/essentials/python/introduction/010_Python_Operators.ipynb", "content/essentials/python/introduction/011_Python_Namespace_and_Scope.ipynb", "content/essentials/python/introduction/1_data_structures_and_agorithms.ipynb", "content/essentials/python/introduction/Interpreter_Vs_Compiler.ipynb", "content/essentials/python/introduction/constant.ipynb", "content/essentials/python/introduction/intro_toc.md", "content/essentials/python/objects/001_Python_OOPs_Concepts.ipynb", "content/essentials/python/objects/002_Python_Classes_and_Objects.ipynb", "content/essentials/python/objects/003_Python_Inheritance.ipynb", "content/essentials/python/objects/004_Python_Operator_Overloading.ipynb", "content/essentials/python/objects/objects_toc.md", "content/essentials/python/objects/self_in_Python_Demystified.ipynb", "content/essentials/statistics/statistics.ipynb", "content/markdown.md", "content/markdown-notebooks.md", "content/mymarkdown.md", "content/notebooks.ipynb", "content/real-world/markdown.md", "content/real-world/mymarkdown.md", "content/tools/hf/intro.md", "content/tools/intro_tools.ipynb", "content/tools/langchain/intro.md", "content/tools/langchain/langchain-modules.md", "content/tools/langchain/langgraph.md", "content/tools/langchain/langserve.md", "content/tools/langchain/langsmith.md", "content/tools/langchain/lcel.md", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1.ipynb", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2.ipynb", "content/tools/matplotlib/matplotlib_toc.md", "content/tools/numpy/001_Python_NumPy.ipynb", "content/tools/numpy/002_Python_NumPy_Array_Part1.ipynb", "content/tools/numpy/003_Python_NumPy_Array_Part2.ipynb", "content/tools/numpy/004_Python_NumPy_Array_Part3.ipynb", "content/tools/numpy/005_Python_NumPy_Array_Part4.ipynb", "content/tools/numpy/Python_Numpy_Exercises_with_hints.ipynb", "content/tools/numpy/numpy_toc.md", "content/tools/pandas/001_Python_Pandas_DataFrame.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index.ipynb", "content/tools/pandas/002_Python_Pandas_Exercise_1.ipynb", "content/tools/pandas/003_Python_Pandas_Exercise_2.ipynb", "content/tools/pandas/pandas_toc.md", "content/tools/seaborn/001_Seaborn_Loading_Dataset.ipynb", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics.ipynb", "content/tools/seaborn/003_Matplotlib_vs_Seaborn.ipynb", "content/tools/seaborn/004_Seaborn_Color_Palettes.ipynb", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot.ipynb", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot.ipynb", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots.ipynb", "content/tools/seaborn/008_Seaborn_Distribution_Plots.ipynb", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot.ipynb", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot.ipynb", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot.ipynb", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot.ipynb", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot.ipynb", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot.ipynb", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot.ipynb", "content/tools/seaborn/016_Seaborn_PairGrid_Plot.ipynb", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot.ipynb", "content/tools/seaborn/018_Seaborn_Heat_Map.ipynb", "content/tools/seaborn/019_Seaborn_Cluster_Map.ipynb", "content/tools/seaborn/seaborn_toc.md", "content/tools/tools-for-llms.md", "content/tools/tools-for-ml.md", "content/tools/tools-for-nn.md", "curriculum.md", "intro.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 17, 18, 21, 22, 23, 24, 26, 27, 29, 32, 36, 38, 39, 40, 41, 43, 45, 46, 49, 50, 51, 53, 54, 55, 57, 59, 60, 64, 66, 67, 68, 69, 71, 73, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 101, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 142, 145], "0": [6, 7, 9, 10, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 40, 41, 43, 45, 46, 47, 49, 51, 52, 54, 55, 56, 57, 63, 65, 66, 67, 68, 69, 70, 73, 76, 77, 78, 79, 81, 82, 86, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "00": [34, 35, 36, 38, 40, 41, 69, 107, 108, 110, 125, 126, 132, 135], "000": [26, 126, 131], "0000": [40, 70], "00000": 107, "000000": [27, 35, 36, 69, 107, 118, 119, 121, 126, 137], "0000003": 27, "0000a3": 133, "0001": [26, 34, 40], "000110011001100110011": 26, "000a": 26, "001": [35, 36], "0010": 70, "0011": 70, "00121062e": 135, "00140327e": 135, "001868": 137, "001_python_file_input_output": 44, "002": [35, 36], "002327879593869": 104, "00232788": 104, "002_python_file_directori": 44, "00357518e": 135, "003_python_file_except": 44, "004_python_exceptions_handl": 44, "005": 135, "005356": 137, "005_python_user_defined_except": 44, "00616708": 101, "006191": 133, "007": [69, 135], "007234": 137, "00778181e": 135, "00786338": 104, "007_python_function_modul": 43, "00826323e": 135, "00856914e": 135, "009": 27, "00960206e": 135, "01": [27, 34, 35, 36, 38, 40, 41, 69, 121, 125, 128, 130, 131, 132, 133, 135, 137], "010": [27, 135], "0100": 70, "010000": 107, "0101": 70, "01032310e": 135, "01051775e": 135, "011523": 133, "01183409e": 135, "012345": 27, "0123456789": 55, "01345985e": 135, "01710843e": 135, "01919923e": 135, "019608": 107, "01_learn_python4data": [44, 55, 119], "01x345": 27, "02": [34, 35, 36, 40, 41, 121, 135], "020408": 118, "021069": 133, "02210": [20, 22], "022727": 118, "02319487": 104, "025000": 126, "02539500e": 135, "02683718e": 135, "02919730e": 135, "02928161e": 135, "02989209e": 135, "03": [6, 27, 41, 121, 135], "030114": 133, "03068156e": 135, "030774": 121, "030e2eec799d": 12, "031250": 118, "03145352": 104, "032258": 118, "03247675": 104, "03348578e": 135, "03387531e": 135, "03461004": 104, "03505598723366": 55, "035714": 118, "039631": 133, "03ed55": 55, "03pm": 35, "04": [34, 40, 41, 121, 125], "040000": 107, "042857": 118, "04617067e": 135, "04702762e": 135, "04763428": 101, "04_python_funct": [43, 55], "05": [35, 36, 41, 121], "0500": [131, 133], "05017144e": 135, "05082974": 101, "051020": 118, "05233094e": 135, "05473060e": 135, "05655136772680869": 56, "05669558e": 135, "057333": 121, "058824": 118, "05908a030c74": 77, "05_python_fil": 44, "06": [34, 35, 36, 37, 38, 40, 41, 121, 123], "06161913e": 135, "062500": 118, "063577": 137, "064516": 118, "06563599e": 135, "06663512e": 135, "066667": 107, "06947804e": 135, "07": [35, 36, 38, 41], "0708": 131, "073709": 135, "074074": 118, "07450952e": 135, "0750": 131, "07659773e": 135, "076923": 118, "077036": 133, "08": [34, 38, 40, 41], "080169": 135, "08143941": 101, "08309749e": 135, "08333022e": 135, "083333": [107, 118], "08553692": 103, "085536923187668": 55, "089286": 118, "09": [35, 36, 41], "090909": 118, "09090909090909": 55, "096154": 118, "09708521e": 135, "09790012e": 135, "099350157876355": 104, "09935016": 104, "0_": 27, "0a4959e7a13b": 28, "0b": 26, "0b0001": 26, "0b10": [26, 70], "0b1010": 66, "0b1101011": 26, "0d17a834dca2": 52, "0ef33cc3a94d": 45, "0f0f0f": 124, "0f0f0f0f": 124, "0f73a35e8ce2": 63, "0j": [66, 70], "0o": 26, "0o12": 26, "0o15": 26, "0o310": 66, "0x": 26, "0x0000012c87c0af70": 11, "0x000001d284b3b430": 10, "0x000001d8aec3ac10": 77, "0x000001d8aec44eb0": 77, "0x000001d8aec7e1f0": 77, "0x000001d8aec7e4c0": 77, "0x000001d8aec7e5e0": 77, "0x00000218ffc65220": 79, "0x0000021e45765b20": 76, "0x0000021e45765dc0": 76, "0x00007ffad7cb2770": 11, "0x000a": 26, "0x12c": 66, "0x12c4cb88d90": 136, "0x12c4df5c1c0": 136, "0x12c4e273c70": 136, "0x12c50e26c10": 136, "0x12c53a52d60": 136, "0x12c53affc10": 136, "0x163ca247070": 139, "0x163cdf926d0": 139, "0x163ce3245e0": 139, "0x163cfcc79d0": 139, "0x163d0288250": 139, "0x163d05bfa60": 139, "0x163d0f2ae20": 139, "0x1662f00ac70": 127, "0x16633986eb0": 127, "0x166339f84c0": 127, "0x16635a26b80": 127, "0x16635a63550": 127, "0x170b84f24a0": 13, "0x1a11b1a6e80": 130, "0x1a11b2e7a00": 130, "0x1a11b349eb0": 130, "0x1a2186f5940": 137, "0x1a21896cac0": 137, "0x1a218c77d30": 137, "0x1a218d2d6a0": 137, "0x1a218de36a0": 137, "0x1a21a1a7310": 137, "0x1a21a449490": 137, "0x1a21a492c70": 137, "0x1a21b6eba00": 137, "0x1be276a14a8": 139, "0x1bfbd546670": 128, "0x1bfbe8c42b0": 128, "0x1bfbe8d2640": 128, "0x1bfbeacc8b0": 128, "0x1bfbf65d610": 128, "0x1ce07cb24f0": 133, "0x1ce07cc58e0": 133, "0x1da1f804700": 134, "0x1da1f8bf520": 134, "0x1da209c66d0": 134, "0x1da20f86b20": 134, "0x1da20fa4c10": 134, "0x1da214a06d0": 134, "0x1edcdfafd30": 135, "0x219288a7220": 126, "0x2192d5bb3a0": 126, "0x2192de12c70": 126, "0x2192dfa48b0": 126, "0x2192e06b910": 126, "0x2192e0be9d0": 126, "0x2192e328640": 126, "0x22c3a5e3ac0": 132, "0x22c3a722fd0": 132, "0x22c3b278670": 132, "0x22c3c78df40": 132, "0x22c3c8f1040": 132, "0x263397171f0": 124, "0x264e0145a90": 123, "0x26bc28689d0": 125, "0x26bc65bb8b0": 125, "0x26bc7611700": 125, "0x26bc7dd6cd0": 125, "0x26bc7eaf0a0": 125, "0x26bc8131250": 125, "0x26bc81b38b0": 125, "0x26bc81e5730": 125, "0x29872f94b20": 131, "0xfb": 26, "1": [4, 6, 7, 9, 11, 13, 15, 18, 19, 23, 26, 32, 40, 47, 50, 51, 52, 53, 54, 56, 57, 60, 71, 73, 77, 78, 79, 81, 82, 86, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 112, 113, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 134, 135, 137, 138, 139], "10": [6, 7, 10, 11, 12, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 35, 38, 41, 43, 45, 46, 47, 49, 50, 51, 52, 54, 55, 57, 63, 64, 65, 66, 67, 68, 69, 70, 72, 76, 77, 79, 81, 82, 86, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "100": [6, 7, 10, 14, 20, 22, 23, 24, 28, 30, 32, 49, 54, 55, 66, 70, 78, 79, 82, 86, 97, 101, 102, 104, 107, 108, 109, 118, 119, 122, 123, 126, 127, 128, 131, 132, 136, 137], "1000": [23, 26, 32, 53, 65, 70, 76, 98, 104, 125, 131, 132, 133, 134, 135], "10000": [32, 98, 104, 107], "100000": [32, 98, 121], "1000000000000000055511151231257827021181583404541015625": 26, "10026431e": 135, "101": [52, 77, 117, 118, 132, 133, 136, 137], "1010": 70, "102": [52, 77, 107, 108, 117, 118, 119], "1024": 32, "10276143": 101, "103": [77, 117, 118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "104": [77, 107, 108, 118, 119], "105": [14, 55, 118], "1050": 27, "1053": 114, "1054": 114, "1055": 114, "1056": 114, "1057": 114, "106": 118, "106628291529549": 55, "10696289e": 135, "107": [26, 118], "108": 118, "109": [52, 107, 118], "109299": 133, "1095522857580948": 129, "1097501": 101, "1099_file": 65, "10_python_pandas_modul": 119, "10ffff_": 27, "11": [10, 13, 19, 22, 24, 26, 27, 28, 30, 32, 36, 40, 41, 50, 54, 64, 66, 67, 70, 72, 76, 77, 97, 101, 102, 103, 104, 107, 111, 116, 118, 119, 121, 123, 131, 136, 137], "110": [118, 119], "1100": 27, "110110": 73, "111": [70, 107, 108, 118, 119], "1110": 70, "1111": [14, 70], "111111": [69, 118], "11111111": 104, "112": [118, 119], "11289431e": 135, "113": 118, "1134": 130, "1135": 130, "1136": 130, "1137": 130, "1138": 130, "114": [107, 108, 118, 119], "11421774e": 135, "115": [107, 108, 118, 119], "1151515151515152": 123, "1158": 130, "1159": 130, "116": 118, "1160": 130, "1161": 130, "1162": 130, "117": 118, "11734513e": 135, "117647": 118, "118": 118, "11818328e": 135, "119": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "119e50d96cfb": 45, "12": [6, 10, 14, 15, 18, 19, 20, 21, 22, 24, 26, 27, 28, 30, 32, 35, 36, 38, 39, 40, 41, 45, 47, 49, 50, 54, 55, 66, 67, 69, 70, 72, 76, 81, 101, 102, 103, 104, 111, 118, 119, 123, 124, 125, 130, 132, 133, 135, 137, 138], "120": [24, 52, 55, 107, 109, 118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "1200": 70, "12000": 98, "121": 118, "1212": 72, "122": 118, "123": [27, 68, 72, 118], "12336799": 101, "123456789": 27, "1234567890": [15, 66], "1234567890123456789": [26, 67], "12345678901234568": [26, 67], "12345678910": 23, "124": [68, 118], "125": [23, 32, 55, 97, 103, 118], "125000": 118, "1252": 121, "12587": 132, "126": 118, "126257": 133, "126960000": 43, "127": [97, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "1278387305019275": 123, "128": [28, 32, 118], "128440": 107, "12872044e": 135, "129": 118, "12940": [107, 108, 119, 126], "12945": 119, "1295210000": 43, "1296": [32, 121], "13": [10, 13, 23, 26, 27, 28, 30, 32, 35, 36, 38, 41, 45, 50, 52, 54, 55, 66, 68, 70, 76, 97, 102, 103, 104, 111, 118, 121, 126, 133, 135, 137], "130": [107, 118], "131": 118, "132": 118, "1326244364": 34, "133": 118, "1333": 131, "134": 118, "13409426e": 135, "13415": [107, 108, 119], "1345": 14, "13495": [107, 108, 119], "13499": 119, "135": 118, "135925": 119, "136": 118, "13680419e": 135, "137": 118, "13756537093": 69, "1377422166": 43, "138": [97, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "138264": 107, "139": 118, "13914421e": 135, "13915538e": 135, "13950": [107, 108, 119], "13960670e": 135, "14": [6, 13, 14, 22, 24, 27, 28, 29, 30, 32, 37, 39, 41, 45, 49, 50, 65, 66, 67, 70, 74, 76, 77, 81, 97, 102, 103, 104, 118, 119, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "140": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "14003": 126, "140708960741200": 71, "140708960741232": 71, "140708960741424": 71, "141": [118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "14112001": 103, "1415": 27, "14159": [55, 57], "141592653589793": [26, 55, 69], "14183273e": 135, "142": 118, "14204329": 104, "142857": 118, "143": 118, "144": [23, 70, 118], "1445": [121, 130], "1446": 130, "1447": 130, "1448": 130, "1449": 130, "145": 118, "1453": 121, "14577043e": 135, "146": [10, 118], "14613738e": 135, "146599183": 43, "147": 118, "14770535": 101, "148": [103, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "148148": 118, "14847551e": 135, "149": 118, "14j": 66, "15": [11, 13, 14, 15, 18, 19, 21, 22, 24, 26, 27, 28, 29, 30, 32, 35, 36, 40, 41, 46, 47, 49, 55, 67, 70, 76, 77, 97, 102, 103, 118, 119, 121, 123, 125, 130, 131, 133, 134, 135], "150": [66, 79, 97, 98, 107, 118, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "1500": [125, 127], "15000": [47, 98], "150000": 98, "151": 118, "151165": 133, "1511893559": 34, "151786": 118, "152": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "1528797322": 35, "153": [23, 118], "154": [107, 108, 118, 119], "1545730073": 39, "1545925769": 40, "1545966844": 40, "1549": 115, "155": 118, "15514180e": 135, "156": [6, 118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "156250": 118, "1568291": 132, "15687723e": 135, "157": 118, "15750": 119, "158": [118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "158023": 97, "1582568": 132, "159": 118, "16": [9, 12, 13, 22, 23, 24, 26, 28, 29, 30, 32, 41, 47, 54, 55, 60, 65, 66, 67, 70, 76, 77, 78, 102, 103, 104, 118, 119, 121, 125, 126, 128, 130, 131, 132, 133, 136, 137], "160": [107, 118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "161": 118, "161006790": 43, "161290": 118, "16188": 107, "162": [49, 118], "1624370069": 39, "1624370297": 40, "163": 118, "164": 118, "1647": 128, "165": 118, "16500": [107, 108, 119], "166": 118, "167": 118, "168": [107, 108, 118, 119], "16807": 32, "168321": 35, "169": [118, 119], "16j": 66, "16pt": 133, "17": [13, 22, 23, 26, 28, 30, 32, 40, 41, 46, 47, 67, 76, 77, 78, 102, 110, 118, 119, 121, 129, 133, 137, 138], "170": 118, "17041474e": 135, "171": [107, 108, 118, 119], "17137357e": 135, "171995": 119, "172": [40, 118], "17254901960784313": 126, "173": 118, "173469": 118, "174": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "17450": [107, 108, 119], "175": [55, 97, 118], "175000": 98, "1752011936438014": 26, "176": [52, 55, 107, 108, 118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "176471": 118, "177": 118, "178": 118, "179": 118, "17951135e": 135, "1796": 22, "17995": 119, "18": [9, 13, 18, 19, 22, 24, 30, 31, 32, 34, 35, 37, 38, 41, 43, 47, 69, 70, 72, 77, 78, 97, 102, 107, 108, 110, 118, 119, 121, 132, 136, 137], "180": [23, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "18000": 98, "18089902e": 135, "181": 118, "18176766975113706": 123, "1819": [49, 52], "182": [118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "1821": 49, "1822565": 132, "183": [55, 118], "18324209e": 135, "18344": 119, "184": [118, 119], "185": 118, "186": 118, "18644463e": 135, "186988000": 43, "187": [118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "187500": 118, "188": [107, 108, 118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "1882615260180538": 129, "189": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "18920": 119, "19": [9, 13, 15, 22, 23, 27, 28, 31, 32, 40, 41, 47, 49, 50, 52, 66, 70, 77, 97, 102, 103, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 123, 126, 129, 132], "190": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "1900": 107, "19000": 78, "190504": 131, "190871": 97, "191": 118, "19116": 77, "192": 118, "1926": 46, "1928": 22, "192985": 97, "193": [118, 119], "19305918e": 135, "193080": 97, "1937": 6, "194": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "194125062": 43, "1942": 14, "195": 118, "1953": 22, "19566591e": 135, "196": [97, 104, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "196526332130161": 104, "1966": 27, "19680801": [7, 82, 86], "19692239e": 135, "197": [118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "1970": [34, 39, 40], "19735756e": 135, "1977": 135, "19789154e": 135, "198": 118, "199": [118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "199333": 121, "19a": 45, "1a2": 14, "1ab34": 14, "1b9ae9b69587": 103, "1d": [100, 101], "1e100": 66, "1e8": 132, "1ee33d": 55, "1f": [27, 98, 133], "1first_nam": 14, "1gcsgplmabavqz26": 55, "1j": [66, 105], "1m": 97, "1num": 65, "1p": 68, "1st": [12, 28, 50, 51, 52, 53, 55], "1variabl": 63, "2": [0, 4, 6, 9, 11, 15, 17, 18, 19, 23, 26, 32, 40, 46, 47, 50, 51, 52, 53, 54, 56, 57, 58, 71, 73, 77, 78, 79, 81, 84, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142], "20": [9, 11, 13, 15, 21, 22, 23, 24, 26, 27, 28, 31, 32, 34, 38, 41, 46, 47, 49, 50, 52, 54, 55, 67, 70, 76, 77, 97, 100, 102, 103, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 123, 125, 126, 131, 133], "200": [30, 49, 52, 55, 66, 78, 97, 102, 118, 126, 135, 137], "2000": 98, "200000": [98, 107], "200000000000003": 60, "20040757": 104, "200555": 38, "201": [34, 118], "2011": 97, "2012": [34, 72], "2013": [35, 36], "201300": 133, "2015": [121, 137], "2016": [135, 137], "2017": [34, 123, 137], "2018": [14, 34, 35, 36, 39, 40, 97, 137], "2019": [34, 35, 36, 38, 39, 40, 52], "202": [49, 118], "2020": [38, 107], "2021": [27, 34, 35, 37, 40, 49], "2021pythondatatyp": 27, "2021pythondatayp": 27, "2022": 46, "2023": 6, "20240789e": 135, "202563": 126, "203": 118, "204": 118, "20491465": 104, "205": 118, "2056": 128, "206": 118, "206135893": 43, "207": [118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "20784702e": 135, "208": [118, 119], "20800138e": 135, "20801": 97, "20843398e": 135, "2087a9c41308": 13, "209": 118, "20994144e": 135, "21": [13, 15, 22, 23, 24, 27, 28, 31, 32, 34, 36, 37, 40, 41, 47, 52, 55, 78, 97, 102, 103, 104, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 125, 128, 130, 131, 132, 133, 137], "210": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "2102": 14, "211": [118, 122], "211538": 118, "212": [118, 122], "2126": 121, "21260800e": 135, "213": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "21330910940589698": 129, "21379529e": 135, "214": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "214286": 118, "214695": 135, "215": 118, "2154": 104, "216": [23, 32, 55, 118], "217": 118, "217391": 118, "21741122e": 135, "21748794e": 135, "218": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "21855997e": 135, "219": [103, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "21987980e": 135, "22": [6, 27, 28, 31, 32, 34, 35, 37, 38, 40, 41, 47, 52, 54, 55, 70, 102, 103, 104, 108, 118, 121, 131, 133, 137], "220": 118, "220087": 133, "22026": 26, "221": 118, "222": 118, "222222": 118, "22222222": 104, "22291790e": 135, "223": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "22357762": 104, "22389": 126, "22397933e": 135, "224": 118, "22417715e": 135, "225": 118, "225000": 98, "2251799813685248": 26, "225806": 118, "22592182e": 135, "226": [97, 118], "22672978": 101, "227": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "22709318e": 135, "22722896e": 135, "228": [97, 118], "228434": 133, "22897": 132, "229": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "22911": 126, "22931538e": 135, "22949": 126, "23": [14, 22, 23, 27, 28, 34, 35, 36, 38, 40, 41, 55, 68, 77, 97, 102, 107, 108, 118, 119, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "230": 118, "2305ca5": 6, "231": 118, "23180804": 101, "232": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "233": [23, 118], "233423": 34, "23379671": 104, "234": 118, "234566": 34, "235": 118, "236": 118, "23600": 119, "23606798": 103, "23611012e": 135, "237": 118, "238": 118, "23845": 119, "239": 118, "24": [15, 22, 24, 28, 30, 31, 32, 35, 36, 41, 43, 54, 55, 76, 77, 97, 102, 107, 108, 118, 119, 125, 128, 130, 131, 132, 133, 137], "240": 118, "2401": 32, "241": 118, "242": 118, "24271445e": 135, "24299133e": 135, "242b77ef2a87": 67, "243": [32, 118], "244": [55, 118], "244898": 137, "245": 118, "245426098662": 111, "245614": 118, "2458": 121, "246": 118, "246154": 107, "24674836e": 135, "24677": 126, "247": [118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "2476979795053773": 26, "248": 118, "24813498e": 135, "24865": 132, "249": 118, "25": [6, 12, 15, 22, 23, 24, 26, 28, 30, 31, 32, 35, 39, 41, 43, 46, 55, 66, 67, 69, 70, 76, 77, 97, 98, 102, 103, 107, 118, 121, 123, 125, 126, 128, 132, 133, 137], "250": [79, 118], "2500": [22, 131, 133], "250000": [98, 107, 118, 126], "250fe64180f3": 77, "251": [26, 118], "252": 118, "25231985e": 135, "253": [26, 118], "2534156": 132, "2535": 121, "254": [76, 118], "25490048e": 135, "255": [55, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "2550": 22, "2557": 128, "2559205": 101, "256": [28, 32, 118], "257": [59, 118], "258": 118, "258705000": 43, "258745": 132, "259": 118, "259259": 118, "259490": 121, "25th": 107, "26": [27, 28, 29, 31, 32, 38, 41, 55, 76, 97, 102, 107, 108, 118, 119, 121, 125, 131, 133], "260": 118, "261": 118, "261842": 126, "262": 118, "262144": 27, "263": 118, "264": 118, "265": 118, "26568259e": 135, "26571389e": 135, "266": 118, "267": 118, "268": 118, "269": 118, "27": [11, 15, 22, 23, 24, 31, 32, 38, 40, 43, 52, 54, 69, 70, 76, 97, 102, 103, 107, 108, 118, 119, 131], "270": 118, "271": 118, "271429": 118, "272": 118, "27216990e": 135, "272699": 133, "272727": 118, "273": [13, 118], "274": 118, "275": [118, 130], "27500": 107, "275510": 118, "276": 118, "27672348": 101, "277": 118, "27764243": 101, "278": 118, "27891384e": 135, "279": 118, "27j": 66, "28": [13, 22, 23, 24, 31, 32, 34, 40, 46, 55, 76, 97, 102, 118, 119, 133], "280": 118, "280702": 118, "281": 118, "281250": 118, "2817": 130, "2818": 130, "2819": 130, "282": 118, "2820": 130, "2821": 130, "2822": 121, "28254475e": 135, "283": 118, "2833": [131, 133], "28366219": 103, "284": 118, "28418980453852622603883856494709731311218158362293224700445543940796643776911788129508577246309929258069598467896008287596053863082109746801947722280783720032649818198464452375358348619120021135797251857019557032565638659667745421115194468559021541269027438746788486392649581405327516658718317011453858465218779880972140612551504149701082164179367484198570734230003528355826545644223794779911723917115845213739921327820409005460708547942445234906498880588411276755120002108963510955276534630522965966177951626038063994937181228938844252668098515385045718428663547788122173798704717510979319749834083419004355222012043715855123615249682039587844431246269017612728291710718821388840627277407189863509789929339102406655115786899696829902032282666983426897111750208839152830573688512831984602085360572485861376": 70, "285": 118, "286": 118, "28675168e": 135, "287": 118, "288": 118, "28883356e": 135, "289": 118, "289000": 97, "289474": 126, "29": [13, 22, 23, 40, 43, 76, 102, 103, 118, 119, 124, 125, 130, 132, 137], "290": 118, "291": 118, "291667": 118, "292": 118, "293": 118, "294": 118, "29402596": 104, "29431485e": 135, "2946014910624595": 55, "295": 118, "29534113": 104, "295455": 118, "29560668e": 135, "296": 118, "297": 118, "298": 118, "299": 118, "29995": 119, "2d": [97, 98, 100, 101, 107, 129, 138], "2d7f5e": 133, "2darrai": [111, 114], "2f": [27, 69, 78, 97, 133, 136], "2f7f4e5fdb49": 41, "2j": [26, 66, 67], "2nd": [12, 27, 28, 29, 50, 51, 53], "2rgxf": 55, "2x": [70, 97], "2x2": [101, 137], "3": [6, 9, 11, 13, 15, 18, 19, 21, 23, 26, 30, 32, 36, 40, 46, 47, 50, 51, 52, 53, 54, 57, 60, 62, 63, 68, 71, 73, 74, 76, 77, 78, 79, 81, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 134, 135, 136, 137, 138, 139], "30": [11, 12, 13, 19, 22, 23, 24, 27, 28, 32, 34, 35, 36, 38, 40, 46, 49, 50, 51, 52, 55, 65, 67, 70, 71, 76, 97, 102, 107, 118, 123, 126, 128, 130, 131, 134], "300": [13, 28, 65, 66, 97, 118, 124], "3000": 47, "300000": [98, 121], "3000000000000003": 26, "300000e": 69, "301": 118, "30119580e": 135, "302": 118, "303": 118, "30378713e": 135, "304": 118, "305": 118, "306": 118, "306264": 133, "30668723": 101, "307": 118, "308": 118, "309": 118, "30911403e": 135, "30920635": 101, "31": [13, 22, 23, 34, 35, 36, 40, 55, 76, 97, 118, 119, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "310": [114, 118], "31002414e": 135, "311": [114, 118], "312": [114, 118], "3125": 32, "312500": 118, "31287314e": 135, "313": [114, 118], "31390556e": 135, "314": [49, 114, 118], "315": 118, "3153600000": 70, "31576734e": 135, "316": 118, "317": 118, "31701798e": 135, "31708111e": 135, "318": 118, "318750": 107, "319": 118, "32": [9, 13, 22, 24, 28, 32, 36, 49, 76, 103, 107, 118, 121, 133, 137], "320": 118, "321": 118, "321004": 133, "32105794e": 135, "322": 118, "323": 118, "323947000": 43, "324": 118, "324129": 133, "325": 118, "326": 118, "327": 118, "32768": 32, "328": 118, "329": 118, "33": [22, 27, 34, 41, 52, 55, 68, 69, 76, 78, 97, 104, 118, 119], "330": [24, 118], "33094796e": 135, "331": 118, "33114510e": 135, "331191": 37, "33142653": 101, "332": 118, "33205527e": 135, "333": [27, 34, 70, 118], "333333": 119, "33333333": [26, 103, 104], "333333333333333": 70, "333333333333333481363069950020872056484222412109375": 55, "3333333333333335": 55, "334": 118, "335": 118, "33516842e": 135, "336": 118, "33662976e": 135, "337": 118, "33768743e": 135, "338": 118, "33856867e": 135, "338695217273813": 104, "339": 118, "34": [14, 23, 34, 41, 55, 70, 76, 102, 104, 118, 119, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "340": [22, 23, 118], "340909": 118, "341": 118, "342": 118, "34238": 34, "342380": 34, "343": [23, 32, 118], "343750": 118, "344": 118, "34435993e": 135, "345": 118, "3456": 14, "345673": 14, "3456789": 27, "34567890": 69, "3457": 27, "346": [69, 118], "347": [36, 118], "348": [36, 118], "349": [36, 118], "35": [14, 22, 24, 27, 28, 37, 40, 67, 69, 97, 102, 118, 119, 121, 130, 131, 132, 133], "350": [36, 118], "350000": [98, 121], "351": [36, 118], "352": 118, "35266299": 101, "353": 118, "354": 118, "354839": 118, "35488217e": 135, "355": 118, "356": [14, 118], "357": 118, "357143": 118, "35731444e": 135, "358": 118, "359": 118, "35994688e": 135, "36": [10, 22, 23, 24, 27, 32, 49, 63, 69, 97, 118, 121, 124], "360": 118, "36000": 119, "360856": 131, "361": [40, 118], "362": [40, 118], "363": 118, "363636": 118, "364": 118, "36492380e": 135, "365": [27, 118], "366": [35, 36, 40, 118], "36699927e": 135, "367": 118, "36782780e": 135, "368": 118, "3681b3969e27": 47, "36880": 119, "369": 118, "36938945e": 135, "37": [13, 22, 23, 76, 107, 108, 118, 119, 137], "370": 118, "37028": 119, "370370": 118, "371": 118, "37144872e": 135, "37181743e": 135, "372": 118, "373": 118, "37380679e": 135, "374": 118, "375": [43, 118], "375000": 118, "376": 118, "37644": 126, "377": [23, 118], "37796264e": 135, "378": 118, "379": 118, "38": [38, 76, 97, 118, 126, 131, 133, 135, 137], "380": 118, "381": 118, "382": 118, "38209653": 101, "38223": 126, "38224839e": 135, "383": 118, "38336447": 104, "38385823e": 135, "384": 118, "38429280e": 135, "385": 118, "38568225e": 135, "38575866e": 135, "385965": 118, "386": 118, "387": 118, "387097": 118, "38787858e": 135, "388": 118, "389": 118, "3890561": 103, "39": [22, 27, 34, 41, 97, 118, 121, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "390": 118, "391": 118, "39119225e": 135, "39169378e": 135, "392": 118, "392857": 118, "393": 118, "393413": 133, "394": 118, "395": 118, "39594634e": 135, "396": 118, "397": 118, "39764517e": 135, "398": 118, "39801": 14, "39878883": 101, "399": [28, 118], "39957927e": 135, "3bfaa309574d": 31, "3d": [6, 102], "3da34cc7641": 27, "3e859d37287a": 63, "3ec8c6652eef": 53, "3f": [27, 69], "3j": [6, 26, 66, 67, 77], "3rd": [28, 51, 53, 100, 125], "4": [6, 7, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 40, 46, 49, 50, 51, 52, 53, 54, 55, 57, 62, 63, 65, 68, 69, 73, 76, 77, 78, 81, 82, 86, 97, 100, 101, 102, 103, 104, 106, 107, 108, 110, 112, 114, 116, 118, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "40": [22, 24, 32, 41, 46, 52, 67, 69, 70, 97, 102, 109, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "400": [118, 126], "4000": 98, "400000": [98, 119, 121], "40015831": 101, "401": 118, "402": 118, "403": 118, "403509": 118, "403846": 118, "404": 118, "405": 118, "406": 118, "40603744": 104, "40636423e": 135, "407": 118, "408": 118, "409": [118, 130], "40904134e": 135, "409091": 118, "4096": 32, "40960": 119, "41": [22, 23, 40, 41, 97, 118, 119, 135], "410": [118, 130], "41083552e": 135, "411": [118, 130], "412": [118, 130], "41276190e": 135, "41292267e": 135, "413": [118, 130], "41315": 119, "4131591": 103, "414": 118, "41405704e": 135, "41406033e": 135, "41421356": 103, "414368": 135, "415": 118, "4151": 111, "4152": 111, "4153": 111, "4154": 111, "4155": 111, "416": 118, "41614684": 103, "416667": 118, "417": 118, "418": 118, "4186": 111, "4187": 111, "4188": 111, "4189": 111, "419": 118, "4190": 111, "42": [22, 24, 30, 34, 41, 78, 104, 118, 127], "420": 118, "421": 118, "422": 118, "423": 118, "424": 118, "42477796076938": 55, "42499377e": 135, "425": 118, "42530": 132, "42538101e": 135, "426": 118, "42612988": 104, "427": 118, "428": 118, "428571": 118, "42857143": 103, "4286f4": 97, "429": 118, "43": [22, 23, 41, 103, 118], "430": 118, "4306": 111, "4307": 111, "4308": 111, "4309": 111, "431": 118, "4310": 111, "43186c7d3555": 63, "43196619e": 135, "432": 118, "433": 118, "434": 118, "4340020aef34": 77, "43469003": 104, "435": 118, "43563027": 101, "435633": 34, "435866": 121, "436": 118, "437": 118, "437500": 118, "438": 118, "439": 118, "44": [40, 41, 118, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "440": 118, "441": 118, "44120621e": 135, "442": 118, "44225798": 101, "442308": [107, 118], "443": 118, "4439": 114, "444": 118, "4440": 114, "4441": 114, "4442": 114, "4443": 114, "444444": 118, "44444444": 104, "445": 118, "446": 118, "44666284e": 135, "447": 118, "44794755e": 135, "448": 118, "449": 118, "449489742783178": 55, "4496": 130, "4497": 130, "4498": 130, "4499": 130, "45": [22, 23, 24, 41, 43, 55, 64, 72, 97, 115, 118, 121, 130, 137], "450": 118, "4500": 130, "45000": 107, "451": 118, "45103300e": 135, "452": 118, "453": 118, "45359369": 101, "454": 118, "45400": 119, "45409876e": 135, "454545": 118, "45468093e": 135, "455": 118, "455357": 118, "456": [27, 68, 118], "456140": 118, "457": 118, "458": 118, "4583": 131, "458333": 118, "459": 118, "45d582f31548": 77, "46": [15, 41, 49, 97, 118, 119, 130, 137], "460": 118, "46063092e": 135, "46075265e": 135, "461": 118, "462": 118, "463": 118, "464": 118, "4641": 104, "465": 118, "465794806718": 26, "466": 118, "4666666666666668": 123, "466b90e7ef2f": 67, "467": 118, "468": 118, "468750": 118, "469": 118, "469388": 118, "47": [22, 23, 34, 41, 118, 119, 121, 130], "470": 118, "47016730e": 135, "471": 118, "472": 118, "473": 118, "473137c03db7": 63, "47320909e": 135, "474": 118, "475": 118, "476": 118, "477": 118, "477273": 118, "4777": 116, "4778": 116, "4779": 116, "478": 118, "4780": 116, "4781": 116, "478125": 133, "479": 118, "48": [22, 24, 27, 34, 41, 70, 78, 108, 110, 117, 118, 119, 130], "480": 118, "48013283e": 135, "48048431": 101, "481": 118, "48122198e": 135, "482": 118, "483": 118, "48383283e": 135, "484": 118, "485": 118, "486": 118, "487": 118, "48755100e": 135, "488": 118, "489": 118, "4895": 10, "489796": 107, "49": [20, 22, 23, 24, 30, 32, 40, 41, 55, 118, 119], "490": 118, "490625": 126, "491": 118, "491228": 118, "492": 118, "492754": 118, "49291": 126, "493": 118, "49332966e": 135, "494": 118, "495": 118, "49521424": 104, "49529338e": 135, "49574452": 104, "49587": 126, "496": 118, "496714": 107, "49690158e": 135, "497": 118, "49769501e": 135, "49798680e": 135, "498": 118, "49890664e": 135, "499": 118, "49e421f2057c": 68, "4a9f159cd120": 27, "4b26ab49e29c": 9, "4c669126467b": 27, "4d4a0e714c73": 63, "4ed3868a9a2": 28, "4f": 27, "4m": 97, "4th": [28, 29], "5": [6, 7, 9, 11, 12, 13, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 64, 65, 66, 68, 69, 71, 73, 76, 77, 78, 79, 81, 82, 86, 97, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 114, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "50": [14, 18, 20, 22, 23, 24, 26, 27, 30, 32, 38, 41, 43, 49, 50, 55, 72, 97, 103, 104, 107, 109, 110, 118, 119, 121, 125, 126, 128, 130, 131, 132, 133, 135, 137], "500": [109, 118, 135], "5000": [47, 135], "50000": 97, "500000": [98, 107, 118, 119, 121], "501": 118, "502": 118, "503": 118, "504": 118, "505": 118, "5050": [22, 49], "50547116e": 135, "506": 118, "50628105e": 135, "507": 118, "508": 118, "509": 118, "50b154750974": 63, "50th": 107, "51": [41, 49, 97, 118, 119, 131], "510": 118, "51026454": 101, "511": 118, "512": [23, 28, 32, 54, 118], "513": 118, "513433": 135, "514": 118, "515": 118, "515941f58fe7": 51, "516": 118, "51601397e": 135, "516129": 118, "51681": 126, "517": 118, "51782e52f201": 46, "517857": 118, "518": 118, "518519": 118, "519": [70, 118], "52": [41, 97, 107, 108, 118, 119], "520": 118, "52063": 126, "521": 118, "522": 118, "523": 118, "524": 118, "525": 118, "52580": 126, "526": 118, "526373": 137, "527": 118, "527393": 34, "528": 118, "529": 118, "529412": 118, "53": [22, 23, 30, 35, 36, 39, 41, 118, 119, 121, 130, 131, 133], "530": 118, "53037048e": 135, "531": 118, "531250": 118, "532": 118, "533": 118, "53341062e": 135, "53360752e": 135, "534": 118, "5348": 119, "535": 118, "535714": 118, "53590397e": 135, "536": 118, "537": 118, "53783010e": 135, "538": 118, "539": 118, "53901780e": 135, "53909609": 101, "54": [22, 23, 24, 34, 41, 54, 65, 76, 97, 103, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 119, 131], "540": 118, "54030231": 103, "541": 118, "541667": 118, "5418903291546293": 129, "542": 118, "5425": 132, "542734": 135, "54275813": 101, "543": 118, "54321": 22, "544": 118, "545": 118, "54510477e": 135, "5455131": 132, "546": 118, "54682": 132, "547": 118, "547083": 135, "54777888": 101, "548": 118, "54808": 132, "549": 118, "54902750e": 135, "55": [22, 23, 34, 41, 49, 55, 104, 109, 111, 114, 118, 129, 137], "550": 118, "551": 118, "551020": 118, "55109787e": 135, "5513833499989991": 129, "552": 118, "55283762": 101, "553": 118, "553519": 133, "55360672": 101, "55382448e": 135, "554": 118, "555": [23, 27, 72, 118], "5550161930871431": 104, "555108164c58": 30, "55555556": 104, "555816": 133, "556": 118, "557": 118, "558": 118, "5589": 111, "559": 118, "5590": 111, "5591": 111, "5592": 111, "5593": 111, "55965906e": 135, "56": [6, 21, 22, 24, 30, 34, 38, 41, 55, 107, 108, 110, 117, 118, 119, 137], "560": 118, "56077258e": 135, "561": 118, "562": 118, "562500": 118, "563": 118, "56348096e": 135, "564": 118, "565": 118, "56580759e": 135, "566": [36, 118], "56650192e": 135, "567": [36, 118], "568": [36, 118], "569": [36, 118], "5698": 132, "57": [39, 41, 97, 107, 108, 118, 119], "570": [36, 118], "57057605": 104, "571": 118, "571429": 118, "572": 118, "57292499e": 135, "573": 118, "57330710e": 135, "57367853e": 135, "574": 118, "575": 118, "576": 118, "5768efa4a35f": 78, "577": 118, "578": 118, "579": [68, 118], "57953b0b580c": 13, "58": [34, 35, 40, 41, 97, 107, 108, 118, 119, 137], "580": 118, "5808771025513102": 129, "58099293e": 135, "581": 118, "582": 118, "5828025": 40, "583": 118, "584": 118, "585": 118, "5854679515581645": 26, "58556641e": 135, "586": 118, "58662330e": 135, "587": 118, "588": 118, "588235": 118, "58883361": 104, "58899709e": 135, "589": 118, "58900": 119, "59": [20, 34, 35, 36, 38, 40, 41, 107, 108, 118, 119, 125, 128, 130, 131, 132, 133, 137], "590": 118, "59049": 32, "59068226": 104, "591": 118, "592": 118, "593": 118, "59362951e": 135, "59371929e": 135, "594": 118, "595": 118, "596": 118, "59621339e": 135, "597": 118, "598": 118, "59815003": 103, "599": 118, "59b7b8cc9b5b": 77, "5aa728677edf": 55, "5b2db8c64782": 27, "5b50fb5d02c4": 52, "5e2": 66, "5f195de51d93": 79, "5m": 97, "5th": [27, 28], "6": [6, 9, 10, 11, 12, 13, 15, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 40, 41, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 62, 63, 64, 65, 66, 68, 69, 76, 77, 78, 81, 97, 100, 101, 102, 103, 104, 107, 108, 110, 114, 118, 121, 123, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139], "60": [19, 20, 22, 23, 24, 32, 52, 55, 69, 71, 97, 107, 108, 109, 118, 119, 126, 127, 129], "600": [23, 70, 118], "6000": 98, "60000": [76, 97], "600000": 121, "60000000000001": 13, "60059908": 104, "601": 118, "60124": 126, "60154": 126, "602": 118, "603": 118, "60332219e": 135, "603704": 133, "604": 118, "605": 118, "605370": 121, "606": 118, "60631cbc73b0": 50, "60683359e": 135, "607": 118, "60786967": 101, "608": 118, "60811794e": 135, "60818266e": 135, "609": 118, "61": [30, 40, 107, 108, 118, 119, 125, 128, 130, 131, 132, 133, 137], "610": [23, 118], "611": 118, "611172": 133, "612": 118, "613": 118, "614": 118, "61440440e": 135, "615": 118, "61500": 119, "616": 118, "61670566e": 135, "61675899e": 135, "617": 118, "61784629": 101, "618": 118, "619": 118, "6197751905438615": 55, "62": [49, 118, 119, 132], "620": 118, "621": 118, "621415": 133, "622": 118, "622167": 133, "62242956e": 135, "623": 118, "62311335e": 135, "624": 118, "625": [32, 118], "62500": 107, "62503489e": 135, "626": 118, "62636": 126, "627": 118, "6274509803921569": 126, "62792336e": 135, "628": 118, "629": 118, "629630": 118, "62996541e": 135, "63": [22, 24, 45, 46, 49, 68, 69, 118, 130, 137], "630": 118, "63033250e": 135, "631": 118, "631579": 118, "63158859": 101, "632": 118, "63212579e": 135, "63238643": 104, "633": [52, 118], "6338": 119, "634": 118, "63465586e": 135, "635": 118, "636": 118, "637": 118, "6377": 119, "638": 118, "639": 118, "64": [6, 22, 23, 24, 28, 32, 54, 103, 118, 137], "640": 118, "64000": 97, "64034418e": 135, "641": 118, "64154651": 132, "642": 118, "643": 118, "64387910e": 135, "644": 118, "645": 118, "645161": 118, "646": 118, "647": 118, "647689": 107, "648": 118, "6488": 119, "649": 118, "65": [18, 19, 20, 27, 68, 108, 110, 117, 118, 137], "650": 118, "65000": 97, "651": 118, "651253": 137, "652": 118, "65235094": 104, "653": 118, "65364362": 103, "654": 118, "654593": 39, "655": 118, "65575249e": 135, "65596512e": 135, "656": 118, "6561": 32, "65628077": 101, "656404": 133, "657": 118, "6575": 119, "658": 118, "659": 118, "65903086e": 135, "66": [21, 22, 27, 51, 69, 118, 119, 125, 128, 130, 131, 132, 133, 137], "660": 118, "66000": 97, "661": 118, "6611852": 132, "662": 118, "663": 118, "664": 118, "665": 118, "666": [30, 118], "66666667": 104, "667": 118, "667565": 133, "668": 118, "669": 118, "67": [23, 27, 103, 118, 119, 137], "670": 118, "670396": 137, "671": 118, "672": 118, "673": 118, "674": 118, "675": 118, "67526014e": 135, "676": 118, "67631096e": 135, "677": 118, "67761063e": 135, "678": 118, "6785": 119, "678571": 118, "679": 118, "68": [97, 111, 114, 118, 119, 125, 128, 130, 131, 132, 133, 135, 137], "680": 118, "681": 118, "681159": 118, "682": 118, "682091": 137, "683": 118, "68334519e": 135, "683673": 118, "684": 118, "684211": 118, "685": 118, "68572271": 104, "686": 118, "68602648": 101, "68603251e": 135, "68671849e": 135, "687": 118, "68744134": 101, "68747069e": 135, "688": 118, "689": 118, "69": [20, 22, 108, 118, 119, 137], "690": 118, "69001671e": 135, "691": 118, "6918": 119, "692": 118, "69258130e": 135, "69272794e": 135, "693": 118, "6931471805599453": 55, "69343173": 101, "69361323e": 135, "694": 118, "695": 118, "696": 118, "697": 118, "69736459e": 135, "69791535": 101, "698": 118, "699": 118, "69901020e": 135, "6ab0f28c63a7": 47, "6ac8e81b6f0c": 45, "6f47904706aa": 103, "6f8260f6f5bb": 50, "6j": [26, 67, 77], "6m": 97, "6p": 69, "6th": 27, "6x": 70, "7": [6, 9, 12, 13, 15, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 38, 40, 41, 43, 46, 49, 50, 51, 52, 54, 55, 64, 65, 66, 67, 68, 69, 70, 77, 78, 79, 81, 97, 101, 102, 103, 104, 107, 108, 114, 118, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139], "70": [18, 20, 22, 24, 32, 52, 97, 108, 110, 115, 117, 118, 119, 125, 126, 137], "700": [118, 136], "701": 118, "70166723e": 135, "702": 118, "703": 118, "703704": 118, "704": 118, "704545": 118, "705": 118, "705882": 118, "706": 118, "707": 118, "707107": 107, "708": 118, "70805473e": 135, "709": 118, "7091468499697177e": 123, "71": [118, 119, 125, 131, 132, 133], "710": 118, "711": 118, "712": 118, "713": 118, "714": 118, "71400": 119, "714286": 119, "71432477e": 135, "715": 118, "715070": 131, "716": 118, "71671100e": 135, "717": 118, "71755233e": 135, "718": 118, "71828": [55, 57], "718281828459045": 55, "71828183": 103, "719": 118, "72": [22, 24, 49, 107, 110, 118, 137], "720": [26, 53, 55, 118], "721": 118, "722": 118, "72223991e": 135, "72247358e": 135, "723": 118, "72352380e": 135, "724": 118, "724490": 118, "724638": 118, "725": 118, "726": 118, "72638167e": 135, "727": 118, "72708198e": 135, "727273": 118, "72765023e": 135, "728": 118, "72888392e": 135, "729": [23, 32, 54, 118], "72964213e": 135, "73": [14, 118], "730": 118, "731": 118, "731755": 121, "732": 118, "73205081": 103, "733": 118, "73370838": 104, "734": 118, "734673": 137, "735": 118, "73524094": 104, "7359b7dba965": 23, "736": 118, "737": 118, "73712819e": 135, "738": 118, "739": 118, "74": 118, "740": 118, "74098031e": 135, "741": 118, "74149939e": 135, "741935": 118, "742": 118, "743": 118, "74304829e": 135, "74307119e": 135, "74371246e": 135, "744": [76, 118], "74400348e": 135, "744281": 137, "74486871e": 135, "745": 118, "74509907e": 135, "746": 118, "746011": 137, "747": 118, "748": 118, "749": 118, "75": [41, 97, 104, 107, 108, 118, 121, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "750": 118, "750000": [107, 118, 119, 126, 137], "750615": 131, "75075a70c90": 102, "7507bdc665d5": 12, "751": 118, "752": 118, "75209323e": 135, "753": 118, "754": 118, "755": 118, "755102": 137, "756": 118, "75665366e": 135, "7568025": 103, "757": 118, "758": 118, "758000": 121, "759": 118, "75th": 107, "76": [14, 104, 118, 132, 137], "760": 118, "76093000e": 135, "761": 118, "762": 118, "762238": 121, "762329": 137, "76249894": 104, "763": 118, "764": 118, "765": 118, "765298": 121, "766": [104, 118], "767": 118, "768": [118, 121], "769": 118, "769231": 118, "76a0a5ce1450": 41, "76bf7a927991": 52, "77": [22, 52, 67, 69, 102, 107, 108, 110, 111, 112, 113, 114, 116, 117, 118, 125, 132], "770": 118, "771": 118, "772": 118, "77237368": 104, "773": [72, 118], "774": 118, "775": 118, "776": 118, "77678046e": 135, "777": 118, "7776": 32, "77777778": 104, "777778": 118, "778": 118, "779": 118, "78": [54, 104, 107, 118, 125, 137], "780": 118, "781": 118, "781250": 118, "782": 118, "782dbd1412fe": 114, "783": 118, "784": 118, "785": 118, "785269": 132, "785280": 132, "785714": 118, "786": 118, "78673234e": 135, "787": 118, "788": 118, "78883111e": 135, "789": [27, 118], "7898": 119, "78993856e": 135, "79": [55, 107, 118, 119], "790": 118, "79018354e": 135, "79025614": 104, "791": 118, "792": 118, "79270929e": 135, "793": 118, "794": [118, 121], "795": 118, "795455": 118, "796": 118, "79671774e": 135, "797": 118, "797101": 118, "7975": [107, 108, 119], "798": 118, "79823164": 101, "799": 118, "7995": [107, 108, 119], "79998373e": 135, "7c9145eb11e9": 70, "7e786bcbd078": 47, "7f1fefd4d3f0": 30, "7fce570bf337": 67, "8": [6, 9, 12, 13, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 40, 41, 43, 46, 47, 49, 50, 51, 52, 54, 55, 62, 64, 65, 67, 68, 69, 70, 74, 76, 77, 79, 81, 97, 101, 102, 103, 104, 107, 108, 110, 111, 114, 116, 118, 121, 122, 123, 124, 125, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138], "80": [20, 22, 24, 32, 55, 97, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 126, 130, 134, 137], "800": [118, 126], "8000": 98, "80000": 107, "800000": [118, 121], "801": 14, "8036360430009386": 26, "806452": 118, "807018": 118, "80966303e": 135, "81": [18, 22, 23, 24, 30, 32, 49, 68, 107, 108, 118, 119], "812500": 118, "8138b0729954": 30, "814809": 135, "816327": 118, "816653826391969": 81, "81788758": 104, "8189": 119, "81893678": 101, "81945073e": 135, "82": [107, 108, 118, 119], "821429": 118, "82636160e": 135, "82647438e": 135, "82701252e": 135, "827153": 135, "828066": 121, "82974801e": 135, "83": [49, 107, 108, 118], "830770": 133, "83098322e": 135, "83161031e": 135, "83288998e": 135, "83319662e": 135, "8333333333333334": 70, "83464298e": 135, "835299": 126, "83727878e": 135, "83770503": 101, "83847501e": 135, "84": [78, 107, 118], "84147098": 103, "84254180e": 135, "843333": 121, "843750": 118, "846939": 118, "846976": 133, "847": 72, "84915141e": 135, "85": [69, 97, 101, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 127, 134], "850000": 126, "85051737e": 135, "851852": 118, "85505447": 101, "857142857142854": 69, "857143": 118, "85956433e": 135, "86": [38, 107, 108, 118, 119, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "8625": 131, "86299475e": 135, "863636": 118, "86635ab2cc7": 77, "869565": 118, "87": [97, 107, 108, 110, 117, 118, 119, 132], "871429": 118, "87236687": 101, "87285499e": 135, "87380356": 104, "875000": 118, "87646883e": 135, "8778": 119, "87786341e": 135, "87853325e": 135, "87970769e": 135, "88": [97, 104, 107, 108, 115, 118, 119, 125, 134], "88165065e": 135, "884058": 118, "88618684": 104, "88888889": 104, "89": [14, 20, 23, 55, 97, 107, 118, 119, 132], "8904402624046048": 129, "89380846e": 135, "894992": 135, "89632087": 101, "8b5cab780f33": 50, "8cc0f1bdc5ed": 65, "8f0bbdfdf6e5": 28, "8th": 29, "9": [6, 9, 10, 11, 12, 15, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 40, 41, 43, 46, 47, 49, 50, 51, 52, 54, 55, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 76, 77, 79, 81, 97, 100, 101, 102, 103, 104, 107, 108, 110, 114, 115, 116, 118, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139], "90": [20, 22, 23, 24, 27, 32, 49, 50, 52, 65, 66, 69, 71, 76, 97, 108, 110, 115, 117, 118, 126, 130, 134], "900": [50, 76], "900000": 121, "900000e": 27, "90093797e": 135, "90264482e": 135, "90328251e": 135, "903846": 118, "906250": 118, "90891100e": 135, "909091": 118, "90929743": 103, "91": [43, 68, 97, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121], "91174698": 104, "91348997e": 135, "91703708e": 135, "91940167": 101, "92": [97, 118, 134], "9250": [131, 133], "925926": 118, "927536": 118, "928571": 118, "92fab552c144": 55, "93": [22, 97, 118, 134], "93054890e": 135, "93082264e": 135, "93102691": 101, "93143051": 101, "94": [97, 107, 108, 118, 119, 134], "946429": 118, "947368": [118, 126], "9478274870593494": 56, "95": [97, 107, 118, 119, 124, 125, 132, 133, 134, 135], "954": 124, "95501935e": 135, "9560342718892494": 56, "95892427": 103, "95966987": 101, "96": [19, 20, 21, 22, 23, 27, 30, 45, 46, 52, 65, 76, 97, 107, 118, 125], "96052f3c0c69": 27, "96139878e": 135, "9618232": 40, "96238081e": 135, "96248829": 104, "963404": 131, "964286": 118, "966365e": 27, "96652011": 104, "96671753e": 135, "97": [27, 43, 107, 108, 118, 119, 134], "97087710e": 135, "971014": 118, "9717076499418887": 123, "97187673e": 135, "97305419e": 135, "976073": 133, "97739775e": 135, "97964329e": 135, "98": [13, 27, 107, 118, 128, 137], "980769": 118, "981": 49, "98237187e": 135, "9834262422606419": 129, "98514058e": 135, "98547": 132, "986e6d871071": 15, "987": 23, "98749888": 101, "9899925": 103, "98a1ccc168e9": 52, "99": [19, 22, 27, 30, 35, 36, 64, 66, 67, 69, 101, 107, 108, 118, 119, 125, 128, 129, 130, 131, 132, 133, 137], "99262966e": 135, "994": 130, "994177": 38, "995": 130, "996": 130, "997": 130, "99714633e": 135, "9976563219": 15, "997677": 137, "998": 130, "999": [27, 30, 50, 51, 104], "9995": [107, 108, 119], "999703": 137, "9999": [34, 40, 55], "999926": 137, "999999": [35, 36, 69], "999999999999998": 23, "999999999999999": 103, "9b450cb47d30": 28, "9b9247988596": 45, "9df797f83624": 27, "9e95083e441a": 27, "A": [6, 9, 10, 11, 12, 13, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 41, 43, 44, 45, 46, 49, 50, 52, 53, 55, 58, 59, 62, 63, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 78, 81, 97, 100, 101, 102, 104, 107, 108, 110, 111, 114, 115, 117, 118, 121, 124, 129, 130, 131, 132, 133, 134, 135, 137, 138], "AND": 79, "And": [9, 10, 22, 27, 46, 66, 70, 108, 109, 115, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "As": [6, 7, 9, 11, 13, 14, 15, 22, 23, 24, 26, 29, 30, 41, 43, 45, 46, 49, 51, 52, 58, 59, 62, 65, 66, 68, 69, 70, 73, 76, 77, 81, 82, 86, 107, 108, 109, 110, 112, 113, 116, 117, 121, 123, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 138], "At": [14, 71, 73, 81, 122, 126, 133, 135, 137], "BUT": [124, 126, 129, 131, 132, 133, 135], "Be": 9, "Being": 31, "But": [7, 10, 11, 12, 17, 20, 23, 24, 26, 27, 29, 31, 32, 46, 52, 54, 55, 60, 64, 65, 67, 69, 70, 76, 77, 79, 82, 86, 107, 108, 109, 112, 113, 114, 116, 117, 123, 124, 125, 126, 132, 133, 134, 135], "By": [13, 22, 23, 24, 34, 37, 53, 55, 62, 77, 81, 107, 108, 109, 111, 112, 113, 114, 116, 117, 119, 124, 126, 131, 132, 133, 135], "For": [2, 5, 6, 7, 10, 12, 13, 14, 15, 17, 21, 22, 23, 24, 26, 27, 36, 40, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 65, 69, 70, 71, 73, 76, 77, 78, 79, 82, 83, 86, 87, 101, 102, 103, 104, 107, 108, 109, 110, 112, 113, 116, 117, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "IN": 32, "IT": [69, 77, 108], "If": [0, 6, 9, 10, 12, 14, 17, 18, 19, 20, 22, 23, 24, 27, 29, 31, 32, 34, 36, 37, 38, 40, 43, 44, 45, 46, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 64, 65, 69, 71, 73, 76, 77, 78, 81, 84, 90, 100, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 122, 123, 125, 126, 127, 132, 133, 134, 135, 136, 137, 142, 145], "In": [8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 78, 79, 81, 90, 91, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "It": [2, 4, 6, 8, 9, 10, 11, 12, 13, 14, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 31, 32, 34, 35, 39, 43, 44, 45, 46, 49, 51, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 67, 69, 70, 73, 76, 77, 78, 79, 81, 83, 87, 100, 101, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 124, 127, 128, 129, 132, 134, 135, 136, 137, 138, 144, 145], "Its": [4, 6, 145], "NO": 31, "NOT": [70, 79, 124, 125, 145], "No": [14, 18, 22, 23, 45, 49, 64, 67, 73, 107, 108, 111, 114, 125, 128, 130, 131, 132, 133, 137], "Not": [28, 29, 30, 46, 56, 57, 70, 73, 79, 81, 100, 101, 113, 121, 130], "OR": [14, 70, 79, 121, 132], "On": [9, 11, 23, 30, 31, 43, 50, 52, 55, 73, 77, 100, 126, 133, 137], "One": [10, 13, 27, 34, 41, 55, 58, 64, 65, 76, 81, 102, 122, 123, 124, 125, 131, 133, 135], "Or": [23, 114, 115, 123, 135], "Such": [12, 23, 107, 108, 111, 115], "TO": [12, 118, 135], "That": [0, 6, 11, 17, 20, 27, 29, 43, 46, 79, 84, 123, 130, 132, 133, 134, 136, 137, 138, 142], "The": [0, 4, 6, 9, 10, 11, 12, 14, 15, 17, 20, 21, 22, 23, 24, 26, 31, 32, 34, 35, 36, 40, 41, 44, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 81, 84, 97, 98, 100, 101, 102, 103, 104, 105, 107, 109, 110, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142], "Their": 129, "Then": [24, 28, 37, 38, 39, 41, 47, 50, 51, 55, 65, 66, 76, 77, 78, 108, 124, 130, 131, 132, 135, 137], "There": [6, 7, 9, 10, 13, 14, 15, 17, 22, 23, 27, 28, 29, 31, 37, 38, 43, 45, 52, 55, 59, 63, 65, 66, 67, 70, 77, 79, 81, 82, 86, 107, 108, 110, 111, 113, 122, 123, 124, 125, 127, 129, 130, 131, 133, 134, 135, 137], "These": [5, 12, 13, 26, 27, 41, 45, 46, 52, 53, 55, 56, 62, 64, 71, 76, 79, 114, 121, 124, 125, 126, 129, 131, 133, 135, 145], "To": [5, 6, 9, 10, 13, 14, 15, 17, 19, 23, 24, 26, 27, 31, 32, 34, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 55, 57, 59, 64, 66, 67, 68, 69, 71, 73, 76, 77, 78, 79, 91, 100, 101, 103, 104, 108, 109, 111, 112, 118, 124, 125, 127, 128, 129, 131, 133, 134, 136, 137], "Will": 52, "With": [0, 6, 18, 29, 32, 46, 79, 84, 104, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 135, 136, 137, 142], "_": [10, 13, 55, 63, 65, 72, 76, 77, 78, 114, 130, 132, 136], "__": [76, 77, 79], "__add__": 79, "__and__": 79, "__bases__": 77, "__builtins__": [34, 45, 55], "__cached__": [34, 55], "__call__": 12, "__class__": [46, 76, 77], "__closure__": 11, "__d": 78, "__dict__": [13, 59, 77], "__div__": 79, "__doc__": [34, 49, 55, 64, 77], "__eq__": 79, "__file__": [34, 55], "__floordiv__": 79, "__ge__": 79, "__getitem__": [22, 107], "__gt__": 79, "__iadd__": 79, "__idiv__": 79, "__imod__": 79, "__imul__": 79, "__init__": [9, 10, 13, 47, 58, 59, 76, 77, 78, 79, 130], "__invert__": 79, "__ipow__": 79, "__isub__": 79, "__iter__": [9, 10], "__le__": 79, "__loader__": [34, 55], "__lshift__": 79, "__lt__": 79, "__main__": [59, 76, 77, 78, 79, 81], "__maxpric": 76, "__mod__": 79, "__module__": 77, "__mro__": 78, "__mul__": 79, "__name__": [34, 55, 77, 130], "__ne__": 79, "__next__": [9, 10], "__or__": 79, "__package__": [34, 55], "__peg_parser__": 63, "__pow__": 79, "__rshift__": 79, "__salari": 76, "__secretcount": 77, "__spec__": [34, 55], "__str__": [47, 79], "__sub__": 79, "__truediv__": 79, "__version__": [59, 100, 105], "__weakref__": [59, 77], "__xor__": 79, "_add_numeric_oper": 107, "_age": 65, "_age_": 114, "_ax": 130, "_classname__attrnam": 77, "_decor": [114, 124, 130], "_drop_axi": 111, "_if": 65, "_indentation_": 17, "_init_": 46, "_io": 43, "_justcounter__secretcount": 77, "_m": 62, "_m_m_m_m_m_m_m_m_m": 62, "_marks_": 114, "_name_": 114, "_sinplot_": 122, "_strptime": 36, "_strptime_datetim": 36, "_temperatur": 13, "_transform_index": 114, "_y": 133, "a04242241123": 27, "a1": 129, "a2": 129, "a3": 129, "a3e12f": 55, "a8dfd56d4d8": 45, "a_copi": 102, "a_g_": 65, "aa": 14, "aabbcc": 97, "aabc": 14, "ab": [6, 14, 28, 34, 43, 105, 127, 133, 136], "ab123csd": 14, "abacu": 14, "abbrevi": [27, 35, 36, 37, 115, 124, 130, 131], "abc": [14, 22, 28, 29, 69], "abc12d": 14, "abc12de23f456": 14, "abcdef": 97, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 55, "abil": [27, 76, 78, 130], "abl": [5, 9, 11, 52, 68, 71, 78, 122, 125, 129, 131, 132, 133, 135, 136], "abnorm": 24, "abomasnow": 118, "abomasnowmega": 118, "abort": 24, "about": [0, 2, 6, 7, 9, 11, 12, 13, 14, 15, 17, 22, 26, 27, 28, 29, 30, 31, 32, 34, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 57, 59, 63, 64, 65, 66, 67, 68, 69, 71, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 101, 102, 104, 107, 108, 122, 123, 124, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 142], "abov": [6, 9, 10, 11, 12, 13, 14, 15, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 41, 43, 45, 46, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 64, 65, 66, 68, 71, 76, 77, 78, 79, 81, 100, 102, 107, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 123, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "abra": 118, "abruptli": [22, 23], "absenc": 26, "absol": 118, "absolmega": 118, "absolut": [6, 11, 13, 17, 49, 57], "absolute_valu": 49, "abstract": [45, 76, 129, 131, 132, 135], "abus": 11, "abxz": 14, "abyss": 14, "ac": 14, "academ": 108, "acc": 102, "accelgor": 118, "accent": 127, "accent_r": 127, "accept": [27, 47, 77, 83, 87, 121, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "access": [6, 11, 13, 20, 31, 35, 40, 43, 45, 49, 50, 51, 54, 55, 57, 58, 59, 64, 67, 70, 71, 76, 78, 81, 100, 101, 102, 107, 108, 109, 110, 124, 125, 132], "access_level": 20, "accessor": 107, "accident": 76, "acco": 118, "accomplish": [27, 31, 32, 37, 69], "accord": [20, 49, 60, 70, 79, 135, 137, 138], "accordingli": [23, 43, 71, 122, 124, 125, 126, 135], "account": [12, 129, 133], "account_bal": 76, "account_info": 76, "accur": [19, 20, 26, 57, 67, 126], "acd": 14, "acdbea": 14, "ach": 14, "achiev": [24, 76, 79, 115, 122, 123, 126, 127, 132, 135], "achiv": 27, "acm": 72, "aco": [55, 57], "acordingli": 135, "acosh": [55, 57], "acquaint": [125, 126, 134, 135, 136, 137], "acquir": [76, 78], "acronym": 27, "across": [81, 107, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137], "act": [6, 12, 17, 50, 59, 70, 76, 77, 130, 136], "action": [17, 29, 46, 49, 62, 76, 81, 107, 123, 137], "activ": [6, 39, 137, 144], "actual": [9, 10, 12, 13, 27, 41, 43, 47, 52, 65, 67, 77, 78, 79, 81, 98, 103, 107, 115, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145], "ad": [6, 12, 13, 14, 22, 24, 26, 28, 29, 31, 39, 45, 49, 68, 69, 78, 103, 104, 107, 108, 109, 115, 117, 121, 122, 123, 125, 130, 131, 132, 133, 135], "adapt": [128, 132, 135, 136, 137], "add": [6, 11, 12, 14, 15, 19, 20, 22, 23, 29, 31, 32, 45, 46, 49, 51, 52, 54, 55, 60, 64, 65, 66, 68, 69, 70, 76, 77, 78, 79, 97, 98, 100, 103, 104, 107, 108, 109, 114, 117, 122, 125, 126, 127, 128, 130, 132, 133, 134, 135, 136, 137, 139], "add_": [7, 82, 86], "add_6_and_3": 63, "add_all_num": 49, "add_binari": 59, "add_collect": 130, "add_expens": 76, "add_incom": 76, "add_item": 49, "add_legend": [136, 137], "add_legend_data": 130, "add_patch": 129, "add_prefix": 114, "add_skil": 76, "add_suffix": 114, "add_ten": [11, 49], "add_two_num": 32, "add_two_numb": [49, 52], "adder": 15, "addit": [6, 8, 15, 26, 46, 49, 52, 54, 59, 65, 68, 69, 70, 76, 78, 79, 100, 122, 123, 125, 126, 130, 132, 135, 140], "addition": [5, 76, 126, 133, 135, 136, 137], "address": [20, 22, 30, 43, 65, 133], "adienc": 136, "adjust": [70, 129, 130, 131, 134, 135], "admin": 20, "adopt": 65, "adult_mal": [131, 133], "advanc": [6, 24, 52, 65, 122, 133], "advantag": [9, 73, 122, 132], "advers": 133, "adversari": 144, "advic": 133, "advis": [55, 65, 126, 133], "aegislashblad": 118, "aegislashshield": 118, "aerodactyl": 118, "aerodactylmega": 118, "aesthet": [121, 123, 124, 125, 126, 130, 133, 135, 137, 140], "af0f59439c9b": 11, "affect": [50, 107, 126], "afford": 122, "afmhot": 127, "afmhot_r": 127, "afoo": 14, "afootbal": 14, "afootest": 14, "after": [9, 14, 20, 22, 23, 24, 26, 27, 28, 29, 40, 41, 43, 45, 46, 49, 50, 51, 52, 55, 59, 63, 64, 65, 67, 68, 69, 73, 77, 79, 81, 102, 103, 104, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 127, 132, 137], "ag": [15, 19, 20, 22, 27, 28, 30, 45, 46, 49, 52, 55, 59, 65, 69, 70, 76, 77, 78, 81, 97, 107, 108, 110, 111, 112, 113, 114, 116, 117, 121, 123, 126, 130, 131, 133, 137], "again": [18, 23, 28, 41, 43, 45, 47, 53, 55, 76, 78, 79, 81, 121, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "against": [14, 103, 108, 115, 123, 125, 126, 130, 136, 137], "age_": 65, "agenda": [121, 123, 125, 132, 135], "agg": [107, 119], "aggfunc": 107, "aggreg": 135, "aggron": 118, "aggronmega": 118, "agre": 123, "ahead": [123, 126], "ai": [6, 90, 133, 145], "aid": 136, "aim": [107, 111, 134], "aipom": 118, "airlin": 138, "alakazam": 118, "alakazammega": 118, "alan": [22, 23, 49, 52, 108], "alan99": 24, "alan99whit": 23, "alfa": [107, 108, 119], "algebra": [5, 100, 126, 144], "algorithm": [5, 22, 78, 125, 136, 144, 145], "alia": 14, "align": [7, 27, 82, 86, 98, 107, 126], "alina": 97, "aliv": [131, 133], "all": [0, 6, 9, 10, 11, 13, 14, 20, 21, 22, 23, 24, 26, 29, 31, 34, 35, 36, 41, 43, 44, 45, 46, 47, 49, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 81, 84, 100, 101, 102, 103, 104, 107, 108, 109, 110, 115, 116, 117, 118, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 145], "all_even": 10, "all_kei": 30, "allan": 27, "allclos": 105, "alll": 98, "alloc": [54, 76, 135], "allow": [2, 4, 6, 11, 12, 13, 14, 15, 17, 20, 22, 23, 26, 28, 29, 45, 46, 51, 52, 64, 65, 66, 69, 70, 76, 77, 78, 79, 81, 83, 87, 102, 103, 107, 108, 114, 115, 116, 124, 127, 131, 132, 136, 137], "almost": [6, 125, 134, 135], "aloha": 121, "alomomola": 118, "alon": [129, 131, 133], "along": [12, 22, 45, 46, 49, 52, 54, 55, 59, 77, 78, 81, 100, 101, 103, 122, 125, 127, 129, 130, 132, 134, 135, 145], "alow": 24, "alpha": [56, 65, 124, 126, 127, 128, 129, 130, 132, 137], "alphabet": [23, 24, 27, 51, 55, 66], "alphanumer": 27, "alreadi": [5, 11, 12, 20, 27, 28, 31, 43, 45, 55, 60, 73, 81, 107, 108, 117, 125, 126, 127, 129, 130, 131, 132, 134, 135, 137], "alright": 128, "also": [0, 1, 6, 7, 9, 10, 11, 12, 13, 17, 18, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 49, 50, 51, 52, 54, 55, 58, 59, 62, 64, 65, 66, 68, 69, 70, 71, 73, 76, 77, 78, 81, 82, 84, 86, 98, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 145], "altaria": 118, "altariamega": 118, "alter": [12, 17, 67, 107, 122, 125, 127, 129, 130, 132, 133, 134, 135], "altern": [11, 27, 43, 52, 55, 66, 111, 114, 132, 135, 137], "although": [11, 49, 50, 54, 58, 70, 71, 77, 122, 123, 124, 130, 131, 135, 136], "alu": 43, "alwai": [6, 9, 17, 18, 46, 47, 49, 55, 56, 57, 60, 62, 63, 64, 68, 70, 71, 77, 78, 81, 102, 107, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135], "am": [12, 14, 27, 31, 35, 36, 50, 59, 69, 81, 122, 125, 127, 129, 130, 131, 132, 133, 135, 137], "amaura": 118, "amaz": [26, 137], "amazon": 27, "amber": 124, "ambigu": 60, "ambipom": 118, "amd": 73, "amd64": 6, "amelia": 81, "america": [34, 38, 43], "american": 121, "ami": [15, 22, 77], "among": [20, 41, 77, 124, 125, 133, 134, 137], "amoonguss": 118, "amount": [17, 19, 47, 64, 67, 73, 100, 126, 130, 131, 132, 137], "ampharo": 118, "ampharosmega": 118, "ampl": 135, "an": [4, 6, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 35, 39, 40, 41, 43, 44, 45, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 78, 79, 81, 87, 100, 101, 102, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "anaconda": [55, 100, 122], "anaconda3": [36, 55, 111, 114, 115, 116, 121, 124, 128, 130], "analog": [58, 107], "analys": [73, 90, 122], "analysi": [39, 73, 107, 108, 111, 118, 119, 121, 122, 124, 125, 129, 130, 131, 133, 134, 135, 137, 138, 144], "analyst": [107, 115, 123], "analyt": [107, 125], "analyz": [46, 73, 97, 98, 107, 108, 109, 112, 113, 115, 118, 119, 129, 137], "anana": 14, "angl": 57, "ani": [0, 4, 6, 9, 10, 12, 13, 21, 22, 23, 24, 26, 27, 29, 31, 32, 39, 45, 46, 50, 51, 52, 53, 54, 55, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 84, 91, 100, 101, 103, 104, 107, 111, 112, 113, 114, 116, 117, 122, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 145], "anim": 78, "anlayt": 145, "anniversari": 14, "annoi": 104, "annot": [123, 132, 133, 136], "annotate_ax": 130, "annual": [6, 108, 126], "anomali": 144, "anonym": [4, 10, 32, 61], "anorith": 118, "anoth": [4, 10, 11, 12, 19, 20, 21, 22, 23, 24, 26, 27, 28, 31, 32, 37, 43, 45, 49, 50, 51, 55, 58, 59, 63, 64, 66, 68, 69, 70, 71, 76, 77, 78, 97, 102, 103, 107, 108, 109, 116, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "anscomb": [125, 127], "answer": [26, 135], "antibiot": 22, "anuko": 27, "anukool": [27, 44], "any_fun": 59, "anymor": 136, "anyon": [27, 65], "anyth": [6, 18, 27, 49, 77, 81, 111, 114, 116, 117, 122, 129, 132, 137], "anytim": 123, "anywai": [19, 131, 132, 136], "anywher": [14, 127], "apart": [6, 28, 103, 126, 129, 135], "api": [111, 114], "app": 124, "appart": 24, "appdata": 55, "appeal": [122, 123, 133], "appear": [27, 50, 51, 54, 59, 64, 78, 122, 124, 125, 126, 133, 137], "appen": 104, "append": [6, 22, 32, 43, 46, 49, 54, 55, 59, 69, 76, 100, 104, 107, 114, 116, 119, 125, 127, 128, 129, 130, 137], "appl": [14, 22, 27, 28, 30, 31, 66, 67, 70, 77, 109, 133], "appli": [6, 12, 13, 45, 54, 110, 111, 113, 114, 115, 117, 124, 125, 129, 132, 134, 135, 136, 137], "applic": [4, 14, 26, 27, 39, 43, 55, 58, 76, 77, 91, 103, 108, 114, 129, 144, 145], "approach": [8, 76, 103, 111, 114, 136, 137], "appropri": [18, 19, 20, 21, 26, 36, 49, 124, 129], "approxim": [26, 134, 135], "apr": 62, "april": [20, 24], "apython": 14, "ar": [0, 5, 6, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 56, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 81, 83, 84, 87, 90, 98, 101, 102, 103, 104, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 145], "arab": 43, "arang": [97, 100, 102, 103, 105, 137, 138], "arbitrari": [30, 31, 46, 49, 81, 102, 107, 124], "arbok": 118, "arc": 57, "arcanin": 118, "arceu": 118, "archen": 118, "archeop": 118, "arctan2": 105, "arcx": 27, "arcxarcx": 27, "area": [49, 65, 70, 76, 78, 126, 132, 135, 136], "area_of_circl": [49, 65], "aren": [32, 131, 133, 135], "arg": [12, 16, 24, 36, 46, 52, 81, 114, 124, 127, 130, 136], "arg1": [32, 52], "arg2": 32, "arg3": 32, "argentina": 97, "argmax": 105, "argmin": 105, "argpartit": 105, "argsort": 105, "argument": [4, 9, 10, 12, 13, 14, 15, 27, 31, 32, 34, 35, 36, 40, 41, 43, 44, 45, 47, 50, 54, 55, 59, 61, 65, 77, 81, 97, 101, 104, 122, 123, 124, 125, 126, 128, 131, 135, 137], "argument1": 55, "argument2": 55, "argument_list": 54, "argv": 55, "ariado": 118, "aris": [12, 23], "arithmet": [13, 26, 45, 49, 76, 79, 103], "arm": [73, 121], "armaldo": 118, "arnold": 121, "aromatiss": 118, "aron": 118, "around": [27, 52, 59, 67, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "arr": [12, 101, 103], "arrai": [4, 6, 7, 22, 27, 30, 32, 43, 49, 55, 82, 86, 106, 107, 125, 126, 127, 129, 135, 136, 137, 138], "arrang": [44, 118, 125, 130, 133, 134], "array_equ": [100, 105], "arriv": [129, 132], "arrow": 45, "arrrai": 107, "arsen": [135, 136, 137], "art": 24, "arthur": [12, 15, 20, 22, 30, 32, 49, 52, 69, 76, 77, 78], "arthurhunt": 15, "articl": [23, 38, 39, 40, 41, 51, 52, 81, 107, 108, 111, 113, 114, 126], "articuno": 118, "artifici": [133, 144], "artificial_intellig": 133, "artist": 130, "as_cmap": 124, "as_strid": 105, "asabeneh": [6, 43], "ascend": [107, 118, 119], "ascii": [27, 43], "ascii_lett": 55, "ascontiguousarrai": 105, "asian": [29, 121], "asian_countri": 29, "asid": 133, "asin": [55, 57], "asinh": [55, 57], "ask": [6, 10, 17, 26, 47, 69, 135], "aspect": [76, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 134, 135, 136, 137], "assaria": 121, "assert": [45, 46, 63, 64], "assertionerror": 45, "assess": 134, "assign": [11, 12, 13, 22, 27, 28, 29, 30, 31, 32, 37, 45, 50, 51, 52, 54, 59, 64, 66, 67, 68, 71, 72, 76, 79, 81, 107, 108, 111, 114, 116, 117, 122, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137], "assist": [124, 136], "associ": [30, 55, 59, 64, 65, 71, 77, 123, 126, 130, 131, 135, 137], "assum": [13, 70, 111, 124], "assumpt": [126, 135], "assur": [129, 131, 135], "asterisk": [15, 52, 55], "astyp": [100, 104, 105, 107, 132, 137], "async": 63, "atan": [55, 57], "atan2": [55, 57], "atanh": [55, 57], "ath": 14, "atk": 118, "atlanta": 78, "atlanti": 15, "atleast": 127, "atleast_2d": 105, "atmospher": 123, "attach": [11, 13, 24, 65, 76, 107, 123, 124, 125, 126, 127, 130, 132, 134, 135, 137], "attack": [118, 121], "attain": 133, "attempt": [123, 131, 135], "attent": [130, 132, 137], "attr": [77, 78], "attract": [69, 122], "attrib": 43, "attribut": [11, 12, 13, 14, 31, 34, 40, 45, 47, 49, 55, 57, 64, 69, 76, 78, 81, 103, 111, 114, 127, 129, 130, 135], "attributeerror": [31, 76, 77, 78, 130, 135], "attributemethod": 64, "audi": [107, 108, 119], "audienc": 136, "audino": 118, "audinomega": 118, "audio": [6, 137], "aug": 62, "augmentedassign": 64, "august": 20, "auroru": 118, "australia": [97, 126], "auto": [118, 119], "autom": [6, 22, 23], "automat": [9, 10, 13, 26, 55, 65, 68, 76, 77, 81, 107, 122, 123, 126, 128], "automobil": 107, "automobile_data": [107, 108, 119], "automobile_data1": 119, "autopct": [97, 98], "autoregress": 135, "autumn": [20, 49, 121, 127], "autumn_r": 127, "ava": 43, "avail": [26, 27, 28, 29, 31, 43, 55, 57, 59, 62, 64, 66, 67, 69, 71, 78, 79, 103, 107, 113, 114, 123, 124, 125, 126, 132, 133, 135, 136, 137], "avalugg": 118, "averag": [22, 28, 49, 98, 107, 108, 126, 131, 135, 137], "avg": 118, "avocado": 70, "avoid": [11, 20, 21, 24, 31, 32, 43, 53, 58, 68, 76, 101, 111, 126, 135], "avov": [126, 127], "awai": [6, 14, 65, 122, 125, 126, 131, 133], "await": [63, 123], "awar": [43, 126, 130], "award": 135, "awesom": [6, 127], "awhil": 65, "awk": 6, "ax": [7, 82, 86, 111, 114, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "ax1": [136, 138], "ax2": 136, "ax4": 136, "ax5": 136, "ax6": 136, "ax_joint": 126, "axarr": 98, "axes_styl": [122, 133], "axessubplot": [121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135, 138], "axew": 118, "axhlin": 137, "axi": [14, 97, 98, 100, 101, 103, 104, 107, 113, 118, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "axis_nam": 111, "axisgrid": [123, 125, 126, 127, 128, 131, 134, 135, 136, 137], "axz": 14, "ax\u00b2": 49, "az": 121, "azelf": 118, "azumaril": 118, "azuril": 118, "b": [12, 20, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 43, 44, 46, 49, 50, 51, 52, 55, 56, 57, 59, 65, 66, 67, 69, 70, 71, 77, 78, 79, 81, 97, 100, 101, 102, 103, 107, 108, 110, 111, 112, 113, 114, 117, 121, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "b1": 79, "b2": 79, "b312893cfb9a": 30, "b334ef": 55, "b3ac65e67ae9": 50, "b4c816180ad9": 69, "b72af0bfcd83": 28, "b8ab82a1062c": 52, "b8eab4452d4b": 77, "b942612e6b6a": 28, "b951d4fef2c8": 46, "b977fb738e16": 76, "babydog": 78, "bac": 14, "back": [27, 44, 52, 69, 73, 79, 90, 100, 107, 111, 114, 115, 116, 117, 118, 123, 130, 131, 132, 133, 134, 135], "back_end": 28, "backend": [122, 125, 137], "background": [10, 122, 124, 126, 132, 133, 135], "backlash": 14, "backslash": [27, 44, 64, 66], "backspac": 27, "backward": [13, 23, 27, 44, 67, 81, 132], "bad": [46, 107, 131], "bag": 65, "bagon": 118, "baidu": [52, 65], "ball": [22, 30, 66], "baltoi": 118, "banana": [14, 20, 22, 28, 31, 46, 66, 67, 69, 70, 109], "band": 135, "bandwidth": [128, 132, 135], "banett": 118, "banettemega": 118, "bangladesh": [43, 126], "bank": 130, "bar": [14, 28, 30, 51, 123, 129, 130, 131, 132, 134, 135, 137, 140], "bar1": 133, "bar2": 133, "bar3": 133, "barack": 43, "barbaracl": 118, "barboach": 118, "barcelona": 97, "barchart": 97, "bare": 145, "bark": 78, "barn": 15, "barplot": [122, 129, 133, 134], "basculin": 118, "base": [0, 1, 6, 22, 23, 24, 26, 27, 32, 34, 35, 36, 40, 45, 46, 47, 53, 55, 57, 58, 68, 69, 70, 73, 76, 77, 78, 81, 84, 90, 104, 107, 108, 110, 111, 118, 119, 124, 126, 127, 132, 133, 135, 137, 138, 141, 142, 143], "base1": 78, "base2": 78, "baseclass": [76, 78], "baselin": 133, "baseto": 55, "basi": [6, 27, 28, 125, 127, 128, 129, 131], "basic": [5, 12, 13, 14, 24, 26, 40, 47, 51, 55, 76, 103, 107, 124, 125, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 144, 145], "basicli": 29, "basicmethod": 64, "bastiodon": 118, "bat": 78, "bathingsoap": 98, "bathingsoapsalesdata": 98, "battl": 27, "bayleef": 118, "baz": 28, "bb": 14, "bb99b9cebaa8": 30, "bc9e07fcbe69": 31, "bcaaeab6bf17": 68, "beak": 22, "bear": 19, "beartic": 118, "beauti": [14, 62, 121, 135], "beautifi": 43, "beautifli": 118, "beautifulli": 130, "beautifulsoup": 6, "becasu": 63, "becaus": [6, 10, 12, 22, 23, 24, 27, 35, 45, 46, 49, 50, 51, 52, 54, 62, 63, 64, 65, 66, 67, 68, 70, 76, 77, 78, 81, 108, 110, 111, 112, 113, 114, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "becom": [10, 13, 22, 23, 27, 50, 81, 107, 108, 109, 135], "bee": 129, "beedril": 118, "beedrillmega": 118, "been": [14, 24, 27, 28, 29, 30, 31, 43, 45, 46, 59, 65, 77, 81, 90, 105, 121, 123, 124, 125, 126, 129, 130, 132, 134, 135, 136, 137], "beeswarm": [129, 130], "befor": [10, 11, 12, 13, 15, 22, 23, 26, 32, 34, 40, 41, 44, 46, 50, 51, 52, 54, 59, 68, 73, 77, 78, 81, 104, 107, 108, 109, 111, 112, 113, 114, 116, 117, 121, 123, 124, 125, 126, 127, 131, 132, 133, 135, 136, 137, 145], "beforehand": 23, "began": 137, "begin": [7, 13, 22, 27, 28, 29, 40, 43, 55, 59, 64, 65, 77, 79, 81, 82, 86, 116, 117, 118, 121, 122, 123, 125, 126, 127, 129, 130, 131, 133, 134, 135, 137], "beginn": [4, 62, 73, 125, 131, 132, 145], "behav": [43, 66, 79, 81, 103], "behavior": [26, 59, 76, 77, 78, 81, 112, 116, 117, 125], "behaviour": 70, "beheeyem": 118, "behind": [5, 53, 54, 129, 132, 134, 137], "being": [6, 13, 14, 23, 28, 30, 31, 49, 52, 67, 76, 78, 83, 87, 122, 125, 126, 127, 129, 131, 133, 135, 136], "beldum": 118, "belgium": [97, 126], "believ": [130, 135], "bell": 27, "bella": [22, 76, 77, 81], "bellossom": 118, "bellsprout": 118, "belong": [26, 66, 67, 76, 77], "below": [8, 10, 12, 13, 18, 19, 22, 23, 24, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 49, 52, 53, 55, 58, 59, 62, 63, 65, 66, 67, 69, 70, 76, 78, 79, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 126, 128, 136, 137, 138], "ben": 76, "bend": 125, "benefici": [65, 110], "benefit": [27, 55, 78], "benz": 119, "bergmit": 118, "bert": 144, "besid": 100, "best": [6, 10, 12, 22, 24, 27, 28, 43, 60, 73, 98, 124, 125, 126, 127, 129, 132, 135], "beta": [56, 125], "betavari": 56, "better": [11, 14, 17, 22, 23, 41, 59, 64, 73, 78, 79, 81, 97, 98, 107, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 144], "between": [12, 14, 22, 23, 24, 26, 27, 28, 29, 31, 39, 43, 53, 55, 56, 59, 69, 70, 77, 81, 103, 104, 107, 122, 123, 124, 125, 126, 127, 131, 132, 133, 134, 135, 136, 137, 138], "beverag": 29, "beyond": [131, 135], "bfc5aa62a0ff": 70, "bfoo": 14, "bia": 144, "bibarel": 118, "bibl": 123, "bidoof": 118, "big": [135, 136, 137, 144, 145], "bigger": [13, 19, 31, 69, 102, 127, 129, 136], "biggest": [101, 122], "bill": [12, 22, 27, 32, 49, 52, 125, 126, 129, 130, 131, 132, 135, 137], "bin": [44, 59, 70, 97, 123, 126, 128, 132, 133, 137], "binacl": 118, "binari": [26, 27, 43, 59, 64, 66, 69, 70, 73, 127], "binary_r": 127, "binary_sum": 59, "bind": [71, 77, 130], "binder": 6, "binomi": 126, "bird": [30, 76, 78], "birth": [14, 126], "birth_year": [49, 52, 65], "birthdai": 49, "bisharp": 118, "bit": [6, 29, 56, 70, 73, 123, 127, 138], "bitwis": [64, 79], "bivarait": 126, "bivari": [128, 134, 137], "bject": 43, "black": [121, 129, 130, 133], "blank": 59, "blastois": 118, "blastoisemega": 118, "blaziken": 118, "blazikenmega": 118, "blend": 137, "blind": 124, "blissei": 118, "blitzl": 118, "blob": 136, "block": [0, 17, 18, 19, 20, 21, 22, 23, 24, 43, 46, 49, 64, 76, 84, 107, 128, 135, 138, 142], "blog": [39, 81], "blood": [78, 135], "blood_pressur": 135, "blu": 76, "blue": [22, 64, 97, 124, 125, 127, 130, 138], "blueprint": [76, 77, 81], "blues_r": 127, "bmv": 119, "bmw": [78, 119], "bob": 65, "bodi": [9, 18, 19, 20, 21, 22, 23, 24, 49, 50, 54, 64, 76, 78, 107, 108, 118, 119, 121], "body_camera": 121, "bokeh": 126, "bold": [97, 132, 133, 135, 137], "bolder": 137, "boldor": 118, "bond": [27, 69], "bone": 127, "bone_r": 127, "bonsli": 118, "bonu": 133, "book": [0, 1, 2, 7, 65, 79, 82, 83, 84, 86, 87, 124, 133, 141, 142, 143], "bookmark": 134, "bool": [77, 78], "bool_a": 102, "bool_idx": 102, "boolean": [12, 20, 27, 55, 64, 77, 100, 101, 107, 111, 112, 113, 114, 116, 117], "boost": 29, "booster": 123, "boot_trac": 135, "bootstrap": [133, 135], "boottel": 44, "bore": 24, "born": [14, 46], "borrow": 81, "both": [10, 12, 14, 19, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 40, 43, 44, 46, 50, 51, 55, 64, 66, 70, 71, 76, 78, 81, 83, 87, 103, 107, 108, 109, 111, 114, 122, 123, 125, 126, 130, 132, 133, 137], "bother": [123, 125], "bottl": 27, "bottom": [6, 102, 107, 123, 131, 133, 135], "bottom_plot": 133, "bottombar": 133, "bottomrow": 110, "bouffal": 118, "bound": [11, 12, 45, 56, 73, 77, 107, 130], "box": [83, 87, 132, 133, 134, 135, 137, 140], "boxen": 135, "boxenplot": 135, "boxplot": [97, 122, 124, 129, 130, 131, 132, 135, 137], "boxprop": [97, 129], "bp": 97, "brace": [27, 30, 31, 64, 67, 69], "bracket": [10, 18, 22, 23, 27, 28, 29, 30, 32, 64, 66, 67, 101, 102], "brain": 136, "braixen": 118, "brand": 137, "braviari": 118, "brazil": [43, 97], "brbg": 127, "brbg_r": 127, "bread": 27, "break": [4, 9, 17, 25, 46, 47, 49, 55, 63, 64, 66, 69, 136, 137], "breakdown": 129, "breed": 30, "breez": 131, "breloom": 118, "breviti": 102, "brew": 124, "brewer": 124, "brg": 127, "brg_r": 127, "brief": [40, 43, 56, 57, 77, 104], "briefli": 124, "bright": 124, "brilliant": 27, "bring": [27, 43, 125, 127, 131, 133, 137], "broader": [130, 135], "broadli": 45, "brock": 121, "broken": [13, 53], "bronzong": 118, "bronzor": 118, "brooklyn": 130, "brother": 76, "brown": [121, 124], "browser": [6, 124], "bruce": 52, "bruyn": 97, "bsd": [107, 118, 119], "btw": 100, "buck": 121, "bucket": 124, "budew": 118, "bue": 138, "buffer": 43, "bug": 118, "bugn": 127, "bugn_d": 133, "bugn_r": 127, "build": [6, 10, 13, 14, 76, 77, 83, 87, 107, 122, 128, 130, 144], "built": [0, 6, 9, 11, 13, 22, 24, 26, 32, 43, 46, 47, 49, 54, 59, 60, 62, 64, 65, 69, 71, 76, 78, 79, 84, 98, 107, 111, 114, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 142], "builtin": [6, 59], "buizel": 118, "bulbasaur": 118, "bulk": 129, "bunch": [27, 123], "buneari": 118, "bunnelbi": 118, "bupu": 127, "bupu_r": 127, "burlington": 121, "burmi": 118, "busi": [6, 107, 125, 130, 133], "bussi": 6, "butter": 27, "butterfre": 118, "bw": [132, 134], "bwmeq": 55, "bwr": [127, 134], "bwr_r": 127, "bx": [49, 126], "bypass": 24, "byte": [43, 44, 107], "c": [4, 6, 12, 13, 14, 20, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 38, 43, 44, 45, 46, 49, 54, 55, 57, 63, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 78, 81, 97, 98, 101, 102, 103, 104, 107, 111, 112, 113, 114, 115, 116, 118, 119, 121, 124, 126, 128, 129, 130, 131, 133, 138], "c0": [123, 124], "c00e5d7d3c3": 45, "c02acf54079b": 119, "c1": [77, 78, 124], "c2": 124, "c3": 124, "c3f637926d7e": 43, "c4": 124, "c454c1331524": 47, "c5": 124, "c6": 124, "c7": 124, "c761920b81b0": 46, "c8": 124, "c8f749f7a9ca": 119, "c9": 124, "c92d9f2b36de": 67, "c_name": 78, "ca": [14, 121], "cab": [14, 135], "cabbag": 46, "cabxz": 14, "cach": 130, "cacnea": 118, "cacturn": 118, "cad": 6, "calcul": [18, 22, 24, 26, 39, 49, 57, 64, 65, 69, 70, 76, 78, 81, 107, 122, 124, 126, 128, 129, 130, 132, 133, 135], "calcula": 5, "calculate_ag": [49, 52], "calculate_area": 76, "calculate_mean": 49, "calculate_median": 49, "calculate_mod": 49, "calculate_rang": 49, "calculate_slop": 49, "calculate_std": 49, "calculate_vari": 49, "calculu": 144, "calendar": 135, "call": [2, 6, 9, 10, 11, 12, 13, 14, 15, 17, 21, 22, 23, 27, 28, 29, 30, 31, 32, 36, 41, 43, 45, 46, 47, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 81, 83, 87, 102, 109, 110, 111, 114, 116, 117, 122, 124, 130, 132, 133, 135, 136, 137, 138], "callabl": [9, 12, 30, 55, 114, 130, 132], "callablemethod": 64, "callback": 12, "caller": 10, "cambridg": 132, "camelcas": 65, "camera": 121, "camerupt": 118, "cameruptmega": 118, "can": [0, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 82, 84, 86, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 145], "canada": 97, "candi": 77, "canidaefamili": 78, "cannon": 70, "cannot": [10, 12, 13, 15, 22, 24, 26, 27, 29, 30, 31, 36, 43, 45, 46, 50, 51, 52, 54, 55, 63, 65, 66, 67, 68, 69, 70, 73, 76, 81, 104, 108, 111, 113, 121, 127, 133], "canon": 6, "cap": 133, "capabl": [14, 137], "capit": [12, 27, 49, 55, 65], "capital_c": 65, "capitalis": 27, "capitalize_list_item": 49, "capsiz": 133, "captial": 27, "captur": [46, 56, 70], "capword": [55, 65], "car": [77, 78, 107, 108, 121], "car_horsepow": 119, "car_info": 78, "car_manufactur": 119, "car_pric": 119, "carbink": 118, "care": [9, 43, 103, 107, 125, 126, 135, 138], "carefulli": 24, "carnivin": 118, "carpricedf": 119, "carracosta": 118, "carri": [26, 31, 70, 79, 117], "carriag": 27, "carrot": 46, "carsdf": 119, "carsdf1": 119, "carsdf2": 119, "carshorsepowerdf": 119, "carson": 52, "carter": 76, "carvanha": 118, "cascoon": 118, "case": [11, 12, 14, 17, 18, 19, 22, 24, 26, 27, 30, 31, 41, 45, 46, 55, 63, 64, 65, 66, 69, 70, 71, 73, 76, 78, 81, 91, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 144], "cast": 101, "castform": 118, "cat": [22, 66, 67, 81, 127], "cat1": 81, "cat2": 81, "cat_po": 130, "catch": [17, 47, 132, 137], "cateat": 97, "categor": [55, 107, 108, 121, 124, 125, 128, 131, 132, 133, 134, 135, 136, 137, 140], "categori": [17, 26, 45, 67, 118, 121, 124, 127, 129, 133, 136], "categoricalindex": 107, "categorize_countri": 12, "category_point": [125, 127], "caterpi": 118, "cathi": 22, "catplot": 135, "caught": [9, 24, 46], "caus": [12, 13, 24, 31, 43, 45, 46, 47, 62], "cautiou": 137, "cb8ac02fbcd3": 45, "cbar": 138, "cbook": 130, "cd": 55, "cde": 14, "cdn": 97, "ceil": [55, 57, 105], "celebi": 118, "cell": [6, 11, 50, 122, 138], "cell_cont": 11, "celsiu": 13, "center": [27, 46, 69, 104, 123, 128, 131, 132, 133, 136], "centimetr": 121, "centr": 125, "central": [76, 121, 125, 129, 131, 132, 133, 135], "centuri": [35, 36], "certain": [14, 17, 24, 27, 28, 29, 36, 38, 45, 46, 55, 60, 65, 107, 122, 131], "certainli": [65, 123, 126, 129, 132, 133, 135, 136], "ch": [22, 32], "chaang": 118, "chain": [20, 65, 70, 78, 108, 111, 112, 117], "chairman": 135, "challeng": [27, 77, 136], "chandelur": 118, "chandler": 121, "chang": [4, 6, 12, 18, 22, 23, 26, 31, 32, 39, 45, 46, 49, 50, 51, 52, 55, 67, 68, 69, 73, 76, 77, 78, 79, 97, 101, 102, 104, 107, 110, 111, 112, 113, 114, 116, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "change_to_upp": 12, "chansei": 118, "chapter": 27, "char": [10, 22, 66], "charact": [6, 12, 17, 22, 23, 24, 35, 36, 43, 55, 62, 64, 65, 67, 69, 114, 122], "characterist": [31, 76, 118, 119, 135], "charcter": 27, "charizard": 118, "charizardmega": 118, "charmand": 118, "charmeleon": 118, "chart": [133, 135, 136], "chase": 121, "chatot": 118, "chdir": 55, "che": 14, "cheat": [99, 106, 120], "check": [7, 10, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 43, 46, 49, 51, 55, 65, 67, 70, 76, 77, 78, 82, 86, 104, 107, 112, 116, 122, 124, 126, 127, 130, 135, 137], "check_season": 49, "check_text_similar": 43, "checkbox": 6, "checkpoint": 118, "chelsea": 137, "cher": 14, "cherbourg": [131, 133], "cherrim": 118, "cherubi": 118, "chesnaught": 118, "chespin": 118, "chevrolet": 119, "chikorita": 118, "child": [43, 76, 78, 131], "childmethod": 78, "children": 133, "chimchar": 118, "chimecho": 118, "china": [12, 28, 29, 32, 43], "chinchou": 118, "chines": 43, "ching": 14, "chingl": 118, "chirag": 77, "choic": [20, 26, 55, 56, 105, 124, 125, 126, 128, 129, 130, 131, 135], "choos": [46, 101, 107, 108, 124, 125, 130, 131, 133, 135, 136, 138], "choose_colorbrewer_palett": 124, "choose_cubehelix_palett": 124, "chose": [6, 126], "chosen": [56, 130, 137], "chp": 27, "chracter": 69, "chronometri": 135, "chunk": [49, 118, 124, 125, 131, 135], "chunksiz": 118, "ci": [125, 127, 133, 134, 135], "ci_band": 135, "ci_bar": 135, "cinccino": 118, "cir": 76, "circl": [49, 57, 65, 70, 76, 98], "circum_of_circl": 65, "circumfer": [57, 65, 70], "circumst": [46, 131], "citi": [27, 30, 32, 43, 46, 65, 76, 97, 108, 111, 121, 130], "citizen": 11, "cividi": [124, 127, 130], "cividis_r": 127, "cl": [36, 81], "claim": 121, "clamperl": 118, "clarifi": [14, 46, 71, 122], "clark": [12, 49, 52, 69], "class": [6, 9, 10, 11, 15, 23, 24, 26, 35, 36, 37, 38, 44, 50, 51, 53, 54, 58, 60, 63, 64, 67, 68, 69, 71, 73, 79, 81, 100, 101, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 125, 129, 131, 132, 133, 135, 136, 137, 138], "class1": 78, "class2": 78, "class_suit": 76, "classic": 145, "classif": [136, 144], "classifi": [45, 133], "classinfo": 78, "classmethod": [34, 39], "classnam": 76, "classon": 76, "classtwo": 76, "clauncher": 118, "claus": 97, "clawitz": 118, "claydol": 118, "clayton": 52, "clean": [14, 43, 46, 53, 58, 64, 112, 113, 144, 145], "clean_text": [14, 43], "cleaned_text": 14, "cleaner": [10, 103], "cleans": 135, "clear": [10, 31, 58, 81, 123, 133], "clearer": [47, 64, 123, 137], "clearli": 13, "clefabl": 118, "clefairi": 118, "cleffa": 118, "clich": 14, "click": [6, 145], "client": 136, "clipboard": 107, "cllose": 125, "cloak": 118, "clock": [35, 36, 135], "close": [11, 45, 46, 59, 73, 78, 107, 123, 126, 129, 130, 132, 133, 134, 135, 136], "closer": [9, 68, 81, 126], "closur": [4, 16], "closure_result": 11, "cloud": 135, "cloyster": 118, "club": [97, 137], "cluster": [131, 132, 136, 138, 140, 144], "clustergrid": 139, "clustermap": 139, "cm": [7, 82, 86], "cmap": [7, 82, 86, 124, 127, 130, 136, 138, 139], "cmap_cycl": 127, "cmath": 57, "cmd": 62, "cmp": [28, 29, 30], "cmrmap": 127, "cmrmap_r": 127, "cn": 124, "cnt": 22, "co": [26, 55, 57, 71, 100, 103, 121, 137], "cobalion": 118, "code": [0, 4, 5, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 27, 28, 30, 32, 34, 40, 43, 44, 46, 49, 50, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 69, 70, 76, 78, 81, 84, 100, 103, 121, 122, 124, 125, 127, 128, 129, 130, 132, 133, 134, 135, 137, 142], "codeobject": 64, "coeffici": [100, 123, 125, 136], "coerc": [26, 138], "coercion": 26, "coexist": 126, "cofagrigu": 118, "coffe": 133, "col": [102, 107, 111, 114, 116, 118, 123, 125, 127, 129, 131, 132, 134, 135, 137], "col1": [107, 108, 109, 111, 112, 115], "col2": [107, 108, 109, 111, 112, 115], "col3": 107, "col_clust": 139, "col_fil": 117, "col_l": 129, "col_label": [107, 109, 111], "col_label1": 116, "col_label2": 116, "col_level": 117, "col_nam": [111, 134], "col_ord": [125, 134, 137], "col_posit": 107, "col_r1": 102, "col_r2": 102, "col_var": 134, "col_wrap": [125, 127, 134, 137], "colab": [5, 6, 145], "cold": [7, 27, 82, 86], "coldest_th": 13, "collect": [6, 9, 22, 23, 30, 31, 41, 44, 45, 55, 67, 71, 77, 105, 115, 129, 130, 137], "collector": 43, "colleg": 76, "collid": [58, 71], "colon": [18, 27, 28, 29, 30, 45, 49], "color": [7, 22, 30, 55, 76, 77, 82, 86, 97, 98, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140], "color_cod": [127, 137], "color_palett": [124, 133], "colorbrew": 124, "colormap": [124, 133, 139], "colour": [136, 138], "column": [22, 32, 43, 97, 100, 101, 102, 103, 104, 118, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139], "column_1": 137, "column_2": 137, "column_current_nam": 114, "column_label": [107, 115], "column_nam": 107, "column_on": 107, "column_posit": 107, "com": [6, 15, 49, 52, 65, 72], "comb": 55, "combe": 118, "combin": [27, 28, 29, 46, 63, 65, 70, 78, 101, 109, 116, 128, 129, 132, 134, 135, 137], "combusken": 118, "come": [6, 10, 13, 23, 24, 26, 27, 32, 46, 49, 60, 62, 71, 79, 81, 107, 122, 125, 126, 128, 130, 132, 133, 135, 136, 137], "comfort": [12, 32, 134], "comic": 97, "comma": [27, 28, 29, 30, 31, 49, 67], "command": [0, 6, 23, 46, 54, 55, 59, 73, 77, 84, 100, 122, 125, 142], "commenc": [134, 137], "comment": [4, 13, 49, 65, 75, 100], "commerc": 6, "commerci": 4, "commiss": 135, "common": [12, 28, 31, 34, 39, 43, 45, 55, 76, 77, 81, 102, 107, 109, 122, 124, 125, 129, 131, 133, 135, 136, 137], "commonli": [14, 27, 28, 30, 31, 34, 40, 78, 124, 125, 126, 127, 128, 133, 135], "commonmark": [2, 83, 87], "comonli": 137, "compact": 32, "compani": [27, 28, 30, 52, 78, 98, 107, 108], "companion": [136, 137], "company_grp": 119, "company_info": 78, "company_nam": 78, "company_sales_data": 98, "compar": [4, 10, 19, 26, 27, 28, 29, 30, 31, 65, 70, 73, 79, 122, 123, 126, 128, 129, 132, 133], "comparis": [123, 126], "comparison": [27, 64, 97, 108, 111, 131, 133, 136], "comparit": 129, "compat": [13, 68, 79, 81, 103, 108, 132], "compatible_format": 59, "compens": 130, "compet": [108, 134], "competit": 123, "compil": [4, 6, 12, 14, 64, 75, 127, 135], "complain": 81, "complement": [14, 70, 122, 130], "complementari": 57, "complet": [22, 23, 24, 27, 29, 31, 43, 55, 56, 59, 71, 78, 98, 104, 119, 129, 133, 135], "complex": [6, 22, 23, 26, 53, 57, 64, 66, 67, 70, 77, 78, 90, 97, 98, 107, 108, 118, 119, 123, 125, 136], "complex128": 104, "complex_number1": 66, "complex_number2": 66, "complexnumb": 77, "compli": 73, "complic": [77, 107, 122, 124], "complier": 73, "compon": [49, 76, 124, 125, 134, 135, 137], "compos": 28, "composur": 97, "compound": [6, 28, 70], "comprehend": [131, 136], "comprehens": [9, 10, 22, 126], "compris": 126, "comput": [6, 21, 26, 27, 31, 32, 41, 43, 46, 58, 62, 64, 70, 73, 76, 78, 100, 103, 118, 123, 126, 129, 130, 131, 132, 133, 135, 137], "computation": 125, "concat": [55, 107, 118, 119, 127, 131, 136, 137], "concaten": [28, 29, 32, 55, 69, 76, 79, 100, 107, 131], "conceal": 124, "concentr": 129, "concept": [4, 5, 8, 47, 64, 71, 78, 80, 100, 124, 125, 126, 128, 131, 133, 135, 136, 137, 144], "conceptu": [58, 131, 132, 134, 145], "concern": [123, 131], "concis": [10, 28, 30, 32, 47, 54, 102, 103], "conclud": [11, 133, 135, 137], "conclus": 81, "concret": 135, "concurr": 41, "conda": [6, 100], "condit": [9, 10, 12, 18, 19, 20, 21, 22, 23, 24, 30, 31, 43, 45, 53, 54, 64, 68, 70, 102, 111, 113, 135, 136, 137], "condition_inn": 21, "conditon_out": 21, "conduct": 73, "confid": [125, 127, 129, 131, 132, 133, 135], "config": 51, "confin": 118, "confirm": 62, "conflict": 107, "confus": [10, 21, 58, 65, 81, 123, 124, 130, 131, 133, 136], "congratul": [47, 62, 90], "conjuct": 135, "conjunct": [27, 69], "conkeldurr": 118, "connect": [46, 130, 131, 133, 135, 145], "connection_object": 107, "consid": [17, 23, 27, 28, 30, 31, 35, 36, 46, 52, 58, 73, 79, 81, 103, 104, 108, 112, 113, 123, 129, 131, 134, 136, 137], "consider": [6, 32, 125, 131, 135, 144], "consist": [28, 30, 45, 59, 60, 64, 78, 102, 125, 133, 138], "consol": [6, 69, 107], "constant": [4, 14, 57, 66, 75, 101, 103, 134, 135], "constantli": [134, 136], "constraint": 13, "construct": [12, 13, 19, 24, 46, 53, 58, 59, 62, 76, 101, 102, 107], "constructor": [34, 47, 59, 78], "consum": 135, "contain": [9, 10, 12, 20, 22, 27, 28, 29, 30, 31, 32, 34, 35, 37, 38, 40, 43, 44, 46, 54, 55, 58, 59, 65, 66, 68, 69, 71, 76, 77, 98, 104, 107, 108, 112, 113, 115, 116, 117, 118, 119, 132, 133, 135, 138, 145], "content": [0, 2, 6, 14, 43, 44, 46, 55, 83, 84, 87, 107, 121, 142], "contest": 6, "context": [27, 51, 79, 122], "contextmanag": 64, "contigu": [27, 131], "continu": [4, 10, 17, 25, 46, 63, 64, 77, 78, 126, 130, 133, 134, 137], "contour": [124, 126, 127], "contrast": 102, "contribut": [133, 144], "control": [6, 10, 18, 19, 26, 27, 64, 76, 79, 81, 121, 123, 124, 126, 130, 131, 132, 133, 135, 137, 140], "conttinu": 127, "convei": [133, 135], "conveni": [100, 123, 125, 126, 129, 132], "convent": [14, 59, 77, 81, 111, 114, 135], "convention": 77, "converg": 125, "convers": [4, 27, 64, 75, 124, 129, 132], "convert": [0, 13, 26, 27, 28, 31, 32, 34, 35, 36, 39, 43, 45, 49, 57, 66, 68, 69, 70, 73, 84, 100, 101, 104, 107, 108, 109, 119, 124, 129, 133, 142], "convert_celsius_2_fahrenheit": 49, "convert_dictionary_to_python_object": 77, "convient": 107, "convini": [101, 104], "convnet": 104, "convolut": 144, "cook": 69, "cool": [104, 124, 127], "cool_r": 127, "cooler": 10, "coolwarm": [7, 82, 86, 127, 128, 131, 132, 133, 136], "coolwarm_r": 127, "coordin": 79, "cope": 46, "copi": [6, 27, 31, 44, 55, 76, 103, 104, 107, 111, 112, 113, 114, 116, 117, 130], "copper": [127, 133], "copper_r": 127, "copyreg": 59, "copyright": 6, "copysign": [55, 57, 105], "core": [77, 100, 105, 107, 111, 114, 115, 116, 125, 132, 137], "corg": 28, "cori": [22, 27, 49, 52], "cornel": 132, "corner": 102, "corphish": 118, "corr": [107, 138], "corr_func": 136, "corrcoef": 100, "correct": [19, 23, 28, 45, 52, 55, 62, 73, 104, 108, 109, 123, 125, 131, 137], "correctli": [22, 47, 136], "correl": [100, 107, 123, 126, 127, 129, 134, 136, 137, 139], "correspond": [30, 40, 45, 47, 55, 65, 71, 73, 77, 81, 102, 126, 129, 132, 133, 134, 135, 137], "corsola": 118, "cosh": [55, 57], "cosin": [55, 57, 100], "cottone": 118, "could": [6, 9, 24, 27, 43, 46, 58, 60, 71, 76, 77, 81, 103, 104, 111, 113, 121, 123, 124, 129, 130, 132, 133, 135], "couldn": [81, 127], "count": [14, 22, 23, 24, 27, 29, 43, 49, 63, 76, 77, 81, 97, 107, 118, 121, 126, 129, 132, 135, 137, 140], "counter": [22, 23, 77], "counterintuit": 10, "counterpart": [10, 27, 57], "counti": 45, "countplot": [129, 132, 133], "countri": [12, 15, 20, 22, 27, 28, 29, 30, 32, 43, 45, 46, 49, 65, 76, 97, 126, 135], "countries_data": 43, "countries_details_data": 12, "countries_to_look_at": 97, "country_lst_on": 46, "country_lst_two": 46, "coupl": [43, 124, 130, 131, 132, 133], "cours": [5, 6, 27, 49, 55, 63, 70, 121, 123, 125, 126, 127, 129, 130, 131, 133, 135], "course_nam": 49, "cov": [125, 136], "covari": 125, "cover": [11, 12, 14, 43, 45, 107, 108, 109, 113, 114, 116, 121, 123, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 144], "coverg": 125, "covert": 73, "cp1252": 43, "cplai": 6, "cradili": 118, "craft": 129, "cram": 136, "cranido": 118, "crash": 46, "crawdaunt": 118, "creat": [4, 6, 7, 9, 11, 12, 13, 14, 22, 23, 26, 34, 36, 37, 38, 39, 43, 44, 45, 46, 49, 50, 51, 53, 59, 60, 62, 63, 65, 66, 67, 71, 73, 76, 78, 79, 81, 82, 86, 100, 102, 103, 104, 110, 111, 112, 113, 114, 115, 116, 119, 122, 123, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145], "creation": [43, 101, 144], "creator": 81, "credit": [6, 122], "cresselia": 118, "cript": 43, "cristiano": 97, "criteria": [11, 12], "critic": [46, 135, 136], "croagunk": 118, "crobat": 118, "croconaw": 118, "cross": [53, 135, 137], "crustl": 118, "cryogon": 118, "css": [27, 28, 76], "css4": 124, "csv": [97, 98, 108, 115, 116, 117, 118, 121, 126, 132, 133, 135, 137], "csv_exampl": 43, "csv_reader": 43, "ctrl": [6, 23, 45], "cubchoo": 118, "cube": [11, 23, 32, 52, 54, 69], "cubehelix": 127, "cubehelix_palett": 124, "cubehelix_r": 127, "cubon": 118, "cum": [27, 31], "cumbersom": 125, "cumsum": [100, 105], "cumul": 100, "cup": 133, "curat": [125, 145], "curiou": 125, "curious": 137, "curli": [14, 27, 30, 31, 69], "current": [4, 11, 22, 23, 24, 35, 39, 40, 41, 42, 43, 46, 51, 55, 56, 59, 62, 71, 76, 77, 78, 116, 117, 123, 124, 125, 127, 129, 137], "current_file_nam": 44, "current_palett": 124, "current_salari": 65, "current_tim": 38, "current_year": [49, 52], "current_year_2021": 65, "curri": [32, 76], "cursor": 43, "curtain": 137, "curv": [126, 132], "custom": [19, 55, 59, 108, 122, 123, 124, 125, 127, 129, 130, 132, 133, 134, 135, 136, 137], "custom_lin": [7, 82, 86], "customerror": 47, "customiz": [122, 135, 137], "cut": [27, 131, 132, 134], "cyan": 124, "cycl": [124, 127], "cycler": [7, 82, 86], "cylind": [107, 108, 119], "cyndaquil": 118, "cython": 130, "d": [20, 22, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 43, 46, 49, 65, 66, 67, 69, 77, 78, 79, 98, 101, 104, 107, 112, 113, 118, 126, 130, 132, 136, 138], "d1": [37, 78], "d2": 37, "d3": 37, "d4": 37, "d75c9779269a": 47, "da": 133, "daaaat": 14, "daaat": 14, "daat": 14, "dai": [5, 14, 26, 27, 35, 36, 37, 38, 39, 40, 49, 51, 122, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 137], "daili": 125, "danc": 76, "dark": [118, 122, 124, 127, 133], "dark2": 127, "dark2_r": 127, "darkgrid": [122, 129, 131, 132, 135], "darkrai": 118, "darmanitanstandard": 118, "darmanitanzen": 118, "darumaka": 118, "dash": 128, "dashboard": [129, 130], "dat": [14, 44], "data": [6, 7, 9, 10, 11, 12, 14, 15, 22, 23, 27, 28, 29, 30, 31, 36, 43, 44, 46, 49, 52, 55, 59, 65, 66, 68, 69, 70, 73, 76, 78, 82, 86, 90, 100, 102, 103, 110, 111, 112, 113, 114, 115, 117, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 145], "data1": [28, 107, 126], "data2": 126, "data_1": [43, 44], "data_analysi": 133, "data_point": 128, "data_str": 36, "data_typ": 108, "databas": [39, 43, 107], "datafam": 109, "datafram": [4, 97, 101, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "datapoint": [123, 124, 129, 132, 134, 135, 137], "datasci": [27, 50, 70], "dataseri": 107, "dataset": [97, 104, 107, 110, 111, 112, 113, 114, 115, 117, 118, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140], "datatyp": [4, 27, 29, 57, 67, 68, 75, 107, 108, 137], "date": [36, 38, 107, 121, 125, 127, 135, 137], "date_object": [34, 36], "date_rang": 107, "date_str": [34, 36], "date_tim": 35, "date_time1": 35, "date_time2": 35, "dateclass": 34, "datetim": [4, 37, 42, 55, 107], "datetime64": 105, "datetime_capi": 34, "datetime_london": [34, 38], "datetime_ni": [34, 38], "datetime_object": 34, "datetimeindex": 107, "daughter": 76, "dave": 72, "david": [52, 69], "dct": 46, "dd": [34, 36, 37], "dd6f749658a4": 13, "de": [14, 97], "deal": [8, 13, 24, 26, 27, 43, 68, 104, 107, 121, 124, 125, 126, 127, 128, 129, 130, 131, 135, 136, 137], "dealt": [121, 125, 129], "debug": [45, 53, 60, 64], "dec": [6, 12, 35, 36, 40, 62], "decemb": [20, 39], "decend": 118, "decent": [129, 132, 133], "decept": 131, "decid": [13, 17, 30, 114, 125, 126, 131, 132, 133, 135, 137], "decim": [13, 27, 35, 36, 59, 65, 66, 67, 69, 70, 101], "decis": 21, "deck": [131, 133, 137], "declar": [11, 12, 23, 27, 28, 43, 45, 47, 49, 50, 51, 55, 67, 70, 71, 76, 77, 81, 101, 125, 133, 135, 136, 137], "decod": [27, 45], "decompos": 60, "decomposit": [8, 103], "decor": [4, 11, 16, 81, 135, 137], "decorator_with_paramet": 12, "decreas": [23, 53, 121, 124, 126, 131], "decrement": 79, "dedenn": 118, "dedic": 137, "deduc": [125, 132], "deep": [8, 24, 100, 121, 124, 144], "deepak": [44, 55], "deeper": [34, 121, 125, 127, 132, 134, 135, 137], "deepli": [24, 125], "deerl": 118, "def": [9, 10, 11, 12, 13, 15, 19, 20, 21, 24, 32, 41, 46, 47, 49, 50, 51, 52, 53, 54, 55, 59, 60, 63, 64, 66, 69, 71, 76, 77, 78, 79, 81, 114, 118, 122, 125, 127, 129, 130, 136, 137], "default": [0, 11, 34, 51, 53, 57, 59, 62, 69, 77, 78, 84, 97, 100, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 122, 124, 125, 127, 128, 131, 132, 134, 135, 137, 138, 142], "default_ord": 27, "default_valu": 107, "defens": 118, "defer": 116, "defin": [0, 4, 9, 10, 12, 13, 14, 15, 22, 23, 26, 27, 28, 29, 30, 32, 34, 40, 45, 46, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 69, 71, 76, 78, 79, 84, 104, 107, 111, 115, 122, 123, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142], "definit": [6, 12, 22, 49, 52, 54, 55, 59, 64, 69, 76, 77, 78, 81], "degrad": 81, "degre": [13, 55, 57], "deino": 118, "del": [11, 27, 28, 29, 30, 63, 77], "delai": [40, 41, 123, 129], "delattr": 77, "delcatti": 118, "deleg": 78, "delelop": 6, "delet": [11, 13, 30, 31, 44, 45, 64, 100, 107, 113, 116], "deliber": 45, "delibird": 118, "delimit": [43, 104, 107, 118], "delphox": 118, "delv": [122, 123, 126, 127], "demand": [10, 122], "demo": 127, "demonstr": [9, 28, 64, 78, 109, 126, 129, 136, 137], "deni": 20, "denim": [124, 130], "denmark": [12, 28, 46, 126], "denomin": 26, "denot": [13, 15, 27, 52, 53, 67, 76], "densii": 132, "densiti": [123, 124, 126, 127, 128, 130, 132, 135], "deoxysattack": 118, "deoxysdefens": 118, "deoxysnorm": 118, "deoxysspe": 118, "depart": [77, 135], "depat": 77, "depend": [6, 11, 17, 24, 43, 47, 55, 56, 79, 83, 87, 100, 107, 121, 123, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137], "depict": [124, 129, 131, 135], "deploy": 144, "deprec": [115, 119, 123, 128, 130], "deprecation_addendum": 130, "depth": [53, 65, 78, 121, 125, 126, 129], "deriv": [46, 47, 76, 78, 81, 135], "derived1": 78, "derived2": 78, "derivedclass": [76, 78], "descend": [43, 49, 107], "descent": 145, "describ": [49, 52, 55, 64, 70, 76, 107, 121, 126, 131, 133, 134, 135, 136, 137], "descript": [24, 27, 28, 29, 30, 31, 43, 49, 55, 56, 57, 59, 76, 77, 100, 107, 114, 121, 131, 135], "descriptor": [43, 59], "deserv": 132, "desgin": 66, "design": [6, 12, 107, 125, 133, 134, 145], "desir": [12, 24, 28, 104, 137, 144], "desk": 6, "desktop": [6, 44], "despin": [122, 132, 133, 134, 136, 137], "destroi": [10, 50, 77], "destruct": 77, "destructur": 46, "det": 103, "detach": 43, "detail": [0, 1, 10, 13, 40, 45, 52, 64, 69, 76, 77, 78, 84, 102, 107, 109, 111, 116, 117, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 137, 141, 142, 143], "detect": [45, 102, 124, 144], "determin": [27, 31, 112, 113, 117, 125, 126, 127, 129, 131, 133, 135, 136, 137], "determinist": 56, "develop": [4, 6, 14, 20, 47, 58, 65, 73, 76, 81, 91], "deviat": [49, 76, 100, 104, 107, 131, 133], "devic": [69, 73], "dewgong": 118, "dewott": 118, "df": [97, 98, 107, 111, 114, 115, 116, 117, 118, 119, 121, 123, 125, 127, 130, 132, 135, 137, 138], "df1": [107, 126], "df2": [107, 126], "df6ce7ede1dc": 45, "df_xlsx": 118, "dfca0b041b3d": 47, "dhl": 27, "di": [14, 22], "diag": [105, 136], "diag_ax": 136, "diag_indic": 136, "diag_kind": [127, 136], "diag_kw": 127, "diag_sharei": 136, "diagon": [127, 136], "diagram": [71, 110, 114, 117, 128], "dialga": 118, "dialogu": 22, "diamet": 57, "dianci": 118, "dianciemega": 118, "dict": [6, 15, 31, 43, 46, 49, 55, 66, 67, 68, 77, 97, 109, 110, 111, 112, 113, 114, 116, 117, 119, 123, 132, 137, 139], "dict1": [22, 30], "dict2": 22, "dict_1": 77, "dict_item": 30, "dict_kei": 30, "dict_valu": 30, "dictionari": [4, 6, 12, 13, 15, 20, 27, 28, 29, 31, 32, 33, 45, 49, 59, 64, 66, 68, 70, 77, 107, 109, 114, 119, 122, 124, 137], "dictionaryliter": 64, "did": [10, 12, 18, 45, 46, 50, 69, 70, 76, 78, 107, 135], "didn": [27, 76, 79, 122, 131, 132, 137], "die": 137, "diet": [134, 135], "diff": 38, "differ": [11, 12, 14, 15, 17, 22, 23, 24, 26, 27, 28, 29, 30, 35, 39, 40, 41, 43, 44, 45, 46, 49, 50, 52, 54, 55, 58, 60, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 81, 83, 87, 102, 103, 107, 108, 109, 112, 115, 118, 119, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145], "difference_upd": 31, "differenti": 63, "difficult": [73, 122, 129, 130, 131, 132, 133], "dig": [34, 135, 137], "diggersbi": 118, "digit": [22, 27, 36, 55, 59, 63, 65, 70, 76, 104, 135], "diglett": 118, "dimens": [100, 101, 102, 103, 107, 125, 136, 137], "dimension": [8, 22, 32, 100, 101, 107, 109, 125, 136, 137, 144], "dinner": [49, 125, 128, 129, 130, 131, 132, 133, 137], "dir": [14, 34, 45], "dir_nam": 44, "direct": [0, 2, 14, 23, 27, 32, 34, 35, 36, 40, 54, 76, 84, 133, 142], "directli": [6, 10, 28, 47, 49, 55, 58, 71, 73, 76, 77, 103, 122, 128, 134, 135, 145], "directori": [4, 43, 45, 48, 55, 58, 69], "directory_nam": 55, "dirichlet": 135, "disadvantag": [73, 132], "disagre": 26, "discard": 31, "disclosur": 137, "disconnect": 46, "discourag": 81, "discours": 137, "discret": [124, 125, 132, 133, 135, 137], "discuss": [14, 19, 26, 27, 29, 55, 60, 64, 69, 78, 107, 108, 109, 110, 111, 116, 117, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145], "disengag": 135, "disjoint": 31, "disk": [43, 73], "dispar": 135, "dispers": [121, 131], "displai": [0, 19, 20, 21, 22, 23, 24, 27, 34, 44, 46, 47, 59, 62, 66, 70, 73, 77, 78, 84, 97, 104, 110, 122, 124, 126, 129, 130, 131, 132, 133, 135, 136, 137, 138, 142], "displot": 128, "dispos": 135, "dispsid": 78, "disregard": 24, "disrupt": 46, "dist": [55, 140], "distac": 22, "distanc": [14, 22, 70, 81, 131, 132], "distinct": [102, 135], "distinguish": [31, 43, 81, 124], "distort": 135, "distplot": [123, 136], "distribut": [4, 56, 76, 97, 100, 101, 104, 121, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "distriut": 131, "ditribut": 126, "ditto": 118, "div0ssutgadkwstr": 55, "dive": [121, 125, 131, 133, 134, 137], "diverg": 124, "divid": [12, 17, 23, 28, 34, 45, 55, 57, 58, 60, 65, 69, 70, 100, 103, 105, 107, 108, 111, 129, 131, 133, 134, 135], "dividend": 52, "divis": [12, 17, 23, 24, 32, 45, 46, 49, 65, 70, 79, 100, 103], "divisor": 52, "django": [6, 27], "dll": 55, "do": [6, 7, 9, 10, 13, 14, 17, 18, 19, 22, 23, 24, 27, 28, 29, 31, 32, 38, 45, 46, 47, 49, 52, 55, 56, 57, 59, 60, 64, 65, 67, 69, 70, 71, 73, 76, 77, 78, 79, 81, 82, 83, 86, 87, 90, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145], "do_someth": 52, "doc": [13, 49, 59, 103], "docstr": [4, 27, 61, 77], "doctor": 14, "document": [0, 1, 7, 43, 44, 49, 59, 64, 76, 77, 82, 84, 86, 87, 101, 102, 103, 122, 125, 131, 141, 142, 143], "dodg": [119, 129, 130, 131, 132, 133, 134, 135], "dodrio": 118, "doduo": 118, "doe": [10, 12, 13, 14, 18, 22, 23, 24, 27, 28, 29, 31, 32, 36, 43, 45, 46, 49, 50, 52, 55, 57, 59, 64, 65, 67, 69, 70, 71, 73, 76, 77, 78, 79, 101, 103, 107, 110, 111, 112, 113, 114, 116, 117, 124, 125, 127, 129, 130, 132, 137], "does_exist": 28, "doesn": [13, 20, 22, 23, 24, 27, 29, 30, 36, 55, 68, 77, 114, 122, 123, 125, 130, 132, 133, 137], "dog": [29, 78], "dohc": [107, 108, 119], "dollar": [7, 82, 86, 97, 98], "domain": [6, 123, 125, 130, 133, 135, 137], "dominantli": 125, "don": [13, 23, 24, 28, 32, 43, 49, 51, 55, 58, 65, 76, 78, 81, 107, 114, 116, 117, 122, 123, 125, 126, 128, 130, 131, 132, 133, 135, 136, 137], "donald": 43, "done": [6, 10, 12, 13, 18, 19, 22, 23, 24, 27, 32, 43, 58, 62, 68, 69, 73, 78, 81, 108, 112, 115, 122, 123, 124, 127, 129, 130, 132, 133, 134, 135, 136, 137], "donphan": 118, "door": 77, "dot": [5, 8, 55, 58, 76, 77, 97, 98, 100, 103, 126, 129, 130, 131, 132, 133, 135, 145], "doubl": [15, 27, 49, 54, 64, 66, 67, 70, 76, 77, 78, 79, 122], "doublad": 118, "doubt": [126, 129, 130, 131], "down": [13, 24, 53, 55, 70, 121, 122, 124, 126, 136, 137], "download": [6, 55, 97, 98, 104], "downsid": 133, "downtown": 30, "dpi": [97, 98], "dr": [43, 55, 76], "draft": [132, 133, 134, 135, 136, 137], "drag": 129, "dragalg": 118, "dragon": 118, "dragonair": 118, "dragonit": 118, "drapion": 118, "dratini": 118, "draw": [123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137], "draw_fram": 133, "draw_stripplot": 130, "drawn": [81, 127, 130, 131, 135, 137], "drifblim": 118, "drifloon": 118, "drilbur": 118, "drill": [124, 125], "drink": 66, "drive": [19, 145], "driver": [52, 135], "drop": [10, 116, 117, 118, 124, 125, 137], "drop_dupl": [113, 117], "drope": 111, "dropna": [107, 117, 123, 125, 127, 136, 137], "dropoff_datetim": 135, "dropoff_latitud": 135, "dropoff_longitud": 135, "drowze": 118, "druddigon": 118, "dry": [49, 76], "dt_object": 39, "dt_object1": 36, "dt_object2": 36, "dt_string": [36, 37], "dtype": [97, 100, 101, 103, 104, 107, 108, 109, 115, 116, 118, 119, 126, 127, 136], "duc": 14, "ducklett": 118, "due": [13, 15, 24, 26, 28, 43, 46, 71, 73, 103, 129], "dugtrio": 118, "dull": 122, "dummi": [126, 133, 137], "dump": [43, 59], "dumpstack": 44, "dunsparc": 118, "duosion": 118, "duplic": [22, 31, 55, 67, 71, 107, 111, 117], "durant": 118, "durat": 135, "dure": [6, 32, 45, 46, 52, 54, 55, 73, 81, 122, 125, 129, 134], "dusclop": 118, "duski": 124, "dusknoir": 118, "duskul": 118, "dusti": 124, "dustox": 118, "dutch": 43, "duti": 121, "dwebbl": 118, "dynam": [4, 67, 71, 73], "dynamicfeatur": 64, "e": [5, 6, 10, 14, 22, 23, 24, 26, 27, 28, 29, 30, 31, 43, 44, 46, 50, 51, 55, 57, 62, 65, 66, 68, 69, 70, 76, 78, 98, 101, 103, 104, 107, 108, 109, 112, 113, 114, 115, 116, 117, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145], "e0e0e0": 97, "e15e5601926f": 81, "e2e604bf92d": 45, "e32e417070a1": 67, "e8fb9ed4ccdc": 135, "each": [6, 9, 10, 12, 19, 20, 22, 23, 24, 27, 28, 29, 30, 31, 46, 49, 53, 54, 55, 59, 64, 65, 66, 67, 68, 69, 71, 73, 76, 77, 78, 81, 100, 101, 102, 103, 107, 108, 109, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 144], "earli": 5, "earlier": [121, 122, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "earn": 70, "earth": 49, "easi": [4, 6, 9, 22, 23, 27, 43, 58, 60, 62, 73, 76, 107, 108, 122, 127, 129, 131, 133, 135, 137, 145], "easier": [4, 9, 13, 14, 32, 53, 58, 63, 69, 73, 81, 109, 129, 134, 136], "easili": [10, 34, 39, 59, 65, 78, 111, 122, 126, 129, 137, 145], "eat": [62, 78], "eb3d2b": 55, "ecosystem": [2, 83, 87], "ed": 22, "ed7c4dc05b92": 50, "edg": [98, 123, 132, 133, 136], "edgecolor": [123, 129, 130, 133, 136, 137], "editor": [20, 122], "educ": [14, 129, 135], "educa": 14, "education_level": 132, "edward": 136, "ee": 14, "ee4e8ee8c904": 45, "ee80ca1a52c8": 66, "eelektrik": 118, "eelektross": 118, "eeve": 118, "effect": [27, 43, 51, 55, 76, 124, 126, 129, 133], "effici": [13, 22, 23, 26, 43, 49, 55, 58, 71, 73, 76, 100, 107, 109, 123, 130, 135], "effort": 136, "eg": [12, 14, 65, 73], "egg": 55, "eh": 56, "eigenvalu": [8, 103], "eigenvector": 8, "eight": 119, "eighti": 14, "einstein": 14, "either": [14, 17, 18, 20, 40, 46, 47, 59, 64, 70, 73, 78, 107, 108, 114, 121, 122, 124, 125, 128, 129, 131, 132, 133, 135, 136, 137], "ekan": 118, "el": 27, "elabor": 59, "electabuzz": 118, "electivir": 118, "electr": 118, "electrik": 118, "electrod": 118, "eleg": [4, 9, 10, 11, 30, 32, 53], "elegantli": 9, "elekid": 118, "element": [9, 22, 23, 26, 27, 40, 44, 49, 54, 55, 56, 62, 67, 68, 69, 70, 72, 77, 101, 102, 103, 104, 107, 109, 110, 122, 133, 135, 137], "elementari": 131, "elementtre": 43, "elementwis": [103, 104], "elemnet": [30, 67], "elemtnt": 67, "elgyem": 118, "elif": [4, 11, 17, 21, 24, 25, 47, 63], "elimin": [24, 67, 81], "elliot": 121, "ellipsi": 64, "ello": 27, "els": [4, 9, 11, 14, 17, 18, 21, 25, 27, 28, 30, 32, 43, 49, 52, 53, 55, 60, 63, 66, 69, 76, 77, 97, 108, 111, 113, 114, 122, 123, 125, 127, 130, 133, 135, 136], "elucid": 133, "email": [6, 14, 15, 43, 72], "email_exchanges_big": 43, "emath": 105, "emb": [7, 82, 86], "embark": [131, 133], "embark_town": [131, 133], "embed": [26, 59], "emboar": 118, "emili": 76, "emolga": 118, "emp": [14, 77, 78], "emp_data": 52, "emp_id": [30, 52], "emp_nam": 30, "emphasi": [77, 134, 137], "employe": [76, 77, 78, 135], "employee_info": 78, "empoleon": 118, "empow": [14, 27, 124], "empoye": 52, "empti": [13, 14, 22, 23, 24, 27, 28, 29, 30, 43, 44, 49, 51, 56, 58, 76, 77, 100, 103, 107, 108, 113, 115, 128], "empty_lik": 103, "en": 128, "enabl": [78, 136, 144], "encapsul": 11, "enclos": [11, 22, 23, 27, 29, 45, 62, 67, 130], "encod": [27, 43, 45, 46, 121, 137, 138], "encount": [45, 46, 103, 135], "encourag": 132, "encrypt": 56, "end": [7, 9, 10, 18, 22, 23, 24, 27, 29, 36, 41, 43, 45, 46, 49, 53, 59, 64, 67, 69, 73, 82, 86, 100, 104, 107, 108, 122, 124, 125, 126, 127, 130, 133, 135, 136, 137, 145], "end_index": 6, "endindex": 102, "endless": 132, "endpoint": 104, "endswith": 27, "enforc": [64, 68], "engag": 135, "engin": [6, 14, 77, 107, 108, 118, 119, 135], "engine_rotation_spe": 65, "england": [43, 45, 46, 76, 97], "english": [27, 30, 43, 66, 73, 122], "enhanc": [123, 129, 130, 137], "enjoi": [27, 55, 127, 132], "enlarg": 122, "enough": [19, 28, 29, 65, 121, 123, 129, 131, 132, 133, 134, 135, 136], "enrol": 133, "ensembl": [144, 145], "ensur": [32, 43, 64, 78, 124, 127, 129, 133, 135, 136], "ensure_ascii": 43, "entei": 118, "enter": [18, 19, 20, 21, 23, 24, 46, 47, 49, 60, 64, 69, 70, 78, 135, 137], "enterpris": 6, "entir": [9, 10, 27, 28, 29, 30, 43, 73, 78, 110, 128, 132, 133, 135, 137], "entireti": 137, "entiti": [63, 76], "entri": [20, 22, 30, 46, 107, 108, 115], "enuemer": 22, "enumer": [22, 27, 31, 130, 133], "env": 6, "environ": [5, 55, 73, 125, 137], "eof": 43, "eoferror": 45, "ep": 105, "epar": 43, "epitom": 136, "epoch": 40, "eq": 55, "equal": [9, 18, 19, 20, 21, 22, 23, 24, 26, 28, 52, 53, 55, 57, 62, 65, 66, 70, 79, 98, 100, 103, 107, 114, 128, 131, 133, 135], "equal1": 55, "equat": [49, 123], "equip": [104, 126], "equival": [10, 12, 13, 22, 24, 27, 28, 30, 32, 34, 35, 36, 43, 54, 66, 70, 77, 78, 81, 102, 103], "er": 14, "era": 137, "eras": 43, "erf": [55, 57], "erfc": [55, 57], "eric": 52, "erp": 6, "err_kw": 135, "err_palett": 135, "err_styl": 135, "errcolor": 133, "errno": 45, "error": [6, 9, 12, 13, 24, 26, 27, 30, 31, 43, 46, 47, 49, 50, 52, 57, 63, 64, 67, 68, 69, 73, 76, 77, 78, 79, 103, 108, 116, 123, 124, 133, 134], "errstat": 105, "errwidth": 133, "escap": [7, 44, 82, 86], "escavali": 118, "especi": [8, 73, 81, 100], "espeon": 118, "espurr": 118, "essenti": [5, 78, 100, 104, 133], "essesnti": 90, "establish": [127, 135], "estim": [123, 125, 126, 127, 128, 129, 132, 133, 134, 135], "estonia": 46, "et": 43, "etc": [6, 7, 9, 10, 22, 23, 24, 26, 27, 29, 30, 31, 34, 35, 36, 40, 49, 54, 55, 63, 64, 65, 68, 70, 71, 73, 76, 77, 82, 86, 100, 102, 103, 104, 107, 115, 118, 119, 121, 126, 127, 130, 134, 135, 145], "ethan": [32, 49, 52, 69], "ethic": 144, "etre": 43, "euclidean": [57, 70], "europ": [34, 38], "eval": [6, 49, 69], "evalu": [17, 18, 19, 20, 23, 24, 43, 54, 69, 70, 73], "evan": 121, "even": [4, 6, 10, 11, 12, 13, 17, 19, 20, 22, 23, 24, 26, 27, 28, 32, 43, 46, 49, 50, 52, 53, 54, 59, 64, 65, 68, 69, 70, 73, 77, 78, 81, 103, 104, 108, 109, 112, 113, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "even_list": 54, "even_no": 54, "even_num": 49, "even_numb": [12, 22, 32, 54], "even_odd": 49, "evenli": [100, 104], "evenodd": 52, "evens_and_odd": 49, "event": 46, "eventu": [134, 136], "ever": [14, 22, 27, 71, 127, 130, 137], "everi": [6, 19, 22, 24, 26, 27, 31, 32, 36, 46, 53, 55, 67, 71, 73, 76, 77, 78, 79, 81, 101, 107, 121, 124, 125, 126, 128, 130, 131, 135, 136, 137], "everybodi": 27, "everyon": [52, 126], "everyth": [12, 28, 29, 30, 31, 47, 55, 67, 71, 76, 77, 130, 133, 134], "everytim": 130, "everywher": 9, "evid": [65, 123, 125, 129], "evok": 124, "ew": 27, "eward": 14, "ex": [14, 73], "exact": [26, 122, 129, 131], "exactli": [12, 14, 24, 27, 46, 81, 122, 129], "examin": 125, "exampl": [4, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 26, 27, 28, 29, 30, 31, 32, 40, 43, 45, 46, 49, 50, 52, 53, 54, 56, 57, 58, 59, 60, 63, 64, 66, 67, 68, 69, 71, 72, 76, 77, 79, 81, 82, 86, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 122, 123, 124, 126, 127, 128, 129, 133, 134, 135, 137, 138, 145], "exaplan": [45, 76], "exc_info": 46, "excadril": 118, "exceed": 53, "excel": [4, 10, 43, 107], "excel_book": 43, "except": [4, 6, 9, 12, 14, 27, 28, 43, 48, 55, 59, 63, 64, 77, 112, 122, 124, 125, 129, 131, 133], "exception": 126, "exception1": 46, "exception2": 46, "exceptioni": 46, "exceptionii": 46, "exceptionn": 46, "excercis": 106, "exceric": 145, "exclud": [15, 31, 121, 135, 136], "exclus": [43, 55, 101, 107, 111], "excus": 137, "execut": [0, 6, 9, 10, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 32, 40, 41, 43, 46, 49, 50, 55, 60, 62, 64, 69, 71, 73, 76, 77, 84, 111, 114, 116, 117, 137, 142, 145], "exeggcut": 118, "exeggutor": 118, "exercis": [4, 50, 51, 118, 120, 121, 134, 135], "exhaust": [9, 22, 73, 125], "exist": [12, 13, 14, 20, 27, 28, 29, 30, 31, 32, 43, 45, 55, 71, 76, 77, 78, 81, 107, 110, 111, 112, 113, 114, 116, 117, 125, 133, 137, 138], "exit": [22, 23, 24, 43, 45, 55, 62], "exmpl": 27, "exp": [26, 55, 57, 65, 103, 105], "expand": [54, 59, 104, 134], "expandtab": 27, "expect": [14, 46, 70, 107, 115, 129, 131, 132, 135, 137], "expens": [53, 76], "experi": [6, 122, 125, 126, 129, 130, 131, 133, 137, 144], "experiment": [6, 145], "expert": 132, "explain": [12, 31, 53, 64, 71, 81, 104, 112, 115, 121, 122, 124, 125, 126, 130, 135], "explan": [15, 18, 19, 20, 22, 23, 24, 27, 32, 34, 37, 39, 41, 46, 47, 50, 51, 52, 54, 56, 57, 60, 68, 70, 76, 77, 78, 79, 81, 91, 103, 104, 130], "explanatori": 123, "explicit": [64, 81, 103, 124, 130, 132, 133], "explicitli": [11, 26, 32, 43, 49, 65, 101, 122, 133], "explod": 97, "exploit": 73, "explor": [14, 40, 90, 122, 125, 127, 130, 132], "exploratori": 122, "exploud": 118, "expm1": [55, 57], "expon": [9, 22, 27, 57, 69], "exponenti": [27, 55, 56, 66, 70, 103, 132, 135], "export": 59, "expovari": 56, "express": [13, 14, 18, 19, 20, 23, 24, 27, 28, 30, 32, 49, 52, 54, 64, 66, 68, 69, 70, 72, 79, 107, 135], "expression1": 21, "expression2": 21, "expression3": 21, "expression4": 21, "extempor": 134, "extend": [13, 27, 49, 64, 76, 78, 116, 124, 131, 132, 133], "extens": [2, 6, 11, 55, 59, 62, 64, 69, 83, 87, 97, 98, 126, 135], "extent": [130, 135], "extern": [24, 46], "extra": [13, 44, 45, 64, 114, 130, 131, 134], "extract": [14, 43, 67, 107, 130, 138], "extrapol": 126, "extrem": [107, 122, 123, 124, 125, 130, 132, 135, 137], "ey": [101, 105, 133], "f": [11, 20, 21, 26, 27, 35, 36, 43, 46, 47, 49, 52, 55, 59, 69, 72, 76, 77, 81, 98, 103, 104, 111, 114, 116, 121, 127, 130, 132, 135], "f09af94986b4": 29, "f2db54e8947c": 130, "f3f4b74da706": 29, "f45": 14, "f49307ce4aaa": 31, "f6b2789c4214": 116, "f7b055f5764d": 10, "f7d40ce0c112": 13, "f7ffd6347533": 45, "fab": [55, 57], "fab2e1af2c65": 81, "fabric": 137, "fabul": 129, "face": [53, 121, 136], "facebook": 27, "facecolor": [97, 129, 133], "facecream": 98, "facecremsalesdata": 98, "faceprep": 24, "facet": [122, 125, 134, 136, 137], "facet_kw": 134, "facetgrid": [125, 126, 127, 131, 134, 135, 136, 140], "facewashsalesdata": 98, "facil": 55, "facilit": [131, 133], "fact": [9, 12, 28, 29, 65, 100, 125, 132, 134, 135], "factor": [8, 24, 123, 127, 131, 132, 133, 135, 140], "factori": [26, 49, 53, 55, 57, 59], "factorplot": [129, 131, 132, 134, 135], "fade": [124, 131], "fahrenheit": 13, "fail": [19, 20, 23, 43, 45, 107, 124], "fair": [127, 135], "fairi": 118, "fairli": 10, "fake": 135, "falcon": 27, "fall": [18, 26, 45, 60, 67, 129, 135], "fallback": 101, "fals": [12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 43, 49, 55, 59, 63, 65, 66, 69, 70, 78, 79, 101, 102, 104, 105, 107, 111, 112, 113, 114, 116, 117, 118, 119, 121, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139], "falsi": 70, "famili": [59, 126, 133, 135], "familiar": [13, 27, 29, 77, 98, 119, 127, 130, 132, 133, 134], "fan": [130, 137], "fanci": [102, 107], "fandango": 6, "far": [14, 20, 65, 81, 104, 118, 122, 123, 124, 125], "fare": [131, 133, 135], "farfetch": 118, "fasewash": 98, "fashion": 78, "fast": [43, 100, 107, 111, 135], "faster": [26, 29, 32, 67, 73, 76, 78, 103], "fastest": 145, "fat": 134, "fatal": 121, "fatorplot": 129, "favorit": 29, "fbf7cddd4b2a": 45, "fc": [97, 133], "fdel": 13, "fearow": 118, "feasibl": 116, "featur": [6, 12, 76, 78, 79, 111, 121, 123, 124, 125, 126, 127, 129, 131, 132, 135, 136, 137, 145], "feb": [35, 36, 62], "februari": [20, 35, 36], "feder": 43, "feeba": 118, "feed": [19, 132, 144], "feedback": [19, 49], "feedpars": 6, "feel": [20, 121, 125, 126, 127, 129, 130, 131], "femal": [43, 76, 118, 121, 125, 128, 130, 131, 132, 133, 137], "female_dinn": 132, "female_lunch": 132, "fenc": 131, "fennekin": 118, "feraligatr": 118, "ferrose": 118, "ferrothorn": 118, "fetch": [55, 107, 122, 125, 126, 129, 131, 133, 135, 136, 137], "few": [11, 12, 13, 22, 23, 26, 27, 30, 34, 90, 104, 107, 110, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "fewer": [4, 135, 136], "fffbe51149a7": 36, "fget": 13, "fh": 46, "fi": 32, "fib": 55, "fibo": 55, "fibo1": 55, "fibonacci": [10, 23, 55], "fibonacci_numb": 10, "fiction": 133, "fiddl": 134, "field": [27, 43, 66, 107, 110, 124, 135], "fifa_data": 97, "fig": [7, 28, 31, 82, 86, 123, 128, 132], "fight": 118, "figsiz": [7, 82, 86, 97, 124, 132, 133, 135, 139], "figur": [21, 47, 58, 63, 64, 70, 78, 97, 98, 122, 123, 124, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 139], "file": [0, 6, 9, 10, 12, 27, 45, 46, 47, 51, 52, 55, 58, 59, 62, 63, 65, 69, 73, 84, 98, 107, 115, 116, 117, 118, 137, 142], "file_data": 43, "file_nam": 107, "filedata": 104, "fileexistserror": 55, "filenam": [43, 55, 69, 107, 126], "fileno": 43, "filenotfounderror": [43, 45], "fill": [97, 100, 101, 104, 126, 145], "fillna": 107, "filter": [28, 30, 32, 117], "filter_cond": 107, "filterwarn": [123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "fin": 46, "final": [10, 12, 22, 23, 24, 27, 28, 43, 45, 50, 51, 63, 65, 69, 71, 81, 103, 117, 124, 127, 131, 132, 133, 135, 136, 137], "finali": 104, "finaltext": 69, "financ": 100, "financi": 26, "find": [10, 12, 14, 22, 23, 27, 28, 31, 32, 34, 38, 43, 46, 49, 53, 55, 60, 65, 67, 70, 76, 78, 81, 102, 103, 104, 107, 111, 113, 124, 125, 126, 127, 129, 130, 132, 133, 134, 135, 145], "find_even_numb": 49, "find_most_common_word": 43, "find_most_frequent_word": 43, "findarea": 78, "fine": [63, 69, 135], "finer": 122, "finfo": 105, "finish": [11, 22, 64, 125, 128], "finit": [9, 26], "finland": [12, 20, 22, 27, 28, 29, 32, 43, 46, 65, 76], "finneon": 118, "fintech": 130, "fir": 123, "fire": 118, "firm": 131, "firmer": 136, "first": [9, 10, 11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 27, 29, 32, 34, 35, 36, 40, 43, 44, 45, 46, 49, 50, 52, 55, 59, 60, 62, 64, 65, 69, 71, 73, 76, 77, 78, 79, 81, 97, 102, 103, 107, 114, 116, 117, 122, 124, 125, 127, 129, 131, 132, 133, 134, 135, 136, 137, 145], "first_lett": 27, "first_nam": [12, 14, 20, 22, 27, 30, 49, 65, 68], "first_name_to_list": 68, "first_nm": 52, "first_numb": 69, "firstnam": [14, 15, 49, 52, 65, 69, 76], "fit": [59, 123, 125, 126, 127, 128, 131, 132, 135], "fit_fn": 123, "fit_reg": 125, "five": [14, 22, 46, 78, 97, 107, 108, 110], "fix": [7, 22, 45, 52, 73, 82, 86, 107, 125, 135], "flaaffi": 118, "flab\u00e9b\u00e9": 118, "flag": [14, 97, 105, 111, 112, 113, 114, 116, 117, 118, 121, 127, 135], "flag_r": 127, "flamer": 118, "flaot": 26, "flareon": 118, "flase": 70, "flask": [6, 27], "flat": 105, "flatten": [32, 100, 129], "flattened_list": 32, "flavor": [2, 83, 87], "flee": 121, "fleme": 22, "fletchind": 118, "fletchl": 118, "flexibl": [6, 15, 67, 69, 107, 123, 125, 128, 129, 130], "flexibli": 128, "flierprop": 131, "fliersiz": 131, "flight": [121, 138, 139], "fligth": 138, "flip": 122, "float": [6, 13, 21, 24, 27, 28, 29, 31, 34, 41, 45, 46, 55, 56, 57, 60, 64, 66, 67, 68, 70, 78, 101, 107, 124, 129, 130, 132, 133], "float64": [97, 101, 103, 107, 108, 109, 115], "float64index": 107, "float_1": 66, "float_2": 66, "float_numb": 69, "floatingpointerror": 45, "floatzel": 118, "floett": 118, "floor": [55, 57, 65, 70, 77, 79, 105, 129], "floor_divis": 65, "florg": 118, "flow": [22, 23, 24, 27, 43, 46, 136], "flower": [22, 121, 129], "floyd": 22, "fluctuat": 135, "flush": [23, 41, 43, 59, 69], "fly": [10, 76, 77, 78, 118], "flygon": 118, "flying_test": 76, "fmod": [55, 57], "fmri": 135, "fmt": 97, "fo": 14, "focu": [123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "focus": [69, 76], "foe": 55, "folder": [6, 12, 44, 55, 107, 118, 119, 124, 126, 127, 132, 133, 135], "follow": [0, 4, 9, 10, 11, 12, 13, 14, 17, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 47, 49, 52, 53, 55, 56, 58, 59, 60, 62, 64, 65, 66, 69, 70, 71, 73, 76, 77, 78, 79, 81, 84, 90, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 122, 124, 135, 136, 137, 138, 142], "fom": 23, "font": [97, 122, 130, 133, 135], "font_scal": [122, 132], "fontdict": 97, "fontnam": 97, "fontsiz": [97, 132, 137], "fontweight": [97, 132, 133, 137], "foo": [14, 28, 30], "food": [66, 67], "food_list": 29, "food_staff": 49, "food_tupl": 29, "foongu": 118, "foot": 97, "footbal": [14, 137], "football_plot": 137, "forc": [47, 101, 108, 121], "force_edgecolor": 136, "forcibli": 59, "ford": [78, 119], "forev": 23, "forget": 64, "forgot": 45, "forgotten": 23, "form": [11, 18, 22, 26, 27, 30, 32, 35, 36, 43, 44, 52, 54, 55, 60, 64, 67, 73, 76, 100, 101, 103, 107, 111, 112, 115, 118, 129, 130, 131, 132, 133, 134, 135, 136, 137], "formal": [52, 81], "format": [12, 15, 20, 22, 29, 30, 39, 40, 43, 55, 64, 76, 77, 79, 107, 108, 115, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "format_regex": 36, "format_vers": 59, "former": [64, 78], "formfe": 27, "formul": 22, "formula": [14, 49], "forretress": 118, "fortan": 104, "forth": 55, "fortun": [4, 26], "forum": [129, 130, 131, 133], "forward": [22, 27, 44, 45, 67, 135, 138], "found": [11, 14, 22, 24, 27, 30, 36, 45, 46, 55, 70, 73, 78, 101, 111, 114, 124, 131, 133, 135, 138], "foundat": 134, "four": [14, 17, 22, 36, 49, 64, 66, 69, 78, 81, 104, 107, 108, 119, 121, 122, 131, 137], "fourth": [14, 23, 69, 111], "frac": 70, "fraction": [36, 57, 123], "frame": [53, 64, 107, 111, 114, 115, 116, 131, 136, 137], "frameobject": 64, "framework": [6, 91, 137], "francisco": 121, "frank": 52, "fraxur": 118, "free": [4, 20, 43, 126, 127, 129, 130, 131, 133, 135, 145], "freed": 43, "freedom": 136, "freeli": [4, 135], "french": 43, "freq_dist": 76, "frequenc": [76, 107, 131, 132], "frequent": [14, 24, 28, 43, 55, 102, 103, 107, 131, 134], "fresher": 137, "frexp": [55, 57], "fri": [40, 130, 132, 133], "friendli": [10, 32], "frillish": 118, "froaki": 118, "frogadi": 118, "from": [4, 6, 7, 9, 10, 11, 12, 13, 14, 20, 22, 23, 24, 26, 27, 32, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 53, 54, 56, 57, 59, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 81, 82, 86, 90, 97, 98, 100, 101, 102, 103, 114, 115, 116, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "from_arrai": [111, 114], "from_dict": [107, 119], "from_tupl": [110, 117], "fromarrai": 105, "fromit": 105, "fromtimestamp": [34, 35, 39], "front": [14, 27, 133], "front_end": 28, "frontend": 122, "froslass": 118, "frown": 81, "fruit": [14, 20, 22, 28, 29, 31, 46, 64, 66, 77, 109, 133], "fruit1": 109, "fruit2": 109, "fruit3": 109, "fruit4": 109, "fruits1": 66, "fruits2": 66, "fruits3": 66, "fruits4": 66, "fruits_and_veg": 46, "fruits_df": 109, "fruits_dict": 109, "fruits_list": 109, "fruits_veget": 29, "fset": 13, "fsum": [55, 57], "fucntion": [50, 51], "fulfil": 125, "full": [6, 34, 35, 36, 43, 44, 49, 55, 58, 65, 70, 101, 103, 132], "full_data": 43, "full_lik": 101, "full_nam": [49, 52, 65], "full_stack": 28, "fulli": 133, "fun": [14, 49, 50, 51, 52, 55, 65, 70, 124, 136], "fun1": [50, 51, 78], "fun2": [50, 51, 78], "fun3": [51, 78], "func": [12, 114, 130], "func1": 76, "func2": 76, "function": [5, 6, 9, 13, 14, 15, 17, 23, 24, 26, 34, 40, 41, 43, 44, 45, 46, 50, 56, 58, 62, 63, 64, 65, 66, 67, 68, 71, 76, 77, 81, 83, 87, 98, 100, 104, 107, 109, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137], "function_nam": 49, "functionnam": 46, "functool": 54, "fundament": [76, 107, 124], "fungi": 49, "furfrou": 118, "furret": 118, "further": [10, 27, 43, 45, 47, 49, 69, 71, 73, 107, 108, 116, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145], "furthermor": [10, 12, 13, 28, 49, 55, 71, 76, 81, 122], "furthest": 14, "futur": [22, 24, 43, 65, 81, 115, 124, 128, 134, 135, 137, 145], "futurewarn": [115, 119, 124, 128], "g": [5, 12, 24, 28, 29, 43, 65, 97, 98, 101, 103, 104, 107, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139], "ga": 97, "gabit": 118, "gain": [125, 126, 134, 135], "gallad": 118, "gallademega": 118, "galvantula": 118, "gam": 135, "game": [6, 58], "gamma": [55, 56, 57, 135], "gammavari": 56, "gap": 63, "garbag": [43, 45, 77, 112], "garbodor": 118, "garchomp": 118, "garchompmega": 118, "gardevoir": 118, "gardevoirmega": 118, "gari": 52, "gas_pric": 97, "gas_price_figur": 97, "gastli": 118, "gastrodon": 118, "gate": 32, "gather": [107, 108, 112, 130], "gaug": [129, 130], "gauss": 56, "gaussian": [56, 104, 125, 126, 128, 135], "gaussiankd": 132, "gave": 43, "gca": [130, 136, 137], "gcd": 55, "gdp": 135, "gea": 97, "gender": [30, 43, 76, 121, 125, 129, 130, 132, 133, 137], "gender_domin": 132, "gener": [4, 6, 9, 12, 16, 17, 22, 23, 26, 27, 29, 45, 46, 47, 49, 53, 54, 55, 56, 58, 59, 64, 67, 70, 73, 76, 77, 78, 81, 90, 98, 101, 102, 111, 114, 117, 118, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145], "generate_color": 55, "generate_full_nam": 49, "generate_group": 52, "generatig": 123, "generatingdata": [125, 127], "generatorexit": 45, "genesect": 118, "genexpr": 10, "genfromtxt": [104, 105], "gengar": 118, "gengarmega": 118, "genotyp": 129, "gentleman": 135, "geodud": 118, "geograph": 135, "gereet": 49, "germain": 97, "german": 43, "germancar": 119, "germani": 119, "get": [0, 2, 4, 9, 10, 11, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 31, 32, 36, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 54, 55, 64, 65, 70, 71, 76, 77, 78, 79, 81, 83, 84, 87, 101, 102, 104, 108, 110, 114, 115, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 145], "get_data": 77, "get_first_ten_countri": 12, "get_group": 119, "get_height": 133, "get_last_ten_countri": 12, "get_offset": 129, "get_string_list": 12, "get_temperatur": 13, "get_width": 133, "get_x": 133, "get_xlim": 130, "get_xticklabel": 133, "get_yticklabel": 133, "getattr": [77, 78, 130], "getcwd": 55, "getcwdb": 44, "getdata": 77, "getdatalim": 129, "getrandbit": 56, "getroot": 43, "getstat": 56, "ggplot": 97, "ghost": 118, "gibl": 118, "gift": 12, "gigabyt": 137, "gigalith": 118, "girafarig": 118, "giratinaalt": 118, "giratinaorigin": 118, "gist": 126, "gist_earth": 127, "gist_earth_r": 127, "gist_grai": 127, "gist_gray_r": 127, "gist_heat": 127, "gist_heat_r": 127, "gist_ncar": 127, "gist_ncar_r": 127, "gist_rainbow": 127, "gist_rainbow_r": 127, "gist_stern": 127, "gist_stern_r": 127, "gist_yarg": 127, "gist_yarg_r": 127, "github": [65, 97, 98], "give": [6, 9, 12, 14, 18, 19, 20, 22, 24, 26, 27, 46, 49, 55, 57, 63, 65, 70, 76, 77, 90, 100, 101, 103, 104, 107, 108, 109, 115, 116, 117, 118, 119, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137], "giveawai": 127, "given": [10, 12, 15, 17, 18, 22, 23, 24, 27, 31, 34, 36, 40, 41, 45, 46, 49, 52, 55, 59, 62, 63, 66, 69, 71, 78, 81, 100, 101, 104, 108, 125, 129, 130, 132, 135, 137], "gkdive": 97, "gkhandl": 97, "gkkick": 97, "gkposit": 97, "gkreflex": 97, "glaceon": 118, "glali": 118, "glaliemega": 118, "glameow": 118, "glanc": 65, "gligar": 118, "glimps": 132, "gliscor": 118, "global": [4, 11, 45, 54, 61, 63, 71], "global_lang": 50, "global_var": [50, 51], "globalglob": 50, "gloom": 118, "glu": 123, "gmtoff": 36, "gmtoff_fract": 36, "gnbu": 127, "gnbu_r": 127, "gnuplot": 127, "gnuplot2": 127, "gnuplot2_r": 127, "gnuplot_r": 127, "go": [6, 12, 13, 21, 22, 24, 26, 46, 49, 53, 64, 70, 71, 73, 76, 79, 81, 100, 118, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145], "goal": [105, 122, 125, 126, 134, 145], "god": 30, "goe": [11, 41, 45, 46, 47, 55, 76, 81, 111, 114, 126, 132], "gogh": 6, "gogoat": 118, "golbat": 118, "goldeen": 118, "golduck": 118, "golem": 118, "golett": 118, "golurk": 118, "gone": [125, 129, 135], "gonna": 135, "good": [11, 22, 27, 29, 43, 46, 47, 49, 52, 55, 60, 64, 69, 97, 98, 107, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "goodra": 118, "googl": [6, 27, 59, 78, 135], "googol": 66, "goomi": 118, "gorebyss": 118, "got": [12, 15, 51, 55, 67, 68, 79, 107, 131, 132, 145], "gothita": 118, "gothitel": 118, "gothorita": 118, "gourgeistaverag": 118, "gourgeistlarg": 118, "gourgeistsmal": 118, "gourgeistsup": 118, "govern": [129, 135], "gpt": 144, "grab": 133, "gracefulli": [24, 116], "grade": [18, 19, 20, 97, 108, 129], "gradient": 145, "graduat": 132, "grai": [124, 127, 129, 130, 137], "granbul": 118, "grandpar": 78, "grant": 20, "grape": 22, "graph": [98, 126, 129, 133, 135], "graphic": [6, 46, 130, 132, 136, 138], "grass": 118, "gravel": 118, "graviti": [49, 65, 68, 74], "gray_r": 127, "grayscal": 124, "great": [17, 71, 79, 123, 129, 130, 135, 136, 137, 138], "greater": [18, 20, 21, 23, 24, 47, 55, 57, 65, 70, 79, 100, 103, 107], "greek": 76, "green": [22, 64, 124, 127, 128, 130], "greens_r": 127, "greet": [12, 49, 52, 69, 77], "greet_modul": 55, "grei": [122, 124, 127, 128, 133], "greninja": 118, "gretta": 52, "greyish": 124, "greys_r": 127, "grid": [98, 100, 101, 122, 127, 132, 134, 135, 136, 137], "grid_kw": 127, "gridlin": 98, "gridsiz": 132, "gridspec": 137, "gridspec_kw": [132, 137], "grimer": 118, "grip": [131, 136], "grotl": 118, "groudon": 118, "groudonprim": 118, "ground": [76, 118], "group": [6, 107, 119, 122, 125, 129, 131, 132, 133, 135], "groupbi": [119, 130, 132], "grouper": 132, "grovyl": 118, "grow": [4, 49, 58, 69], "growlith": 118, "growth": 135, "grumpig": 118, "gt": 55, "guarante": [29, 43, 46, 137], "guava": [22, 28, 31, 133], "guess": [13, 47, 101, 107, 121, 130, 131, 133, 134], "guest": 20, "gui": [6, 46, 123, 127, 129, 133, 135], "guid": [4, 7, 82, 86, 123, 124, 126], "guidanc": 124, "gulpin": 118, "gun": 121, "gunmet": 124, "gurdurr": 118, "guthri": 121, "gyarado": 118, "gyaradosmega": 118, "gz": 55, "h": [10, 14, 22, 23, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 68, 70, 103, 121, 131, 133], "h1": 104, "h2": 104, "ha": [4, 6, 9, 11, 12, 13, 14, 15, 17, 19, 20, 22, 24, 26, 27, 30, 31, 32, 34, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 54, 55, 58, 62, 64, 65, 66, 67, 68, 70, 71, 73, 76, 77, 78, 81, 97, 102, 103, 104, 107, 108, 109, 110, 113, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "habit": 135, "hack": 132, "hacker_new": 43, "had": [11, 12, 45, 49, 52, 55, 103, 122, 126, 127, 130, 131, 132, 133, 134, 135, 137], "hadlei": [125, 135], "half": [28, 124, 134], "halt": 46, "hamper": 55, "hand": [22, 30, 31, 43, 50, 52, 73, 76, 77, 122, 125, 126, 127, 130, 133, 135, 137], "handel": [4, 48], "handi": [6, 97, 98, 107, 118, 119, 125, 126, 129, 130, 132, 135, 136, 137], "handl": [6, 9, 10, 11, 24, 27, 40, 41, 43, 44, 45, 47, 52, 100, 102, 108, 116, 126, 133, 135], "handler": 24, "hank": 52, "happen": [9, 10, 11, 15, 22, 23, 71, 73, 78, 79, 113, 123], "happi": [24, 27, 28, 49, 62, 69, 76, 126, 131, 135], "happini": 118, "hard": [4, 14, 43, 53, 64, 69, 137], "hardtop": 119, "hardwar": [26, 73], "hariyama": 118, "harmless": 123, "harper": 52, "harri": [77, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117], "harvard": 132, "has_w2": 65, "hasattr": 77, "hash": [27, 59, 64], "hashabl": 31, "hatch": 97, "hatchback": [107, 108, 119], "haunter": 118, "have": [0, 5, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 37, 38, 39, 41, 43, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 62, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 78, 79, 81, 84, 90, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 145], "haven": [34, 127, 129, 130, 135], "hawk": 14, "hawlucha": 118, "haxoru": 118, "hazi": 137, "he": [14, 20, 27, 43, 46, 47, 76, 136], "head": [97, 107, 118, 119, 121, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 137, 139], "header": [49, 52, 110, 111, 114, 116, 117, 118, 132, 137], "heart": 8, "heat": [137, 140], "heatmap": [137, 139], "heatmor": 118, "heatran": 118, "heavi": [97, 132, 135], "heavili": [127, 128], "hei": [14, 29], "height": [28, 70, 123, 126, 127, 133], "height_ratio": 132, "held": 135, "heliolisk": 118, "helioptil": 118, "hello": [4, 6, 10, 11, 12, 14, 18, 19, 22, 27, 28, 29, 31, 41, 45, 49, 52, 55, 59, 64, 65, 67, 68, 69, 70, 71, 75, 77, 78, 129], "hello009": 27, "hello99": 27, "hello99world66": 27, "hellohellohello": 27, "helloworld": [22, 23, 24, 27, 28, 29, 31], "help": [2, 6, 14, 17, 22, 23, 24, 28, 34, 35, 36, 39, 40, 46, 47, 49, 53, 55, 60, 63, 65, 71, 76, 81, 83, 87, 97, 98, 100, 107, 108, 122, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 145], "helper": 22, "helsinki": 43, "henc": [17, 18, 22, 23, 24, 26, 27, 28, 29, 32, 34, 43, 50, 54, 55, 67, 69, 70, 71, 73, 76, 79, 102, 121, 122, 125, 126, 133, 134, 135, 137], "her": [69, 134], "heracross": 118, "heracrossmega": 118, "herdier": 118, "here": [6, 7, 9, 10, 11, 12, 13, 14, 20, 22, 23, 24, 26, 28, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 47, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 64, 65, 66, 67, 69, 70, 71, 76, 77, 78, 79, 82, 83, 86, 87, 90, 102, 103, 104, 108, 109, 116, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145], "hereon": 137, "heterogen": [29, 107, 109, 115], "hex": [26, 27, 124, 126, 128], "hexa": 55, "hexadecim": [26, 27, 55, 66, 69], "hexagon": 126, "hexpoint": 81, "hh": 27, "hhmm": [35, 36], "hi": [14, 30, 41, 46, 69, 134, 135], "hiberfil": 44, "hidden": [9, 76], "hide": [11, 13, 76, 124, 132], "hierarch": [107, 108, 110, 117, 139], "hierarchi": 58, "high": [4, 5, 6, 56, 97, 98, 100, 101, 107, 122, 126, 131, 132, 133, 134, 136], "higher": [19, 54, 68, 73, 125, 126, 132, 134], "higher_order_funct": 11, "highest": [55, 107, 121, 126, 129, 131, 133], "highli": [43, 77, 81, 100, 122, 126, 127, 129, 130, 131, 132, 133, 136], "highlight": [123, 125, 137, 139], "himself": 81, "hint": [47, 105, 119, 133], "hippopota": 118, "hippowdon": 118, "hispan": 121, "hist": [97, 98, 127, 128, 136, 137], "hist_kw": 123, "histogram": [123, 126, 127, 128, 130, 133, 136], "histplot": 128, "histtyp": 136, "hit": 45, "hitmonchan": 118, "hitmonle": 118, "hitmontop": 118, "hl": 124, "hls_palett": 124, "hmm": [132, 136], "hmmm": 134, "ho": [27, 118], "hobbi": 108, "hoffman": 121, "hold": [28, 51, 52, 65, 81, 101, 129, 132, 134, 137], "home": 76, "homework": [126, 127, 130, 133, 135], "homogen": [29, 101], "hon": 6, "honchkrow": 118, "honda": 119, "honedg": 118, "honei": 24, "honest": 129, "honestli": [127, 131, 132, 135], "honk": 71, "honor": 135, "hood": [131, 132], "hoopahoopa": 118, "hoorai": 18, "hoothoot": 118, "hope": [22, 27, 49, 70, 121, 125, 127, 133, 135, 136], "hoppip": 118, "horitzont": 104, "horizon": 134, "horizont": [14, 27, 100, 104, 122, 129, 130, 131, 132, 133, 135, 137], "horrai": 18, "horsea": 118, "horsepow": [107, 108, 118, 119], "hostnam": 46, "hot": [7, 82, 86, 127], "hot_r": 127, "houndoom": 118, "houndoommega": 118, "houndour": 118, "hour": [35, 36, 38, 39, 40, 70, 78, 97, 134, 145], "hous": [77, 135], "how": [0, 6, 9, 10, 11, 12, 13, 14, 17, 19, 22, 23, 24, 26, 29, 30, 32, 34, 40, 43, 45, 46, 47, 50, 51, 52, 54, 56, 57, 59, 68, 69, 70, 73, 76, 77, 78, 79, 84, 107, 108, 109, 111, 113, 114, 115, 116, 117, 121, 122, 123, 125, 126, 130, 132, 133, 134, 135, 136, 137, 142, 145], "howdi": 14, "howev": [13, 14, 18, 19, 22, 29, 31, 32, 41, 46, 47, 51, 64, 65, 67, 68, 71, 73, 76, 77, 78, 79, 81, 101, 102, 103, 138], "hp": 118, "hspace": 132, "hstack": [100, 136], "hsv": [125, 127, 130, 131, 133, 134], "hsv_r": [127, 130], "html": [6, 7, 27, 28, 43, 76, 82, 86, 103, 107, 124, 135, 139], "http": [6, 97, 103, 128, 135, 139], "hu": 24, "hue": [124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "hue_kw": [136, 137], "hue_ord": [125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "huge": [67, 117, 124, 129, 132, 135, 137], "human": [13, 14, 32, 64, 73, 136, 144], "hundr": [13, 70, 137], "hungari": 126, "hungri": 19, "hunt": [15, 32, 49, 69], "huntail": 118, "husl": [124, 133], "hybrid": 132, "hydreigon": 118, "hyperbol": 57, "hyperparamat": 145, "hypno": 118, "hypot": [55, 57], "i": [0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 21, 24, 26, 32, 34, 35, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 50, 52, 54, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 82, 84, 85, 86, 88, 91, 97, 98, 100, 101, 102, 103, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 144], "i_num": 47, "ia": [12, 121], "iat": 107, "ibm": 27, "ic": 118, "icefir": [127, 129, 130, 131, 132, 135, 136, 137], "icefire_r": 127, "iceland": 46, "icon": [6, 145], "id": [18, 49, 52, 55, 71, 77, 97, 117, 121, 122, 133, 134, 135], "id_var": [131, 137], "idea": [9, 10, 60, 64, 69, 71, 81, 127, 129, 130, 131, 135, 136, 137], "ideal": [23, 121, 122, 124, 129, 132, 133, 135, 136], "ident": [100, 101, 103, 107, 117, 126, 133, 134, 136], "identifi": [4, 12, 14, 27, 32, 46, 49, 54, 55, 58, 64, 65, 70, 71, 75, 76, 107, 108, 109, 112, 114, 116, 133, 135], "identitytransform": 130, "ifetch": 131, "igglybuff": 118, "ignor": [22, 23, 24, 59, 64, 111, 114, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139], "ignore_index": [112, 113], "ii": [7, 82, 86, 125], "iii": 121, "iinfo": 105, "ill": 65, "illeg": [45, 64], "illumin": 124, "illumis": 118, "illustr": [10, 22, 23, 31, 46, 47, 60, 69, 81, 121, 122, 123, 130, 132, 136, 137], "iloc": [107, 118], "imag": [6, 7, 43, 53, 66, 77, 82, 86, 122, 124, 126, 135, 136, 137], "imagin": [14, 71, 107], "imaginari": [26, 31, 45, 66, 67, 105, 125], "imbal": 123, "imdisk": 44, "img": [44, 126], "imgseek": 6, "immedi": [10, 19, 22, 23, 40, 41, 46, 49, 62, 81, 121, 145], "immens": 123, "immut": [22, 27, 28, 29, 30, 31, 49, 66, 67, 104], "imp": 55, "impact": [125, 130], "imperfect": 26, "implement": [9, 11, 12, 13, 24, 26, 28, 29, 47, 49, 55, 64, 73, 76, 78, 79, 81, 103, 125, 126, 127, 137, 144, 145], "impli": [27, 28, 43, 44, 64, 70], "implic": 130, "implicit": [27, 81], "implicitli": [26, 64, 81, 119], "import": [4, 6, 7, 12, 14, 17, 23, 26, 29, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 51, 54, 56, 57, 59, 63, 64, 65, 67, 71, 73, 75, 76, 81, 82, 86, 97, 98, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "import_ipynb": 55, "importerror": 45, "importlib": 55, "imposs": [69, 132], "improp": 45, "improv": [49, 107, 116, 144], "inan": 132, "inbuilt": [66, 104, 111], "inc": 12, "inch": 97, "incid": [121, 133], "includ": [0, 6, 7, 9, 14, 19, 22, 23, 24, 27, 28, 43, 46, 55, 59, 60, 62, 67, 73, 77, 81, 82, 84, 86, 98, 101, 104, 107, 108, 119, 121, 122, 127, 131, 137, 138, 142, 145], "inclus": [55, 56, 101, 107, 124], "incom": [43, 52, 76, 126], "incomplet": 64, "inconsist": 45, "incorpor": 122, "incorrect": [19, 23, 45, 64, 73], "increas": [23, 24, 28, 64, 124, 126, 130, 131, 134, 135, 137], "increment": [22, 23, 24, 51, 79], "ind": 28, "inde": [130, 131, 132, 133, 137], "indefinit": 23, "indent": [4, 18, 19, 21, 22, 24, 43, 45, 49, 51, 75], "indentationerror": [45, 64], "independ": [73, 122, 125, 133, 134], "index": [10, 14, 23, 27, 30, 31, 40, 45, 46, 55, 67, 69, 100, 101, 118, 119, 126, 133, 135, 136, 137], "index1": 108, "index2": 108, "index_on": 107, "indexerror": [27, 28, 29], "india": [12, 28, 29, 32, 43], "indianr": 128, "indic": [18, 27, 28, 29, 40, 43, 45, 64, 102, 111, 112, 115, 121, 125, 127, 129, 131, 132, 133, 135], "indirect": 78, "indirectli": 47, "individu": [27, 30, 43, 55, 102, 123, 127, 129, 131, 132, 133, 134, 135, 136, 138], "indivis": 135, "indonesia": [29, 43], "industri": [108, 109], "ineffici": [22, 53], "inf": [9, 55, 103, 105, 130], "infer": [65, 104, 107, 108, 121, 126, 130, 132, 134, 135, 136, 137], "infernap": 118, "inferno": 127, "inferno_r": 127, "infin": [57, 103, 105], "infinit": [23, 26, 41, 53, 70], "infit": 9, "info": [59, 77, 78, 81, 105, 128], "inform": [0, 7, 20, 34, 43, 44, 46, 51, 65, 81, 82, 84, 86, 107, 108, 129, 131, 133, 134, 135, 136, 137, 142], "ing": 14, "inher": 124, "inherit": [4, 46, 47, 80, 81], "inhomogen": 102, "init": [0, 81, 84, 142], "initi": [9, 10, 22, 23, 24, 27, 28, 31, 43, 50, 56, 58, 65, 71, 76, 77, 78, 81, 100, 101, 113, 125, 128, 136, 137], "inkai": 118, "inlin": [54, 87, 97, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "inner": [11, 12, 22, 23, 24, 50, 103, 107, 130, 131, 132], "inner_arg": 130, "inner_f": 130, "inner_fun": 50, "inner_func": 71, "inner_funct": 71, "inner_kwarg": 130, "innermost": [23, 24], "inplac": [107, 111, 112, 113, 114, 116, 117, 118, 133], "input": [9, 10, 11, 12, 13, 15, 19, 20, 21, 22, 23, 24, 27, 28, 29, 30, 31, 36, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 60, 63, 65, 66, 67, 68, 70, 73, 76, 77, 78, 79, 81, 83, 87, 102, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 125, 129, 130, 131, 135, 136, 137, 138], "inputsid": 78, "insert": [27, 30, 31, 59, 77, 100, 108, 117], "insid": [9, 11, 12, 13, 14, 15, 18, 19, 21, 24, 27, 28, 29, 30, 31, 32, 41, 43, 44, 46, 49, 50, 51, 52, 55, 59, 60, 62, 64, 65, 66, 67, 68, 69, 71, 76, 77, 78, 79, 81, 107, 126, 131, 132, 133, 134, 137], "insight": [126, 130, 131, 133], "inspect": [81, 114], "inspir": 31, "insrantli": 6, "inst_creat": 81, "insta": 102, "instal": [43, 55, 62, 123], "instanc": [12, 22, 26, 28, 36, 43, 45, 46, 55, 59, 64, 65, 67, 71, 78, 81, 103, 104, 107, 114, 115, 129, 132, 137, 138], "instant": 54, "instanti": [26, 34, 76, 77, 81], "instantli": 24, "instead": [6, 10, 11, 13, 15, 19, 23, 45, 55, 65, 73, 76, 77, 78, 79, 103, 107, 109, 119, 121, 124, 125, 127, 128, 129, 131, 132, 133, 134, 135, 137], "instruct": [0, 1, 18, 41, 46, 64, 84, 122, 141, 142, 143], "int": [6, 9, 11, 12, 22, 23, 26, 27, 28, 29, 45, 46, 47, 59, 66, 67, 68, 69, 70, 77, 78, 97, 113, 114], "int32": [101, 103, 104], "int64": [101, 104, 107, 108, 118, 119], "int_1": 66, "int_2": 66, "intact": 125, "integ": [18, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 34, 43, 46, 49, 53, 55, 56, 57, 59, 64, 66, 67, 68, 70, 100, 101, 107, 108, 109], "intel": 73, "intellig": [125, 133, 144], "intellij": 122, "intend": [126, 137], "intens": 125, "intent": [59, 125, 133], "inter": [131, 133, 134], "interact": [5, 6, 7, 10, 43, 55, 62, 69, 77, 82, 86, 107, 122], "intercept": [32, 70, 123], "intercept_stderr": 123, "interchang": [107, 130], "interest": [10, 12, 14, 46, 71, 77, 113, 122, 123, 124, 132, 133, 134, 135, 136], "interfac": [6, 13, 46, 76, 122, 124], "interg": 68, "intermedi": 73, "intermediari": 73, "intern": [9, 10, 13, 24, 27, 28, 43, 45, 52, 56, 76, 77, 79, 108, 124], "internet": [6, 127], "interp": 105, "interpol": [126, 135], "interpret": [4, 6, 10, 14, 18, 22, 23, 24, 27, 45, 46, 49, 52, 53, 55, 59, 62, 63, 64, 68, 69, 70, 71, 75, 125, 133, 134, 135, 136], "interquartil": 132, "interrelationship": 137, "interrupt": 45, "intersect": [22, 67], "intersect1d": 105, "intersection_upd": 31, "interv": [97, 100, 104, 122, 125, 127, 129, 131, 132, 133, 134, 135], "intervent": 144, "interview": [135, 144], "intiuit": 6, "intrigu": 121, "intrins": [121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "intro": [1, 15, 141, 143], "introduc": [13, 27, 62, 131, 132, 136, 137], "introduct": [27, 144], "introductori": 126, "intuit": [5, 13, 107, 129], "inv": 100, "invalid": [21, 27, 45, 46, 55, 63, 65, 68, 69, 103], "inventor": 22, "invers": [8, 24, 40, 57, 100, 103], "invert": 14, "invest": 133, "invis": 132, "invoc": [54, 125], "invok": [12, 32, 77, 79], "involv": [26, 68, 70, 78, 121, 126, 129, 131, 135, 144], "ioerror": 46, "ion": [7, 82, 86], "iot": 145, "ip": 135, "ipynb": [2, 6, 44, 55, 83, 87], "ipynb_checkpoint": 44, "ipython": [6, 9, 10, 11, 12, 13, 15, 23, 27, 28, 29, 30, 31, 36, 41, 43, 45, 46, 47, 50, 51, 52, 53, 55, 63, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 81, 102, 103, 111, 114, 116, 119, 122, 124, 126, 130, 135], "iqr": 131, "ireland": 126, "iri": [97, 121, 124, 126, 127, 129, 130, 131, 139], "iris_data": [97, 139], "iron": 9, "irrespect": 24, "is_cal": 12, "is_empti": 49, "is_even": [12, 49], "is_light_on": 65, "is_mar": [20, 22], "is_marri": 65, "is_name_long": 12, "is_odd": 12, "is_prim": 49, "is_return": 12, "is_uniqu": 116, "is_valid_vari": 14, "isalnum": 27, "isalpha": [23, 27], "isatti": 43, "isclos": 55, "isdecim": [23, 27], "isdigit": 27, "isdisjoint": 31, "isfinit": [55, 57], "isidentifi": 27, "isin": [131, 133], "isinf": [55, 57], "isinst": [26, 67, 77, 78], "island": 12, "islow": 27, "isn": [107, 114, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "isnan": [55, 57], "isnul": 107, "isnumer": 27, "isol": [6, 71], "isprint": 27, "isqrt": 55, "isspac": [24, 27], "issu": [26, 32, 51, 98, 124, 132, 136], "issubset": 31, "issuperset": 31, "istitl": 27, "isupp": 27, "isuzu": 119, "item": [9, 10, 12, 14, 15, 22, 23, 27, 31, 32, 45, 46, 49, 54, 55, 59, 67, 77, 100, 108, 111, 133], "items": [101, 104, 105], "iter": [4, 10, 12, 16, 24, 32, 45, 53, 55, 57, 69, 72, 108, 122, 133, 135, 137], "iter_obj": 9, "iterrow": [107, 118], "itertool": 127, "its": [6, 10, 11, 12, 22, 23, 26, 27, 28, 29, 30, 31, 34, 35, 36, 43, 49, 50, 52, 55, 59, 67, 70, 71, 73, 76, 77, 78, 81, 107, 108, 109, 110, 111, 113, 115, 117, 122, 126, 130, 131, 132, 137, 138, 139], "itself": [9, 11, 13, 22, 27, 29, 30, 31, 43, 47, 49, 53, 73, 76, 77, 78, 81, 125, 132, 133, 136, 144], "iv": 14, "ivan": 52, "ivysaur": 118, "j": [12, 22, 23, 24, 27, 28, 35, 36, 43, 65, 66, 77, 100, 101, 108, 123, 136], "jack": 110, "jaguar": 119, "jam": 27, "jan": [35, 36, 62, 121], "jane": [77, 110], "januari": [14, 20, 24, 34, 35, 36, 39, 40], "japan": [43, 119], "japanesecar": 119, "jargon": 70, "jason": 68, "java": [4, 22, 23, 27, 28, 30, 43, 64, 76, 81], "javascrip": 43, "javascript": [14, 27, 32, 43, 46, 73, 76], "jellic": 118, "jenner": 22, "jet": [124, 127], "jet_r": 127, "jetbrain": 122, "jigglypuff": 118, "jill": 110, "jirachi": 118, "jitter": [130, 135], "jlufe": 30, "jo": 14, "job": [14, 27, 73, 124, 125, 129, 132, 136], "joe": [107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 121], "john": [29, 52, 97, 121, 135], "join": [27, 28, 29, 31, 43, 69, 132], "joined_df": 107, "joint": [125, 134, 140], "jointgrid": [126, 128], "jointplot": [126, 127], "jolteon": 118, "joltik": 118, "jose": 110, "journal": 125, "journei": [125, 137, 145], "jr": [97, 118], "json": [6, 55, 107], "json_exampl": 43, "json_str": 107, "jude": 14, "juic": 66, "jul": 62, "juli": 20, "jumbl": 125, "jump": [24, 27, 125, 131, 133, 137], "jumpluff": 118, "jun": [35, 37, 62], "june": [20, 24, 34, 35, 36, 37, 40, 123], "jupyt": [0, 1, 2, 4, 7, 45, 69, 82, 83, 84, 86, 87, 122, 124, 141, 142, 143, 144, 145], "jupytext": [0, 84, 142], "just": [9, 10, 12, 24, 27, 54, 58, 59, 62, 64, 67, 69, 81, 107, 109, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "justcount": 77, "justifi": [27, 69], "juventu": 97, "jvm": 73, "jynx": 118, "k": [22, 23, 27, 56, 97, 98, 121, 123, 124, 129, 130], "k_depth": 135, "kabuto": 118, "kabutop": 118, "kadabra": 118, "kaggl": 134, "kakuna": 118, "kangaskhan": 118, "kangaskhanmega": 118, "kappa": 56, "karen": 135, "karrablast": 118, "kate": 29, "kb": 55, "kcsy2": 55, "kde": [123, 126, 128, 132, 136], "kdeplot": [124, 126, 127, 136, 137], "kecleon": 118, "keen": [12, 134], "keep": [7, 10, 14, 23, 52, 58, 77, 82, 86, 108, 113, 121, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137], "keepdim": 105, "kei": [12, 15, 17, 20, 22, 28, 29, 31, 45, 46, 64, 66, 67, 70, 107, 109, 114, 116, 119, 127, 136], "keldeoordinari": 118, "keldeoresolut": 118, "kenel": 128, "kenneth": [121, 124], "kept": [58, 124], "kera": 144, "kernel": [0, 6, 84, 122, 124, 127, 128, 132, 135, 142], "kernel_density_estim": 128, "kernel_list": 128, "keyboard": 4, "keyboardinterrupt": [23, 41, 45, 46], "keyerror": [30, 31, 110, 111, 114, 116], "keyword": [4, 11, 12, 15, 18, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 46, 49, 50, 54, 55, 59, 61, 65, 69, 71, 75, 76, 77, 81, 97, 124, 126, 135, 137], "keyword_ord": 27, "kg": 26, "kid": 123, "kill": 137, "kind": [9, 10, 46, 49, 52, 64, 83, 87, 97, 107, 114, 115, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "kindli": 137, "kingdra": 118, "kingler": 118, "kirlia": 118, "kivi": 6, "kiwi": [22, 31], "klang": 118, "klefki": 118, "klink": 118, "klinklang": 118, "km": 78, "know": [5, 10, 11, 12, 13, 20, 22, 23, 24, 26, 46, 49, 52, 53, 55, 62, 65, 67, 69, 73, 78, 79, 81, 100, 102, 104, 110, 111, 114, 116, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145], "knowledg": [47, 135, 136], "known": [6, 11, 22, 23, 26, 29, 30, 50, 54, 65, 68, 73, 76, 77, 79, 103, 121, 125, 127, 129, 130, 131, 133, 135, 136, 137], "knoxvil": 121, "kof": 118, "kool": 27, "korea": 97, "krabbi": 118, "kricketot": 118, "kricketun": 118, "krokorok": 118, "krookodil": 118, "kw": [130, 136, 137], "kwarg": [12, 16, 46, 81, 114, 127, 130, 136, 137], "kyogr": 118, "kyogreprim": 118, "kyurem": 118, "kyuremblack": 118, "kyuremwhit": 118, "l": [10, 14, 22, 23, 24, 27, 28, 29, 30, 31, 46, 54, 68, 97, 133], "la_": [7, 82, 86], "label": [1, 85, 97, 98, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 125, 132, 133, 135, 136, 137, 139, 141, 143], "label_dist": 128, "labl": 107, "labour": 126, "lairon": 118, "lam": 129, "lambd": 56, "lambda": [10, 12, 63, 107, 132], "lampent": 118, "land": [12, 90], "landorusincarn": 118, "landorustherian": 118, "langchain": 144, "languag": [4, 6, 12, 13, 14, 22, 23, 24, 27, 28, 30, 32, 43, 45, 49, 62, 63, 64, 65, 69, 70, 76, 77, 81, 83, 87, 136, 144], "lanturn": 118, "laod": 139, "lapra": 118, "larg": [6, 10, 28, 44, 45, 47, 55, 60, 70, 73, 97, 98, 101, 103, 107, 110, 117, 119, 122, 123, 130, 131, 135], "larger": [6, 11, 49, 58, 68, 73, 103, 135], "largest": [31, 55, 57], "larvesta": 118, "larvitar": 118, "last": [6, 9, 10, 11, 12, 13, 15, 22, 23, 24, 27, 28, 29, 30, 31, 36, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 59, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 81, 102, 103, 104, 107, 114, 116, 117, 122, 126, 127, 130, 132, 133, 135, 137], "last_index": [27, 111], "last_lett": 27, "last_nam": [12, 20, 22, 27, 30, 49, 65], "last_nm": 52, "lastli": [43, 131, 133, 137], "lastnam": [15, 49, 52, 65, 69, 76], "late": [121, 123], "latent": 134, "later": [10, 13, 24, 47, 59, 64, 65, 69, 70, 77, 107, 121, 125, 127, 129, 130, 131, 134, 137], "latest": [6, 123, 135], "latia": 118, "latiasmega": 118, "latio": 118, "latiosmega": 118, "latitud": 135, "latter": 78, "lattic": 136, "latvia": 126, "launch": 6, "layer": 76, "layout": 137, "lazi": [10, 22], "lb": 97, "ldexp": [55, 57], "ldot": 27, "lead": [27, 45, 55], "leafeon": 118, "leap": 134, "learn": [6, 8, 9, 10, 11, 13, 14, 15, 19, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 71, 73, 76, 77, 78, 79, 90, 98, 100, 107, 109, 110, 112, 114, 115, 116, 117, 119, 121, 125, 126, 127, 131, 133, 134, 135, 136, 137, 138], "learnt": [129, 130, 131, 135, 137], "least": [6, 10, 14, 28, 30, 41, 64, 71, 77, 81, 103, 123, 126, 127, 129, 130, 131, 133, 135], "leav": [23, 31, 127, 129, 130, 132, 133, 135, 137], "leavanni": 118, "lectur": [27, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "ledft": 123, "ledian": 118, "ledyba": 118, "lee": [97, 121], "left": [9, 14, 22, 27, 35, 36, 38, 58, 69, 70, 78, 79, 97, 98, 102, 107, 122, 123, 126, 130, 132, 133, 134], "leg": [30, 78], "legandari": 118, "legend": [7, 82, 86, 97, 98, 125, 127, 130, 132, 133, 134, 135, 136, 137], "legend_": 130, "legend_out": [125, 134, 137], "legendari": 118, "lembk": 121, "lemon": [22, 46], "len": [10, 12, 22, 23, 24, 27, 31, 32, 36, 65, 70, 100, 111, 114, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "length": [10, 14, 15, 22, 26, 27, 28, 31, 56, 65, 67, 70, 76, 78, 97, 100, 103, 107, 114, 116, 118, 119, 121, 123, 125, 126, 129, 133, 137], "lengthi": [10, 58, 132], "lesli": 121, "less": [10, 18, 19, 20, 23, 24, 32, 41, 47, 57, 70, 73, 79, 107, 125, 136], "lesser": [19, 107], "lesson": 107, "let": [0, 1, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 26, 27, 29, 31, 32, 34, 40, 41, 43, 45, 46, 49, 50, 51, 53, 54, 55, 59, 68, 69, 70, 71, 76, 77, 78, 79, 81, 84, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143], "letter": [12, 14, 22, 23, 24, 27, 31, 32, 45, 55, 63, 65], "lettervalu": [134, 140], "level": [4, 6, 21, 26, 58, 90, 97, 107, 108, 110, 111, 116, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "level_0": 108, "level_index": 111, "leverag": 135, "lewi": 121, "lfloor": 70, "lgamma": [55, 57], "li": 8, "lib": [27, 36, 55, 105, 111, 114, 115, 116, 121, 124, 128, 130], "librari": [6, 27, 57, 60, 64, 98, 100, 107, 108, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 144, 145], "licens": [6, 107, 118, 119], "lickilicki": 118, "lickitung": 118, "lie": 81, "liepard": 118, "life": [5, 50, 136, 145], "light": [97, 124], "light_medium": 97, "lightblu": 123, "lighter": 137, "like": [0, 4, 6, 9, 10, 12, 13, 14, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 47, 49, 52, 54, 55, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 77, 78, 79, 81, 83, 84, 87, 97, 98, 100, 103, 104, 107, 108, 109, 110, 111, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 145], "likelihood": 128, "likewis": [115, 117], "lileep": 118, "lillig": 118, "lillipup": 118, "lime": 46, "limit": [22, 26, 47, 50, 53, 67, 79, 121, 123, 129, 132, 135, 136, 137, 139], "limitless": 125, "limousin": 135, "linalg": [100, 103, 105], "line": [0, 4, 6, 7, 8, 11, 13, 14, 17, 23, 24, 27, 31, 32, 43, 45, 46, 49, 50, 52, 54, 55, 63, 66, 67, 70, 71, 73, 77, 82, 83, 84, 86, 87, 103, 104, 121, 122, 123, 125, 126, 129, 130, 131, 132, 133, 135, 136, 137, 142], "line2d": [7, 82, 86], "line_count": 43, "line_kw": [125, 126], "linear": [5, 32, 49, 78, 100, 123, 124, 125, 126, 127, 129, 131, 134, 135, 137, 144], "linearli": [125, 135], "linearsegmentedcolormap": 124, "linecollect": 130, "linefe": 27, "lineplot": 135, "linestyl": [97, 98, 133], "linewidth": [97, 98, 122, 123, 129, 130, 131, 132, 135, 136, 137, 138], "link": [6, 73, 124, 125, 126, 134, 135, 137], "linoon": 118, "linregress": 123, "linregressresult": 123, "linspac": [7, 82, 86, 100, 105, 122, 128, 135, 137], "linux": 43, "list": [4, 9, 10, 12, 14, 15, 26, 31, 33, 34, 43, 45, 54, 56, 57, 58, 59, 63, 64, 66, 68, 69, 70, 76, 77, 78, 79, 81, 100, 101, 102, 103, 104, 107, 111, 113, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137], "list1": [22, 28, 49, 54, 55, 67, 109], "list2": [28, 54, 109], "list3": 28, "list_": 10, "list_1": 77, "list_enumer": 27, "list_nam": 28, "list_of_cmap": 136, "list_of_hexa_color": 55, "list_of_list": [22, 32], "list_of_rgb_color": 55, "list_siz": 22, "listedcolormap": 133, "listliter": 64, "liter": [4, 27, 35, 36, 45, 46, 52, 59, 64, 65, 68, 69, 70, 75], "lithuania": 126, "litleo": 118, "littl": [71, 78, 102, 123, 125, 129, 130, 132, 133, 134, 136, 137], "litwick": 118, "live": [12, 20, 27, 43, 46, 70, 76], "liverpool": 137, "ljust": [27, 69], "ll": [2, 10, 11, 22, 24, 26, 28, 29, 30, 31, 43, 44, 46, 49, 50, 51, 54, 58, 62, 76, 77, 83, 87, 107, 123, 138], "llm": 144, "lm": [124, 135, 140], "lmplot": [126, 127], "lo": 14, "load": [43, 55, 59, 73, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140], "load_dataset": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "loc": [97, 98, 104, 107, 118, 130, 132, 133], "loc_var": 50, "local": [4, 6, 10, 11, 34, 36, 37, 38, 39, 40, 41, 45, 51, 54, 61, 71, 77, 78, 81, 107, 127], "local_lang": 50, "local_tim": 40, "localtim": [38, 41], "locat": [12, 14, 27, 28, 43, 45, 55, 58, 65, 69, 70, 78, 98, 118, 130, 131, 132, 135], "locator_param": 123, "locket": 55, "log": [44, 55, 56, 57, 100, 104], "log10": [26, 55, 57], "log1p": [55, 57], "log2": [55, 57], "logarithm": [26, 55, 57], "logic": [17, 19, 53, 79, 81, 107, 111, 114, 145], "logical_and": 105, "logical_not": 105, "logist": [125, 126], "lognormvari": 56, "logo": [43, 44], "logo1": 44, "logspac": [7, 82, 86], "logx": 125, "lombr": 118, "london": [12, 34, 38, 43, 46, 76, 111], "long": [12, 17, 23, 24, 26, 27, 32, 63, 64, 66, 71, 81, 104, 123, 129, 130, 145], "long_nam": 12, "longer": [13, 27, 55, 76, 128], "longitud": 135, "look": [9, 11, 12, 13, 14, 17, 24, 26, 43, 45, 50, 53, 55, 58, 59, 63, 64, 68, 69, 71, 78, 79, 81, 97, 98, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "lookuna": 27, "lookup": 107, "loop": [4, 12, 15, 17, 25, 27, 28, 29, 30, 31, 41, 43, 46, 49, 52, 64, 69, 103, 107, 133], "lopunni": 118, "lopunnymega": 118, "lose": 43, "loss": [68, 137], "lost": 27, "lot": [4, 7, 10, 22, 23, 27, 53, 55, 58, 73, 82, 86, 102, 123, 125, 133, 135], "lotad": 118, "loudr": 118, "love": [6, 12, 14, 31, 69], "low": [56, 98, 101, 126, 131, 134], "lower": [14, 27, 68, 98, 102, 103, 123, 131, 132, 134, 135, 136], "lowercas": [14, 27, 55, 63, 65], "lowess": [125, 127], "lowest": [55, 107, 131, 133], "lsr": [123, 126], "lst": [11, 32, 46], "lst_one": 46, "lst_two": 46, "lstrip": 27, "lucario": 118, "lucariomega": 118, "lucia": 77, "ludicolo": 118, "lugia": 118, "luke": 132, "lumineon": 118, "lump": 131, "lunaton": 118, "lunch": [125, 129, 130, 132, 137], "lut": 139, "luvdisc": 118, "luxembourg": 126, "luxio": 118, "luxrai": 118, "lvplot": 135, "lw": [7, 82, 86, 129, 130, 133, 135, 137], "m": [14, 22, 24, 28, 29, 34, 35, 36, 37, 38, 39, 40, 41, 55, 57, 62, 63, 65, 68, 69, 70, 78, 97, 98, 121, 124, 129, 131, 133, 137], "ma": 14, "maaan": 14, "machamp": 118, "machin": [6, 8, 20, 78, 90, 125, 133, 134, 136, 137, 145], "machine_learn": 133, "machineri": 107, "machok": 118, "machop": 118, "maco": 44, "macro_cas": 65, "made": [14, 45, 47, 55, 71, 73, 77, 135], "madrid": 97, "magbi": 118, "magcargo": 118, "magic": [12, 79, 122], "magikarp": 118, "magma": [124, 125, 127], "magma_r": 127, "magmar": 118, "magmortar": 118, "magnemit": 118, "magnet": 135, "magneton": 118, "magnezon": 118, "magnitud": [78, 79, 125, 133], "mai": [5, 6, 10, 14, 20, 24, 26, 27, 28, 29, 31, 34, 35, 41, 43, 46, 47, 49, 51, 52, 58, 62, 68, 71, 73, 76, 77, 78, 81, 102, 107, 108, 109, 111, 112, 116, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "mail": [14, 105], "mailbox": 55, "main": [14, 26, 29, 50, 51, 55, 59, 65, 76, 77, 78, 81, 129, 133, 135, 138], "main1": 51, "mainli": 22, "maintain": [60, 125], "mainten": 144, "major": [10, 69, 129, 130, 133, 134], "majorli": [107, 108, 125, 129, 130, 134, 135, 137], "make": [4, 6, 7, 10, 11, 12, 13, 14, 15, 21, 22, 24, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 47, 49, 50, 51, 53, 55, 58, 60, 63, 64, 65, 68, 69, 70, 71, 73, 76, 78, 79, 81, 82, 86, 100, 102, 103, 107, 108, 109, 111, 112, 114, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145], "make_blob": 136, "make_kd": 127, "make_multiplier_of": 11, "make_pretti": 12, "make_sound": 81, "make_uppercas": 12, "mako": [127, 135, 139], "mako_r": 127, "makuhita": 118, "malamar": 118, "male": [43, 76, 118, 121, 125, 128, 130, 131, 132, 133, 137], "male_dinn": 132, "male_lunch": 132, "mammal": 78, "mammalnam": 78, "mamoswin": 118, "man": [13, 14, 131, 133], "manadatori": 125, "manag": [14, 49, 55, 58, 135], "manaphi": 118, "manchest": [76, 97], "mandatori": [29, 34, 49, 52, 64, 77, 81, 125, 129, 130, 137], "mandibuzz": 118, "manectr": 118, "manectricmega": 118, "mango": [20, 22, 28, 31, 46, 49, 66, 69, 109, 133], "manhattan": 130, "mani": [0, 5, 6, 14, 22, 23, 24, 27, 29, 31, 43, 44, 46, 47, 55, 59, 65, 70, 76, 77, 81, 83, 84, 87, 97, 103, 104, 107, 112, 121, 123, 124, 130, 135, 136, 138, 142, 145], "manipul": [13, 27, 34, 55, 77, 103, 107, 117, 137], "mankei": 118, "manner": [12, 17, 22, 23, 78, 129, 135], "manner_of_death": 121, "mantin": 118, "mantissa": 57, "mantyk": 118, "manual": [9, 46, 47, 104], "manufactur": 77, "map": [8, 32, 64, 71, 107, 114, 124, 126, 127, 130, 132, 136, 137, 140], "map_datafram": 137, "map_diag": [127, 136], "map_low": [127, 136], "map_offdiag": 136, "map_upp": [127, 136], "mapper": 114, "mappingmethod": 64, "maptplotlib": 137, "mar": 62, "maractu": 118, "march": [14, 20, 24], "mareep": 118, "margin": [126, 129], "margin_titl": [134, 137], "maril": 118, "marit": 28, "marital_statu": 30, "mariya": 22, "mark": [17, 18, 22, 30, 49, 59, 62, 64, 69, 77, 97, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 128, 130, 133], "markdown": [1, 6, 141, 143], "markdownfil": [0, 84, 142], "markedli": [2, 83, 87], "marker": [44, 97, 98, 121, 125, 126, 127, 130, 131, 133, 135, 136, 137], "markeredgecolor": 97, "markerfacecolor": 98, "markers": 97, "market": 76, "marks_df": 107, "marks_dict": 107, "markup": [83, 87], "marowak": 118, "marri": [20, 65], "marshtomp": 118, "mask": [111, 137], "masquerain": 118, "mass": [49, 65, 107], "massiv": [107, 110], "masterstudentclass": 77, "mat": 102, "match": [36, 52, 111, 114, 116, 126, 128, 131, 132, 137], "match_replac": 14, "math": [4, 7, 26, 30, 45, 61, 69, 82, 86], "mathemat": [6, 22, 31, 32, 55, 65, 70, 79, 107, 123, 126, 131, 133, 135, 144, 145], "mathemet": 90, "mathew": 97, "matlab": [20, 22, 43, 65, 73, 76, 102, 103], "matmul": 103, "matplotlib": [7, 82, 86, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "matric": [8, 103], "matrix": [8, 32, 100, 101, 102, 104, 107, 136, 137, 138, 139], "matruc": 103, "matter": [12, 24, 46, 49, 52, 65, 129], "matthew": 121, "mawil": 118, "mawilemega": 118, "max": [6, 9, 10, 31, 76, 78, 100, 103, 104, 105, 107, 119, 121, 126, 128, 129, 137], "max_inst": 81, "max_row": 107, "max_spe": 78, "maximum": [14, 23, 53, 76, 97, 100, 103, 104, 107, 128, 131, 132], "maxsiz": 55, "maxsplit": 14, "maxyear": 34, "mayb": [22, 135], "mazda": 119, "mbox": [7, 82, 86], "md": [0, 2, 83, 84, 87, 142], "me": [19, 27, 69, 122, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 136, 137], "mean": [7, 11, 13, 14, 18, 19, 22, 23, 24, 27, 28, 29, 31, 34, 35, 36, 40, 45, 50, 52, 55, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 79, 81, 82, 86, 100, 101, 104, 107, 118, 119, 121, 123, 125, 126, 129, 130, 131, 133, 134, 135, 136, 137], "meaning": [109, 137], "meant": 121, "meanwhil": [126, 130, 133, 135, 137], "measur": [76, 121, 123, 126, 129, 130, 131, 134, 135], "mechan": [5, 59, 103, 125, 135, 138], "median": [28, 55, 76, 97, 100, 104, 107, 130, 131, 132, 133, 135], "medianprop": 97, "medicham": 118, "medichammega": 118, "meditit": 118, "medium": [7, 10, 82, 86, 97, 124], "medium_heavi": 97, "meet": [18, 130, 131], "mega": 118, "meganium": 118, "melina": 43, "meloettaaria": 118, "meloettapirouett": 118, "melt": [129, 130, 131, 137], "melt_df": 131, "member": [13, 31, 76, 77, 126, 132], "memor": 125, "memori": [9, 22, 26, 27, 28, 43, 45, 53, 65, 67, 70, 71, 73, 76, 77, 100, 104, 107, 122, 135], "memoryerror": [45, 46], "men": 124, "mennen": 22, "mention": [10, 27, 46, 59, 107, 122, 126, 130, 133, 134, 135, 137], "menu": [66, 124], "meow": 81, "meowsticfemal": 118, "meowsticmal": 118, "meowth": 118, "merced": 119, "mere": 81, "merg": [79, 107, 132], "meshgrid": 105, "mesprit": 118, "mess": 118, "messag": [11, 18, 19, 20, 21, 45, 46, 47, 49, 52, 59], "messi": [22, 23, 97], "met": [11, 19, 23, 113], "meta": 14, "metagross": 118, "metagrossmega": 118, "metang": 118, "metapod": 118, "metaprogram": 12, "meter": [65, 135], "meth": 81, "method": [6, 9, 10, 11, 12, 13, 22, 23, 32, 34, 35, 36, 37, 38, 39, 44, 45, 46, 47, 52, 55, 58, 59, 64, 69, 73, 77, 79, 81, 103, 107, 108, 111, 114, 116, 117, 121, 125, 126, 131, 132, 133, 134, 135, 136, 137, 139, 145], "metric": 139, "mew": 118, "mewtwo": 118, "mewtwomega": 118, "michael": 121, "michel": 43, "microsecond": [35, 36, 38], "microsoft": 27, "mid": 70, "middl": [20, 28, 29, 46, 102, 129, 131, 132, 133], "mienfoo": 118, "mienshao": 118, "might": [4, 5, 11, 17, 23, 24, 26, 41, 46, 64, 69, 81, 101, 123, 125, 129, 130, 131, 132, 133, 134, 136, 137], "mightyena": 118, "milaan": [12, 20, 22, 27, 30, 32, 43, 45, 46, 49, 52, 55, 65, 68, 70, 76, 78, 119], "milan": [27, 43, 77], "mile": 133, "mileag": [107, 108, 118, 127, 129], "mileagedf": 119, "milk": 49, "milot": 118, "miltank": 118, "mime": 118, "min": [31, 76, 100, 103, 104, 105, 107, 121, 126, 128, 129, 134, 137], "min_row": 107, "minccino": 118, "mind": [17, 32, 52], "mini": 132, "minim": [54, 121], "minimum": [28, 97, 100, 104, 107, 123, 131, 132, 145], "minu": [70, 131], "minun": 118, "minut": [35, 36, 38, 39, 40, 129, 130, 134], "minyear": 34, "mirror": [53, 136], "misc": 59, "misdreavu": 118, "misinterpret": 124, "mislead": 126, "mismagiu": 118, "mismatch": 81, "miss": [19, 45, 46, 52, 101, 108, 117, 133, 135], "missing_label": 114, "mission": 69, "mistak": [28, 45, 73, 131], "mit": 132, "mitsubishi": 119, "mix": [28, 29, 30, 31, 52, 101, 102, 129, 130, 131, 135], "mix_fruit": [22, 28, 31], "mkdir": 55, "ml": [5, 133, 145], "mlc": 130, "mm": [34, 36, 37], "mn": 14, "mnemon": 65, "mo": 14, "mod": [55, 105], "modal": 132, "mode": [6, 43, 46, 55, 56, 76, 77, 118, 130, 131], "model": [73, 76, 77, 90, 123, 125, 127, 134, 135, 136, 144, 145], "model_": 136, "modf": [55, 57], "modif": [13, 76, 78, 104, 111, 114, 116, 117, 130, 133, 134, 135, 137], "modifi": [11, 12, 13, 20, 22, 23, 27, 28, 29, 30, 32, 41, 43, 50, 51, 55, 67, 69, 70, 102, 107, 112, 118, 130, 132, 134, 135, 144], "modul": [6, 9, 10, 11, 12, 13, 14, 15, 23, 26, 27, 28, 29, 30, 31, 34, 35, 36, 37, 39, 41, 43, 44, 45, 46, 47, 50, 52, 53, 54, 61, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 81, 102, 103, 111, 114, 116, 125, 130, 135, 137], "modula": 81, "modular": 49, "modulo": [45, 79], "modulu": [65, 70, 79], "moistur": [98, 130], "moisturizersalesdata": 98, "moltr": 118, "moment": [71, 130, 137], "mon": [24, 35, 36], "mondai": [35, 36, 40], "monei": [129, 130], "monferno": 118, "mongodb": 28, "monitor": 144, "monkei": 132, "monoton": 78, "month": [24, 35, 36, 37, 38, 39, 40, 49, 64, 133, 135, 138], "month_numb": 98, "monthlist": 98, "moon": 49, "moral": 123, "mordern": 4, "more": [0, 1, 2, 5, 6, 7, 9, 10, 11, 12, 13, 15, 17, 19, 20, 22, 24, 26, 28, 29, 30, 31, 32, 34, 35, 40, 41, 43, 44, 45, 46, 47, 49, 50, 52, 54, 55, 56, 59, 63, 64, 65, 66, 71, 73, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 98, 101, 102, 103, 104, 107, 108, 113, 116, 118, 119, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 141, 142, 143, 145], "moreland": 124, "moreov": 43, "morn": [49, 52, 69], "morphism": 76, "most": [4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 23, 26, 27, 28, 29, 30, 31, 36, 41, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 64, 66, 67, 68, 69, 70, 73, 76, 77, 78, 79, 81, 83, 87, 102, 103, 107, 109, 111, 114, 116, 124, 129, 130, 131, 132, 133, 134, 135, 137, 138], "most_frequent_word": 14, "most_populated_countri": [43, 49], "most_spoken_languag": [43, 49], "mostli": [23, 27, 124, 137], "mothim": 118, "motiv": 14, "mous": [28, 29], "move": [4, 18, 22, 24, 43, 71, 114, 122, 123, 126, 129, 130, 131, 133, 135, 136, 137], "movi": 136, "mpl": 133, "mr": 118, "mri": 135, "mro": 78, "msc": 6, "msg": [11, 12, 49, 52, 121, 128], "mtransform": 130, "mu": 56, "much": [4, 6, 10, 13, 30, 55, 104, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137], "mudkip": 118, "muk": 118, "mul": 55, "multi": [66, 67, 76, 108, 109, 132, 136, 137], "multideriv": 78, "multidimension": [100, 102, 107], "multiindex": [107, 110, 111, 114, 117], "multilevel": 133, "multilin": [14, 27, 54, 64, 66, 67], "multiline_str": [27, 66], "multimedia": 6, "multip": 8, "multipl": [6, 10, 12, 20, 22, 24, 27, 28, 31, 32, 43, 50, 52, 54, 63, 64, 66, 70, 73, 76, 77, 79, 81, 100, 101, 107, 108, 110, 112, 113, 117, 119, 123, 124, 125, 129, 130, 131, 132, 135, 136, 137], "multiple_vari": 32, "multipli": [11, 22, 23, 29, 34, 49, 53, 59, 60, 65, 69, 70, 100, 103], "multitouch": 6, "multivari": 137, "multivariate_norm": [124, 125, 126, 136], "mumbai": 32, "munchlax": 118, "munna": 118, "murkrow": 118, "musharna": 118, "mushroom": 29, "music": 58, "must": [9, 11, 12, 21, 22, 26, 27, 28, 29, 30, 31, 43, 44, 46, 49, 50, 52, 53, 55, 56, 58, 59, 63, 64, 65, 67, 68, 71, 73, 77, 78, 81, 98, 102, 108, 112, 113, 122, 123, 130, 137], "mut": 129, "mutabl": [22, 28, 29, 30, 31, 67, 107], "mutat": 102, "mute": 132, "my": [23, 26, 27, 43, 46, 50, 51, 59, 65, 67, 77, 81, 97, 98, 124, 129, 131, 132, 133, 135], "my_addit": 60, "my_ag": 19, "my_data": 44, "my_dict": 30, "my_dict1": 30, "my_dict2": 30, "my_dict3": 30, "my_func": 50, "my_gen": 10, "my_info": 28, "my_it": 9, "my_list": [9, 10, 28, 54, 101, 107], "my_list1": [28, 101], "my_list2": [28, 101], "my_list3": 28, "my_list4": 28, "my_list5": 28, "my_matrix": 101, "my_modul": 55, "my_nam": 65, "my_set": [22, 31], "my_str": [10, 27], "my_tupl": 29, "my_tuple1": 29, "my_tuple2": 29, "my_tuple3": 29, "my_tuple4": 29, "my_vaccin": 22, "myclass": 63, "mygraph": 97, "mymethod": 78, "mynewclass": 77, "myst": [1, 141, 143], "mysteri": 71, "n": [7, 9, 10, 11, 15, 18, 19, 22, 23, 24, 27, 28, 29, 32, 43, 46, 47, 49, 52, 53, 54, 55, 59, 62, 64, 65, 66, 68, 69, 72, 76, 77, 78, 82, 86, 100, 101, 104, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 121, 129, 131, 132, 133, 135, 136], "n0": 22, "n1": 22, "n10": 22, "n21": 22, "n28": 22, "n3": 22, "n36": 22, "n45": 22, "n6": 22, "n_boot": [125, 133, 134, 135], "n_color": 124, "n_featur": 136, "n_list": 28, "n_sampl": 136, "n_tupl": 29, "na": [107, 111, 112, 117], "na_valu": 119, "nafter": [111, 112, 113, 116, 117], "nail": 121, "naiv": 81, "name": [6, 10, 11, 12, 13, 14, 15, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 40, 41, 43, 44, 45, 46, 49, 50, 52, 54, 58, 59, 60, 63, 64, 66, 67, 68, 70, 72, 76, 77, 78, 79, 81, 97, 98, 107, 108, 110, 111, 112, 113, 114, 115, 116, 118, 121, 124, 125, 126, 128, 129, 133, 135, 137], "named_tupl": 40, "nameerror": [11, 13, 27, 28, 29, 30, 46, 50, 66, 67, 77], "nameless": 54, "names_upper_cas": 12, "namespac": [4, 11, 13, 54, 55, 58, 64, 75, 77, 81, 100], "nan": [55, 57, 101, 103, 105, 108, 113, 117, 118, 119, 121, 125, 131, 133], "napr": 62, "narrow": 132, "nat": [107, 108, 110, 111, 112, 113, 114, 115, 116, 117], "nation": 97, "nativ": [70, 121, 122], "natu": 118, "natur": [6, 12, 23, 55, 57, 71, 100, 135, 144], "naug": 62, "nbagg": 122, "nbin": 123, "nbyte": 101, "ncol": [123, 132, 133], "ncolumn": 114, "ncongratul": 47, "ncontain": 43, "ndarrai": [100, 101, 104, 107, 108, 109, 138], "ndata": 15, "ndatafram": 117, "ndec": 62, "ndenumer": [105, 123], "ndframe": 107, "ndim": [100, 101], "ndindex": 105, "ndo": 27, "ne": 97, "nearli": [27, 54, 70, 100], "neat": 64, "neatli": 125, "necessari": [6, 9, 21, 23, 59, 116, 122, 127], "necessarili": [107, 121, 125, 130, 131, 137], "need": [0, 6, 10, 13, 14, 17, 19, 22, 23, 26, 27, 28, 29, 32, 34, 36, 37, 38, 40, 43, 44, 46, 47, 49, 50, 51, 52, 54, 55, 60, 62, 65, 67, 68, 69, 73, 77, 78, 79, 81, 84, 90, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 122, 123, 124, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 138, 142, 145], "neg": [14, 18, 19, 20, 21, 27, 32, 43, 57, 66, 69, 105, 110, 126, 132], "negat": [14, 70], "negative_numb": 69, "neither": [21, 27, 50, 57, 132], "nenter": 47, "nenuemer": 22, "nescessarili": 103, "nest": [4, 12, 17, 19, 20, 25, 28, 29, 30, 50, 53, 71, 100, 101, 109, 130, 132, 133], "network": [46, 90, 104, 144, 145], "networkerror": 46, "neural": [90, 104, 144, 145], "never": [9, 23, 24, 26, 46, 65, 70, 73, 107, 122, 124, 129], "new": [5, 6, 12, 13, 14, 17, 23, 27, 29, 31, 32, 35, 36, 38, 39, 43, 47, 51, 54, 62, 65, 69, 71, 76, 77, 78, 79, 81, 97, 102, 104, 107, 108, 111, 112, 113, 114, 116, 119, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137], "new_": 107, "new_ag": 114, "new_axi": 111, "new_col": 114, "new_col_nam": 107, "new_df": 118, "new_dict": 30, "new_file_nam": 44, "new_head": 117, "new_index": 114, "new_list": 54, "new_mark": 114, "new_nam": 114, "new_sig": 130, "new_str": 14, "new_valu": 107, "new_year": 38, "new_york": [34, 38], "newaxi": 136, "newdir": 44, "newli": [81, 117], "newlin": [14, 27, 43, 59, 62, 64, 66, 69], "newshap": 104, "newton": 49, "next": [9, 10, 18, 20, 22, 23, 24, 27, 43, 45, 46, 55, 56, 64, 73, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "neymar": [22, 23, 97], "nf": 107, "nfeb": 62, "nfor": 22, "ng": 14, "ngood": 27, "nhow": 69, "ni": 22, "nice": [122, 124, 129, 130, 135], "nicer": [27, 133], "nichol": 121, "nidok": 118, "nidoqueen": 118, "nidoran": 118, "nidorina": 118, "nidorino": 118, "nigeria": 43, "night": [52, 132], "nin": 27, "nincada": 118, "nine": 14, "ninetal": 118, "nineti": 27, "ninjask": 118, "nipy_spectr": 127, "nipy_spectral_r": [127, 129], "nissan": 119, "njul": 62, "njun": 62, "nlist": 115, "nmai": 62, "nmar": 62, "nmulti": 64, "nn": 132, "nnov": 62, "no_of_nonna_valu": 113, "no_of_sid": 78, "nob": 123, "noct": 62, "noctowl": 118, "node": 28, "nohtyp": 27, "noibat": 118, "nois": [125, 130], "noisier": 132, "noivern": 118, "non": [11, 15, 18, 23, 27, 43, 44, 52, 56, 77, 107, 113, 121, 122, 125, 127, 129, 135], "none": [12, 13, 14, 18, 22, 23, 30, 40, 43, 46, 49, 52, 56, 59, 63, 64, 66, 77, 104, 105, 107, 108, 111, 112, 113, 114, 116, 117, 121, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "nonlinear": 125, "nonloc": [4, 51, 61, 63, 71], "nonlov": 50, "nonmarinemamm": 78, "nonneg": [100, 101], "nonparametr": [125, 127], "nonwingedmamm": 78, "nonzero": 105, "nor": [21, 27, 46, 50, 57, 132], "nordic_countri": 46, "norm": [13, 57, 103, 123, 128, 130], "normal": [11, 12, 14, 23, 24, 27, 32, 46, 47, 50, 54, 55, 56, 77, 101, 104, 110, 118, 123, 125, 126, 127, 128, 131, 132, 139], "normal_arrai": 104, "normalis": 138, "normalvari": 56, "north": 133, "norwai": [28, 46], "nosepass": 118, "notaion": 102, "notat": [31, 69, 97, 102, 132], "notation3": 69, "notch": 131, "note": [9, 10, 11, 13, 17, 23, 24, 27, 28, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 46, 49, 50, 52, 55, 59, 64, 65, 66, 69, 70, 71, 76, 77, 78, 83, 87, 98, 101, 102, 103, 107, 108, 110, 111, 114, 115, 116, 117, 121, 122, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 137, 145], "notebook": [1, 2, 8, 45, 69, 83, 87, 122, 124, 125, 126, 127, 134, 135, 137, 141, 143, 144, 145], "notepad": 62, "noth": [14, 18, 22, 23, 24, 31, 49, 65, 76, 103, 130, 131, 132, 138], "notic": [12, 24, 26, 30, 32, 34, 45, 67, 69, 77, 78, 107, 122, 123, 125, 127, 129, 130, 131, 132, 133, 135, 136], "notif": 6, "notimplementederror": 45, "notion": [26, 79], "notnul": 107, "notpad": 62, "noutput": 19, "nov": 62, "novemb": 20, "now": [4, 10, 11, 12, 13, 14, 17, 18, 19, 22, 23, 32, 34, 35, 37, 38, 39, 43, 45, 46, 49, 50, 51, 52, 54, 55, 58, 59, 62, 64, 66, 68, 69, 71, 76, 77, 78, 79, 81, 103, 114, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 145], "nowher": 107, "np": [7, 82, 86, 97, 100, 101, 102, 103, 104, 107, 113, 117, 119, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "nperfect": 64, "nresult": 115, "nrow": [123, 132], "nsep": 62, "nsheet": 43, "nthi": [43, 47], "null": [22, 23, 31, 107, 113, 125, 137], "num": [9, 10, 11, 12, 15, 18, 19, 20, 21, 22, 23, 27, 31, 46, 49, 52, 53, 54, 64, 65, 69, 77, 104, 107, 108, 119, 128], "num1": [18, 19, 20, 21, 49, 52, 60, 65, 69, 77], "num2": [18, 19, 20, 21, 49, 52, 60, 65, 69, 77], "num3": 69, "num4": 69, "num_1": [20, 65], "num_2": [20, 65], "num_flo": 68, "num_float": 68, "num_int": 68, "num_list": [32, 54], "num_new": 68, "num_on": 49, "num_point": [125, 127], "num_str": 68, "num_sum": 68, "num_two": 49, "number": [4, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 24, 27, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 57, 59, 60, 63, 64, 65, 68, 70, 72, 77, 78, 79, 81, 97, 98, 100, 107, 108, 109, 110, 114, 121, 122, 123, 124, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "number33": 69, "number_arithmet": 21, "number_list": 32, "numbermethod": 64, "numbers_int": 12, "numbers_squar": 12, "numbers_str": 12, "numel": 118, "numer": [6, 22, 23, 26, 27, 47, 55, 65, 69, 79, 100, 101, 107, 124, 126, 128, 129, 131, 132, 133, 135, 138], "numpi": [6, 7, 22, 59, 82, 86, 97, 98, 102, 103, 107, 113, 117, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144], "numpy_array_from_list": 101, "nuzleaf": 118, "nvar": 123, "ny": [34, 38], "nyc": 135, "nyc_taxi": 135, "nyear": 40, "nzip": 22, "o": [4, 6, 10, 14, 22, 24, 27, 28, 29, 30, 31, 32, 44, 48, 66, 67, 68, 69, 75, 97, 98, 117, 121, 122, 125, 133, 136], "ob": 77, "obama": 43, "obj": [6, 9, 13, 32, 76, 77, 81, 111], "obj1": 78, "obj2": 78, "object": [6, 9, 10, 11, 12, 13, 22, 26, 27, 28, 29, 30, 31, 35, 37, 39, 40, 44, 45, 46, 47, 49, 52, 53, 54, 55, 56, 59, 64, 65, 67, 68, 69, 70, 71, 78, 79, 81, 100, 101, 103, 104, 108, 109, 114, 115, 116, 118, 124, 125, 126, 127, 129, 130, 133, 136, 137], "object1": 78, "object_nam": 77, "observ": [12, 13, 18, 24, 76, 107, 117, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 137, 138], "obtain": [27, 55, 126, 133, 137], "obviou": [13, 27, 70], "obvious": 130, "occas": 104, "occass": [125, 129], "occur": [14, 23, 24, 27, 43, 45, 46, 47, 51, 60, 68, 104, 131], "occurr": [14, 27, 31, 77, 112, 133], "ocean": [127, 136], "ocean_r": 127, "oct": 62, "octadecim": 26, "octal": [26, 27, 66, 69], "octilleri": 118, "octob": 20, "od": 76, "odd": [9, 17, 22, 23, 28, 30, 32, 46, 49, 52, 81, 104], "odd_numb": [12, 32], "odd_squar": 30, "oddish": 118, "ofcours": [133, 135, 137], "off": [0, 2, 27, 43, 83, 84, 87, 107, 122, 133, 135, 142], "offer": [6, 26, 28, 56, 70, 102, 105, 121, 124, 127, 129, 130, 132, 133, 134, 135, 136, 137], "offic": 121, "offici": [4, 59, 125, 129, 131, 134, 135], "offlin": 132, "offset": [35, 36, 43, 122, 133], "offspr": 129, "often": [23, 27, 28, 62, 69, 76, 81, 123, 124, 126, 127, 129, 130, 131, 133, 135, 136, 137], "oh": [118, 133], "ohc": [107, 108, 119], "ohcf": 119, "ohcv": [107, 108, 119], "ok": [27, 64, 121], "okai": [64, 126, 127, 129, 130, 132], "old": [14, 19, 46, 59, 69, 76, 81, 105, 107, 114, 123, 126], "old_col": 114, "old_nam": 107, "older": [19, 70], "oliv": 124, "omanyt": 118, "omastar": 118, "omit": 14, "omma": 43, "onc": [6, 10, 14, 22, 24, 27, 29, 30, 31, 34, 43, 46, 49, 50, 52, 55, 62, 65, 67, 73, 110, 111, 114, 121, 122, 124, 127, 130, 131, 132, 133, 134, 135, 136, 137, 145], "one": [4, 6, 9, 10, 11, 19, 20, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 41, 43, 46, 50, 52, 53, 54, 55, 58, 59, 62, 63, 64, 66, 67, 68, 70, 71, 73, 77, 78, 79, 81, 83, 87, 90, 101, 102, 103, 104, 107, 108, 109, 111, 112, 114, 116, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139], "onedr": 44, "onedrivetemp": 44, "ones": [27, 55, 100, 101, 103, 104, 105, 114, 116, 129, 131], "ongo": 135, "onion": 46, "onix": 118, "onli": [4, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 43, 44, 45, 46, 47, 50, 51, 52, 54, 55, 59, 62, 64, 65, 67, 70, 71, 73, 76, 77, 78, 79, 81, 101, 102, 107, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 130, 132, 133, 135, 136, 137], "onlin": [4, 124, 132, 135], "onto": [126, 134], "ooo": 27, "oop": [4, 46, 80], "opac": 124, "opaqu": 124, "open": [4, 6, 45, 46, 55, 59, 64, 100, 107, 118, 119, 144], "open_workbook": 43, "openai": 144, "openerp": 6, "oper": [4, 6, 10, 11, 12, 14, 15, 22, 23, 26, 32, 34, 43, 45, 46, 49, 50, 52, 58, 60, 64, 65, 67, 69, 72, 73, 75, 76, 77, 80, 90, 101, 104, 107, 111, 112, 114, 115, 116, 117, 135, 145], "operand": [26, 27, 28, 45, 46, 68, 70, 79], "opinion": [129, 133, 135], "opportun": [24, 123], "opposit": [54, 107], "optim": [24, 30, 67, 73, 111, 145], "option": [13, 14, 20, 22, 23, 26, 27, 28, 29, 30, 32, 46, 47, 49, 52, 59, 69, 76, 77, 78, 101, 104, 108, 115, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "oracl": 27, "orang": [20, 22, 28, 31, 46, 66, 70, 109, 124, 127], "oranges_r": 127, "orbital_period": 132, "order": [10, 22, 23, 27, 43, 44, 49, 50, 52, 54, 55, 58, 67, 69, 77, 104, 107, 108, 114, 115, 122, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137], "ordereddict": 115, "ordin": 133, "ordinari": 12, "ore": [14, 137], "org": [6, 97, 103, 128, 135, 139], "organ": [6, 28, 34, 49, 55, 58, 69, 76, 135, 139], "orient": [9, 11, 13, 47, 77, 78, 79, 81, 108, 115, 122, 129, 130, 131, 132, 133, 134, 135], "origin": [11, 12, 14, 44, 73, 79, 81, 102, 104, 107, 108, 111, 112, 113, 115, 117, 122, 126, 131, 135, 136, 139], "orrd": 127, "orrd_r": 127, "orthogonol": 8, "oserror": 45, "oshawott": 118, "ot": [14, 21], "otat": 43, "other": [0, 4, 6, 9, 10, 12, 14, 22, 23, 26, 27, 32, 40, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 59, 60, 62, 63, 64, 65, 66, 67, 70, 73, 76, 77, 78, 79, 81, 84, 100, 101, 103, 104, 107, 108, 112, 113, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144], "other_mag": 79, "otherwis": [24, 27, 43, 46, 52, 73, 77, 78, 103, 108, 113, 114], "othwerwis": 23, "ou": 135, "our": [9, 13, 14, 19, 23, 24, 26, 43, 44, 45, 46, 47, 49, 53, 55, 58, 59, 60, 62, 63, 69, 76, 79, 81, 97, 104, 107, 108, 110, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "our_plot": 127, "ourselv": [43, 60, 62], "out": [6, 7, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 43, 45, 47, 49, 52, 54, 55, 62, 63, 64, 65, 66, 67, 70, 79, 82, 86, 102, 104, 105, 107, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "outcom": [17, 49, 125], "outer": [11, 21, 22, 23, 50, 103, 107, 131], "outer_fun": 50, "outer_funct": 71, "outermost": 71, "outlier": [125, 126, 131, 133, 135, 139], "outlier_prop": 135, "outlin": [97, 130], "outout": 65, "output": [0, 9, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 24, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 46, 47, 49, 50, 51, 52, 54, 55, 62, 68, 70, 73, 77, 78, 79, 84, 101, 103, 107, 110, 114, 115, 122, 135, 142, 144], "outsid": [18, 21, 22, 24, 28, 29, 50, 51, 76, 77, 102, 126, 135, 137], "over": [9, 10, 12, 22, 23, 24, 54, 63, 64, 66, 78, 97, 101, 107, 108, 122, 123, 125, 128, 130, 133, 135, 136], "overal": [73, 97, 122, 127, 132, 133, 135, 136], "overcom": 26, "overflow": [53, 105], "overflowerror": [45, 70], "overkil": 10, "overlai": [126, 133], "overlap": [129, 130, 135], "overli": 136, "overload": [4, 80, 103], "overplot": 136, "overrid": [47, 81], "overridden": [47, 78], "overview": [2, 64, 83, 87, 104, 125, 126, 133, 134], "overwrit": [30, 43, 52], "overwritten": 43, "ow": 14, "own": [9, 45, 46, 47, 54, 55, 58, 59, 60, 62, 69, 71, 81, 123, 130, 131, 132, 133, 135], "oxford": [69, 132], "p": [6, 14, 22, 24, 27, 28, 29, 31, 32, 35, 36, 41, 65, 69, 72, 76, 123, 127, 130, 133], "p1": [72, 76, 79, 81, 138], "p2": [72, 76, 79, 81], "p3": [79, 81], "p4": 81, "p5": 81, "p6": 81, "p7": 81, "p_letter": 32, "p_list": 6, "pa": 121, "pachirisu": 118, "pack": [12, 29], "packag": [4, 43, 55, 61, 64, 107, 111, 114, 115, 116, 121, 124, 128, 130, 132, 134, 135, 136, 137], "packagesin": 58, "packing_person_info": 46, "pad": [27, 35, 36, 69, 70], "page": [0, 41, 56, 57, 64, 79, 84, 124, 134, 142], "pagefil": 44, "pai": 70, "pain": 136, "pair": [22, 27, 31, 57, 67, 68, 107, 108, 114, 115, 127, 130, 132, 134, 135, 136], "paired_r": 127, "pairgrid": [123, 127, 128, 137, 140], "pairplot": [123, 127, 136, 137], "pairwis": 128, "pakistan": 43, "pal": 137, "pale": [124, 130], "palett": [123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140], "palkia": 118, "palpitoad": 118, "palplot": 124, "pancham": 118, "panda": [6, 22, 97, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144], "panel": [134, 136], "pangoro": 118, "panpour": 118, "pansag": 118, "pansear": 118, "paper": [122, 124, 125, 135, 144], "para": 118, "para1": 12, "para2": 12, "para3": 12, "paradigm": 76, "paragraph": 14, "parallel": [53, 137], "param": [125, 130, 131, 135, 136, 137], "param1": 32, "param2": 32, "param3": 32, "paramet": [14, 15, 27, 32, 43, 50, 54, 55, 59, 62, 66, 73, 76, 78, 81, 97, 104, 108, 109, 110, 111, 112, 113, 114, 116, 117, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "parameter": 77, "parameter1": [49, 59], "parameter2": 49, "parametr": [77, 135], "paranthes": 27, "paranthesi": [29, 64], "parasect": 118, "parch": [131, 133], "parent": [47, 129], "parentattr": 78, "parenthes": [10, 14, 22, 27, 29, 45, 54, 62, 64, 66, 67, 122], "parenthesi": [10, 45, 50, 104], "parentmethod": 78, "pareto": [56, 133], "paretovari": 56, "pari": 97, "park": 125, "parmar": [12, 20, 22, 27, 32, 43, 49, 52, 55, 65, 76], "parramet": 137, "parrot": [76, 77], "pars": [40, 43, 45, 73, 107], "parser": 45, "part": [12, 14, 22, 23, 24, 26, 27, 55, 57, 66, 67, 70, 71, 97, 100, 102, 112, 115, 121, 131, 135], "parti": [6, 34, 58], "particl": 14, "particular": [17, 22, 23, 24, 26, 30, 31, 34, 39, 55, 65, 67, 76, 78, 101, 107, 110, 111, 113, 114, 115, 117, 121, 122, 123, 125, 126, 130, 131, 132, 133, 135, 136, 137], "particularli": [27, 131, 132], "partit": 27, "pass": [4, 9, 11, 12, 14, 15, 17, 18, 19, 25, 27, 34, 35, 36, 40, 45, 46, 47, 52, 54, 55, 59, 63, 65, 76, 77, 78, 81, 101, 107, 108, 109, 110, 111, 114, 116, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 135, 136, 137], "passag": 135, "passeng": [133, 135, 137, 138], "passenger_count": 135, "password": 19, "password_check": 19, "past": [98, 122, 127, 130, 131, 132, 135], "pastel1": [127, 132], "pastel1_r": 127, "pastel2": 127, "pastel2_r": 127, "pat": 90, "patch": [129, 133, 136], "patch_artist": 97, "patchcollect": 135, "path": [0, 6, 43, 44, 58, 69, 84, 142], "pathcollect": [129, 130], "patienc": 125, "patrat": 118, "pattern": [12, 73, 97, 124, 136], "paul": 121, "paus": 10, "pawniard": 118, "pca": 134, "pclass": [131, 133], "pctdistanc": 97, "pd": [97, 98, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "pdf": [125, 126, 128, 140], "peach": 133, "peak": [119, 126, 132], "pear": [20, 28, 31], "pearl": 73, "pearsonr": 136, "peculiar": [81, 107], "peek": 121, "peggi": [76, 78], "pelipp": 118, "penguin": [76, 78], "penicillin": 22, "peo": 14, "peopl": [14, 27, 31, 121, 124, 130, 135], "pep": 59, "per": [47, 70, 97, 98, 108, 121, 122, 124, 125, 131, 132, 133, 135, 137], "peramet": 52, "perceiv": 124, "percent": 12, "percentag": [22, 69, 76, 98, 107, 110, 114, 117, 129, 131, 133, 135], "percentil": [76, 104, 107, 135], "percept": 132, "perfect": [23, 64], "perfectli": [63, 64], "perflog": 44, "perform": [6, 9, 11, 15, 17, 22, 23, 26, 27, 28, 29, 30, 31, 32, 43, 46, 49, 54, 55, 60, 62, 67, 68, 69, 70, 73, 76, 79, 90, 100, 103, 107, 111, 114, 116, 117, 133, 145], "perimet": [49, 70, 78], "perimeter_of_circl": 49, "period": [54, 59, 107, 135], "perl": 6, "perm": 55, "perman": 43, "permiss": 46, "permit": 133, "permut": 138, "persian": 118, "person": [20, 22, 43, 49, 52, 59, 64, 65, 70, 76, 77, 78, 130, 133, 135], "person_dct": 43, "person_info": [65, 76, 78], "person_json": 43, "personaccount": 76, "petal": [121, 129], "petal_length": [121, 124, 126, 127, 129, 130, 136, 139], "petal_width": [121, 129, 130, 136, 139], "petallengthcm": 97, "petalwidthcm": 97, "petilil": 118, "ph": 132, "phanpi": 118, "phantump": 118, "phion": 118, "phone": [15, 69, 72], "phone_num": 72, "phone_numb": 69, "photo": 97, "php": [30, 73], "phrase": 27, "physic": [53, 76, 121], "pi": [14, 26, 27, 45, 49, 55, 57, 65, 69, 70, 74, 76, 118], "picalo": 6, "pichu": 118, "pick": [102, 121, 124, 125, 127, 133, 135], "pickl": 59, "pickler": 59, "pickletool": 59, "pickup_datetim": 135, "pickup_latitud": 135, "pickup_longitud": 135, "pictori": 133, "pictur": [24, 137], "pidgei": 118, "pidgeot": 118, "pidgeotmega": 118, "pidgeotto": 118, "pidov": 118, "piec": [13, 102, 133], "piechart": 97, "pignit": 118, "pikachu": 118, "pile": 133, "piloswin": 118, "pineappl": 133, "pineco": 118, "pink": [22, 124, 127], "pink_r": 127, "pinsir": 118, "pinsirmega": 118, "pip": [6, 43, 55], "pipe": 132, "pipelin": 132, "piplup": 118, "pivot": [107, 138], "pivot_t": 107, "pixel": 97, "piyg": 127, "piyg_r": 127, "place": [12, 13, 26, 27, 28, 29, 30, 31, 34, 43, 46, 47, 52, 53, 55, 58, 64, 65, 67, 69, 78, 81, 121, 133, 137, 138], "placehold": [24, 27, 69], "plai": [64, 71, 78, 107, 122, 124, 125, 127, 129, 130, 131, 133, 134, 135, 136, 137], "plain": [9, 81, 132], "plan": [76, 135], "plane": 8, "planet": 132, "planets_data": 132, "plasma": [127, 132, 135], "plasma_r": 127, "plate": 133, "platform": [4, 6, 43, 73, 135], "player": [22, 23, 76, 78, 97], "ple": 14, "pleas": [23, 108, 122, 124, 125, 126, 128, 132, 133, 135, 137], "plenti": [45, 107], "plot": [7, 82, 86, 121, 136, 137, 138, 139, 140], "plot_func": 137, "plot_joint": 126, "plot_kw": 127, "plotli": 126, "plotlin": 98, "plotnonfinit": 130, "plotter": 130, "plotting_context": 122, "plt": [7, 82, 86, 97, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "plu": [70, 134], "plusl": 118, "pm": [35, 36, 41], "png": [43, 44, 97, 98, 126], "po": [111, 133], "pocoo": 6, "poetri": 6, "pofession": 137, "point": [10, 11, 13, 14, 26, 27, 31, 40, 41, 45, 55, 56, 57, 66, 67, 70, 77, 79, 81, 97, 104, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138], "point_color": 130, "pointer": 43, "pointplot": [129, 133], "poison": 118, "poisson": 129, "pokemon": 118, "pokemon_data": 118, "poli": 76, "polic": 121, "policekillingsu": 121, "polio": 22, "polito": 118, "poliwag": 118, "poliwhirl": 118, "poliwrath": 118, "pollut": 13, "poly1d": 123, "polyfit": 123, "polygon": 78, "polynomi": [100, 125], "ponyta": 118, "poochyena": 118, "poorli": 124, "pop": [17, 30, 31, 97, 127, 131, 136, 139], "popitem": 30, "popul": [12, 32, 43, 49, 56, 135, 137], "popular": [4, 6, 27, 41, 55, 59, 73, 76], "porsch": 119, "port": 73, "portabl": [4, 59, 73], "portal": 134, "portfolio": 144, "portion": [27, 28, 46, 50, 71, 121], "portrai": 124, "portug": 97, "portugues": 43, "porygon": 118, "porygon2": 118, "posit": [12, 14, 15, 18, 19, 20, 21, 27, 32, 46, 49, 53, 54, 57, 66, 107, 116, 117, 124, 126, 129, 130, 131, 133, 137], "positional_or_keyword": 114, "positional_ord": 27, "positive_even_numb": 32, "positive_no": 54, "positive_numb": 69, "possess": 125, "possibl": [13, 14, 19, 22, 24, 27, 29, 32, 46, 53, 55, 58, 65, 66, 69, 97, 103, 104, 107, 109, 110, 124, 127, 129, 132, 135, 137, 138, 145], "possibli": [77, 133], "post": [7, 39, 82, 86, 121, 124, 129, 130, 131, 132], "postag": 136, "poster": 122, "potato": [46, 49, 70], "potenti": [97, 107, 127, 134, 136], "pound": 134, "pow": [45, 55, 57], "pow2": [28, 32], "power": [9, 10, 22, 27, 28, 32, 45, 55, 57, 64, 65, 70, 71, 78, 79, 83, 87, 91, 100, 101, 103, 107, 135, 137], "powtwo": [9, 10], "powtwogen": 10, "pp": 14, "pple": 14, "practic": [4, 5, 14, 29, 46, 47, 49, 55, 60, 81, 101, 107, 119, 122, 126, 132, 133, 134, 135, 137, 144], "practical_estimation_of_the_bandwidth": 128, "pre": [55, 73, 125, 133, 134, 135, 137], "prebuilt": 6, "preced": [18, 35, 36, 46, 52, 64, 78, 126], "precis": [26, 70, 112, 117, 122, 125, 129, 135, 137], "predefin": [43, 49, 55, 68, 122], "predict": [73, 125, 135], "predictor": 125, "predomin": 8, "prefer": [10, 11, 26, 64, 78, 97, 108, 122, 129, 132, 133], "prefix": [26, 58, 71, 76, 77, 122, 124], "prepar": [121, 136, 144], "prepend": 103, "presenc": [0, 26, 70, 84, 126, 142], "present": [20, 22, 24, 27, 30, 31, 44, 46, 54, 59, 70, 107, 110, 111, 114, 122, 123, 125, 126, 127, 129, 130, 132, 133, 134, 135, 136, 137, 145], "preserv": 26, "preset": 122, "press": [23, 64, 124], "pression": 14, "pressur": 135, "pretti": [6, 12, 39, 62, 67, 107, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "prevent": [58, 65, 76, 78], "preview": [121, 123, 125, 126, 127, 131, 132, 133, 135, 137], "previou": [13, 19, 26, 43, 50, 55, 71, 81, 102, 122, 126, 127, 129, 130, 131, 132, 134, 135, 137], "previous": [46, 55, 126, 127, 130, 132, 135, 136, 137], "prgn": 127, "prgn_r": 127, "price": [76, 77, 97, 107, 108, 109, 118, 135], "price_df": 109, "price_list": 109, "pricedf": 119, "primari": [124, 135], "primarili": [22, 23], "prime": [22, 23, 49], "primeap": 118, "princeton": 135, "princip": 134, "principl": [76, 135], "prinplup": 118, "print": [0, 6, 9, 10, 11, 12, 13, 14, 15, 18, 19, 20, 21, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 64, 65, 66, 67, 68, 70, 71, 72, 76, 77, 78, 79, 81, 84, 97, 100, 101, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 129, 135, 142], "print_data": 50, "print_full_nam": 12, "print_fullnam": [49, 52], "print_hello": 41, "print_hello_three_tim": 41, "print_hi": 41, "print_hi_three_tim": 41, "print_list": 49, "print_msg": 11, "print_this_to_screen": 63, "printer": [11, 12], "printf": 27, "printhello": 71, "printinfo": 52, "printnam": 76, "printstudentdata": 77, "prior": 135, "prism": [127, 136], "prism_r": 127, "privaci": 144, "privat": [13, 55, 76, 77], "privatenam": 64, "privileg": 136, "probabl": [5, 26, 65, 97, 101, 124, 126, 131, 132, 138, 144], "problem": [6, 11, 13, 15, 27, 46, 53, 76, 124, 132, 136, 137, 145], "probopass": 118, "proce": [24, 69, 127], "procedur": [77, 135], "process": [6, 10, 23, 24, 29, 32, 41, 46, 53, 68, 73, 76, 77, 78, 81, 107, 109, 113, 125, 136, 137, 144], "processor": 73, "prod": 55, "produc": [10, 14, 19, 46, 62, 78, 97, 98, 103, 111, 114, 122, 144], "product": [5, 8, 53, 55, 59, 65, 73, 79, 100, 103, 124, 125, 126, 127, 137, 144], "profession": [97, 122, 123, 124, 129, 130, 132], "profici": 125, "profit_rang": 98, "profitlist": 98, "program": [6, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 49, 50, 51, 54, 55, 57, 58, 59, 60, 64, 65, 66, 67, 68, 69, 71, 77, 78, 79, 81, 125, 135, 144], "programdata": [36, 44, 55, 111, 114, 115, 116, 121, 124, 128, 130], "programm": [13, 26, 32, 46, 49, 59, 64, 66, 76, 81, 127], "programmar": 60, "progress": 6, "project": [6, 34, 58, 60, 125, 127, 134, 137, 144], "promin": 129, "promis": [81, 121, 127, 135], "promot": [68, 70], "prompt": [20, 49, 55, 69, 70, 100], "pronoun": 76, "pronounc": 136, "prop": [130, 133], "prop_cycl": [7, 82, 86], "proper": [45, 76, 112], "properli": [43, 44, 45, 62, 77, 131, 132, 137], "properti": [4, 16, 55, 76, 78, 110, 130, 135], "proport": [131, 133, 135], "propos": 81, "protect": [29, 46, 67, 76, 77], "protocol": [6, 9], "prototyp": [4, 77], "provid": [4, 6, 11, 13, 17, 22, 24, 26, 27, 28, 30, 41, 44, 46, 47, 49, 52, 55, 59, 69, 76, 77, 78, 98, 100, 103, 105, 107, 108, 109, 111, 114, 119, 124, 126, 129, 131, 135, 136, 137, 145], "proxi": [45, 78], "prune": 123, "pseudo": [46, 56], "pseudocolor": 124, "psychic": 118, "psyduck": 118, "ptp": 129, "public": [59, 76], "publish": 135, "pubu": 127, "pubu_r": 127, "pubugn": 127, "pubugn_r": 127, "pull": [102, 124, 133, 134, 137], "puls": 134, "pumpkabooaverag": 118, "pumpkaboolarg": 118, "pumpkaboosmal": 118, "pumpkaboosup": 118, "punctuat": 55, "puor": 127, "puor_r": 127, "pupitar": 118, "purd": 127, "purd_r": 127, "purpl": [124, 127, 129], "purples_r": 127, "purpos": [4, 6, 17, 43, 47, 54, 55, 56, 64, 65, 76, 77, 78, 79, 83, 87, 109, 123, 124, 125, 130, 131, 134, 135, 137], "purrloin": 118, "purugli": 118, "put": [13, 14, 18, 19, 24, 27, 28, 46, 62, 69, 71, 105], "pvalu": 123, "py": [12, 27, 36, 47, 51, 55, 58, 59, 62, 65, 69, 111, 114, 115, 116, 121, 124, 128, 130], "py3": 55, "py_list": 28, "py_tupl": 29, "pybrain": 6, "pycharm": [6, 122], "pydata": [121, 135, 139], "pygam": 6, "pykyra": 6, "pynb": 55, "pyplot": [4, 7, 82, 86, 97, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "pyqt": 6, "pyramid": [6, 22, 27], "pyroar": 118, "pyscript": 55, "pyth0ndatatyp": 27, "pytho": 27, "python": [72, 73, 97, 102, 103, 110, 111, 114, 117, 123, 125, 127, 130, 132, 135, 136, 144, 145], "python3": [30, 46], "python32": 27, "python38": 55, "python4datasci": 55, "python99": [19, 43, 44], "python_datatyp": 27, "python_dataypes_2021": 27, "python_learn": 44, "python_studi": 44, "pythonblogsoftwar": 6, "pythondatatyp": 27, "pythonpath": 55, "pythonregex": 14, "pythonthi": 64, "pythonwikiengin": 6, "pythonwin": 55, "pytorch": [22, 144], "pytz": [34, 38], "pyweek": 6, "q": [65, 127, 131], "quadrat": 49, "quagsir": 118, "qualit": 124, "qualiti": [97, 98], "quantil": [97, 131], "quantit": [131, 133, 136], "quantiti": 133, "quantiz": 124, "quarter": 135, "quarterli": 137, "quartet": 127, "quartil": [97, 131, 132, 133], "queen": 130, "queenstown": 131, "queri": [107, 125, 135], "question": [23, 28, 119, 136], "quick": [59, 105, 123, 130, 136], "quickli": [104, 122, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "quilava": 118, "quilladin": 118, "quintero": 121, "quit": [22, 29, 45, 46, 102, 104, 123, 125, 126, 127, 128, 129, 130, 134, 135, 137, 138], "quot": [27, 43, 49, 59, 64, 66, 67, 122, 124], "quotat": [59, 62], "quux": 28, "quz": 28, "qwilfish": 118, "r": [20, 22, 23, 24, 27, 28, 29, 30, 31, 36, 41, 43, 44, 46, 49, 65, 66, 70, 76, 77, 97, 98, 102, 107, 115, 118, 119, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "r1": 101, "race": [121, 129], "rad": 97, "radian": [55, 57], "radiu": [65, 70, 76], "raichu": 118, "raikou": 118, "rainbow": [124, 127, 130, 132, 133, 135], "rainbow_r": 127, "rais": [9, 10, 13, 24, 27, 28, 29, 30, 31, 36, 43, 45, 47, 55, 57, 59, 63, 70, 79, 81, 111, 116, 130], "ralt": 118, "ram": 43, "ramp": 124, "rampardo": 118, "ran": [22, 45, 46, 62, 76, 77], "rana": 101, "rand": [55, 107, 127, 129, 135, 136, 138], "randint": [55, 56, 127, 136], "randn": [7, 82, 86, 128, 131, 135], "random": [4, 7, 26, 31, 43, 61, 82, 86, 100, 107, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "random_numb": 55, "random_sampl": 101, "random_st": 136, "random_user_id": 55, "randomli": [123, 135], "randomlist": 46, "randomst": 125, "randon": 136, "randrang": [26, 55, 56], "rang": [6, 7, 10, 14, 23, 24, 27, 28, 29, 30, 32, 41, 45, 46, 47, 49, 55, 56, 64, 67, 76, 78, 82, 86, 100, 101, 102, 103, 107, 108, 109, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "rangeindex": [107, 117], "rank": [100, 101, 102, 103], "rapid": 4, "rapidash": 118, "rapidli": 4, "rare": [46, 81], "rate": [70, 97, 126, 129, 130, 134], "rather": [34, 41, 55, 59, 64, 78, 107, 108, 110, 114, 116, 117, 122, 131, 133, 135], "ratic": 118, "ratio": [57, 137], "ration": 26, "rattata": 118, "raw": [14, 66, 135], "raw_str": 66, "rayquaza": 118, "rayquazamega": 118, "rb": 43, "rbg": 139, "rc": [122, 124, 133], "rcparam": [7, 82, 86, 133, 135, 136], "rdbm": 137, "rdbu": 127, "rdbu_r": 127, "rdgy": 127, "rdgy_r": 127, "rdpu": 127, "rdpu_r": 127, "rdylbu": 127, "rdylbu_r": 127, "rdylgn": 127, "rdylgn_r": 127, "re": [6, 23, 27, 28, 49, 55, 107, 116, 117, 118, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 135, 137], "rea": 22, "reach": [9, 13, 22, 24, 43, 90], "react": [27, 28, 43], "read": [4, 10, 11, 14, 15, 41, 45, 46, 49, 50, 51, 59, 64, 65, 71, 73, 77, 101, 102, 103, 107, 115, 121, 125, 126, 136, 144], "read_clipboard": 107, "read_csv": [97, 98, 107, 108, 115, 118, 119, 121, 126, 132, 133], "read_excel": [107, 118], "read_html": 107, "read_json": 107, "read_sql": 107, "read_tabl": 107, "readabl": [4, 17, 32, 43, 54, 55, 64, 73, 81, 108], "reader": 43, "readi": [46, 76, 78, 145], "readili": [60, 69], "readlin": 43, "readm": 43, "real": [5, 6, 26, 65, 66, 67, 76, 77, 107, 125, 130, 131, 132, 135, 136, 144], "realiti": 65, "realiz": 132, "realli": [14, 76, 77, 121, 123, 125, 126, 129, 130, 131, 132, 135, 136, 137, 138], "reason": [10, 11, 12, 13, 26, 49, 54, 71, 77, 81, 104, 113, 121, 123, 130, 132, 137], "reassign": [12, 27, 29, 65, 113, 114], "rebind": 71, "receiv": [18, 19, 32, 52, 81], "recent": [9, 10, 11, 12, 13, 15, 23, 27, 28, 29, 30, 31, 36, 41, 43, 45, 46, 47, 50, 51, 52, 53, 55, 66, 67, 68, 69, 70, 76, 77, 78, 79, 81, 102, 111, 114, 116, 130, 135], "reciev": 6, "reciproc": 46, "recogn": [13, 55], "recollect": 127, "recomend": 65, "recommend": [6, 13, 14, 15, 35, 36, 41, 43, 58, 64, 65, 77, 100, 101, 125, 127, 129, 130, 131, 133, 136, 144], "record": [72, 115, 121, 135, 137], "recoveri": 44, "rect": [76, 129], "rectangl": [22, 70, 76, 129, 131, 133, 137], "rectangular": [133, 137, 138], "rectifi": 19, "recur": 81, "recurr": 144, "recurs": [4, 61, 78], "recursionerror": 53, "recursor": 53, "recycl": 44, "red": [22, 64, 77, 97, 98, 124, 127, 128, 130], "redeclar": 65, "redefin": [78, 135], "rediu": 76, "reds_r": 127, "reduc": [12, 22, 23, 49, 53, 105, 107, 126, 132, 134, 135], "reduceat": 105, "reduct": [8, 144], "redund": [81, 107, 111], "redux": 28, "refactor": 13, "refect": 125, "refer": [1, 4, 6, 11, 12, 24, 27, 28, 29, 43, 45, 55, 58, 59, 60, 65, 66, 70, 71, 76, 78, 81, 87, 103, 104, 105, 107, 121, 122, 124, 125, 127, 130, 131, 133, 134, 135, 136, 137, 141, 143], "referec": 135, "referenc": [50, 51, 121, 130, 131], "reference_vari": 76, "referenceerror": 45, "refin": 125, "reflect": [53, 125, 129, 131, 133, 135, 137], "reform": 137, "reformat": 27, "refresh": [5, 122], "reg": [14, 124, 126, 127, 128, 135, 140], "regard": [123, 130, 135], "regardless": 18, "regex": [4, 16, 118], "regex101": 14, "regex_pattern": 14, "regic": 118, "regigiga": 118, "regirock": 118, "regist": 59, "registeel": 118, "reglot": 125, "regplot": [123, 127, 129, 136], "regress": [122, 123, 125, 126, 129, 135, 136, 140, 144], "regular": [2, 14, 22, 27, 32, 83, 87, 107, 131, 135], "regularli": 76, "reindex": 111, "reindex_axi": 133, "reinforc": 144, "reinvent": 135, "reject": 24, "rel": [73, 122, 129, 133, 135], "relat": [5, 34, 40, 41, 43, 45, 46, 52, 79, 121, 123, 130, 131, 134, 135, 136, 137, 138], "relationa": 107, "relationship": [123, 124, 125, 126, 127, 128, 133, 137], "releas": [46, 49, 97], "relev": [107, 122, 126, 130, 134, 137, 138], "reli": [27, 43], "relicanth": 118, "reload": 134, "relplot": 135, "rem": 52, "remain": [29, 43, 70, 121, 122, 125, 126, 127, 129, 134, 135, 136], "remaind": [23, 24, 52, 55, 57, 65, 70, 79, 97], "remean": 24, "rememb": [10, 11, 22, 24, 44, 49, 50, 65, 66, 70, 78, 81, 101, 129, 130, 131, 132, 133, 135, 145], "remind": 124, "remoraid": 118, "remot": 46, "remov": [11, 14, 22, 26, 27, 29, 43, 45, 49, 55, 77, 111, 112, 113, 117, 122, 125, 128, 130, 131, 132, 135, 136], "remove_item": 49, "remove_support_word": 43, "renam": [6, 100, 117, 133, 137], "rename_axi": 114, "render": [6, 44, 83, 87], "repeat": [22, 23, 27, 28, 29, 30, 43, 49, 53, 60, 62, 76, 78, 101, 104, 135, 137], "repeatedli": [17, 22, 23, 24], "repetit": [14, 22], "rephras": 131, "replac": [10, 13, 14, 24, 27, 32, 65, 77, 78, 102, 107, 114, 116, 119, 122, 124, 126, 128, 130, 132, 135], "replic": 135, "repositori": [12, 27], "repr": 6, "repres": [26, 27, 35, 36, 37, 39, 40, 45, 46, 52, 59, 63, 66, 67, 73, 76, 77, 81, 111, 114, 116, 117, 121, 122, 124, 125, 126, 129, 131, 132, 133, 135, 137, 138], "represent": [6, 26, 27, 35, 36, 59, 76, 107, 121, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "reproduc": [7, 82, 86, 132], "request": [6, 102], "requir": [6, 8, 9, 10, 13, 17, 22, 23, 26, 32, 45, 46, 47, 49, 52, 54, 58, 64, 65, 66, 68, 73, 76, 77, 78, 81, 90, 107, 111, 113, 114, 117, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 145], "required_datatyp": 68, "requis": 130, "resampl": 135, "resarch": 27, "rescu": [10, 13], "research": [27, 31, 124, 125, 130, 131, 133, 134, 137, 144], "resembl": [135, 137], "reserv": [63, 65], "reset": 122, "reset_index": [107, 108, 118, 133], "reshap": [100, 103, 105, 138], "reshiram": 118, "resid": [55, 128], "residplot": 136, "residu": 127, "resiz": [43, 97, 100], "resolut": 97, "resolv": [109, 136], "reson": 135, "resourc": [9, 43, 46, 124, 126, 127, 132, 133, 134, 135], "respect": [27, 34, 41, 46, 52, 67, 68, 69, 77, 108, 110, 114, 115, 123, 124, 125, 126, 133, 134, 135, 136, 137], "respectivv": 133, "respons": [79, 130, 134, 144], "rest": [0, 22, 24, 27, 28, 43, 46, 49, 59, 84, 111, 114, 122, 125, 127, 129, 130, 131, 133, 134, 135, 136, 142], "restart": [10, 22, 55, 122], "restaur": [125, 129, 130, 132], "restor": 56, "restrict": [13, 76, 81, 132], "restructur": 59, "result": [9, 10, 11, 12, 14, 15, 19, 20, 22, 23, 24, 26, 27, 28, 29, 40, 41, 45, 46, 49, 50, 52, 53, 55, 60, 63, 64, 69, 70, 78, 79, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 122, 124, 125, 126, 127, 133, 134, 135, 136, 137], "resurc": 134, "ret": 130, "retriev": [13, 27, 30, 52, 59, 67, 116], "return": [6, 9, 10, 12, 13, 14, 20, 22, 23, 27, 31, 32, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 69, 70, 76, 77, 78, 79, 81, 101, 102, 103, 104, 107, 111, 112, 113, 114, 115, 116, 117, 122, 123, 124, 129, 130, 132, 135, 136, 137], "reuniclu": 118, "reus": [6, 13, 76, 102], "reusabl": [15, 49, 55, 76, 78], "rev": 97, "rev_str": 10, "reveal": [81, 124, 136, 145], "revenu": 124, "revers": [10, 12, 27, 29, 30, 49, 100, 124], "reverse_list": 49, "reverse_list1": 49, "review": [100, 129, 130], "revis": [132, 133], "revisit": [126, 127], "revolut": 97, "reward": [14, 27], "rewrit": [19, 49], "rewritten": 32, "rfind": 27, "rfloor": 70, "rgb": [55, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "rgb_color_gen": 55, "rgba": [124, 126], "rhydon": 118, "rhyhorn": 118, "rhyperior": 118, "rich": [131, 135, 136], "rid": [122, 128, 130, 132], "right": [17, 27, 47, 52, 59, 64, 69, 70, 77, 78, 79, 97, 98, 102, 107, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 137], "rigor": 135, "rindex": 27, "riolu": 118, "risk": [135, 136], "rjust": [27, 69], "rmdir": 55, "rmtree": 44, "roam": 55, "robert": 124, "robust": [4, 73, 104, 125, 139], "rock": 118, "rocket": [6, 127, 129, 130, 132, 133, 134, 135, 136, 137], "rocket_r": 127, "rodriguez": 121, "roger": 97, "roggenrola": 118, "roi": 135, "role": [2, 64, 78, 107, 144], "roll": [105, 116], "romeo_and_juliet": 43, "romero": [107, 108, 119], "ronaldo": [22, 23, 97], "root": [43, 46, 55, 57, 100, 103], "rose": 110, "roselia": 118, "roserad": 118, "rot": 124, "rotat": 124, "rotom": 118, "rotomfan": 118, "rotomfrost": 118, "rotomheat": 118, "rotommow": 118, "rotomwash": 118, "rough": 135, "roughli": [126, 137], "round": [10, 18, 27, 32, 55, 68, 70], "routin": [62, 103, 133, 135], "row": [22, 23, 32, 43, 97, 100, 101, 102, 103, 104, 107, 111, 112, 114, 116, 117, 118, 123, 125, 126, 127, 129, 133, 134, 136, 137, 138, 139], "row1": 113, "row2": 113, "row_color": 139, "row_index": 115, "row_index1": 109, "row_index2": 109, "row_labl": 107, "row_ord": [125, 134, 137], "row_posit": 107, "row_r1": 102, "row_r2": 102, "rpm": 119, "rstrip": 27, "rt": 43, "ru": 46, "rubi": 73, "rufflet": 118, "rug": [123, 128], "rule": [27, 49, 73, 78, 103, 107, 130, 133, 137], "run": [0, 4, 5, 6, 9, 10, 11, 12, 22, 23, 24, 26, 32, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 49, 50, 51, 52, 55, 64, 65, 71, 73, 76, 78, 84, 122, 124, 132, 134, 135, 142], "runnabl": 73, "runtim": [45, 46, 55, 78, 121], "runtimeerror": [45, 46], "runtimewarn": 103, "russia": [12, 28, 46], "russian": 43, "rvalu": 123, "s1": [34, 76, 116, 117], "s2": [34, 76, 116, 117], "s3": [116, 117], "s4": 117, "s_car": 78, "sabley": 118, "sableyemega": 118, "sad": 11, "safe": [29, 43, 76, 124, 128], "safer": [43, 44], "sai": [12, 14, 23, 52, 55, 65, 77, 78, 107, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137], "said": [27, 78, 103, 122, 124, 125, 126], "saint": 97, "sake": [108, 121], "salam": 118, "salamencemega": 118, "salari": [47, 76, 78, 97, 111], "salarynotinrangeerror": 47, "sale": 135, "sales_data_of_bathingsoap": 98, "salesdata": 98, "salk": 22, "salmon": 133, "sam": [108, 110, 111, 112, 113, 114, 117], "same": [2, 9, 10, 12, 15, 18, 19, 22, 24, 27, 31, 46, 49, 50, 51, 52, 54, 55, 56, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 81, 83, 87, 98, 100, 101, 102, 103, 104, 107, 110, 111, 112, 114, 115, 117, 118, 119, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137], "sampl": [7, 9, 43, 56, 66, 76, 78, 82, 86, 101, 104, 121, 126, 127, 129, 130, 131, 132, 135, 136, 137], "sample_1": 131, "sample_2": 131, "sample_3": 131, "sample_cmap": 124, "sample_color": 124, "sample_combo": 131, "sample_melt": [129, 137], "samsung": 52, "samurott": 118, "san": [97, 121], "sandil": 118, "sandshrew": 118, "sandslash": 118, "sanitize_sequ": 130, "sapp": 121, "sat": [130, 131, 132, 133], "satisfi": [12, 17, 23, 24, 32, 78, 102], "satur": [124, 131, 132, 133, 135], "save": [6, 9, 10, 55, 62, 73, 97], "savefig": [97, 98], "saw": [6, 77], "sawk": 118, "sawsbuck": 118, "scalabl": 137, "scalar": [8, 103, 104, 107, 108, 132, 133], "scale": [97, 104, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "scale_hu": 132, "scan": [73, 136], "scandic": 28, "scatter": [109, 123, 125, 127, 128, 129, 130, 134, 136, 137, 140], "scatter_kw": [125, 126, 127, 129, 136], "scatterbug": 118, "scatterplot": [125, 126, 127, 129, 130, 137], "scc": 126, "scenario": [51, 78, 122, 125, 126, 130, 131, 132, 135, 145], "sceptil": 118, "sceptilemega": 118, "scheme": 124, "school": [5, 26, 108, 132, 133], "scienc": [4, 6, 27, 30, 43, 49, 55, 107, 110, 120, 123, 125, 134, 135, 137, 145], "scientif": [6, 100, 124, 132], "scikit": [22, 100, 136, 144], "scipi": [6, 103, 123, 128, 135, 136], "scizor": 118, "scizormega": 118, "scoliped": 118, "scope": [4, 11, 45, 50, 51, 55, 64, 69, 75, 130, 131, 137], "score": [20, 108, 131, 133], "scorebook": 133, "scorecard": [133, 137], "scott": 132, "scrafti": 118, "scraggi": 118, "scratch": [9, 76, 78], "screen": [27, 34, 62, 69, 125, 134], "script": [6, 46, 55, 70, 73], "scyther": 118, "sd": [104, 133, 135], "seaborn": [126, 127, 128, 133, 134, 135, 136, 137, 138, 139], "seadra": 118, "seagreen": 137, "seak": 118, "sealeo": 118, "search": [13, 27, 30, 58, 71, 78, 119, 134], "season": [20, 49], "second": [9, 10, 12, 21, 22, 27, 28, 29, 32, 35, 36, 38, 39, 40, 41, 45, 46, 50, 52, 55, 60, 65, 69, 70, 77, 78, 81, 102, 110, 111, 114, 116, 119, 122, 130, 131, 132, 133, 135, 137], "second_last": 27, "second_lett": 27, "second_numb": 69, "secondari": 21, "secondli": [125, 135], "secret": 145, "section": [11, 26, 27, 32, 43, 45, 64, 69, 90, 107, 108, 109, 110, 111, 112, 115, 117, 129, 132, 134, 135, 145], "secur": 76, "sedan": [107, 108, 119], "see": [0, 1, 2, 7, 9, 10, 11, 12, 13, 14, 15, 19, 22, 23, 24, 26, 27, 30, 32, 41, 43, 45, 46, 49, 50, 51, 52, 54, 55, 56, 59, 62, 63, 64, 67, 68, 69, 70, 73, 76, 78, 79, 81, 82, 83, 84, 86, 87, 100, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 141, 142, 143], "seed": [7, 56, 82, 86, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "seedot": 118, "seek": 43, "seek_set": 43, "seekabl": 43, "seel": 118, "seem": [26, 58, 81, 123, 131, 132, 134, 135, 136, 137], "seen": [11, 13, 43, 65, 81, 107, 108, 116, 117, 127, 128, 129, 130, 131, 136, 137], "segment": [60, 122, 123, 125, 129, 134], "segreg": [122, 129, 132, 133, 135, 137], "seismic": 127, "seismic_r": 127, "seismitoad": 118, "select": [6, 27, 97, 100, 102, 108, 111, 114, 119, 124, 132, 135, 136, 137], "select_difficulti": 58, "self": [9, 10, 13, 32, 46, 47, 59, 76, 78, 79, 111, 114, 116, 121, 130], "self_mag": 79, "sell": 76, "semi": [6, 78], "send": 135, "sens": [12, 22, 63, 65, 103, 107, 121], "sensibl": 79, "sensit": [24, 63, 65, 70, 124, 135], "sentenc": [14, 22, 27, 31, 69, 70], "sentinel": 9, "sentret": 118, "sep": [35, 36, 59, 62, 69, 104, 118], "sepal": [97, 121, 129], "sepal_length": [121, 127, 129, 130, 136, 139], "sepal_width": [121, 126, 127, 129, 130, 136, 139], "sepallength": 97, "sepallengthcm": 97, "sepalwidthcm": 97, "separ": [19, 22, 26, 27, 28, 29, 30, 31, 32, 43, 44, 46, 47, 49, 63, 64, 65, 67, 69, 70, 71, 76, 78, 98, 109, 115, 122, 123, 125, 127, 129, 131, 132, 135, 136, 137], "septemb": 20, "seq": 56, "sequenc": [9, 10, 22, 24, 28, 29, 30, 43, 44, 45, 49, 53, 54, 55, 56, 62, 64, 66, 67, 68, 70, 71, 102, 104, 116, 117, 125, 126, 135, 136], "sequencemethod": 64, "sequenti": 116, "serbian": 43, "seren": 121, "seri": [10, 21, 22, 23, 39, 55, 73, 119, 125, 128, 129, 132, 134, 137, 144], "serial": 59, "serif": [133, 135], "serperior": 118, "serv": [47, 59, 83, 87, 134], "server": 135, "servin": 118, "session": 55, "set": [4, 6, 9, 13, 14, 23, 27, 28, 33, 43, 44, 49, 55, 66, 68, 70, 76, 77, 78, 97, 101, 102, 104, 107, 108, 109, 111, 112, 113, 114, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145], "set1": [125, 127, 130, 133, 137], "set1_r": 127, "set2": [127, 131, 132, 133, 136], "set2_r": 127, "set3": [127, 131, 132], "set3_r": 127, "set_": 130, "set_1": 77, "set_axis_label": [134, 137], "set_context": 122, "set_fonts": 133, "set_hatch": 97, "set_index": [107, 115, 133], "set_opt": 107, "set_printopt": 105, "set_styl": [122, 124, 126, 132, 133], "set_temperatur": 13, "set_titl": [98, 134, 137], "set_transform": 130, "set_vis": 136, "set_xlabel": [132, 133, 135], "set_xtick": 133, "set_xticklabel": [132, 134], "set_ylabel": [132, 133, 135], "set_ytick": 133, "setattr": [77, 78], "seterr": 105, "setmaxpric": 76, "setosa": [97, 121, 129, 139], "setstat": 56, "settabl": 26, "setter": 76, "seven": [22, 55], "sever": [6, 10, 14, 20, 28, 40, 41, 46, 55, 69, 102, 132], "sevip": 118, "sewaddl": 118, "sex": [125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "sex_tim": 132, "sh": 76, "shade": [124, 126], "shadow": 125, "shall": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "shampoo": 98, "shampoosalesdata": 98, "shanghai": 32, "shape": [76, 100, 101, 102, 103, 104, 107, 111, 121, 125, 129, 132], "sharabl": 76, "share": [55, 77, 81, 107, 123, 124, 130, 135, 137], "sharei": [123, 125, 134, 137], "sharex": [98, 123, 125, 132, 134, 137], "sharpedo": 118, "sharpedomega": 118, "shayminland": 118, "shayminski": 118, "she": [47, 76], "shedinja": 118, "sheet": [99, 106, 107, 120], "sheet_nam": 43, "shelgon": 118, "shell": [10, 11, 12, 41, 62, 65, 125], "shellder": 118, "shello": 118, "shelmet": 118, "shelton": 121, "shieldon": 118, "shift": [6, 19, 22, 23, 24, 64, 70, 79, 136], "shiftri": 118, "shine": [127, 129, 132], "shinx": 118, "shoot": 121, "short": [20, 22, 32, 49, 54, 59, 64, 65, 115, 134], "shortcut": 4, "shorten": 46, "shorthand": 97, "shortli": [125, 132, 136], "shot": [121, 133, 135], "should": [0, 10, 11, 12, 14, 15, 18, 19, 22, 26, 30, 32, 43, 44, 46, 49, 55, 59, 64, 65, 69, 73, 77, 81, 84, 97, 98, 102, 103, 107, 108, 111, 112, 115, 116, 117, 123, 124, 125, 126, 130, 131, 135, 137, 142, 144], "shouldn": [130, 135], "show": [0, 2, 9, 23, 24, 27, 35, 36, 40, 50, 52, 53, 54, 55, 66, 73, 76, 77, 79, 83, 84, 87, 97, 107, 108, 110, 113, 114, 115, 117, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 142], "show_config": 105, "showcap": 129, "showflier": [129, 131], "shown": [9, 12, 13, 19, 22, 24, 27, 28, 45, 58, 73, 76, 107, 108, 109, 111, 112, 113, 114, 115, 122, 131, 133, 138], "showroom": 107, "shroomish": 118, "shuckl": 118, "shuffl": [26, 55, 56], "shuffle_list": 55, "shuppet": 118, "shutil": 44, "sibsp": [131, 133], "side": [70, 78, 107, 122, 129, 131, 137], "sig": 130, "sight": 9, "sigilyph": 118, "sigma": 56, "sign": [7, 52, 57, 64, 65, 82, 86, 125, 130], "signal": 135, "signatur": 81, "signific": [5, 26, 65, 107, 121, 124, 125], "signs_of_mental_il": 121, "silcoon": 118, "silenc": 115, "silverman": 132, "simiar": 67, "similar": [10, 12, 14, 15, 22, 23, 27, 29, 32, 43, 49, 55, 58, 64, 71, 77, 83, 87, 102, 107, 122, 125, 126, 128, 129, 130, 132, 134, 135, 137, 138, 139], "similari": 70, "similarli": [13, 14, 26, 27, 31, 43, 44, 50, 51, 58, 66, 67, 71, 76, 77, 78, 79, 81, 110, 117, 121, 123, 124], "simipour": 118, "simisag": 118, "simisear": 118, "simmon": 124, "simpl": [2, 4, 6, 9, 10, 11, 12, 13, 23, 27, 30, 34, 43, 46, 47, 55, 62, 66, 70, 72, 73, 77, 81, 83, 87, 109, 111, 114, 115, 117, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 144], "simpler": [6, 53, 125, 126, 132, 136], "simplest": [18, 22, 27, 55, 101, 103, 125, 131, 133], "simpli": [9, 10, 12, 13, 23, 27, 49, 58, 64, 70, 71, 77, 78, 103, 111, 134], "simplifi": [12, 111], "simul": 79, "simultan": [52, 126, 127, 132, 135], "sin": [55, 57, 100, 103, 122, 135, 137], "sinc": [10, 12, 14, 19, 22, 24, 28, 29, 30, 31, 40, 41, 43, 46, 49, 52, 55, 56, 62, 67, 76, 77, 78, 79, 81, 102, 104, 121, 127, 128, 129], "sine": [55, 57, 100, 122, 135], "sing": [69, 76], "singapor": 29, "singl": [8, 12, 14, 22, 27, 28, 31, 41, 46, 51, 54, 66, 67, 69, 73, 76, 81, 101, 102, 107, 109, 116, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139], "singular": 103, "sinh": [26, 55, 57], "sinplot": 122, "sinusoid": 137, "site": [55, 111, 114, 115, 116, 121, 124, 128, 130], "situat": [10, 21, 29, 46, 49, 52, 68, 122], "six": [12, 55, 81, 107, 108, 119, 124], "size": [22, 23, 24, 27, 43, 58, 76, 100, 101, 103, 104, 107, 108, 116, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139], "size_func": 136, "skarmori": 118, "sketch": [76, 77], "skew": 135, "skiddo": 118, "skill": [20, 22, 30, 43, 65, 76, 78, 97, 135, 136], "skinnier": 132, "skip": [18, 19, 22, 23, 24, 27, 46, 52], "skiploom": 118, "skitti": 118, "sklearn": 136, "skorupi": 118, "skrelp": 118, "skuntank": 118, "sky": 124, "slake": 118, "slakoth": 118, "slash": [27, 44, 132], "sleep": [4, 42, 55, 62], "slice": [31, 64, 67, 102, 107, 136], "slice_a": 102, "slidingtackl": 97, "sliggoo": 118, "slight": [2, 29, 83, 87, 137], "slightli": [41, 63, 121, 130], "slope": [32, 49, 70, 123, 133], "slot": 102, "slow": [103, 111], "slowbro": 118, "slowbromega": 118, "slower": 73, "slowk": 118, "slowli": [129, 130, 131, 135], "slowpok": 118, "slugma": 118, "slurpuff": 118, "small": [2, 24, 32, 47, 55, 60, 73, 83, 87, 125, 127, 129, 133, 135, 136, 137], "smaller": [20, 21, 49, 68, 100, 103, 110, 127, 129, 136], "smallest": [31, 57], "smallpox": 22, "smart": 65, "smart_divid": 12, "smeargl": 118, "smfyb": 55, "smim": 108, "smith": 108, "smoke": [135, 137], "smoker": [125, 128, 129, 130, 131, 132, 133, 134, 135, 137], "smoochum": 118, "smoot": 135, "smooth": [132, 135], "smoother": 125, "smoothli": 52, "sn": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "snake": 65, "snake_cas": 65, "sname": 114, "sneak": 121, "sneasel": 118, "snivi": 118, "snorlax": 118, "snorunt": 118, "snover": 118, "snubbul": 118, "so": [0, 4, 9, 10, 11, 12, 13, 19, 20, 21, 22, 23, 24, 27, 28, 29, 31, 43, 45, 46, 49, 50, 52, 54, 55, 56, 60, 63, 64, 65, 66, 68, 70, 71, 73, 76, 77, 78, 79, 81, 84, 97, 100, 102, 103, 107, 108, 111, 113, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142], "soar": 134, "soccer": [97, 137], "socket": 6, "sofifa": 97, "softwar": [4, 6, 20, 125], "sold": 98, "sole": [123, 124, 135], "solid": 122, "solosi": 118, "solrock": 118, "solut": [11, 13, 15, 45, 49, 51, 68, 98, 103, 119, 132, 135, 137], "solv": [32, 51, 76, 109, 124, 125, 145], "solve_quadratic_eqn": 49, "some": [1, 2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 20, 22, 23, 26, 27, 28, 29, 30, 31, 32, 43, 45, 46, 49, 51, 53, 55, 59, 62, 65, 67, 69, 70, 73, 76, 78, 81, 82, 83, 85, 86, 87, 88, 102, 103, 104, 107, 108, 111, 113, 114, 115, 121, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 135, 136, 137, 141, 143, 145], "somedai": 135, "somehow": [125, 133], "someon": [60, 135], "someth": [9, 10, 14, 19, 34, 35, 36, 37, 38, 39, 40, 41, 46, 47, 53, 55, 64, 69, 107, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137], "sometim": [22, 24, 27, 46, 47, 49, 52, 53, 62, 69, 76, 101, 107, 114, 115, 122, 130, 132, 136], "somewher": [24, 28, 124, 131], "song": [58, 76], "soon": [22, 45, 76, 77, 125, 127], "sort": [12, 22, 31, 55, 117, 129, 130, 132, 137], "sort_valu": [107, 118, 119, 132, 133, 137], "sorted_point": 14, "sound": [123, 133], "soup": 66, "sourc": [4, 59, 62, 64, 69, 73, 100, 102, 104, 107, 112, 115, 118, 119, 121, 144], "south": 97, "southampton": [131, 133], "sp": [115, 118], "space": [8, 14, 17, 20, 22, 24, 27, 45, 49, 52, 59, 62, 64, 69, 90, 100, 104, 107, 124, 126, 128, 132, 135, 137], "spain": 97, "span": [83, 87, 129, 137], "spanish": 43, "spatial": [133, 135], "speak": [9, 10, 81, 133, 137], "speaker": 122, "spearow": 118, "speci": [76, 77, 97, 121, 124, 127, 129, 130, 136, 139], "special": [9, 12, 15, 63, 64, 65, 77, 81, 83, 87, 107, 121, 122, 134, 136, 137], "specialattribut": 64, "specialidentifi": 64, "specialmethod": 64, "specif": [15, 22, 23, 27, 43, 49, 55, 59, 60, 68, 69, 73, 76, 78, 83, 87, 98, 102, 107, 111, 114, 116, 117, 118, 119, 122, 123, 124, 125, 126, 130, 131, 132, 134, 135, 136, 137, 138], "specifi": [12, 13, 22, 24, 27, 41, 43, 44, 46, 54, 56, 64, 65, 66, 78, 79, 97, 100, 101, 102, 104, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 124, 126, 127, 135, 137], "spectral": 127, "spectral_r": 127, "speech": 43, "speech_barack_obama": 43, "speech_donald_trump": 43, "speech_melina_trump": 43, "speech_michelle_obama": 43, "speed": [78, 107, 118, 137], "speed_of_light": 65, "spewpa": 118, "spheal": 118, "sphere": 6, "sphinx": [2, 59, 83, 87], "spike": 135, "spinarak": 118, "spinda": 118, "spine": [122, 126, 131, 132], "spirit": 135, "spiritomb": 118, "split": [6, 12, 22, 27, 31, 69, 100, 107, 115, 122, 129, 130, 132, 136], "split_string_decor": 12, "splitlin": 43, "splitted_str": 12, "spoink": 118, "spoke": 122, "spoken": [12, 43, 49], "sport": 78, "sports_car_info": 78, "sportscar": 78, "spread": [125, 131, 132, 135, 137], "spreadsheet": [43, 107], "spring": [20, 49, 81, 127, 131, 133], "spring_r": 127, "sprintf": [27, 69], "spritze": 118, "spyder": 122, "sql": [28, 107, 115], "sqr": 54, "sqrt": [55, 57, 100, 103, 105], "squar": [10, 11, 12, 18, 22, 23, 24, 27, 28, 29, 30, 32, 54, 55, 57, 59, 76, 81, 100, 101, 103, 123, 126, 127, 136, 137, 138], "square_numb": [49, 52], "squeez": 28, "squirtl": 118, "sr": 114, "st": 30, "stabil": 134, "stack": [28, 53, 54, 103, 104, 105, 108, 121, 133, 134, 135, 137], "stackplot": 98, "stage": [123, 135], "stai": [108, 111, 123], "stakehold": 136, "stamp": [135, 136], "stan": 12, "stand": [2, 12, 43, 83, 87, 131], "standard": [6, 46, 47, 49, 55, 57, 59, 65, 69, 76, 100, 101, 104, 107, 110, 117, 123, 124, 125, 131, 133, 139], "standard_scal": 139, "standingtackl": 97, "stantler": 118, "star": [12, 22, 72], "staraptor": 118, "starat": 118, "staravia": 118, "starli": 118, "starmi": 118, "start": [0, 2, 4, 9, 10, 12, 17, 18, 22, 23, 27, 28, 29, 41, 43, 46, 49, 56, 58, 63, 64, 65, 67, 71, 83, 84, 87, 90, 100, 102, 104, 107, 108, 109, 110, 111, 113, 114, 116, 118, 122, 123, 124, 125, 129, 130, 131, 132, 133, 135, 137, 142, 145], "start_index": 6, "startindex": 102, "startswith": 27, "staryu": 118, "stat": [104, 121, 123, 126, 128, 132, 133, 135, 136], "stat_meth": 81, "state": [7, 10, 43, 56, 71, 76, 82, 86, 97, 101, 121, 126, 130, 131], "statement": [4, 10, 25, 28, 30, 34, 41, 43, 45, 47, 54, 62, 69, 70, 73, 75, 76, 77, 102, 137], "static": [69, 81], "staticmethod": 81, "statist": [20, 26, 76, 119, 121, 123, 125, 126, 129, 131, 132, 133, 134, 135, 136, 137, 140, 144, 145], "statistician": 136, "statsmodel": [127, 132], "statu": [28, 121], "std": [76, 77, 100, 104, 105, 107, 121, 126, 128, 133, 137], "std1": 77, "std2": 77, "std3": 77, "stderr": 123, "stdev": 55, "stdout": [59, 69], "steadi": 129, "steel": [118, 121], "steelix": 118, "steelixmega": 118, "step": [4, 12, 22, 27, 28, 29, 43, 53, 56, 69, 71, 77, 100, 104, 107, 117, 136], "step3": 69, "step_siz": 22, "stephen": 136, "stepsiz": 102, "stetement": 20, "stick": [132, 133, 135], "still": [11, 27, 59, 64, 76, 77, 81, 108, 110, 111, 114, 117, 122, 123, 125, 133, 134, 135, 136], "sting": 43, "stochast": 135, "stock": [127, 132, 133], "stockprice_data": 107, "stoke": 137, "stop": [14, 22, 23, 24, 27, 28, 29, 43, 46, 49, 53, 56, 65, 100, 104, 107, 117, 135], "stopiter": [9, 10, 24, 45], "storag": 76, "store": [6, 9, 10, 11, 13, 22, 24, 26, 27, 28, 35, 39, 43, 46, 47, 51, 58, 65, 68, 69, 70, 71, 73, 76, 78, 103, 107, 108, 109, 115, 122, 127, 135], "store_and_fwd_flag": 135, "stori": 134, "stoutland": 118, "str": [6, 14, 24, 27, 28, 36, 43, 45, 49, 59, 67, 68, 69, 77, 78, 79, 97, 114, 118, 132, 133], "str1": 27, "str2": 27, "str3": 27, "str4": 27, "straight": [45, 67, 126, 138], "straightforward": 124, "strat": 27, "strategi": 107, "strawberri": [66, 77], "stream": [43, 59], "street": [20, 22], "stress": [77, 125], "strftime": [4, 36, 37, 38, 39, 41, 42], "strictli": 123, "stride_trick": 105, "string": [4, 9, 10, 11, 12, 13, 18, 24, 26, 29, 31, 33, 37, 38, 39, 40, 43, 44, 45, 46, 49, 54, 62, 64, 65, 68, 70, 76, 77, 79, 107, 108, 114, 116, 124, 125, 137], "string1": 27, "string2": 27, "stringifi": 43, "stringmethod": 64, "strip": [27, 97, 114, 121, 124, 129, 131, 134, 135, 140], "strip_data": 130, "stripplot": [121, 124, 129, 130, 131, 135], "strive": 103, "strlist": 132, "stroke": 119, "stronger": 126, "strptime": [4, 35, 42], "structur": [2, 6, 12, 17, 22, 28, 43, 45, 58, 59, 63, 76, 83, 87, 97, 98, 107, 108, 109, 115, 116, 117, 118, 119, 121, 129, 137, 144], "struggl": 130, "stuck": 132, "stud": 76, "stud1": 108, "stud2": 108, "stud3": 108, "stud_ag": 114, "stud_mark": 114, "stud_nam": 114, "student": [20, 22, 28, 30, 69, 76, 77, 107, 108, 110, 111, 115, 116, 117, 129, 130, 133, 137], "student_count": 77, "student_data": 115, "student_df": [107, 108, 110, 111, 112, 113, 114, 116, 117], "student_dict": [107, 108, 110, 111, 112, 113, 114, 116, 117], "student_id": 133, "student_nam": 22, "studentdf": 115, "studentdict": 115, "students_enrol": 132, "studentstud": 77, "studi": [5, 8, 10, 62, 76, 104, 126, 135, 137, 138, 144, 145], "studnet": 77, "stuff": 78, "stunfisk": 118, "stunki": 118, "style": [64, 65, 69, 97, 104, 107, 108, 111, 114, 118, 119, 122, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "sub": [11, 29, 44, 49, 53, 58, 59, 100, 133, 135, 137], "subarrai": 102, "subcategori": 133, "subclass": [46, 59, 78], "subdirectori": [44, 58], "subdivid": 135, "subgroup": 14, "subject": [123, 135], "subplot": [7, 82, 86, 122, 123, 132, 134, 136, 137], "subplot_kw": 137, "subscript": [64, 67], "subsequ": [9, 28], "subset": [31, 41, 107, 112, 113, 125, 136, 137, 144], "substitut": [14, 78], "substr": [14, 27], "substract": [70, 100], "subtract": [8, 26, 49, 65, 70, 79, 100, 103], "success": [10, 14, 135], "successful": 6, "successfulli": [13, 46, 130, 132], "sudden": 46, "sudowoodo": 118, "sugar": 12, "suggest": [34, 45, 125, 131, 137], "suicun": 118, "suit": [73, 76, 107, 124, 129, 130, 135], "suitabl": [10, 27, 125, 133], "sum": [10, 11, 15, 22, 23, 26, 28, 31, 34, 49, 52, 55, 57, 59, 60, 64, 68, 76, 79, 98, 100, 103, 104, 118, 119, 128, 131, 133], "sum1": 69, "sum_al": 46, "sum_all_num": 52, "sum_all_numb": 49, "sum_numb": 11, "sum_of_even": 49, "sum_of_five_num": 46, "sum_of_kd": 128, "sum_of_numb": 49, "sum_of_odd": 49, "sum_two_numb": 49, "summar": [11, 59, 108, 121, 130], "summari": [59, 97, 131, 132, 133, 136], "summat": [11, 103], "summer": [20, 49, 127], "summer_r": 127, "sun": [14, 35, 36, 125, 128, 130, 131, 132, 133, 137], "sundai": [35, 36], "sunflora": 118, "sunkern": 118, "sunroof": 77, "super": [47, 76, 81, 104, 111, 114, 137], "superclass": 78, "superhead": 137, "supervis": [144, 145], "suppli": [44, 46, 114], "support": [0, 6, 22, 24, 26, 28, 29, 31, 43, 49, 57, 65, 66, 67, 73, 76, 78, 84, 103, 124, 125, 128, 133, 135, 137, 142], "support_word": 43, "suppos": [10, 13, 15, 17, 24, 32, 34, 55, 58, 59, 76, 79, 81, 103, 108, 109, 113, 114, 115, 116, 117, 135], "supress": 111, "suptitl": [128, 132, 137], "sure": [6, 7, 14, 15, 46, 51, 82, 86, 100, 122, 125, 129, 131, 132, 133, 135], "surfac": 49, "surnam": [52, 59, 110, 117], "surround": [10, 64, 66], "surskit": 118, "survei": 124, "surviv": [131, 133], "suspect": 131, "suspend": [40, 41], "suspens": 41, "svd": [8, 105], "sw": 46, "swablu": 118, "swadloon": 118, "swahili": 43, "swalot": 118, "swampert": 118, "swampertmega": 118, "swanna": 118, "swap": [27, 49], "swapcas": 27, "swapfil": 44, "swarm": [121, 131, 134], "swarmplot": [121, 124, 129, 130, 131], "sweden": [28, 46], "sweet": 24, "swellow": 118, "swim": [76, 78], "swinub": 118, "swirlix": 118, "switch": [122, 126, 135], "switzerland": 126, "swoobat": 118, "sx": 27, "sy": [34, 44, 45, 46, 58, 59, 69], "syantax": 28, "sylveon": 118, "symbol": [12, 14, 15, 27, 55, 59, 63, 64, 65, 70, 79], "symmetr": 22, "symmetric_differ": 31, "symmetric_difference_upd": 31, "sync": 100, "syntact": [12, 49, 62], "syntax": [2, 4, 10, 12, 13, 14, 27, 28, 29, 30, 31, 44, 46, 49, 54, 59, 63, 68, 69, 73, 76, 77, 78, 83, 87, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 122, 134, 135, 137], "syntaxerror": [27, 45, 52, 63, 65], "syntaxwarn": 70, "synthet": 137, "system": [6, 9, 24, 26, 40, 43, 44, 45, 55, 64, 79, 144], "systemerror": 45, "systemexit": 45, "t": [7, 13, 20, 22, 23, 24, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 43, 46, 49, 51, 55, 58, 62, 65, 66, 67, 68, 69, 73, 76, 77, 78, 79, 81, 82, 86, 100, 103, 104, 105, 107, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "t1": [29, 34, 38, 40, 41], "t10": 124, "t2": [29, 34, 38, 41], "t3": [29, 34, 38], "t4": [29, 34], "t5": 34, "t6": 34, "tab": [17, 27, 45, 64, 66, 124], "tab10": 127, "tab10_r": 127, "tab20": 127, "tab20_r": 127, "tab20b": 127, "tab20b_r": 127, "tab20c": 127, "tab20c_r": 127, "taberror": 45, "tabl": [22, 24, 26, 35, 36, 55, 70, 79, 107, 108, 115, 129, 138], "table_nam": 107, "tableau": [124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "tableau_20": [126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "tabul": [28, 30, 79], "tabular": [43, 107, 116, 117], "tackl": 125, "tag": [6, 43], "tail": [107, 118, 119, 135], "taillow": 118, "take": [9, 10, 11, 12, 14, 15, 18, 22, 23, 26, 27, 28, 31, 32, 34, 35, 36, 37, 38, 40, 41, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 59, 64, 65, 69, 73, 76, 77, 78, 81, 103, 107, 108, 110, 111, 112, 113, 114, 116, 117, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 137, 138], "taken": [43, 134, 135], "talk": [40, 41, 122, 127, 131, 137], "talli": 137, "talonflam": 118, "tamper": [27, 32, 65, 76], "tan": [55, 57], "tangela": 118, "tangent": [55, 57], "tangrowth": 118, "tanh": [55, 57], "tap": 136, "tar": 55, "target": [41, 73, 115, 124], "taser": 121, "task": [6, 12, 22, 23, 28, 30, 31, 37, 40, 41, 46, 49, 53, 55, 60, 62, 69, 70, 73, 79, 124, 134, 135, 144], "tau": 55, "tauro": 118, "taxi": 135, "tchapter": 27, "tchp": 27, "tdatatyp": 27, "te": 14, "tea": 14, "teach": [12, 14, 27, 31, 105], "teacher": [14, 27, 31, 43], "teal": 124, "team": [52, 97, 135, 137], "tech": 145, "technic": [9, 81], "techniqu": [11, 55, 129, 130, 135, 136, 144, 145], "teddiursa": 118, "tell": [18, 19, 24, 43, 46, 62, 69, 102, 123], "temp": [49, 65], "temp_convert": 46, "temperatur": [13, 49], "tempor": 135, "temporari": [78, 132], "temporarili": 122, "ten": [11, 12, 22, 43, 49, 98], "tend": 78, "tendenc": [76, 121, 125, 129, 131, 132, 133], "tensor": 8, "tensordot": 105, "tensorflow": [100, 144], "tentacool": 118, "tentacruel": 118, "tepig": 118, "terabyt": 137, "term": [10, 12, 53, 60, 122, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137], "termin": [9, 10, 22, 23, 24, 45, 46, 62, 100], "terrain": 127, "terrain_r": 127, "terrakion": 118, "territori": 126, "ters": 65, "test": [6, 14, 18, 19, 23, 24, 43, 44, 45, 46, 51, 55, 62, 70, 77, 118, 133, 135], "test1": 55, "test_1": [43, 44], "test_2": [43, 44], "test_express": 23, "test_modul": 55, "test_str": 14, "tester": 14, "testfil": [44, 46], "tex": [7, 82, 86], "text": [0, 1, 2, 3, 14, 19, 27, 43, 49, 59, 70, 83, 84, 85, 87, 88, 107, 126, 128, 132, 133, 135, 137, 141, 142, 143, 144], "text_1": 43, "textcoord": 133, "textiobas": 43, "textiowrapp": 43, "textual": [27, 37], "textwrap": 27, "th": [14, 27], "tha": 14, "thailand": 29, "than": [4, 6, 10, 11, 14, 15, 18, 19, 20, 21, 23, 24, 26, 27, 28, 29, 32, 34, 35, 41, 47, 53, 54, 55, 57, 65, 66, 67, 69, 70, 71, 73, 77, 78, 79, 81, 100, 102, 103, 107, 108, 110, 114, 116, 117, 122, 124, 127, 129, 131, 132, 133, 134, 135, 137], "thank": [69, 125], "that_particular_class": 133, "that_particular_class_men": 133, "thei": [9, 10, 12, 13, 17, 19, 21, 24, 26, 27, 28, 29, 30, 31, 43, 45, 47, 49, 50, 51, 53, 54, 55, 56, 57, 59, 60, 63, 64, 65, 66, 67, 69, 70, 71, 73, 76, 77, 81, 83, 87, 101, 103, 107, 112, 116, 121, 122, 124, 125, 128, 130, 131, 132, 133, 134, 135, 136, 137], "theirs": [10, 20], "them": [6, 9, 11, 26, 27, 28, 29, 30, 31, 41, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 57, 65, 69, 70, 71, 76, 77, 78, 79, 90, 104, 107, 109, 121, 122, 124, 126, 127, 129, 130, 132, 135, 137, 138, 145], "theme": [122, 124], "themselv": [14, 144], "theoret": 9, "theori": [10, 131, 134], "therefor": [13, 14, 27, 73, 76], "thermodynam": 13, "thi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 97, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 145], "thick": [122, 132, 133], "thicken": 122, "thin": 132, "thing": [0, 6, 10, 12, 17, 22, 24, 27, 32, 44, 55, 64, 71, 77, 78, 81, 84, 101, 104, 107, 123, 124, 125, 131, 137, 142, 145], "think": [39, 65, 76, 77, 101, 122, 125, 131, 133, 134], "third": [6, 27, 34, 55, 58, 67, 69, 78, 97, 104, 107, 110, 125, 131, 133], "thirti": 27, "this_is_a_long_vari": 63, "thise": 130, "those": [6, 17, 41, 50, 54, 55, 56, 60, 71, 76, 77, 83, 87, 105, 122, 124, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137], "though": [27, 46, 50, 59, 78, 103, 107, 108, 112, 121, 122, 123, 124, 130, 132, 133, 134, 135, 136, 137], "thought": [17, 124, 130, 131, 132, 133], "thousand": 13, "thread": [40, 41, 55], "threat": 121, "threat_level": 121, "threaten": 121, "three": [13, 14, 15, 17, 22, 23, 27, 28, 29, 32, 34, 43, 51, 52, 65, 68, 69, 71, 77, 78, 81, 107, 110, 113, 114, 115, 121, 125, 129, 130, 131, 135, 136, 137, 138], "thresh": [107, 113], "thrice": 131, "throh": 118, "through": [10, 22, 23, 24, 26, 32, 46, 52, 53, 62, 79, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 134, 135, 137, 138, 144, 145], "throughout": [64, 123, 125, 129, 136], "throw": [6, 46, 50, 73, 108, 110, 111, 114, 116], "thu": [13, 22, 23, 27, 40, 46, 64, 73, 76, 81, 124, 125, 126, 131, 132, 133, 135, 136, 137, 138], "thumb": [130, 133], "thundurusincarn": 118, "thundurustherian": 118, "thur": [130, 133], "thursdai": 131, "ti": [43, 125], "tick": [122, 127, 128, 134, 136, 137], "ticket": 133, "ticklabel_format": 132, "tickmark": 97, "tidi": [125, 129, 130, 134], "tight": 145, "tightli": 126, "tile": 103, "till": [22, 23, 24, 43, 67, 108, 111, 114, 117, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137], "tim": 121, "timburr": 118, "time": [6, 9, 10, 12, 17, 21, 22, 23, 24, 26, 27, 29, 36, 50, 53, 54, 55, 63, 64, 65, 71, 73, 77, 78, 79, 81, 97, 103, 107, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 144, 145], "time_left_for_newyear": 38, "time_str": 40, "timedelta": 38, "timedelta64": 105, "timepoint": 135, "times3": 11, "times5": 11, "timeseri": 140, "timestamp": [4, 42], "timplay": 6, "ting": 14, "tini": 132, "tip": [14, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137], "tire": 129, "tirtouga": 118, "titan": [121, 123, 131, 135, 137], "titl": [20, 27, 97, 98, 125, 128, 137, 138], "tivat": 14, "tk": 6, "tkinter": 55, "tlc": 135, "tm_hour": 40, "tm_isdst": 40, "tm_mdai": 40, "tm_min": 40, "tm_mon": 40, "tm_sec": 40, "tm_wdai": 40, "tm_ydai": 40, "tm_year": 40, "tmp": 44, "to_csv": [107, 118, 119], "to_dict": 107, "to_excel": [107, 118], "to_fahreheit": 13, "to_fahrenheit": 13, "to_json": 107, "to_sql": 107, "todai": [38, 39, 123, 126, 130, 131, 132, 133, 134, 135, 136], "togekiss": 118, "togepi": 118, "toget": 118, "togeth": [10, 27, 65, 73, 79, 103, 126, 129, 131, 135], "toi": 121, "told": [24, 126], "tolist": [97, 98, 132], "tomato": [46, 49, 70], "ton": [27, 55], "too": [12, 45, 47, 70, 71, 130], "took": 12, "tool": [14, 59, 83, 87, 97, 98, 100, 107, 118, 119, 126, 135, 136, 137, 144, 145], "toolkit": 6, "tooth": 98, "toothpastesalesdata": 98, "top": [0, 65, 84, 100, 102, 103, 107, 122, 124, 125, 126, 131, 132, 133, 135, 137, 142], "topbar": 133, "topic": [27, 52, 98, 119, 123, 124, 127, 129, 131, 132, 133, 135, 136, 137, 145], "toprow": 110, "torchic": 118, "torkoal": 118, "tornadusincarn": 118, "tornadustherian": 118, "torterra": 118, "total": [22, 23, 26, 34, 49, 52, 54, 65, 67, 77, 79, 101, 107, 118, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137], "total_bil": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "total_expens": 76, "total_incom": 76, "total_profit": 98, "total_second": 34, "total_stud": 132, "total_women_per_class": 133, "totodil": 118, "touch": [104, 126, 137, 145], "toward": 145, "town": [131, 133], "toxicroak": 118, "toyotadf": 119, "tpython": 27, "trace": [103, 125, 135], "traceback": [9, 10, 11, 12, 13, 15, 23, 27, 28, 29, 30, 31, 36, 41, 43, 45, 46, 47, 50, 51, 52, 53, 55, 64, 66, 67, 68, 69, 70, 76, 77, 78, 79, 81, 102, 111, 114, 116, 130, 135], "track": [10, 131, 133, 135], "tradit": 90, "trail": [26, 27, 29], "train": 90, "tranform": 27, "tranquil": 118, "transax": 136, "transcript": 43, "transfer": [10, 22, 23, 24, 144], "transform": [8, 73, 124, 144], "translat": [45, 73, 77, 124], "transluc": 135, "transpar": [124, 126, 130], "transpos": [8, 32, 100, 103, 108, 109, 115, 129], "transposed_row": 32, "trapinch": 118, "travel": [69, 133], "travers": 22, "treat": [0, 11, 14, 45, 50, 51, 76, 84, 103, 142], "tree": 43, "treecko": 118, "trelli": [136, 137], "trend": [125, 129, 131, 135], "treven": 118, "tri": [12, 45, 69, 76, 79, 101, 114, 123, 126, 131, 132, 135], "triangl": [22, 70, 78, 136], "triangular": 56, "trick": [100, 102, 123, 130], "tricki": 29, "trigger": 24, "trignometr": 135, "trigonometri": 26, "trip": 135, "trip_dur": 135, "tripl": [27, 49, 59, 64, 66, 67], "triu_indices_from": 136, "tropiu": 118, "trubbish": 118, "truck": 78, "truck_info": 78, "true": [9, 10, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 31, 41, 43, 45, 47, 49, 54, 55, 57, 63, 64, 65, 66, 67, 69, 70, 77, 78, 79, 97, 98, 101, 102, 104, 107, 111, 112, 113, 114, 116, 117, 118, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139], "true_divid": 103, "trump": 43, "trunc": [55, 57, 105], "truncat": [26, 43, 57, 67, 68, 70, 125], "trustworthi": 135, "truth": 70, "truthvalu": 64, "try": [9, 11, 14, 18, 19, 20, 24, 27, 28, 29, 30, 32, 34, 43, 45, 47, 49, 50, 52, 63, 64, 65, 67, 68, 70, 71, 76, 77, 79, 81, 103, 108, 111, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "tryton": 6, "tsplot": 135, "tsv": 107, "tt": 36, "ttopic": 27, "tue": 35, "tuft": 136, "tukei": 135, "tune": [111, 135, 145], "tupl": [4, 6, 9, 10, 11, 12, 14, 15, 27, 31, 32, 33, 40, 43, 49, 52, 55, 64, 66, 68, 69, 70, 77, 78, 100, 101, 104, 108, 109, 119, 124, 126], "tuple1": 67, "tuple_1": 77, "tupleliter": 64, "tuppl": 101, "turn": [9, 26, 43, 46, 70, 73, 79, 129, 131, 132, 135, 136, 137], "turtwig": 118, "tutori": [4, 9, 12, 19, 27, 43, 65, 71, 78, 79, 100, 119, 123, 135], "tweak": [122, 124, 129, 134, 137], "twelv": 14, "twice": 78, "twilight": 124, "two": [0, 6, 9, 12, 13, 14, 15, 17, 19, 20, 22, 23, 24, 26, 28, 29, 30, 31, 32, 36, 41, 43, 45, 46, 47, 50, 52, 53, 55, 58, 59, 60, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 81, 83, 84, 87, 101, 102, 103, 107, 109, 110, 111, 114, 115, 117, 121, 122, 123, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 142], "two_power_of_f": 32, "tworld": 62, "txt": [14, 44, 45, 46, 104, 118], "ty": 27, "tympol": 118, "tynamo": 118, "typ": 30, "type": [6, 9, 11, 14, 15, 17, 22, 23, 24, 27, 31, 32, 34, 36, 38, 39, 45, 46, 50, 52, 53, 55, 62, 63, 64, 65, 70, 71, 73, 75, 76, 79, 81, 97, 100, 102, 103, 104, 107, 114, 115, 118, 119, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "type1": 118, "typecast": 68, "typeerror": [15, 27, 28, 30, 31, 46, 52, 55, 67, 68, 79], "typeobject": 64, "typhlos": 118, "typic": [24, 79, 103, 107, 132, 135], "typo": 45, "tyranitar": 118, "tyranitarmega": 118, "tyrantrum": 118, "tyrogu": 118, "tyrunt": 118, "tz_london": [34, 38], "tz_ny": [34, 38], "tzinfo": 34, "tzname": 36, "u": [9, 11, 12, 13, 14, 15, 17, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 34, 35, 36, 43, 44, 45, 46, 49, 52, 55, 60, 62, 66, 69, 71, 73, 76, 77, 78, 79, 81, 97, 98, 103, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "u00dc": 66, "u00dcnic": 66, "u00f6": 66, "u00f6d": 66, "ubgxofi7uxswaykn": 55, "ui": 6, "uk": 34, "ukool": 27, "ular": 14, "ultim": 134, "umbreon": 118, "umpteen": 130, "unari": [64, 70], "unarm": 121, "unauthor": 76, "unavail": 137, "unawar": 135, "unbound": 118, "unboundlocalerror": [45, 50, 51], "uncertainti": 135, "unchang": [31, 66], "unchart": 126, "unclear": 107, "uncom": 31, "uncommon": 131, "und": 14, "undefin": 77, "under": [22, 24, 26, 34, 45, 57, 60, 67, 97, 117, 131, 132, 135, 136], "underli": [43, 57, 71, 73, 100, 107, 114, 124, 126, 129, 130, 132, 133, 134, 135, 137, 138], "undermin": 136, "underscor": [13, 55, 63, 65, 76, 77, 78, 79], "understand": [0, 4, 5, 8, 11, 12, 14, 17, 22, 23, 24, 26, 32, 59, 60, 64, 71, 73, 76, 81, 84, 90, 97, 98, 107, 108, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 142, 144, 145], "understood": 73, "undetermin": 121, "undoubtedli": 122, "unexpect": [24, 46], "unfamiliar": 124, "unfez": 118, "unhandl": 45, "unhash": 31, "unicod": [14, 27, 45, 64, 65, 67], "unicodedecodeerror": 45, "unicodeencodeerror": 45, "unicodeerror": 45, "unicodetranslateerror": 45, "unifi": 66, "uniform": [27, 55, 56, 101, 104, 105, 135, 136], "uniform_data": 138, "unind": [18, 64], "unint": 98, "union": [22, 67], "uniqu": [22, 30, 31, 49, 55, 56, 67, 71, 81, 107, 109, 116, 135, 139], "unit": [43, 97, 98, 121, 125, 126, 132, 133, 134, 135, 137], "univari": [128, 130, 131, 134, 136, 137], "univers": [69, 132, 133], "university_nam": 132, "unix": [34, 39, 40], "unknowingli": 77, "unknown": [20, 45, 111, 114, 116, 121, 131, 135], "unknowncol": 114, "unless": [14, 21, 49, 64, 122, 125, 135], "unlik": [10, 28, 29, 43, 77, 101, 103, 107, 110, 125, 135], "unlimit": 46, "unnam": [97, 119, 134], "unnecessari": 13, "unobserv": 134, "unord": [22, 30, 31, 67, 107], "unorderd": 31, "unown": 118, "unpack": [27, 28, 29], "unpackbit": 105, "unpacking_person_info": 46, "unpickl": 59, "unravel_index": 105, "unreferenc": [43, 77], "unruffl": 132, "unsuccess": 14, "unsupervis": [144, 145], "unsupport": [45, 68, 79], "unsur": [14, 15], "until": [9, 22, 23, 24, 43, 46, 47, 52, 53, 69, 103, 116], "unusu": [11, 26], "uolp": 27, "up": [6, 9, 13, 17, 22, 23, 24, 26, 43, 46, 49, 50, 52, 53, 60, 62, 64, 67, 68, 69, 73, 100, 107, 118, 123, 124, 125, 126, 128, 131, 133, 136, 137, 145], "upcom": [121, 123, 129, 137], "updat": [13, 23, 28, 31, 51, 107, 110, 111, 112, 113, 114, 116, 117, 121, 123, 127, 130, 136], "upfront": 73, "upon": [9, 24, 47, 78, 79, 81, 121, 130, 135, 136, 137, 145], "upper": [12, 14, 27, 69, 98, 114, 123, 131, 132, 135, 136], "uppercas": [12, 14, 27, 28, 55, 63, 65, 70], "uppercase_decor": 12, "uptil": 67, "upto": [130, 135, 137], "upward": 134, "urg": 127, "url": [107, 128], "ursar": 118, "us": [0, 1, 4, 9, 12, 15, 17, 18, 19, 20, 21, 24, 27, 30, 31, 32, 36, 37, 39, 40, 41, 43, 44, 45, 47, 49, 50, 52, 53, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 77, 78, 79, 84, 97, 101, 102, 103, 104, 107, 112, 113, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144], "usa": [12, 97], "usabl": [13, 59], "usag": [5, 13, 54, 73, 107, 108, 124, 125, 132, 137], "usd": [97, 132, 137], "useabl": 6, "user": [4, 6, 9, 12, 17, 19, 20, 22, 23, 26, 30, 32, 44, 45, 46, 48, 49, 52, 55, 61, 64, 65, 68, 70, 79, 105, 111, 114, 119], "user_check": 20, "user_id_gen_by_us": 55, "userwarn": 121, "usual": [12, 23, 24, 32, 46, 49, 58, 65, 67, 73, 78, 101, 107, 113, 125, 131], "utc": [34, 35, 36, 39, 40], "utf": [43, 46], "util": [32, 114, 133, 137], "utmost": [124, 131, 135, 136], "uxi": 118, "v": [6, 8, 22, 27, 30, 43, 46, 65, 75, 103, 125, 127, 129, 130, 134, 140], "v0": 122, "v1": [79, 104, 137], "v2": [79, 104, 137], "v3": 6, "v_1": 137, "v_2": 137, "va": [123, 133], "vaccin": 22, "vagu": 125, "vairabl": 69, "val": [13, 22, 24], "valid": [14, 27, 29, 49, 63, 64, 71, 81, 107, 124], "valu": [6, 8, 9, 10, 12, 13, 14, 15, 18, 19, 21, 22, 23, 26, 27, 31, 32, 34, 40, 43, 45, 46, 47, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 66, 67, 68, 70, 71, 77, 97, 100, 101, 102, 103, 104, 107, 109, 111, 112, 114, 116, 117, 118, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138], "value1": 28, "value2": 28, "value3": 28, "value_count": [97, 107, 119], "value_var": 137, "valueerror": [13, 46, 68, 69, 81, 102, 108, 116, 129], "valuen": 28, "valuetoolargeerror": 47, "valuetoosmallerror": 47, "vanillish": 118, "vanillit": 118, "vanillux": 118, "vaporeon": 118, "var": [46, 52, 76, 97, 127, 136], "var_1": 63, "var_nam": [129, 130, 131], "var_scope_test": 50, "vari": [46, 63, 76, 107, 122, 124, 129, 137], "variabel": 138, "variabl": [4, 6, 10, 13, 14, 15, 18, 19, 20, 22, 23, 24, 26, 27, 28, 32, 34, 35, 37, 39, 45, 46, 49, 54, 55, 58, 59, 63, 66, 67, 68, 69, 70, 75, 77, 78, 81, 111, 113, 114, 116, 117, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137], "variable1": 63, "varianc": [76, 101, 104, 125], "variat": [2, 19, 20, 22, 83, 87, 124, 126, 129, 130, 131, 132, 133, 134, 135, 137], "varieti": [6, 27, 129, 133, 136, 137], "variou": [6, 12, 14, 22, 23, 26, 27, 28, 29, 30, 32, 43, 55, 59, 66, 67, 70, 71, 100, 107, 112, 115, 122, 123, 126, 127, 133, 136, 137, 138, 145], "variti": 129, "vartupl": 52, "vast": [100, 107, 110], "ve": [14, 46, 107, 121, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137], "vector": [8, 79, 103, 104, 129, 133, 135], "veg": 46, "veget": [29, 46], "vehicl": [78, 107, 135], "vehicle_info": 78, "vendor": 135, "vendor_id": 135, "veniped": 118, "venomoth": 118, "venonat": 118, "venusaur": 118, "venusaurmega": 118, "venv": 6, "verbos": 65, "verdana": 133, "veri": [4, 6, 10, 17, 23, 27, 28, 30, 31, 32, 43, 54, 62, 64, 67, 73, 81, 90, 100, 103, 104, 107, 108, 110, 111, 113, 121, 123, 124, 125, 127, 128, 129, 131, 132, 133, 135, 136, 137], "veriabl": 50, "verifi": 78, "verify_integr": 116, "versatil": [27, 28, 136], "versicolor": [121, 129], "version": [6, 41, 43, 54, 55, 56, 70, 103, 115, 123, 124, 128, 136], "vert": 130, "vertiac": 132, "vertic": [14, 27, 81, 103, 104, 129, 130, 131, 132, 133, 134, 137], "vespiquen": 118, "via": [13, 24, 78, 135], "vibrava": 118, "victini": 118, "victreebel": 118, "video": [6, 137, 145], "view": [45, 78, 102, 105, 110, 121, 123, 125, 133, 134, 138], "viewer": 124, "vigoroth": 118, "vijai": 77, "vileplum": 118, "violin": [124, 131, 133, 134, 135, 140], "violinplot": [129, 130, 132], "virginica": [121, 129], "viridi": [124, 127, 133], "viridian": 124, "viridis_r": 127, "virizion": 118, "virtual": 131, "virtualenv": 6, "visibl": [50, 55, 69, 77, 125, 132, 135, 136, 137], "visibli": 123, "visit": [4, 9, 13, 14, 27, 34, 40, 41, 45, 47, 49, 50, 56, 57, 59, 64, 78, 79, 107, 125], "visual": [27, 28, 78, 90, 97, 98, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 145], "visuali": 125, "visualizaion": 137, "visualstudio": 6, "vividli": 135, "vivillon": 118, "vlag": 127, "vlag_r": 127, "vmax": [130, 138], "vmin": [130, 138], "volatil": 43, "volbeat": 118, "volcanion": 118, "volcarona": 118, "volkswagen": [107, 108, 119], "voltorb": 118, "volum": 44, "volvo": [107, 108, 119], "vonmis": 56, "vonmisesvari": 56, "vowel": [28, 29, 65, 66], "vpython": 6, "vscode": 6, "vstack": 100, "vullabi": 118, "vulpix": 118, "vv": 103, "w": [22, 23, 24, 27, 28, 29, 31, 35, 36, 43, 46, 103, 121, 124, 136, 137], "wa": [9, 10, 11, 12, 13, 14, 19, 22, 24, 27, 32, 43, 45, 46, 50, 55, 62, 65, 69, 78, 79, 81, 102, 103, 108, 121, 122, 123, 125, 131, 133, 135, 136, 137], "wage": 135, "wagon": [107, 108, 119], "wai": [4, 6, 9, 10, 12, 13, 17, 21, 22, 23, 26, 27, 29, 30, 31, 32, 34, 37, 38, 43, 46, 47, 52, 55, 58, 60, 64, 67, 69, 70, 71, 79, 81, 97, 101, 102, 107, 108, 109, 110, 111, 115, 121, 122, 123, 124, 125, 126, 127, 129, 131, 132, 133, 135, 136, 138, 145], "wailmer": 118, "wailord": 118, "wait": [19, 41], "walk": 134, "walrein": 118, "want": [7, 10, 12, 13, 14, 17, 19, 21, 22, 23, 24, 26, 27, 28, 43, 44, 46, 50, 55, 58, 62, 64, 65, 69, 71, 76, 77, 78, 79, 81, 82, 86, 97, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 123, 124, 125, 127, 130, 131, 132, 135, 136, 137, 145], "warm": [78, 124], "warn": [73, 103, 115, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "wartortl": 118, "wash": 98, "washington": 121, "wast": 145, "wat": 127, "watch": [22, 145], "watchog": 118, "water": 118, "watev": 27, "watson": 22, "wave": [122, 137], "wb": 43, "we": [4, 8, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 76, 77, 78, 79, 81, 90, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145], "weak": [45, 59], "weapon": [121, 135], "wear": 121, "weavil": 118, "web": [4, 6, 73, 124], "web_tech": 27, "websit": [6, 65, 124], "weedl": 118, "week": [34, 35, 36, 38, 49, 130, 132, 133], "weekdai": [35, 36], "weekend": [131, 133], "weekli": [70, 97], "weep": 78, "weepinbel": 118, "weez": 118, "weibul": 56, "weibullvari": 56, "weight": [49, 97, 111, 123, 127, 133, 135], "weight_of_object": 49, "weird": 107, "weirder": 12, "welcom": [12, 27, 43, 49, 55, 62, 76, 125, 130, 131, 132, 134, 135, 136, 137], "well": [6, 7, 11, 17, 19, 20, 22, 23, 24, 26, 27, 38, 44, 46, 54, 58, 64, 65, 70, 71, 76, 77, 78, 79, 82, 86, 107, 109, 110, 111, 114, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137], "went": 46, "were": [14, 15, 24, 43, 45, 46, 52, 69, 70, 78, 81, 103, 121, 129, 134], "what": [4, 10, 11, 12, 13, 14, 15, 18, 24, 26, 32, 39, 46, 50, 56, 59, 63, 64, 70, 77, 79, 98, 119, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 144], "whatev": [62, 77, 79, 125], "whatsoev": 137, "wheel": [107, 108, 118, 119, 135], "when": [0, 9, 10, 12, 13, 14, 15, 17, 18, 19, 20, 21, 22, 24, 27, 29, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 57, 59, 60, 63, 64, 65, 66, 67, 68, 69, 71, 73, 76, 77, 78, 79, 81, 83, 84, 87, 97, 98, 101, 103, 104, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 142], "whenev": [13, 23, 45, 59, 77, 81, 111, 114, 116, 117, 132, 133], "where": [6, 9, 11, 12, 13, 21, 23, 24, 26, 27, 28, 29, 32, 40, 43, 45, 46, 49, 50, 51, 55, 67, 68, 69, 70, 71, 73, 77, 78, 81, 102, 103, 105, 107, 109, 110, 111, 112, 114, 115, 116, 117, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "wherea": [14, 22, 26, 29, 34, 35, 50, 73, 76, 81, 83, 87, 108, 115, 116, 117, 122, 126, 135, 136], "whether": [2, 17, 18, 19, 24, 43, 46, 47, 51, 59, 70, 78, 83, 87, 102, 107, 111, 112, 113, 114, 116, 117, 125, 126, 127, 134, 135], "whi": [130, 131], "which": [0, 5, 6, 9, 10, 11, 12, 13, 14, 15, 20, 22, 24, 26, 27, 29, 30, 31, 32, 37, 39, 41, 43, 44, 46, 47, 49, 50, 54, 55, 60, 64, 65, 66, 67, 68, 69, 71, 73, 76, 77, 78, 79, 81, 84, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 114, 115, 116, 117, 119, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 142, 145], "whichev": [126, 132], "while": [4, 9, 10, 13, 15, 17, 25, 26, 27, 30, 31, 41, 43, 45, 47, 49, 52, 54, 55, 58, 63, 64, 68, 70, 71, 73, 76, 77, 78, 81, 102, 108, 109, 113, 115, 116, 121, 124, 125, 126, 127, 129, 131, 132, 133, 134, 135, 136, 137], "whilst": 136, "whimsicott": 118, "whirliped": 118, "whiscash": 118, "whisker": [130, 131, 133, 135], "whiskerprop": 129, "whismur": 118, "white": [17, 24, 27, 121, 122, 132, 133], "whitegrid": [122, 124, 125, 126, 127, 130, 132, 133, 135, 137], "whitespac": [22, 27, 64], "who": [19, 27, 105, 121, 131, 133, 135, 145], "whoisthi": [76, 78], "whole": [6, 14, 24, 27, 41, 49, 55, 70, 107, 108, 110], "whoop": 12, "whose": [50, 54, 65, 77, 111, 114], "why": [10, 12, 13, 19, 26, 27, 45, 46, 59, 64, 103, 121, 129, 130, 131, 133], "wichita": 121, "wickham": 125, "wide": [6, 69, 104, 107, 114, 129, 130, 133], "wide_to_long": 129, "widen": 137, "wider": [132, 135], "widespread": 108, "width": [27, 70, 76, 98, 121, 126, 127, 129, 131, 132, 133, 135, 137], "width_ratio": 137, "wigglytuff": 118, "wiki": 128, "wikipedia": 128, "wilder": 135, "win": 137, "win32": [6, 55], "window": [6, 43, 44, 62, 77, 121, 124, 135], "winerror": [43, 55], "wingul": 118, "winre_backup_partit": 44, "winreag": 44, "winter": [20, 49, 127], "winter_r": [127, 136], "wirh": 118, "wise": [98, 100, 107, 115, 118, 124, 127, 135], "wish": [13, 14, 24, 27, 49, 69, 124, 126, 131, 133, 135, 136, 137], "wistia": 127, "wistia_r": 127, "within": [6, 9, 14, 23, 24, 29, 43, 44, 49, 51, 58, 67, 76, 78, 104, 107, 121, 122, 123, 127, 129, 130, 131, 132, 133, 135, 137, 139], "without": [4, 9, 12, 18, 24, 27, 29, 31, 32, 35, 36, 43, 46, 51, 52, 54, 55, 58, 70, 71, 73, 76, 77, 78, 79, 103, 104, 111, 113, 116, 118, 121, 122, 123, 124, 129, 131, 132, 133, 135, 136, 137, 144], "wobbuffet": 118, "woman": [14, 131, 133], "won": [49, 78, 104, 107, 121, 122, 125, 129, 135, 137], "wonder": [34, 49, 135], "wont": 77, "woo": 76, "woobat": 118, "wooper": 118, "wor": 27, "word": [22, 24, 27, 31, 32, 43, 55, 63, 65, 70, 76, 77, 78, 125, 126, 133, 136], "work": [6, 7, 10, 11, 12, 14, 15, 22, 23, 24, 26, 28, 30, 32, 34, 43, 44, 46, 50, 53, 55, 60, 67, 69, 70, 73, 76, 77, 78, 79, 82, 86, 100, 102, 103, 107, 110, 114, 121, 122, 124, 125, 126, 127, 130, 132, 135, 136, 137, 145], "workabl": 145, "workbook": 135, "workflow": 137, "workload": 60, "workplac": 127, "works_for_al": 12, "world": [4, 5, 6, 19, 22, 27, 45, 49, 53, 55, 59, 65, 67, 70, 71, 75, 76, 77, 107, 122, 125, 130, 131, 135, 144], "world66": 27, "wormadampl": 118, "wormadamsandi": 118, "wormadamtrash": 118, "worri": [65, 128, 137], "worth": [129, 130, 134], "would": [0, 5, 6, 9, 11, 12, 13, 15, 17, 22, 24, 32, 43, 44, 45, 46, 52, 53, 55, 58, 60, 63, 64, 65, 69, 77, 78, 81, 84, 90, 121, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 145], "wouldn": [125, 133, 136], "wrangl": [120, 127, 135], "wrap": [52, 76, 114], "wrapper": [12, 114, 125, 130, 136], "wrapper_accepting_paramet": 12, "writ": 55, "writabl": 43, "write": [0, 1, 2, 4, 6, 14, 20, 22, 23, 24, 27, 29, 32, 45, 49, 50, 51, 55, 59, 60, 64, 65, 66, 67, 69, 70, 73, 76, 78, 81, 83, 84, 87, 101, 107, 122, 123, 132, 141, 142, 143], "writeabl": 105, "writelin": 43, "written": [0, 6, 18, 26, 27, 32, 43, 46, 49, 55, 59, 60, 62, 63, 65, 66, 67, 73, 83, 84, 87, 142], "wrong": [19, 20, 46, 47], "wrote": [43, 62, 64], "wt": 129, "wtxmut": 129, "wurmpl": 118, "www": 6, "wxwidget": 6, "wynaut": 118, "x": [6, 10, 11, 12, 14, 15, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 32, 35, 36, 43, 49, 50, 51, 52, 54, 55, 57, 59, 64, 65, 66, 67, 69, 70, 77, 78, 79, 81, 97, 98, 100, 101, 102, 103, 104, 107, 108, 114, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "x1": [50, 70, 126], "x11": 124, "x2": [70, 97, 126], "x3": 70, "x45": 27, "x48": 27, "x58": 27, "x61": 27, "x86": 44, "x_axi": 128, "x_bin": 125, "x_ci": 125, "x_data": 129, "x_estim": 125, "x_jitter": 125, "x_max": 128, "x_med": 130, "x_min": 128, "x_partial": 125, "x_sum": 23, "x_var": [127, 136], "xatu": 118, "xavier": 132, "xaxi": 133, "xernea": 118, "xhh": 27, "xkcd": 124, "xkcd_palett": 124, "xkcd_rgb": [124, 130], "xl": 43, "xlabel": [97, 98, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135], "xlim": [123, 137], "xlist": 132, "xlrd": 43, "xlsx": 118, "xmax": 129, "xmin": 129, "xml": 6, "xml_exampl": 43, "xor": [70, 79], "xtick": [97, 98, 133], "xticklabel": 137, "xy": [133, 136], "xycoord": [123, 136], "xytext": 133, "xyz": [22, 29, 44, 46, 69], "xyzvalu": 69, "xz": 14, "y": [10, 14, 15, 20, 21, 22, 26, 27, 28, 29, 32, 34, 35, 36, 37, 39, 40, 49, 50, 52, 54, 55, 57, 65, 66, 67, 69, 70, 77, 78, 79, 81, 97, 98, 100, 101, 103, 104, 107, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "y1": [70, 126], "y2": [70, 126], "y3": 70, "y_data": 129, "y_jitter": 125, "y_med": 130, "y_partial": 125, "y_var": [127, 136], "yamask": 118, "yanma": 118, "yanmega": 118, "yaxi": 133, "ycarc5yrrupyg00": 55, "yd7efwnqkns7qxat": 55, "ye": [10, 12, 24, 30, 45, 108, 111, 114, 125, 131, 133, 136, 137], "year": [19, 22, 27, 35, 36, 37, 38, 39, 40, 46, 59, 70, 72, 76, 81, 97, 133, 137, 138], "year2021": 65, "year_2021": 65, "year_born": 46, "yellow": 135, "yesmail": 15, "yet": [6, 24, 133], "yield": [9, 10, 63, 102, 103, 122], "yj": [26, 67], "ylabel": [97, 98, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 135], "ylgn": 127, "ylgn_r": 127, "ylgnbu": 127, "ylgnbu_r": 127, "ylim": [123, 128, 136, 137], "ylist": 132, "ylorbr": 127, "ylorbr_r": 127, "ylorrd": 127, "ylorrd_r": 127, "ymax": 129, "ymin": 129, "yo": [14, 123], "you": [0, 1, 2, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 22, 23, 24, 26, 27, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 77, 78, 79, 81, 82, 83, 84, 86, 87, 90, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 114, 115, 116, 117, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 145], "your": [0, 2, 5, 7, 9, 11, 14, 17, 18, 19, 24, 27, 28, 29, 38, 43, 44, 46, 47, 49, 55, 57, 58, 62, 63, 64, 65, 69, 70, 73, 76, 77, 82, 83, 84, 86, 87, 90, 97, 100, 103, 107, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 142, 145], "your_ag": 19, "yourself": [32, 34, 49, 65, 69, 76, 135], "ytho": 27, "ython": 14, "ytick": [97, 98, 128, 136], "yveltal": 118, "yy": [34, 37], "yyyi": [34, 36], "z": [15, 22, 27, 28, 29, 35, 36, 52, 63, 65, 70, 78, 101, 107, 118, 136], "z_score": 139, "za": 27, "zangoos": 118, "zapdo": 118, "zebstrika": 118, "zekrom": 118, "zen": [71, 81], "zero": [9, 12, 13, 18, 19, 20, 21, 23, 24, 26, 27, 32, 35, 36, 45, 46, 66, 68, 70, 77, 81, 100, 101, 103, 104, 111, 114, 118, 133, 136], "zerodivisionerror": [12, 45, 46], "zfill": 27, "zigzagoon": 118, "zip": [22, 55, 67, 101, 109, 115, 130, 133, 136, 139], "zipcod": [20, 22], "zone": [35, 36, 38], "zoroark": 118, "zorua": 118, "zubat": 118, "zurich": 111, "zweilou": 118, "zxoyh": 55, "zygarde50": 118, "\u00f6": 66, "\u00fc": 66, "\u00fcnic\u00f6d": 66, "\u03c0": 49}, "titles": ["Notebooks with MyST Markdown", "Here\u2019s my sample title", "Markdown Files", "Here\u2019s my sample title", "Learn Python Programming", "Mathematics for Machine Learning", "Getting Started with Python", "Content with notebooks", "Linear Algebra", "Python Iterators", "Python Python Generators", "Python Closures", "Python Decorators", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator", "Python RegEx", "Python <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code></strong>", "Python Advanced Topics", "Python Flow-Control (Decision-Making) Statements", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-else</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-elif-else</span></code> statement", "Python Nested <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Loops in Python", "Loops in Python", "Control Statements in Python", "Python Flow Control", "Python Numbers, Type Conversion and Mathematics", "Python Strings", "Python List", "Python Tuple", "Python Dictionary", "Python Sets", "Python List Comprehension", "Python Data Types", "Python datetime", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strftime()</span></code>", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strptime()</span></code>", "How to get current date and time in Python?", "Python Get Current time", "Python timestamp to datetime and vice-versa", "Python time Module", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">sleep()</span></code>", "Python Date &amp; Time Module", "Python File I/O", "Python Directory and Files Management", "Python Errors and Built-in Exceptions", "Python Exceptions Handling Using <code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">except</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">finally</span></code> statement", "Python Custom Exceptions", "Python Files", "Python Functions", "Python Global, Local and Nonlocal variables", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code> Keyword", "Function Argument and Parameter", "Python Recursion", "Python Anonymous/<strong><code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span></code></strong> Function", "Python Modules", "Python Random Module", "Python Mathematical Functions", "Python Package", "Python Docstrings", "Python User-defined Functions", "Python Functions", "Python Hello, World", "Python Keywords and Identifiers", "Python Statement, Indentation and Comments", "Python Variables and Constants", "Python Literals", "Python Data Types", "Python Type Conversion and Type Casting", "Python Input, Output and Import", "Python Operators", "Python Namespace and Scope", "Data structures and algorithms", "Differences Between Interpreter and Compiler", "&lt;no title&gt;", "Python Introduction", "Python OOPs Concepts", "Python  Classes and Objects", "Python Inheritance", "Python Operator Overloading", "Python Object Class", "self in Python, Demystified", "Content with notebooks", "Markdown Files", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "Content with notebooks", "Markdown Files", "Here\u2019s my sample title", "Introduction to HuggingFace", "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80", "Table of Contents", "Langchain modules", "LangGraphs", "LangServe", "LangSmith", "Langchain expression language", "Matplotlib", "Python Matplotlib", "Python Matplotlib", "Python NumPy", "Python NumPy Array:", "Array indexing", "Array math", "Arrays reorganizing", "Python NumPy Exercises", "Python Numpy Module", "Python Pandas", "Create Pandas DataFrame from Python Dictionary", "Create Pandas DataFrame from Python List", "Pandas DataFrame head, tail, at, iat", "Drop columns in pandas DataFrame", "Drop duplicates in pandas DataFrame", "Drop columns with NA in pandas DataFrame", "Rename columns in Pandas DataFrame", "Convert Pandas DataFrame to Python dictionary", "Set index in pandas DataFrame", "Reset index in pandas DataFrame", "Python Pandas", "Python Pandas", "Python Pandas Module", "Loading Datasets in Seaborn", "Controlling Aesthetics of Seaborn Plots", "Matplotlib vs. Seaborn Plotting Code", "Seaborn Color Palettes", "LM Plot and Reg Plot", "Scatter Plot and Joint Plot", "Additional Regression Plots", "What is Distribution Plots?", "Seaborn: Categorical Data Plots", "Seaborn: Strip Plot", "Seaborn: Box Plot", "Seaborn: Violin Plot", "Bar Plot, Point Plot and Count plot", "Factor Plot", "Time Series &amp; LV Plot", "PairGrid", "FacetGrid", "What is heat map?", "What is cluster map?", "Python Seaborn", "Here\u2019s my sample title", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "AI/ML Learning Path", "Welcome to my technical diary \ud83e\udd2f"], "titleterms": {"": [1, 3, 14, 28, 30, 34, 35, 37, 62, 85, 88, 105, 119, 128, 141, 143], "0": [14, 105, 117], "1": [10, 12, 14, 20, 21, 22, 24, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 45, 46, 49, 55, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 91, 97, 98, 105, 111, 114, 117, 119, 128, 130, 133, 136], "10": [14, 34, 98, 105, 119], "100": 105, "100th": 105, "10x10": 105, "10x3": 105, "11": [14, 34, 105], "12": [34, 105], "13": [34, 105], "14": [34, 105], "15": [34, 105], "16": [34, 105], "16x16": 105, "17": 105, "18": 105, "19": 105, "1d": [102, 105], "2": [10, 12, 14, 20, 21, 22, 24, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 41, 43, 45, 49, 55, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 76, 91, 97, 98, 105, 119, 128, 133], "20": 105, "2016": 105, "21": 105, "22": 105, "23": 105, "24": 105, "25": 105, "26": 105, "27": 105, "28": 105, "29": 105, "2d": [102, 105], "2x2x2": 105, "3": [10, 12, 14, 20, 22, 24, 27, 28, 29, 31, 34, 35, 37, 38, 41, 43, 45, 49, 55, 59, 64, 65, 66, 67, 69, 70, 91, 97, 98, 105, 119, 128, 133], "30": 105, "31": 105, "32": 105, "33": 105, "34": 105, "35": 105, "36": 105, "37": 105, "38": 105, "39": 105, "3x3": 105, "3x4": 105, "4": [10, 14, 34, 38, 41, 43, 45, 59, 64, 67, 70, 98, 105, 119, 128], "40": 105, "41": 105, "42": 105, "43": 105, "44": 105, "45": 105, "46": 105, "47": 105, "48": 105, "49": 105, "4x4": 105, "5": [14, 34, 38, 45, 59, 67, 70, 98, 105, 119, 128], "50": 105, "51": 105, "52": 105, "53": 105, "54": 105, "55": 105, "56": 105, "57": 105, "58": 105, "59": 105, "5x2": 105, "6": [14, 34, 38, 45, 67, 70, 98, 105, 119], "60": 105, "61": 105, "62": 105, "63": 105, "64": 105, "65": 105, "66": 105, "67": 105, "68": 105, "69": 105, "6x3": 105, "6x6": 105, "7": [14, 34, 45, 98, 105, 119], "70": 105, "71": 105, "72": 105, "73": 105, "74": 105, "75": 105, "76": 105, "77": 105, "78": 105, "79": 105, "8": [14, 34, 45, 98, 105, 119], "80": 105, "81": 105, "82": 105, "83": 105, "84": 105, "85": 105, "86": 105, "87": 105, "88": 105, "89": 105, "8x8": 105, "9": [14, 34, 45, 98, 105, 119], "90": 105, "91": 105, "92": 105, "93": 105, "94": 105, "95": 105, "96": 105, "97": 105, "98": 105, "99": 105, "9_": 14, "9x9": 105, "A": [14, 105], "Be": [81, 102], "By": 14, "For": 32, "If": [28, 30], "In": [6, 28, 55, 77], "No": 46, "Of": 78, "One": [14, 19], "The": [13, 18, 19, 27, 28, 29, 30, 43, 46, 55, 108, 111, 112, 113, 114, 115, 116, 117], "These": 128, "To": [81, 107], "_": 14, "__doc__": 59, "__init__": 81, "__new__": 81, "about": 4, "accept": 69, "access": [22, 27, 28, 29, 30, 69, 77], "accumul": 105, "across": 51, "ad": [30, 100, 114], "add": [0, 28, 30, 84, 105, 142], "addit": 127, "advanc": [4, 16, 27, 104, 144], "advantag": [29, 53, 55, 60], "aesthet": 122, "aggreg": 118, "ai": 144, "algebra": 8, "algorithm": 72, "align": 69, "all": [27, 28, 30, 55, 98, 105, 111, 112, 113, 114, 119], "allow": 128, "alphabet": 14, "alphanumer": 14, "alreadi": 30, "also": [14, 101], "altern": 14, "amount": 118, "an": [0, 9, 14, 28, 30, 31, 46, 77, 84, 105, 142], "anatomi": [131, 132], "ani": [14, 28, 30, 49, 105], "anonym": 54, "anoth": 52, "anyth": 30, "appart": 27, "appear": 28, "append": 28, "appli": 107, "applic": 6, "appropri": 35, "ar": [14, 28, 30, 31, 54, 55, 58, 60, 105, 108, 113, 128], "arang": 104, "arbitrari": [52, 105], "area": [6, 105], "arg": 15, "argmax": 101, "argmin": 101, "argument": [28, 46, 49, 52, 69], "arithmat": 70, "arithmet": 70, "around": 105, "arrai": [100, 101, 102, 103, 104, 105], "asarrai": 104, "ascend": [28, 29, 30], "asctim": 40, "assign": [65, 70], "attribut": [43, 59, 77, 101, 105, 107], "attributeerror": 45, "audienc": 145, "avail": 30, "averag": [105, 119], "avoid": 81, "awai": 105, "axi": [105, 111, 114, 128], "b": [14, 22, 23, 105], "back": 12, "background": 129, "backslash": 14, "backward": 22, "bar": [97, 98, 133], "base": 105, "basic": [27, 52, 97, 100, 101], "bath": 98, "becom": 105, "befor": 14, "begin": 14, "beginn": 144, "below": 105, "better": 31, "between": [10, 34, 38, 73, 105], "binari": 105, "bincount": 105, "bit": [31, 105], "bitwis": 70, "blank": 62, "block": [7, 82, 86, 105], "boolean": [49, 66, 70, 102, 104, 105], "bootstrap": 105, "border": 105, "both": [69, 73, 105], "bottom": 110, "box": [97, 130, 131], "boxplot": 133, "brace": 14, "bracket": 14, "break": [22, 23, 24, 27, 62], "breath": 6, "broadcast": [103, 104], "build": [9, 105, 124], "built": [12, 27, 28, 29, 30, 31, 45, 55, 77], "byte": 105, "c": [22, 23, 105], "calcul": [6, 98], "call": 49, "can": [32, 81, 105], "car": 119, "care": [102, 105], "caret": 14, "cart": 14, "cartesian": 105, "case": 145, "cast": 68, "catch": [24, 46], "categor": [129, 130], "cauchi": 105, "cell": [0, 84, 142], "center": 105, "chain": 12, "chang": [27, 28, 29, 30, 43, 44, 65, 105, 108, 109, 117, 118], "charact": [14, 27, 66], "chart": [97, 98], "chdir": 44, "check": [6, 100, 105], "checkerboard": 105, "choic": 6, "cij": 105, "class": [4, 12, 13, 14, 19, 20, 22, 27, 28, 29, 30, 31, 32, 34, 39, 40, 43, 45, 46, 47, 49, 55, 59, 65, 70, 76, 77, 78, 80, 105], "claus": 46, "clean": [107, 119], "clear": [28, 30], "clock": 41, "close": 43, "closest": 105, "closur": [11, 12], "cluster": 139, "code": [6, 7, 35, 36, 62, 73, 82, 86, 123], "collect": 66, "color": [105, 124, 138], "column": [105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119], "combin": [32, 100, 105, 107], "comma": 65, "command": [62, 105], "comment": [59, 64], "common": [27, 98, 105], "compani": 119, "compar": [105, 111], "comparis": [55, 73], "comparison": [70, 79, 100], "compil": [28, 73], "complier": 29, "compon": 62, "compos": 105, "comprehens": [28, 30, 32], "comput": 105, "concaten": [27, 119], "concept": [6, 76, 145], "conclus": 91, "condit": [17, 32, 107, 118, 119], "confid": 105, "configur": 105, "consecut": 105, "consid": [14, 105], "constant": [55, 65], "construct": 105, "constructor": [76, 77, 81, 107, 108, 109], "consum": 105, "contain": [14, 105], "content": [7, 82, 86, 91], "contigu": 105, "continu": [22, 23, 24], "control": [4, 17, 22, 23, 24, 25, 122], "convent": 65, "convers": [26, 66, 68, 107], "convert": [29, 105, 115], "coordin": 105, "copi": [28, 30, 100, 102, 105], "core": 145, "correspond": 105, "count": [28, 119, 133], "cours": 145, "cover": 105, "cream": 98, "creat": [0, 10, 27, 28, 29, 30, 31, 32, 35, 41, 47, 55, 77, 84, 101, 105, 107, 108, 109, 117, 124, 142], "creation": 107, "csv": [43, 107, 119], "ctime": 40, "cubehelix": 124, "current": [34, 37, 38, 44], "custom": [9, 47, 107, 109], "d": [14, 105], "dai": 34, "data": [4, 26, 33, 67, 72, 77, 97, 98, 104, 107, 108, 109, 118, 119, 128, 129, 138, 144], "datafram": [107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "dataset": [119, 121, 128, 133, 136], "datatyp": [6, 31, 101], "date": [4, 34, 35, 37, 39, 42, 105], "datetim": [34, 35, 36, 38, 39], "decim": [14, 26, 55], "decis": 17, "declar": 65, "decor": [12, 13], "deep": 6, "default": [12, 14, 19, 20, 22, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 49, 52, 55, 65, 70, 76], "defin": [11, 47, 49, 60, 77, 81, 108, 112, 113, 114], "degre": 105, "del": 111, "delet": [27, 28, 29, 43, 77, 111], "demystifi": 81, "descend": [28, 29, 30], "describ": [105, 118], "desir": 118, "detail": 119, "determin": 103, "diagon": 105, "diari": 145, "dict": [28, 29, 30, 107, 108, 115], "dict2": 30, "dictionari": [22, 30, 43, 46, 67, 108, 115], "differ": [10, 18, 19, 31, 34, 37, 38, 62, 73, 105], "digit": [14, 41], "dimens": 105, "dimension": 105, "dir": 55, "direct": [83, 87], "directori": 44, "disadvantag": 53, "discuss": 128, "disk": 98, "displai": [69, 98, 107], "distanc": 105, "distplot": 128, "distribut": [105, 128], "dive": 6, "do": 11, "docstr": [49, 59, 64], "document": [104, 105], "doe": 30, "dollar": 14, "dot": 105, "down": 62, "draw": [105, 130, 136], "drop": [107, 111, 112, 113], "drop_dupl": 112, "dropna": 113, "dtype": 105, "duplic": [112, 113, 116], "durat": 34, "e": 105, "each": [98, 105, 119, 136], "easi": 10, "editor": 6, "effici": 10, "einsum": 105, "either": [28, 29, 30], "eleg": 28, "element": [28, 29, 30, 31, 100, 105], "elif": 20, "els": [19, 20, 22, 23, 24, 46], "empti": 31, "encapsul": 76, "end": [14, 28, 62], "engin": 145, "enjoi": 145, "enumer": [46, 105], "environ": 6, "equal": [30, 105], "equidist": 105, "equival": [14, 105], "error": [28, 45, 91, 111, 114], "escap": [14, 27], "essenti": 145, "etc": 28, "everi": 105, "everytim": 81, "exampl": [0, 14, 21, 22, 23, 24, 34, 35, 36, 37, 38, 39, 41, 47, 51, 55, 62, 65, 70, 78, 84, 97, 115, 142], "except": [24, 45, 46, 47, 110], "exclud": 105, "exercis": [12, 14, 19, 20, 22, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 49, 55, 65, 70, 76, 98, 105, 119], "exist": 105, "expens": 119, "expert": 144, "explicit": 68, "explicitli": 81, "export": [107, 118], "express": [10, 96, 105, 114], "extend": 28, "extens": 43, "extract": 105, "f": [14, 105], "face": 98, "facetgrid": 137, "facewash": 98, "factor": 134, "fals": [28, 30], "faq": [23, 24], "faster": 105, "featur": 91, "fifa": 97, "file": [2, 4, 43, 44, 48, 83, 87, 104, 105, 119], "fill": 105, "filter": [12, 54, 107, 118], "final": 46, "find": [105, 119], "findal": 14, "first": [1, 3, 28, 85, 88, 105, 110, 111, 112, 119, 141, 143], "five": 119, "fix": 105, "flatten": 104, "float": [26, 69, 105], "flow": [4, 17, 25], "follow": [98, 105, 119], "format": [27, 34, 35, 36, 37, 59, 69, 118, 138], "four": 105, "fraction": 26, "frame": 119, "frequent": 105, "from": [28, 29, 30, 31, 34, 35, 55, 58, 69, 104, 105, 107, 108, 109, 110, 111, 112, 113, 117, 119], "from_dict": 108, "fromkei": 30, "frozenset": 31, "function": [4, 10, 11, 12, 22, 27, 28, 29, 30, 31, 32, 49, 51, 52, 53, 54, 55, 57, 59, 60, 61, 69, 78, 79, 101, 103, 105, 108, 110, 111, 112, 113, 114, 115, 116, 117], "g": 105, "game": 105, "gaussian": 105, "gener": [10, 32, 104, 105, 124], "get": [6, 12, 28, 30, 34, 37, 38, 44, 69, 90, 98, 105, 107], "getcwd": 44, "getter": 13, "give": 30, "given": [28, 29, 30, 105, 119], "global": [50, 51], "gmtime": 40, "good": 145, "graph": 97, "group": [14, 130], "groupbi": [107, 118], "h": 105, "ha": 105, "hand": [18, 19], "handl": [34, 46, 91], "happen": 81, "hard": 98, "have": 11, "head": 110, "header": 115, "heat": 138, "heatmap": 138, "hello": [46, 62], "help": [59, 64], "here": [1, 3, 27, 81, 85, 88, 141, 143], "hide": 77, "hierarch": [78, 109], "higesht": 119, "high": 73, "higher": [11, 12], "histogram": [97, 98], "hold": 6, "hour": 34, "how": [4, 27, 28, 31, 35, 36, 37, 49, 55, 62, 100, 105, 110], "hstack": 104, "huggingfac": 89, "hybrid": 78, "i": [2, 14, 22, 23, 27, 28, 29, 30, 31, 43, 49, 51, 53, 57, 71, 73, 81, 83, 87, 104, 105, 107, 113, 128, 138, 139, 145], "iat": 110, "ident": [70, 105], "identifi": 63, "ignor": [27, 105], "iloc": 111, "imag": 105, "immut": 105, "implement": [10, 105, 128], "implicit": 68, "import": [55, 58, 69, 91, 100, 105, 107], "indent": 64, "index": [22, 28, 29, 102, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117], "indexerror": 45, "indic": 105, "infinit": [9, 10], "info": 107, "inform": 6, "inherit": [76, 78], "initi": 91, "inlin": 64, "inner": 105, "inplac": 105, "input": 69, "insert": [28, 107], "insid": [6, 22, 23, 34, 105], "inspect": [27, 107], "instal": [6, 91, 100], "instanc": [32, 76, 77], "instead": 26, "int": 105, "integ": [69, 102, 105], "interact": 124, "interleav": 105, "intermedi": 144, "intern": 81, "interpret": [73, 105], "intersect": 31, "interv": 105, "introduct": [4, 6, 15, 75, 89, 91], "iri": 136, "issubclass": 78, "item": [28, 29, 30, 105], "iter": [9, 17, 22, 23, 27, 28, 29, 30, 31, 105, 107], "itm": 30, "its": 69, "j": 105, "januari": 105, "java": 73, "join": 107, "joint": 126, "jointplot": 128, "journei": 6, "json": 43, "jupyt": 6, "just": 105, "justif": 69, "kdeplot": 128, "keep": [112, 116], "kei": [30, 32, 49, 68, 73, 76, 108, 115], "keyerror": 45, "keyword": [51, 52, 63, 78], "kwarg": 15, "label": [12, 14, 19, 20, 22, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 49, 55, 65, 70, 76, 110], "lambda": [32, 54, 114], "langchain": [91, 92, 96], "langgraph": 93, "langserv": 94, "langsmith": 95, "languag": [73, 96], "larg": [105, 118], "largest": 105, "last": [98, 105, 110, 111, 112, 119], "launch": 90, "lead": 114, "learn": [4, 5, 12, 144, 145], "least": 113, "len": [28, 29, 30], "length": [30, 52, 105, 108], "let": [62, 65, 128], "letter": 135, "level": [12, 14, 20, 22, 28, 29, 31, 39, 43, 46, 49, 55, 65, 73, 76, 114, 117, 144], "librari": [97, 101], "life": 105, "like": [76, 105], "line": [18, 19, 22, 59, 62, 64, 65, 69, 97, 98, 105], "linear": 8, "linspac": 104, "list": [6, 19, 20, 22, 23, 27, 28, 29, 30, 32, 35, 36, 44, 46, 49, 55, 67, 105, 108, 109, 114, 115, 116], "listdir": 44, "liter": 66, "lm": 125, "lmplot": 125, "load": [97, 101, 104, 118, 121], "loc": 111, "local": [35, 50], "localtim": 40, "logic": [20, 45, 70], "logspac": 104, "look": 76, "loop": [9, 10, 22, 23, 24, 32], "lv": 135, "machin": [5, 73, 144], "make": [17, 44, 105, 118, 119], "manag": [6, 44], "mani": 101, "manipul": 100, "map": [12, 54, 138, 139], "mark": 14, "markdown": [0, 2, 7, 82, 83, 84, 86, 87, 142], "mask": 104, "match": [14, 28], "math": [55, 57, 103], "mathemat": [5, 26, 57, 100, 103], "matplotlib": [4, 97, 98, 99, 123], "matric": [102, 105], "matrix": [103, 105], "max": [28, 29, 101], "maximum": [28, 29, 105], "mean": 105, "member": 78, "membership": [27, 28, 29, 30, 31, 70], "memori": [10, 105], "merg": 119, "metacharact": 14, "metadata": [0, 84, 107, 142], "method": [14, 27, 28, 29, 30, 31, 43, 76, 78, 101, 105], "microsecond": 34, "mileag": 119, "min": [28, 29, 101], "minimum": [29, 105], "minut": 34, "miscellan": 104, "miss": 113, "mkdir": 44, "mktime": 40, "ml": 144, "modif": 107, "modifi": [31, 76, 77], "modul": [4, 38, 40, 42, 51, 55, 56, 57, 58, 59, 92, 106, 120], "modulenotfounderror": 45, "month": [34, 98, 105], "more": [14, 27, 100], "most": [98, 105, 119], "mul": 105, "mulitpli": 105, "multi": [59, 64, 110, 111, 114, 116, 117], "multilevel": 78, "multilin": [69, 98], "multinomi": 105, "multipl": [46, 49, 55, 65, 69, 78, 103, 109, 111, 114, 116], "multipli": 105, "multithread": 41, "my": [1, 3, 85, 88, 141, 143, 145], "myst": [0, 2, 7, 82, 83, 84, 86, 87, 142], "n": [14, 105, 110, 111], "na": 113, "name": [55, 65, 69, 71, 105, 109, 117, 119], "nameerror": 45, "namespac": 71, "nearest": 105, "necessari": [97, 105], "need": 76, "neg": [28, 29, 34], "negat": 105, "nest": [11, 21, 22, 23, 24, 32, 51, 108], "new": [28, 30, 44, 105, 117, 145], "non": [14, 105], "nonloc": [11, 50], "normal": [10, 105], "notebook": [0, 6, 7, 82, 84, 86, 142], "np": 105, "nth": 105, "null": 105, "number": [23, 26, 28, 29, 30, 32, 66, 67, 69, 101, 104, 105, 113, 116, 117], "numer": [66, 105], "numpi": [4, 100, 101, 104, 105, 106], "o": [43, 55], "object": [4, 14, 34, 36, 38, 43, 73, 76, 77, 80, 107], "observ": 130, "old": [27, 116], "onc": 105, "one": [14, 18, 22, 65, 69, 105, 113, 115], "onli": [69, 105, 108], "oop": 76, "open": 43, "oper": [20, 27, 28, 29, 30, 31, 55, 70, 79, 100, 103], "opposit": 14, "option": 107, "order": [11, 12, 28, 29, 30, 78, 105], "orient": 76, "other": [28, 29, 30, 31, 117], "otherwis": [28, 29], "our": 118, "outer": [24, 105], "output": [7, 69, 76, 82, 86, 105], "over": [29, 105], "overload": 79, "overrid": [76, 78], "p": 105, "p0": 105, "p1": 105, "pack": 46, "packag": [6, 58, 59, 91, 105], "pad": 105, "pair": 30, "pairgrid": 136, "pairplot": 128, "pairwis": 136, "palett": 124, "panda": [4, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120], "paramet": [11, 12, 49, 52, 77, 107, 115], "parent": [76, 78], "part": [105, 133, 136], "pass": [22, 23, 24, 28, 30, 49], "path": [55, 105, 144], "pattern": [14, 22, 23, 105], "per": 119, "percentil": 105, "period": 14, "pie": [97, 98], "pipelin": 10, "place": [105, 111, 112, 113, 114, 116, 117], "placehold": 100, "plot": [97, 98, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "plu": 14, "point": [32, 38, 68, 69, 76, 105, 133], "polar": 105, "polymorph": 76, "pop": [28, 111], "posit": [43, 52, 69, 105, 110, 111, 114], "power": 105, "practic": 69, "prefix": [14, 114], "prerequisit": 12, "price": 119, "print": [22, 23, 34, 62, 69, 105, 107, 119], "printabl": 30, "privat": 78, "problem": 69, "process": 27, "produc": [30, 105], "product": [98, 105], "profit": 98, "program": [4, 41, 46, 62, 73, 76, 105], "properti": [13, 77, 98], "provid": 101, "python": [4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 98, 99, 100, 101, 105, 106, 107, 108, 109, 115, 116, 118, 119, 120, 140], "python3": 28, "quantifi": 14, "question": [14, 98], "quickli": [0, 84, 142], "quiz": 102, "r": [14, 105], "rais": [46, 114], "rand": 101, "randint": 101, "randn": 101, "random": [55, 56, 101, 104, 105], "randomli": 105, "rang": [22, 98, 105, 111, 116, 117], "rank": 105, "raw": 27, "re": 14, "read": [43, 98, 105, 118], "real": [97, 105, 145], "recommend": 105, "record": 105, "recurs": 53, "reduc": 54, "reg": 125, "regardless": 105, "regex": 14, "regplot": 125, "regress": 127, "regular": 105, "relat": [27, 70], "relationship": 136, "reload": 55, "rememb": [15, 32, 63, 68, 76], "remov": [28, 30, 31, 44, 100, 114], "renam": [44, 55, 107, 114], "reorgan": 104, "repeat": 105, "replac": 105, "replic": 27, "repres": [10, 34, 38, 105], "represent": [30, 105], "requir": 108, "resampl": 105, "reset": [112, 113, 117], "reset_index": 117, "reshap": 104, "residplot": 127, "resolut": 78, "resourc": [4, 99, 106, 120, 140], "result": 105, "return": [11, 28, 29, 30, 49], "revers": [22, 23, 28, 105], "rmdir": 44, "role": [83, 87], "round": 105, "row": [105, 108, 109, 110, 113, 115, 119], "rugplot": 128, "rule": [51, 63, 65], "run": 62, "sale": 98, "same": [28, 29, 105], "sampl": [1, 3, 83, 85, 87, 88, 105, 141, 143], "save": [43, 98, 118], "scalar": 105, "scatter": [98, 126], "scatterplot": 136, "scienc": 144, "scope": 71, "script": [59, 105], "seaborn": [121, 122, 123, 124, 125, 129, 130, 131, 132, 140], "search": [14, 55], "second": [34, 105], "section": [1, 3, 85, 88, 141, 143], "see": [65, 98], "segment": 105, "select": [105, 107, 110], "self": [77, 81], "semicolon": 65, "separ": 72, "seq": [29, 30], "sequenc": [14, 27, 72], "sequenti": 124, "seri": [107, 115, 116, 135], "set": [22, 30, 31, 67, 105, 110, 116], "set_axi": 114, "set_index": 116, "setdefault": 30, "setter": 13, "shallow": [28, 30], "shape": 105, "share": [51, 105], "shift": 105, "short": [18, 19], "shortcut": [18, 19], "should": [28, 29, 76, 105], "show": 98, "sign": [69, 105], "similar": [30, 73], "singl": [49, 59, 64, 78, 108, 111, 114], "sixth": 105, "size": 105, "sleep": [40, 41], "slice": [27, 28, 29, 100], "slide": 105, "small": 105, "soap": 98, "some": 128, "sort": [28, 29, 30, 100, 105, 107, 118, 119], "space": 114, "span": [12, 14, 19, 20, 22, 27, 28, 29, 30, 31, 32, 39, 43, 45, 46, 49, 55, 65, 70, 76], "special": [14, 66, 70, 79], "specif": [6, 28, 29, 30, 46, 110], "specifi": [14, 28, 69], "split": 14, "spread": 46, "squar": 14, "stack": 98, "stai": 81, "star": 14, "start": [6, 14, 117], "statement": [17, 18, 19, 20, 21, 22, 23, 24, 32, 46, 49, 55, 64], "statist": [55, 100, 104, 107, 118], "step": 73, "str": 30, "stream": 10, "strftime": [34, 35, 40], "string": [6, 14, 22, 23, 27, 28, 30, 32, 34, 35, 36, 55, 59, 66, 67, 69], "strip": 130, "strptime": [34, 36, 40], "struct_tim": 40, "structur": [72, 105, 145], "style": [27, 98], "sub": 14, "subclass": 105, "subn": 14, "subpart": 105, "subplot": 98, "subsequ": 105, "subset": [100, 105], "subtract": 105, "suffix": 114, "sum": 105, "summari": [14, 27, 28, 29, 30, 31, 102, 107], "super": 78, "support": 27, "suppress": 111, "swap": 105, "swarm": [129, 130], "sy": 55, "symmetr": 31, "syntax": [18, 19, 20, 21, 22, 23, 32, 45], "t": 14, "tabl": 91, "tail": 110, "target": 145, "technic": 145, "tell": 105, "test": [28, 29, 30, 31, 107], "text": 69, "than": [31, 105], "thei": 105, "them": 105, "thi": [28, 30, 76, 98], "thing": [15, 63], "through": [9, 27, 28, 29, 30, 31], "throw": [28, 29], "tile": 105, "time": [4, 14, 28, 34, 35, 37, 38, 39, 40, 41, 42, 102, 105, 135], "timedelata": 38, "timedelta": 34, "timestamp": [34, 35, 39], "timezon": [34, 38], "tip": [133, 136], "titan": 133, "titl": [1, 3, 85, 88, 141, 143], "to_dict": 115, "todai": [34, 37, 105], "tomorrow": 105, "tool": 90, "toolbox": 145, "toothpast": 98, "top": [110, 130], "topic": [4, 16, 64, 144], "total": [30, 98, 105, 119], "toyota": 119, "trail": 114, "transfer": 17, "triangl": 105, "tricki": 31, "triplet": 105, "true": [28, 30, 105], "try": 46, "tupl": [22, 28, 29, 30, 46, 67], "tutori": 6, "two": [27, 34, 38, 49, 105, 116, 119], "txt": 43, "type": [4, 26, 28, 29, 30, 33, 43, 49, 66, 67, 68, 69, 77, 78, 101, 105, 108, 109], "typeerror": [29, 45], "u": [65, 128], "ubyt": 105, "under": 105, "underscor": 14, "unequ": 105, "unicod": 66, "union": 31, "uniqu": 105, "univers": 103, "unpack": [46, 72], "untidi": 138, "up": 55, "upcom": 6, "updat": [30, 119], "us": [6, 10, 11, 13, 14, 22, 23, 26, 28, 29, 34, 35, 38, 46, 51, 54, 55, 59, 65, 69, 76, 81, 91, 98, 100, 105, 108, 109, 110, 111, 114, 115, 116, 119, 145], "user": [47, 60, 69, 108], "util": 91, "v": [14, 32, 59, 73, 108, 111, 123], "valid": 65, "valu": [11, 28, 29, 30, 49, 65, 69, 76, 105, 108, 110, 113, 115, 135], "valueerror": [36, 45], "variabl": [11, 30, 50, 51, 52, 65, 71, 72, 76, 108, 130], "variou": 69, "vector": 105, "versa": 39, "version": [100, 105], "vertic": [105, 128], "vice": 39, "view": 107, "violin": [130, 132], "violinplot": 133, "virtual": 6, "visual": 128, "vstack": 104, "w": [14, 105], "wai": [14, 28], "want": 32, "warn": 105, "we": [6, 11, 29], "welcom": 145, "what": [2, 22, 23, 27, 28, 29, 30, 31, 34, 49, 51, 53, 54, 55, 57, 58, 60, 71, 73, 81, 83, 87, 104, 105, 107, 128, 138, 139], "when": [11, 23, 26, 28, 30, 102, 105], "where": [14, 108, 113], "which": [28, 105], "while": [22, 23, 24, 69, 107, 114], "whisker": 97, "whitespac": 14, "whose": 105, "why": [4, 22, 23, 29, 78, 81, 100], "wich": 105, "wide": 138, "widget": 124, "width": 69, "window": 105, "without": [13, 49, 105, 115, 117], "word": 14, "work": [9, 27, 35, 36, 118], "world": [46, 62, 97, 145], "would": 30, "wrap": 55, "write": [43, 46, 62, 63, 105], "x": 105, "xi": 105, "xlsx": 43, "xml": 43, "y": 105, "yaml": [0, 84, 142], "year": [34, 98], "yesterdai": 105, "yj": 105, "you": [32, 76], "your": [6, 98], "z": [14, 105], "z0": 14, "za": 14, "zero": [14, 105], "zip": 46}})