Search.setIndex({"alltitles": {"1 distplot()": [[133, "distplot"]], "1. Arithmatic Operators": [[75, "arithmatic-operators"]], "1. Bar Plot": [[138, "bar-plot"]], "1. Basic Operators for concatenation of two or more strings": [[32, "basic-operators-for-concatenation-of-two-or-more-strings"]], "1. Changing a Tuple": [[34, "changing-a-tuple"]], "1. Dictionary Membership Test": [[35, "dictionary-membership-test"]], "1. Docstrings for Python Modules": [[64, "docstrings-for-python-modules"]], "1. Easy to Implement": [[15, "easy-to-implement"]], "1. Identity operators": [[75, "identity-operators"]], "1. Implicit Type Conversion": [[73, "implicit-type-conversion"]], "1. Import the numpy package under the name np and print the numpy version and the configuration (\u2605\u2606\u2606)": [[110, "import-the-numpy-package-under-the-name-np-and-print-the-numpy-version-and-the-configuration"]], "1. Indexing": [[34, "indexing"]], "1. List Membership Test": [[33, "list-membership-test"]], "1. Numeric Literals": [[71, "numeric-literals"]], "1. Opening Files in Python": [[48, "opening-files-in-python"]], "1. Python Keywords": [[68, "python-keywords"]], "1. Python Numbers": [[72, "python-numbers"]], "1. Python Output Using print() function": [[74, "python-output-using-print-function"]], "1. Python Statement": [[69, "python-statement"]], "1. Python Syntax Errors": [[50, "python-syntax-errors"]], "1. Python Variables": [[70, "python-variables"]], "1. Python break statement": [[29, "python-break-statement"]], "1. Set Membership Test": [[36, "set-membership-test"]], "1. Single lined comment:": [[69, "single-lined-comment"]], "1. Strip Plot": [[135, "strip-plot"]], "1. Tuple Membership Test": [[34, "tuple-membership-test"]], "1. [] - Square brackets": [[19, "square-brackets"]], "1. break Statement in Nested Loop": [[29, "break-statement-in-nested-loop"]], "1. continue Statement in Nested Loop": [[29, "continue-statement-in-nested-loop"]], "1. match.group()": [[19, "match-group"]], "1. re.findall()": [[19, "re-findall"]], "10. () - Group": [[19, "group"]], "10. Find indices of non-zero elements from [3,7,0,0,9,0] (\u2605\u2606\u2606)": [[110, "find-indices-of-non-zero-elements-from-3-7-0-0-9-0"]], "100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (\u2605\u2605\u2605)": [[110, "compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1d-array-x-i-e-resample-the-elements-of-an-array-with-replacement-n-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means"]], "11. Create a 4x4 identity matrix (\u2605\u2606\u2606)": [[110, "create-a-4x4-identity-matrix"]], "11. \\ - Backslash": [[19, "backslash"]], "12. Create a 2x2x2 array with random values (\u2605\u2606\u2606)": [[110, "create-a-2x2x2-array-with-random-values"]], "13. Create a 9x9 array with random values and find the minimum and maximum values (\u2605\u2606\u2606)": [[110, "create-a-9x9-array-with-random-values-and-find-the-minimum-and-maximum-values"]], "15. Create a 2d array with 1 on the border and 0 inside (\u2605\u2606\u2606)": [[110, "create-a-2d-array-with-1-on-the-border-and-0-inside"]], "16. How to add a border (filled with 0\u2019s) around an existing array? (\u2605\u2606\u2606)": [[110, "how-to-add-a-border-filled-with-0s-around-an-existing-array"]], "17. What is the result of the following expression? (\u2605\u2606\u2606)": [[110, "what-is-the-result-of-the-following-expression"]], "18. Create a 6x6 matrix with values 1,2,3,4 just below the diagonal (\u2605\u2606\u2606)": [[110, "create-a-6x6-matrix-with-values-1-2-3-4-just-below-the-diagonal"]], "19. Create a 6x6 matrix and fill it with a checkerboard pattern (\u2605\u2606\u2606)": [[110, "create-a-6x6-matrix-and-fill-it-with-a-checkerboard-pattern"]], "2 jointplot()": [[133, "jointplot"]], "2. . - Period": [[19, "period"]], "2. Closing Files in Python": [[48, "closing-files-in-python"]], "2. Comparison/Relational operators": [[75, "comparison-relational-operators"]], "2. Constants": [[70, "constants"]], "2. Convert a list of numeric value into a one-dimensional NumPy array (\u2605\u2606\u2606)": [[110, "convert-a-list-of-numeric-value-into-a-one-dimensional-numpy-array"]], "2. Deleting a Tuple": [[34, "deleting-a-tuple"]], "2. Docstrings for Python Functions": [[64, "docstrings-for-python-functions"]], "2. Explicit Type Conversion": [[73, "explicit-type-conversion"]], "2. Inline comments": [[69, "inline-comments"]], "2. Iterating Through a Dictionary": [[35, "iterating-through-a-dictionary"]], "2. Iterating Through a List": [[33, "iterating-through-a-list"]], "2. Iterating Through a Set": [[36, "iterating-through-a-set"]], "2. Iterating Through a Tuple": [[34, "iterating-through-a-tuple"]], "2. Membership operators": [[75, "membership-operators"]], "2. Memory Efficient": [[15, "memory-efficient"]], "2. Negative Indexing": [[34, "negative-indexing"]], "2. Point Plot": [[138, "point-plot"]], "2. Python Identifiers": [[68, "python-identifiers"]], "2. Python Indentation": [[69, "python-indentation"]], "2. Python Input Using input() function": [[74, "python-input-using-input-function"]], "2. Python List []": [[72, "python-list"]], "2. Python Logical Errors (Exceptions)": [[50, "python-logical-errors-exceptions"]], "2. Python String Membership Operators": [[32, "python-string-membership-operators"]], "2. Python continue statement": [[29, "python-continue-statement"]], "2. String literals (unicode character strings)": [[71, "string-literals-unicode-character-strings"]], "2. break Statement in Outer Loop": [[29, "break-statement-in-outer-loop"]], "2. continue Statement in Outer Loop": [[29, "continue-statement-in-outer-loop"]], "2. match.start(), match.end() and match.span()": [[19, "match-start-match-end-and-match-span"]], "2. re.split()": [[19, "re-split"]], "20. Consider a (8,9,10) shape array, what is the index (x,y,z) of the 100th element? (\u2605\u2606\u2606)": [[110, "consider-a-8-9-10-shape-array-what-is-the-index-x-y-z-of-the-100th-element"]], "21. Create a checkerboard 8x8 matrix using the tile function (\u2605\u2606\u2606)": [[110, "create-a-checkerboard-8x8-matrix-using-the-tile-function"]], "22. Normalize a 6x6 random matrix (\u2605\u2606\u2606)": [[110, "normalize-a-6x6-random-matrix"]], "23. find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements. (\u2605\u2606\u2606)": [[110, "find-the-number-of-elements-of-an-array-length-of-one-array-element-in-bytes-and-total-bytes-consumed-by-the-elements"]], "24. Multiply a 6x3 matrix by a 3x4 matrix (real matrix product) (\u2605\u2606\u2606)": [[110, "multiply-a-6x3-matrix-by-a-3x4-matrix-real-matrix-product"]], "25. Given a 1D array, negate all elements which are between 3 and 8, in place. (\u2605\u2606\u2606)": [[110, "given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place"]], "26. What is the output of the following script? (\u2605\u2606\u2606)": [[110, "what-is-the-output-of-the-following-script"]], "27. Write a Python program compare two arrays using numpy (\u2605\u2606\u2606)": [[110, "write-a-python-program-compare-two-arrays-using-numpy"]], "28. What are the result of the following expressions? (\u2605\u2606\u2606)": [[110, "what-are-the-result-of-the-following-expressions"]], "29. How to round away from zero a float array ? (\u2605\u2606\u2606)": [[110, "how-to-round-away-from-zero-a-float-array"]], "3 pairplot()": [[133, "pairplot"]], "3. Boolean literals": [[71, "boolean-literals"]], "3. Count Plot": [[138, "count-plot"]], "3. Create a null vector of size 9 (\u2605\u2606\u2606)": [[110, "create-a-null-vector-of-size-9"]], "3. Docstrings for Python Classes": [[64, "docstrings-for-python-classes"]], "3. Logical/Boolean operators": [[75, "logical-boolean-operators"]], "3. Multi lined comment:": [[69, "multi-lined-comment"]], "3. Other List Operations in Python": [[33, "id1"]], "3. Python Comments": [[69, "python-comments"]], "3. Python Import function": [[74, "python-import-function"]], "3. Python NameError": [[50, "python-nameerror"]], "3. Python Relational Operators": [[32, "python-relational-operators"]], "3. Python Tuple ()": [[72, "python-tuple"]], "3. Python pass statement": [[29, "python-pass-statement"]], "3. Represent Infinite Stream": [[15, "represent-infinite-stream"]], "3. Slicing": [[34, "slicing"]], "3. Writing to Files in Python": [[48, "writing-to-files-in-python"]], "3. ^ - Caret": [[19, "caret"]], "3. match.re and match.string": [[19, "match-re-and-match-string"]], "3. re.sub()": [[19, "re-sub"]], "30. How to find common values between two arrays? (\u2605\u2606\u2606)": [[110, "how-to-find-common-values-between-two-arrays"]], "31. How to ignore all numpy warnings (not recommended)? (\u2605\u2606\u2606)": [[110, "how-to-ignore-all-numpy-warnings-not-recommended"]], "32. Is the following expressions true? (\u2605\u2606\u2606)": [[110, "is-the-following-expressions-true"]], "33. How to get the dates of yesterday, today and tomorrow? (\u2605\u2606\u2606)": [[110, "how-to-get-the-dates-of-yesterday-today-and-tomorrow"]], "34. How to get all the dates corresponding to the month of January 2016? (\u2605\u2605\u2606)": [[110, "how-to-get-all-the-dates-corresponding-to-the-month-of-january-2016"]], "35. How to compute ((A+B)*(-A/2)) in place (without copy)? (\u2605\u2605\u2606)": [[110, "how-to-compute-a-b-a-2-in-place-without-copy"]], "36. Extract the integer part of a random array of positive numbers using 4 different methods (\u2605\u2605\u2606)": [[110, "extract-the-integer-part-of-a-random-array-of-positive-numbers-using-4-different-methods"]], "37. Create a 3x3 matrix with row values ranging from 0 to 2 (\u2605\u2605\u2606)": [[110, "create-a-3x3-matrix-with-row-values-ranging-from-0-to-2"]], "38. Consider a generator function that generates 9 integers and use it to build an array (\u2605\u2606\u2606)": [[110, "consider-a-generator-function-that-generates-9-integers-and-use-it-to-build-an-array"]], "39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (\u2605\u2605\u2606)": [[110, "create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded"]], "4 rugplot()": [[133, "rugplot"]], "4. $ - Dollar": [[19, "dollar"]], "4. Bitwise operators": [[75, "bitwise-operators"]], "4. Docstrings for Python Scripts": [[64, "docstrings-for-python-scripts"]], "4. Docstrings in Python": [[69, "docstrings-in-python"]], "4. How to find the memory size of any array (\u2605\u2606\u2606)": [[110, "how-to-find-the-memory-size-of-any-array"]], "4. Pipelining Generators": [[15, "pipelining-generators"]], "4. Python IndexError": [[50, "python-indexerror"]], "4. Python Strings": [[72, "python-strings"]], "4. Reading Files in Python": [[48, "reading-files-in-python"]], "4. re.subn()": [[19, "re-subn"]], "40. Create a random vector of size 10 and sort it (\u2605\u2605\u2606)": [[110, "create-a-random-vector-of-size-10-and-sort-it"]], "41. How to sum a small array faster than np.sum? (\u2605\u2605\u2606)": [[110, "how-to-sum-a-small-array-faster-than-np-sum"]], "42. Consider two random array A and B, check if they are equal (\u2605\u2605\u2606)": [[110, "consider-two-random-array-a-and-b-check-if-they-are-equal"]], "43. Make an array immutable (read-only) (\u2605\u2605\u2606)": [[110, "make-an-array-immutable-read-only"]], "44. Consider a random 5x2 matrix representing cartesian coordinates, convert them to polar coordinates (\u2605\u2605\u2606)": [[110, "consider-a-random-5x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates"]], "45. Create random vector of size 5 and replace the maximum value by 0 (\u2605\u2605\u2606)": [[110, "create-random-vector-of-size-5-and-replace-the-maximum-value-by-0"]], "46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (\u2605\u2605\u2606)": [[110, "create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area"]], "47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj)) (\u2605\u2605\u2606)": [[110, "given-two-arrays-x-and-y-construct-the-cauchy-matrix-c-cij-1-xi-yj"]], "48. Print the minimum and maximum representable value for each numpy scalar type (\u2605\u2605\u2606)": [[110, "print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type"]], "49. How to print all the values of an array? (\u2605\u2605\u2606)": [[110, "how-to-print-all-the-values-of-an-array"]], "5 kdeplot()": [[133, "kdeplot"]], "5. * - Star": [[19, "star"]], "5. Assignment operators": [[75, "assignment-operators"]], "5. Docstrings for Python Packages": [[64, "docstrings-for-python-packages"]], "5. How to get the documentation of the numpy add function from the command line? (\u2605\u2606\u2606)": [[110, "how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line"]], "5. Python ModuleNotFoundError": [[50, "python-modulenotfounderror"]], "5. Python Set {}": [[72, "python-set"]], "5. re.search()": [[19, "re-search"]], "50. How to find the closest value (to a given scalar) in a vector? (\u2605\u2605\u2606)": [[110, "how-to-find-the-closest-value-to-a-given-scalar-in-a-vector"]], "51. Create a structured array representing a position (x,y) and a color (r,g,b) (\u2605\u2605\u2606)": [[110, "create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b"]], "52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (\u2605\u2605\u2606)": [[110, "consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances"]], "53. How to convert a float (32 bits) array into an integer (32 bits) in place?": [[110, "how-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"]], "54. How to read the following file? (\u2605\u2605\u2606)": [[110, "how-to-read-the-following-file"]], "55. What is the equivalent of enumerate for numpy arrays? (\u2605\u2605\u2606)": [[110, "what-is-the-equivalent-of-enumerate-for-numpy-arrays"]], "56. Generate a generic 2D Gaussian-like array (\u2605\u2605\u2606)": [[110, "generate-a-generic-2d-gaussian-like-array"]], "57. How to randomly place e elements in a 2D array? (\u2605\u2605\u2606)": [[110, "how-to-randomly-place-e-elements-in-a-2d-array"]], "58. Subtract the mean of each row of a matrix (\u2605\u2605\u2606)": [[110, "subtract-the-mean-of-each-row-of-a-matrix"]], "59. How to sort an array by the nth column? (\u2605\u2605\u2606)": [[110, "how-to-sort-an-array-by-the-nth-column"]], "6# 6# 14. Create a random vector of size 20 and find the mean value (\u2605\u2606\u2606)": [[110, "create-a-random-vector-of-size-20-and-find-the-mean-value"]], "6. + - Plus": [[19, "plus"]], "6. Create a null vector of size 12 but the sixth value which is 1 (\u2605\u2606\u2606)": [[110, "create-a-null-vector-of-size-12-but-the-sixth-value-which-is-1"]], "6. Python AttributeError": [[50, "python-attributeerror"]], "6. Python Dictionary {}": [[72, "python-dictionary"]], "6. Special operators": [[75, "special-operators"]], "60. How to tell if a given 2D array has null columns? (\u2605\u2605\u2606)": [[110, "how-to-tell-if-a-given-2d-array-has-null-columns"]], "61. Find the nearest value from a given value in an array (\u2605\u2605\u2606)": [[110, "find-the-nearest-value-from-a-given-value-in-an-array"]], "62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (\u2605\u2605\u2606)": [[110, "considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator"]], "63. Create an array class that has a name attribute (\u2605\u2605\u2606)": [[110, "create-an-array-class-that-has-a-name-attribute"]], "64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (\u2605\u2605\u2605)": [[110, "consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices"]], "65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (\u2605\u2605\u2605)": [[110, "how-to-accumulate-elements-of-a-vector-x-to-an-array-f-based-on-an-index-list-i"]], "66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (\u2605\u2605\u2606)": [[110, "considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors"]], "67. Considering a four dimensions array, how to get sum over the last two axis at once? (\u2605\u2605\u2605)": [[110, "considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once"]], "68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (\u2605\u2605\u2605)": [[110, "considering-a-one-dimensional-vector-d-how-to-compute-means-of-subsets-of-d-using-a-vector-s-of-same-size-describing-subset-indices"]], "69. How to get the diagonal of a dot product? (\u2605\u2605\u2605)": [[110, "how-to-get-the-diagonal-of-a-dot-product"]], "7. ? - Question Mark": [[19, "question-mark"]], "7. Create a vector with values ranging from 20 to 59 (\u2605\u2606\u2606)": [[110, "create-a-vector-with-values-ranging-from-20-to-59"]], "7. Python KeyError": [[50, "python-keyerror"]], "70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (\u2605\u2605\u2605)": [[110, "consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value"]], "71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (\u2605\u2605\u2605)": [[110, "consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5"]], "72. How to swap two rows of an array? (\u2605\u2605\u2605)": [[110, "how-to-swap-two-rows-of-an-array"]], "73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (\u2605\u2605\u2605)": [[110, "consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles"]], "74. Given a sorted array C that corresponds to a bincount, how to produce an array A such that np.bincount(A) == C? (\u2605\u2605\u2605)": [[110, "given-a-sorted-array-c-that-corresponds-to-a-bincount-how-to-produce-an-array-a-such-that-np-bincount-a-c"]], "75. How to compute averages using a sliding window over an array? (\u2605\u2605\u2605)": [[110, "how-to-compute-averages-using-a-sliding-window-over-an-array"]], "76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (\u2605\u2605\u2605)": [[110, "consider-a-one-dimensional-array-z-build-a-two-dimensional-array-whose-first-row-is-z-0-z-1-z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-z-3-z-2-z-1"]], "77. How to negate a boolean, or to change the sign of a float inplace? (\u2605\u2605\u2605)": [[110, "how-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace"]], "78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[110, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-p0-i-p1-i"]], "79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[110, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-set-of-points-p-how-to-compute-distance-from-each-point-j-p-j-to-each-line-i-p0-i-p1-i"]], "8. Python TypeError": [[50, "python-typeerror"]], "8. Reverse a vector (first element becomes last) (\u2605\u2606\u2606)": [[110, "reverse-a-vector-first-element-becomes-last"]], "8. {} - Braces": [[19, "braces"]], "80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (\u2605\u2605\u2605)": [[110, "consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary"]], "81. Consider an array a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], \u2026, [11,12,13,14]]? (\u2605\u2605\u2605)": [[110, "consider-an-array-a-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-b-1-2-3-4-2-3-4-5-3-4-5-6-11-12-13-14"]], "82. Compute a matrix rank (\u2605\u2605\u2605)": [[110, "compute-a-matrix-rank"]], "83. How to find the most frequent value in an array?": [[110, "how-to-find-the-most-frequent-value-in-an-array"]], "84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (\u2605\u2605\u2605)": [[110, "extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix"]], "85. Create a 2D array subclass such that a[i,j] == a[j,i] (\u2605\u2605\u2605)": [[110, "create-a-2d-array-subclass-such-that-a-i-j-a-j-i"]], "86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (\u2605\u2605\u2605)": [[110, "consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-how-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1"]], "87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (\u2605\u2605\u2605)": [[110, "consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4"]], "88. How to implement the Game of Life using numpy arrays? (\u2605\u2605\u2605)": [[110, "how-to-implement-the-game-of-life-using-numpy-arrays"]], "89. How to get the n largest values of an array (\u2605\u2605\u2605)": [[110, "how-to-get-the-n-largest-values-of-an-array"]], "9. Create a 3x3 matrix with values ranging from 12 to 20 (\u2605\u2606\u2606)": [[110, "create-a-3x3-matrix-with-values-ranging-from-12-to-20"]], "9. Python ValueError": [[50, "python-valueerror"]], "9. | - Alternation": [[19, "alternation"]], "90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (\u2605\u2605\u2605)": [[110, "given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item"]], "91. How to create a record array from a regular array? (\u2605\u2605\u2605)": [[110, "how-to-create-a-record-array-from-a-regular-array"]], "92. Consider a large vector A, compute A to the power of 3 using 3 different methods (\u2605\u2605\u2605)": [[110, "consider-a-large-vector-a-compute-a-to-the-power-of-3-using-3-different-methods"]], "93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (\u2605\u2605\u2605)": [[110, "consider-two-arrays-a-and-b-of-shape-8-3-and-2-2-how-to-find-rows-of-a-that-contain-elements-of-each-row-of-b-regardless-of-the-order-of-the-elements-in-b"]], "94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (\u2605\u2605\u2605)": [[110, "considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3"]], "95. Convert a vector of ints into a matrix binary representation (\u2605\u2605\u2605)": [[110, "convert-a-vector-of-ints-into-a-matrix-binary-representation"]], "96. Given a two dimensional array, how to extract unique rows? (\u2605\u2605\u2605)": [[110, "given-a-two-dimensional-array-how-to-extract-unique-rows"]], "97. Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (\u2605\u2605\u2605)": [[110, "considering-2-vectors-a-b-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function"]], "98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (\u2605\u2605\u2605)?": [[110, "considering-a-path-described-by-two-vectors-x-y-how-to-sample-it-using-equidistant-samples"]], "99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (\u2605\u2605\u2605)": [[110, "given-an-integer-n-and-a-2d-array-x-select-from-x-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n"]], "AI/ML Learning Path": [[149, "ai-ml-learning-path"]], "About Python Programming": [[9, "about-python-programming"]], "Accept float input from User": [[74, "accept-float-input-from-user"]], "Accept multiline input from a user": [[74, "accept-multiline-input-from-a-user"]], "Accepting User Inputs (as both integer and string)": [[74, "accepting-user-inputs-as-both-integer-and-string"]], "Accepting User Inputs (only as integer)": [[74, "accepting-user-inputs-only-as-integer"]], "Access Tuple Elements": [[34, "access-tuple-elements"]], "Access elements from a list": [[33, "access-elements-from-a-list"]], "Accessing Attributes with self Parameter": [[82, "accessing-attributes-with-self-parameter"]], "Accessing Elements from Dictionary": [[35, "accessing-elements-from-dictionary"]], "Accessing output string arguments by name": [[74, "accessing-output-string-arguments-by-name"]], "Accessing the index in for loop": [[27, "accessing-the-index-in-for-loop"]], "Add/Change List Elements": [[33, "add-change-list-elements"]], "Adding or Removing Elements": [[105, "adding-or-removing-elements"]], "Additional Regression Plots": [[132, "additional-regression-plots"]], "Advanced Level": [[149, "advanced-level"]], "Advanced string processing": [[32, "advanced-string-processing"]], "Advantage": [[60, "advantage"]], "Advantages of Recursion": [[58, "advantages-of-recursion"]], "Advantages of Tuple over List": [[34, "advantages-of-tuple-over-list"]], "Advantages of user-defined functions": [[65, "advantages-of-user-defined-functions"]], "Aggregate Statistics (Groupby)": [[123, "aggregate-statistics-groupby"]], "Algorithm Evaluation": [[0, "algorithm-evaluation"]], "An example cell": [[5, "an-example-cell"], [89, "an-example-cell"], [147, "an-example-cell"]], "Anatomy of Box Plot": [[136, "anatomy-of-box-plot"]], "Anatomy of Violin Plot": [[137, "anatomy-of-violin-plot"]], "Anomaly Detection Algorithm": [[0, "anomaly-detection-algorithm"]], "Anomaly Detection Using Gaussian Distribution": [[0, "anomaly-detection-using-gaussian-distribution"]], "Apply condition": [[112, "apply-condition"]], "Argument of an Exception": [[51, "argument-of-an-exception"]], "Array": [[105, "array"]], "Array Attributes and Methods": [[106, "array-attributes-and-methods"]], "Array Manipulation": [[105, "array-manipulation"]], "Array datatypes": [[106, "array-datatypes"]], "Array indexing": [[107, "array-indexing"]], "Array math": [[108, "array-math"]], "Arrays reorganizing": [[109, "arrays-reorganizing"]], "Assigning value to constant in Python": [[70, "assigning-value-to-constant-in-python"]], "Assigning values to Variables in Python": [[70, "assigning-values-to-variables-in-python"]], "Backpropagation": [[6, "backpropagation"]], "Backpropagation Algorithm": [[6, "backpropagation-algorithm"]], "Backward Iteration using the reversed() function": [[27, "backward-iteration-using-the-reversed-function"]], "Bar Chart": [[102, "bar-chart"]], "Bar Plot, Point Plot and Count plot": [[138, "bar-plot-point-plot-and-count-plot"]], "Basic Graph": [[102, "basic-graph"]], "Basic Statistics": [[105, "basic-statistics"]], "Batch Gradient Descent": [[3, "batch-gradient-descent"], [4, "batch-gradient-descent"]], "Be careful when copying arrays!!!": [[107, "be-careful-when-copying-arrays"]], "Beginner": [[1, "beginner"]], "Beginner Level": [[149, "beginner-level"]], "Boolean Masking and Advanced Indexing": [[109, "boolean-masking-and-advanced-indexing"]], "Boolean array indexing": [[107, "boolean-array-indexing"]], "Box and Whiskers Chart": [[102, "box-and-whiskers-chart"]], "Box plot #1": [[102, "box-plot-1"]], "Box plot #2": [[102, "box-plot-2"]], "Breaking appart strings": [[32, "breaking-appart-strings"]], "Broadcasting": [[108, "broadcasting"]], "Broadcasting with array reorganizing": [[109, "broadcasting-with-array-reorganizing"]], "Building Custom Iterators": [[14, "building-custom-iterators"]], "Building color palettes:": [[129, "building-color-palettes"]], "Built-In Class Attributes": [[82, "built-in-class-attributes"]], "Built-in Functions with Set": [[36, "built-in-functions-with-set"]], "Built-in Higher Order Functions": [[17, "built-in-higher-order-functions"]], "Built-in functions to Work with Python": [[32, "built-in-functions-to-work-with-python"]], "Cart ^": [[19, "cart"]], "Catching Exceptions in Python": [[51, "catching-exceptions-in-python"]], "Catching Specific Exceptions in Python": [[51, "catching-specific-exceptions-in-python"]], "Catching exceptions with continue statement": [[29, "catching-exceptions-with-continue-statement"]], "Categorical Data Background": [[134, "categorical-data-background"]], "Chaining Decorators in Python": [[17, "chaining-decorators-in-python"]], "Changing Dictionary to JSON": [[48, "changing-dictionary-to-json"]], "Changing Directory chdir() -": [[49, "changing-directory-chdir"]], "Changing JSON to Dictionary": [[48, "changing-json-to-dictionary"]], "Changing and Adding Dictionary elements": [[35, "changing-and-adding-dictionary-elements"]], "Check python datatypes": [[11, "check-python-datatypes"]], "Class": [[81, "class"]], "Class Constructor": [[81, "class-constructor"]], "Class Without Getters and Setters": [[18, "class-without-getters-and-setters"]], "Code blocks and outputs": [[12, "code-blocks-and-outputs"], [87, "code-blocks-and-outputs"], [91, "code-blocks-and-outputs"]], "Combining Arrays": [[105, "combining-arrays"]], "Common Python String Methods": [[32, "common-python-string-methods"]], "Compare DataFrame drop() vs. pop() vs. del": [[116, "compare-dataframe-drop-vs-pop-vs-del"]], "Comparision operators in Python": [[60, "comparision-operators-in-python"]], "Comparison": [[105, "comparison"]], "Concepts": [[150, "concepts"]], "Concepts at glance": [[1, "concepts-at-glance"]], "Conclusion": [[96, "conclusion"]], "Conditional Changes": [[123, "conditional-changes"]], "Conditional statements": [[22, "conditional-statements"]], "Conditionals in List Comprehension": [[37, "conditionals-in-list-comprehension"]], "Constants  -": [[60, "constants"]], "Constructors in Python": [[82, "constructors-in-python"]], "Content with notebooks": [[12, "content-with-notebooks"], [87, "content-with-notebooks"], [91, "content-with-notebooks"]], "Control Flow Statements": [[22, "control-flow-statements"]], "Control Statements in Python": [[29, "control-statements-in-python"]], "Control Statements in Python FAQs": [[29, "control-statements-in-python-faqs"]], "Controlling Aesthetics of Seaborn Plots": [[127, "controlling-aesthetics-of-seaborn-plots"]], "Convert Pandas DataFrame to Python dictionary": [[120, "convert-pandas-dataframe-to-python-dictionary"]], "Copying/Sorting": [[105, "copying-sorting"]], "Core engineering": [[150, "core-engineering"]], "Cost Function": [[3, "cost-function"], [4, "cost-function"], [6, "cost-function"]], "Cost Function (Distortion)": [[2, "cost-function-distortion"]], "Course Structure": [[150, "course-structure"]], "Create DataFrame from Hierarchical lists as columns": [[114, "create-dataframe-from-hierarchical-lists-as-columns"]], "Create DataFrame from dict using constructor": [[113, "create-dataframe-from-dict-using-constructor"]], "Create DataFrame from hierarchical lists as rows": [[114, "create-dataframe-from-hierarchical-lists-as-rows"]], "Create DataFrame from list by changing data type": [[114, "create-dataframe-from-list-by-changing-data-type"]], "Create DataFrame from list of dict": [[113, "create-dataframe-from-list-of-dict"]], "Create DataFrame from list using constructor": [[114, "create-dataframe-from-list-using-constructor"]], "Create DataFrame from list with a customized column name": [[114, "create-dataframe-from-list-with-a-customized-column-name"]], "Create DataFrame from list with a customized index": [[114, "create-dataframe-from-list-with-a-customized-index"]], "Create DataFrame from multiple lists": [[114, "create-dataframe-from-multiple-lists"]], "Create Generators in Python": [[15, "create-generators-in-python"]], "Create Pandas DataFrame from Python Dictionary": [[113, "create-pandas-dataframe-from-python-dictionary"]], "Create Pandas DataFrame from Python List": [[114, "create-pandas-dataframe-from-python-list"]], "Create Test Objects": [[112, "create-test-objects"]], "Create a NumPy Array": [[106, "create-a-numpy-array"]], "Create a notebook with MyST Markdown": [[5, "create-a-notebook-with-myst-markdown"], [89, "create-a-notebook-with-myst-markdown"], [147, "create-a-notebook-with-myst-markdown"]], "Creating Custom Exceptions": [[52, "creating-custom-exceptions"]], "Creating Instance Objects": [[82, "creating-instance-objects"]], "Creating Python Dictionary": [[35, "creating-python-dictionary"]], "Creating Python List": [[33, "creating-python-list"]], "Creating Python Sets": [[36, "creating-python-sets"]], "Creating Python Tuple": [[34, "creating-python-tuple"]], "Creating a Lambda Function": [[37, "creating-a-lambda-function"]], "Creating a module in Python": [[60, "creating-a-module-in-python"]], "Creating an Object in Python": [[82, "creating-an-object-in-python"]], "Creating an empty set is a bit tricky.": [[36, "creating-an-empty-set-is-a-bit-tricky"]], "Customizing Exception Classes": [[52, "customizing-exception-classes"]], "Data": [[133, "data"]], "Data Cleaning": [[112, "data-cleaning"]], "Data Hiding": [[82, "data-hiding"]], "Data structures and algorithms": [[77, "data-structures-and-algorithms"]], "DataFrame Attributes": [[112, "dataframe-attributes"]], "DataFrame GroupBy": [[112, "dataframe-groupby"]], "DataFrame Iteration": [[112, "dataframe-iteration"]], "DataFrame Join": [[112, "dataframe-join"]], "DataFrame Options": [[112, "dataframe-options"]], "DataFrame Sorting": [[112, "dataframe-sorting"]], "DataFrame constructor": [[112, "dataframe-constructor"]], "DataFrame constructor vs from_dict()": [[113, "dataframe-constructor-vs-from-dict"]], "DataFrame conversion": [[112, "dataframe-conversion"]], "DataFrame creation": [[112, "dataframe-creation"]], "DataFrame filter columns": [[112, "dataframe-filter-columns"]], "DataFrame from dict by changing the column data type": [[113, "dataframe-from-dict-by-changing-the-column-data-type"]], "DataFrame from dict nested dict": [[113, "dataframe-from-dict-nested-dict"]], "DataFrame from dict where values are variable-length lists": [[113, "dataframe-from-dict-where-values-are-variable-length-lists"]], "DataFrame from dict with a single value": [[113, "dataframe-from-dict-with-a-single-value"]], "DataFrame from dict with dict keys as a row": [[113, "dataframe-from-dict-with-dict-keys-as-a-row"]], "DataFrame from dict with key and value as a column": [[113, "dataframe-from-dict-with-key-and-value-as-a-column"]], "DataFrame from dict with required columns only": [[113, "dataframe-from-dict-with-required-columns-only"]], "DataFrame from dict with user-defined indexes": [[113, "dataframe-from-dict-with-user-defined-indexes"]], "DataFrame metadata": [[112, "dataframe-metadata"]], "DataFrame modification": [[112, "dataframe-modification"]], "DataFrame rename columns": [[112, "dataframe-rename-columns"]], "DataFrame selection": [[112, "dataframe-selection"]], "DataFrame to dict by row": [[120, "dataframe-to-dict-by-row"]], "DataFrame to dict by row index": [[120, "dataframe-to-dict-by-row-index"]], "DataFrame to dict using into parameter": [[120, "dataframe-to-dict-using-into-parameter"]], "DataFrame to dict with a list of values": [[120, "dataframe-to-dict-with-a-list-of-values"]], "DataFrame to dict with one column as the key": [[120, "dataframe-to-dict-with-one-column-as-the-key"]], "DataFrame to dict with pandas series of values": [[120, "dataframe-to-dict-with-pandas-series-of-values"]], "DataFrame to dict without header and index": [[120, "dataframe-to-dict-without-header-and-index"]], "Dataframe from CSV": [[112, "dataframe-from-csv"]], "Dataframe from dict": [[112, "dataframe-from-dict"]], "Decorating Functions with Parameters": [[17, "decorating-functions-with-parameters"]], "Decorators in Python": [[17, "decorators-in-python"]], "Defining a Class in Python": [[82, "defining-a-class-in-python"]], "Defining a Closure Function": [[16, "defining-a-closure-function"]], "Defining a Function": [[54, "defining-a-function"]], "Defining a function with parameters": [[54, "defining-a-function-with-parameters"]], "Defining a function with parameters and return value": [[54, "defining-a-function-with-parameters-and-return-value"]], "Defining a function without any parameters": [[54, "defining-a-function-without-any-parameters"]], "Defining a function without parameters and return value": [[54, "defining-a-function-without-parameters-and-return-value"]], "Definition": [[2, "definition"], [3, "definition"], [4, "definition"], [6, "definition"]], "Delete Objects": [[82, "delete-objects"]], "Delete object properties": [[82, "delete-object-properties"]], "Delete/Remove List Elements": [[33, "delete-remove-list-elements"]], "Deleting Files": [[48, "deleting-files"]], "Density Estimation": [[0, "density-estimation"]], "Description": [[2, "description"]], "Determinant": [[108, "determinant"]], "Dictionary Built-in Dictionary Functions": [[35, "dictionary-built-in-dictionary-functions"]], "Differences Between Interpreter and Compiler": [[78, "differences-between-interpreter-and-compiler"]], "Differences between Generator function and Normal function": [[15, "differences-between-generator-function-and-normal-function"]], "Disadvantages of Recursion": [[58, "disadvantages-of-recursion"]], "Display numbers in floating-point format": [[74, "display-numbers-in-floating-point-format"]], "Display output Number in various type format": [[74, "display-output-number-in-various-type-format"]], "Docstring Formats": [[64, "docstring-formats"]], "Docstrings": [[54, "docstrings"]], "Draw a scatterplot for each pairwise relationship": [[141, "draw-a-scatterplot-for-each-pairwise-relationship"]], "Draw strips of observations on top of a box plot": [[135, "draw-strips-of-observations-on-top-of-a-box-plot"]], "Draw strips of observations on top of a violin plot": [[135, "draw-strips-of-observations-on-top-of-a-violin-plot"]], "Draw swarm observations on top of a violin plot": [[135, "draw-swarm-observations-on-top-of-a-violin-plot"]], "Drop NA from defined rows": [[118, "drop-na-from-defined-rows"]], "Drop all duplicates": [[117, "drop-all-duplicates"]], "Drop all the columns using loc": [[116, "drop-all-the-columns-using-loc"]], "Drop column by index position": [[116, "drop-column-by-index-position"]], "Drop column by suppressing errors": [[116, "drop-column-by-suppressing-errors"]], "Drop column from multi-index DataFrame": [[116, "drop-column-from-multi-index-dataframe"]], "Drop column in place": [[116, "drop-column-in-place"]], "Drop column using a function": [[116, "drop-column-using-a-function"]], "Drop column using pandas DataFrame delete": [[116, "drop-column-using-pandas-dataframe-delete"]], "Drop column using pandas DataFrame.pop() function": [[116, "drop-column-using-pandas-dataframe-pop-function"]], "Drop column where all values are missing": [[118, "drop-column-where-all-values-are-missing"]], "Drop column where at least one value is missing": [[118, "drop-column-where-at-least-one-value-is-missing"]], "Drop column with missing values in place": [[118, "drop-column-with-missing-values-in-place"]], "Drop column with the number of NA": [[118, "drop-column-with-the-number-of-na"]], "Drop columns": [[112, "drop-columns"]], "Drop columns in pandas DataFrame": [[116, "drop-columns-in-pandas-dataframe"]], "Drop columns with NA in pandas DataFrame": [[118, "drop-columns-with-na-in-pandas-dataframe"]], "Drop duplicates and reset the index": [[117, "drop-duplicates-and-reset-the-index"], [118, "drop-duplicates-and-reset-the-index"]], "Drop duplicates but keep first": [[117, "drop-duplicates-but-keep-first"]], "Drop duplicates but keep last": [[117, "drop-duplicates-but-keep-last"]], "Drop duplicates from defined columns": [[117, "drop-duplicates-from-defined-columns"]], "Drop duplicates in pandas DataFrame": [[117, "drop-duplicates-in-pandas-dataframe"]], "Drop duplicates in place": [[117, "drop-duplicates-in-place"]], "Drop first n columns": [[116, "drop-first-n-columns"]], "Drop multiple columns": [[116, "drop-multiple-columns"]], "Drop range of columns using iloc": [[116, "drop-range-of-columns-using-iloc"]], "Drop single column": [[116, "drop-single-column"]], "Drop the last column": [[116, "drop-the-last-column"]], "Encapsulation": [[81, "encapsulation"]], "Enjoy Learning \ud83d\ude03": [[150, "enjoy-learning"]], "Enumerate": [[51, "enumerate"]], "Error Handling": [[96, "error-handling"]], "Escape Sequence": [[32, "escape-sequence"]], "Escape character \\": [[19, "escape-character"]], "Essentials": [[150, "essentials"]], "Estimating Parameters for a Gaussian": [[0, "estimating-parameters-for-a-gaussian"]], "Example 10: Print year, month, hour, minute and timestamp": [[39, "example-10-print-year-month-hour-minute-and-timestamp"]], "Example 11: Difference between two dates and times": [[39, "example-11-difference-between-two-dates-and-times"]], "Example 12: Difference between two timedelta objects": [[39, "example-12-difference-between-two-timedelta-objects"]], "Example 13: Printing negative timedelta object": [[39, "example-13-printing-negative-timedelta-object"]], "Example 14: Time duration in seconds": [[39, "example-14-time-duration-in-seconds"]], "Example 15: Format date using strftime()": [[39, "example-15-format-date-using-strftime"]], "Example 16: strptime()": [[39, "example-16-strptime"]], "Example 1:": [[26, "example-1"], [67, "example-1"]], "Example 1: Current time using datetime object": [[43, "example-1-current-time-using-datetime-object"]], "Example 1: Declaring and assigning value to a constant": [[70, "example-1-declaring-and-assigning-value-to-a-constant"]], "Example 1: Declaring and assigning value to a variable": [[70, "example-1-declaring-and-assigning-value-to-a-variable"]], "Example 1: Get Current Date and Time": [[39, "example-1-get-current-date-and-time"]], "Example 1: Python get today\u2019s date": [[42, "example-1-python-get-todays-date"]], "Example 1: Python sleep()": [[46, "example-1-python-sleep"]], "Example 1: Python timestamp to datetime": [[44, "example-1-python-timestamp-to-datetime"]], "Example 1: datetime to string using strftime()": [[40, "example-1-datetime-to-string-using-strftime"]], "Example 1: string to datetime object": [[41, "example-1-string-to-datetime-object"]], "Example 2:": [[26, "example-2"], [67, "example-2"]], "Example 2: Creating string from a timestamp": [[40, "example-2-creating-string-from-a-timestamp"]], "Example 2: Current date in different formats": [[42, "example-2-current-date-in-different-formats"]], "Example 2: Current time using time module": [[43, "example-2-current-time-using-time-module"]], "Example 2: Declaring multiple variables in one line** using comma  ,  and semicolon ;": [[70, "example-2-declaring-multiple-variables-in-one-line-using-comma-and-semicolon"]], "Example 2: Get Current Date": [[39, "example-2-get-current-date"]], "Example 2: Python create a digital clock": [[46, "example-2-python-create-a-digital-clock"]], "Example 2: Python datetime to timestamp": [[44, "example-2-python-datetime-to-timestamp"]], "Example 2: string to datetime object": [[41, "example-2-string-to-datetime-object"]], "Example 3: Changing the value of a variable": [[70, "example-3-changing-the-value-of-a-variable"]], "Example 3: Current time of a timezone": [[43, "example-3-current-time-of-a-timezone"]], "Example 3: Date object to represent a date": [[39, "example-3-date-object-to-represent-a-date"]], "Example 3: Get the current date and time": [[42, "example-3-get-the-current-date-and-time"]], "Example 3: Locale\u2019s appropriate date and time": [[40, "example-3-locales-appropriate-date-and-time"]], "Example 3: Python multithreading": [[46, "example-3-python-multithreading"]], "Example 4: Get current date": [[39, "example-4-get-current-date"]], "Example 4: Time Objects to Represent Time": [[43, "example-4-time-objects-to-represent-time"]], "Example 4: sleep() in a multithreaded program": [[46, "example-4-sleep-in-a-multithreaded-program"]], "Example 5: Difference Between Two Points in Time Using": [[43, "example-5-difference-between-two-points-in-time-using"]], "Example 5: Get date from a timestamp": [[39, "example-5-get-date-from-a-timestamp"]], "Example 6: Difference Between Two Points in Time Using timedelata": [[43, "example-6-difference-between-two-points-in-time-using-timedelata"]], "Example 6: Print today\u2019s year, month and day": [[39, "example-6-print-todays-year-month-and-day"]], "Example 7: Time object to represent time": [[39, "example-7-time-object-to-represent-time"]], "Example 8: Print hour, minute, second and microsecond": [[39, "example-8-print-hour-minute-second-and-microsecond"]], "Example 9: Python datetime object": [[39, "example-9-python-datetime-object"]], "Example : Arithmetic operators in Python": [[75, "example-arithmetic-operators-in-python"]], "Example : Comparison operators in Python": [[75, "example-comparison-operators-in-python"]], "Example : Identity operators in Python": [[75, "example-identity-operators-in-python"]], "Example : Logical operators in Python": [[75, "example-logical-operators-in-python"]], "Example : Membership operators in Python": [[75, "example-membership-operators-in-python"]], "Example : Share a global Variable Across Python Modules": [[56, "example-share-a-global-variable-across-python-modules"]], "Example Using decimal Module": [[60, "example-using-decimal-module"]], "Example Using math Module": [[60, "example-using-math-module"]], "Example Using operator Module": [[60, "example-using-operator-module"]], "Example Using os Module": [[60, "example-using-os-module"]], "Example Using random Module": [[60, "example-using-random-module"]], "Example Using statistics Module": [[60, "example-using-statistics-module"]], "Example Using string Module": [[60, "example-using-string-module"]], "Example Using sys Module": [[60, "example-using-sys-module"]], "Example of Inheritance in Python": [[83, "example-of-inheritance-in-python"]], "Example of Method Overriding in Python": [[83, "example-of-method-overriding-in-python"]], "Example of RegEx with Metacharacters": [[19, "example-of-regex-with-metacharacters"]], "Example to convert pandas DataFrame to dict": [[120, "example-to-convert-pandas-dataframe-to-dict"]], "Example:": [[29, "example"], [67, "example"]], "Example: Nested for loop": [[27, "example-nested-for-loop"]], "Example: Nested for loop to print pattern": [[27, "example-nested-for-loop-to-print-pattern"]], "Example: Nested while loop": [[28, "example-nested-while-loop"]], "Example: Nested while loop to print the pattern": [[28, "example-nested-while-loop-to-print-the-pattern"]], "Example: User-Defined Exception in Python": [[52, "example-user-defined-exception-in-python"]], "Exceptions in Python": [[51, "exceptions-in-python"]], "Exercise 10: Merge two data frames using the following condition": [[124, "exercise-10-merge-two-data-frames-using-the-following-condition"]], "Exercise 1: From the given dataset print the first and last five rows": [[124, "exercise-1-from-the-given-dataset-print-the-first-and-last-five-rows"]], "Exercise 1: Read Total profit of all months and show it using a line plot": [[103, "exercise-1-read-total-profit-of-all-months-and-show-it-using-a-line-plot"]], "Exercise 2: Clean the dataset and update the CSV file": [[124, "exercise-2-clean-the-dataset-and-update-the-csv-file"]], "Exercise 2: Get total profit of all months and show line plot with the following Style properties": [[103, "exercise-2-get-total-profit-of-all-months-and-show-line-plot-with-the-following-style-properties"]], "Exercise 3: Find the most expensive car company name": [[124, "exercise-3-find-the-most-expensive-car-company-name"]], "Exercise 3: Read all product sales data and show it  using a multiline plot": [[103, "exercise-3-read-all-product-sales-data-and-show-it-using-a-multiline-plot"]], "Exercise 4: Print All Toyota Cars details": [[124, "exercise-4-print-all-toyota-cars-details"]], "Exercise 4: Read toothpaste sales data of each month and show it using a scatter plot": [[103, "exercise-4-read-toothpaste-sales-data-of-each-month-and-show-it-using-a-scatter-plot"]], "Exercise 5: Count total cars per company": [[124, "exercise-5-count-total-cars-per-company"]], "Exercise 5: Read face cream and facewash product sales data and show it using the bar chart": [[103, "exercise-5-read-face-cream-and-facewash-product-sales-data-and-show-it-using-the-bar-chart"]], "Exercise 6: Find each company\u2019s Higesht price car": [[124, "exercise-6-find-each-companys-higesht-price-car"]], "Exercise 6: Read sales data of bathing soap of all months and show it using a bar chart. Save this plot to your hard disk": [[103, "exercise-6-read-sales-data-of-bathing-soap-of-all-months-and-show-it-using-a-bar-chart-save-this-plot-to-your-hard-disk"]], "Exercise 7: Find the average mileage of each car making company": [[124, "exercise-7-find-the-average-mileage-of-each-car-making-company"]], "Exercise 7: Read the total profit of each month and show it using the histogram to see the most common profit ranges": [[103, "exercise-7-read-the-total-profit-of-each-month-and-show-it-using-the-histogram-to-see-the-most-common-profit-ranges"]], "Exercise 8: Calculate total sale data for last year for each product and show it using a Pie chart": [[103, "exercise-8-calculate-total-sale-data-for-last-year-for-each-product-and-show-it-using-a-pie-chart"]], "Exercise 8: Sort all cars by Price column": [[124, "exercise-8-sort-all-cars-by-price-column"]], "Exercise 9: Concatenate two data frames using the following conditions": [[124, "exercise-9-concatenate-two-data-frames-using-the-following-conditions"]], "Exercise 9: Read Bathing soap facewash of all months and display it using the Subplot": [[103, "exercise-9-read-bathing-soap-facewash-of-all-months-and-display-it-using-the-subplot"]], "Exercise Question 10: Read all product sales data and show it using the stack plot": [[103, "exercise-question-10-read-all-product-sales-data-and-show-it-using-the-stack-plot"]], "Exercises \u279e <span class='label label-default'>Level 1</span>": [[17, "exercises-level-1"], [19, "exercises-level-1"], [25, "exercises-level-1"], [27, "exercises-level-1"], [33, "exercises-level-1"], [34, "exercises-level-1"], [36, "exercises-level-1"], [44, "exercises-level-1"], [48, "exercises-level-1"], [51, "exercises-level-1"], [54, "exercises-level-1"], [60, "exercises-level-1"], [70, "exercises-level-1"], [81, "exercises-level-1"]], "Exercises \u279e <span class='label label-default'>Level 2</span>": [[17, "exercises-level-2"], [19, "exercises-level-2"], [25, "exercises-level-2"], [27, "exercises-level-2"], [33, "exercises-level-2"], [34, "exercises-level-2"], [36, "exercises-level-2"], [48, "exercises-level-2"], [54, "exercises-level-2"], [60, "exercises-level-2"], [70, "exercises-level-2"], [81, "exercises-level-2"]], "Exercises \u279e <span class='label label-default'>Level 3</span>": [[17, "exercises-level-3"], [19, "exercises-level-3"], [25, "exercises-level-3"], [27, "exercises-level-3"], [36, "exercises-level-3"], [54, "exercises-level-3"], [60, "exercises-level-3"]], "Expert Level": [[149, "expert-level"]], "Exporting Data": [[112, "exporting-data"]], "FacetGrid": [[142, "facetgrid"], [142, "id1"]], "Factor Plot": [[139, "factor-plot"]], "Feature 1": [[96, "feature-1"]], "Feature 2": [[96, "feature-2"]], "Feature 3": [[96, "feature-3"]], "Feature Scaling": [[3, "feature-scaling"]], "Features (variables)": [[3, "features-variables"]], "File Positions": [[48, "file-positions"]], "File Types": [[48, "file-types"]], "File with csv Extension": [[48, "file-with-csv-extension"]], "File with json Extension": [[48, "file-with-json-extension"]], "File with txt Extension": [[48, "file-with-txt-extension"]], "File with xlsx Extension": [[48, "file-with-xlsx-extension"]], "File with xml Extension": [[48, "file-with-xml-extension"]], "Files": [[48, "files"]], "Filter, Sort, and Groupby": [[112, "filter-sort-and-groupby"]], "Filtering Data": [[123, "filtering-data"]], "Flatten Data": [[109, "flatten-data"]], "For instance if you want to generate a list of numbers": [[37, "for-instance-if-you-want-to-generate-a-list-of-numbers"]], "Format Code List": [[40, "format-code-list"], [41, "format-code-list"]], "Format output strings by its positions": [[74, "format-output-strings-by-its-positions"]], "Forward (or Feedforward) Propagation": [[6, "forward-or-feedforward-propagation"]], "Forward Propagation Example": [[6, "forward-propagation-example"]], "Frozenset methods": [[36, "frozenset-methods"]], "Function Argument and Parameter": [[57, "function-argument-and-parameter"]], "Function as a Parameter": [[16, "function-as-a-parameter"]], "Function as a Parameter of Another Function": [[57, "function-as-a-parameter-of-another-function"]], "Function as a Return Value": [[16, "function-as-a-return-value"]], "Function pass Statement": [[54, "function-pass-statement"]], "Function return Statement": [[54, "function-return-statement"]], "Functions in Python Math Module": [[62, "functions-in-python-math-module"]], "Gaussian (Normal) Distribution": [[0, "gaussian-normal-distribution"]], "Generate Random Numbers": [[109, "generate-random-numbers"]], "Generators in Python": [[15, "generators-in-python"]], "Generic Seaborn Plots:": [[129, "generic-seaborn-plots"]], "Get Current Directory getcwd() -": [[49, "get-current-directory-getcwd"]], "Get multiple input values from a user in one line": [[74, "get-multiple-input-values-from-a-user-in-one-line"]], "Get the statistics of DataFrame": [[112, "get-the-statistics-of-dataframe"]], "Getting Started with Python": [[11, "getting-started-with-python"]], "Getting back to Decorators": [[17, "getting-back-to-decorators"]], "Global Variables": [[55, "global-variables"]], "Global Variables Across Python Modules": [[56, "global-variables-across-python-modules"]], "Global and local variables": [[55, "global-and-local-variables"]], "Global in Nested Functions": [[56, "global-in-nested-functions"]], "Good news is \ud83d\ude0d": [[150, "good-news-is"]], "Gradient Computation": [[6, "gradient-computation"]], "Group the strips by a categorical variable": [[135, "group-the-strips-by-a-categorical-variable"]], "HIGH-LEVEL LANGUAGES": [[78, "high-level-languages"]], "Handling timezone in Python": [[39, "handling-timezone-in-python"]], "Help topics": [[69, "help-topics"]], "Here is a list of all the escape sequences supported by Python.": [[32, "here-is-a-list-of-all-the-escape-sequences-supported-by-python"]], "Here\u2019s my first section": [[8, "heres-my-first-section"], [90, "heres-my-first-section"], [93, "heres-my-first-section"], [146, "heres-my-first-section"], [148, "heres-my-first-section"]], "Here\u2019s my sample title": [[8, "heres-my-sample-title"], [90, "heres-my-sample-title"], [93, "heres-my-sample-title"], [146, "heres-my-sample-title"], [148, "heres-my-sample-title"]], "Hierarchical Inheritance": [[83, "hierarchical-inheritance"]], "Higher Order Functions": [[16, "higher-order-functions"]], "Histogram": [[102, "histogram"]], "How Are Sets Better Than Other DataTypes?": [[36, "how-are-sets-better-than-other-datatypes"]], "How strftime() works?": [[40, "how-strftime-works"]], "How strptime() works?": [[41, "how-strptime-works"]], "How to Install NumPy?": [[105, "how-to-install-numpy"]], "How to access characters in a string?": [[32, "how-to-access-characters-in-a-string"]], "How to call a function in python?": [[54, "how-to-call-a-function-in-python"]], "How to change or delete a string?": [[32, "how-to-change-or-delete-a-string"]], "How to create a string in Python?": [[32, "how-to-create-a-string-in-python"]], "How to get current date and time in Python?": [[42, "how-to-get-current-date-and-time-in-python"]], "How to import modules in Python?": [[60, "how-to-import-modules-in-python"]], "How to learn Python?": [[9, "how-to-learn-python"]], "How to print blank lines": [[67, "how-to-print-blank-lines"]], "How to slice a string in Python?": [[32, "how-to-slice-a-string-in-python"]], "How to slice lists in Python?": [[33, "how-to-slice-lists-in-python"]], "How to use DataFrame.head() function": [[115, "how-to-use-dataframe-head-function"]], "How to use DataFrame.tail() function": [[115, "how-to-use-dataframe-tail-function"]], "Hybrid Inheritance": [[83, "hybrid-inheritance"]], "Hypothesis": [[3, "hypothesis"]], "Hypothesis (the Model)": [[4, "hypothesis-the-model"]], "Import NumPy and Check Version": [[105, "import-numpy-and-check-version"]], "Importing Data": [[112, "importing-data"]], "Importing module from a package": [[63, "importing-module-from-a-package"]], "Importing the Package": [[96, "importing-the-package"]], "In the upcoming tutorials, we will deep dive into specific concepts of Python, hold on your breath and start your journey": [[11, "in-the-upcoming-tutorials-we-will-deep-dive-into-specific-concepts-of-python-hold-on-your-breath-and-start-your-journey"]], "Index": [[112, "index"]], "Indexing": [[112, "indexing"]], "Indexing a 1D array": [[107, "indexing-a-1d-array"]], "Indexing a 2D array (matrices)": [[107, "indexing-a-2d-array-matrices"]], "Informal introduction to python: using python as calculator": [[11, "informal-introduction-to-python-using-python-as-calculator"]], "Inheritance": [[81, "inheritance"]], "Inheritance in Python": [[83, "inheritance-in-python"]], "Initializing the Langchain": [[96, "initializing-the-langchain"]], "Insert columns": [[112, "insert-columns"]], "Inspecting Strings": [[32, "inspecting-strings"]], "Installation": [[96, "installation"]], "Instance Variables and Methods": [[81, "instance-variables-and-methods"]], "Integer array indexing": [[107, "integer-array-indexing"]], "Interactive widget to create a sequential cubehelix palette:": [[129, "interactive-widget-to-create-a-sequential-cubehelix-palette"]], "Intermediate Level": [[149, "intermediate-level"]], "Interpreter Vs Compiler": [[78, "interpreter-vs-compiler"]], "Introduction": [[96, "introduction"]], "Introduction to *args and **kwargs in Python": [[20, "introduction-to-args-and-kwargs-in-python"]], "Introduction to HuggingFace": [[94, "introduction-to-huggingface"]], "Iterate Dictionary using for loop": [[27, "iterate-dictionary-using-for-loop"]], "Iterate List using for loop": [[27, "iterate-list-using-for-loop"]], "Iterate List using while loop": [[28, "iterate-list-using-while-loop"]], "Iterate Numbers using while loop": [[28, "iterate-numbers-using-while-loop"]], "Iterate Set using for loop": [[27, "iterate-set-using-for-loop"]], "Iterate String using for loop": [[27, "iterate-string-using-for-loop"]], "Iterate String using while loop": [[28, "iterate-string-using-while-loop"]], "Iterate Tuple using for loop": [[27, "iterate-tuple-using-for-loop"]], "Iterating Through a string": [[32, "iterating-through-a-string"]], "Iterating Through an Iterator": [[14, "iterating-through-an-iterator"]], "Iterative statements": [[22, "iterative-statements"]], "Iterators in Python": [[14, "iterators-in-python"]], "Java is both Compiled and Interpreted.": [[78, "java-is-both-compiled-and-interpreted"]], "Join/Combine": [[112, "join-combine"]], "Jupyter Demos": [[0, "jupyter-demos"], [2, "jupyter-demos"], [3, "jupyter-demos"], [4, "jupyter-demos"], [6, "jupyter-demos"]], "K-Means Algorithm": [[2, "k-means-algorithm"]], "KEY DIFFERENCE": [[78, "key-difference"]], "KEY SIMILARITIES": [[78, "key-similarities"]], "Key Points to Remember": [[37, "key-points-to-remember"], [73, "key-points-to-remember"]], "Key Points to Remember:": [[81, "key-points-to-remember"]], "LM Plot and Reg Plot": [[130, "lm-plot-and-reg-plot"]], "Lambda Function": [[37, "lambda-function"]], "LangGraphs": [[98, "langgraphs"]], "LangServe": [[99, "langserve"]], "LangSmith": [[100, "langsmith"]], "Langchain expression language": [[101, "langchain-expression-language"]], "Langchain modules": [[97, "langchain-modules"]], "Learn Python Programming": [[9, "learn-python-programming"]], "Let us see valid variable names": [[70, "let-us-see-valid-variable-names"]], "Letter Value (LV) Plot": [[140, "letter-value-lv-plot"]], "Let\u2019s break down the different components of the code.": [[67, "lets-break-down-the-different-components-of-the-code"]], "Let\u2019s discuss some plots that allow us to visualize the distribution of a dataset. These plots are:": [[133, "lets-discuss-some-plots-that-allow-us-to-visualize-the-distribution-of-a-dataset-these-plots-are"]], "Let\u2019s implement with dataset": [[133, "lets-implement-with-dataset"]], "Line Graph": [[102, "line-graph"]], "Linear Algebra": [[13, "linear-algebra"]], "Linear Regression": [[3, "linear-regression"]], "Linspace": [[109, "linspace"]], "List Comprehension vs String vs For Loop in Python": [[37, "list-comprehension-vs-string-vs-for-loop-in-python"]], "List Comprehension: Elegant way to create new List": [[33, "list-comprehension-elegant-way-to-create-new-list"]], "List Comprehensions vs Lambda functions": [[37, "list-comprehensions-vs-lambda-functions"]], "List Directories and Files listdir() -": [[49, "list-directories-and-files-listdir"]], "List Index": [[33, "list-index"]], "List comprehension can be combined with if statement": [[37, "list-comprehension-can-be-combined-with-if-statement"]], "Literal Collections": [[71, "literal-collections"]], "Load Data from File": [[109, "load-data-from-file"]], "Load Fifa Data": [[102, "load-fifa-data"]], "Load Necessary Libraries": [[102, "load-necessary-libraries"]], "Load in NumPy Library": [[106, "load-in-numpy-library"]], "Loading Datasets in Seaborn": [[126, "loading-datasets-in-seaborn"]], "Loading data into Pandas": [[123, "loading-data-into-pandas"]], "Local Variables": [[55, "local-variables"]], "LogSpace": [[109, "logspace"]], "Logistic Regression": [[4, "logistic-regression"]], "Loops in Python": [[27, "loops-in-python"], [28, "loops-in-python"]], "MACHINE CODE": [[78, "machine-code"]], "Making a New Directory mkdir() -": [[49, "making-a-new-directory-mkdir"]], "Making changes to the data": [[123, "making-changes-to-the-data"]], "Markdown + notebooks": [[12, "markdown-notebooks"], [87, "markdown-notebooks"], [91, "markdown-notebooks"]], "Markdown Files": [[7, "markdown-files"], [88, "markdown-files"], [92, "markdown-files"]], "Match object": [[19, "match-object"]], "Mathematics": [[105, "mathematics"]], "Mathematics for Machine Learning": [[10, "mathematics-for-machine-learning"]], "Matplotlib": [[102, "matplotlib"]], "Matplotlib vs. Seaborn Plotting Code": [[128, "matplotlib-vs-seaborn-plotting-code"]], "Matrix Multiplication": [[108, "matrix-multiplication"]], "MetaCharacters": [[19, "metacharacters"]], "Metadata info of DataFrame": [[112, "metadata-info-of-dataframe"]], "Method Overriding": [[83, "method-overriding"]], "Method Resolution Order in Python": [[83, "method-resolution-order-in-python"]], "Method to Modify Class Default Values": [[81, "method-to-modify-class-default-values"]], "Miscellaneous": [[109, "miscellaneous"]], "Modify Object Properties": [[82, "modify-object-properties"]], "Modifying a set in Python": [[36, "modifying-a-set-in-python"]], "More": [[105, "more"], [105, "id2"]], "Multi-class Classification": [[6, "multi-class-classification"]], "Multi-class Classification (One-vs-All)": [[4, "multi-class-classification-one-vs-all"]], "Multi-line Docstrings in Python": [[64, "multi-line-docstrings-in-python"]], "Multi-line statement": [[69, "multi-line-statement"]], "Multithreading in Python": [[46, "multithreading-in-python"]], "MyST markdown": [[12, "myst-markdown"], [87, "myst-markdown"], [91, "myst-markdown"]], "Need of Encapsulation": [[81, "need-of-encapsulation"]], "Negative indexing": [[33, "negative-indexing"]], "Nested Loops in List Comprehension": [[37, "nested-loops-in-list-comprehension"]], "Nested break loops": [[29, "nested-break-loops"]], "Nested continue loops": [[29, "nested-continue-loops"]], "Nested for loops": [[27, "nested-for-loops"]], "Nested while loops": [[28, "nested-while-loops"]], "Network Model (Set of Neurons)": [[6, "network-model-set-of-neurons"]], "Neural Network": [[6, "neural-network"]], "Neuron Model (Logistic Unit)": [[6, "neuron-model-logistic-unit"]], "Nonlocal Variables": [[55, "nonlocal-variables"]], "Nonlocal variable in a nested function": [[16, "nonlocal-variable-in-a-nested-function"]], "Normal Equation": [[3, "normal-equation"]], "Notebooks with MyST Markdown": [[5, "notebooks-with-myst-markdown"], [89, "notebooks-with-myst-markdown"], [147, "notebooks-with-myst-markdown"]], "NumPy Array Types:": [[106, "numpy-array-types"]], "NumPy Basics": [[105, "numpy-basics"], [105, "id1"]], "Number Data Type in Python": [[31, "number-data-type-in-python"]], "Numpy Array basics": [[106, "numpy-array-basics"]], "Numpy Documentation": [[109, "numpy-documentation"]], "Numpy also provides many functions to create arrays:": [[106, "numpy-also-provides-many-functions-to-create-arrays"]], "OBJECT CODE": [[78, "object-code"]], "Object": [[81, "object"]], "Object Default Methods": [[81, "object-default-methods"]], "Object Method": [[81, "object-method"]], "Object Oriented Programming": [[81, "object-oriented-programming"]], "Object Properties": [[82, "object-properties"]], "Old style formatting": [[32, "old-style-formatting"]], "One or more times +": [[19, "one-or-more-times"]], "Operations": [[105, "operations"]], "Other Dictionary Operations": [[35, "other-dictionary-operations"]], "Other Frozenset methods": [[36, "other-frozenset-methods"]], "Other List Operations in Python": [[33, "other-list-operations-in-python"]], "Other Python Set Methods": [[36, "other-python-set-methods"]], "Other Set Operations": [[36, "other-set-operations"]], "Other Tuple Operations": [[34, "other-tuple-operations"]], "Output String justification": [[74, "output-string-justification"]], "Output formatting": [[74, "output-formatting"]], "Output text alignment specifying a width": [[74, "output-text-alignment-specifying-a-width"]], "Overfitting Problem": [[3, "overfitting-problem"], [4, "overfitting-problem"]], "Overloading Comparison Operators": [[84, "overloading-comparison-operators"]], "Overloading the + Operator": [[84, "overloading-the-operator"]], "Overriding parent method": [[81, "overriding-parent-method"]], "Package manager and virtual environment": [[11, "package-manager-and-virtual-environment"]], "Packing": [[51, "packing"]], "Packing Dictionaries": [[51, "packing-dictionaries"]], "Packing Lists": [[51, "packing-lists"]], "Packing and Unpacking Arguments in Python": [[51, "packing-and-unpacking-arguments-in-python"]], "PairGrid": [[141, "pairgrid"]], "Pandas DataFrame head, tail, at, iat": [[115, "pandas-dataframe-head-tail-at-iat"]], "Parameters": [[3, "parameters"]], "Parameters:": [[112, "parameters"]], "Part 1: with Iris dataset": [[141, "part-1-with-iris-dataset"]], "Part 1: with Tips dataset": [[141, "part-1-with-tips-dataset"]], "Part 1: with Titanic dataset": [[138, "part-1-with-titanic-dataset"]], "Part 2: with Tips dataset": [[138, "part-2-with-tips-dataset"]], "Passing Arguments with Key and Value": [[54, "passing-arguments-with-key-and-value"]], "Period .": [[19, "id3"]], "Pie Chart": [[102, "pie-chart"]], "Pie Chart #1": [[102, "pie-chart-1"]], "Pie Chart #2": [[102, "pie-chart-2"]], "Pie Chart #3": [[102, "pie-chart-3"]], "Placeholders": [[105, "placeholders"]], "Plot the distribution on the vertical axis:": [[133, "plot-the-distribution-on-the-vertical-axis"]], "Polymorphism": [[81, "polymorphism"]], "Polynomial Regression": [[3, "polynomial-regression"]], "Positional Arguments (Basic)": [[57, "positional-arguments-basic"]], "Practice Problem": [[74, "practice-problem"]], "Prerequisites for learning decorators": [[17, "prerequisites-for-learning-decorators"]], "Print end command": [[67, "print-end-command"]], "Private members of parent class": [[83, "private-members-of-parent-class"]], "Programming Steps Comparision:": [[78, "programming-steps-comparision"]], "Python  Classes and Objects": [[82, "python-classes-and-objects"]], "Python **kwargs": [[20, "python-kwargs"]], "Python *args": [[20, "python-args"]], "Python *args and **kwargs": [[20, "python-args-and-kwargs"]], "Python - filter Function": [[17, "python-filter-function"]], "Python - map Function": [[17, "python-map-function"]], "Python @property decorator": [[18, "python-property-decorator"]], "Python Advanced Topics": [[9, "python-advanced-topics"], [21, "python-advanced-topics"]], "Python Anonymous/lambda Function": [[59, "python-anonymous-lambda-function"]], "Python Applications Area": [[11, "python-applications-area"]], "Python Arbitrary/Variable-length Arguments": [[57, "python-arbitrary-variable-length-arguments"]], "Python Built-In Modules Examples": [[60, "python-built-in-modules-examples"]], "Python Built-in Exceptions": [[50, "python-built-in-exceptions"]], "Python Built-in List Functions": [[33, "python-built-in-list-functions"]], "Python Built-in Tuple Functions": [[34, "python-built-in-tuple-functions"]], "Python Classes and Objects": [[82, "id1"]], "Python Closures": [[16, "python-closures"]], "Python Comments": [[64, "python-comments"]], "Python Comments Using Strings": [[64, "python-comments-using-strings"]], "Python Comments vs Docstrings": [[64, "python-comments-vs-docstrings"]], "Python Custom Exceptions": [[52, "python-custom-exceptions"]], "Python Data Types": [[9, "python-data-types"], [38, "python-data-types"], [72, "python-data-types"]], "Python DataFrame": [[112, "python-dataframe"]], "Python Date & Time Module": [[9, "python-date-time-module"], [47, "python-date-time-module"]], "Python Decimal": [[31, "python-decimal"]], "Python Decorators": [[17, "python-decorators"]], "Python Default Arguments": [[57, "python-default-arguments"]], "Python Dictionary": [[35, "python-dictionary"]], "Python Dictionary Comprehension": [[35, "python-dictionary-comprehension"]], "Python Dictionary Methods": [[35, "python-dictionary-methods"]], "Python Directory": [[49, "python-directory"]], "Python Directory and Files Management": [[49, "python-directory-and-files-management"]], "Python Docstrings": [[64, "python-docstrings"]], "Python Errors and Built-in Exceptions": [[50, "python-errors-and-built-in-exceptions"]], "Python Exceptions Handling Using try, except and finally statement": [[51, "python-exceptions-handling-using-try-except-and-finally-statement"]], "Python File I/O": [[48, "python-file-i-o"]], "Python File Methods": [[48, "python-file-methods"]], "Python Files": [[9, "python-files"], [53, "python-files"]], "Python Flow Control": [[9, "python-flow-control"], [30, "python-flow-control"]], "Python Flow-Control (Decision-Making) Statements": [[22, "python-flow-control-decision-making-statements"]], "Python Fractions": [[31, "python-fractions"]], "Python Frozenset": [[36, "python-frozenset"]], "Python Function Arguments": [[57, "python-function-arguments"]], "Python Functions": [[9, "python-functions"], [54, "python-functions"], [66, "python-functions"]], "Python Generator Expression": [[15, "python-generator-expression"]], "Python Generators with a Loop": [[15, "python-generators-with-a-loop"]], "Python Get Current time": [[43, "python-get-current-time"]], "Python Global, Local and Nonlocal variables": [[55, "python-global-local-and-nonlocal-variables"]], "Python Hello, World": [[67, "python-hello-world"]], "Python Infinite Iterators": [[14, "python-infinite-iterators"]], "Python Inheritance": [[83, "python-inheritance"]], "Python Input, Output and Import": [[74, "python-input-output-and-import"]], "Python Installation": [[11, "python-installation"]], "Python Introduction": [[9, "python-introduction"], [80, "python-introduction"]], "Python Iterators": [[14, "python-iterators"]], "Python Keyword Arguments": [[57, "python-keyword-arguments"]], "Python Keywords and Identifiers": [[68, "python-keywords-and-identifiers"]], "Python List": [[33, "python-list"]], "Python List Comprehension": [[37, "python-list-comprehension"]], "Python List Methods": [[33, "python-list-methods"]], "Python List Operations": [[33, "python-list-operations"]], "Python Literals": [[71, "python-literals"]], "Python Mathematical Functions": [[62, "python-mathematical-functions"]], "Python Mathematics": [[31, "python-mathematics"]], "Python Matplotlib": [[103, "python-matplotlib"], [104, "python-matplotlib"]], "Python Matplotlib Module": [[9, "python-matplotlib-module"]], "Python Module Search Path": [[60, "python-module-search-path"]], "Python Modules": [[60, "python-modules"]], "Python Modules List": [[60, "python-modules-list"]], "Python Multilevel Inheritance": [[83, "python-multilevel-inheritance"]], "Python Multiple Inheritance": [[83, "python-multiple-inheritance"]], "Python Namespace and Scope": [[76, "python-namespace-and-scope"]], "Python Nested if statement": [[26, "python-nested-if-statement"]], "Python NumPy": [[105, "python-numpy"]], "Python NumPy Array:": [[105, "python-numpy-array"], [106, "python-numpy-array"]], "Python NumPy Exercises": [[110, "python-numpy-exercises"]], "Python Numbers, Type Conversion and Mathematics": [[31, "python-numbers-type-conversion-and-mathematics"]], "Python Numpy Module": [[9, "python-numpy-module"], [111, "python-numpy-module"]], "Python OOPs Concepts": [[81, "python-oops-concepts"]], "Python Object Class": [[9, "python-object-class"], [85, "python-object-class"]], "Python Operator Overloading": [[84, "python-operator-overloading"], [84, "id1"]], "Python Operators": [[75, "python-operators"]], "Python Package": [[63, "python-package"]], "Python Pandas": [[112, "python-pandas"], [123, "python-pandas"], [124, "python-pandas"]], "Python Pandas Module": [[9, "python-pandas-module"], [125, "python-pandas-module"]], "Python Python Generators": [[15, "python-python-generators"]], "Python Random Module": [[61, "python-random-module"]], "Python Recursion": [[58, "python-recursion"]], "Python Recursive Function": [[58, "python-recursive-function"]], "Python RegEx": [[19, "python-regex"]], "Python RegEx Methods": [[19, "python-regex-methods"]], "Python Resources": [[9, "python-resources"]], "Python Seaborn": [[145, "python-seaborn"]], "Python Set Operations": [[36, "python-set-operations"]], "Python Sets": [[36, "python-sets"]], "Python Single Inheritance": [[83, "python-single-inheritance"]], "Python Special Functions": [[84, "python-special-functions"]], "Python Statement, Indentation and Comments": [[69, "python-statement-indentation-and-comments"]], "Python String Formatting": [[32, "python-string-formatting"]], "Python String Replication Operator (*)": [[32, "python-string-replication-operator"]], "Python Strings": [[11, "python-strings"], [32, "python-strings"]], "Python Strings Operations": [[32, "python-strings-operations"]], "Python Tuple": [[34, "python-tuple"]], "Python Type Conversion and Type Casting": [[73, "python-type-conversion-and-type-casting"]], "Python User-defined Functions": [[65, "python-user-defined-functions"]], "Python Variable Scope": [[76, "python-variable-scope"]], "Python Variables and Constants": [[70, "python-variables-and-constants"]], "Python __doc__ attribute": [[64, "python-doc-attribute"]], "Python datetime": [[39, "python-datetime"]], "Python docstrings": [[64, "id1"]], "Python for Loop": [[27, "python-for-loop"]], "Python format datetime": [[39, "python-format-datetime"]], "Python from-import statement": [[60, "python-from-import-statement"]], "Python global Keyword": [[56, "python-global-keyword"]], "Python if statement": [[23, "python-if-statement"]], "Python if-elif-else statement": [[25, "python-if-elif-else-statement"]], "Python if-else statement": [[24, "python-if-else-statement"]], "Python import statement": [[60, "python-import-statement"]], "Python lists": [[11, "python-lists"]], "Python sleep()": [[46, "python-sleep"]], "Python strftime()": [[40, "python-strftime"]], "Python strftime() - datetime object to string": [[39, "python-strftime-datetime-object-to-string"]], "Python strptime()": [[41, "python-strptime"]], "Python strptime() - string to datetime": [[39, "python-strptime-string-to-datetime"]], "Python super() function": [[83, "python-super-function"]], "Python time Module": [[45, "python-time-module"]], "Python time.asctime()": [[45, "python-time-asctime"]], "Python time.ctime()": [[45, "python-time-ctime"]], "Python time.gmtime()": [[45, "python-time-gmtime"]], "Python time.localtime()": [[45, "python-time-localtime"]], "Python time.mktime()": [[45, "python-time-mktime"]], "Python time.sleep()": [[45, "python-time-sleep"]], "Python time.strftime()": [[45, "python-time-strftime"]], "Python time.strptime()": [[45, "python-time-strptime"]], "Python time.time()": [[45, "python-time-time"]], "Python timestamp to datetime and vice-versa": [[44, "python-timestamp-to-datetime-and-vice-versa"]], "Python try with else clause": [[51, "python-try-with-else-clause"]], "Python try-finally Clause": [[51, "python-try-finally-clause"]], "Python while Loop": [[28, "python-while-loop"]], "Quantifier {}": [[19, "quantifier"]], "Quickly add YAML metadata for MyST Notebooks": [[5, "quickly-add-yaml-metadata-for-myst-notebooks"], [89, "quickly-add-yaml-metadata-for-myst-notebooks"], [147, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Quiz time": [[107, "quiz-time"]], "Raise error while renaming a column": [[119, "raise-error-while-renaming-a-column"]], "Raising Exceptions in Python": [[51, "raising-exceptions-in-python"]], "Raising an Exception": [[51, "raising-an-exception"]], "Random Initialization": [[6, "random-initialization"]], "Random number": [[106, "random-number"]], "Raw String to ignore escape sequence": [[32, "raw-string-to-ignore-escape-sequence"]], "Reading Data in Pandas": [[123, "reading-data-in-pandas"]], "Real World Examples": [[102, "real-world-examples"]], "Real world use cases": [[150, "real-world-use-cases"]], "References": [[0, "references"], [2, "references"], [3, "references"], [4, "references"], [6, "references"]], "Regularization": [[3, "regularization"], [4, "regularization"]], "Reloading a module": [[60, "reloading-a-module"]], "Removing a Directory or a File remove() and rmdir() -": [[49, "removing-a-directory-or-a-file-remove-and-rmdir"]], "Removing elements from Dictionary": [[35, "removing-elements-from-dictionary"]], "Removing elements from a set": [[36, "removing-elements-from-a-set"]], "Rename a single column": [[119, "rename-a-single-column"]], "Rename all columns with a list": [[119, "rename-all-columns-with-a-list"]], "Rename column by adding prefix/suffix": [[119, "rename-column-by-adding-prefix-suffix"]], "Rename column by index position": [[119, "rename-column-by-index-position"]], "Rename column in multi-index DataFrame": [[119, "rename-column-in-multi-index-dataframe"]], "Rename column using DataFrame.set_axis()": [[119, "rename-column-using-dataframe-set-axis"]], "Rename column using a function": [[119, "rename-column-using-a-function"]], "Rename columns by removing leading and trailing spaces": [[119, "rename-columns-by-removing-leading-and-trailing-spaces"]], "Rename columns in Pandas DataFrame": [[119, "rename-columns-in-pandas-dataframe"]], "Rename columns in all levels": [[119, "rename-columns-in-all-levels"]], "Rename columns in defined level": [[119, "rename-columns-in-defined-level"]], "Rename columns in place": [[119, "rename-columns-in-place"]], "Rename multiple columns": [[119, "rename-multiple-columns"]], "Renaming a Directory or a File rename() -": [[49, "renaming-a-directory-or-a-file-rename"]], "Reset index and change column name": [[122, "reset-index-and-change-column-name"]], "Reset index and creates new column in level": [[122, "reset-index-and-creates-new-column-in-level"]], "Reset index and name other level": [[122, "reset-index-and-name-other-level"]], "Reset index by level": [[122, "reset-index-by-level"]], "Reset index in pandas DataFrame": [[122, "reset-index-in-pandas-dataframe"]], "Reset index in place": [[122, "reset-index-in-place"]], "Reset index starts from 1": [[122, "reset-index-starts-from-1"]], "Reset index to starts at 0": [[122, "reset-index-to-starts-at-0"]], "Reset index to the range of numbers": [[122, "reset-index-to-the-range-of-numbers"]], "Reset index without new column": [[122, "reset-index-without-new-column"]], "Reset multi-level index": [[122, "reset-multi-level-index"]], "Reshape Data": [[109, "reshape-data"]], "Residplot()": [[132, "residplot"]], "Resources": [[104, "resources"], [111, "resources"], [125, "resources"], [145, "resources"]], "Return Boolean Values": [[54, "return-boolean-values"]], "Return Multiple Values": [[54, "return-multiple-values"]], "Return Single Value": [[54, "return-single-value"]], "Return a List": [[54, "return-a-list"]], "Reverse for loop": [[27, "reverse-for-loop"]], "Reverse for loop using range()": [[27, "reverse-for-loop-using-range"]], "Reverse while loop": [[28, "reverse-while-loop"]], "Rules and Naming Convention for Variables and constants": [[70, "rules-and-naming-convention-for-variables-and-constants"]], "Rules for writing identifiers": [[68, "rules-for-writing-identifiers"]], "Rules of global Keyword": [[56, "rules-of-global-keyword"]], "Running the \u201cHello, World!\u201d Program": [[67, "running-the-hello-world-program"]], "Sample Roles and Directives": [[88, "sample-roles-and-directives"], [92, "sample-roles-and-directives"]], "Saving as JSON File": [[48, "saving-as-json-file"]], "Saving our Data (Exporting into Desired Format)": [[123, "saving-our-data-exporting-into-desired-format"]], "Scatter Plot and Joint Plot": [[131, "scatter-plot-and-joint-plot"]], "Seaborn Color Palettes": [[129, "seaborn-color-palettes"]], "Seaborn Lmplots:": [[130, "seaborn-lmplots"]], "Seaborn Regplots:": [[130, "seaborn-regplots"]], "Seaborn: Box Plot": [[136, "seaborn-box-plot"]], "Seaborn: Categorical Data Plots": [[134, "seaborn-categorical-data-plots"]], "Seaborn: Strip Plot": [[135, "seaborn-strip-plot"]], "Seaborn: Violin Plot": [[137, "seaborn-violin-plot"]], "Select bottom n rows in pandas DataFrame": [[115, "select-bottom-n-rows-in-pandas-dataframe"]], "Select bottom rows except for first n rows": [[115, "select-bottom-rows-except-for-first-n-rows"]], "Select bottom rows from the multi index DataFrame": [[115, "select-bottom-rows-from-the-multi-index-dataframe"]], "Select top n rows in pandas DataFrame": [[115, "select-top-n-rows-in-pandas-dataframe"]], "Select top rows except for last n rows": [[115, "select-top-rows-except-for-last-n-rows"]], "Select top rows from multi-index DataFrames": [[115, "select-top-rows-from-multi-index-dataframes"]], "Select value using row and column labels using DataFrame.at": [[115, "select-value-using-row-and-column-labels-using-dataframe-at"]], "Select value using row and column position using DataFrame.iat": [[115, "select-value-using-row-and-column-position-using-dataframe-iat"]], "Selection": [[112, "selection"]], "Self Can Be Avoided": [[86, "self-can-be-avoided"]], "Self Is Here To Stay": [[86, "self-is-here-to-stay"]], "Series": [[112, "series"]], "Set Difference": [[36, "set-difference"]], "Set Intersection": [[36, "set-intersection"]], "Set Symmetric Difference": [[36, "set-symmetric-difference"]], "Set Union": [[36, "set-union"]], "Set index but keep column": [[121, "set-index-but-keep-column"]], "Set index by column number": [[121, "set-index-by-column-number"]], "Set index by keeping old index": [[121, "set-index-by-keeping-old-index"]], "Set index in pandas DataFrame": [[121, "set-index-in-pandas-dataframe"]], "Set index in place": [[121, "set-index-in-place"]], "Set index using a Python range": [[121, "set-index-using-a-python-range"]], "Set index using a column": [[121, "set-index-using-a-column"]], "Set index using a column with duplicates": [[121, "set-index-using-a-column-with-duplicates"]], "Set index using a list": [[121, "set-index-using-a-list"]], "Set index using multiple columns": [[121, "set-index-using-multiple-columns"]], "Set multi-index using a list and column": [[121, "set-multi-index-using-a-list-and-column"]], "Set multi-index using two Python series": [[121, "set-multi-index-using-two-python-series"]], "Set specific value in pandas DataFrame": [[115, "set-specific-value-in-pandas-dataframe"], [115, "id1"]], "Shortcut for if statement (Short-hand if or one-line if)": [[23, "shortcut-for-if-statement-short-hand-if-or-one-line-if"]], "Shortcut of if else (Short Hand if \u2026 else or One line if else)": [[24, "shortcut-of-if-else-short-hand-if-else-or-one-line-if-else"]], "Single Parameter:": [[54, "single-parameter"]], "Single-line docstrings in Python": [[64, "single-line-docstrings-in-python"]], "Slicing and Subsetting": [[105, "slicing-and-subsetting"]], "Solution to Overfitting": [[3, "solution-to-overfitting"], [4, "solution-to-overfitting"]], "Sorting/Describing Data": [[123, "sorting-describing-data"]], "Special Sequences": [[19, "special-sequences"]], "Special literals": [[71, "special-literals"]], "Specify Pattern Using RegEx": [[19, "specify-pattern-using-regex"]], "Specifying a sign while displaying output numbers": [[74, "specifying-a-sign-while-displaying-output-numbers"]], "Spreading in Python": [[51, "spreading-in-python"]], "Square Brackets []": [[19, "id2"]], "Statistics": [[109, "statistics"], [112, "statistics"]], "String Concatenation Operator (+)": [[32, "string-concatenation-operator"]], "Summary": [[32, "summary"], [33, "summary"], [34, "summary"], [35, "summary"], [36, "summary"], [112, "summary"]], "Summary - MetaCharacters": [[19, "summary-metacharacters"]], "Summary:": [[107, "summary"], [112, "id1"]], "Swarm Plot": [[134, "swarm-plot"], [135, "swarm-plot"]], "Syntax :": [[24, "syntax"], [27, "syntax"]], "Syntax of List Comprehension": [[37, "syntax-of-list-comprehension"]], "Syntax:": [[23, "syntax"], [25, "syntax"], [26, "syntax"], [28, "syntax"]], "Table of Contents": [[96, "table-of-contents"]], "Target Audience \ud83e\uddd0": [[150, "target-audience"]], "The @property Decorator": [[18, "the-property-decorator"]], "The Algorithm": [[2, "the-algorithm"]], "The DataFrame.drop() function": [[116, "the-dataframe-drop-function"]], "The DataFrame.drop_duplicates() function": [[117, "the-dataframe-drop-duplicates-function"]], "The DataFrame.dropna() function": [[118, "the-dataframe-dropna-function"]], "The DataFrame.rename() function": [[119, "the-dataframe-rename-function"]], "The DataFrame.reset_index() function": [[122, "the-dataframe-reset-index-function"]], "The DataFrame.set_index() function": [[121, "the-dataframe-set-index-function"]], "The DataFrame.to_dict() function": [[120, "the-dataframe-to-dict-function"]], "The Difference\u2026": [[23, "the-difference"]], "The difference\u2026": [[24, "the-difference"]], "The dir() built-in function": [[60, "the-dir-built-in-function"]], "The except Clause with Multiple Exceptions": [[51, "the-except-clause-with-multiple-exceptions"]], "The except Clause with No Exceptions": [[51, "the-except-clause-with-no-exceptions"]], "The file Object Attributes": [[48, "the-file-object-attributes"]], "The format() Method for Formatting Strings": [[32, "the-format-method-for-formatting-strings"]], "The from_dict() function": [[113, "the-from-dict-function"]], "The property Class": [[18, "the-property-class"]], "Things to Remember": [[68, "things-to-remember"]], "Things to Remember:": [[20, "things-to-remember"]], "Time Series & LV Plot": [[140, "time-series-lv-plot"]], "Time-Series Plot": [[140, "time-series-plot"]], "To customize the display of DataFrame while printing": [[112, "to-customize-the-display-of-dataframe-while-printing"]], "Toolbox": [[150, "toolbox"]], "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80": [[95, "tools-to-get-a-launch"]], "Topics on Learning Data Science and Machine Learning": [[149, "topics-on-learning-data-science-and-machine-learning"]], "Training Set": [[4, "training-set"]], "Transfer statements": [[22, "transfer-statements"]], "Tuple Methods": [[34, "tuple-methods"]], "Tuple Operations": [[34, "tuple-operations"]], "Two Parameter:": [[54, "two-parameter"]], "Type Conversion": [[31, "type-conversion"]], "Type Conversion of Numbers in Python": [[71, "type-conversion-of-numbers-in-python"]], "Types Of Inheritance": [[83, "types-of-inheritance"]], "Types of Constructors": [[82, "types-of-constructors"]], "Types of Functions": [[54, "types-of-functions"]], "Universal  Array Functions (Mathematical operations)": [[108, "universal-array-functions-mathematical-operations"]], "Unpacking": [[51, "unpacking"]], "Unpacking Dictionaries": [[51, "unpacking-dictionaries"]], "Unpacking List or a Tuple": [[51, "unpacking-list-or-a-tuple"]], "Unpacking Lists": [[51, "unpacking-lists"]], "Unpacking a sequence into separate variables": [[77, "unpacking-a-sequence-into-separate-variables"]], "Use __new__ or __init__?": [[86, "use-new-or-init"]], "Use lambda expressions to rename": [[119, "use-lambda-expressions-to-rename"]], "Use of Python Generators": [[15, "use-of-python-generators"]], "Use of global Keyword": [[56, "use-of-global-keyword"]], "Use of inheritance": [[81, "use-of-inheritance"]], "Use of lambda Function in python": [[59, "use-of-lambda-function-in-python"]], "Using Control Statement in for loops in Python": [[27, "using-control-statement-in-for-loops-in-python"]], "Using Control Statement in while loops in Python": [[28, "using-control-statement-in-while-loops-in-python"]], "Using Getters and Setters": [[18, "using-getters-and-setters"]], "Using Langchain": [[96, "using-langchain"]], "Using Python inside Jupyter notebook": [[11, "using-python-inside-jupyter-notebook"]], "Using a code editor of your choice": [[11, "using-a-code-editor-of-your-choice"]], "Using drop with axis='columns' or axis=1": [[116, "using-drop-with-axis-columns-or-axis-1"]], "Using python in a jupyter notebook": [[11, "using-python-in-a-jupyter-notebook"]], "Using r prefix before RegEx": [[19, "using-r-prefix-before-regex"]], "Using rename with axis='columns' or axis=1": [[119, "using-rename-with-axis-columns-or-axis-1"]], "Using the help() Function for Docstrings": [[64, "using-the-help-function-for-docstrings"]], "Utilizing Langchain Features": [[96, "utilizing-langchain-features"]], "ValueError in strptime()": [[41, "valueerror-in-strptime"]], "Variable Function Arguments": [[57, "variable-function-arguments"]], "Vectorized Implementation of Forward Propagation": [[6, "vectorized-implementation-of-forward-propagation"]], "Viewing/Inspecting Data": [[112, "viewing-inspecting-data"]], "Welcome to my technical diary \ud83e\udd2f": [[150, "welcome-to-my-technical-diary"]], "What Happens Internally?": [[86, "what-happens-internally"]], "What are lambda functions in Python?": [[59, "what-are-lambda-functions-in-python"]], "What are modules in Python?": [[60, "what-are-modules-in-python"]], "What are packages?": [[63, "what-are-packages"]], "What are user-defined functions in Python?": [[65, "what-are-user-defined-functions-in-python"]], "What is Compiler?": [[78, "what-is-compiler"]], "What is DataFrame in Pandas": [[112, "what-is-dataframe-in-pandas"]], "What is Dictionary in Python?": [[35, "what-is-dictionary-in-python"]], "What is Distribution Plots?": [[133, "what-is-distribution-plots"]], "What is Interpreter?": [[78, "what-is-interpreter"]], "What is List in Python?": [[33, "what-is-list-in-python"]], "What is MyST?": [[7, "what-is-myst"], [88, "what-is-myst"], [92, "what-is-myst"]], "What is Name in Python?": [[76, "what-is-name-in-python"]], "What is Set in Python?": [[36, "what-is-set-in-python"]], "What is String in Python?": [[32, "what-is-string-in-python"]], "What is Tuple in Python?": [[34, "what-is-tuple-in-python"]], "What is a Namespace in Python?": [[76, "what-is-a-namespace-in-python"]], "What is a function in Python?": [[54, "what-is-a-function-in-python"]], "What is cluster map?": [[144, "what-is-cluster-map"]], "What is for loop in Python?": [[27, "what-is-for-loop-in-python"]], "What is global keyword?": [[56, "what-is-global-keyword"]], "What is heat map?": [[143, "what-is-heat-map"]], "What is hstack?": [[109, "what-is-hstack"]], "What is math module in Python?": [[62, "what-is-math-module-in-python"]], "What is recursion?": [[58, "what-is-recursion"]], "What is self in Python?": [[86, "what-is-self-in-python"]], "What is vstack?": [[109, "what-is-vstack"]], "What is while loop in Python?": [[28, "what-is-while-loop-in-python"]], "What\u2019s inside datetime?": [[39, "whats-inside-datetime"]], "When do we have closures?": [[16, "when-do-we-have-closures"]], "When to use Decimal instead of float?": [[31, "when-to-use-decimal-instead-of-float"]], "When to use closures?": [[16, "when-to-use-closures"]], "While loop in Python FAQs": [[28, "while-loop-in-python-faqs"]], "Why Learn Python?": [[9, "why-learn-python"]], "Why and When to use while loop in Python": [[28, "why-and-when-to-use-while-loop-in-python"]], "Why is self explicitly defined everytime?": [[86, "why-is-self-explicitly-defined-everytime"]], "Why should we use Tuple? (Advantages of Tuple)": [[34, "why-should-we-use-tuple-advantages-of-tuple"]], "Why super() keyword": [[83, "why-super-keyword"]], "Why use NumPy?": [[105, "why-use-numpy"]], "Why use for loop?": [[27, "why-use-for-loop"]], "Wide format (untidy)": [[143, "wide-format-untidy"]], "Working of for loop for Iterators": [[14, "working-of-for-loop-for-iterators"]], "Working with large amounts of data": [[123, "working-with-large-amounts-of-data"]], "Wrap up": [[60, "wrap-up"]], "Writing the \u201cHello, World!\u201d Program": [[51, "writing-the-hello-world-program"], [67, "writing-the-hello-world-program"]], "Zero or more times *": [[19, "zero-or-more-times"]], "Zero or one time ?": [[19, "zero-or-one-time"]], "Zip": [[51, "zip"]], "[] . ^ $ * + ? {} () \\ |": [[19, "id1"]], "\\A - Matches if the specified characters are at the start of a string.": [[19, "a-matches-if-the-specified-characters-are-at-the-start-of-a-string"]], "\\B - Opposite of \\b. Matches if the specified characters are not at the beginning or end of a word.": [[19, "b-opposite-of-b-matches-if-the-specified-characters-are-not-at-the-beginning-or-end-of-a-word"]], "\\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \\t\\n\\r\\f\\v].": [[19, "s-matches-where-a-string-contains-any-non-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\W - Matches any non-alphanumeric character. Equivalent to [^a-zA-Z0-9_].": [[19, "w-matches-any-non-alphanumeric-character-equivalent-to-a-za-z0-9"]], "\\Z - Matches if the specified characters are at the end of a string.": [[19, "z-matches-if-the-specified-characters-are-at-the-end-of-a-string"]], "\\b - Matches if the specified characters are at the beginning or end of a word.": [[19, "b-matches-if-the-specified-characters-are-at-the-beginning-or-end-of-a-word"]], "\\d - Matches any non-decimal digit. Equivalent to [^0-9]": [[19, "d-matches-any-non-decimal-digit-equivalent-to-0-9"]], "\\s - Matches where a string contains any whitespace character. Equivalent to [ \\t\\n\\r\\f\\v].": [[19, "s-matches-where-a-string-contains-any-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.": [[19, "w-matches-any-alphanumeric-character-digits-and-alphabets-equivalent-to-a-za-z0-9-by-the-way-underscore-is-also-considered-an-alphanumeric-character"]], "__init__() is not a constructor": [[86, "init-is-not-a-constructor"]], "a) break in for loop": [[27, "a-break-in-for-loop"]], "a) break in while loop": [[28, "a-break-in-while-loop"]], "all(dict) - The all() function returns True when all elements in the given iterable are true. If not, it returns False.": [[35, "all-dict-the-all-function-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "all(list) - The method all() method returns True when all elements in the given iterable are true. If not, it returns False.": [[33, "all-list-the-method-all-method-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "any(dict) - The any() function returns True if any element of an iterable is True. If not, any() returns False.": [[35, "any-dict-the-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "any(list) - any() function returns True if any element of an iterable is True. If not, any() returns False.": [[33, "any-list-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "append() - The append() method adds an item to the end of the list.": [[33, "append-the-append-method-adds-an-item-to-the-end-of-the-list"]], "arange()": [[109, "arange"]], "asarray()": [[109, "asarray"]], "b) continue in for loop": [[27, "b-continue-in-for-loop"]], "b) continue in while loop": [[28, "b-continue-in-while-loop"]], "boxplot() and violinplot()": [[138, "boxplot-and-violinplot"]], "c) pass in for loop": [[27, "c-pass-in-for-loop"]], "c) pass in while loop": [[28, "c-pass-in-while-loop"]], "clear() - The clear() method removes all items from the list.": [[33, "clear-the-clear-method-removes-all-items-from-the-list"]], "clear() - The method clear() removes all items from the dictionary.": [[35, "clear-the-method-clear-removes-all-items-from-the-dictionary"]], "continue statement in while loop": [[29, "continue-statement-in-while-loop"]], "continue statement with else statements": [[29, "continue-statement-with-else-statements"]], "copy()  - The copy() method returns a shallow copy of the list.": [[33, "copy-the-copy-method-returns-a-shallow-copy-of-the-list"]], "copy() - The method copy() returns a shallow copy of the dictionary.": [[35, "copy-the-method-copy-returns-a-shallow-copy-of-the-dictionary"]], "count() - The count() method returns the number of times the specified element appears in the list.": [[33, "count-the-count-method-returns-the-number-of-times-the-specified-element-appears-in-the-list"]], "datetime.date Class": [[39, "datetime-date-class"]], "datetime.datetime": [[39, "datetime-datetime"]], "datetime.time": [[39, "datetime-time"]], "datetime.timedelta": [[39, "datetime-timedelta"]], "extend() - The extend() method adds all the elements of an iterable (list, tuple, string etc.) to the end of the list.": [[33, "extend-the-extend-method-adds-all-the-elements-of-an-iterable-list-tuple-string-etc-to-the-end-of-the-list"]], "for  loop in one line": [[27, "for-loop-in-one-line"]], "for loop inside for loop": [[27, "for-loop-inside-for-loop"]], "for loop inside while loop": [[28, "for-loop-inside-while-loop"]], "for loop with else": [[27, "for-loop-with-else"]], "for loop with if-else": [[27, "for-loop-with-if-else"]], "for loop with range() function": [[27, "for-loop-with-range-function"]], "fromkeys() - The method fromkeys() creates a new dictionary with keys from seq and values set to value.": [[35, "fromkeys-the-method-fromkeys-creates-a-new-dictionary-with-keys-from-seq-and-values-set-to-value"]], "heatmap": [[143, "heatmap"]], "heatmap colors": [[143, "heatmap-colors"]], "heatmap data": [[143, "heatmap-data"]], "if-elif-else statements and Logical Operator": [[25, "if-elif-else-statements-and-logical-operator"]], "if-elif-else statements or Logical Operator": [[25, "if-elif-else-statements-or-logical-operator"]], "if-elif-else statements with logical operators": [[25, "if-elif-else-statements-with-logical-operators"]], "import all names": [[60, "import-all-names"]], "import multiple modules": [[60, "import-multiple-modules"]], "import with renaming": [[60, "import-with-renaming"]], "index() - The index() method returns the index of the specified element in the list.": [[33, "index-the-index-method-returns-the-index-of-the-specified-element-in-the-list"]], "insert() - The insert() method inserts an element to the list at the specified index.": [[33, "insert-the-insert-method-inserts-an-element-to-the-list-at-the-specified-index"]], "issubclass()": [[83, "issubclass"]], "itmes() - The method items() returns a list of dict\u2019s (key, value) tuple pairs.": [[35, "itmes-the-method-items-returns-a-list-of-dicts-key-value-tuple-pairs"]], "keys() - The method keys() returns a list of all the available keys in the dictionary.": [[35, "keys-the-method-keys-returns-a-list-of-all-the-available-keys-in-the-dictionary"]], "lambda function use with filter()": [[59, "lambda-function-use-with-filter"]], "lambda function with map()": [[59, "lambda-function-with-map"]], "lambda function with reduce()": [[59, "lambda-function-with-reduce"]], "len(dict) - The len() function gives the total length of the dictionary. This would be equal to the number of items in the dictionary.": [[35, "len-dict-the-len-function-gives-the-total-length-of-the-dictionary-this-would-be-equal-to-the-number-of-items-in-the-dictionary"]], "len(list) - The len() method returns the number of elements in the list.": [[33, "len-list-the-len-method-returns-the-number-of-elements-in-the-list"]], "len(tuple) - The len() method returns the number of elements in the tuple.": [[34, "len-tuple-the-len-method-returns-the-number-of-elements-in-the-tuple"]], "math module Functions:": [[60, "math-module-functions"]], "max(list) - The max() method returns the elements from the list with maximum value.": [[33, "max-list-the-max-method-returns-the-elements-from-the-list-with-maximum-value"]], "max(tuple) - The max() method returns the elements from the tuple with maximum value. Type of element should be same otherwise complier throw TypeError.": [[34, "max-tuple-the-max-method-returns-the-elements-from-the-tuple-with-maximum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "max, min, argmax, argmin": [[106, "max-min-argmax-argmin"]], "min(list) - this method is used to get min value from the list. In Python3 lists element\u2019s type should be same otherwise compiler throw type Error.": [[33, "min-list-this-method-is-used-to-get-min-value-from-the-list-in-python3-lists-elements-type-should-be-same-otherwise-compiler-throw-type-error"]], "min(tuple) - The min() method returns the elements from the tuple with minimum value. Type of element should be same otherwise complier throw TypeError.": [[34, "min-tuple-the-min-method-returns-the-elements-from-the-tuple-with-minimum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "pop() - The pop() method removes the item at the given index from the list and returns the removed item.": [[33, "pop-the-pop-method-removes-the-item-at-the-given-index-from-the-list-and-returns-the-removed-item"]], "rand": [[106, "rand"]], "randint": [[106, "randint"]], "randn": [[106, "randn"]], "remove() - The remove() method removes the first matching element (which is passed as an argument) from the list.": [[33, "remove-the-remove-method-removes-the-first-matching-element-which-is-passed-as-an-argument-from-the-list"]], "reverse()  - The reverse() method reverses the elements of the list.": [[33, "reverse-the-reverse-method-reverses-the-elements-of-the-list"]], "self in Python, Demystified": [[86, "self-in-python-demystified"]], "setdefault() - The method setdefault() is similar to get but will set dict[key] = default if key is not already in dict.": [[35, "setdefault-the-method-setdefault-is-similar-to-get-but-will-set-dict-key-default-if-key-is-not-already-in-dict"]], "sort()  - The sort() method sorts the elements of a given list in a specific ascending or descending order.": [[33, "sort-the-sort-method-sorts-the-elements-of-a-given-list-in-a-specific-ascending-or-descending-order"]], "sorted(dict) - The sorted() function sorts the elements of a given iterable in a specific order (either ascending or descending) and returns the sorted iterable as a list.": [[33, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [34, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [35, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"]], "str(dict) - The str() function produces a printable string representation of a dictionary.": [[35, "str-dict-the-str-function-produces-a-printable-string-representation-of-a-dictionary"]], "time.sleep() in multithreaded programs": [[46, "time-sleep-in-multithreaded-programs"]], "time.struct_time Class": [[45, "time-struct-time-class"]], "tuple(seq) - The tuple() method converts a list of items into tuples.": [[34, "tuple-seq-the-tuple-method-converts-a-list-of-items-into-tuples"]], "type() - The type() function returns the type of the passed variable. If passed variable is dictionary then it would return a dictionary type.": [[35, "type-the-type-function-returns-the-type-of-the-passed-variable-if-passed-variable-is-dictionary-then-it-would-return-a-dictionary-type"]], "update() - The method update() adds dictionary dict2\u2019s key-values pairs in to dict. This function does not return anything.": [[35, "update-the-method-update-adds-dictionary-dict2s-key-values-pairs-in-to-dict-this-function-does-not-return-anything"]], "value() - The method values() returns a list of all the values available in a given dictionary.": [[35, "value-the-method-values-returns-a-list-of-all-the-values-available-in-a-given-dictionary"]], "while loop inside for loop": [[27, "while-loop-inside-for-loop"]], "while loop inside while loop": [[28, "while-loop-inside-while-loop"]], "while loop with else": [[28, "while-loop-with-else"]], "while loop with if-else": [[28, "while-loop-with-if-else"]], "you output should look like this:": [[81, "you-output-should-look-like-this"]], "\ud83d\udcbb Exercises  \u279e <span class='label label-default'>List</span>": [[24, "exercises-list"], [33, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Date and Time</span>": [[44, "exercises-date-and-time"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Dictionary</span>": [[35, "exercises-dictionary"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Exceptions Handling</span>": [[51, "exercises-exceptions-handling"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Files</span>": [[48, "exercises-files"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Functions</span>": [[54, "exercises-functions"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Higher order functions, Closure and Decorators</span>": [[17, "exercises-higher-order-functions-closure-and-decorators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List Comprehension</span>": [[37, "exercises-list-comprehension"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List</span>": [[25, "exercises-list"], [27, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Module</span>": [[60, "exercises-module"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Objects and Classes</span>": [[81, "exercises-objects-and-classes"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Operators</span>": [[75, "exercises-operators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Python Errors</span>": [[50, "exercises-python-errors"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>RegEx</span>": [[19, "exercises-regex"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Sets</span>": [[36, "exercises-sets"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>String</span>": [[32, "exercises-string"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Tuple</span>": [[34, "exercises-tuple"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Variables</span>": [[70, "exercises-variables"]]}, "docnames": ["content/concepts/anomaly-detection", "content/concepts/concepts", "content/concepts/k-means", "content/concepts/linear-regression", "content/concepts/logistic-regression", "content/concepts/markdown-notebooks", "content/concepts/neural-networks", "content/core/markdown", "content/core/mymarkdown", "content/essentials/000_Intro_to_Python", "content/essentials/intro_mathematics", "content/essentials/intro_python", "content/essentials/intro_statistics", "content/essentials/mathematics/1_linear_algebra", "content/essentials/python/advanced/001_Python_Iterators", "content/essentials/python/advanced/002_Python_Generators", "content/essentials/python/advanced/003_Python_Closure", "content/essentials/python/advanced/004_Python_Decorators", "content/essentials/python/advanced/005_Python_Property", "content/essentials/python/advanced/006_Python_RegEx", "content/essentials/python/advanced/Python_args_and_kwargs", "content/essentials/python/advanced/advanced_toc", "content/essentials/python/controlflow/000_Python_Flow_Control_statement", "content/essentials/python/controlflow/001_Python_if_statement", "content/essentials/python/controlflow/002_Python_if_else_statement", "content/essentials/python/controlflow/003_Python_if_elif_else_statement", "content/essentials/python/controlflow/004_Python_Nested_if_statement", "content/essentials/python/controlflow/005_Python_for_Loop", "content/essentials/python/controlflow/006_Python_while_Loop", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements", "content/essentials/python/controlflow/controlflow_toc", "content/essentials/python/datatypes/001_Python_Numbers", "content/essentials/python/datatypes/002_Python_String", "content/essentials/python/datatypes/003_Python_List", "content/essentials/python/datatypes/004_Python_Tuple", "content/essentials/python/datatypes/005_Python_Dictionary", "content/essentials/python/datatypes/006_Python_Sets", "content/essentials/python/datatypes/Python_List_Comprehension", "content/essentials/python/datatypes/datatypes_toc", "content/essentials/python/datetime/001_Python_datetime_Module", "content/essentials/python/datetime/002_Python_strftime", "content/essentials/python/datetime/003_Python_strptime", "content/essentials/python/datetime/004_Python_current_date_and_time", "content/essentials/python/datetime/005_Python_get_current_time", "content/essentials/python/datetime/006_Python_timestamp_to_datetime", "content/essentials/python/datetime/007_Python_time_Module", "content/essentials/python/datetime/008_Python_sleep", "content/essentials/python/datetime/datetime_toc", "content/essentials/python/files/001_Python_File_Input_Output", "content/essentials/python/files/002_Python_File_Directory", "content/essentials/python/files/003_Python_File_Exception", "content/essentials/python/files/004_Python_Exceptions_Handling", "content/essentials/python/files/005_Python_User_defined_Exceptions", "content/essentials/python/files/files_toc", "content/essentials/python/functions/001_Python_Functions", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal", "content/essentials/python/functions/003_Python_Function_global_Keywords", "content/essentials/python/functions/004_Python_Function_Arguments", "content/essentials/python/functions/005_Python_Function_Recursion", "content/essentials/python/functions/006_Python_Function_Anonymous", "content/essentials/python/functions/007_Python_Function_Module", "content/essentials/python/functions/008_Python_Function_random_Module", "content/essentials/python/functions/009_Python_Function_math_Module", "content/essentials/python/functions/010_Python_Function_Package", "content/essentials/python/functions/Python_Docstrings", "content/essentials/python/functions/Python_User_defined_Functions", "content/essentials/python/functions/functions_toc", "content/essentials/python/introduction/002_Hello_World", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments", "content/essentials/python/introduction/005_Python_Variables_&_Constants", "content/essentials/python/introduction/006_Python_Literals", "content/essentials/python/introduction/007_Python_Data_Types", "content/essentials/python/introduction/008_Python_Type_Conversion", "content/essentials/python/introduction/009_Python_Input_Output_Import", "content/essentials/python/introduction/010_Python_Operators", "content/essentials/python/introduction/011_Python_Namespace_and_Scope", "content/essentials/python/introduction/1_data_structures_and_agorithms", "content/essentials/python/introduction/Interpreter_Vs_Compiler", "content/essentials/python/introduction/constant", "content/essentials/python/introduction/intro_toc", "content/essentials/python/objects/001_Python_OOPs_Concepts", "content/essentials/python/objects/002_Python_Classes_and_Objects", "content/essentials/python/objects/003_Python_Inheritance", "content/essentials/python/objects/004_Python_Operator_Overloading", "content/essentials/python/objects/objects_toc", "content/essentials/python/objects/self_in_Python_Demystified", "content/essentials/statistics/statistics", "content/markdown", "content/markdown-notebooks", "content/mymarkdown", "content/notebooks", "content/real-world/markdown", "content/real-world/mymarkdown", "content/tools/hf/intro", "content/tools/intro_tools", "content/tools/langchain/intro", "content/tools/langchain/langchain-modules", "content/tools/langchain/langgraph", "content/tools/langchain/langserve", "content/tools/langchain/langsmith", "content/tools/langchain/lcel", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2", "content/tools/matplotlib/matplotlib_toc", "content/tools/numpy/001_Python_NumPy", "content/tools/numpy/002_Python_NumPy_Array_Part1", "content/tools/numpy/003_Python_NumPy_Array_Part2", "content/tools/numpy/004_Python_NumPy_Array_Part3", "content/tools/numpy/005_Python_NumPy_Array_Part4", "content/tools/numpy/Python_Numpy_Exercises_with_hints", "content/tools/numpy/numpy_toc", "content/tools/pandas/001_Python_Pandas_DataFrame", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index", "content/tools/pandas/002_Python_Pandas_Exercise_1", "content/tools/pandas/003_Python_Pandas_Exercise_2", "content/tools/pandas/pandas_toc", "content/tools/seaborn/001_Seaborn_Loading_Dataset", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics", "content/tools/seaborn/003_Matplotlib_vs_Seaborn", "content/tools/seaborn/004_Seaborn_Color_Palettes", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots", "content/tools/seaborn/008_Seaborn_Distribution_Plots", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot", "content/tools/seaborn/016_Seaborn_PairGrid_Plot", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot", "content/tools/seaborn/018_Seaborn_Heat_Map", "content/tools/seaborn/019_Seaborn_Cluster_Map", "content/tools/seaborn/seaborn_toc", "content/tools/tools-for-llms", "content/tools/tools-for-ml", "content/tools/tools-for-nn", "curriculum", "intro"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["content/concepts/anomaly-detection.md", "content/concepts/concepts.md", "content/concepts/k-means.md", "content/concepts/linear-regression.md", "content/concepts/logistic-regression.md", "content/concepts/markdown-notebooks.md", "content/concepts/neural-networks.md", "content/core/markdown.md", "content/core/mymarkdown.md", "content/essentials/000_Intro_to_Python.ipynb", "content/essentials/intro_mathematics.ipynb", "content/essentials/intro_python.ipynb", "content/essentials/intro_statistics.ipynb", "content/essentials/mathematics/1_linear_algebra.ipynb", "content/essentials/python/advanced/001_Python_Iterators.ipynb", "content/essentials/python/advanced/002_Python_Generators.ipynb", "content/essentials/python/advanced/003_Python_Closure.ipynb", "content/essentials/python/advanced/004_Python_Decorators.ipynb", "content/essentials/python/advanced/005_Python_Property.ipynb", "content/essentials/python/advanced/006_Python_RegEx.ipynb", "content/essentials/python/advanced/Python_args_and_kwargs.ipynb", "content/essentials/python/advanced/advanced_toc.md", "content/essentials/python/controlflow/000_Python_Flow_Control_statement.ipynb", "content/essentials/python/controlflow/001_Python_if_statement.ipynb", "content/essentials/python/controlflow/002_Python_if_else_statement.ipynb", "content/essentials/python/controlflow/003_Python_if_elif_else_statement.ipynb", "content/essentials/python/controlflow/004_Python_Nested_if_statement.ipynb", "content/essentials/python/controlflow/005_Python_for_Loop.ipynb", "content/essentials/python/controlflow/006_Python_while_Loop.ipynb", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements.ipynb", "content/essentials/python/controlflow/controlflow_toc.md", "content/essentials/python/datatypes/001_Python_Numbers.ipynb", "content/essentials/python/datatypes/002_Python_String.ipynb", "content/essentials/python/datatypes/003_Python_List.ipynb", "content/essentials/python/datatypes/004_Python_Tuple.ipynb", "content/essentials/python/datatypes/005_Python_Dictionary.ipynb", "content/essentials/python/datatypes/006_Python_Sets.ipynb", "content/essentials/python/datatypes/Python_List_Comprehension.ipynb", "content/essentials/python/datatypes/datatypes_toc.md", "content/essentials/python/datetime/001_Python_datetime_Module.ipynb", "content/essentials/python/datetime/002_Python_strftime.ipynb", "content/essentials/python/datetime/003_Python_strptime.ipynb", "content/essentials/python/datetime/004_Python_current_date_and_time.ipynb", "content/essentials/python/datetime/005_Python_get_current_time.ipynb", "content/essentials/python/datetime/006_Python_timestamp_to_datetime.ipynb", "content/essentials/python/datetime/007_Python_time_Module.ipynb", "content/essentials/python/datetime/008_Python_sleep.ipynb", "content/essentials/python/datetime/datetime_toc.md", "content/essentials/python/files/001_Python_File_Input_Output.ipynb", "content/essentials/python/files/002_Python_File_Directory.ipynb", "content/essentials/python/files/003_Python_File_Exception.ipynb", "content/essentials/python/files/004_Python_Exceptions_Handling.ipynb", "content/essentials/python/files/005_Python_User_defined_Exceptions.ipynb", "content/essentials/python/files/files_toc.md", "content/essentials/python/functions/001_Python_Functions.ipynb", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal.ipynb", "content/essentials/python/functions/003_Python_Function_global_Keywords.ipynb", "content/essentials/python/functions/004_Python_Function_Arguments.ipynb", "content/essentials/python/functions/005_Python_Function_Recursion.ipynb", "content/essentials/python/functions/006_Python_Function_Anonymous.ipynb", "content/essentials/python/functions/007_Python_Function_Module.ipynb", "content/essentials/python/functions/008_Python_Function_random_Module.ipynb", "content/essentials/python/functions/009_Python_Function_math_Module.ipynb", "content/essentials/python/functions/010_Python_Function_Package.ipynb", "content/essentials/python/functions/Python_Docstrings.ipynb", "content/essentials/python/functions/Python_User_defined_Functions.ipynb", "content/essentials/python/functions/functions_toc.md", "content/essentials/python/introduction/002_Hello_World.ipynb", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers.ipynb", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments.ipynb", "content/essentials/python/introduction/005_Python_Variables_&_Constants.ipynb", "content/essentials/python/introduction/006_Python_Literals.ipynb", "content/essentials/python/introduction/007_Python_Data_Types.ipynb", "content/essentials/python/introduction/008_Python_Type_Conversion.ipynb", "content/essentials/python/introduction/009_Python_Input_Output_Import.ipynb", "content/essentials/python/introduction/010_Python_Operators.ipynb", "content/essentials/python/introduction/011_Python_Namespace_and_Scope.ipynb", "content/essentials/python/introduction/1_data_structures_and_agorithms.ipynb", "content/essentials/python/introduction/Interpreter_Vs_Compiler.ipynb", "content/essentials/python/introduction/constant.ipynb", "content/essentials/python/introduction/intro_toc.md", "content/essentials/python/objects/001_Python_OOPs_Concepts.ipynb", "content/essentials/python/objects/002_Python_Classes_and_Objects.ipynb", "content/essentials/python/objects/003_Python_Inheritance.ipynb", "content/essentials/python/objects/004_Python_Operator_Overloading.ipynb", "content/essentials/python/objects/objects_toc.md", "content/essentials/python/objects/self_in_Python_Demystified.ipynb", "content/essentials/statistics/statistics.ipynb", "content/markdown.md", "content/markdown-notebooks.md", "content/mymarkdown.md", "content/notebooks.ipynb", "content/real-world/markdown.md", "content/real-world/mymarkdown.md", "content/tools/hf/intro.md", "content/tools/intro_tools.ipynb", "content/tools/langchain/intro.md", "content/tools/langchain/langchain-modules.md", "content/tools/langchain/langgraph.md", "content/tools/langchain/langserve.md", "content/tools/langchain/langsmith.md", "content/tools/langchain/lcel.md", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1.ipynb", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2.ipynb", "content/tools/matplotlib/matplotlib_toc.md", "content/tools/numpy/001_Python_NumPy.ipynb", "content/tools/numpy/002_Python_NumPy_Array_Part1.ipynb", "content/tools/numpy/003_Python_NumPy_Array_Part2.ipynb", "content/tools/numpy/004_Python_NumPy_Array_Part3.ipynb", "content/tools/numpy/005_Python_NumPy_Array_Part4.ipynb", "content/tools/numpy/Python_Numpy_Exercises_with_hints.ipynb", "content/tools/numpy/numpy_toc.md", "content/tools/pandas/001_Python_Pandas_DataFrame.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index.ipynb", "content/tools/pandas/002_Python_Pandas_Exercise_1.ipynb", "content/tools/pandas/003_Python_Pandas_Exercise_2.ipynb", "content/tools/pandas/pandas_toc.md", "content/tools/seaborn/001_Seaborn_Loading_Dataset.ipynb", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics.ipynb", "content/tools/seaborn/003_Matplotlib_vs_Seaborn.ipynb", "content/tools/seaborn/004_Seaborn_Color_Palettes.ipynb", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot.ipynb", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot.ipynb", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots.ipynb", "content/tools/seaborn/008_Seaborn_Distribution_Plots.ipynb", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot.ipynb", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot.ipynb", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot.ipynb", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot.ipynb", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot.ipynb", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot.ipynb", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot.ipynb", "content/tools/seaborn/016_Seaborn_PairGrid_Plot.ipynb", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot.ipynb", "content/tools/seaborn/018_Seaborn_Heat_Map.ipynb", "content/tools/seaborn/019_Seaborn_Cluster_Map.ipynb", "content/tools/seaborn/seaborn_toc.md", "content/tools/tools-for-llms.md", "content/tools/tools-for-ml.md", "content/tools/tools-for-nn.md", "curriculum.md", "intro.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 3, 4, 5, 6, 7, 9, 11, 12, 14, 15, 16, 17, 18, 22, 23, 26, 27, 28, 29, 31, 32, 34, 37, 41, 43, 44, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 62, 64, 65, 69, 71, 72, 73, 74, 76, 78, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 106, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 147, 150], "0": [0, 3, 4, 11, 12, 14, 15, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 45, 46, 48, 50, 51, 52, 54, 56, 57, 59, 60, 61, 62, 68, 70, 71, 72, 73, 74, 75, 78, 81, 82, 83, 84, 86, 87, 91, 102, 103, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "00": [39, 40, 41, 43, 45, 46, 74, 112, 113, 115, 130, 131, 137, 140], "000": [31, 131, 136], "0000": [45, 75], "00000": 112, "000000": [32, 40, 41, 74, 112, 123, 124, 126, 131, 142], "0000003": 32, "0000a3": 138, "0001": [31, 39, 45], "000110011001100110011": 31, "000a": 31, "001": [40, 41], "0010": 75, "0011": 75, "00121062e": 140, "00140327e": 140, "001868": 142, "001_python_file_input_output": 49, "002": [40, 41], "002327879593869": 109, "00232788": 109, "002_python_file_directori": 49, "00357518e": 140, "003_python_file_except": 49, "004_python_exceptions_handl": 49, "005": 140, "005356": 142, "005_python_user_defined_except": 49, "00616708": 106, "006191": 138, "007": [74, 140], "007234": 142, "00778181e": 140, "00786338": 109, "007_python_function_modul": 48, "00826323e": 140, "00856914e": 140, "009": 32, "00960206e": 140, "01": [32, 39, 40, 41, 43, 45, 46, 74, 126, 130, 133, 135, 136, 137, 138, 140, 142], "010": [32, 140], "0100": 75, "010000": 112, "0101": 75, "01032310e": 140, "01051775e": 140, "011523": 138, "01183409e": 140, "012345": 32, "0123456789": 60, "01345985e": 140, "01710843e": 140, "01919923e": 140, "019608": 112, "01_learn_python4data": [49, 60, 124], "01x345": 32, "02": [39, 40, 41, 45, 46, 126, 140], "020408": 123, "021069": 138, "02210": [25, 27], "022727": 123, "02319487": 109, "025000": 131, "02539500e": 140, "02683718e": 140, "02919730e": 140, "02928161e": 140, "02989209e": 140, "03": [11, 32, 46, 126, 140], "030114": 138, "03068156e": 140, "030774": 126, "030e2eec799d": 17, "031250": 123, "03145352": 109, "032258": 123, "03247675": 109, "03348578e": 140, "03387531e": 140, "03461004": 109, "03505598723366": 60, "035714": 123, "039631": 138, "03ed55": 60, "03pm": 40, "04": [39, 45, 46, 126, 130], "040000": 112, "042857": 123, "04617067e": 140, "04702762e": 140, "04763428": 106, "04_python_funct": [48, 60], "05": [40, 41, 46, 126], "0500": [136, 138], "05017144e": 140, "05082974": 106, "051020": 123, "05233094e": 140, "05473060e": 140, "05655136772680869": 61, "05669558e": 140, "057333": 126, "058824": 123, "05908a030c74": 82, "05_python_fil": 49, "06": [39, 40, 41, 42, 43, 45, 46, 126, 128], "06161913e": 140, "062500": 123, "063577": 142, "064516": 123, "06563599e": 140, "06663512e": 140, "066667": 112, "06947804e": 140, "07": [40, 41, 43, 46], "0708": 136, "073709": 140, "074074": 123, "07450952e": 140, "0750": 136, "07659773e": 140, "076923": 123, "077036": 138, "08": [39, 43, 45, 46], "080169": 140, "08143941": 106, "08309749e": 140, "08333022e": 140, "083333": [112, 123], "08553692": 108, "085536923187668": 60, "089286": 123, "09": [40, 41, 46], "090909": 123, "09090909090909": 60, "096154": 123, "09708521e": 140, "09790012e": 140, "099350157876355": 109, "09935016": 109, "0_": 32, "0a4959e7a13b": 33, "0b": 31, "0b0001": 31, "0b10": [31, 75], "0b1010": 71, "0b1101011": 31, "0d17a834dca2": 57, "0ef33cc3a94d": 50, "0f0f0f": 129, "0f0f0f0f": 129, "0f73a35e8ce2": 68, "0j": [71, 75], "0o": 31, "0o12": 31, "0o15": 31, "0o310": 71, "0x": 31, "0x0000012c87c0af70": 16, "0x000001d284b3b430": 15, "0x000001d8aec3ac10": 82, "0x000001d8aec44eb0": 82, "0x000001d8aec7e1f0": 82, "0x000001d8aec7e4c0": 82, "0x000001d8aec7e5e0": 82, "0x00000218ffc65220": 84, "0x0000021e45765b20": 81, "0x0000021e45765dc0": 81, "0x00007ffad7cb2770": 16, "0x000a": 31, "0x12c": 71, "0x12c4cb88d90": 141, "0x12c4df5c1c0": 141, "0x12c4e273c70": 141, "0x12c50e26c10": 141, "0x12c53a52d60": 141, "0x12c53affc10": 141, "0x163ca247070": 144, "0x163cdf926d0": 144, "0x163ce3245e0": 144, "0x163cfcc79d0": 144, "0x163d0288250": 144, "0x163d05bfa60": 144, "0x163d0f2ae20": 144, "0x1662f00ac70": 132, "0x16633986eb0": 132, "0x166339f84c0": 132, "0x16635a26b80": 132, "0x16635a63550": 132, "0x170b84f24a0": 18, "0x1a11b1a6e80": 135, "0x1a11b2e7a00": 135, "0x1a11b349eb0": 135, "0x1a2186f5940": 142, "0x1a21896cac0": 142, "0x1a218c77d30": 142, "0x1a218d2d6a0": 142, "0x1a218de36a0": 142, "0x1a21a1a7310": 142, "0x1a21a449490": 142, "0x1a21a492c70": 142, "0x1a21b6eba00": 142, "0x1be276a14a8": 144, "0x1bfbd546670": 133, "0x1bfbe8c42b0": 133, "0x1bfbe8d2640": 133, "0x1bfbeacc8b0": 133, "0x1bfbf65d610": 133, "0x1ce07cb24f0": 138, "0x1ce07cc58e0": 138, "0x1da1f804700": 139, "0x1da1f8bf520": 139, "0x1da209c66d0": 139, "0x1da20f86b20": 139, "0x1da20fa4c10": 139, "0x1da214a06d0": 139, "0x1edcdfafd30": 140, "0x219288a7220": 131, "0x2192d5bb3a0": 131, "0x2192de12c70": 131, "0x2192dfa48b0": 131, "0x2192e06b910": 131, "0x2192e0be9d0": 131, "0x2192e328640": 131, "0x22c3a5e3ac0": 137, "0x22c3a722fd0": 137, "0x22c3b278670": 137, "0x22c3c78df40": 137, "0x22c3c8f1040": 137, "0x263397171f0": 129, "0x264e0145a90": 128, "0x26bc28689d0": 130, "0x26bc65bb8b0": 130, "0x26bc7611700": 130, "0x26bc7dd6cd0": 130, "0x26bc7eaf0a0": 130, "0x26bc8131250": 130, "0x26bc81b38b0": 130, "0x26bc81e5730": 130, "0x29872f94b20": 136, "0xfb": 31, "1": [0, 2, 3, 4, 6, 9, 11, 12, 14, 16, 18, 20, 23, 24, 28, 31, 37, 45, 52, 55, 56, 57, 58, 59, 61, 62, 65, 76, 78, 82, 83, 84, 86, 87, 91, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 120, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 140, 142, 143, 144], "10": [11, 12, 15, 16, 17, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 40, 43, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 62, 68, 69, 70, 71, 72, 73, 74, 75, 77, 81, 82, 84, 86, 87, 91, 102, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "100": [11, 12, 15, 19, 25, 27, 28, 29, 33, 35, 37, 54, 59, 60, 71, 75, 83, 84, 87, 91, 102, 106, 107, 109, 112, 113, 114, 123, 124, 127, 128, 131, 132, 133, 136, 137, 141, 142], "1000": [28, 31, 37, 58, 70, 75, 81, 103, 109, 130, 136, 137, 138, 139, 140], "10000": [37, 103, 109, 112], "100000": [37, 103, 126], "1000000000000000055511151231257827021181583404541015625": 31, "10026431e": 140, "101": [57, 82, 122, 123, 137, 138, 141, 142], "1010": 75, "102": [57, 82, 112, 113, 122, 123, 124], "1024": 37, "10276143": 106, "103": [82, 122, 123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "104": [82, 112, 113, 123, 124], "105": [19, 60, 123], "1050": 32, "1053": 119, "1054": 119, "1055": 119, "1056": 119, "1057": 119, "106": 123, "106628291529549": 60, "10696289e": 140, "107": [31, 123], "108": 123, "109": [57, 112, 123], "109299": 138, "1095522857580948": 134, "1097501": 106, "1099_file": 70, "10_python_pandas_modul": 124, "10ffff_": 32, "11": [15, 18, 24, 27, 29, 31, 32, 33, 35, 37, 41, 45, 46, 55, 59, 69, 71, 72, 75, 77, 81, 82, 102, 106, 107, 108, 109, 112, 116, 121, 123, 124, 126, 128, 136, 141, 142], "110": [123, 124], "1100": 32, "110110": 78, "111": [75, 112, 113, 123, 124], "1110": 75, "1111": [19, 75], "111111": [74, 123], "11111111": 109, "112": [123, 124], "11289431e": 140, "113": 123, "1134": 135, "1135": 135, "1136": 135, "1137": 135, "1138": 135, "114": [112, 113, 123, 124], "11421774e": 140, "115": [112, 113, 123, 124], "1151515151515152": 128, "1158": 135, "1159": 135, "116": 123, "1160": 135, "1161": 135, "1162": 135, "117": 123, "11734513e": 140, "117647": 123, "118": 123, "11818328e": 140, "119": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "119e50d96cfb": 50, "12": [11, 15, 19, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 35, 37, 40, 41, 43, 44, 45, 46, 50, 52, 54, 55, 59, 60, 71, 72, 74, 75, 77, 81, 86, 106, 107, 108, 109, 116, 123, 124, 128, 129, 130, 135, 137, 138, 140, 142, 143], "120": [3, 29, 57, 60, 112, 114, 123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "1200": 75, "12000": 103, "121": 123, "1212": 77, "122": 123, "123": [32, 73, 77, 123], "12336799": 106, "123456789": 32, "1234567890": [20, 71], "1234567890123456789": [31, 72], "12345678901234568": [31, 72], "12345678910": 28, "124": [73, 123], "125": [28, 37, 60, 102, 108, 123], "125000": 123, "1252": 126, "12587": 137, "126": 123, "126257": 138, "126960000": 48, "127": [102, 123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "1278387305019275": 128, "128": [33, 37, 123], "128440": 112, "12872044e": 140, "129": 123, "12940": [112, 113, 124, 131], "12945": 124, "1295210000": 48, "1296": [37, 126], "13": [15, 18, 28, 31, 32, 33, 35, 37, 40, 41, 43, 46, 50, 55, 57, 59, 60, 71, 73, 75, 81, 102, 107, 108, 109, 116, 123, 126, 131, 138, 140, 142], "130": [112, 123], "131": 123, "132": 123, "1326244364": 39, "133": 123, "1333": 136, "134": 123, "13409426e": 140, "13415": [112, 113, 124], "1345": 19, "13495": [112, 113, 124], "13499": 124, "135": 123, "135925": 124, "136": 123, "13680419e": 140, "137": 123, "13756537093": 74, "1377422166": 48, "138": [102, 123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "138264": 112, "139": 123, "13914421e": 140, "13915538e": 140, "13950": [112, 113, 124], "13960670e": 140, "14": [11, 18, 19, 27, 29, 32, 33, 34, 35, 37, 42, 44, 46, 50, 54, 55, 70, 71, 72, 75, 79, 81, 82, 86, 102, 107, 108, 109, 123, 124, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "140": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "14003": 131, "140708960741200": 76, "140708960741232": 76, "140708960741424": 76, "141": [123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "14112001": 108, "1415": 32, "14159": [60, 62], "141592653589793": [31, 60, 74], "14183273e": 140, "142": 123, "14204329": 109, "142857": 123, "143": 123, "144": [28, 75, 123], "1445": [126, 135], "1446": 135, "1447": 135, "1448": 135, "1449": 135, "145": 123, "1453": 126, "14577043e": 140, "146": [15, 123], "14613738e": 140, "146599183": 48, "147": 123, "14770535": 106, "148": [108, 123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "148148": 123, "14847551e": 140, "149": 123, "14j": 71, "15": [16, 18, 19, 20, 23, 24, 26, 27, 29, 31, 32, 33, 34, 35, 37, 40, 41, 45, 46, 51, 52, 54, 60, 72, 75, 81, 82, 102, 107, 108, 123, 124, 126, 128, 130, 135, 136, 138, 139, 140], "150": [71, 84, 102, 103, 112, 123, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "1500": [130, 132], "15000": [52, 103], "150000": 103, "151": 123, "151165": 138, "1511893559": 39, "151786": 123, "152": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "1528797322": 40, "153": [28, 123], "154": [112, 113, 123, 124], "1545730073": 44, "1545925769": 45, "1545966844": 45, "1549": 120, "155": 123, "15514180e": 140, "156": [11, 123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "156250": 123, "1568291": 137, "15687723e": 140, "157": 123, "15750": 124, "158": [123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "158023": 102, "1582568": 137, "159": 123, "16": [14, 17, 18, 27, 28, 29, 31, 33, 34, 35, 37, 46, 52, 59, 60, 65, 70, 71, 72, 75, 81, 82, 83, 107, 108, 109, 123, 124, 126, 130, 131, 133, 135, 136, 137, 138, 141, 142], "160": [112, 123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "161": 123, "161006790": 48, "161290": 123, "16188": 112, "162": [54, 123], "1624370069": 44, "1624370297": 45, "163": 123, "164": 123, "1647": 133, "165": 123, "16500": [112, 113, 124], "166": 123, "167": 123, "168": [112, 113, 123, 124], "16807": 37, "168321": 40, "169": [123, 124], "16j": 71, "16pt": 138, "17": [18, 27, 28, 31, 33, 35, 37, 45, 46, 51, 52, 72, 81, 82, 83, 107, 115, 123, 124, 126, 134, 138, 142, 143], "170": 123, "17041474e": 140, "171": [112, 113, 123, 124], "17137357e": 140, "171995": 124, "172": [45, 123], "17254901960784313": 131, "173": 123, "173469": 123, "174": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "17450": [112, 113, 124], "175": [60, 102, 123], "175000": 103, "1752011936438014": 31, "176": [57, 60, 112, 113, 123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "176471": 123, "177": 123, "178": 123, "179": 123, "17951135e": 140, "1796": 27, "17995": 124, "18": [14, 18, 23, 24, 27, 29, 35, 36, 37, 39, 40, 42, 43, 46, 48, 52, 74, 75, 77, 82, 83, 102, 107, 112, 113, 115, 123, 124, 126, 137, 141, 142], "180": [28, 123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "18000": 103, "18089902e": 140, "181": 123, "18176766975113706": 128, "1819": [54, 57], "182": [123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "1821": 54, "1822565": 137, "183": [60, 123], "18324209e": 140, "18344": 124, "184": [123, 124], "185": 123, "186": 123, "18644463e": 140, "186988000": 48, "187": [123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "187500": 123, "188": [112, 113, 123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "1882615260180538": 134, "189": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "18920": 124, "19": [14, 18, 20, 27, 28, 32, 33, 36, 37, 45, 46, 52, 54, 55, 57, 71, 75, 82, 102, 107, 108, 112, 113, 115, 117, 118, 119, 121, 122, 123, 124, 128, 131, 134, 137], "190": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "1900": 112, "19000": 83, "190504": 136, "190871": 102, "191": 123, "19116": 82, "192": 123, "1926": 51, "1928": 27, "192985": 102, "193": [123, 124], "19305918e": 140, "193080": 102, "1937": 11, "194": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "194125062": 48, "1942": 19, "195": 123, "1953": 27, "19566591e": 140, "196": [102, 109, 123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "196526332130161": 109, "1966": 32, "19680801": [12, 87, 91], "19692239e": 140, "197": [123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "1970": [39, 44, 45], "19735756e": 140, "1977": 140, "19789154e": 140, "198": 123, "199": [123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "199333": 126, "19a": 50, "1a2": 19, "1ab34": 19, "1b9ae9b69587": 108, "1d": [105, 106], "1e100": 71, "1e8": 137, "1ee33d": 60, "1f": [32, 103, 138], "1first_nam": 19, "1gcsgplmabavqz26": 60, "1j": [71, 110], "1m": 102, "1num": 70, "1p": 73, "1st": [17, 33, 55, 56, 57, 58, 60], "1variabl": 68, "2": [2, 3, 5, 6, 9, 11, 14, 16, 20, 22, 23, 24, 28, 31, 37, 45, 51, 52, 55, 56, 57, 58, 59, 61, 62, 63, 76, 78, 82, 83, 84, 86, 89, 104, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147], "20": [14, 16, 18, 20, 26, 27, 28, 29, 31, 32, 33, 36, 37, 39, 43, 46, 51, 52, 54, 55, 57, 59, 60, 72, 75, 81, 82, 102, 105, 107, 108, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 128, 130, 131, 136, 138], "200": [35, 54, 57, 60, 71, 83, 102, 107, 123, 131, 140, 142], "2000": 103, "200000": [103, 112], "200000000000003": 65, "20040757": 109, "200555": 43, "201": [39, 123], "2011": 102, "2012": [39, 77], "2013": [40, 41], "201300": 138, "2015": [126, 142], "2016": [140, 142], "2017": [39, 128, 142], "2018": [19, 39, 40, 41, 44, 45, 102, 142], "2019": [39, 40, 41, 43, 44, 45, 57], "202": [54, 123], "2020": [43, 112], "2021": [32, 39, 40, 42, 45, 54], "2021pythondatatyp": 32, "2021pythondatayp": 32, "2022": 51, "2023": 11, "20240789e": 140, "202563": 131, "203": 123, "204": 123, "20491465": 109, "205": 123, "2056": 133, "206": 123, "206135893": 48, "207": [123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "20784702e": 140, "208": [123, 124], "20800138e": 140, "20801": 102, "20843398e": 140, "2087a9c41308": 18, "209": 123, "20994144e": 140, "20x20": 6, "21": [18, 20, 27, 28, 29, 32, 33, 36, 37, 39, 41, 42, 45, 46, 52, 57, 60, 83, 102, 107, 108, 109, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 130, 133, 135, 136, 137, 138, 142], "210": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "2102": 19, "211": [123, 127], "211538": 123, "212": [123, 127], "2126": 126, "21260800e": 140, "213": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "21330910940589698": 134, "21379529e": 140, "214": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "214286": 123, "214695": 140, "215": 123, "2154": 109, "216": [28, 37, 60, 123], "217": 123, "217391": 123, "21741122e": 140, "21748794e": 140, "218": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "21855997e": 140, "219": [108, 123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "21987980e": 140, "22": [11, 32, 33, 36, 37, 39, 40, 42, 43, 45, 46, 52, 57, 59, 60, 75, 107, 108, 109, 113, 123, 126, 136, 138, 142], "220": 123, "220087": 138, "22026": 31, "221": 123, "222": 123, "222222": 123, "22222222": 109, "22291790e": 140, "223": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "22357762": 109, "22389": 131, "22397933e": 140, "224": 123, "22417715e": 140, "225": 123, "225000": 103, "2251799813685248": 31, "225806": 123, "22592182e": 140, "226": [102, 123], "22672978": 106, "227": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "22709318e": 140, "22722896e": 140, "228": [102, 123], "228434": 138, "22897": 137, "229": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "22911": 131, "22931538e": 140, "22949": 131, "23": [19, 27, 28, 32, 33, 39, 40, 41, 43, 45, 46, 60, 73, 82, 102, 107, 112, 113, 123, 124, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "230": 123, "2305ca5": 11, "231": 123, "23180804": 106, "232": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "233": [28, 123], "233423": 39, "23379671": 109, "234": 123, "234566": 39, "235": 123, "236": 123, "23600": 124, "23606798": 108, "23611012e": 140, "237": 123, "238": 123, "23845": 124, "239": 123, "24": [20, 27, 29, 33, 35, 36, 37, 40, 41, 46, 48, 59, 60, 81, 82, 102, 107, 112, 113, 123, 124, 130, 133, 135, 136, 137, 138, 142], "240": 123, "2401": 37, "241": 123, "242": 123, "24271445e": 140, "24299133e": 140, "242b77ef2a87": 72, "243": [37, 123], "244": [60, 123], "244898": 142, "245": 123, "245426098662": 116, "245614": 123, "2458": 126, "246": 123, "246154": 112, "24674836e": 140, "24677": 131, "247": [123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "2476979795053773": 31, "248": 123, "24813498e": 140, "24865": 137, "249": 123, "25": [11, 17, 20, 27, 28, 29, 31, 33, 35, 36, 37, 40, 44, 46, 48, 51, 60, 71, 72, 74, 75, 81, 82, 102, 103, 107, 108, 112, 123, 126, 128, 130, 131, 133, 137, 138, 142], "250": [84, 123], "2500": [27, 136, 138], "250000": [103, 112, 123, 131], "250fe64180f3": 82, "251": [31, 123], "252": 123, "25231985e": 140, "253": [31, 123], "2534156": 137, "2535": 126, "254": [81, 123], "25490048e": 140, "255": [60, 123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "2550": 27, "2557": 133, "2559205": 106, "256": [33, 37, 123], "257": [64, 123], "258": 123, "258705000": 48, "258745": 137, "259": 123, "259259": 123, "259490": 126, "25th": 112, "26": [32, 33, 34, 36, 37, 43, 46, 60, 81, 102, 107, 112, 113, 123, 124, 126, 130, 136, 138], "260": 123, "261": 123, "261842": 131, "262": 123, "262144": 32, "263": 123, "264": 123, "265": 123, "26568259e": 140, "26571389e": 140, "266": 123, "267": 123, "268": 123, "269": 123, "27": [16, 20, 27, 28, 29, 36, 37, 43, 45, 48, 57, 59, 74, 75, 81, 102, 107, 108, 112, 113, 123, 124, 136], "270": 123, "271": 123, "271429": 123, "272": 123, "27216990e": 140, "272699": 138, "272727": 123, "273": [18, 123], "274": 123, "275": [123, 135], "27500": 112, "275510": 123, "276": 123, "27672348": 106, "277": 123, "27764243": 106, "278": 123, "27891384e": 140, "279": 123, "27j": 71, "28": [18, 27, 28, 29, 36, 37, 39, 45, 51, 60, 81, 102, 107, 123, 124, 138], "280": 123, "280702": 123, "281": 123, "281250": 123, "2817": 135, "2818": 135, "2819": 135, "282": 123, "2820": 135, "2821": 135, "2822": 126, "28254475e": 140, "283": 123, "2833": [136, 138], "28366219": 108, "284": 123, "28418980453852622603883856494709731311218158362293224700445543940796643776911788129508577246309929258069598467896008287596053863082109746801947722280783720032649818198464452375358348619120021135797251857019557032565638659667745421115194468559021541269027438746788486392649581405327516658718317011453858465218779880972140612551504149701082164179367484198570734230003528355826545644223794779911723917115845213739921327820409005460708547942445234906498880588411276755120002108963510955276534630522965966177951626038063994937181228938844252668098515385045718428663547788122173798704717510979319749834083419004355222012043715855123615249682039587844431246269017612728291710718821388840627277407189863509789929339102406655115786899696829902032282666983426897111750208839152830573688512831984602085360572485861376": 75, "285": 123, "286": 123, "28675168e": 140, "287": 123, "288": 123, "28883356e": 140, "289": 123, "289000": 102, "289474": 131, "28x28": [4, 6], "29": [18, 27, 28, 45, 48, 81, 107, 108, 123, 124, 129, 130, 135, 137, 142], "290": 123, "291": 123, "291667": 123, "292": 123, "293": 123, "294": 123, "29402596": 109, "29431485e": 140, "2946014910624595": 60, "295": 123, "29534113": 109, "295455": 123, "29560668e": 140, "296": 123, "297": 123, "298": 123, "299": 123, "29995": 124, "2d": [102, 103, 105, 106, 112, 134, 143], "2d7f5e": 138, "2darrai": [116, 119], "2f": [32, 74, 83, 102, 138, 141], "2f7f4e5fdb49": 46, "2j": [31, 71, 72], "2nd": [17, 32, 33, 34, 55, 56, 58], "2rgxf": 60, "2x": [75, 102], "2x2": [106, 142], "3": [6, 11, 14, 16, 18, 20, 23, 24, 26, 28, 31, 35, 37, 41, 45, 51, 52, 55, 56, 57, 58, 59, 62, 65, 67, 68, 73, 76, 78, 79, 81, 82, 83, 84, 86, 105, 106, 107, 108, 109, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 139, 140, 141, 142, 143, 144], "30": [16, 17, 18, 24, 27, 28, 29, 32, 33, 37, 39, 40, 41, 43, 45, 51, 54, 55, 56, 57, 60, 70, 72, 75, 76, 81, 102, 107, 112, 123, 128, 131, 133, 135, 136, 139], "300": [18, 33, 70, 71, 102, 123, 129], "3000": 52, "300000": [103, 126], "3000000000000003": 31, "300000e": 74, "301": 123, "30119580e": 140, "302": 123, "303": 123, "30378713e": 140, "304": 123, "305": 123, "306": 123, "306264": 138, "30668723": 106, "307": 123, "308": 123, "309": 123, "30911403e": 140, "30920635": 106, "31": [18, 27, 28, 39, 40, 41, 45, 60, 81, 102, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "310": [119, 123], "31002414e": 140, "311": [119, 123], "312": [119, 123], "3125": 37, "312500": 123, "31287314e": 140, "313": [119, 123], "31390556e": 140, "314": [54, 119, 123], "315": 123, "3153600000": 75, "31576734e": 140, "316": 123, "317": 123, "31701798e": 140, "31708111e": 140, "318": 123, "318750": 112, "319": 123, "32": [14, 18, 27, 29, 33, 37, 41, 54, 81, 108, 112, 123, 126, 138, 142], "320": 123, "321": 123, "321004": 138, "32105794e": 140, "322": 123, "323": 123, "323947000": 48, "324": 123, "324129": 138, "325": 123, "326": 123, "327": 123, "32768": 37, "328": 123, "329": 123, "33": [27, 32, 39, 46, 57, 60, 73, 74, 81, 83, 102, 109, 123, 124], "330": [29, 123], "33094796e": 140, "331": 123, "33114510e": 140, "331191": 42, "33142653": 106, "332": 123, "33205527e": 140, "333": [32, 39, 75, 123], "333333": 124, "33333333": [31, 108, 109], "333333333333333": 75, "333333333333333481363069950020872056484222412109375": 60, "3333333333333335": 60, "334": 123, "335": 123, "33516842e": 140, "336": 123, "33662976e": 140, "337": 123, "33768743e": 140, "338": 123, "33856867e": 140, "338695217273813": 109, "339": 123, "34": [19, 28, 39, 46, 60, 75, 81, 107, 109, 123, 124, 126, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "340": [27, 28, 123], "340909": 123, "341": 123, "342": 123, "34238": 39, "342380": 39, "343": [28, 37, 123], "343750": 123, "344": 123, "34435993e": 140, "345": 123, "3456": 19, "345673": 19, "3456789": 32, "34567890": 74, "3457": 32, "346": [74, 123], "347": [41, 123], "348": [41, 123], "349": [41, 123], "35": [19, 27, 29, 32, 33, 42, 45, 72, 74, 102, 107, 123, 124, 126, 135, 136, 137, 138], "350": [41, 123], "350000": [103, 126], "351": [41, 123], "352": 123, "35266299": 106, "353": 123, "354": 123, "354839": 123, "35488217e": 140, "355": 123, "356": [19, 123], "357": 123, "357143": 123, "35731444e": 140, "358": 123, "359": 123, "35994688e": 140, "36": [15, 27, 28, 29, 32, 37, 54, 68, 74, 102, 123, 126, 129], "360": 123, "36000": 124, "360856": 136, "361": [45, 123], "362": [45, 123], "363": 123, "363636": 123, "364": 123, "36492380e": 140, "365": [32, 123], "366": [40, 41, 45, 123], "36699927e": 140, "367": 123, "36782780e": 140, "368": 123, "3681b3969e27": 52, "36880": 124, "369": 123, "36938945e": 140, "37": [18, 27, 28, 81, 112, 113, 123, 124, 142], "370": 123, "37028": 124, "370370": 123, "371": 123, "37144872e": 140, "37181743e": 140, "372": 123, "373": 123, "37380679e": 140, "374": 123, "375": [48, 123], "375000": 123, "376": 123, "37644": 131, "377": [28, 123], "37796264e": 140, "378": 123, "379": 123, "38": [43, 81, 102, 123, 131, 136, 138, 140, 142], "380": 123, "381": 123, "382": 123, "38209653": 106, "38223": 131, "38224839e": 140, "383": 123, "38336447": 109, "38385823e": 140, "384": 123, "38429280e": 140, "385": 123, "38568225e": 140, "38575866e": 140, "385965": 123, "386": 123, "387": 123, "387097": 123, "38787858e": 140, "388": 123, "389": 123, "3890561": 108, "39": [27, 32, 39, 46, 102, 123, 126, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "390": 123, "391": 123, "39119225e": 140, "39169378e": 140, "392": 123, "392857": 123, "393": 123, "393413": 138, "394": 123, "395": 123, "39594634e": 140, "396": 123, "397": 123, "39764517e": 140, "398": 123, "39801": 19, "39878883": 106, "399": [33, 123], "39957927e": 140, "3bfaa309574d": 36, "3blue1brown": 6, "3d": [11, 107], "3da34cc7641": 32, "3e859d37287a": 68, "3ec8c6652eef": 58, "3f": [32, 74], "3j": [11, 31, 71, 72, 82], "3rd": [33, 56, 58, 105, 130], "4": [2, 6, 11, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 51, 54, 55, 56, 57, 58, 59, 60, 62, 67, 68, 70, 73, 74, 78, 81, 82, 83, 86, 87, 91, 102, 105, 106, 107, 108, 109, 111, 112, 113, 115, 117, 119, 121, 123, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "40": [27, 29, 37, 46, 51, 57, 72, 74, 75, 102, 107, 114, 123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "400": [6, 123, 131], "4000": 103, "400000": [103, 124, 126], "40015831": 106, "401": 123, "402": 123, "403": 123, "403509": 123, "403846": 123, "404": 123, "405": 123, "406": 123, "40603744": 109, "40636423e": 140, "407": 123, "408": 123, "409": [123, 135], "40904134e": 140, "409091": 123, "4096": 37, "40960": 124, "41": [27, 28, 45, 46, 102, 123, 124, 140], "410": [123, 135], "41083552e": 140, "411": [123, 135], "412": [123, 135], "41276190e": 140, "41292267e": 140, "413": [123, 135], "41315": 124, "4131591": 108, "414": 123, "41405704e": 140, "41406033e": 140, "41421356": 108, "414368": 140, "415": 123, "4151": 116, "4152": 116, "4153": 116, "4154": 116, "4155": 116, "416": 123, "41614684": 108, "416667": 123, "417": 123, "418": 123, "4186": 116, "4187": 116, "4188": 116, "4189": 116, "419": 123, "4190": 116, "42": [27, 29, 35, 39, 46, 83, 109, 123, 132], "420": 123, "421": 123, "422": 123, "423": 123, "424": 123, "42477796076938": 60, "42499377e": 140, "425": 123, "42530": 137, "42538101e": 140, "426": 123, "42612988": 109, "427": 123, "428": 123, "428571": 123, "42857143": 108, "4286f4": 102, "429": 123, "43": [27, 28, 46, 108, 123], "430": 123, "4306": 116, "4307": 116, "4308": 116, "4309": 116, "431": 123, "4310": 116, "43186c7d3555": 68, "43196619e": 140, "432": 123, "433": 123, "434": 123, "4340020aef34": 82, "43469003": 109, "435": 123, "43563027": 106, "435633": 39, "435866": 126, "436": 123, "437": 123, "437500": 123, "438": 123, "439": 123, "44": [45, 46, 123, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "440": 123, "441": 123, "44120621e": 140, "442": 123, "44225798": 106, "442308": [112, 123], "443": 123, "4439": 119, "444": 123, "4440": 119, "4441": 119, "4442": 119, "4443": 119, "444444": 123, "44444444": 109, "445": 123, "446": 123, "44666284e": 140, "447": 123, "44794755e": 140, "448": 123, "449": 123, "449489742783178": 60, "4496": 135, "4497": 135, "4498": 135, "4499": 135, "45": [27, 28, 29, 46, 48, 60, 69, 77, 102, 120, 123, 126, 135, 142], "450": 123, "4500": 135, "45000": 112, "451": 123, "45103300e": 140, "452": 123, "453": 123, "45359369": 106, "454": 123, "45400": 124, "45409876e": 140, "454545": 123, "45468093e": 140, "455": 123, "455357": 123, "456": [32, 73, 123], "456140": 123, "457": 123, "458": 123, "4583": 136, "458333": 123, "459": 123, "45d582f31548": 82, "46": [20, 46, 54, 102, 123, 124, 135, 142], "460": 123, "46063092e": 140, "46075265e": 140, "461": 123, "462": 123, "463": 123, "464": 123, "4641": 109, "465": 123, "465794806718": 31, "466": 123, "4666666666666668": 128, "466b90e7ef2f": 72, "467": 123, "468": 123, "468750": 123, "469": 123, "469388": 123, "47": [27, 28, 39, 46, 123, 124, 126, 135], "470": 123, "47016730e": 140, "471": 123, "472": 123, "473": 123, "473137c03db7": 68, "47320909e": 140, "474": 123, "475": 123, "476": 123, "477": 123, "477273": 123, "4777": 121, "4778": 121, "4779": 121, "478": 123, "4780": 121, "4781": 121, "478125": 138, "479": 123, "48": [27, 29, 32, 39, 46, 75, 83, 113, 115, 122, 123, 124, 135], "480": 123, "48013283e": 140, "48048431": 106, "481": 123, "48122198e": 140, "482": 123, "483": 123, "48383283e": 140, "484": 123, "485": 123, "486": 123, "487": 123, "48755100e": 140, "488": 123, "489": 123, "4895": 15, "489796": 112, "49": [25, 27, 28, 29, 35, 37, 45, 46, 60, 123, 124], "490": 123, "490625": 131, "491": 123, "491228": 123, "492": 123, "492754": 123, "49291": 131, "493": 123, "49332966e": 140, "494": 123, "495": 123, "49521424": 109, "49529338e": 140, "49574452": 109, "49587": 131, "496": 123, "496714": 112, "49690158e": 140, "497": 123, "49769501e": 140, "49798680e": 140, "498": 123, "49890664e": 140, "499": 123, "49e421f2057c": 73, "4a9f159cd120": 32, "4b26ab49e29c": 14, "4c669126467b": 32, "4d4a0e714c73": 68, "4ed3868a9a2": 33, "4f": 32, "4m": 102, "4th": [33, 34], "5": [11, 12, 14, 16, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 44, 45, 46, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 73, 74, 76, 78, 81, 82, 83, 84, 86, 87, 91, 102, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 119, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "50": [19, 23, 25, 27, 28, 29, 31, 32, 35, 37, 43, 46, 48, 54, 55, 60, 77, 102, 108, 109, 112, 114, 115, 123, 124, 126, 130, 131, 133, 135, 136, 137, 138, 140, 142], "500": [114, 123, 140], "5000": [52, 140], "50000": 102, "500000": [103, 112, 123, 124, 126], "501": 123, "502": 123, "503": 123, "504": 123, "505": 123, "5050": [27, 54], "50547116e": 140, "506": 123, "50628105e": 140, "507": 123, "508": 123, "509": 123, "50b154750974": 68, "50th": 112, "51": [46, 54, 102, 123, 124, 136], "510": 123, "51026454": 106, "511": 123, "512": [28, 33, 37, 59, 123], "513": 123, "513433": 140, "514": 123, "515": 123, "515941f58fe7": 56, "516": 123, "51601397e": 140, "516129": 123, "51681": 131, "517": 123, "51782e52f201": 51, "517857": 123, "518": 123, "518519": 123, "519": [75, 123], "52": [46, 102, 112, 113, 123, 124], "520": 123, "52063": 131, "521": 123, "522": 123, "523": 123, "524": 123, "525": 123, "52580": 131, "526": 123, "526373": 142, "527": 123, "527393": 39, "528": 123, "529": 123, "529412": 123, "53": [27, 28, 35, 40, 41, 44, 46, 123, 124, 126, 135, 136, 138], "530": 123, "53037048e": 140, "531": 123, "531250": 123, "532": 123, "533": 123, "53341062e": 140, "53360752e": 140, "534": 123, "5348": 124, "535": 123, "535714": 123, "53590397e": 140, "536": 123, "537": 123, "53783010e": 140, "538": 123, "539": 123, "53901780e": 140, "53909609": 106, "54": [27, 28, 29, 39, 46, 59, 70, 81, 102, 108, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 124, 136], "540": 123, "54030231": 108, "541": 123, "541667": 123, "5418903291546293": 134, "542": 123, "5425": 137, "542734": 140, "54275813": 106, "543": 123, "54321": 27, "544": 123, "545": 123, "54510477e": 140, "5455131": 137, "546": 123, "54682": 137, "547": 123, "547083": 140, "54777888": 106, "548": 123, "54808": 137, "549": 123, "54902750e": 140, "55": [27, 28, 39, 46, 54, 60, 109, 114, 116, 119, 123, 134, 142], "550": 123, "551": 123, "551020": 123, "55109787e": 140, "5513833499989991": 134, "552": 123, "55283762": 106, "553": 123, "553519": 138, "55360672": 106, "55382448e": 140, "554": 123, "555": [28, 32, 77, 123], "5550161930871431": 109, "555108164c58": 35, "55555556": 109, "555816": 138, "556": 123, "557": 123, "558": 123, "5589": 116, "559": 123, "5590": 116, "5591": 116, "5592": 116, "5593": 116, "55965906e": 140, "56": [11, 26, 27, 29, 35, 39, 43, 46, 60, 112, 113, 115, 122, 123, 124, 142], "560": 123, "56077258e": 140, "561": 123, "562": 123, "562500": 123, "563": 123, "56348096e": 140, "564": 123, "565": 123, "56580759e": 140, "566": [41, 123], "56650192e": 140, "567": [41, 123], "568": [41, 123], "569": [41, 123], "5698": 137, "57": [44, 46, 102, 112, 113, 123, 124], "570": [41, 123], "57057605": 109, "571": 123, "571429": 123, "572": 123, "57292499e": 140, "573": 123, "57330710e": 140, "57367853e": 140, "574": 123, "575": 123, "576": 123, "5768efa4a35f": 83, "577": 123, "578": 123, "579": [73, 123], "57953b0b580c": 18, "58": [39, 40, 45, 46, 102, 112, 113, 123, 124, 142], "580": 123, "5808771025513102": 134, "58099293e": 140, "581": 123, "582": 123, "5828025": 45, "583": 123, "584": 123, "585": 123, "5854679515581645": 31, "58556641e": 140, "586": 123, "58662330e": 140, "587": 123, "588": 123, "588235": 123, "58883361": 109, "58899709e": 140, "589": 123, "58900": 124, "59": [25, 39, 40, 41, 43, 45, 46, 112, 113, 123, 124, 130, 133, 135, 136, 137, 138, 142], "590": 123, "59049": 37, "59068226": 109, "591": 123, "592": 123, "593": 123, "59362951e": 140, "59371929e": 140, "594": 123, "595": 123, "596": 123, "59621339e": 140, "597": 123, "598": 123, "59815003": 108, "599": 123, "59b7b8cc9b5b": 82, "5aa728677edf": 60, "5b2db8c64782": 32, "5b50fb5d02c4": 57, "5e2": 71, "5f195de51d93": 84, "5m": 102, "5th": [32, 33], "6": [11, 14, 15, 16, 17, 18, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 46, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 65, 67, 68, 69, 70, 71, 73, 74, 81, 82, 83, 86, 102, 105, 106, 107, 108, 109, 112, 113, 115, 119, 123, 126, 128, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144], "60": [24, 25, 27, 28, 29, 37, 57, 60, 74, 76, 102, 112, 113, 114, 123, 124, 131, 132, 134], "600": [28, 75, 123], "6000": 103, "60000": [81, 102], "600000": 126, "60000000000001": 18, "60059908": 109, "601": 123, "60124": 131, "60154": 131, "602": 123, "603": 123, "60332219e": 140, "603704": 138, "604": 123, "605": 123, "605370": 126, "606": 123, "60631cbc73b0": 55, "60683359e": 140, "607": 123, "60786967": 106, "608": 123, "60811794e": 140, "60818266e": 140, "609": 123, "61": [35, 45, 112, 113, 123, 124, 130, 133, 135, 136, 137, 138, 142], "610": [28, 123], "611": 123, "611172": 138, "612": 123, "613": 123, "614": 123, "61440440e": 140, "615": 123, "61500": 124, "616": 123, "61670566e": 140, "61675899e": 140, "617": 123, "61784629": 106, "618": 123, "619": 123, "6197751905438615": 60, "62": [54, 123, 124, 137], "620": 123, "621": 123, "621415": 138, "622": 123, "622167": 138, "62242956e": 140, "623": 123, "62311335e": 140, "624": 123, "625": [37, 123], "62500": 112, "62503489e": 140, "626": 123, "62636": 131, "627": 123, "6274509803921569": 131, "62792336e": 140, "628": 123, "629": 123, "629630": 123, "62996541e": 140, "63": [27, 29, 50, 51, 54, 73, 74, 123, 135, 142], "630": 123, "63033250e": 140, "631": 123, "631579": 123, "63158859": 106, "632": 123, "63212579e": 140, "63238643": 109, "633": [57, 123], "6338": 124, "634": 123, "63465586e": 140, "635": 123, "636": 123, "637": 123, "6377": 124, "638": 123, "639": 123, "64": [11, 27, 28, 29, 33, 37, 59, 108, 123, 142], "640": 123, "64000": 102, "64034418e": 140, "641": 123, "64154651": 137, "642": 123, "643": 123, "64387910e": 140, "644": 123, "645": 123, "645161": 123, "646": 123, "647": 123, "647689": 112, "648": 123, "6488": 124, "649": 123, "65": [23, 24, 25, 32, 73, 113, 115, 122, 123, 142], "650": 123, "65000": 102, "651": 123, "651253": 142, "652": 123, "65235094": 109, "653": 123, "65364362": 108, "654": 123, "654593": 44, "655": 123, "65575249e": 140, "65596512e": 140, "656": 123, "6561": 37, "65628077": 106, "656404": 138, "657": 123, "6575": 124, "658": 123, "659": 123, "65903086e": 140, "66": [26, 27, 32, 56, 74, 123, 124, 130, 133, 135, 136, 137, 138, 142], "660": 123, "66000": 102, "661": 123, "6611852": 137, "662": 123, "663": 123, "664": 123, "665": 123, "666": [35, 123], "66666667": 109, "667": 123, "667565": 138, "668": 123, "669": 123, "67": [28, 32, 108, 123, 124, 142], "670": 123, "670396": 142, "671": 123, "672": 123, "673": 123, "674": 123, "675": 123, "67526014e": 140, "676": 123, "67631096e": 140, "677": 123, "67761063e": 140, "678": 123, "6785": 124, "678571": 123, "679": 123, "68": [102, 116, 119, 123, 124, 130, 133, 135, 136, 137, 138, 140, 142], "680": 123, "681": 123, "681159": 123, "682": 123, "682091": 142, "683": 123, "68334519e": 140, "683673": 123, "684": 123, "684211": 123, "685": 123, "68572271": 109, "686": 123, "68602648": 106, "68603251e": 140, "68671849e": 140, "687": 123, "68744134": 106, "68747069e": 140, "688": 123, "689": 123, "69": [25, 27, 113, 123, 124, 142], "690": 123, "69001671e": 140, "691": 123, "6918": 124, "692": 123, "69258130e": 140, "69272794e": 140, "693": 123, "6931471805599453": 60, "69343173": 106, "69361323e": 140, "694": 123, "695": 123, "696": 123, "697": 123, "69736459e": 140, "69791535": 106, "698": 123, "699": 123, "69901020e": 140, "6ab0f28c63a7": 52, "6ac8e81b6f0c": 50, "6f47904706aa": 108, "6f8260f6f5bb": 55, "6j": [31, 72, 82], "6m": 102, "6p": 74, "6th": 32, "6x": 75, "7": [11, 14, 17, 18, 20, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 43, 45, 46, 48, 51, 54, 55, 56, 57, 59, 60, 69, 70, 71, 72, 73, 74, 75, 82, 83, 84, 86, 102, 106, 107, 108, 109, 112, 113, 119, 123, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144], "70": [23, 25, 27, 29, 37, 57, 102, 113, 115, 120, 122, 123, 124, 130, 131, 142], "700": [123, 141], "701": 123, "70166723e": 140, "702": 123, "703": 123, "703704": 123, "704": 123, "704545": 123, "705": 123, "705882": 123, "706": 123, "707": 123, "707107": 112, "708": 123, "70805473e": 140, "709": 123, "7091468499697177e": 128, "71": [123, 124, 130, 136, 137, 138], "710": 123, "711": 123, "712": 123, "713": 123, "714": 123, "71400": 124, "714286": 124, "71432477e": 140, "715": 123, "715070": 136, "716": 123, "71671100e": 140, "717": 123, "71755233e": 140, "718": 123, "71828": [60, 62], "718281828459045": 60, "71828183": 108, "719": 123, "72": [27, 29, 54, 112, 115, 123, 142], "720": [31, 58, 60, 123], "721": 123, "722": 123, "72223991e": 140, "72247358e": 140, "723": 123, "72352380e": 140, "724": 123, "724490": 123, "724638": 123, "725": 123, "726": 123, "72638167e": 140, "727": 123, "72708198e": 140, "727273": 123, "72765023e": 140, "728": 123, "72888392e": 140, "729": [28, 37, 59, 123], "72964213e": 140, "73": [19, 123], "730": 123, "731": 123, "731755": 126, "732": 123, "73205081": 108, "733": 123, "73370838": 109, "734": 123, "734673": 142, "735": 123, "73524094": 109, "7359b7dba965": 28, "736": 123, "737": 123, "73712819e": 140, "738": 123, "739": 123, "74": 123, "740": 123, "74098031e": 140, "741": 123, "74149939e": 140, "741935": 123, "742": 123, "743": 123, "74304829e": 140, "74307119e": 140, "74371246e": 140, "744": [81, 123], "74400348e": 140, "744281": 142, "74486871e": 140, "745": 123, "74509907e": 140, "746": 123, "746011": 142, "747": 123, "748": 123, "749": 123, "75": [46, 102, 109, 112, 113, 123, 126, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "750": 123, "750000": [112, 123, 124, 131, 142], "750615": 136, "75075a70c90": 107, "7507bdc665d5": 17, "751": 123, "752": 123, "75209323e": 140, "753": 123, "754": 123, "755": 123, "755102": 142, "756": 123, "75665366e": 140, "7568025": 108, "757": 123, "758": 123, "758000": 126, "759": 123, "75th": 112, "76": [19, 109, 123, 137, 142], "760": 123, "76093000e": 140, "761": 123, "762": 123, "762238": 126, "762329": 142, "76249894": 109, "763": 123, "764": 123, "765": 123, "765298": 126, "766": [109, 123], "767": 123, "768": [123, 126], "769": 123, "769231": 123, "76a0a5ce1450": 46, "76bf7a927991": 57, "77": [27, 57, 72, 74, 107, 112, 113, 115, 116, 117, 118, 119, 121, 122, 123, 130, 137], "770": 123, "771": 123, "772": 123, "77237368": 109, "773": [77, 123], "774": 123, "775": 123, "776": 123, "77678046e": 140, "777": 123, "7776": 37, "77777778": 109, "777778": 123, "778": 123, "779": 123, "78": [59, 109, 112, 123, 130, 142], "780": 123, "781": 123, "781250": 123, "782": 123, "782dbd1412fe": 119, "783": 123, "784": 123, "785": 123, "785269": 137, "785280": 137, "785714": 123, "786": 123, "78673234e": 140, "787": 123, "788": 123, "78883111e": 140, "789": [32, 123], "7898": 124, "78993856e": 140, "79": [60, 112, 123, 124], "790": 123, "79018354e": 140, "79025614": 109, "791": 123, "792": 123, "79270929e": 140, "793": 123, "794": [123, 126], "795": 123, "795455": 123, "796": 123, "79671774e": 140, "797": 123, "797101": 123, "7975": [112, 113, 124], "798": 123, "79823164": 106, "799": 123, "7995": [112, 113, 124], "79998373e": 140, "7c9145eb11e9": 75, "7e786bcbd078": 52, "7f1fefd4d3f0": 35, "7fce570bf337": 72, "8": [11, 14, 17, 18, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 45, 46, 48, 51, 52, 54, 55, 56, 57, 59, 60, 67, 69, 70, 72, 73, 74, 75, 79, 81, 82, 84, 86, 102, 106, 107, 108, 109, 112, 113, 115, 116, 119, 121, 123, 126, 127, 128, 129, 130, 131, 135, 136, 137, 138, 139, 140, 141, 142, 143], "80": [25, 27, 29, 37, 60, 102, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 131, 135, 139, 142], "800": [123, 131], "8000": 103, "80000": 112, "800000": [123, 126], "801": 19, "8036360430009386": 31, "806452": 123, "807018": 123, "80966303e": 140, "81": [23, 27, 28, 29, 35, 37, 54, 73, 112, 113, 123, 124], "812500": 123, "8138b0729954": 35, "814809": 140, "816327": 123, "816653826391969": 86, "81788758": 109, "8189": 124, "81893678": 106, "81945073e": 140, "82": [112, 113, 123, 124], "821429": 123, "82636160e": 140, "82647438e": 140, "82701252e": 140, "827153": 140, "828066": 126, "82974801e": 140, "83": [54, 112, 113, 123], "830770": 138, "83098322e": 140, "83161031e": 140, "83288998e": 140, "83319662e": 140, "8333333333333334": 75, "83464298e": 140, "835299": 131, "83727878e": 140, "83770503": 106, "83847501e": 140, "84": [83, 112, 123], "84147098": 108, "84254180e": 140, "843333": 126, "843750": 123, "846939": 123, "846976": 138, "847": 77, "84915141e": 140, "85": [74, 102, 106, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 131, 132, 139], "850000": 131, "85051737e": 140, "851852": 123, "85505447": 106, "857142857142854": 74, "857143": 123, "85956433e": 140, "86": [43, 112, 113, 123, 124, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "8625": 136, "86299475e": 140, "863636": 123, "86635ab2cc7": 82, "869565": 123, "87": [102, 112, 113, 115, 122, 123, 124, 137], "871429": 123, "87236687": 106, "87285499e": 140, "87380356": 109, "875000": 123, "87646883e": 140, "8778": 124, "87786341e": 140, "87853325e": 140, "87970769e": 140, "88": [102, 109, 112, 113, 120, 123, 124, 130, 139], "88165065e": 140, "884058": 123, "88618684": 109, "88888889": 109, "89": [19, 25, 28, 60, 102, 112, 123, 124, 137], "8904402624046048": 134, "89380846e": 140, "894992": 140, "89632087": 106, "8b5cab780f33": 55, "8cc0f1bdc5ed": 70, "8f0bbdfdf6e5": 33, "8th": 34, "9": [11, 14, 15, 16, 17, 20, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 45, 46, 48, 51, 52, 54, 55, 56, 57, 59, 60, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 81, 82, 84, 86, 102, 105, 106, 107, 108, 109, 112, 113, 115, 119, 120, 121, 123, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "90": [25, 27, 28, 29, 32, 37, 54, 55, 57, 70, 71, 74, 76, 81, 102, 113, 115, 120, 122, 123, 131, 135, 139], "900": [55, 81], "900000": 126, "900000e": 32, "90093797e": 140, "90264482e": 140, "90328251e": 140, "903846": 123, "906250": 123, "90891100e": 140, "909091": 123, "90929743": 108, "91": [48, 73, 102, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126], "91174698": 109, "91348997e": 140, "91703708e": 140, "91940167": 106, "92": [102, 123, 139], "9250": [136, 138], "925926": 123, "927536": 123, "928571": 123, "92fab552c144": 60, "93": [27, 102, 123, 139], "93054890e": 140, "93082264e": 140, "93102691": 106, "93143051": 106, "94": [102, 112, 113, 123, 124, 139], "946429": 123, "947368": [123, 131], "9478274870593494": 61, "95": [102, 112, 123, 124, 129, 130, 137, 138, 139, 140], "954": 129, "95501935e": 140, "9560342718892494": 61, "95892427": 108, "95966987": 106, "96": [24, 25, 26, 27, 28, 32, 35, 50, 51, 57, 70, 81, 102, 112, 123, 130], "96052f3c0c69": 32, "96139878e": 140, "9618232": 45, "96238081e": 140, "96248829": 109, "963404": 136, "964286": 123, "966365e": 32, "96652011": 109, "96671753e": 140, "97": [32, 48, 112, 113, 123, 124, 139], "97087710e": 140, "971014": 123, "9717076499418887": 128, "97187673e": 140, "97305419e": 140, "976073": 138, "97739775e": 140, "97964329e": 140, "98": [18, 32, 112, 123, 133, 142], "980769": 123, "981": 54, "98237187e": 140, "9834262422606419": 134, "98514058e": 140, "98547": 137, "986e6d871071": 20, "987": 28, "98749888": 106, "9899925": 108, "98a1ccc168e9": 57, "99": [24, 27, 32, 35, 40, 41, 69, 71, 72, 74, 106, 112, 113, 123, 124, 130, 133, 134, 135, 136, 137, 138, 142], "99262966e": 140, "994": 135, "994177": 43, "995": 135, "996": 135, "997": 135, "99714633e": 140, "9976563219": 20, "997677": 142, "998": 135, "999": [32, 35, 55, 56, 109], "9995": [112, 113, 124], "999703": 142, "9999": [39, 45, 60], "999926": 142, "999999": [40, 41, 74], "999999999999998": 28, "999999999999999": 108, "9b450cb47d30": 33, "9b9247988596": 50, "9df797f83624": 32, "9e95083e441a": 32, "A": [0, 6, 11, 14, 15, 16, 17, 18, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 46, 48, 49, 50, 51, 54, 55, 57, 58, 60, 63, 64, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 83, 86, 102, 105, 106, 107, 109, 112, 113, 115, 116, 119, 120, 122, 123, 126, 129, 134, 135, 136, 137, 138, 139, 140, 142, 143], "AND": 84, "And": [14, 15, 27, 32, 51, 71, 75, 113, 114, 120, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "As": [11, 12, 14, 16, 18, 19, 20, 27, 28, 29, 31, 34, 35, 46, 48, 50, 51, 54, 56, 57, 63, 64, 67, 70, 71, 73, 74, 75, 78, 81, 82, 86, 87, 91, 112, 113, 114, 115, 117, 118, 121, 122, 126, 128, 130, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143], "At": [19, 76, 78, 86, 127, 131, 138, 140, 142], "BUT": [129, 131, 134, 136, 137, 138, 140], "Be": 14, "Being": 36, "But": [3, 4, 6, 12, 15, 16, 17, 22, 25, 28, 29, 31, 32, 34, 36, 37, 51, 57, 59, 60, 65, 69, 70, 72, 74, 75, 81, 82, 84, 87, 91, 112, 113, 114, 117, 118, 119, 121, 122, 128, 129, 130, 131, 137, 138, 139, 140], "By": [6, 18, 27, 28, 29, 39, 42, 58, 60, 67, 82, 86, 112, 113, 114, 116, 117, 118, 119, 121, 122, 124, 129, 131, 136, 137, 138, 140], "For": [2, 3, 4, 6, 7, 10, 11, 12, 15, 17, 18, 19, 20, 22, 26, 27, 28, 29, 31, 32, 41, 45, 48, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 68, 69, 70, 74, 75, 76, 78, 81, 82, 83, 84, 87, 88, 91, 92, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 121, 122, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "IN": 37, "IT": [74, 82, 113], "If": [0, 3, 4, 5, 11, 14, 15, 17, 19, 22, 23, 24, 25, 27, 28, 29, 32, 34, 36, 37, 39, 41, 42, 43, 45, 48, 49, 50, 51, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 69, 70, 74, 76, 78, 81, 82, 83, 86, 89, 95, 105, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 127, 128, 130, 131, 132, 137, 138, 139, 140, 141, 142, 147, 150], "In": [2, 3, 4, 6, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 83, 84, 86, 95, 96, 103, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "It": [6, 7, 9, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 40, 44, 48, 49, 50, 51, 54, 56, 58, 59, 60, 62, 64, 65, 68, 69, 70, 71, 72, 74, 75, 78, 81, 82, 83, 84, 86, 88, 92, 105, 106, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 129, 132, 133, 134, 137, 139, 140, 141, 142, 143, 149, 150], "Its": [6, 9, 11, 150], "NO": 36, "NOT": [75, 84, 129, 130, 150], "No": [19, 23, 27, 28, 50, 54, 69, 72, 78, 112, 113, 116, 119, 130, 133, 135, 136, 137, 138, 142], "Not": [33, 34, 35, 51, 61, 62, 75, 78, 84, 86, 105, 106, 118, 126, 135], "OR": [19, 75, 84, 126, 137], "On": [3, 14, 16, 28, 35, 36, 48, 55, 57, 60, 78, 82, 105, 131, 138, 142], "One": [6, 15, 18, 32, 39, 46, 60, 63, 69, 70, 81, 86, 107, 127, 128, 129, 130, 136, 138, 140], "Or": [6, 28, 119, 120, 128, 140], "Such": [6, 17, 28, 112, 113, 116, 120], "TO": [17, 123, 140], "That": [5, 11, 16, 22, 25, 32, 34, 48, 51, 84, 89, 128, 135, 137, 138, 139, 141, 142, 143, 147], "The": [0, 3, 4, 5, 6, 9, 11, 14, 15, 16, 17, 19, 20, 22, 25, 26, 27, 28, 29, 31, 36, 37, 39, 40, 41, 45, 46, 49, 52, 54, 55, 56, 57, 58, 59, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 89, 102, 103, 105, 106, 107, 108, 109, 110, 112, 114, 115, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147], "Their": 134, "Then": [0, 29, 33, 42, 43, 44, 46, 52, 55, 56, 60, 70, 71, 81, 82, 83, 113, 129, 135, 136, 137, 140, 142], "There": [3, 11, 12, 14, 15, 18, 19, 20, 22, 27, 28, 32, 33, 34, 36, 42, 43, 48, 50, 57, 60, 64, 68, 70, 71, 72, 75, 82, 84, 86, 87, 91, 112, 113, 115, 116, 118, 127, 128, 129, 130, 132, 134, 135, 136, 138, 139, 140, 142], "These": [10, 17, 18, 31, 32, 46, 50, 51, 57, 58, 60, 61, 67, 69, 76, 81, 84, 119, 126, 129, 130, 131, 134, 136, 138, 140, 150], "To": [3, 4, 6, 10, 11, 14, 15, 18, 19, 20, 22, 24, 28, 29, 31, 32, 36, 37, 39, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 60, 62, 64, 69, 71, 72, 73, 74, 76, 78, 81, 82, 83, 84, 96, 105, 106, 108, 109, 113, 114, 116, 117, 123, 129, 130, 132, 133, 134, 136, 138, 139, 141, 142], "Will": 57, "With": [4, 5, 11, 23, 34, 37, 51, 84, 89, 109, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 147], "_": [15, 18, 60, 68, 70, 77, 81, 82, 83, 119, 135, 137, 141], "__": [81, 82, 84], "__add__": 84, "__and__": 84, "__bases__": 82, "__builtins__": [39, 50, 60], "__cached__": [39, 60], "__call__": 17, "__class__": [51, 81, 82], "__closure__": 16, "__d": 83, "__dict__": [18, 64, 82], "__div__": 84, "__doc__": [39, 54, 60, 69, 82], "__eq__": 84, "__file__": [39, 60], "__floordiv__": 84, "__ge__": 84, "__getitem__": [27, 112], "__gt__": 84, "__iadd__": 84, "__idiv__": 84, "__imod__": 84, "__imul__": 84, "__init__": [14, 15, 18, 52, 63, 64, 81, 82, 83, 84, 135], "__invert__": 84, "__ipow__": 84, "__isub__": 84, "__iter__": [14, 15], "__le__": 84, "__loader__": [39, 60], "__lshift__": 84, "__lt__": 84, "__main__": [64, 81, 82, 83, 84, 86], "__maxpric": 81, "__mod__": 84, "__module__": 82, "__mro__": 83, "__mul__": 84, "__name__": [39, 60, 82, 135], "__ne__": 84, "__next__": [14, 15], "__or__": 84, "__package__": [39, 60], "__peg_parser__": 68, "__pow__": 84, "__rshift__": 84, "__salari": 81, "__secretcount": 82, "__spec__": [39, 60], "__str__": [52, 84], "__sub__": 84, "__truediv__": 84, "__version__": [64, 105, 110], "__weakref__": [64, 82], "__xor__": 84, "_add_numeric_oper": 112, "_age": 70, "_age_": 119, "_ax": 135, "_classname__attrnam": 82, "_decor": [119, 129, 135], "_drop_axi": 116, "_if": 70, "_indentation_": 22, "_init_": 51, "_io": 48, "_justcounter__secretcount": 82, "_m": 67, "_m_m_m_m_m_m_m_m_m": 67, "_marks_": 119, "_name_": 119, "_sinplot_": 127, "_strptime": 41, "_strptime_datetim": 41, "_temperatur": 18, "_transform_index": 119, "_y": 138, "a04242241123": 32, "a1": 134, "a2": 134, "a3": 134, "a3e12f": 60, "a8dfd56d4d8": 50, "a_copi": 107, "a_g_": 70, "aa": 19, "aabbcc": 102, "aabc": 19, "ab": [11, 19, 33, 39, 48, 110, 132, 138, 141], "ab123csd": 19, "abacu": 19, "abbrevi": [32, 40, 41, 42, 120, 129, 135, 136], "abc": [19, 27, 33, 34, 74], "abc12d": 19, "abc12de23f456": 19, "abcdef": 102, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 60, "abil": [32, 81, 83, 135], "abl": [3, 6, 10, 14, 16, 57, 73, 76, 83, 127, 130, 134, 136, 137, 138, 140, 141], "abnorm": 29, "abomasnow": 123, "abomasnowmega": 123, "abort": 29, "about": [5, 6, 7, 11, 12, 14, 16, 17, 18, 19, 20, 22, 27, 31, 32, 33, 34, 35, 36, 37, 39, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 62, 64, 68, 69, 70, 71, 72, 73, 74, 76, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 106, 107, 109, 112, 113, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 147], "abov": [3, 4, 6, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 46, 48, 50, 51, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 69, 70, 71, 73, 76, 81, 82, 83, 84, 86, 105, 107, 112, 114, 115, 116, 117, 119, 120, 121, 122, 126, 127, 128, 129, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "abra": 123, "abruptli": [27, 28], "absenc": 31, "absol": 123, "absolmega": 123, "absolut": [11, 16, 18, 22, 54, 62], "absolute_valu": 54, "abstract": [50, 81, 134, 136, 137, 140], "abus": 16, "abxz": 19, "abyss": 19, "ac": 19, "academ": 113, "acc": 107, "accelgor": 123, "accent": 132, "accent_r": 132, "accept": [32, 52, 82, 88, 92, 126, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "access": [11, 16, 18, 25, 36, 40, 45, 48, 50, 54, 55, 56, 59, 60, 62, 63, 64, 69, 72, 75, 76, 81, 83, 86, 105, 106, 107, 112, 113, 114, 115, 129, 130, 137], "access_level": 25, "accessor": 112, "accident": 81, "acco": 123, "accomplish": [32, 36, 37, 42, 74], "accord": [25, 54, 65, 75, 84, 140, 142, 143], "accordingli": [28, 48, 76, 127, 129, 130, 131, 140], "account": [17, 134, 138], "account_bal": 81, "account_info": 81, "accur": [3, 4, 24, 25, 31, 62, 72, 131], "acd": 19, "acdbea": 19, "ach": 19, "achiev": [29, 81, 84, 120, 127, 128, 131, 132, 137, 140], "achiv": 32, "acm": 77, "aco": [60, 62], "acordingli": 140, "acosh": [60, 62], "acquaint": [130, 131, 139, 140, 141, 142], "acquir": [81, 83], "acronym": 32, "across": [86, 112, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142], "act": [11, 17, 22, 55, 64, 75, 81, 82, 135, 141], "action": [22, 34, 51, 54, 67, 81, 86, 112, 128, 142], "activ": [6, 11, 44, 142, 149], "actual": [14, 15, 17, 18, 32, 46, 48, 52, 57, 70, 72, 82, 83, 84, 86, 103, 108, 112, 120, 126, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150], "ad": [3, 4, 11, 17, 18, 19, 27, 29, 31, 33, 34, 36, 44, 50, 54, 73, 74, 83, 108, 109, 112, 113, 114, 120, 122, 126, 127, 128, 130, 135, 136, 137, 138, 140], "adapt": [133, 137, 140, 141, 142], "add": [3, 6, 11, 16, 17, 19, 20, 24, 25, 27, 28, 34, 36, 37, 50, 51, 54, 56, 57, 59, 60, 65, 69, 70, 71, 73, 74, 75, 81, 82, 83, 84, 102, 103, 105, 108, 109, 112, 113, 114, 119, 122, 127, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 144], "add_": [12, 87, 91], "add_6_and_3": 68, "add_all_num": 54, "add_binari": 64, "add_collect": 135, "add_expens": 81, "add_incom": 81, "add_item": 54, "add_legend": [141, 142], "add_legend_data": 135, "add_patch": 134, "add_prefix": 119, "add_skil": 81, "add_suffix": 119, "add_ten": [16, 54], "add_two_num": 37, "add_two_numb": [54, 57], "adder": 20, "addit": [6, 11, 13, 20, 31, 51, 54, 57, 59, 64, 70, 73, 74, 75, 81, 83, 84, 105, 127, 128, 130, 131, 135, 137, 140, 145], "addition": [10, 81, 131, 138, 140, 141, 142], "address": [3, 4, 25, 27, 35, 48, 70, 138], "adienc": 141, "adjust": [6, 75, 134, 135, 136, 139, 140], "admin": 25, "adopt": 70, "adult_mal": [136, 138], "advanc": [11, 29, 57, 70, 127, 138], "advantag": [14, 78, 127, 137], "advers": 138, "adversari": 149, "advic": 138, "advis": [60, 70, 131, 138], "aegislashblad": 123, "aegislashshield": 123, "aerodactyl": 123, "aerodactylmega": 123, "aesthet": [126, 128, 129, 130, 131, 135, 138, 140, 142, 145], "af0f59439c9b": 16, "affect": [55, 112, 131], "afford": 127, "afmhot": 132, "afmhot_r": 132, "afoo": 19, "afootbal": 19, "afootest": 19, "after": [6, 14, 19, 25, 27, 28, 29, 31, 32, 33, 34, 45, 46, 48, 50, 51, 54, 55, 56, 57, 60, 64, 68, 69, 70, 72, 73, 74, 78, 82, 84, 86, 107, 108, 109, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 128, 132, 137, 142], "ag": [20, 24, 25, 27, 32, 33, 35, 50, 51, 54, 57, 60, 64, 70, 74, 75, 81, 82, 83, 86, 102, 112, 113, 115, 116, 117, 118, 119, 121, 122, 126, 128, 131, 135, 136, 138, 142], "again": [23, 28, 33, 46, 48, 50, 52, 58, 60, 81, 83, 84, 86, 126, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "against": [19, 108, 113, 120, 128, 130, 131, 135, 141, 142], "age_": 70, "agenda": [126, 128, 130, 137, 140], "agg": [112, 124], "aggfunc": 112, "aggreg": [6, 140], "aggron": 123, "aggronmega": 123, "agre": 128, "ahead": [128, 131], "ai": [11, 95, 138, 150], "aid": 141, "aim": [2, 112, 116, 139], "aipom": 123, "airlin": 143, "alakazam": 123, "alakazammega": 123, "alan": [27, 28, 54, 57, 113], "alan99": 29, "alan99whit": 28, "alfa": [112, 113, 124], "algebra": [10, 105, 131, 149], "algorithm": [1, 3, 4, 10, 27, 83, 130, 141, 149, 150], "alia": 19, "align": [12, 32, 87, 91, 103, 112, 131], "alina": 102, "aliv": [136, 138], "all": [1, 3, 5, 6, 11, 14, 15, 16, 18, 19, 25, 26, 27, 28, 29, 31, 34, 36, 39, 40, 41, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 86, 89, 105, 106, 107, 108, 109, 112, 113, 114, 115, 120, 121, 122, 123, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 150], "all_even": 15, "all_kei": 35, "allan": 32, "allclos": 110, "alll": 103, "alloc": [59, 81, 140], "allow": [7, 9, 11, 16, 17, 18, 19, 20, 22, 25, 27, 28, 31, 33, 34, 50, 51, 56, 57, 69, 70, 71, 74, 75, 81, 82, 83, 84, 86, 88, 92, 107, 108, 112, 113, 119, 120, 121, 129, 132, 136, 137, 141, 142], "almost": [11, 130, 139, 140], "aloha": 126, "alomomola": 123, "alon": [134, 136, 138], "along": [17, 27, 50, 51, 54, 57, 59, 60, 64, 82, 83, 86, 105, 106, 108, 127, 130, 132, 134, 135, 137, 139, 140, 150], "alow": 29, "alpha": [61, 70, 129, 131, 132, 133, 134, 135, 137, 142], "alphabet": [28, 29, 32, 56, 60, 71], "alphanumer": 32, "alreadi": [10, 16, 17, 25, 32, 33, 36, 48, 50, 60, 65, 78, 86, 112, 113, 122, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142], "alright": 133, "also": [5, 11, 12, 14, 15, 16, 17, 18, 22, 23, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 60, 63, 64, 67, 69, 70, 71, 73, 74, 75, 76, 78, 81, 82, 83, 86, 87, 89, 91, 103, 107, 108, 109, 110, 112, 114, 115, 116, 117, 118, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150], "altaria": 123, "altariamega": 123, "alter": [17, 22, 72, 112, 127, 130, 132, 134, 135, 137, 138, 139, 140], "altern": [16, 32, 48, 57, 60, 71, 116, 119, 137, 140, 142], "although": [3, 16, 54, 55, 59, 63, 75, 76, 82, 127, 128, 129, 135, 136, 140, 141], "alu": 48, "alwai": [11, 14, 22, 23, 51, 52, 54, 60, 61, 62, 65, 67, 68, 69, 73, 75, 76, 82, 83, 86, 107, 112, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140], "am": [17, 19, 32, 36, 40, 41, 55, 64, 74, 86, 127, 130, 132, 134, 135, 136, 137, 138, 140, 142], "amaura": 123, "amaz": [31, 142], "amazon": 32, "amber": 129, "ambigu": 65, "ambipom": 123, "amd": 78, "amd64": 11, "amelia": 86, "america": [39, 43, 48], "american": 126, "ami": [20, 27, 82], "among": [25, 46, 82, 129, 130, 138, 139, 142], "amoonguss": 123, "amount": [22, 24, 52, 69, 72, 78, 105, 131, 135, 136, 137, 142], "ampharo": 123, "ampharosmega": 123, "ampl": 140, "an": [0, 2, 3, 4, 6, 9, 11, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 37, 40, 44, 45, 46, 48, 49, 50, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 86, 92, 105, 106, 107, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "anaconda": [60, 105, 127], "anaconda3": [41, 60, 116, 119, 120, 121, 126, 129, 133, 135], "analog": [63, 112], "analys": [4, 78, 95, 127], "analysi": [2, 3, 4, 44, 78, 112, 113, 116, 123, 124, 126, 127, 129, 130, 134, 135, 136, 138, 139, 140, 142, 143, 149], "analyst": [112, 120, 128], "analyt": [112, 130], "analyz": [6, 51, 78, 102, 103, 112, 113, 114, 117, 118, 120, 123, 124, 134, 142], "anana": 19, "angl": 62, "ani": [3, 5, 6, 9, 11, 14, 15, 17, 18, 26, 27, 28, 29, 31, 32, 34, 36, 37, 44, 50, 51, 55, 56, 57, 58, 59, 60, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 89, 96, 105, 106, 108, 109, 112, 116, 117, 118, 119, 121, 122, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 150], "anim": [6, 83], "anlayt": 150, "ann": 6, "anniversari": 19, "annoi": 109, "annot": [128, 137, 138, 141], "annotate_ax": 135, "annual": [11, 113, 131], "anomal": 0, "anomali": [1, 149], "anonym": [9, 15, 37, 66], "anorith": 123, "anoth": [2, 6, 9, 15, 16, 17, 24, 25, 26, 27, 28, 29, 31, 32, 33, 36, 37, 42, 48, 50, 54, 55, 56, 60, 63, 64, 68, 69, 71, 73, 74, 75, 76, 81, 82, 83, 102, 107, 108, 112, 113, 114, 121, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "anscomb": [130, 132], "answer": [31, 140], "antibiot": 27, "anuko": 32, "anukool": [32, 49], "any_fun": 64, "anymor": 141, "anyon": [32, 70], "anyth": [11, 23, 32, 54, 82, 86, 116, 119, 121, 122, 127, 134, 137, 142], "anytim": 128, "anywai": [24, 136, 137, 141], "anywher": [19, 132], "apart": [3, 11, 33, 108, 131, 134, 140], "api": [116, 119], "app": 129, "appart": 29, "appdata": 60, "appeal": [127, 128, 138], "appear": [32, 55, 56, 59, 64, 69, 83, 127, 129, 130, 131, 138, 142], "appen": 109, "append": [11, 27, 37, 48, 51, 54, 59, 60, 64, 74, 81, 105, 109, 112, 119, 121, 124, 130, 132, 133, 134, 135, 142], "appl": [19, 27, 32, 33, 35, 36, 71, 72, 75, 82, 114, 138], "appli": [11, 17, 18, 50, 59, 115, 116, 118, 119, 120, 122, 129, 130, 134, 137, 139, 140, 141, 142], "applic": [9, 19, 31, 32, 44, 48, 60, 63, 81, 82, 96, 108, 113, 119, 134, 149, 150], "approach": [6, 13, 81, 108, 116, 119, 141, 142], "appropri": [4, 23, 24, 25, 26, 31, 41, 54, 129, 134], "approxim": [3, 4, 31, 139, 140], "apr": 67, "april": [25, 29], "apython": 19, "ar": [0, 3, 4, 5, 6, 10, 11, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 88, 89, 92, 95, 103, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 150], "arab": 48, "arang": [102, 105, 107, 108, 110, 142, 143], "arbitrari": [35, 36, 51, 54, 86, 107, 112, 129], "arbok": 123, "arc": 62, "arcanin": 123, "arceu": 123, "archen": 123, "archeop": 123, "architectur": 6, "arctan2": 110, "arcx": 32, "arcxarcx": 32, "area": [54, 70, 75, 81, 83, 131, 137, 140, 141], "area_of_circl": [54, 70], "aren": [37, 136, 138, 140], "arg": [17, 21, 29, 41, 51, 57, 86, 119, 129, 132, 135, 141], "arg1": [37, 57], "arg2": 37, "arg3": 37, "argentina": 102, "argmax": 110, "argmin": 110, "argpartit": 110, "argsort": 110, "argument": [9, 14, 15, 17, 18, 19, 20, 32, 36, 37, 39, 40, 41, 45, 46, 48, 49, 50, 52, 55, 59, 60, 64, 66, 70, 82, 86, 102, 106, 109, 127, 128, 129, 130, 131, 133, 136, 140, 142], "argument1": 60, "argument2": 60, "argument_list": 59, "argv": 60, "ariado": 123, "aris": [17, 28], "arithmet": [18, 31, 50, 54, 81, 84, 108], "arm": [78, 126], "armaldo": 123, "arnold": 126, "aromatiss": 123, "aron": 123, "around": [32, 57, 64, 72, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142], "arr": [17, 106, 108], "arrai": [9, 11, 12, 27, 32, 35, 37, 48, 54, 60, 87, 91, 111, 112, 130, 131, 132, 134, 140, 141, 142, 143], "arrang": [49, 123, 130, 135, 138, 139], "array_equ": [105, 110], "arriv": [134, 137], "arrow": 50, "arrrai": 112, "arsen": [140, 141, 142], "art": 29, "arthur": [17, 20, 25, 27, 35, 37, 54, 57, 74, 81, 82, 83], "arthurhunt": 20, "articl": [28, 43, 44, 45, 46, 56, 57, 86, 112, 113, 116, 118, 119, 131], "articuno": 123, "artifici": [6, 138, 149], "artificial_intellig": 138, "artist": 135, "as_cmap": 129, "as_strid": 110, "asabeneh": [11, 48], "ascend": [112, 123, 124], "ascii": [32, 48], "ascii_lett": 60, "ascontiguousarrai": 110, "asian": [34, 126], "asian_countri": 34, "asid": 138, "asin": [60, 62], "asinh": [60, 62], "ask": [11, 15, 22, 31, 52, 74, 140], "aspect": [81, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 139, 140, 141, 142], "assaria": 126, "assert": [50, 51, 68, 69], "assertionerror": 50, "assess": 139, "assign": [2, 6, 16, 17, 18, 27, 32, 33, 34, 35, 36, 37, 42, 50, 55, 56, 57, 59, 64, 69, 71, 72, 73, 76, 77, 81, 84, 86, 112, 113, 116, 119, 121, 122, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142], "assist": [129, 141], "associ": [35, 60, 64, 69, 70, 76, 82, 128, 131, 135, 136, 140, 142], "assum": [0, 3, 6, 18, 75, 116, 129], "assumpt": [131, 140], "assur": [134, 136, 140], "asterisk": [20, 57, 60], "astyp": [105, 109, 110, 112, 137, 142], "async": 68, "atan": [60, 62], "atan2": [60, 62], "atanh": [60, 62], "ath": 19, "atk": 123, "atlanta": 83, "atlanti": 20, "atleast": 132, "atleast_2d": 110, "atmospher": 128, "attach": [16, 18, 29, 70, 81, 112, 128, 129, 130, 131, 132, 135, 137, 139, 140, 142], "attack": [123, 126], "attain": 138, "attempt": [128, 136, 140], "attent": [135, 137, 142], "attr": [82, 83], "attract": [74, 127], "attrib": 48, "attribut": [16, 17, 18, 19, 36, 39, 45, 50, 52, 54, 60, 62, 69, 74, 81, 83, 86, 108, 116, 119, 132, 134, 135, 140], "attributeerror": [36, 81, 82, 83, 135, 140], "attributemethod": 69, "audi": [112, 113, 124], "audienc": 141, "audino": 123, "audinomega": 123, "audio": [11, 142], "aug": 67, "augmentedassign": 69, "august": 25, "auroru": 123, "australia": [102, 131], "auto": [123, 124], "autom": [11, 27, 28], "automat": [6, 14, 15, 18, 31, 60, 70, 73, 81, 82, 86, 112, 127, 128, 131, 133], "automobil": 112, "automobile_data": [112, 113, 124], "automobile_data1": 124, "autopct": [102, 103], "autoregress": 140, "autumn": [25, 54, 126, 132], "autumn_r": 132, "ava": 48, "avail": [31, 32, 33, 34, 36, 48, 60, 62, 64, 67, 69, 71, 72, 74, 76, 83, 84, 108, 112, 118, 119, 128, 129, 130, 131, 137, 138, 140, 141, 142], "avalugg": 123, "averag": [0, 3, 27, 33, 54, 103, 112, 113, 131, 136, 140, 142], "avg": 123, "avocado": 75, "avoid": [16, 25, 26, 29, 36, 37, 48, 58, 63, 73, 81, 106, 116, 131, 140], "avov": [131, 132], "awai": [11, 19, 70, 127, 130, 131, 136, 138], "await": [68, 128], "awar": [48, 131, 135], "award": 140, "awesom": [11, 132], "awhil": 70, "awk": 11, "ax": [12, 87, 91, 116, 119, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "ax1": [141, 143], "ax2": 141, "ax4": 141, "ax5": 141, "ax6": 141, "ax_joint": 131, "axarr": 103, "axes_styl": [127, 138], "axessubplot": [126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140, 143], "axew": 123, "axhlin": 142, "axi": [19, 102, 103, 105, 106, 108, 109, 112, 118, 123, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142], "axis_nam": 116, "axisgrid": [128, 130, 131, 132, 133, 136, 139, 140, 141, 142], "axz": 19, "ax\u00b2": 54, "az": 126, "azelf": 123, "azumaril": 123, "azuril": 123, "b": [17, 25, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 45, 48, 49, 51, 54, 55, 56, 57, 60, 61, 62, 64, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 102, 105, 106, 107, 108, 112, 113, 115, 116, 117, 118, 119, 122, 126, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "b1": 84, "b2": 84, "b312893cfb9a": 35, "b334ef": 60, "b3ac65e67ae9": 55, "b4c816180ad9": 74, "b72af0bfcd83": 33, "b8ab82a1062c": 57, "b8eab4452d4b": 82, "b942612e6b6a": 33, "b951d4fef2c8": 51, "b977fb738e16": 81, "babydog": 83, "bac": 19, "back": [32, 49, 57, 74, 78, 84, 95, 105, 112, 116, 119, 120, 121, 122, 123, 128, 135, 136, 137, 138, 139, 140], "back_end": 33, "backend": [127, 130, 142], "background": [15, 127, 129, 131, 137, 138, 140], "backlash": 19, "backslash": [32, 49, 69, 71], "backspac": 32, "backward": [18, 28, 32, 49, 72, 86, 137], "bad": [51, 112, 136], "bag": 70, "bagon": 123, "baidu": [57, 70], "ball": [27, 35, 71], "baltoi": 123, "banana": [19, 25, 27, 33, 36, 51, 71, 72, 74, 75, 114], "band": 140, "bandwidth": [133, 137, 140], "banett": 123, "banettemega": 123, "bangladesh": [48, 131], "bank": 135, "bar": [19, 33, 35, 56, 128, 134, 135, 136, 137, 139, 140, 142, 145], "bar1": 138, "bar2": 138, "bar3": 138, "barack": 48, "barbaracl": 123, "barboach": 123, "barcelona": 102, "barchart": 102, "bare": 150, "bark": 83, "barn": 20, "barplot": [127, 134, 138, 139], "basculin": 123, "base": [2, 3, 4, 5, 6, 11, 27, 28, 29, 31, 32, 37, 39, 40, 41, 45, 50, 51, 52, 58, 60, 62, 63, 73, 74, 75, 78, 81, 82, 83, 86, 89, 95, 109, 112, 113, 115, 116, 123, 124, 129, 131, 132, 137, 138, 140, 142, 143, 146, 147, 148], "base1": 83, "base2": 83, "baseclass": [81, 83], "baselin": 138, "baseto": 60, "basi": [11, 32, 33, 130, 132, 133, 134, 136], "basic": [10, 17, 18, 19, 29, 31, 45, 52, 56, 60, 81, 108, 112, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 150], "basicli": 34, "basicmethod": 69, "bastiodon": 123, "bat": 83, "bathingsoap": 103, "bathingsoapsalesdata": 103, "battl": 32, "bayleef": 123, "baz": 33, "bb": 19, "bb99b9cebaa8": 35, "bc9e07fcbe69": 36, "bcaaeab6bf17": 73, "beak": 27, "bear": 24, "beartic": 123, "beauti": [19, 67, 126, 140], "beautifi": 48, "beautifli": 123, "beautifulli": 135, "beautifulsoup": 11, "becasu": 68, "becaus": [6, 11, 15, 17, 27, 28, 29, 32, 40, 50, 51, 54, 55, 56, 57, 59, 67, 68, 69, 70, 71, 72, 73, 75, 81, 82, 83, 86, 113, 115, 116, 117, 118, 119, 121, 122, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "becom": [15, 18, 27, 28, 32, 55, 86, 112, 113, 114, 140], "bee": 134, "beedril": 123, "beedrillmega": 123, "been": [2, 6, 19, 29, 32, 33, 34, 35, 36, 48, 50, 51, 64, 70, 82, 86, 95, 110, 126, 128, 129, 130, 131, 134, 135, 137, 139, 140, 141, 142], "beeswarm": [134, 135], "befor": [6, 15, 16, 17, 18, 20, 27, 28, 31, 37, 39, 45, 46, 49, 51, 55, 56, 57, 59, 64, 73, 78, 82, 83, 86, 109, 112, 113, 114, 116, 117, 118, 119, 121, 122, 126, 128, 129, 130, 131, 132, 136, 137, 138, 140, 141, 142, 150], "beforehand": 28, "began": 142, "begin": [12, 18, 27, 32, 33, 34, 45, 48, 60, 64, 69, 70, 82, 84, 86, 87, 91, 121, 122, 123, 126, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 140, 142], "beginn": [9, 67, 78, 130, 136, 137, 150], "behav": [48, 71, 84, 86, 108], "behavior": [31, 64, 81, 82, 83, 86, 117, 121, 122, 130], "behaviour": 75, "beheeyem": 123, "behind": [10, 58, 59, 134, 137, 139, 142], "being": [6, 11, 18, 19, 28, 33, 35, 36, 54, 57, 72, 81, 83, 88, 92, 127, 130, 131, 132, 134, 136, 138, 140, 141], "beldum": 123, "belgium": [102, 131], "believ": [135, 140], "bell": 32, "bella": [27, 81, 82, 86], "bellossom": 123, "bellsprout": 123, "belong": [2, 31, 71, 72, 81, 82], "below": [2, 3, 4, 13, 15, 17, 18, 23, 24, 27, 28, 29, 32, 33, 34, 35, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 54, 57, 58, 60, 63, 64, 67, 68, 70, 71, 72, 74, 75, 81, 83, 84, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 131, 133, 141, 142, 143], "ben": 81, "bend": 130, "benefici": [70, 115], "benefit": [32, 60, 83], "benz": 124, "bergmit": 123, "bert": 149, "besid": 105, "best": [0, 3, 11, 15, 17, 27, 29, 32, 33, 48, 65, 78, 103, 129, 130, 131, 132, 134, 137, 140], "beta": [61, 130], "betavari": 61, "better": [16, 19, 22, 27, 28, 46, 64, 69, 78, 83, 84, 86, 102, 103, 112, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 149], "between": [3, 4, 6, 17, 19, 27, 28, 29, 31, 32, 33, 34, 36, 44, 48, 58, 60, 61, 64, 74, 75, 82, 86, 108, 109, 112, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 140, 141, 142, 143], "beverag": 34, "beyond": [136, 140], "bfc5aa62a0ff": 75, "bfoo": 19, "bia": [6, 149], "bibarel": 123, "bibl": 128, "bidoof": 123, "big": [140, 141, 142, 149, 150], "bigger": [3, 6, 18, 24, 36, 74, 107, 132, 134, 141], "biggest": [106, 127], "bill": [17, 27, 32, 37, 54, 57, 130, 131, 134, 135, 136, 137, 140, 142], "bin": [49, 64, 75, 102, 128, 131, 133, 137, 138, 142], "binacl": 123, "binari": [4, 31, 32, 48, 64, 69, 71, 74, 75, 78, 132], "binary_r": 132, "binary_sum": 64, "bind": [76, 82, 135], "binder": 11, "binomi": 131, "biolog": 6, "bird": [35, 81, 83], "birth": [19, 131], "birth_year": [54, 57, 70], "birthdai": 54, "bisharp": 123, "bit": [3, 4, 11, 34, 61, 75, 78, 128, 132, 143], "bitwis": [69, 84], "bivarait": 131, "bivari": [133, 139, 142], "bject": 48, "black": [6, 126, 134, 135, 138], "blank": 64, "blastois": 123, "blastoisemega": 123, "blaziken": 123, "blazikenmega": 123, "blend": 142, "blind": 129, "blissei": 123, "blitzl": 123, "blob": 141, "block": [5, 22, 23, 24, 25, 26, 27, 28, 29, 48, 51, 54, 69, 81, 89, 112, 133, 140, 143, 147], "blog": [44, 86], "blood": [83, 140], "blood_pressur": 140, "blu": 81, "blue": [27, 69, 102, 129, 130, 132, 135, 143], "blueprint": [81, 82, 86], "blues_r": 132, "bmv": 124, "bmw": [83, 124], "bob": 70, "bodi": [14, 23, 24, 25, 26, 27, 28, 29, 54, 55, 59, 69, 81, 83, 112, 113, 123, 124, 126], "body_camera": 126, "bokeh": 131, "bold": [102, 137, 138, 140, 142], "bolder": 142, "boldor": 123, "bond": [32, 74], "bone": 132, "bone_r": 132, "bonsli": 123, "bonu": 138, "book": [5, 7, 12, 70, 84, 87, 88, 89, 91, 92, 129, 138, 146, 147, 148], "bookmark": 139, "bool": [82, 83], "bool_a": 107, "bool_idx": 107, "boolean": [17, 25, 32, 60, 69, 82, 105, 106, 112, 116, 117, 118, 119, 121, 122], "boost": 34, "booster": 128, "boot_trac": 140, "bootstrap": [138, 140], "boottel": 49, "bore": 29, "born": [19, 51], "borrow": 86, "both": [15, 17, 19, 24, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 45, 48, 49, 51, 55, 56, 60, 69, 71, 75, 76, 81, 83, 86, 88, 92, 108, 112, 113, 114, 116, 119, 127, 128, 130, 131, 135, 137, 138, 142], "bother": [128, 130], "bottl": 32, "bottom": [11, 107, 112, 128, 136, 138, 140], "bottom_plot": 138, "bottombar": 138, "bottomrow": 115, "bouffal": 123, "bound": [16, 17, 50, 61, 78, 82, 112, 135], "boundari": 4, "box": [88, 92, 137, 138, 139, 140, 142, 145], "boxen": 140, "boxenplot": 140, "boxplot": [102, 127, 129, 134, 135, 136, 137, 140, 142], "boxprop": [102, 134], "bp": 102, "brace": [32, 35, 36, 69, 72, 74], "bracket": [15, 23, 27, 28, 32, 33, 34, 35, 37, 69, 71, 72, 106, 107], "brain": [6, 141], "braixen": 123, "brand": 142, "braviari": 123, "brazil": [48, 102], "brbg": 132, "brbg_r": 132, "bread": 32, "break": [6, 9, 14, 22, 30, 51, 52, 54, 60, 68, 69, 71, 74, 141, 142], "breakdown": 134, "breed": 35, "breez": 136, "breloom": 123, "breviti": 107, "brew": 129, "brewer": 129, "brg": 132, "brg_r": 132, "brief": [45, 48, 61, 62, 82, 109], "briefli": 129, "bright": 129, "brilliant": 32, "bring": [32, 48, 130, 132, 136, 138, 142], "broader": [135, 140], "broadli": 50, "brock": 126, "broken": [18, 58], "bronzong": 123, "bronzor": 123, "brooklyn": 135, "brother": 81, "brown": [126, 129], "browser": [11, 129], "bruce": 57, "bruyn": 102, "bsd": [112, 123, 124], "btw": 105, "buck": 126, "bucket": 129, "budew": 123, "bue": 143, "buffer": 48, "bug": 123, "bugn": 132, "bugn_d": 138, "bugn_r": 132, "build": [11, 15, 18, 19, 81, 82, 88, 92, 112, 127, 133, 135, 149], "built": [5, 11, 14, 16, 18, 27, 29, 31, 37, 48, 51, 52, 54, 59, 64, 65, 67, 69, 70, 74, 76, 81, 83, 84, 89, 103, 112, 116, 119, 126, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 147], "builtin": [11, 64], "buizel": 123, "bulbasaur": 123, "bulk": 134, "bunch": [32, 128], "buneari": 123, "bunnelbi": 123, "bupu": 132, "bupu_r": 132, "burlington": 126, "burmi": 123, "busi": [11, 112, 130, 135, 138], "bussi": 11, "butter": 32, "butterfre": 123, "bw": [137, 139], "bwmeq": 60, "bwr": [132, 139], "bwr_r": 132, "bx": [54, 131], "bypass": 29, "byte": [48, 49, 112], "c": [9, 11, 17, 18, 19, 25, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 43, 48, 49, 50, 51, 54, 59, 60, 62, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 83, 86, 102, 103, 106, 107, 108, 109, 112, 116, 117, 118, 119, 120, 121, 123, 124, 126, 129, 131, 133, 134, 135, 136, 138, 143], "c0": [128, 129], "c00e5d7d3c3": 50, "c02acf54079b": 124, "c1": [82, 83, 129], "c2": 129, "c3": 129, "c3f637926d7e": 48, "c4": 129, "c454c1331524": 52, "c5": 129, "c6": 129, "c7": 129, "c761920b81b0": 51, "c8": 129, "c8f749f7a9ca": 124, "c9": 129, "c92d9f2b36de": 72, "c_name": 83, "ca": [19, 126], "cab": [19, 140], "cabbag": 51, "cabxz": 19, "cach": 135, "cacnea": 123, "cacturn": 123, "cad": 11, "calcul": [3, 6, 23, 27, 29, 31, 44, 54, 62, 69, 70, 74, 75, 81, 83, 86, 112, 127, 129, 131, 133, 134, 135, 137, 138, 140], "calcula": 10, "calculate_ag": [54, 57], "calculate_area": 81, "calculate_mean": 54, "calculate_median": 54, "calculate_mod": 54, "calculate_rang": 54, "calculate_slop": 54, "calculate_std": 54, "calculate_vari": 54, "calculu": 149, "calendar": 140, "call": [0, 6, 7, 11, 14, 15, 16, 17, 18, 19, 20, 22, 26, 27, 28, 32, 33, 34, 35, 36, 37, 41, 46, 48, 50, 51, 52, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 88, 92, 107, 114, 115, 116, 119, 121, 122, 127, 129, 135, 137, 138, 140, 141, 142, 143], "callabl": [14, 17, 35, 60, 119, 135, 137], "callablemethod": 69, "callback": 17, "caller": 15, "cambridg": 137, "camelcas": 70, "camera": 126, "camerupt": 123, "cameruptmega": 123, "can": [3, 5, 6, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 82, 83, 84, 87, 89, 91, 103, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 149, 150], "canada": 102, "candi": 82, "canidaefamili": 83, "cannon": 75, "cannot": [15, 17, 18, 20, 27, 29, 31, 32, 34, 35, 36, 41, 48, 50, 51, 55, 56, 57, 59, 60, 68, 70, 71, 72, 73, 74, 75, 78, 81, 86, 109, 113, 116, 118, 126, 132, 138], "canon": 11, "cap": 138, "capabl": [19, 142], "capit": [17, 32, 54, 60, 70], "capital_c": 70, "capitalis": 32, "capitalize_list_item": 54, "capsiz": 138, "captial": 32, "captur": [51, 61, 75], "capword": [60, 70], "car": [6, 82, 83, 112, 113, 126], "car_horsepow": 124, "car_info": 83, "car_manufactur": 124, "car_pric": 124, "carbink": 123, "care": [14, 48, 108, 112, 130, 131, 140, 143], "carefulli": 29, "carnegi": 6, "carnivin": 123, "carpricedf": 124, "carracosta": 123, "carri": [31, 36, 75, 84, 122], "carriag": 32, "carrot": 51, "carsdf": 124, "carsdf1": 124, "carsdf2": 124, "carshorsepowerdf": 124, "carson": 57, "carter": 81, "carvanha": 123, "cascoon": 123, "case": [2, 3, 4, 6, 16, 17, 19, 22, 23, 24, 27, 29, 31, 32, 35, 36, 46, 50, 51, 60, 68, 69, 70, 71, 74, 75, 76, 78, 81, 83, 86, 96, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 149], "cast": 106, "castform": 123, "cat": [6, 27, 71, 72, 86, 132], "cat1": 86, "cat2": 86, "cat_po": 135, "catch": [22, 52, 137, 142], "cateat": 102, "categor": [4, 60, 112, 113, 126, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 145], "categori": [22, 31, 50, 72, 123, 126, 129, 132, 134, 138, 141], "categoricalindex": 112, "categorize_countri": 17, "category_point": [130, 132], "caterpi": 123, "cathi": 27, "catplot": 140, "caught": [14, 29, 51], "caus": [17, 18, 29, 36, 48, 50, 51, 52, 67], "cautiou": 142, "cb8ac02fbcd3": 50, "cbar": 143, "cbook": 135, "cd": 60, "cde": 19, "cdn": 102, "ceil": [60, 62, 110], "celebi": 123, "cell": [11, 16, 55, 127, 143], "cell_cont": 16, "celsiu": 18, "center": [32, 51, 74, 109, 128, 133, 136, 137, 138, 141], "centimetr": 126, "centr": 130, "central": [81, 126, 130, 134, 136, 137, 138, 140], "centroid": 2, "centuri": [40, 41], "certain": [0, 19, 22, 29, 32, 33, 34, 41, 43, 50, 51, 60, 65, 70, 112, 127, 136], "certainli": [70, 128, 131, 134, 137, 138, 140, 141], "ch": [27, 37], "chaang": 123, "chain": [25, 70, 75, 83, 113, 116, 117, 122], "chairman": 140, "challeng": [32, 82, 141], "chandelur": 123, "chandler": 126, "chang": [9, 11, 17, 23, 27, 28, 31, 36, 37, 44, 50, 51, 54, 55, 56, 57, 60, 72, 73, 74, 78, 81, 82, 83, 84, 102, 106, 107, 109, 112, 115, 116, 117, 118, 119, 121, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "change_to_upp": 17, "chansei": 123, "chapter": 32, "char": [15, 27, 71], "charact": [11, 17, 22, 27, 28, 29, 40, 41, 48, 60, 67, 69, 70, 72, 74, 119, 127], "characterist": [4, 6, 36, 81, 123, 124, 140], "charcter": 32, "charizard": 123, "charizardmega": 123, "charmand": 123, "charmeleon": 123, "chart": [138, 140, 141], "chase": 126, "chatot": 123, "chdir": 60, "che": 19, "cheat": [104, 111, 125], "check": [12, 15, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 48, 51, 54, 56, 60, 70, 72, 75, 81, 82, 83, 87, 91, 109, 112, 117, 121, 127, 129, 131, 132, 135, 140, 142], "check_season": 54, "check_text_similar": 48, "checkbox": 11, "checkpoint": 123, "chelsea": 142, "cher": 19, "cherbourg": [136, 138], "cherrim": 123, "cherubi": 123, "chesnaught": 123, "chespin": 123, "chevrolet": 124, "chikorita": 123, "child": [48, 81, 83, 136], "childmethod": 83, "children": 138, "chimchar": 123, "chimecho": 123, "china": [17, 33, 34, 37, 48], "chinchou": 123, "chines": 48, "ching": 19, "chingl": 123, "chirag": 82, "choic": [25, 31, 60, 61, 110, 129, 130, 131, 133, 134, 135, 136, 140], "choos": [0, 51, 106, 112, 113, 129, 130, 135, 136, 138, 140, 141, 143], "choose_colorbrewer_palett": 129, "choose_cubehelix_palett": 129, "chose": [11, 131], "chosen": [61, 135, 142], "chp": 32, "chracter": 74, "chronometri": 140, "chunk": [54, 123, 129, 130, 136, 140], "chunksiz": 123, "ci": [130, 132, 138, 139, 140], "ci_band": 140, "ci_bar": 140, "cinccino": 123, "cir": 81, "circl": [54, 62, 70, 75, 81, 103], "circum_of_circl": 70, "circumfer": [62, 70, 75], "circumst": [51, 136], "citi": [32, 35, 37, 48, 51, 70, 81, 102, 113, 116, 126, 135], "citizen": 16, "cividi": [129, 132, 135], "cividis_r": 132, "cl": [41, 86], "claim": 126, "clamperl": 123, "clarifi": [19, 51, 76, 127], "clark": [17, 54, 57, 74], "class": [11, 14, 15, 16, 20, 28, 29, 31, 40, 41, 42, 43, 49, 55, 56, 58, 59, 63, 65, 68, 69, 72, 73, 74, 76, 78, 84, 86, 105, 106, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 130, 134, 136, 137, 138, 140, 141, 142, 143], "class1": 83, "class2": 83, "class_suit": 81, "classic": 150, "classif": [141, 149], "classifi": [4, 50, 138], "classinfo": 83, "classmethod": [39, 44], "classnam": 81, "classon": 81, "classtwo": 81, "clauncher": 123, "claus": 102, "clawitz": 123, "claydol": 123, "clayton": 57, "clean": [19, 48, 51, 58, 63, 69, 117, 118, 149, 150], "clean_text": [19, 48], "cleaned_text": 19, "cleaner": [15, 108], "cleans": 140, "clear": [15, 36, 63, 86, 128, 138], "clearer": [52, 69, 128, 142], "clearli": 18, "clefabl": 123, "clefairi": 123, "cleffa": 123, "clich": 19, "click": [11, 150], "client": 141, "clipboard": 112, "cllose": 130, "cloak": 123, "clock": [40, 41, 140], "close": [3, 16, 50, 51, 64, 78, 83, 112, 128, 131, 134, 135, 137, 138, 139, 140, 141], "closer": [14, 73, 86, 131], "closur": [9, 21], "closure_result": 16, "cloth": [4, 6], "cloud": 140, "cloudi": 4, "cloyster": 123, "club": [102, 142], "cluster": [2, 136, 137, 141, 143, 145, 149], "clustergrid": 144, "clustermap": 144, "cm": [12, 87, 91], "cmap": [12, 87, 91, 129, 132, 135, 141, 143, 144], "cmap_cycl": 132, "cmath": 62, "cmd": 67, "cmp": [33, 34, 35], "cmrmap": 132, "cmrmap_r": 132, "cn": 129, "cnt": 27, "co": [31, 60, 62, 76, 105, 108, 126, 142], "coat": 6, "cobalion": 123, "code": [5, 9, 10, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 35, 37, 39, 45, 48, 49, 51, 54, 55, 57, 58, 59, 60, 63, 64, 65, 68, 69, 70, 71, 74, 75, 81, 83, 86, 89, 105, 108, 126, 127, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 142, 147], "codeobject": 69, "coeffici": [105, 128, 130, 141], "coerc": [31, 143], "coercion": 31, "coexist": 131, "cofagrigu": 123, "coffe": 138, "col": [107, 112, 116, 119, 121, 123, 128, 130, 132, 134, 136, 137, 139, 140, 142], "col1": [112, 113, 114, 116, 117, 120], "col2": [112, 113, 114, 116, 117, 120], "col3": 112, "col_clust": 144, "col_fil": 122, "col_l": 134, "col_label": [112, 114, 116], "col_label1": 121, "col_label2": 121, "col_level": 122, "col_nam": [116, 139], "col_ord": [130, 139, 142], "col_posit": 112, "col_r1": 107, "col_r2": 107, "col_var": 139, "col_wrap": [130, 132, 139, 142], "colab": [10, 11, 150], "cold": [12, 32, 87, 91], "coldest_th": 18, "collect": [6, 11, 14, 27, 28, 35, 36, 46, 49, 50, 60, 72, 76, 82, 110, 120, 134, 135, 142], "collector": 48, "colleg": 81, "collid": [63, 76], "colon": [23, 32, 33, 34, 35, 50, 54], "color": [2, 6, 12, 27, 35, 60, 81, 82, 87, 91, 102, 103, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145], "color_cod": [132, 142], "color_palett": [129, 138], "colorbrew": 129, "colormap": [129, 138, 144], "colour": [141, 143], "column": [27, 37, 48, 102, 105, 106, 107, 108, 109, 123, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144], "column_1": 142, "column_2": 142, "column_current_nam": 119, "column_label": [112, 120], "column_nam": 112, "column_on": 112, "column_posit": 112, "com": [11, 20, 54, 57, 70, 77], "comb": 60, "combe": 123, "combin": [3, 32, 33, 34, 51, 68, 70, 75, 83, 106, 114, 121, 133, 134, 137, 139, 140, 142], "combusken": 123, "come": [11, 15, 18, 28, 29, 31, 32, 37, 51, 54, 65, 67, 76, 84, 86, 112, 127, 130, 131, 133, 135, 137, 138, 140, 141, 142], "comfort": [17, 37, 139], "comic": 102, "comma": [32, 33, 34, 35, 36, 54, 72], "command": [5, 11, 28, 51, 59, 60, 64, 78, 82, 89, 105, 127, 130, 147], "commenc": [139, 142], "comment": [9, 18, 54, 70, 80, 105], "commerc": 11, "commerci": 9, "commiss": 140, "common": [0, 6, 17, 33, 36, 39, 44, 48, 50, 60, 81, 82, 86, 107, 112, 114, 127, 129, 130, 134, 136, 138, 140, 141, 142], "commonli": [19, 32, 33, 35, 36, 39, 45, 83, 129, 130, 131, 132, 133, 138, 140], "commonmark": [7, 88, 92], "comonli": 142, "compact": 37, "compani": [32, 33, 35, 57, 83, 103, 112, 113], "companion": [141, 142], "company_grp": 124, "company_info": 83, "company_nam": 83, "company_sales_data": 103, "compar": [9, 15, 24, 31, 32, 33, 34, 35, 36, 70, 75, 78, 84, 127, 128, 131, 133, 134, 137, 138], "comparis": [128, 131], "comparison": [32, 69, 102, 113, 116, 136, 138, 141], "comparit": 134, "compat": [18, 73, 84, 86, 108, 113, 137], "compatible_format": 64, "compens": 135, "compet": [113, 139], "competit": 128, "compil": [9, 11, 17, 19, 69, 80, 132, 140], "complain": 86, "complement": [19, 75, 127, 135], "complementari": 62, "complet": [27, 28, 29, 32, 34, 36, 48, 60, 61, 64, 76, 83, 103, 109, 124, 134, 138, 140], "complex": [6, 11, 27, 28, 31, 58, 62, 69, 71, 72, 75, 82, 83, 95, 102, 103, 112, 113, 123, 124, 128, 130, 141], "complex128": 109, "complex_number1": 71, "complex_number2": 71, "complexnumb": 82, "compli": 78, "complic": [82, 112, 127, 129], "complier": 78, "compon": [54, 81, 129, 130, 139, 140, 142], "compos": 33, "composur": 102, "compound": [11, 33, 75], "comprehend": [136, 141], "comprehens": [14, 15, 27, 131], "compris": 131, "comput": [0, 11, 26, 31, 32, 36, 37, 46, 48, 51, 63, 67, 69, 75, 78, 81, 83, 105, 108, 123, 128, 131, 134, 135, 136, 137, 138, 140, 142], "computation": 130, "concat": [60, 112, 123, 124, 132, 136, 141, 142], "concaten": [33, 34, 37, 60, 74, 81, 84, 105, 112, 136], "conceal": 129, "concentr": 134, "concept": [9, 10, 13, 52, 69, 76, 83, 85, 105, 129, 130, 131, 133, 136, 138, 140, 141, 142, 149], "conceptu": [63, 136, 137, 139, 150], "concern": [128, 136], "concis": [6, 15, 33, 35, 37, 52, 59, 107, 108], "conclud": [16, 138, 140, 142], "conclus": 86, "concret": 140, "concurr": 46, "conda": [11, 105], "condit": [14, 15, 17, 23, 24, 25, 26, 27, 28, 29, 35, 36, 48, 50, 58, 59, 69, 73, 75, 107, 116, 118, 140, 141, 142], "condition_inn": 26, "conditon_out": 26, "conduct": [4, 78], "confid": [130, 132, 134, 136, 137, 138, 140], "config": 56, "confin": 123, "confirm": 67, "conflict": 112, "confus": [15, 26, 63, 70, 86, 128, 129, 135, 136, 138, 141], "congratul": [52, 67, 95], "conjuct": 140, "conjunct": [32, 74], "conkeldurr": 123, "connect": [6, 51, 135, 136, 138, 140, 150], "connection_object": 112, "connectionist": 6, "consid": [3, 6, 22, 28, 32, 33, 35, 36, 40, 41, 51, 57, 63, 78, 84, 86, 108, 109, 113, 117, 118, 128, 134, 136, 139, 141, 142], "consider": [11, 37, 130, 136, 140, 149], "consist": [3, 6, 33, 35, 50, 64, 65, 69, 83, 107, 130, 138, 143], "consol": [11, 74, 112], "constant": [3, 4, 9, 19, 62, 71, 80, 106, 108, 139, 140], "constantli": [139, 141], "constitut": 6, "constraint": 18, "construct": [17, 18, 24, 29, 51, 58, 63, 64, 67, 81, 106, 107, 112], "constructor": [39, 52, 64, 83], "consum": 140, "contain": [6, 14, 15, 17, 25, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 45, 48, 49, 51, 59, 60, 63, 64, 70, 71, 73, 74, 76, 81, 82, 103, 109, 112, 113, 117, 118, 120, 121, 122, 123, 124, 137, 138, 140, 143, 150], "content": [5, 7, 11, 19, 48, 49, 51, 60, 88, 89, 92, 112, 126, 147], "contest": 11, "context": [32, 56, 84, 127], "contextmanag": 69, "contigu": [32, 136], "continu": [0, 9, 15, 22, 30, 51, 68, 69, 82, 83, 131, 135, 138, 139, 142], "contour": [129, 131, 132], "contrast": 107, "contribut": [3, 4, 138, 149], "control": [6, 11, 15, 23, 24, 31, 32, 69, 81, 84, 86, 126, 128, 129, 131, 135, 136, 137, 138, 140, 142, 145], "conttinu": 132, "convei": [138, 140], "conveni": [3, 4, 105, 128, 130, 131, 134, 137], "convent": [19, 64, 82, 86, 116, 119, 140], "convention": 82, "converg": [2, 3, 130], "convers": [9, 32, 69, 80, 129, 134, 137], "convert": [5, 6, 18, 31, 32, 33, 36, 37, 39, 40, 41, 44, 48, 50, 54, 62, 71, 73, 74, 75, 78, 89, 105, 106, 109, 112, 113, 114, 124, 129, 134, 138, 147], "convert_celsius_2_fahrenheit": 54, "convert_dictionary_to_python_object": 82, "convient": 112, "convini": [106, 109], "convnet": 109, "convolut": 149, "cook": 74, "cool": [109, 129, 132], "cool_r": 132, "cooler": 15, "coolwarm": [12, 87, 91, 132, 133, 136, 137, 138, 141], "coolwarm_r": 132, "coordin": 84, "cope": 51, "copi": [11, 32, 36, 49, 60, 81, 108, 109, 112, 116, 117, 118, 119, 121, 122, 135], "copper": [132, 138], "copper_r": 132, "copyreg": 64, "copyright": 11, "copysign": [60, 62, 110], "core": [82, 105, 110, 112, 116, 119, 120, 121, 130, 137, 142], "corg": 33, "cori": [27, 32, 54, 57], "cornel": 137, "corner": 107, "corphish": 123, "corr": [112, 143], "corr_func": 141, "corrcoef": 105, "correct": [4, 6, 24, 28, 33, 50, 57, 60, 67, 78, 109, 113, 114, 128, 130, 136, 142], "correctli": [3, 27, 52, 141], "correl": [105, 112, 128, 131, 132, 134, 139, 141, 142, 144], "correspond": [6, 35, 45, 50, 52, 60, 70, 76, 78, 82, 86, 107, 131, 134, 137, 138, 139, 140, 142], "corsola": 123, "cosh": [60, 62], "cosin": [60, 62, 105], "cottone": 123, "could": [6, 11, 14, 29, 32, 48, 51, 63, 65, 76, 81, 82, 86, 108, 109, 116, 118, 126, 128, 129, 134, 135, 137, 138, 140], "couldn": [86, 132], "count": [6, 19, 27, 28, 29, 32, 34, 48, 54, 68, 81, 82, 86, 102, 112, 123, 126, 131, 134, 137, 140, 142, 145], "counter": [27, 28, 82], "counterintuit": 15, "counterpart": [15, 32, 62], "counti": 50, "countplot": [134, 137, 138], "countri": [3, 17, 20, 25, 27, 32, 33, 34, 35, 37, 48, 50, 51, 54, 70, 81, 102, 131, 140], "countries_data": 48, "countries_details_data": 17, "countries_to_look_at": 102, "country_lst_on": 51, "country_lst_two": 51, "coupl": [3, 4, 48, 129, 135, 136, 137, 138], "cours": [10, 11, 32, 54, 60, 68, 75, 126, 128, 130, 131, 132, 134, 135, 136, 138, 140], "course_nam": 54, "coursera": [0, 2, 3, 4, 6], "cov": [130, 141], "covari": 130, "cover": [16, 17, 19, 48, 50, 112, 113, 114, 118, 119, 121, 126, 128, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 149], "coverg": 130, "covert": 78, "cp1252": 48, "cplai": 11, "cradili": 123, "craft": 134, "cram": 141, "cranido": 123, "crash": 51, "crawdaunt": 123, "creat": [9, 11, 12, 14, 16, 17, 18, 19, 27, 28, 31, 39, 41, 42, 43, 44, 48, 49, 50, 51, 54, 55, 56, 58, 64, 65, 67, 68, 70, 71, 72, 76, 78, 81, 83, 84, 86, 87, 91, 105, 107, 108, 109, 115, 116, 117, 118, 119, 120, 121, 124, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150], "creation": [48, 106, 149], "creator": 86, "credit": [11, 127], "cresselia": 123, "cript": 48, "cristiano": 102, "criteria": [16, 17], "critic": [51, 140, 141], "croagunk": 123, "crobat": 123, "croconaw": 123, "cross": [6, 58, 140, 142], "crustl": 123, "cryogon": 123, "css": [32, 33, 81], "css4": 129, "csv": [102, 103, 113, 120, 121, 122, 123, 126, 131, 137, 138, 140, 142], "csv_exampl": 48, "csv_reader": 48, "ctrl": [11, 28, 50], "cubchoo": 123, "cube": [16, 28, 37, 57, 59, 74], "cubehelix": 132, "cubehelix_palett": 129, "cubehelix_r": 132, "cubic": 3, "cubon": 123, "cum": [32, 36], "cumbersom": 130, "cumsum": [105, 110], "cumul": 105, "cup": 138, "curat": [130, 150], "curiou": 130, "curious": 142, "curli": [19, 32, 35, 36, 74], "current": [2, 3, 4, 9, 16, 27, 28, 29, 40, 44, 45, 46, 47, 48, 51, 56, 60, 61, 64, 67, 76, 81, 82, 83, 121, 122, 128, 129, 130, 132, 134, 142], "current_file_nam": 49, "current_palett": 129, "current_salari": 70, "current_tim": 43, "current_year": [54, 57], "current_year_2021": 70, "curri": [37, 81], "cursor": 48, "curtain": 142, "curv": [131, 137], "custom": [24, 60, 64, 113, 127, 128, 129, 130, 132, 134, 135, 137, 138, 139, 140, 141, 142], "custom_lin": [12, 87, 91], "customerror": 52, "customiz": [127, 140, 142], "cut": [32, 136, 137, 139], "cyan": 129, "cycl": [129, 132], "cycler": [12, 87, 91], "cylind": [112, 113, 124], "cyndaquil": 123, "cython": 135, "d": [2, 25, 27, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 48, 51, 54, 70, 71, 72, 74, 82, 83, 84, 103, 106, 109, 112, 117, 118, 123, 131, 135, 137, 141, 143], "d1": [42, 83], "d2": 42, "d3": 42, "d4": 42, "d75c9779269a": 52, "da": 138, "daaaat": 19, "daaat": 19, "daat": 19, "dai": [10, 19, 31, 32, 40, 41, 42, 43, 44, 45, 54, 56, 127, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 142], "daili": 130, "danc": 81, "dark": [123, 127, 129, 132, 138], "dark2": 132, "dark2_r": 132, "darkgrid": [127, 134, 136, 137, 140], "darkrai": 123, "darmanitanstandard": 123, "darmanitanzen": 123, "darumaka": 123, "dash": 133, "dashboard": [134, 135], "dat": [19, 49], "data": [3, 4, 6, 11, 12, 14, 15, 16, 17, 19, 20, 27, 28, 32, 33, 34, 35, 36, 41, 48, 49, 51, 54, 57, 60, 64, 70, 71, 73, 74, 75, 78, 81, 83, 87, 91, 95, 105, 107, 108, 115, 116, 117, 118, 119, 120, 122, 125, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 150], "data1": [33, 112, 131], "data2": 131, "data_1": [48, 49], "data_analysi": 138, "data_point": 133, "data_str": 41, "data_typ": 113, "databas": [44, 48, 112], "datafam": 114, "datafram": [9, 102, 106, 123, 124, 125, 126, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "datapoint": [128, 129, 134, 137, 139, 140, 142], "datasci": [32, 55, 75], "dataseri": 112, "dataset": [102, 109, 112, 115, 116, 117, 118, 119, 120, 122, 123, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 143, 144, 145], "datatyp": [9, 32, 34, 62, 72, 73, 80, 112, 113, 142], "date": [41, 43, 112, 126, 130, 132, 140, 142], "date_object": [39, 41], "date_rang": 112, "date_str": [39, 41], "date_tim": 40, "date_time1": 40, "date_time2": 40, "dateclass": 39, "datetim": [9, 42, 47, 60, 112], "datetime64": 110, "datetime_capi": 39, "datetime_london": [39, 43], "datetime_ni": [39, 43], "datetime_object": 39, "datetimeindex": 112, "daughter": 81, "dave": 77, "david": [57, 74], "dct": 51, "dd": [39, 41, 42], "dd6f749658a4": 18, "de": [19, 102], "deal": [13, 18, 29, 31, 32, 48, 73, 109, 112, 126, 129, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142], "dealt": [126, 130, 134], "debug": [50, 58, 65, 69], "dec": [11, 17, 40, 41, 45, 67], "decemb": [25, 44], "decend": 123, "decent": [134, 137, 138], "decept": 136, "decid": [3, 4, 18, 22, 35, 119, 130, 131, 136, 137, 138, 140, 142], "decim": [18, 32, 40, 41, 64, 70, 71, 72, 74, 75, 106], "decis": 26, "deck": [136, 138, 142], "declar": [16, 17, 28, 32, 33, 48, 50, 52, 54, 55, 56, 60, 72, 75, 76, 81, 82, 86, 106, 130, 138, 140, 141, 142], "decod": [32, 50], "decompos": 65, "decomposit": [13, 108], "decor": [9, 16, 21, 86, 140, 142], "decorator_with_paramet": 17, "decreas": [6, 28, 58, 126, 129, 131, 136], "decrement": 84, "dedenn": 123, "dedic": [1, 142], "deduc": [130, 137], "deep": [6, 13, 29, 105, 126, 129, 149], "deepak": [49, 60], "deeper": [39, 126, 130, 132, 137, 139, 140, 142], "deepli": [29, 130], "deerl": 123, "def": [14, 15, 16, 17, 18, 20, 24, 25, 26, 29, 37, 46, 51, 52, 54, 55, 56, 57, 58, 59, 60, 64, 65, 68, 69, 71, 74, 76, 81, 82, 83, 84, 86, 119, 123, 127, 130, 132, 134, 135, 141, 142], "default": [5, 16, 39, 56, 58, 62, 64, 67, 74, 82, 83, 89, 102, 105, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 127, 129, 130, 132, 133, 136, 137, 139, 140, 142, 143, 147], "default_ord": 32, "default_valu": 112, "defens": 123, "defer": 121, "defin": [3, 4, 5, 9, 14, 15, 17, 18, 19, 20, 27, 28, 31, 32, 33, 34, 35, 37, 39, 45, 50, 51, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 76, 81, 83, 84, 89, 109, 112, 116, 120, 127, 128, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147], "definit": [11, 17, 27, 54, 57, 59, 60, 64, 69, 74, 81, 82, 83, 86], "degrad": 86, "degre": [3, 18, 60, 62], "deino": 123, "del": [16, 32, 33, 34, 35, 68, 82], "delai": [45, 46, 128, 134], "delattr": 82, "delcatti": 123, "deleg": 83, "delelop": 11, "delet": [16, 18, 35, 36, 49, 50, 69, 105, 112, 118, 121], "deliber": 50, "delibird": 123, "delimit": [48, 109, 112, 123], "delphox": 123, "delv": [127, 128, 131, 132], "demand": [15, 127], "demo": 132, "demonstr": [14, 33, 69, 83, 114, 131, 134, 141, 142], "deni": 25, "denim": [129, 135], "denmark": [17, 33, 51, 131], "denomin": 31, "denot": [18, 20, 32, 57, 58, 72, 81], "densii": 137, "densiti": [128, 129, 131, 132, 133, 135, 137, 140], "deoxysattack": 123, "deoxysdefens": 123, "deoxysnorm": 123, "deoxysspe": 123, "depart": [82, 140], "depat": 82, "depend": [3, 4, 11, 16, 22, 29, 48, 52, 60, 61, 84, 88, 92, 105, 112, 126, 128, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142], "depict": [129, 134, 136, 140], "deploy": 149, "deprec": [120, 124, 128, 133, 135], "deprecation_addendum": 135, "depth": [58, 70, 83, 126, 130, 131, 134], "deriv": [3, 4, 6, 51, 52, 81, 83, 86, 140], "derived1": 83, "derived2": 83, "derivedclass": [81, 83], "descend": [48, 54, 112], "descent": [6, 150], "describ": [3, 4, 6, 54, 57, 60, 69, 75, 81, 112, 126, 131, 136, 138, 139, 140, 141, 142], "descript": [29, 32, 33, 34, 35, 36, 48, 54, 60, 61, 62, 64, 81, 82, 105, 112, 119, 126, 136, 140], "descriptor": [48, 64], "deserv": 137, "desgin": 71, "design": [11, 17, 112, 130, 138, 139, 150], "desir": [17, 29, 33, 109, 142, 149], "desk": 11, "desktop": [11, 49], "despin": [127, 137, 138, 139, 141, 142], "destroi": [15, 55, 82], "destruct": 82, "destructur": 51, "det": 108, "detach": 48, "detail": [5, 15, 18, 45, 50, 57, 69, 74, 81, 82, 83, 89, 107, 112, 114, 116, 121, 122, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 142, 146, 147, 148], "detect": [1, 3, 4, 50, 107, 129, 149], "determin": [32, 36, 117, 118, 122, 130, 131, 132, 134, 136, 138, 140, 141, 142], "determinist": 61, "develop": [9, 11, 19, 25, 52, 63, 70, 78, 81, 86, 96], "deviat": [0, 54, 81, 105, 109, 112, 136, 138], "devic": [74, 78], "dewgong": 123, "dewott": 123, "df": [102, 103, 112, 116, 119, 120, 121, 122, 123, 124, 126, 128, 130, 132, 135, 137, 140, 142, 143], "df1": [112, 131], "df2": [112, 131], "df6ce7ede1dc": 50, "df_xlsx": 123, "dfca0b041b3d": 52, "dhl": 32, "di": [19, 27], "diag": [110, 141], "diag_ax": 141, "diag_indic": 141, "diag_kind": [132, 141], "diag_kw": 132, "diag_sharei": 141, "diagon": [132, 141], "diagram": [76, 115, 119, 122, 133], "dialga": 123, "dialogu": 27, "diamet": 62, "dianci": 123, "dianciemega": 123, "dichotom": 4, "dict": [11, 20, 36, 48, 51, 54, 60, 71, 72, 73, 82, 102, 114, 115, 116, 117, 118, 119, 121, 122, 124, 128, 137, 142, 144], "dict1": [27, 35], "dict2": 27, "dict_1": 82, "dict_item": 35, "dict_kei": 35, "dict_valu": 35, "dictionari": [9, 11, 17, 18, 20, 25, 32, 33, 34, 36, 37, 38, 50, 54, 64, 69, 71, 73, 75, 82, 112, 114, 119, 124, 127, 129, 142], "dictionaryliter": 69, "did": [15, 17, 23, 50, 51, 55, 74, 75, 81, 83, 112, 140], "didn": [32, 81, 84, 127, 136, 137, 142], "die": 142, "diet": [139, 140], "diff": 43, "differ": [6, 16, 17, 19, 20, 22, 27, 28, 29, 31, 32, 33, 34, 35, 40, 44, 45, 46, 48, 49, 50, 51, 54, 55, 57, 59, 60, 63, 65, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 86, 88, 92, 107, 108, 112, 113, 114, 117, 120, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150], "difference_upd": 36, "differenti": 68, "difficult": [78, 127, 134, 135, 136, 137, 138], "dig": [39, 140, 142], "diggersbi": 123, "digit": [4, 6, 27, 32, 41, 60, 64, 68, 70, 75, 81, 109, 140], "diglett": 123, "dimens": [105, 106, 107, 108, 112, 130, 141, 142], "dimension": [2, 13, 27, 37, 105, 106, 112, 114, 130, 141, 142, 149], "dinner": [54, 130, 133, 134, 135, 136, 137, 138, 142], "dir": [19, 39, 50], "dir_nam": 49, "direct": [3, 4, 5, 7, 19, 28, 32, 37, 39, 40, 41, 45, 59, 81, 89, 138, 147], "directli": [11, 15, 33, 52, 54, 60, 63, 76, 78, 81, 82, 108, 127, 133, 139, 140, 150], "directori": [9, 48, 50, 53, 60, 63, 74], "directory_nam": 60, "dirichlet": 140, "disadvantag": [78, 137], "disagre": 31, "discard": 36, "disclosur": 142, "disconnect": 51, "discourag": 86, "discours": 142, "discret": [129, 130, 137, 138, 140, 142], "discuss": [19, 24, 31, 32, 34, 60, 65, 69, 74, 83, 112, 113, 114, 115, 116, 121, 122, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150], "disengag": 140, "disjoint": 36, "disk": [48, 78], "dispar": 140, "dispers": [126, 136], "displai": [0, 5, 24, 25, 26, 27, 28, 29, 32, 39, 49, 51, 52, 64, 67, 71, 75, 78, 82, 83, 89, 102, 109, 115, 127, 129, 131, 134, 135, 136, 137, 138, 140, 141, 142, 143, 147], "displot": 133, "dispos": 140, "dispsid": 83, "disregard": 29, "disrupt": 51, "dist": [60, 145], "distac": 27, "distanc": [19, 27, 75, 86, 136, 137], "distinct": [107, 140], "distinguish": [6, 36, 48, 86, 129], "distort": 140, "distplot": [128, 141], "distribut": [9, 61, 81, 102, 105, 106, 109, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142], "distriut": 136, "ditribut": 131, "ditto": 123, "div0ssutgadkwstr": 60, "dive": [126, 130, 136, 138, 139, 142], "diverg": 129, "divid": [17, 22, 28, 33, 39, 50, 60, 62, 63, 65, 70, 74, 75, 105, 108, 110, 112, 113, 116, 134, 136, 138, 139, 140], "dividend": 57, "divis": [17, 22, 28, 29, 37, 50, 51, 54, 70, 75, 84, 105, 108], "divisor": 57, "django": [11, 32], "dll": 60, "do": [3, 4, 6, 11, 12, 14, 15, 18, 19, 22, 23, 24, 27, 28, 29, 32, 33, 34, 36, 37, 43, 50, 51, 52, 54, 57, 60, 61, 62, 64, 65, 69, 70, 72, 74, 75, 76, 78, 81, 82, 83, 84, 86, 87, 88, 91, 92, 95, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150], "do_someth": 57, "doc": [18, 54, 64, 108], "docstr": [9, 32, 66, 82], "doctor": 19, "document": [5, 12, 48, 49, 54, 64, 69, 81, 82, 87, 89, 91, 92, 106, 107, 108, 127, 130, 136, 146, 147, 148], "dodg": [124, 134, 135, 136, 137, 138, 139, 140], "dodrio": 123, "doduo": 123, "doe": [3, 15, 17, 18, 19, 23, 27, 28, 29, 32, 33, 34, 36, 37, 41, 48, 50, 51, 54, 55, 57, 60, 62, 64, 69, 70, 72, 74, 75, 76, 78, 81, 82, 83, 84, 106, 108, 112, 115, 116, 117, 118, 119, 121, 122, 129, 130, 132, 134, 135, 137, 142], "does_exist": 33, "doesn": [18, 25, 27, 28, 29, 32, 34, 35, 41, 60, 73, 82, 119, 127, 128, 130, 135, 137, 138, 142], "dog": [34, 83], "dohc": [112, 113, 124], "dollar": [12, 87, 91, 102, 103], "domain": [11, 128, 130, 135, 138, 140, 142], "dominantli": 130, "don": [6, 18, 28, 29, 33, 37, 48, 54, 56, 60, 63, 70, 81, 83, 86, 112, 119, 121, 122, 127, 128, 130, 131, 133, 135, 136, 137, 138, 140, 141, 142], "donald": 48, "done": [11, 15, 17, 18, 23, 24, 27, 28, 29, 32, 37, 48, 63, 67, 73, 74, 78, 83, 86, 113, 117, 120, 127, 128, 129, 132, 134, 135, 137, 138, 139, 140, 141, 142], "dong": [3, 4], "donphan": 123, "door": 82, "dot": [10, 13, 60, 63, 81, 82, 102, 103, 105, 108, 131, 134, 135, 136, 137, 138, 140, 150], "doubl": [20, 32, 54, 59, 69, 71, 72, 75, 81, 82, 83, 84, 127], "doublad": 123, "doubt": [131, 134, 135, 136], "down": [3, 4, 18, 29, 58, 60, 75, 126, 127, 129, 131, 141, 142], "download": [11, 60, 102, 103, 109], "downsid": 138, "downtown": 35, "dpi": [102, 103], "dr": [48, 60, 81], "draft": [137, 138, 139, 140, 141, 142], "drag": 134, "dragalg": 123, "dragon": 123, "dragonair": 123, "dragonit": 123, "drapion": 123, "dratini": 123, "draw": [128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 140, 142], "draw_fram": 138, "draw_stripplot": 135, "drawn": [86, 132, 135, 136, 140, 142], "dress": 6, "drifblim": 123, "drifloon": 123, "drilbur": 123, "drill": [129, 130], "drink": 71, "drive": [24, 150], "driver": [57, 140], "drop": [15, 121, 122, 123, 129, 130, 142], "drop_dupl": [118, 122], "drope": 116, "dropna": [112, 122, 128, 130, 132, 141, 142], "dropoff_datetim": 140, "dropoff_latitud": 140, "dropoff_longitud": 140, "drowze": 123, "druddigon": 123, "dry": [54, 81], "dt_object": 44, "dt_object1": 41, "dt_object2": 41, "dt_string": [41, 42], "dtype": [102, 105, 106, 108, 109, 112, 113, 114, 120, 121, 123, 124, 131, 132, 141], "duc": 19, "ducklett": 123, "due": [18, 20, 29, 31, 33, 48, 51, 76, 78, 108, 134], "dugtrio": 123, "dull": 127, "dummi": [131, 138, 142], "dump": [48, 64], "dumpstack": 49, "dunsparc": 123, "duosion": 123, "duplic": [27, 36, 60, 72, 76, 112, 116, 122], "durant": 123, "durat": 140, "dure": [11, 37, 50, 51, 57, 59, 60, 78, 86, 127, 130, 134, 139], "dusclop": 123, "duski": 129, "dusknoir": 123, "duskul": 123, "dusti": 129, "dustox": 123, "dutch": 48, "duti": 126, "dwebbl": 123, "dynam": [9, 72, 76, 78], "dynamicfeatur": 69, "e": [2, 3, 4, 6, 10, 11, 15, 19, 27, 28, 29, 31, 32, 33, 34, 35, 36, 48, 49, 51, 55, 56, 60, 62, 67, 70, 71, 73, 74, 75, 81, 83, 103, 106, 108, 109, 112, 113, 114, 117, 118, 119, 120, 121, 122, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150], "e0e0e0": 102, "e15e5601926f": 86, "e2e604bf92d": 50, "e32e417070a1": 72, "e8fb9ed4ccdc": 140, "each": [0, 2, 3, 4, 6, 11, 14, 15, 17, 24, 25, 27, 28, 29, 32, 33, 34, 35, 36, 51, 54, 58, 59, 60, 64, 69, 70, 71, 72, 73, 74, 76, 78, 81, 82, 83, 86, 105, 106, 107, 108, 112, 113, 114, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 149], "earli": 10, "earlier": [126, 127, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "earn": 75, "earth": 54, "easi": [9, 11, 14, 27, 28, 32, 48, 63, 65, 67, 78, 81, 112, 113, 127, 132, 134, 136, 138, 140, 142, 150], "easier": [9, 14, 18, 19, 37, 58, 63, 68, 74, 78, 86, 114, 134, 139, 141], "easili": [15, 39, 44, 64, 70, 83, 116, 127, 131, 134, 142, 150], "eat": [67, 83], "eb3d2b": 60, "economi": 3, "ecosystem": [7, 88, 92], "ed": 27, "ed7c4dc05b92": 55, "edg": [6, 103, 128, 137, 138, 141], "edgecolor": [128, 134, 135, 138, 141, 142], "editor": [25, 127], "educ": [19, 134, 140], "educa": 19, "education_level": 137, "edward": 141, "ee": 19, "ee4e8ee8c904": 50, "ee80ca1a52c8": 71, "eelektrik": 123, "eelektross": 123, "eeve": 123, "effect": [32, 48, 56, 60, 81, 129, 131, 134, 138], "effici": [18, 27, 28, 31, 48, 54, 60, 63, 76, 78, 81, 105, 112, 114, 128, 135, 140], "effort": 141, "eg": [17, 19, 70, 78], "egg": 60, "eh": 61, "eigenvalu": [13, 108], "eigenvector": 13, "eight": 124, "eighti": 19, "einstein": 19, "either": [19, 22, 23, 25, 45, 51, 52, 64, 69, 75, 78, 83, 112, 113, 119, 126, 127, 129, 130, 133, 134, 136, 137, 138, 140, 141, 142], "ekan": 123, "el": 32, "elabor": 64, "electabuzz": 123, "electivir": 123, "electr": 123, "electrik": 123, "electrod": 123, "eleg": [9, 14, 15, 16, 35, 37, 58], "elegantli": 14, "elekid": 123, "element": [14, 27, 28, 31, 32, 45, 49, 54, 59, 60, 61, 67, 72, 73, 74, 75, 77, 82, 106, 107, 108, 109, 112, 114, 115, 127, 138, 140, 142], "elementari": 136, "elementtre": 48, "elementwis": [108, 109], "elemnet": [35, 72], "elemtnt": 72, "elgyem": 123, "elif": [9, 16, 22, 26, 29, 30, 52, 68], "elimin": [29, 72, 86], "elliot": 126, "ellipsi": 69, "ello": 32, "els": [9, 14, 16, 19, 22, 23, 26, 30, 32, 33, 35, 37, 48, 54, 57, 58, 60, 65, 68, 71, 74, 81, 82, 102, 113, 116, 118, 119, 127, 128, 130, 132, 135, 138, 140, 141], "elucid": 138, "email": [4, 11, 19, 20, 48, 77], "email_exchanges_big": 48, "emath": 110, "emb": [12, 87, 91], "embark": [136, 138], "embark_town": [136, 138], "embed": [31, 64], "emboar": 123, "emili": 81, "emolga": 123, "emp": [19, 82, 83], "emp_data": 57, "emp_id": [35, 57], "emp_nam": 35, "emphasi": [82, 139, 142], "employe": [81, 82, 83, 140], "employee_info": 83, "empoleon": 123, "empow": [19, 32, 129], "empoye": 57, "empti": [18, 19, 27, 28, 29, 32, 33, 34, 35, 48, 49, 54, 56, 61, 63, 81, 82, 105, 108, 112, 113, 118, 120, 133], "empty_lik": 108, "en": 133, "enabl": [83, 141, 149], "encapsul": 16, "enclos": [16, 27, 28, 32, 34, 50, 67, 72, 135], "encod": [32, 48, 50, 51, 126, 142, 143], "encount": [50, 51, 108, 140], "encourag": 137, "encrypt": 61, "end": [12, 14, 15, 23, 27, 28, 29, 32, 34, 41, 46, 48, 50, 51, 54, 58, 64, 69, 72, 74, 78, 87, 91, 105, 109, 112, 113, 127, 129, 130, 131, 132, 135, 138, 140, 141, 142, 150], "end_index": 11, "endindex": 107, "endless": 137, "endpoint": 109, "endswith": 32, "enforc": [69, 73], "engag": 140, "engin": [11, 19, 82, 112, 113, 123, 124, 140], "engine_rotation_spe": 70, "england": [48, 50, 51, 81, 102], "english": [32, 35, 48, 71, 78, 127], "enhanc": [128, 134, 135, 142], "enjoi": [32, 60, 132, 137], "enlarg": 127, "enough": [24, 33, 34, 70, 126, 128, 134, 136, 137, 138, 139, 140, 141], "enrol": 138, "ensembl": [149, 150], "ensur": [37, 48, 69, 83, 129, 132, 134, 138, 140, 141], "ensure_ascii": 48, "entei": 123, "enter": [23, 24, 25, 26, 28, 29, 51, 52, 54, 65, 69, 74, 75, 83, 140, 142], "enterpris": 11, "entir": [14, 15, 32, 33, 34, 35, 48, 78, 83, 115, 133, 137, 138, 140, 142], "entireti": 142, "entiti": [68, 81], "entri": [25, 27, 35, 51, 112, 113, 120], "enuemer": 27, "enumer": [27, 32, 36, 135, 138], "env": 11, "environ": [10, 60, 78, 130, 142], "eof": 48, "eoferror": 50, "ep": 110, "epar": 48, "epitom": 141, "epoch": 45, "eq": 60, "equal": [14, 23, 24, 25, 26, 27, 28, 29, 31, 33, 57, 58, 60, 62, 67, 70, 71, 75, 84, 103, 105, 108, 112, 119, 133, 136, 138, 140], "equal1": 60, "equat": [4, 6, 54, 128], "equip": [109, 131], "equival": [15, 17, 18, 27, 29, 32, 33, 35, 37, 39, 40, 41, 48, 59, 71, 75, 82, 83, 86, 107, 108], "er": 19, "era": 142, "eras": 48, "erf": [60, 62], "erfc": [60, 62], "eric": 57, "erp": 11, "err_kw": 140, "err_palett": 140, "err_styl": 140, "errcolor": 138, "errno": 50, "error": [6, 11, 14, 17, 18, 29, 31, 32, 35, 36, 48, 51, 52, 54, 55, 57, 62, 68, 69, 72, 73, 74, 78, 81, 82, 83, 84, 108, 113, 121, 128, 129, 138, 139], "errstat": 110, "errwidth": 138, "escap": [12, 49, 87, 91], "escavali": 123, "especi": [13, 78, 86, 105], "espeon": 123, "espurr": 123, "essenti": [10, 83, 105, 109, 138], "essesnti": 95, "establish": [132, 140], "estim": [3, 128, 130, 131, 132, 133, 134, 137, 138, 139, 140], "estonia": 51, "et": 48, "etc": [3, 6, 11, 12, 14, 15, 27, 28, 29, 31, 32, 34, 35, 36, 39, 40, 41, 45, 54, 59, 60, 68, 69, 70, 73, 75, 76, 78, 81, 82, 87, 91, 105, 107, 108, 109, 112, 120, 123, 124, 126, 131, 132, 135, 139, 140, 150], "ethan": [37, 54, 57, 74], "ethic": 149, "etre": 48, "euclidean": [62, 75], "europ": [39, 43], "eval": [11, 54, 74], "evalu": [22, 23, 24, 25, 28, 29, 48, 59, 74, 75, 78], "evan": 126, "even": [9, 11, 15, 16, 17, 18, 22, 24, 25, 27, 28, 29, 31, 32, 33, 37, 48, 51, 54, 55, 57, 58, 59, 64, 69, 70, 73, 74, 75, 78, 82, 83, 86, 108, 109, 113, 114, 117, 118, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "even_list": 59, "even_no": 59, "even_num": 54, "even_numb": [17, 27, 37, 59], "even_odd": 54, "evenli": [105, 109], "evenodd": 57, "evens_and_odd": 54, "event": 51, "eventu": [139, 141], "ever": [19, 27, 32, 76, 132, 135, 142], "everi": [4, 6, 11, 24, 27, 29, 31, 32, 36, 37, 41, 51, 58, 60, 72, 76, 78, 81, 82, 83, 84, 86, 106, 112, 126, 129, 130, 131, 133, 135, 136, 140, 141, 142], "everybodi": 32, "everyon": [57, 131], "everyth": [17, 33, 34, 35, 36, 52, 60, 72, 76, 81, 82, 135, 138, 139], "everytim": 135, "everywher": 14, "evid": [70, 128, 130, 134], "evok": 129, "ew": 32, "eward": 19, "ex": [19, 78], "exact": [3, 31, 127, 134, 136], "exactli": [17, 19, 29, 32, 51, 86, 127, 134], "examin": 130, "exampl": [0, 2, 3, 4, 9, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 45, 48, 50, 51, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 74, 76, 77, 81, 82, 84, 86, 87, 91, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 127, 128, 129, 131, 132, 133, 134, 138, 139, 140, 142, 143, 150], "exaplan": [50, 81], "exc_info": 51, "excadril": 123, "exceed": 58, "excel": [9, 15, 48, 112], "excel_book": 48, "except": [6, 9, 11, 14, 17, 19, 32, 33, 48, 53, 60, 64, 68, 69, 82, 117, 127, 129, 130, 134, 136, 138], "exception": 131, "exception1": 51, "exception2": 51, "exceptioni": 51, "exceptionii": 51, "exceptionn": 51, "excercis": 111, "exceric": 150, "exclud": [20, 36, 126, 140, 141], "exclus": [48, 60, 106, 112, 116], "excus": 142, "execut": [5, 11, 14, 15, 16, 18, 22, 23, 24, 25, 26, 27, 28, 29, 37, 45, 46, 48, 51, 54, 55, 60, 65, 67, 69, 74, 76, 78, 81, 82, 89, 116, 119, 121, 122, 142, 147, 150], "exeggcut": 123, "exeggutor": 123, "exercis": [9, 55, 56, 123, 125, 126, 139, 140], "exhaust": [14, 27, 78, 130], "exist": [3, 17, 18, 19, 25, 32, 33, 34, 35, 36, 37, 48, 50, 60, 76, 81, 82, 83, 86, 112, 115, 116, 117, 118, 119, 121, 122, 130, 138, 142, 143], "exit": [27, 28, 29, 48, 50, 60, 67], "exmpl": 32, "exp": [31, 60, 62, 70, 108, 110], "expand": [59, 64, 109, 139], "expandtab": 32, "expect": [6, 19, 51, 75, 112, 120, 134, 136, 137, 140, 142], "expens": [58, 81], "experi": [11, 127, 130, 131, 134, 135, 136, 138, 142, 149], "experiment": [11, 150], "expert": 137, "explain": [4, 17, 36, 58, 69, 76, 86, 109, 117, 120, 126, 127, 129, 130, 131, 135, 140], "explan": [20, 23, 24, 25, 27, 28, 29, 32, 37, 39, 42, 44, 46, 51, 52, 55, 56, 57, 59, 61, 62, 65, 73, 75, 81, 82, 83, 84, 86, 96, 108, 109, 135], "explanatori": 128, "explicit": [69, 86, 108, 129, 135, 137, 138], "explicitli": [16, 31, 37, 48, 54, 70, 106, 127, 138], "explod": 102, "exploit": 78, "explor": [19, 45, 95, 127, 130, 132, 135, 137], "exploratori": 127, "exploud": 123, "expm1": [60, 62], "expon": [14, 27, 32, 62, 74], "exponenti": [32, 60, 61, 71, 75, 108, 137, 140], "export": 64, "expovari": 61, "express": [18, 19, 23, 24, 25, 28, 29, 32, 33, 35, 37, 54, 57, 59, 69, 71, 73, 74, 75, 77, 84, 112, 140], "expression1": 26, "expression2": 26, "expression3": 26, "expression4": 26, "extempor": 139, "extend": [18, 32, 54, 69, 81, 83, 121, 129, 136, 137, 138], "extens": [7, 11, 16, 60, 64, 67, 69, 74, 88, 92, 102, 103, 131, 140], "extent": [135, 140], "extern": [29, 51], "extra": [18, 49, 50, 69, 119, 135, 136, 139], "extract": [19, 48, 72, 112, 135, 143], "extrapol": 131, "extrem": [112, 127, 128, 129, 130, 135, 137, 140, 142], "ey": [106, 110, 138], "f": [16, 25, 26, 31, 32, 40, 41, 48, 51, 52, 54, 57, 60, 64, 74, 77, 81, 82, 86, 103, 108, 109, 116, 119, 121, 126, 132, 135, 137, 140], "f09af94986b4": 34, "f1": 0, "f2db54e8947c": 135, "f3f4b74da706": 34, "f45": 19, "f49307ce4aaa": 36, "f6b2789c4214": 121, "f7b055f5764d": 15, "f7d40ce0c112": 18, "f7ffd6347533": 50, "fab": [60, 62], "fab2e1af2c65": 86, "fabric": 142, "fabul": 134, "face": [6, 58, 126, 141], "facebook": 32, "facecolor": [102, 134, 138], "facecream": 103, "facecremsalesdata": 103, "faceprep": 29, "facet": [127, 130, 139, 141, 142], "facet_kw": 139, "facetgrid": [130, 131, 132, 136, 139, 140, 141, 145], "facewashsalesdata": 103, "facil": 60, "facilit": [136, 138], "fact": [14, 17, 33, 34, 70, 105, 130, 137, 139, 140], "factor": [13, 29, 128, 132, 136, 137, 138, 140, 145], "factori": [31, 54, 58, 60, 62, 64], "factorplot": [134, 136, 137, 139, 140], "fade": [129, 136], "fahrenheit": 18, "fail": [3, 4, 24, 25, 28, 48, 50, 112, 129], "fair": [132, 140], "fairi": 123, "fairli": 15, "fake": 140, "falcon": 32, "fall": [23, 31, 50, 65, 72, 134, 140], "fallback": 106, "fals": [0, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36, 48, 54, 60, 64, 68, 70, 71, 74, 75, 83, 84, 106, 107, 109, 110, 112, 116, 117, 118, 119, 121, 122, 123, 124, 126, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "falsi": 75, "famili": [4, 64, 131, 138, 140], "familiar": [18, 32, 34, 82, 103, 124, 132, 135, 137, 138, 139], "fan": [135, 142], "fanci": [107, 112], "fandango": 11, "far": [19, 25, 70, 86, 109, 123, 127, 128, 129, 130], "fare": [136, 138, 140], "farfetch": 123, "fasewash": 103, "fashion": [4, 6, 83], "fast": [48, 105, 112, 116, 140], "faster": [31, 34, 37, 72, 78, 81, 83, 108], "fastest": 150, "fat": 139, "fatal": 126, "fatorplot": 134, "favorit": 34, "fbf7cddd4b2a": 50, "fc": [102, 138], "fdel": 18, "fearow": 123, "feasibl": 121, "featur": [0, 4, 11, 17, 81, 83, 84, 116, 126, 128, 129, 130, 131, 132, 134, 136, 137, 140, 141, 142, 150], "feb": [40, 41, 67], "februari": [25, 40, 41], "feder": 48, "feeba": 123, "feed": [24, 137, 149], "feedback": [24, 54], "feedpars": 11, "feel": [25, 126, 130, 131, 132, 134, 135, 136], "femal": [48, 81, 123, 126, 130, 133, 135, 136, 137, 138, 142], "female_dinn": 137, "female_lunch": 137, "fenc": 136, "fennekin": 123, "feraligatr": 123, "ferrose": 123, "ferrothorn": 123, "fetch": [60, 112, 127, 130, 131, 134, 136, 138, 140, 141, 142], "few": [16, 17, 18, 27, 28, 31, 32, 35, 39, 95, 109, 112, 115, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "fewer": [9, 140, 141], "fffbe51149a7": 41, "fget": 18, "fh": 51, "fi": 37, "fib": 60, "fibo": 60, "fibo1": 60, "fibonacci": [15, 28, 60], "fibonacci_numb": 15, "fiction": 138, "fiddl": 139, "field": [32, 48, 71, 112, 115, 129, 140], "fifa_data": 102, "fig": [12, 33, 36, 87, 91, 128, 133, 137], "fight": 123, "figsiz": [12, 87, 91, 102, 129, 137, 138, 140, 144], "figur": [26, 52, 63, 68, 69, 75, 83, 102, 103, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 142, 144], "file": [5, 11, 14, 15, 17, 32, 50, 51, 52, 56, 57, 60, 63, 64, 67, 68, 70, 74, 78, 89, 103, 112, 120, 121, 122, 123, 142, 147], "file_data": 48, "file_nam": 112, "filedata": 109, "fileexistserror": 60, "filenam": [48, 60, 74, 112, 131], "fileno": 48, "filenotfounderror": [48, 50], "fill": [102, 105, 106, 109, 131, 150], "fillna": 112, "filter": [33, 35, 37, 122], "filter_cond": 112, "filterwarn": [128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "fin": 51, "final": [6, 15, 17, 27, 28, 29, 32, 33, 48, 50, 55, 56, 68, 70, 74, 76, 86, 108, 122, 129, 132, 136, 137, 138, 140, 141, 142], "finali": 109, "finaltext": 74, "financ": 105, "financi": 31, "find": [0, 2, 3, 4, 15, 17, 19, 27, 28, 32, 33, 36, 37, 39, 43, 48, 51, 54, 58, 60, 65, 70, 72, 75, 81, 83, 86, 107, 108, 109, 112, 116, 118, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 150], "find_even_numb": 54, "find_most_common_word": 48, "find_most_frequent_word": 48, "findarea": 83, "fine": [68, 74, 140], "finer": 127, "finfo": 110, "finish": [16, 27, 69, 130, 133], "finit": [14, 31], "finland": [17, 25, 27, 32, 33, 34, 37, 48, 51, 70, 81], "finneon": 123, "fintech": 135, "fir": 128, "fire": 123, "firm": 136, "firmer": 141, "first": [6, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 32, 34, 37, 39, 40, 41, 45, 48, 49, 50, 51, 54, 55, 57, 60, 64, 65, 67, 69, 70, 74, 76, 78, 81, 82, 83, 84, 86, 102, 107, 108, 112, 119, 121, 122, 127, 129, 130, 132, 134, 136, 137, 138, 139, 140, 141, 142, 150], "first_lett": 32, "first_nam": [17, 19, 25, 27, 32, 35, 54, 70, 73], "first_name_to_list": 73, "first_nm": 57, "first_numb": 74, "firstnam": [19, 20, 54, 57, 70, 74, 81], "fit": [0, 3, 4, 64, 128, 130, 131, 132, 133, 136, 137, 140], "fit_fn": 128, "fit_reg": 130, "five": [19, 27, 51, 83, 102, 112, 113, 115], "fix": [12, 27, 50, 57, 78, 87, 91, 112, 130, 140], "flaaffi": 123, "flab\u00e9b\u00e9": 123, "flag": [19, 102, 110, 116, 117, 118, 119, 121, 122, 123, 126, 132, 140], "flag_r": 132, "flamer": 123, "flaot": 31, "flareon": 123, "flase": 75, "flask": [11, 32], "flat": 110, "flatten": [37, 105, 134], "flattened_list": 37, "flavor": [7, 88, 92], "flee": 126, "fleme": 27, "fletchind": 123, "fletchl": 123, "flexibl": [11, 20, 72, 74, 112, 128, 130, 133, 134, 135], "flexibli": 133, "flierprop": 136, "fliersiz": 136, "flight": [126, 143, 144], "fligth": 143, "flip": 127, "float": [11, 18, 26, 29, 32, 33, 34, 36, 39, 46, 50, 51, 60, 61, 62, 65, 69, 71, 72, 73, 75, 83, 106, 112, 129, 134, 135, 137, 138], "float64": [102, 106, 108, 112, 113, 114, 120], "float64index": 112, "float_1": 71, "float_2": 71, "float_numb": 74, "floatingpointerror": 50, "floatzel": 123, "floett": 123, "floor": [60, 62, 70, 75, 82, 84, 110, 134], "floor_divis": 70, "florg": 123, "flow": [27, 28, 29, 32, 48, 51, 141], "flower": [2, 4, 27, 126, 134], "floyd": 27, "fluctuat": 140, "flush": [28, 46, 48, 64, 74], "fly": [15, 81, 82, 83, 123], "flygon": 123, "flying_test": 81, "fmod": [60, 62], "fmri": 140, "fmt": 102, "fn": 0, "fo": 19, "focu": [128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142], "focus": [74, 81], "foe": 60, "folder": [11, 17, 49, 60, 112, 123, 124, 129, 131, 132, 137, 138, 140], "follow": [0, 2, 3, 4, 5, 6, 9, 14, 15, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 48, 50, 51, 52, 54, 57, 58, 60, 61, 63, 64, 65, 67, 69, 70, 71, 74, 75, 76, 78, 81, 82, 83, 84, 86, 89, 95, 107, 108, 109, 112, 113, 114, 116, 117, 118, 119, 127, 129, 140, 141, 142, 143, 147], "fom": 28, "font": [102, 127, 135, 138, 140], "font_scal": [127, 137], "fontdict": 102, "fontnam": 102, "fontsiz": [102, 137, 142], "fontweight": [102, 137, 138, 142], "foo": [19, 33, 35], "food": [71, 72], "food_list": 34, "food_staff": 54, "food_tupl": 34, "foongu": 123, "foot": 102, "footbal": [19, 142], "football_plot": 142, "forc": [52, 106, 113, 126], "force_edgecolor": 141, "forcibli": 64, "ford": [83, 124], "forev": 28, "forget": [6, 69], "forgot": 50, "forgotten": 28, "form": [3, 6, 16, 23, 27, 31, 32, 35, 37, 40, 41, 48, 49, 57, 59, 60, 65, 69, 72, 78, 81, 105, 106, 108, 112, 116, 117, 120, 123, 134, 135, 136, 137, 138, 139, 140, 141, 142], "formal": [57, 86], "format": [17, 20, 25, 27, 34, 35, 44, 45, 48, 60, 69, 81, 82, 84, 112, 113, 120, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "format_regex": 41, "format_vers": 64, "former": [69, 83], "formfe": 32, "formul": 27, "formula": [0, 3, 4, 19, 54], "forretress": 123, "fortan": 109, "forth": 60, "fortun": [9, 31], "forum": [134, 135, 136, 138], "forward": [27, 32, 49, 50, 72, 140, 143], "found": [16, 19, 27, 29, 32, 35, 41, 50, 51, 60, 75, 78, 83, 106, 116, 119, 129, 136, 138, 140, 143], "foundat": 139, "four": [19, 22, 27, 41, 54, 69, 71, 74, 83, 86, 109, 112, 113, 124, 126, 127, 136, 142], "fourth": [19, 28, 74, 116], "fp": 0, "frac": 75, "fraction": [41, 62, 128], "frame": [58, 69, 112, 116, 119, 120, 121, 136, 141, 142], "frameobject": 69, "framework": [6, 11, 96, 142], "francisco": 126, "frank": 57, "fraudul": 4, "fraxur": 123, "free": [9, 25, 48, 131, 132, 134, 135, 136, 138, 140, 150], "freed": 48, "freedom": [3, 141], "freeli": [9, 140], "french": 48, "freq_dist": 81, "frequenc": [81, 112, 136, 137], "frequent": [19, 29, 33, 48, 60, 107, 108, 112, 136, 139], "fresher": 142, "frexp": [60, 62], "fri": [45, 135, 137, 138], "friend": 4, "friendli": [15, 37], "frillish": 123, "froaki": 123, "frogadi": 123, "from": [3, 4, 6, 9, 11, 12, 14, 15, 16, 17, 18, 19, 25, 27, 28, 29, 31, 32, 37, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 58, 59, 61, 62, 64, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 81, 82, 83, 84, 86, 87, 91, 95, 102, 103, 105, 106, 107, 108, 119, 120, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "from_arrai": [116, 119], "from_dict": [112, 124], "from_tupl": [115, 122], "fromarrai": 110, "fromit": 110, "fromtimestamp": [39, 40, 44], "front": [19, 32, 138], "front_end": 33, "frontend": 127, "froslass": 123, "frown": 86, "fruit": [19, 25, 27, 33, 34, 36, 51, 69, 71, 82, 114, 138], "fruit1": 114, "fruit2": 114, "fruit3": 114, "fruit4": 114, "fruits1": 71, "fruits2": 71, "fruits3": 71, "fruits4": 71, "fruits_and_veg": 51, "fruits_df": 114, "fruits_dict": 114, "fruits_list": 114, "fruits_veget": 34, "fset": 18, "fsum": [60, 62], "fucntion": [55, 56], "fulfil": 130, "full": [11, 39, 40, 41, 48, 49, 54, 60, 63, 70, 75, 106, 108, 137], "full_data": 48, "full_lik": 106, "full_nam": [54, 57, 70], "full_stack": 33, "fulli": 138, "fun": [19, 54, 55, 56, 57, 60, 70, 75, 129, 141], "fun1": [55, 56, 83], "fun2": [55, 56, 83], "fun3": [56, 83], "func": [17, 119, 135], "func1": 81, "func2": 81, "function": [1, 10, 11, 14, 18, 19, 20, 22, 28, 29, 31, 39, 45, 46, 48, 49, 50, 51, 55, 61, 63, 67, 68, 69, 70, 71, 72, 73, 76, 81, 82, 86, 88, 92, 103, 105, 109, 112, 114, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142], "function_nam": 54, "functionnam": 51, "functool": 59, "fundament": [81, 112, 129], "fungi": 54, "fur": 6, "furfrou": 123, "furret": 123, "further": [2, 15, 32, 48, 50, 52, 54, 74, 76, 78, 112, 113, 121, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150], "furthermor": [15, 17, 18, 33, 54, 60, 76, 81, 86, 127], "furthest": 19, "futur": [27, 29, 48, 70, 86, 120, 129, 133, 139, 140, 142, 150], "futurewarn": [120, 124, 129, 133], "g": [3, 4, 6, 10, 17, 29, 33, 34, 48, 70, 102, 103, 106, 108, 109, 112, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "ga": 102, "gabit": 123, "gain": [130, 131, 139, 140], "gallad": 123, "gallademega": 123, "galvantula": 123, "gam": 140, "game": [11, 63], "gamma": [60, 61, 62, 140], "gammavari": 61, "gap": 68, "garbag": [48, 50, 82, 117], "garbodor": 123, "garchomp": 123, "garchompmega": 123, "gardevoir": 123, "gardevoirmega": 123, "gari": 57, "gas_pric": 102, "gas_price_figur": 102, "gastli": 123, "gastrodon": 123, "gate": 37, "gather": [112, 113, 117, 135], "gaug": [134, 135], "gauss": 61, "gaussian": [61, 109, 130, 131, 133, 140], "gaussiankd": 137, "gave": 48, "gca": [135, 141, 142], "gcd": 60, "gdp": [3, 140], "gea": 102, "geeksforgeek": [3, 4], "gender": [35, 48, 81, 126, 130, 134, 135, 137, 138, 142], "gender_domin": 137, "gener": [3, 4, 6, 9, 11, 14, 17, 21, 22, 27, 28, 31, 32, 34, 50, 51, 52, 54, 58, 59, 60, 61, 63, 64, 69, 72, 75, 78, 81, 82, 83, 86, 95, 103, 106, 107, 116, 119, 122, 123, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150], "generate_color": 60, "generate_full_nam": 54, "generate_group": 57, "generatig": 128, "generatingdata": [130, 132], "generatorexit": 50, "genesect": 123, "genexpr": 15, "genfromtxt": [109, 110], "gengar": 123, "gengarmega": 123, "genotyp": 134, "gentleman": 140, "geodud": 123, "geograph": 140, "gereet": 54, "germain": 102, "german": 48, "germancar": 124, "germani": 124, "get": [3, 4, 5, 7, 9, 14, 15, 16, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 36, 37, 41, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 57, 59, 60, 69, 70, 75, 76, 81, 82, 83, 84, 86, 88, 89, 92, 106, 107, 109, 113, 115, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 150], "get_data": 82, "get_first_ten_countri": 17, "get_group": 124, "get_height": 138, "get_last_ten_countri": 17, "get_offset": 134, "get_string_list": 17, "get_temperatur": 18, "get_width": 138, "get_x": 138, "get_xlim": 135, "get_xticklabel": 138, "get_yticklabel": 138, "getattr": [82, 83, 135], "getcwd": 60, "getcwdb": 49, "getdata": 82, "getdatalim": 134, "getrandbit": 61, "getroot": 48, "getstat": 61, "ggplot": 102, "ghost": 123, "gibl": 123, "gift": 17, "gigabyt": 142, "gigalith": 123, "girafarig": 123, "giratinaalt": 123, "giratinaorigin": 123, "gist": 131, "gist_earth": 132, "gist_earth_r": 132, "gist_grai": 132, "gist_gray_r": 132, "gist_heat": 132, "gist_heat_r": 132, "gist_ncar": 132, "gist_ncar_r": 132, "gist_rainbow": 132, "gist_rainbow_r": 132, "gist_stern": 132, "gist_stern_r": 132, "gist_yarg": 132, "gist_yarg_r": 132, "github": [70, 102, 103], "give": [11, 14, 17, 19, 23, 24, 25, 27, 29, 31, 32, 51, 54, 60, 62, 68, 70, 75, 81, 82, 95, 105, 106, 108, 109, 112, 113, 114, 120, 121, 122, 123, 124, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142], "giveawai": 132, "given": [0, 2, 3, 15, 17, 20, 22, 23, 27, 28, 29, 32, 36, 39, 41, 45, 46, 50, 51, 54, 57, 60, 64, 67, 68, 71, 74, 76, 83, 86, 105, 106, 109, 113, 130, 134, 135, 137, 140, 142], "gkdive": 102, "gkhandl": 102, "gkkick": 102, "gkposit": 102, "gkreflex": 102, "glaceon": 123, "glali": 123, "glaliemega": 123, "glameow": 123, "glanc": 70, "gligar": 123, "glimps": 137, "gliscor": 123, "global": [9, 16, 50, 59, 66, 68, 76], "global_lang": 55, "global_var": [55, 56], "globalglob": 55, "gloom": 123, "glu": 128, "gmtoff": 41, "gmtoff_fract": 41, "gnbu": 132, "gnbu_r": 132, "gnuplot": 132, "gnuplot2": 132, "gnuplot2_r": 132, "gnuplot_r": 132, "go": [3, 4, 6, 11, 17, 18, 26, 27, 29, 31, 51, 54, 58, 69, 75, 76, 78, 81, 84, 86, 105, 123, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150], "goal": [110, 127, 130, 131, 139, 150], "god": 35, "goe": [16, 46, 50, 51, 52, 60, 81, 86, 116, 119, 131, 137], "gogh": 11, "gogoat": 123, "golbat": 123, "goldeen": 123, "golduck": 123, "golem": 123, "golett": 123, "golurk": 123, "gone": [130, 134, 140], "gonna": 140, "good": [16, 27, 32, 34, 48, 51, 52, 54, 57, 60, 65, 69, 74, 102, 103, 112, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142], "goodra": 123, "googl": [11, 32, 64, 83, 140], "googol": 71, "goomi": 123, "gorebyss": 123, "got": [17, 20, 56, 60, 72, 73, 84, 112, 136, 137, 150], "gothita": 123, "gothitel": 123, "gothorita": 123, "gourgeistaverag": 123, "gourgeistlarg": 123, "gourgeistsmal": 123, "gourgeistsup": 123, "govern": [134, 140], "gpt": 149, "grab": 138, "gracefulli": [29, 121], "grade": [23, 24, 25, 102, 113, 134], "gradient": 150, "graduat": 137, "grai": [129, 132, 134, 135, 142], "granbul": 123, "grandpar": 83, "grant": 25, "grape": 27, "graph": [3, 103, 131, 134, 138, 140], "graphic": [11, 51, 135, 137, 141, 143], "grass": 123, "gravel": 123, "graviti": [54, 70, 73, 79], "gray_r": 132, "grayscal": 129, "great": [22, 76, 84, 128, 134, 135, 140, 141, 142, 143], "greater": [23, 25, 26, 28, 29, 52, 60, 62, 70, 75, 84, 105, 108, 112], "greek": 81, "green": [27, 69, 129, 132, 133, 135], "greens_r": 132, "greet": [17, 54, 57, 74, 82], "greet_modul": 60, "grei": [127, 129, 132, 133, 138], "greninja": 123, "gretta": 57, "greyish": 129, "greys_r": 132, "grid": [103, 105, 106, 127, 132, 137, 139, 140, 141, 142], "grid_kw": 132, "gridlin": 103, "gridsiz": 137, "gridspec": 142, "gridspec_kw": [137, 142], "grimer": 123, "grip": [136, 141], "grotl": 123, "groudon": 123, "groudonprim": 123, "ground": [81, 123], "group": [11, 112, 124, 127, 130, 134, 136, 137, 138, 140], "groupbi": [124, 135, 137], "grouper": 137, "grovyl": 123, "grow": [9, 54, 63, 74], "growlith": 123, "growth": 140, "grumpig": 123, "gt": 60, "guarante": [34, 48, 51, 142], "guava": [27, 33, 36, 138], "guess": [18, 52, 106, 112, 126, 135, 136, 138, 139], "guest": 25, "gui": [11, 51, 128, 132, 134, 138, 140], "guid": [9, 12, 87, 91, 128, 129, 131], "guidanc": 129, "gulpin": 123, "gun": 126, "gunmet": 129, "gurdurr": 123, "guthri": 126, "gyarado": 123, "gyaradosmega": 123, "gz": 60, "h": [15, 19, 27, 28, 29, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 73, 75, 108, 126, 136, 138], "h1": 109, "h2": 109, "ha": [2, 6, 9, 11, 14, 16, 17, 18, 19, 20, 22, 24, 25, 27, 29, 31, 32, 35, 36, 37, 39, 45, 46, 48, 49, 50, 51, 52, 54, 56, 57, 59, 60, 63, 67, 69, 70, 71, 72, 73, 75, 76, 78, 81, 82, 83, 86, 102, 107, 108, 109, 112, 113, 114, 115, 118, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142], "habit": 140, "hack": 137, "hacker_new": 48, "had": [16, 17, 50, 54, 57, 60, 108, 127, 131, 132, 135, 136, 137, 138, 139, 140, 142], "hadlei": [130, 140], "half": [33, 129, 139], "halt": 51, "hamper": 60, "hand": [27, 35, 36, 48, 55, 57, 78, 81, 82, 127, 130, 131, 132, 135, 138, 140, 142], "handel": [9, 53], "handi": [11, 102, 103, 112, 123, 124, 130, 131, 134, 135, 137, 140, 141, 142], "handl": [4, 11, 14, 15, 16, 29, 32, 45, 46, 48, 49, 50, 52, 57, 105, 107, 113, 121, 131, 138, 140], "handler": 29, "handwritten": [4, 6], "hank": 57, "happen": [14, 15, 16, 20, 27, 28, 76, 78, 83, 84, 118, 128], "happi": [3, 29, 32, 33, 54, 67, 74, 81, 131, 136, 140], "happini": 123, "hard": [9, 19, 48, 58, 69, 74, 142], "hardtop": 124, "hardwar": [31, 78], "hariyama": 123, "harmless": 128, "harmon": 0, "harper": 57, "harri": [82, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122], "harvard": 137, "has_w2": 70, "hasattr": 82, "hash": [32, 64, 69], "hashabl": 36, "hatch": 102, "hatchback": [112, 113, 124], "haunter": 123, "have": [0, 3, 4, 5, 6, 10, 14, 15, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 46, 48, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 67, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 83, 84, 86, 89, 95, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 150], "haven": [39, 132, 134, 135, 140], "hawk": 19, "hawlucha": 123, "haxoru": 123, "hazi": 142, "he": [19, 25, 32, 48, 51, 52, 81, 141], "head": [102, 112, 123, 124, 126, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144], "header": [54, 57, 115, 116, 119, 121, 122, 123, 137, 142], "heart": 13, "heat": [142, 145], "heatmap": [142, 144], "heatmor": 123, "heatran": 123, "heavi": [102, 137, 140], "heavili": [132, 133], "hei": [19, 34], "height": [33, 75, 128, 131, 132, 138], "height_ratio": 137, "held": 140, "heliolisk": 123, "helioptil": 123, "hello": [9, 11, 15, 16, 17, 19, 23, 24, 27, 32, 33, 34, 36, 46, 50, 54, 57, 60, 64, 69, 70, 72, 73, 74, 75, 76, 80, 82, 83, 134], "hello009": 32, "hello99": 32, "hello99world66": 32, "hellohellohello": 32, "helloworld": [27, 28, 29, 32, 33, 34, 36], "help": [7, 11, 19, 22, 27, 28, 29, 33, 39, 40, 41, 44, 45, 51, 52, 54, 58, 60, 65, 68, 70, 76, 81, 86, 88, 92, 102, 103, 105, 112, 113, 127, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 150], "helper": 27, "helsinki": 48, "henc": [22, 23, 27, 28, 29, 31, 32, 33, 34, 37, 39, 48, 55, 59, 60, 72, 74, 75, 76, 78, 81, 84, 107, 126, 127, 130, 131, 138, 139, 140, 142], "her": [74, 139], "heracross": 123, "heracrossmega": 123, "herdier": 123, "here": [3, 4, 6, 11, 12, 14, 15, 16, 17, 18, 19, 25, 27, 28, 29, 31, 33, 35, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 69, 70, 71, 72, 74, 75, 76, 81, 82, 83, 84, 87, 88, 91, 92, 95, 107, 108, 109, 113, 114, 121, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150], "hereon": 142, "heterogen": [34, 112, 114, 120], "hex": [31, 32, 129, 131, 133], "hexa": 60, "hexadecim": [31, 32, 60, 71, 74], "hexagon": 131, "hexpoint": 86, "hh": 32, "hhmm": [40, 41], "hi": [19, 35, 46, 51, 74, 139, 140], "hiberfil": 49, "hidden": [6, 14, 81], "hide": [16, 18, 81, 129, 137], "hierarch": [112, 113, 115, 122, 144], "hierarchi": 63, "high": [9, 10, 11, 61, 102, 103, 105, 106, 112, 127, 131, 136, 137, 138, 139, 141], "higher": [24, 59, 73, 78, 130, 131, 137, 139], "higher_order_funct": 16, "highest": [60, 112, 126, 131, 134, 136, 138], "highli": [48, 82, 86, 105, 127, 131, 132, 134, 135, 136, 137, 138, 141], "highlight": [128, 130, 142, 144], "hill": [3, 4], "himself": 86, "hint": [52, 110, 124, 138], "hippopota": 123, "hippowdon": 123, "hispan": 126, "hist": [102, 103, 132, 133, 141, 142], "hist_kw": 128, "histogram": [128, 131, 132, 133, 135, 138, 141], "histplot": 133, "histtyp": 141, "hit": 50, "hitmonchan": 123, "hitmonle": 123, "hitmontop": 123, "hl": 129, "hls_palett": 129, "hmm": [137, 141], "hmmm": 139, "ho": [32, 123], "hobbi": 113, "hoffman": 126, "hold": [33, 56, 57, 70, 86, 106, 134, 137, 139, 142], "home": 81, "homework": [131, 132, 135, 138, 140], "homogen": [34, 106], "hon": 11, "honchkrow": 123, "honda": 124, "honedg": 123, "honei": 29, "honest": 134, "honestli": [132, 136, 137, 140], "honk": 76, "honor": 140, "hood": [136, 137], "hoopahoopa": 123, "hoorai": 23, "hoothoot": 123, "hope": [27, 32, 54, 75, 126, 130, 132, 138, 140, 141], "hoppip": 123, "horitzont": 109, "horizon": 139, "horizont": [19, 32, 105, 109, 127, 134, 135, 136, 137, 138, 140, 142], "horrai": 23, "horsea": 123, "horsepow": [112, 113, 123, 124], "hostnam": 51, "hot": [12, 87, 91, 132], "hot_r": 132, "houndoom": 123, "houndoommega": 123, "houndour": 123, "hour": [40, 41, 43, 44, 45, 75, 83, 102, 139, 150], "hous": [82, 140], "how": [3, 4, 5, 11, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 31, 34, 35, 37, 39, 45, 48, 50, 51, 52, 55, 56, 57, 59, 61, 62, 64, 73, 74, 75, 78, 81, 82, 83, 84, 89, 112, 113, 114, 116, 118, 119, 120, 121, 122, 126, 127, 128, 130, 131, 135, 137, 138, 139, 140, 141, 142, 147, 150], "howdi": 19, "howev": [18, 19, 23, 24, 27, 34, 36, 37, 46, 51, 52, 56, 69, 70, 72, 73, 76, 78, 81, 82, 83, 84, 86, 106, 107, 108, 143], "hp": 123, "hspace": 137, "hstack": [105, 141], "hsv": [130, 132, 135, 136, 138, 139], "hsv_r": [132, 135], "html": [11, 12, 32, 33, 48, 81, 87, 91, 108, 112, 129, 140, 144], "http": [11, 102, 108, 133, 140, 144], "hu": 29, "hue": [129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "hue_kw": [141, 142], "hue_ord": [130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "huge": [72, 122, 129, 134, 137, 140, 142], "human": [18, 19, 37, 69, 78, 141, 149], "hundr": [18, 75, 142], "hungari": 131, "hungri": 24, "hunt": [20, 37, 54, 74], "huntail": 123, "husl": [129, 138], "hybrid": 137, "hydreigon": 123, "hyperbol": 62, "hyperparamat": 150, "hypno": 123, "hypot": [60, 62], "hypothesi": 6, "i": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 22, 23, 24, 25, 26, 29, 31, 37, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 52, 53, 55, 57, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 80, 81, 82, 83, 84, 87, 89, 90, 91, 93, 96, 102, 103, 105, 106, 107, 108, 113, 114, 115, 116, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149], "i_num": 52, "ia": [17, 126], "iat": 112, "ibm": 32, "ic": 123, "icefir": [132, 134, 135, 136, 137, 140, 141, 142], "icefire_r": 132, "iceland": 51, "icon": [11, 150], "id": [23, 54, 57, 60, 76, 82, 102, 122, 126, 127, 138, 139, 140], "id_var": [136, 142], "idea": [14, 15, 65, 69, 74, 76, 86, 132, 134, 135, 136, 140, 141, 142], "ideal": [28, 126, 127, 129, 134, 137, 138, 140, 141], "ident": [105, 106, 108, 112, 122, 131, 138, 139, 141], "identifi": [6, 9, 17, 19, 32, 37, 51, 54, 59, 60, 63, 69, 70, 75, 76, 80, 81, 112, 113, 114, 117, 119, 121, 138, 140], "identitytransform": 135, "ifetch": 136, "igglybuff": 123, "ignor": [27, 28, 29, 64, 69, 116, 119, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "ignore_index": [117, 118], "ii": [12, 87, 91, 130], "iii": 126, "iinfo": 110, "ill": 70, "illeg": [50, 69], "illumin": 129, "illumis": 123, "illustr": [2, 3, 4, 15, 27, 28, 36, 51, 52, 65, 74, 86, 126, 127, 128, 135, 137, 141, 142], "iloc": [112, 123], "imag": [3, 4, 6, 11, 12, 48, 58, 71, 82, 87, 91, 127, 129, 131, 140, 141, 142], "imagin": [19, 76, 112], "imaginari": [31, 36, 50, 71, 72, 110, 130], "imbal": 128, "imdisk": 49, "img": [49, 131], "imgseek": 11, "immedi": [15, 24, 27, 28, 45, 46, 51, 54, 67, 86, 126, 150], "immens": 128, "immut": [27, 32, 33, 34, 35, 36, 54, 71, 72, 109], "imp": 60, "impact": [130, 135], "imperfect": 31, "implement": [14, 16, 17, 18, 29, 31, 33, 34, 52, 54, 60, 69, 78, 81, 83, 84, 86, 108, 130, 131, 132, 142, 149, 150], "impli": [32, 33, 48, 49, 69, 75], "implic": 135, "implicit": [32, 86], "implicitli": [31, 69, 86, 124], "import": [0, 9, 11, 12, 17, 19, 22, 28, 31, 34, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 56, 59, 61, 62, 64, 68, 69, 70, 72, 76, 78, 80, 81, 86, 87, 91, 102, 103, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "import_ipynb": 60, "importerror": 50, "importlib": 60, "imposs": [74, 137], "improp": 50, "improv": [54, 112, 121, 149], "inan": 137, "inbuilt": [71, 109, 116], "inc": 17, "inch": 102, "incid": [126, 138], "includ": [5, 11, 12, 14, 19, 24, 27, 28, 29, 32, 33, 48, 51, 60, 64, 65, 67, 72, 78, 82, 86, 87, 89, 91, 103, 106, 109, 112, 113, 124, 126, 127, 132, 136, 142, 143, 147, 150], "inclus": [60, 61, 106, 112, 129], "incom": [48, 57, 81, 131], "incomplet": 69, "inconsist": 50, "incorpor": 127, "incorrect": [24, 28, 50, 69, 78], "increas": [6, 28, 29, 33, 69, 129, 131, 135, 136, 139, 140, 142], "increment": [27, 28, 29, 56, 84], "ind": 33, "inde": [135, 136, 137, 138, 142], "indefinit": 28, "indent": [9, 23, 24, 26, 27, 29, 48, 50, 54, 56, 80], "indentationerror": [50, 69], "independ": [3, 4, 78, 127, 130, 138, 139], "index": [2, 3, 15, 19, 28, 32, 35, 36, 45, 50, 51, 60, 72, 74, 105, 106, 123, 124, 131, 138, 140, 141, 142], "index1": 113, "index2": 113, "index_on": 112, "indexerror": [32, 33, 34], "india": [17, 33, 34, 37, 48], "indianr": 133, "indic": [0, 23, 32, 33, 34, 45, 48, 50, 69, 107, 116, 117, 120, 126, 130, 132, 134, 136, 137, 138, 140], "indirect": 83, "indirectli": 52, "individu": [32, 35, 48, 60, 107, 128, 132, 134, 136, 137, 138, 139, 140, 141, 143], "indivis": 140, "indonesia": [34, 48], "industri": [113, 114], "ineffici": [27, 58], "inf": [14, 60, 108, 110, 135], "infer": [70, 109, 112, 113, 126, 131, 135, 137, 139, 140, 141, 142], "infernap": 123, "inferno": 132, "inferno_r": 132, "infin": [62, 108, 110], "infinit": [28, 31, 46, 58, 75], "infit": 14, "info": [64, 82, 83, 86, 110, 133], "inform": [5, 12, 25, 39, 48, 49, 51, 56, 70, 86, 87, 89, 91, 112, 113, 134, 136, 138, 139, 140, 141, 142, 147], "ing": 19, "inher": 129, "inherit": [9, 51, 52, 85, 86], "inhomogen": 107, "init": [5, 86, 89, 147], "initi": [2, 14, 15, 27, 28, 29, 32, 33, 36, 48, 55, 61, 63, 70, 76, 81, 82, 83, 86, 105, 106, 118, 130, 133, 141, 142], "inkai": 123, "inlin": [59, 92, 102, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "inner": [1, 6, 16, 17, 27, 28, 29, 55, 108, 112, 135, 136, 137], "inner_arg": 135, "inner_f": 135, "inner_fun": 55, "inner_func": 76, "inner_funct": 76, "inner_kwarg": 135, "innermost": [28, 29], "inplac": [112, 116, 117, 118, 119, 121, 122, 123, 138], "input": [3, 4, 6, 14, 15, 16, 17, 18, 20, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 41, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 65, 68, 70, 71, 72, 73, 75, 78, 81, 82, 83, 84, 86, 88, 92, 107, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 130, 134, 135, 136, 140, 141, 142, 143], "inputsid": 83, "insert": [32, 35, 36, 64, 82, 105, 113, 122], "insid": [14, 16, 17, 18, 19, 20, 23, 24, 26, 29, 32, 33, 34, 35, 36, 37, 46, 48, 49, 51, 54, 55, 56, 57, 60, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 81, 82, 83, 84, 86, 112, 131, 136, 137, 138, 139, 142], "insight": [131, 135, 136, 138], "inspect": [86, 119], "inspir": [6, 36], "insrantli": 11, "inst_creat": 86, "insta": 107, "instal": [48, 60, 67, 128], "instanc": [17, 27, 31, 33, 41, 48, 50, 51, 60, 64, 69, 70, 72, 76, 83, 86, 108, 109, 112, 119, 120, 134, 137, 142, 143], "instant": 59, "instanti": [31, 39, 81, 82, 86], "instantli": 29, "instead": [6, 11, 15, 16, 18, 20, 24, 28, 50, 60, 70, 78, 81, 82, 83, 84, 108, 112, 114, 124, 126, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 142], "instruct": [5, 23, 46, 51, 69, 89, 127, 146, 147, 148], "int": [11, 14, 16, 17, 27, 28, 31, 32, 33, 34, 50, 51, 52, 64, 71, 72, 73, 74, 75, 82, 83, 102, 118, 119], "int32": [106, 108, 109], "int64": [106, 109, 112, 113, 123, 124], "int_1": 71, "int_2": 71, "intact": 130, "integ": [23, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 39, 48, 51, 54, 58, 60, 61, 62, 64, 69, 71, 72, 73, 75, 105, 106, 112, 113, 114], "intel": 78, "intellig": [130, 138, 149], "intellij": 127, "intend": [131, 142], "intens": 130, "intent": [64, 130, 138], "inter": [136, 138, 139], "interact": [6, 10, 11, 12, 15, 48, 60, 67, 74, 82, 87, 91, 112, 127], "intercept": [37, 75, 128], "intercept_stderr": 128, "interchang": [112, 135], "interest": [15, 17, 19, 51, 76, 82, 118, 127, 128, 129, 137, 138, 139, 140, 141], "interfac": [11, 18, 51, 81, 127, 129], "interg": 73, "intermedi": 78, "intermediari": 78, "intern": [14, 15, 18, 29, 32, 33, 48, 50, 57, 61, 81, 82, 84, 113, 129], "internet": [11, 132], "interp": 110, "interpol": [131, 140], "interpret": [9, 11, 15, 19, 23, 27, 28, 29, 32, 50, 51, 54, 57, 58, 60, 64, 67, 68, 69, 73, 74, 75, 76, 80, 130, 138, 139, 140, 141], "interquartil": 137, "interrelationship": 142, "interrupt": 50, "intersect": [27, 72], "intersect1d": 110, "intersection_upd": 36, "interv": [4, 102, 105, 109, 127, 130, 132, 134, 136, 137, 138, 139, 140], "intervent": 149, "interview": [140, 149], "intiuit": 11, "intrigu": 126, "intrins": [126, 127, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "intro": [20, 146, 148], "introduc": [6, 18, 32, 67, 136, 137, 141, 142], "introduct": [32, 149], "introductori": 131, "intuit": [10, 18, 112, 134], "inv": 105, "invalid": [26, 32, 50, 51, 60, 68, 70, 73, 74, 108], "inventor": 27, "invers": [13, 29, 45, 62, 105, 108], "invert": 19, "invest": 138, "invis": 137, "invoc": [59, 130], "invok": [17, 37, 82, 84], "involv": [31, 73, 75, 83, 126, 131, 134, 136, 140, 149], "ioerror": 51, "ion": [12, 87, 91], "iot": 150, "ip": 140, "ipynb": [7, 11, 49, 60, 88, 92], "ipynb_checkpoint": 49, "ipython": [11, 14, 15, 16, 17, 18, 20, 28, 32, 33, 34, 35, 36, 41, 46, 48, 50, 51, 52, 55, 56, 57, 58, 60, 68, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 86, 107, 108, 116, 119, 121, 124, 127, 129, 131, 135, 140], "iqr": 136, "ireland": 131, "iri": [2, 4, 102, 126, 129, 131, 132, 134, 135, 136, 144], "iris_data": [102, 144], "iron": 14, "irrespect": 29, "is_cal": 17, "is_empti": 54, "is_even": [17, 54], "is_light_on": 70, "is_mar": [25, 27], "is_marri": 70, "is_name_long": 17, "is_odd": 17, "is_prim": 54, "is_return": 17, "is_uniqu": 121, "is_valid_vari": 19, "isalnum": 32, "isalpha": [28, 32], "isatti": 48, "isclos": 60, "isdecim": [28, 32], "isdigit": 32, "isdisjoint": 36, "isfinit": [60, 62], "isidentifi": 32, "isin": [136, 138], "isinf": [60, 62], "isinst": [31, 72, 82, 83], "island": 17, "islow": 32, "isn": [6, 112, 119, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "isnan": [60, 62], "isnul": 112, "isnumer": 32, "isol": [11, 76], "isprint": 32, "isqrt": 60, "isspac": [29, 32], "issu": [4, 31, 37, 56, 103, 129, 137, 141], "issubset": 36, "issuperset": 36, "istitl": 32, "isupp": 32, "isuzu": 124, "item": [14, 15, 17, 19, 20, 27, 28, 32, 36, 37, 50, 51, 54, 59, 60, 64, 72, 82, 105, 113, 116, 138], "items": [106, 109, 110], "iter": [3, 4, 9, 15, 17, 21, 29, 37, 50, 58, 60, 62, 74, 77, 113, 127, 138, 140, 142], "iter_obj": 14, "iterrow": [112, 123], "itertool": 132, "its": [0, 3, 6, 11, 15, 16, 17, 27, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 48, 54, 55, 57, 60, 64, 72, 75, 76, 78, 81, 82, 83, 86, 112, 113, 114, 115, 116, 118, 120, 122, 127, 131, 135, 136, 137, 142, 143, 144], "itself": [6, 14, 16, 18, 27, 32, 34, 35, 36, 48, 52, 54, 58, 78, 81, 82, 83, 86, 130, 137, 138, 141, 149], "iv": 19, "ivan": 57, "ivysaur": 123, "j": [3, 4, 6, 17, 27, 28, 29, 32, 33, 40, 41, 48, 70, 71, 82, 105, 106, 113, 128, 141], "jack": 115, "jaguar": 124, "jam": 32, "jan": [40, 41, 67, 126], "jane": [82, 115], "januari": [19, 25, 29, 39, 40, 41, 44, 45], "japan": [48, 124], "japanesecar": 124, "jargon": 75, "jason": 73, "java": [9, 27, 28, 32, 33, 35, 48, 69, 81, 86], "javascrip": 48, "javascript": [19, 32, 37, 48, 51, 78, 81], "jellic": 123, "jenner": 27, "jet": [129, 132], "jet_r": 132, "jetbrain": 127, "jigglypuff": 123, "jill": 115, "jirachi": 123, "jitter": [135, 140], "jlufe": 35, "jo": 19, "job": [19, 32, 78, 129, 130, 134, 137, 141], "joe": [112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 126], "john": [34, 57, 102, 126, 140], "join": [32, 33, 34, 36, 48, 74, 137], "joined_df": 112, "joint": [130, 139, 145], "jointgrid": [131, 133], "jointplot": [131, 132], "jolteon": 123, "joltik": 123, "jose": 115, "journal": 130, "journei": [130, 142, 150], "jr": [102, 123], "json": [11, 60, 112], "json_exampl": 48, "json_str": 112, "jude": 19, "juic": 71, "jul": 67, "juli": 25, "jumbl": 130, "jump": [29, 32, 130, 136, 138, 142], "jumpluff": 123, "jun": [40, 42, 67], "june": [25, 29, 39, 40, 41, 42, 45, 128], "jupyt": [5, 7, 9, 12, 50, 74, 87, 88, 89, 91, 92, 127, 129, 146, 147, 148, 149, 150], "jupytext": [5, 89, 147], "just": [4, 14, 15, 17, 29, 32, 59, 63, 64, 67, 69, 72, 74, 86, 112, 114, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "justcount": 82, "justifi": [32, 74], "juventu": 102, "jvm": 78, "jynx": 123, "k": [1, 27, 28, 32, 61, 102, 103, 126, 128, 129, 134, 135], "k_depth": 140, "kabuto": 123, "kabutop": 123, "kadabra": 123, "kaggl": 139, "kakuna": 123, "kangaskhan": 123, "kangaskhanmega": 123, "kappa": 61, "kapur": 4, "karen": 140, "karrablast": 123, "kate": 34, "kb": 60, "kcsy2": 60, "kde": [128, 131, 133, 137, 141], "kdeplot": [129, 131, 132, 141, 142], "kecleon": 123, "keen": [17, 139], "keep": [3, 4, 12, 15, 19, 28, 57, 63, 82, 87, 91, 113, 118, 126, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142], "keepdim": 110, "kei": [17, 20, 22, 25, 27, 33, 34, 36, 50, 51, 69, 71, 72, 75, 112, 114, 119, 121, 124, 132, 141], "keldeoordinari": 123, "keldeoresolut": 123, "kenel": 133, "kenneth": [126, 129], "kept": [63, 129], "kera": 149, "kernel": [5, 11, 89, 127, 129, 132, 133, 137, 140, 147], "kernel_density_estim": 133, "kernel_list": 133, "keyboard": 9, "keyboardinterrupt": [28, 46, 50, 51], "keyerror": [35, 36, 115, 116, 119, 121], "keyword": [9, 16, 17, 20, 23, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 51, 54, 55, 59, 60, 64, 66, 70, 74, 76, 80, 81, 82, 86, 102, 129, 131, 140, 142], "keyword_ord": 32, "kg": 31, "kid": 128, "kill": 142, "kind": [6, 14, 15, 51, 54, 57, 69, 88, 92, 102, 112, 119, 120, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142], "kindli": 142, "kingdra": 123, "kingler": 123, "kirlia": 123, "kivi": 11, "kiwi": [27, 36], "klang": 123, "klefki": 123, "klink": 123, "klinklang": 123, "km": 83, "know": [10, 15, 16, 17, 18, 25, 27, 28, 29, 31, 51, 54, 57, 58, 60, 67, 70, 72, 74, 78, 83, 84, 86, 105, 107, 109, 115, 116, 119, 121, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150], "knowledg": [6, 52, 140, 141], "known": [0, 11, 16, 27, 28, 31, 34, 35, 55, 59, 70, 73, 78, 81, 82, 84, 108, 126, 130, 132, 134, 135, 136, 138, 140, 141, 142], "knoxvil": 126, "kof": 123, "kool": 32, "korea": 102, "krabbi": 123, "kricketot": 123, "kricketun": 123, "krokorok": 123, "krookodil": 123, "kw": [135, 141, 142], "kwarg": [17, 21, 51, 86, 119, 132, 135, 141, 142], "kyogr": 123, "kyogreprim": 123, "kyurem": 123, "kyuremblack": 123, "kyuremwhit": 123, "l": [6, 15, 19, 27, 28, 29, 32, 33, 34, 35, 36, 51, 59, 73, 102, 138], "la_": [12, 87, 91], "label": [6, 90, 102, 103, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 130, 137, 138, 140, 141, 142, 144, 146, 148], "label_dist": 133, "labl": 112, "labour": 131, "lairon": 123, "lam": 134, "lambd": 61, "lambda": [15, 17, 68, 112, 137], "lampent": 123, "land": [17, 95], "landorusincarn": 123, "landorustherian": 123, "langchain": 149, "languag": [9, 11, 17, 18, 19, 27, 28, 29, 32, 33, 35, 37, 48, 50, 54, 67, 68, 69, 70, 74, 75, 81, 82, 86, 88, 92, 141, 149], "lanturn": 123, "laod": 144, "lapra": 123, "larg": [11, 15, 33, 49, 50, 52, 60, 65, 75, 78, 102, 103, 106, 108, 112, 115, 122, 124, 127, 128, 135, 136, 140], "larger": [11, 16, 54, 63, 73, 78, 108, 140], "largest": [36, 60, 62], "larvesta": 123, "larvitar": 123, "last": [6, 11, 14, 15, 16, 17, 18, 20, 27, 28, 29, 32, 33, 34, 35, 36, 41, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 64, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 86, 107, 108, 109, 112, 119, 121, 122, 127, 131, 132, 135, 137, 138, 140, 142], "last_index": [32, 116], "last_lett": 32, "last_nam": [17, 25, 27, 32, 35, 54, 70], "last_nm": 57, "lastli": [48, 136, 138, 142], "lastnam": [20, 54, 57, 70, 74, 81], "late": [126, 128], "latenc": 0, "latent": 139, "later": [15, 18, 29, 52, 64, 69, 70, 74, 75, 82, 112, 126, 130, 132, 134, 135, 136, 139, 142], "latest": [11, 128, 140], "latia": 123, "latiasmega": 123, "latio": 123, "latiosmega": 123, "latitud": 140, "latter": 83, "lattic": 141, "latvia": 131, "launch": 11, "layer": [6, 81], "layout": 142, "lazi": [15, 27], "lb": 102, "ldexp": [60, 62], "ldot": 32, "lead": [32, 50, 60], "leafeon": 123, "leap": 139, "learn": [0, 1, 2, 3, 4, 6, 11, 13, 14, 15, 16, 18, 19, 20, 24, 25, 27, 28, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 76, 78, 81, 82, 83, 84, 95, 103, 105, 112, 114, 115, 117, 119, 120, 121, 122, 124, 126, 130, 131, 132, 136, 138, 139, 140, 141, 142, 143], "learnt": [134, 135, 136, 140, 142], "least": [6, 11, 15, 19, 33, 35, 46, 69, 76, 82, 86, 108, 128, 131, 132, 134, 135, 136, 138, 140], "leav": [28, 36, 132, 134, 135, 137, 138, 140, 142], "leavanni": 123, "lectur": [32, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "ledft": 128, "ledian": 123, "ledyba": 123, "lee": [102, 126], "left": [14, 19, 27, 32, 40, 41, 43, 63, 74, 75, 83, 84, 102, 103, 107, 112, 127, 128, 131, 135, 137, 138, 139], "leg": [35, 83], "legandari": 123, "legend": [12, 87, 91, 102, 103, 130, 132, 135, 137, 138, 139, 140, 141, 142], "legend_": 135, "legend_out": [130, 139, 142], "legendari": 123, "lembk": 126, "lemon": [27, 51], "len": [15, 17, 27, 28, 29, 32, 36, 37, 41, 70, 75, 105, 116, 119, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "length": [15, 19, 20, 27, 31, 32, 33, 36, 61, 70, 72, 75, 81, 83, 102, 105, 108, 112, 119, 121, 123, 124, 126, 128, 130, 131, 134, 138, 142], "lengthi": [15, 63, 137], "lesli": 126, "less": [15, 23, 24, 25, 28, 29, 37, 46, 52, 62, 75, 78, 84, 112, 130, 141], "lesser": [24, 112], "lesson": 112, "let": [0, 3, 4, 5, 6, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 31, 32, 34, 36, 37, 39, 45, 46, 48, 50, 51, 54, 55, 56, 58, 59, 60, 64, 73, 74, 75, 76, 81, 82, 83, 84, 86, 89, 106, 107, 108, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148], "letter": [17, 19, 27, 28, 29, 32, 36, 37, 50, 60, 68, 70], "lettervalu": [139, 145], "level": [4, 9, 11, 26, 31, 63, 95, 102, 112, 113, 115, 116, 121, 126, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "level_0": 113, "level_index": 116, "leverag": 140, "lewi": 126, "lfloor": 75, "lgamma": [60, 62], "li": 13, "lib": [32, 41, 60, 110, 116, 119, 120, 121, 126, 129, 133, 135], "librari": [11, 32, 62, 65, 69, 103, 105, 112, 113, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150], "licens": [11, 112, 123, 124], "lickilicki": 123, "lickitung": 123, "lie": 86, "liepard": 123, "life": [10, 55, 141, 150], "light": [102, 129], "light_medium": 102, "lightblu": 128, "lighter": 142, "like": [0, 2, 3, 4, 5, 6, 9, 11, 14, 15, 17, 18, 19, 24, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 54, 57, 59, 60, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 86, 88, 89, 92, 102, 103, 105, 108, 109, 112, 113, 114, 115, 116, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 150], "likelihood": 133, "likewis": [120, 122], "lileep": 123, "lillig": 123, "lillipup": 123, "lime": 51, "limit": [27, 31, 52, 55, 58, 72, 84, 126, 128, 134, 137, 140, 141, 142, 144], "limitless": 130, "limousin": 140, "linalg": [105, 108, 110], "line": [3, 5, 9, 11, 12, 13, 16, 18, 19, 22, 28, 29, 32, 36, 37, 48, 50, 51, 54, 55, 57, 59, 60, 68, 71, 72, 75, 76, 78, 82, 87, 88, 89, 91, 92, 108, 109, 126, 127, 128, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142, 147], "line2d": [12, 87, 91], "line_count": 48, "line_kw": [130, 131], "linear": [1, 4, 6, 10, 37, 54, 83, 105, 128, 129, 130, 131, 132, 134, 136, 139, 140, 142, 149], "linearli": [6, 130, 140], "linearsegmentedcolormap": 129, "linecollect": 135, "linefe": 32, "lineplot": 140, "liner": 4, "linestyl": [102, 103, 138], "linewidth": [102, 103, 127, 128, 134, 135, 136, 137, 140, 141, 142, 143], "link": [11, 78, 129, 130, 131, 139, 140, 142], "linoon": 123, "linregress": 128, "linregressresult": 128, "linspac": [12, 87, 91, 105, 110, 127, 133, 140, 142], "linux": 48, "list": [9, 14, 15, 17, 19, 20, 31, 36, 38, 39, 48, 50, 59, 61, 62, 63, 64, 68, 69, 71, 73, 74, 75, 81, 82, 83, 84, 86, 105, 106, 107, 108, 109, 112, 116, 118, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 142], "list1": [27, 33, 54, 59, 60, 72, 114], "list2": [33, 59, 114], "list3": 33, "list_": 15, "list_1": 82, "list_enumer": 32, "list_nam": 33, "list_of_cmap": 141, "list_of_hexa_color": 60, "list_of_list": [27, 37], "list_of_rgb_color": 60, "list_siz": 27, "listedcolormap": 138, "listliter": 69, "liter": [9, 32, 40, 41, 50, 51, 57, 64, 69, 70, 73, 74, 75, 80], "lithuania": 131, "litleo": 123, "littl": [76, 83, 107, 128, 130, 134, 135, 137, 138, 139, 141, 142], "litwick": 123, "live": [17, 25, 32, 48, 51, 75, 81], "liverpool": 142, "ljust": [32, 74], "ll": [7, 15, 16, 27, 29, 31, 33, 34, 35, 36, 48, 49, 51, 54, 55, 56, 59, 63, 67, 81, 82, 88, 92, 112, 128, 143], "llm": 149, "lm": [129, 140, 145], "lmplot": [131, 132], "lo": 19, "load": [48, 60, 64, 78, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145], "load_dataset": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "loc": [102, 103, 109, 112, 123, 135, 137, 138], "loc_var": 55, "local": [3, 4, 9, 11, 15, 16, 39, 41, 42, 43, 44, 45, 46, 50, 56, 59, 66, 76, 82, 83, 86, 112, 132], "local_lang": 55, "local_tim": 45, "localtim": [43, 46], "locat": [17, 19, 32, 33, 48, 50, 60, 63, 70, 74, 75, 83, 103, 123, 135, 136, 137, 140], "locator_param": 128, "locket": 60, "log": [49, 60, 61, 62, 105, 109], "log10": [31, 60, 62], "log1p": [60, 62], "log2": [60, 62], "logarithm": [31, 60, 62], "logic": [22, 24, 58, 84, 86, 112, 116, 119, 150], "logical_and": 110, "logical_not": 110, "logist": [1, 130, 131], "lognormvari": 61, "logo": [48, 49], "logo1": 49, "logspac": [12, 87, 91], "logx": 130, "lombr": 123, "london": [17, 39, 43, 48, 51, 81, 116], "long": [17, 22, 28, 29, 31, 32, 37, 68, 69, 71, 76, 86, 109, 128, 134, 135, 150], "long_nam": 17, "longer": [18, 32, 60, 81, 133], "longitud": 140, "look": [2, 3, 4, 6, 14, 16, 17, 18, 19, 22, 29, 31, 48, 50, 55, 58, 60, 63, 64, 68, 69, 73, 74, 76, 83, 84, 86, 102, 103, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "lookuna": 32, "lookup": 112, "loop": [3, 9, 17, 20, 22, 30, 32, 33, 34, 35, 36, 46, 48, 51, 54, 57, 69, 74, 108, 112, 138], "loos": 6, "lopunni": 123, "lopunnymega": 123, "lose": 48, "loss": [73, 142], "lost": 32, "lot": [3, 4, 9, 12, 15, 27, 28, 32, 58, 60, 63, 78, 87, 91, 107, 128, 130, 138, 140], "lotad": 123, "loudr": 123, "love": [11, 17, 19, 36, 74], "low": [61, 103, 106, 131, 136, 139], "lower": [19, 32, 73, 103, 107, 108, 128, 136, 137, 139, 140, 141], "lowercas": [19, 32, 60, 68, 70], "lowess": [130, 132], "lowest": [60, 112, 136, 138], "lsr": [128, 131], "lst": [16, 37, 51], "lst_one": 51, "lst_two": 51, "lstrip": 32, "lucario": 123, "lucariomega": 123, "lucia": 82, "ludicolo": 123, "lugia": 123, "luke": 137, "lumineon": 123, "lump": 136, "lunaton": 123, "lunch": [130, 134, 135, 137, 142], "lut": 144, "luvdisc": 123, "luxembourg": 131, "luxio": 123, "luxrai": 123, "lvplot": 140, "lw": [12, 87, 91, 134, 135, 138, 140, 142], "m": [2, 3, 4, 19, 27, 29, 33, 34, 39, 40, 41, 42, 43, 44, 45, 46, 60, 62, 67, 68, 70, 73, 74, 75, 83, 102, 103, 126, 129, 134, 136, 138, 142], "ma": 19, "maaan": 19, "machamp": 123, "machin": [0, 1, 2, 3, 4, 6, 11, 13, 25, 83, 95, 130, 138, 139, 141, 142, 150], "machine_learn": 138, "machineri": 112, "machok": 123, "machop": 123, "maco": 49, "macro_cas": 70, "made": [19, 50, 52, 60, 76, 78, 82, 140], "madrid": 102, "magbi": 123, "magcargo": 123, "magic": [17, 84, 127], "magikarp": 123, "magma": [129, 130, 132], "magma_r": 132, "magmar": 123, "magmortar": 123, "magnemit": 123, "magnet": 140, "magneton": 123, "magnezon": 123, "magnitud": [3, 4, 83, 84, 130, 138], "mai": [0, 2, 3, 4, 6, 10, 11, 15, 19, 25, 29, 31, 32, 33, 34, 36, 39, 40, 46, 48, 51, 52, 54, 56, 57, 63, 67, 73, 76, 78, 81, 82, 83, 86, 107, 112, 113, 114, 116, 117, 121, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "mail": [19, 110], "mailbox": 60, "main": [19, 31, 34, 55, 56, 60, 64, 70, 81, 82, 83, 86, 134, 138, 140, 143], "main1": 56, "mainli": 27, "maintain": [65, 130], "mainten": 149, "major": [15, 74, 134, 135, 138, 139], "majorli": [112, 113, 130, 134, 135, 139, 140, 142], "make": [3, 6, 9, 11, 12, 15, 16, 17, 18, 19, 20, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 48, 50, 51, 52, 54, 55, 56, 58, 60, 63, 65, 68, 69, 70, 73, 74, 75, 76, 78, 81, 83, 84, 86, 87, 91, 105, 107, 108, 112, 113, 114, 116, 117, 119, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150], "make_blob": 141, "make_kd": 132, "make_multiplier_of": 16, "make_pretti": 17, "make_sound": 86, "make_uppercas": 17, "mako": [132, 140, 144], "mako_r": 132, "makuhita": 123, "malamar": 123, "male": [48, 81, 123, 126, 130, 133, 135, 136, 137, 138, 142], "male_dinn": 137, "male_lunch": 137, "malign": 4, "mammal": 83, "mammalnam": 83, "mamoswin": 123, "man": [18, 19, 136, 138], "manadatori": 130, "manag": [19, 54, 60, 63, 140], "manaphi": 123, "manchest": [81, 102], "mandatori": [34, 39, 54, 57, 69, 82, 86, 130, 134, 135, 142], "mandibuzz": 123, "manectr": 123, "manectricmega": 123, "mango": [25, 27, 33, 36, 51, 54, 71, 74, 114, 138], "manhattan": 135, "mani": [3, 4, 5, 6, 10, 11, 19, 27, 28, 29, 32, 34, 36, 48, 49, 51, 52, 60, 64, 70, 75, 81, 82, 86, 88, 89, 92, 102, 108, 109, 112, 117, 126, 128, 129, 135, 140, 141, 143, 147, 150], "manipul": [18, 32, 39, 60, 82, 108, 112, 122, 142], "mankei": 123, "manner": [17, 22, 27, 28, 83, 134, 140], "manner_of_death": 126, "mantin": 123, "mantissa": 62, "mantyk": 123, "manual": [3, 4, 6, 14, 51, 52, 109], "manufactur": 82, "map": [6, 13, 37, 69, 76, 112, 119, 129, 131, 132, 135, 137, 141, 142, 145], "map_datafram": 142, "map_diag": [132, 141], "map_low": [132, 141], "map_offdiag": 141, "map_upp": [132, 141], "mapper": 119, "mappingmethod": 69, "maptplotlib": 142, "mar": 67, "maractu": 123, "march": [19, 25, 29], "mareep": 123, "margin": [131, 134], "margin_titl": [139, 142], "maril": 123, "marit": 33, "marital_statu": 35, "mariya": 27, "mark": [22, 23, 27, 35, 54, 64, 67, 69, 74, 82, 102, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 133, 135, 138], "markdown": [11, 146, 148], "markdownfil": [5, 89, 147], "markedli": [7, 88, 92], "marker": [49, 102, 103, 126, 130, 131, 132, 135, 136, 138, 140, 141, 142], "markeredgecolor": 102, "markerfacecolor": 103, "markers": 102, "market": 81, "marks_df": 112, "marks_dict": 112, "markup": [88, 92], "marowak": 123, "marri": [25, 70], "marshtomp": 123, "mask": [116, 142], "masquerain": 123, "mass": [54, 70, 112], "massiv": [112, 115], "masterstudentclass": 82, "mat": 107, "match": [41, 57, 116, 119, 121, 131, 133, 136, 137, 142], "match_replac": 19, "materi": 6, "math": [9, 12, 31, 35, 50, 66, 74, 87, 91], "mathemat": [11, 27, 36, 37, 60, 70, 75, 84, 112, 128, 131, 136, 138, 140, 149, 150], "mathemet": 95, "mathew": 102, "matlab": [25, 27, 48, 70, 78, 81, 107, 108], "matmul": 108, "matplotlib": [12, 87, 91, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "matric": [13, 108], "matrix": [6, 13, 37, 105, 106, 107, 109, 112, 141, 142, 143, 144], "matruc": 108, "matter": [17, 29, 51, 54, 57, 70, 134], "matthew": 126, "mawil": 123, "mawilemega": 123, "max": [3, 11, 14, 15, 36, 81, 83, 105, 108, 109, 110, 112, 124, 126, 131, 133, 134, 142], "max_inst": 86, "max_row": 112, "max_spe": 83, "maximum": [19, 28, 58, 81, 102, 105, 108, 109, 112, 133, 136, 137], "maxsiz": 60, "maxsplit": 19, "maxyear": 39, "mayb": [27, 140], "mazda": 124, "mbox": [12, 87, 91], "md": [5, 7, 88, 89, 92, 147], "me": [24, 32, 74, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142], "mean": [0, 1, 3, 4, 12, 16, 18, 19, 23, 24, 27, 28, 29, 32, 33, 34, 36, 39, 40, 41, 45, 50, 55, 57, 60, 68, 69, 70, 71, 72, 73, 74, 75, 81, 82, 84, 86, 87, 91, 105, 106, 109, 112, 123, 124, 126, 128, 130, 131, 134, 135, 136, 138, 139, 140, 141, 142], "meaning": [114, 142], "meant": 126, "meanwhil": [131, 135, 138, 140, 142], "measur": [81, 126, 128, 131, 134, 135, 136, 139, 140], "mechan": [10, 64, 108, 130, 140, 143], "median": [33, 60, 81, 102, 105, 109, 112, 135, 136, 137, 138, 140], "medianprop": 102, "medicham": 123, "medichammega": 123, "meditit": 123, "medium": [12, 15, 87, 91, 102, 129], "medium_heavi": 102, "meet": [23, 135, 136], "mega": 123, "meganium": 123, "melina": 48, "mellon": 6, "meloettaaria": 123, "meloettapirouett": 123, "melt": [134, 135, 136, 142], "melt_df": 136, "member": [18, 36, 81, 82, 131, 137], "memor": 130, "memori": [14, 27, 31, 32, 33, 48, 50, 58, 70, 72, 75, 76, 78, 81, 82, 105, 109, 112, 127, 140], "memoryerror": [50, 51], "men": 129, "mennen": 27, "mention": [6, 15, 32, 51, 64, 112, 127, 131, 135, 138, 139, 140, 142], "menu": [71, 129], "meow": 86, "meowsticfemal": 123, "meowsticmal": 123, "meowth": 123, "merced": 124, "mere": 86, "merg": [84, 112, 137], "meshgrid": 110, "mesprit": 123, "mess": 123, "messag": [3, 4, 16, 23, 24, 25, 26, 50, 51, 52, 54, 57, 64], "messi": [27, 28, 102], "met": [16, 24, 28, 118], "meta": 19, "metagross": 123, "metagrossmega": 123, "metang": 123, "metapod": 123, "metaprogram": 17, "meter": [70, 140], "meth": 86, "method": [11, 14, 15, 16, 17, 18, 27, 28, 37, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 57, 60, 63, 64, 69, 74, 78, 82, 84, 86, 108, 112, 113, 116, 119, 121, 122, 126, 130, 131, 136, 137, 138, 139, 140, 141, 142, 144, 150], "metric": 144, "mew": 123, "mewtwo": 123, "mewtwomega": 123, "michael": 126, "michel": 48, "microchip": 4, "microsecond": [40, 41, 43], "microsoft": 32, "mid": 75, "middl": [25, 33, 34, 51, 107, 134, 136, 137, 138], "mienfoo": 123, "mienshao": 123, "might": [0, 3, 4, 6, 9, 10, 16, 22, 28, 29, 31, 46, 51, 69, 74, 86, 106, 128, 130, 134, 135, 136, 137, 138, 139, 141, 142], "mightyena": 123, "milaan": [17, 25, 27, 32, 35, 37, 48, 50, 51, 54, 57, 60, 70, 73, 75, 81, 83, 124], "milan": [32, 48, 82], "mile": 138, "mileag": [112, 113, 123, 132, 134], "mileagedf": 124, "milk": 54, "milot": 123, "miltank": 123, "mime": 123, "min": [3, 36, 81, 105, 108, 109, 110, 112, 126, 131, 133, 134, 139, 142], "min_row": 112, "minccino": 123, "mind": [22, 37, 57], "mini": 137, "minim": [2, 6, 59, 126], "minimum": [3, 4, 33, 102, 105, 109, 112, 128, 136, 137, 150], "minu": [75, 136], "minun": 123, "minut": [40, 41, 43, 44, 45, 134, 135, 139], "minyear": 39, "mirror": [58, 141], "misc": 64, "misdreavu": 123, "misinterpret": 129, "mislead": 131, "mismagiu": 123, "mismatch": 86, "miss": [24, 50, 51, 57, 106, 113, 122, 138, 140], "missing_label": 119, "mission": 74, "mistak": [33, 50, 78, 136], "mit": 137, "mitsubishi": 124, "mix": [33, 34, 35, 36, 57, 106, 107, 134, 135, 136, 140], "mix_fruit": [27, 33, 36], "mkdir": 60, "ml": [10, 138, 150], "mlc": 135, "mlp": 6, "mm": [39, 41, 42], "mn": 19, "mnemon": 70, "mnist": [4, 6], "mo": 19, "mod": [60, 110], "modal": 137, "mode": [11, 48, 51, 60, 61, 81, 82, 123, 135, 136], "model": [3, 78, 81, 82, 95, 128, 130, 132, 139, 140, 141, 149, 150], "model_": 141, "modf": [60, 62], "modif": [18, 81, 83, 109, 116, 119, 121, 122, 135, 138, 139, 140, 142], "modifi": [16, 17, 18, 25, 27, 28, 32, 33, 34, 35, 37, 46, 48, 55, 56, 60, 72, 74, 75, 107, 112, 117, 123, 135, 137, 139, 140, 149], "modul": [11, 14, 15, 16, 17, 18, 19, 20, 28, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 44, 46, 48, 49, 50, 51, 52, 55, 57, 58, 59, 66, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 86, 107, 108, 116, 119, 121, 130, 135, 140, 142], "modula": 86, "modular": 54, "modulo": [50, 84], "modulu": [70, 75, 84], "moistur": [103, 135], "moisturizersalesdata": 103, "moltr": 123, "moment": [76, 135, 142], "mon": [29, 40, 41], "mondai": [40, 41, 45], "monei": [134, 135], "monferno": 123, "mongodb": 33, "monitor": 149, "monkei": 137, "monoton": 83, "month": [29, 40, 41, 42, 43, 44, 45, 54, 69, 138, 140, 143], "month_numb": 103, "monthlist": 103, "moon": 54, "moral": 128, "mordern": 9, "more": [3, 4, 5, 6, 7, 10, 11, 12, 14, 15, 16, 17, 18, 20, 22, 24, 25, 27, 29, 31, 33, 34, 35, 36, 37, 39, 40, 45, 46, 48, 49, 50, 51, 52, 54, 55, 57, 59, 60, 61, 64, 68, 69, 70, 71, 76, 78, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 103, 106, 107, 108, 109, 112, 113, 118, 121, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 150], "moreland": 129, "moreov": 48, "morn": [54, 57, 74], "morphism": 81, "most": [9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 28, 31, 32, 33, 34, 35, 36, 41, 46, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 69, 71, 72, 73, 74, 75, 78, 81, 82, 83, 84, 86, 88, 92, 107, 108, 112, 114, 116, 119, 121, 129, 134, 135, 136, 137, 138, 139, 140, 142, 143], "most_frequent_word": 19, "most_populated_countri": [48, 54], "most_spoken_languag": [48, 54], "mostli": [28, 32, 129, 142], "mothim": 123, "motiv": 19, "motorcycl": 6, "mous": [33, 34], "move": [9, 23, 27, 29, 48, 76, 119, 127, 128, 131, 134, 135, 136, 138, 140, 141, 142], "movi": 141, "mpl": 138, "mr": 123, "mri": 140, "mro": 83, "msc": 11, "msg": [16, 17, 54, 57, 126, 133], "mtransform": 135, "mu": 61, "much": [3, 6, 9, 11, 15, 18, 35, 60, 109, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142], "mudkip": 123, "muk": 123, "mul": 60, "multi": [71, 72, 81, 113, 114, 137, 141, 142], "multideriv": 83, "multidimension": [105, 107, 112], "multiindex": [112, 115, 116, 119, 122], "multilay": 6, "multilevel": 138, "multilin": [19, 32, 59, 69, 71, 72], "multiline_str": [32, 71], "multimedia": 11, "multip": 13, "multipl": [3, 6, 11, 15, 17, 25, 27, 29, 32, 33, 36, 37, 48, 55, 57, 59, 68, 69, 71, 75, 78, 81, 82, 84, 86, 105, 106, 112, 113, 115, 117, 118, 122, 124, 128, 129, 130, 134, 135, 136, 137, 140, 141, 142], "multiple_vari": 37, "multipli": [16, 27, 28, 34, 39, 54, 58, 64, 65, 70, 74, 75, 105, 108], "multitouch": 11, "multivari": [3, 4, 142], "multivariate_norm": [129, 130, 131, 141], "mumbai": 37, "munchlax": 123, "munna": 123, "murkrow": 123, "musharna": 123, "mushroom": 34, "music": 63, "must": [14, 16, 17, 26, 27, 31, 32, 33, 34, 35, 36, 48, 49, 51, 54, 55, 57, 58, 60, 61, 63, 64, 68, 69, 70, 72, 73, 76, 78, 82, 83, 86, 103, 107, 113, 117, 118, 127, 128, 135, 142], "mut": 134, "mutabl": [27, 33, 34, 35, 36, 72, 112], "mutat": 107, "mute": 137, "my": [4, 28, 31, 32, 48, 51, 55, 56, 64, 70, 72, 82, 86, 102, 103, 129, 134, 136, 137, 138, 140], "my_addit": 65, "my_ag": 24, "my_data": 49, "my_dict": 35, "my_dict1": 35, "my_dict2": 35, "my_dict3": 35, "my_func": 55, "my_gen": 15, "my_info": 33, "my_it": 14, "my_list": [14, 15, 33, 59, 106, 112], "my_list1": [33, 106], "my_list2": [33, 106], "my_list3": 33, "my_list4": 33, "my_list5": 33, "my_matrix": 106, "my_modul": 60, "my_nam": 70, "my_set": [27, 36], "my_str": [15, 32], "my_tupl": 34, "my_tuple1": 34, "my_tuple2": 34, "my_tuple3": 34, "my_tuple4": 34, "my_vaccin": 27, "myclass": 68, "mygraph": 102, "mymethod": 83, "mynewclass": 82, "myst": [146, 148], "mysteri": 76, "n": [2, 3, 4, 12, 14, 15, 16, 20, 23, 24, 27, 28, 29, 32, 33, 34, 37, 48, 51, 52, 54, 57, 58, 59, 60, 64, 67, 69, 70, 71, 73, 74, 77, 81, 82, 83, 87, 91, 105, 106, 109, 112, 113, 114, 117, 118, 119, 120, 121, 122, 124, 126, 134, 136, 137, 138, 140, 141], "n0": 27, "n1": 27, "n10": 27, "n21": 27, "n28": 27, "n3": 27, "n36": 27, "n45": 27, "n6": 27, "n_boot": [130, 138, 139, 140], "n_color": 129, "n_featur": 141, "n_list": 33, "n_sampl": 141, "n_tupl": 34, "na": [112, 116, 117, 122], "na_valu": 124, "nafter": [116, 117, 118, 121, 122], "nail": 126, "naiv": 86, "name": [11, 15, 16, 17, 18, 19, 20, 27, 28, 29, 31, 32, 33, 34, 35, 37, 39, 40, 41, 45, 46, 48, 49, 50, 51, 54, 55, 57, 59, 63, 64, 65, 68, 69, 71, 72, 73, 75, 77, 81, 82, 83, 84, 86, 102, 103, 112, 113, 115, 116, 117, 118, 119, 120, 121, 123, 126, 129, 130, 131, 133, 134, 138, 140, 142], "named_tupl": 45, "nameerror": [16, 18, 32, 33, 34, 35, 51, 55, 71, 72, 82], "nameless": 59, "names_upper_cas": 17, "namespac": [9, 16, 18, 59, 60, 63, 69, 80, 82, 86, 105], "nan": [60, 62, 106, 108, 110, 113, 118, 122, 123, 124, 126, 130, 136, 138], "napr": 67, "narrow": 137, "nat": [112, 113, 115, 116, 117, 118, 119, 120, 121, 122], "nation": 102, "nativ": [75, 126, 127], "natu": 123, "natur": [0, 11, 17, 28, 60, 62, 76, 105, 140, 149], "naug": 67, "nbagg": 127, "nbin": 128, "nbyte": 106, "ncol": [128, 137, 138], "ncolumn": 119, "ncongratul": 52, "ncontain": 48, "ndarrai": [105, 106, 109, 112, 113, 114, 143], "ndata": 20, "ndatafram": 122, "ndec": 67, "ndenumer": [110, 128], "ndframe": 112, "ndim": [105, 106], "ndindex": 110, "ndo": 32, "ne": 102, "nearest": 2, "nearli": [32, 59, 75, 105], "neat": 69, "neatli": 130, "necessari": [11, 14, 26, 28, 64, 121, 127, 132], "necessarili": [112, 126, 130, 135, 136, 142], "need": [3, 4, 5, 6, 11, 15, 18, 19, 22, 24, 27, 28, 31, 32, 33, 34, 37, 39, 41, 42, 43, 45, 48, 49, 51, 52, 54, 55, 56, 57, 59, 60, 65, 67, 70, 72, 73, 74, 78, 82, 83, 84, 86, 89, 95, 103, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 143, 147, 150], "neg": [0, 3, 4, 19, 23, 24, 25, 26, 32, 37, 48, 62, 71, 74, 110, 115, 131, 137], "negat": [19, 75], "negative_numb": 74, "neither": [26, 32, 55, 62, 137], "nenter": 52, "nenuemer": 27, "nescessarili": 108, "nest": [9, 17, 22, 24, 25, 30, 33, 34, 35, 55, 58, 76, 105, 106, 114, 135, 137, 138], "network": [1, 51, 95, 109, 149, 150], "networkerror": 51, "neural": [1, 95, 109, 149, 150], "never": [14, 28, 29, 31, 51, 70, 75, 78, 112, 127, 129, 134], "new": [0, 3, 4, 10, 11, 17, 18, 19, 22, 28, 32, 34, 36, 37, 40, 41, 43, 44, 48, 52, 56, 59, 67, 70, 74, 76, 81, 82, 83, 84, 86, 102, 107, 109, 112, 113, 116, 117, 118, 119, 121, 124, 131, 132, 135, 136, 137, 138, 139, 140, 141, 142], "new_": 112, "new_ag": 119, "new_axi": 116, "new_col": 119, "new_col_nam": 112, "new_df": 123, "new_dict": 35, "new_file_nam": 49, "new_head": 122, "new_index": 119, "new_list": 59, "new_mark": 119, "new_nam": 119, "new_sig": 135, "new_str": 19, "new_valu": 112, "new_year": 43, "new_york": [39, 43], "newaxi": 141, "newdir": 49, "newli": [86, 122], "newlin": [19, 32, 48, 64, 67, 69, 71, 74], "newshap": 109, "newton": 54, "next": [6, 14, 15, 23, 25, 27, 28, 29, 32, 48, 50, 51, 60, 61, 69, 78, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "neymar": [27, 28, 102], "nf": 112, "nfeb": 67, "nfor": 27, "ng": 19, "ngood": 32, "nhow": 74, "ni": 27, "nice": [127, 129, 134, 135, 140], "nicer": [32, 138], "nichol": 126, "nidok": 123, "nidoqueen": 123, "nidoran": 123, "nidorina": 123, "nidorino": 123, "nigeria": 48, "night": [57, 137], "nikla": [3, 4], "nin": 32, "nincada": 123, "nine": 19, "ninetal": 123, "nineti": 32, "ninjask": 123, "nipy_spectr": 132, "nipy_spectral_r": [132, 134], "nissan": 124, "njul": 67, "njun": 67, "nlist": 120, "nmai": 67, "nmar": 67, "nmulti": 69, "nn": 137, "nnov": 67, "no_of_nonna_valu": 118, "no_of_sid": 83, "nob": 128, "noct": 67, "noctowl": 123, "node": [6, 33], "nohtyp": 32, "noibat": 123, "nois": [130, 135], "noisier": 137, "noivern": 123, "nomin": 4, "non": [3, 4, 6, 16, 20, 23, 28, 32, 48, 49, 57, 61, 82, 112, 118, 126, 127, 130, 132, 134, 140], "none": [17, 18, 19, 23, 27, 28, 35, 45, 48, 51, 54, 57, 61, 64, 68, 69, 71, 82, 109, 110, 112, 113, 116, 117, 118, 119, 121, 122, 126, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "nonlinear": [3, 6, 130], "nonloc": [9, 56, 66, 68, 76], "nonlov": 55, "nonmarinemamm": 83, "nonneg": [105, 106], "nonparametr": [130, 132], "nonwingedmamm": 83, "nonzero": 110, "nor": [26, 32, 51, 55, 62, 137], "nordic_countri": 51, "norm": [18, 62, 108, 128, 133, 135], "normal": [16, 17, 19, 28, 29, 32, 37, 51, 52, 55, 59, 60, 61, 82, 106, 109, 115, 123, 128, 130, 131, 132, 133, 136, 137, 144], "normal_arrai": 109, "normalis": 143, "normalvari": 61, "north": 138, "norwai": [33, 51], "nosepass": 123, "notaion": 107, "notat": [3, 4, 36, 74, 102, 107, 137], "notation3": 74, "notch": 136, "note": [3, 4, 14, 15, 16, 18, 22, 28, 29, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 51, 54, 55, 57, 60, 64, 69, 70, 71, 74, 75, 76, 81, 82, 83, 88, 92, 103, 106, 107, 108, 112, 113, 115, 116, 119, 120, 121, 122, 126, 127, 129, 130, 131, 132, 135, 136, 137, 138, 140, 141, 142, 150], "notebook": [7, 13, 50, 74, 88, 92, 127, 129, 130, 131, 132, 139, 140, 142, 146, 148, 149, 150], "notepad": 67, "noth": [19, 23, 27, 28, 29, 36, 54, 70, 81, 108, 135, 136, 137, 143], "notic": [17, 29, 31, 35, 37, 39, 50, 72, 74, 82, 83, 112, 127, 128, 130, 132, 134, 135, 136, 137, 138, 140, 141], "notif": [6, 11], "notimplementederror": 50, "notion": [31, 84], "notnul": 112, "notpad": 67, "noutput": 24, "nov": 67, "novemb": 25, "now": [4, 6, 9, 15, 16, 17, 18, 19, 22, 23, 24, 27, 28, 37, 39, 40, 42, 43, 44, 48, 50, 51, 54, 55, 56, 57, 59, 60, 63, 64, 67, 69, 71, 73, 74, 76, 81, 82, 83, 84, 86, 108, 119, 122, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 150], "nowher": 112, "np": [12, 87, 91, 102, 105, 106, 107, 108, 109, 112, 118, 122, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "nperfect": 69, "nresult": 120, "nrow": [128, 137], "nsep": 67, "nsheet": 48, "nthi": [48, 52], "null": [27, 28, 36, 112, 118, 130, 142], "num": [14, 15, 16, 17, 20, 23, 24, 25, 26, 27, 28, 32, 36, 51, 54, 57, 58, 59, 69, 70, 74, 82, 109, 112, 113, 124, 133], "num1": [23, 24, 25, 26, 54, 57, 65, 70, 74, 82], "num2": [23, 24, 25, 26, 54, 57, 65, 70, 74, 82], "num3": 74, "num4": 74, "num_1": [25, 70], "num_2": [25, 70], "num_flo": 73, "num_float": 73, "num_int": 73, "num_list": [37, 59], "num_new": 73, "num_on": 54, "num_point": [130, 132], "num_str": 73, "num_sum": 73, "num_two": 54, "number": [0, 3, 4, 6, 9, 14, 15, 16, 17, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 73, 75, 77, 82, 83, 84, 86, 102, 103, 105, 112, 113, 114, 115, 119, 126, 127, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "number33": 74, "number_arithmet": 26, "number_list": 37, "numbermethod": 69, "numbers_int": 17, "numbers_squar": 17, "numbers_str": 17, "numel": 123, "numer": [11, 27, 28, 31, 32, 52, 60, 70, 74, 84, 105, 106, 112, 129, 131, 133, 134, 136, 137, 138, 140, 143], "numpi": [11, 12, 27, 64, 87, 91, 102, 103, 107, 108, 112, 118, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149], "numpy_array_from_list": 106, "nuzleaf": 123, "nvar": 128, "ny": [39, 43], "nyc": 140, "nyc_taxi": 140, "nyear": 45, "nzip": 27, "o": [9, 11, 15, 19, 27, 29, 32, 33, 34, 35, 36, 37, 49, 53, 71, 72, 73, 74, 80, 102, 103, 122, 126, 127, 130, 138, 141], "ob": 82, "obama": 48, "obj": [11, 14, 18, 37, 81, 82, 86, 116], "obj1": 83, "obj2": 83, "object": [2, 11, 14, 15, 16, 17, 18, 27, 31, 32, 33, 34, 35, 36, 40, 42, 44, 45, 49, 50, 51, 52, 54, 57, 58, 59, 60, 61, 64, 69, 70, 72, 73, 74, 75, 76, 83, 84, 86, 105, 106, 108, 109, 113, 114, 119, 120, 121, 123, 129, 130, 131, 132, 134, 135, 138, 141, 142], "object1": 83, "object_nam": 82, "observ": [2, 17, 18, 23, 29, 81, 112, 122, 127, 128, 130, 131, 133, 134, 136, 137, 138, 139, 140, 142, 143], "obtain": [32, 60, 131, 138, 142], "obviou": [18, 32, 75], "obvious": 135, "occas": 109, "occass": [130, 134], "occur": [19, 28, 29, 32, 48, 50, 51, 52, 56, 65, 73, 109, 136], "occurr": [19, 32, 36, 82, 117, 138], "ocean": [132, 141], "ocean_r": 132, "oct": 67, "octadecim": 31, "octal": [31, 32, 71, 74], "octilleri": 123, "octob": 25, "od": 81, "odd": [14, 22, 27, 28, 33, 35, 37, 51, 54, 57, 86, 109], "odd_numb": [17, 37], "odd_squar": 35, "oddish": 123, "ofcours": [138, 140, 142], "off": [5, 7, 32, 48, 88, 89, 92, 112, 127, 138, 140, 147], "offer": [11, 31, 33, 61, 75, 107, 110, 126, 129, 132, 134, 135, 137, 138, 139, 140, 141, 142], "offic": 126, "offici": [9, 64, 130, 134, 136, 139, 140], "offlin": 137, "offset": [40, 41, 48, 127, 138], "offspr": 134, "often": [0, 4, 28, 32, 33, 67, 74, 81, 86, 128, 129, 131, 132, 134, 135, 136, 138, 140, 141, 142], "oh": [123, 138], "ohc": [112, 113, 124], "ohcf": 124, "ohcv": [112, 113, 124], "ok": [32, 69, 126], "okai": [69, 131, 132, 134, 135, 137], "old": [19, 24, 51, 64, 74, 81, 86, 110, 112, 119, 128, 131], "old_col": 119, "old_nam": 112, "older": [24, 75], "oliv": 129, "omanyt": 123, "omastar": 123, "omit": 19, "omma": 48, "onc": [3, 4, 11, 15, 19, 27, 29, 32, 34, 35, 36, 39, 48, 51, 54, 55, 57, 60, 67, 70, 72, 78, 115, 116, 119, 126, 127, 129, 132, 135, 136, 137, 138, 139, 140, 141, 142, 150], "one": [3, 4, 6, 9, 11, 14, 15, 16, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 46, 48, 51, 55, 57, 58, 59, 60, 63, 64, 67, 68, 69, 71, 72, 73, 75, 76, 78, 82, 83, 84, 86, 88, 92, 95, 106, 107, 108, 109, 112, 113, 114, 116, 117, 119, 121, 122, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144], "onedr": 49, "onedrivetemp": 49, "ones": [4, 32, 60, 105, 106, 108, 109, 110, 119, 121, 134, 136], "ongo": 140, "onion": 51, "onix": 123, "onli": [6, 9, 15, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 48, 49, 50, 51, 52, 55, 56, 57, 59, 60, 64, 67, 69, 70, 72, 75, 76, 78, 81, 82, 83, 84, 86, 106, 107, 112, 115, 116, 117, 118, 119, 120, 122, 123, 124, 126, 127, 128, 129, 130, 131, 135, 137, 138, 140, 141, 142], "onlin": [4, 9, 129, 137, 140], "onto": [131, 139], "ooo": 32, "oop": [9, 51, 85], "opac": 129, "opaqu": 129, "open": [9, 11, 50, 51, 60, 64, 69, 105, 112, 123, 124, 149], "open_workbook": 48, "openai": 149, "openerp": 11, "oper": [0, 9, 11, 15, 16, 17, 19, 20, 27, 28, 31, 37, 39, 48, 50, 51, 54, 55, 57, 63, 65, 69, 70, 72, 74, 77, 78, 80, 81, 82, 85, 95, 106, 109, 112, 116, 117, 119, 120, 121, 122, 140, 150], "operand": [31, 32, 33, 50, 51, 73, 75, 84], "opinion": [134, 138, 140], "opportun": [29, 128], "opposit": [59, 112], "optim": [2, 3, 4, 29, 35, 72, 78, 116, 150], "option": [3, 4, 18, 19, 25, 27, 28, 31, 32, 33, 34, 35, 37, 51, 52, 54, 57, 64, 74, 81, 82, 83, 106, 109, 113, 120, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "oracl": 32, "orang": [25, 27, 33, 36, 51, 71, 75, 114, 129, 132], "oranges_r": 132, "orbital_period": 137, "order": [3, 6, 15, 27, 28, 32, 48, 49, 54, 55, 57, 59, 60, 63, 72, 74, 82, 109, 112, 113, 119, 120, 127, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142], "ordereddict": 120, "ordin": [4, 138], "ordinari": 17, "ore": [19, 142], "org": [11, 102, 108, 133, 140, 144], "organ": [11, 33, 39, 54, 60, 63, 74, 81, 140, 144], "orient": [14, 16, 18, 52, 82, 83, 84, 86, 113, 120, 127, 134, 135, 136, 137, 138, 139, 140], "origin": [16, 17, 19, 49, 78, 84, 86, 107, 109, 112, 113, 116, 117, 118, 120, 122, 127, 131, 136, 140, 141, 144], "orrd": 132, "orrd_r": 132, "orthogonol": 13, "oserror": 50, "oshawott": 123, "ot": [19, 26], "otat": 48, "other": [4, 5, 6, 9, 11, 14, 15, 17, 19, 27, 28, 31, 32, 37, 45, 48, 50, 51, 52, 54, 55, 57, 58, 59, 60, 64, 65, 67, 68, 69, 70, 71, 72, 75, 78, 81, 82, 83, 84, 86, 89, 105, 106, 108, 109, 112, 113, 117, 118, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 149], "other_mag": 84, "otherwis": [29, 32, 48, 51, 57, 78, 82, 83, 108, 113, 118, 119], "othwerwis": 28, "ou": 140, "our": [3, 6, 14, 18, 19, 24, 28, 29, 31, 48, 49, 50, 51, 52, 54, 58, 60, 63, 64, 65, 67, 68, 74, 81, 84, 86, 102, 109, 112, 113, 115, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "our_plot": 132, "ourselv": [48, 65, 67], "out": [11, 12, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 48, 50, 52, 54, 57, 59, 60, 67, 68, 69, 70, 71, 72, 75, 84, 87, 91, 107, 109, 110, 112, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142], "outcom": [22, 54, 130], "outer": [16, 26, 27, 28, 55, 108, 112, 136], "outer_fun": 55, "outer_funct": 76, "outermost": 76, "outlier": [130, 131, 136, 138, 140, 144], "outlier_prop": 140, "outlin": [102, 135], "outout": 70, "output": [3, 4, 5, 6, 14, 15, 16, 17, 19, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 54, 55, 56, 57, 59, 60, 67, 73, 75, 78, 82, 83, 84, 89, 106, 108, 112, 115, 119, 120, 127, 140, 147, 149], "outsid": [23, 26, 27, 29, 33, 34, 55, 56, 81, 82, 107, 131, 140, 142], "over": [14, 15, 17, 27, 28, 29, 59, 68, 69, 71, 83, 102, 106, 112, 113, 127, 128, 130, 133, 135, 138, 140, 141], "overal": [78, 102, 127, 132, 137, 138, 140, 141], "overcom": 31, "overflow": [58, 110], "overflowerror": [50, 75], "overkil": 15, "overlai": [131, 138], "overlap": [134, 135, 140], "overli": 141, "overload": [9, 85, 108], "overplot": 141, "overrid": [52, 86], "overridden": [52, 83], "overview": [7, 69, 88, 92, 109, 130, 131, 138, 139], "overwrit": [35, 48, 57], "overwritten": 48, "ow": 19, "own": [14, 50, 51, 52, 59, 60, 63, 64, 65, 67, 74, 76, 86, 128, 135, 136, 137, 138, 140], "oxford": [74, 137], "p": [0, 11, 19, 27, 29, 32, 33, 34, 36, 37, 40, 41, 46, 70, 74, 77, 81, 128, 132, 135, 138], "p1": [77, 81, 84, 86, 143], "p2": [77, 81, 84, 86], "p3": [84, 86], "p4": 86, "p5": 86, "p6": 86, "p7": 86, "p_letter": 37, "p_list": 11, "pa": 126, "pachirisu": 123, "pack": [17, 34], "packag": [9, 48, 60, 66, 69, 112, 116, 119, 120, 121, 126, 129, 133, 135, 137, 139, 140, 141, 142], "packagesin": 63, "packing_person_info": 51, "pad": [32, 40, 41, 74, 75], "page": [5, 46, 61, 62, 69, 84, 89, 129, 139, 147], "pagefil": 49, "pai": 75, "pain": 141, "pair": [27, 32, 36, 62, 72, 73, 112, 113, 119, 120, 132, 135, 137, 139, 140, 141], "paired_r": 132, "pairgrid": [128, 132, 133, 142, 145], "pairplot": [128, 132, 141, 142], "pairwis": 133, "pakistan": 48, "pal": 142, "pale": [129, 135], "palett": [128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "palkia": 123, "palpitoad": 123, "palplot": 129, "pancham": 123, "panda": [11, 27, 102, 103, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149], "panel": [139, 141], "pangoro": 123, "panpour": 123, "pansag": 123, "pansear": 123, "paper": [127, 129, 130, 140, 149], "para": 123, "para1": 17, "para2": 17, "para3": 17, "paradigm": 81, "paragraph": 19, "parallel": [58, 142], "param": [130, 135, 136, 140, 141, 142], "param1": 37, "param2": 37, "param3": 37, "param_1": 4, "param_2": 4, "paramet": [4, 6, 19, 20, 32, 37, 48, 55, 59, 60, 64, 67, 71, 78, 81, 83, 86, 102, 109, 113, 114, 115, 116, 117, 118, 119, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "parameter": 82, "parameter1": [54, 64], "parameter2": 54, "parametr": [82, 140], "paranthes": 32, "paranthesi": [34, 69], "parasect": 123, "parch": [136, 138], "parent": [52, 134], "parentattr": 83, "parenthes": [15, 19, 27, 32, 34, 50, 59, 67, 69, 71, 72, 127], "parenthesi": [15, 50, 55, 109], "parentmethod": 83, "pareto": [61, 138], "paretovari": 61, "pari": 102, "park": 130, "parmar": [17, 25, 27, 32, 37, 48, 54, 57, 60, 70, 81], "parramet": 142, "parrot": [81, 82], "pars": [45, 48, 50, 78, 112], "parser": 50, "part": [0, 17, 19, 27, 28, 29, 31, 32, 60, 62, 71, 72, 75, 76, 102, 105, 107, 117, 120, 126, 136, 140], "parti": [11, 39, 63], "partial": 6, "particl": 19, "particular": [22, 27, 28, 29, 31, 35, 36, 39, 44, 60, 70, 72, 81, 83, 106, 112, 115, 116, 118, 119, 120, 122, 126, 127, 128, 130, 131, 135, 136, 137, 138, 140, 141, 142], "particularli": [32, 136, 137], "partit": [2, 32], "pass": [9, 14, 16, 17, 19, 20, 22, 23, 24, 30, 32, 39, 40, 41, 45, 50, 51, 52, 57, 59, 60, 64, 68, 70, 81, 82, 83, 86, 106, 112, 113, 114, 115, 116, 119, 121, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 140, 141, 142], "passag": 140, "passeng": [138, 140, 142, 143], "passenger_count": 140, "password": 24, "password_check": 24, "past": [103, 127, 132, 135, 136, 137, 140], "pastel1": [132, 137], "pastel1_r": 132, "pastel2": 132, "pastel2_r": 132, "pat": 95, "patch": [134, 138, 141], "patch_artist": 102, "patchcollect": 140, "path": [5, 11, 48, 49, 63, 74, 89, 147], "pathcollect": [134, 135], "patienc": 130, "patrat": 123, "pattern": [17, 78, 102, 129, 141], "paul": 126, "paus": 15, "pawniard": 123, "pca": 139, "pclass": [136, 138], "pctdistanc": 102, "pd": [102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "pdf": [130, 131, 133, 145], "peach": 138, "peak": [124, 131, 137], "pear": [25, 33, 36], "pearl": 78, "pearsonr": 141, "peculiar": [86, 112], "pedestrian": 6, "peek": 126, "peggi": [81, 83], "pelipp": 123, "penguin": [81, 83], "penicillin": 27, "peo": 19, "peopl": [19, 32, 36, 126, 129, 135, 140], "pep": 64, "per": [52, 75, 102, 103, 113, 126, 127, 129, 130, 136, 137, 138, 140, 142], "peramet": 57, "perceiv": 129, "percent": 17, "percentag": [27, 74, 81, 103, 112, 115, 119, 122, 134, 136, 138, 140], "percentil": [81, 109, 112, 140], "percept": 137, "perceptron": 6, "perfect": [0, 28, 69], "perfectli": [68, 69], "perflog": 49, "perform": [6, 11, 14, 16, 20, 22, 27, 28, 31, 32, 33, 34, 35, 36, 37, 48, 51, 54, 59, 60, 65, 67, 72, 73, 74, 75, 78, 81, 84, 95, 105, 108, 112, 116, 119, 121, 122, 138, 150], "perimet": [54, 75, 83], "perimeter_of_circl": 54, "period": [59, 64, 112, 140], "perl": 11, "perm": 60, "perman": 48, "permiss": 51, "permit": 138, "permut": 143, "persian": 123, "person": [25, 27, 48, 54, 57, 64, 69, 70, 75, 81, 82, 83, 135, 138, 140], "person_dct": 48, "person_info": [70, 81, 83], "person_json": 48, "personaccount": 81, "petal": [126, 134], "petal_length": [2, 4, 126, 129, 131, 132, 134, 135, 141, 144], "petal_width": [2, 4, 126, 134, 135, 141, 144], "petallengthcm": 102, "petalwidthcm": 102, "petilil": 123, "ph": 137, "phanpi": 123, "phantump": 123, "phion": 123, "phone": [20, 74, 77], "phone_num": 77, "phone_numb": 74, "photo": 102, "php": [35, 78], "phrase": 32, "physic": [58, 81, 126], "pi": [19, 31, 32, 50, 54, 60, 62, 70, 74, 75, 79, 81, 123], "picalo": 11, "pichu": 123, "pick": [2, 107, 126, 129, 130, 132, 138, 140], "pickl": 64, "pickler": 64, "pickletool": 64, "pickup_datetim": 140, "pickup_latitud": 140, "pickup_longitud": 140, "pictori": 138, "pictur": [2, 3, 4, 6, 29, 142], "pidgei": 123, "pidgeot": 123, "pidgeotmega": 123, "pidgeotto": 123, "pidov": 123, "piec": [18, 107, 138], "piechart": 102, "pignit": 123, "pikachu": 123, "pile": 138, "piloswin": 123, "pineappl": 138, "pineco": 123, "pink": [27, 129, 132], "pink_r": 132, "pinsir": 123, "pinsirmega": 123, "pip": [11, 48, 60], "pipe": 137, "pipelin": 137, "piplup": 123, "pivot": [112, 143], "pivot_t": 112, "pixel": [4, 6, 102], "piyg": 132, "piyg_r": 132, "place": [17, 18, 31, 32, 33, 34, 35, 36, 39, 48, 51, 52, 57, 58, 60, 63, 69, 70, 72, 74, 83, 86, 126, 138, 142, 143], "placehold": [29, 32, 74], "plai": [69, 76, 83, 112, 127, 129, 130, 132, 134, 135, 136, 138, 139, 140, 141, 142], "plain": [14, 86, 137], "plan": [81, 140], "plane": 13, "planet": 137, "planets_data": 137, "plasma": [132, 137, 140], "plasma_r": 132, "plate": 138, "platform": [9, 11, 48, 78, 140], "player": [27, 28, 81, 83, 102], "playground": 6, "ple": 19, "pleas": [28, 113, 127, 129, 130, 131, 133, 137, 138, 140, 142], "plenti": [50, 112], "plot": [3, 12, 87, 91, 126, 141, 142, 143, 144, 145], "plot_func": 142, "plot_joint": 131, "plot_kw": 132, "plotli": 131, "plotlin": 103, "plotnonfinit": 135, "plotter": 135, "plotting_context": 127, "plt": [12, 87, 91, 102, 103, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "plu": [75, 139], "plusl": 123, "pm": [40, 41, 46], "png": [48, 49, 102, 103, 131], "po": [116, 138], "pocoo": 11, "poetri": 11, "pofession": 142, "point": [3, 4, 15, 16, 18, 19, 31, 32, 36, 45, 46, 50, 60, 61, 62, 71, 72, 75, 82, 84, 86, 102, 109, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143], "point_color": 135, "pointer": 48, "pointplot": [134, 138], "poison": 123, "poisson": 134, "pokemon": 123, "pokemon_data": 123, "poli": 81, "polic": 126, "policekillingsu": 126, "polio": 27, "polito": 123, "poliwag": 123, "poliwhirl": 123, "poliwrath": 123, "pollut": 18, "poly1d": 128, "polyfit": 128, "polygon": 83, "polynomi": [105, 130], "ponyta": 123, "poochyena": 123, "poorli": 129, "pop": [22, 35, 36, 102, 132, 136, 141, 144], "popitem": 35, "popul": [17, 37, 48, 54, 61, 140, 142], "popular": [9, 11, 32, 46, 60, 64, 78, 81], "porsch": 124, "port": 78, "portabl": [9, 64, 78], "portal": 139, "portfolio": 149, "portion": [32, 33, 51, 55, 76, 126], "portrai": 129, "portug": 102, "portugues": 48, "porygon": 123, "porygon2": 123, "posit": [0, 17, 19, 20, 23, 24, 25, 26, 32, 37, 51, 54, 58, 59, 62, 71, 112, 121, 122, 129, 131, 134, 135, 136, 138, 142], "positional_or_keyword": 119, "positional_ord": 32, "positive_even_numb": 37, "positive_no": 59, "positive_numb": 74, "possess": 130, "possibl": [18, 19, 24, 27, 29, 32, 34, 37, 51, 58, 60, 63, 70, 71, 74, 102, 108, 109, 112, 114, 115, 129, 132, 134, 137, 140, 142, 143, 150], "possibli": [6, 82, 138], "post": [12, 44, 87, 91, 126, 129, 134, 135, 136, 137], "postag": 141, "poster": 127, "potato": [51, 54, 75], "potenti": [102, 112, 132, 139, 141], "pound": 139, "pow": [50, 60, 62], "pow2": [33, 37], "power": [14, 15, 27, 32, 33, 37, 50, 60, 62, 69, 70, 75, 76, 83, 84, 88, 92, 96, 105, 106, 108, 112, 140, 142], "powtwo": [14, 15], "powtwogen": 15, "pp": 19, "pple": 19, "practic": [9, 10, 19, 34, 51, 52, 54, 60, 65, 86, 106, 112, 124, 127, 131, 137, 138, 139, 140, 142, 149], "practical_estimation_of_the_bandwidth": 133, "pre": [60, 78, 130, 138, 139, 140, 142], "prebuilt": 11, "preced": [23, 40, 41, 51, 57, 69, 83, 131], "precis": [0, 31, 75, 117, 122, 127, 130, 134, 140, 142], "predefin": [4, 48, 54, 60, 73, 127], "predict": [3, 4, 78, 130, 140], "predictor": 130, "predomin": 13, "prefer": [15, 16, 31, 69, 83, 102, 113, 127, 134, 137, 138], "prefix": [31, 63, 76, 81, 82, 127, 129], "prepar": [126, 141, 149], "prepend": 108, "presenc": [5, 31, 75, 89, 131, 147], "present": [25, 27, 29, 32, 35, 36, 49, 51, 59, 64, 75, 112, 115, 116, 119, 127, 128, 130, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 150], "preserv": 31, "preset": 127, "press": [28, 69, 129], "pression": 19, "pressur": 140, "pretti": [11, 17, 44, 67, 72, 112, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "prevent": [63, 70, 81, 83], "preview": [126, 128, 130, 131, 132, 136, 137, 138, 140, 142], "previou": [6, 18, 24, 31, 48, 55, 60, 76, 86, 107, 127, 131, 132, 134, 135, 136, 137, 139, 140, 142], "previous": [51, 60, 131, 132, 135, 137, 140, 141, 142], "prgn": 132, "prgn_r": 132, "price": [3, 4, 81, 82, 102, 112, 113, 114, 123, 140], "price_df": 114, "price_list": 114, "pricedf": 124, "primari": [129, 140], "primarili": [27, 28], "prime": [27, 28, 54], "primeap": 123, "princeton": 140, "princip": 139, "principl": [81, 140], "prinplup": 123, "print": [5, 11, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 69, 70, 71, 72, 73, 75, 76, 77, 81, 82, 83, 84, 86, 89, 102, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 134, 140, 147], "print_data": 55, "print_full_nam": 17, "print_fullnam": [54, 57], "print_hello": 46, "print_hello_three_tim": 46, "print_hi": 46, "print_hi_three_tim": 46, "print_list": 54, "print_msg": 16, "print_this_to_screen": 68, "printer": [16, 17], "printf": 32, "printhello": 76, "printinfo": 57, "printnam": 81, "printstudentdata": 82, "prior": [6, 140], "prism": [132, 141], "prism_r": 132, "privaci": 149, "privat": [18, 60, 81, 82], "privatenam": 69, "privileg": 141, "probabl": [0, 4, 10, 31, 70, 102, 106, 129, 131, 136, 137, 143, 149], "problem": [11, 16, 18, 20, 32, 51, 58, 81, 129, 137, 141, 142, 150], "probopass": 123, "proce": [6, 29, 74, 132], "procedur": [82, 140], "process": [6, 11, 15, 28, 29, 34, 37, 46, 51, 58, 73, 78, 81, 82, 83, 86, 112, 114, 118, 130, 141, 142, 149], "processor": 78, "prod": 60, "produc": [15, 19, 24, 51, 67, 83, 102, 103, 108, 116, 119, 127, 149], "product": [10, 13, 58, 60, 64, 70, 78, 84, 105, 108, 129, 130, 131, 132, 142, 149], "profession": [102, 127, 128, 129, 134, 135, 137], "profici": 130, "profit_rang": 103, "profitlist": 103, "program": [6, 11, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 52, 54, 55, 56, 59, 60, 62, 63, 64, 65, 69, 70, 71, 72, 73, 74, 76, 82, 83, 84, 86, 130, 140, 149], "programdata": [41, 49, 60, 116, 119, 120, 121, 126, 129, 133, 135], "programm": [18, 31, 37, 51, 54, 64, 69, 71, 81, 86, 132], "programmar": 65, "progress": 11, "project": [11, 39, 63, 65, 130, 132, 139, 142, 149], "promin": 134, "promis": [86, 126, 132, 140], "promot": [73, 75], "prompt": [25, 54, 60, 74, 75, 105], "pronoun": 81, "pronounc": 141, "prop": [135, 138], "prop_cycl": [12, 87, 91], "proper": [50, 81, 117], "properli": [48, 49, 50, 67, 82, 136, 137, 142], "properti": [9, 21, 60, 81, 83, 115, 135, 140], "proport": [3, 4, 136, 138, 140], "propos": 86, "protect": [34, 51, 72, 81, 82], "protocol": [11, 14], "prototyp": [2, 9, 82], "provid": [9, 11, 16, 18, 22, 27, 29, 31, 32, 33, 35, 46, 49, 51, 52, 54, 57, 60, 64, 74, 81, 82, 83, 103, 105, 108, 110, 112, 113, 114, 116, 119, 124, 129, 131, 134, 136, 140, 141, 142, 150], "proxi": [50, 83], "prune": 128, "pseudo": [51, 61], "pseudocolor": 129, "psychic": 123, "psyduck": 123, "ptp": 134, "public": [64, 81], "publish": 140, "pubu": 132, "pubu_r": 132, "pubugn": 132, "pubugn_r": 132, "pull": [107, 129, 138, 139, 142], "puls": 139, "pumpkabooaverag": 123, "pumpkaboolarg": 123, "pumpkaboosmal": 123, "pumpkaboosup": 123, "punctuat": 60, "puor": 132, "puor_r": 132, "pupitar": 123, "purd": 132, "purd_r": 132, "purpl": [129, 132, 134], "purples_r": 132, "purpos": [6, 9, 11, 22, 48, 52, 59, 60, 61, 69, 70, 81, 82, 83, 84, 88, 92, 114, 128, 129, 130, 135, 136, 139, 140, 142], "purrloin": 123, "purugli": 123, "put": [18, 19, 23, 24, 29, 32, 33, 51, 67, 74, 76, 110], "pvalu": 128, "py": [17, 32, 41, 52, 56, 60, 63, 64, 67, 70, 74, 116, 119, 120, 121, 126, 129, 133, 135], "py3": 60, "py_list": 33, "py_tupl": 34, "pybrain": 11, "pycharm": [11, 127], "pydata": [126, 140, 144], "pygam": 11, "pykyra": 11, "pynb": 60, "pyplot": [9, 12, 87, 91, 102, 103, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "pyqt": 11, "pyramid": [11, 27, 32], "pyroar": 123, "pyscript": 60, "pyth0ndatatyp": 32, "pytho": 32, "python": [77, 78, 102, 107, 108, 115, 116, 119, 122, 128, 130, 132, 135, 137, 140, 141, 149, 150], "python3": [35, 51], "python32": 32, "python38": 60, "python4datasci": 60, "python99": [24, 48, 49], "python_datatyp": 32, "python_dataypes_2021": 32, "python_learn": 49, "python_studi": 49, "pythonblogsoftwar": 11, "pythondatatyp": 32, "pythonpath": 60, "pythonregex": 19, "pythonthi": 69, "pythonwikiengin": 11, "pythonwin": 60, "pytorch": [27, 149], "pytz": [39, 43], "pyweek": 11, "q": [70, 132, 136], "quadrat": 54, "quagsir": 123, "qualit": 129, "qualiti": [102, 103], "quantil": [102, 136], "quantit": [136, 138, 141], "quantiti": 138, "quantiz": 129, "quarter": 140, "quarterli": 142, "quartet": 132, "quartil": [102, 136, 137, 138], "queen": 135, "queenstown": 136, "queri": [112, 130, 140], "question": [28, 33, 124, 141], "quick": [64, 110, 128, 135, 141], "quickli": [109, 127, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142], "quilava": 123, "quilladin": 123, "quintero": 126, "quit": [6, 27, 34, 50, 51, 107, 109, 128, 130, 131, 132, 133, 134, 135, 139, 140, 142, 143], "quot": [32, 48, 54, 64, 69, 71, 72, 127, 129], "quotat": [64, 67], "quux": 33, "quz": 33, "qwilfish": 123, "r": [3, 25, 27, 28, 29, 32, 33, 34, 35, 36, 41, 46, 48, 49, 51, 54, 70, 71, 75, 81, 82, 102, 103, 107, 112, 120, 123, 124, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "r1": 106, "race": [126, 134], "rad": 102, "radian": [60, 62], "radiu": [70, 75, 81], "raichu": 123, "raikou": 123, "rain": 4, "rainbow": [129, 132, 135, 137, 138, 140], "rainbow_r": 132, "rais": [14, 15, 18, 29, 32, 33, 34, 35, 36, 41, 48, 50, 52, 60, 62, 64, 68, 75, 84, 86, 116, 121, 135], "ralt": 123, "ram": 48, "ramp": 129, "rampardo": 123, "ran": [27, 50, 51, 67, 81, 82], "rana": 106, "rand": [60, 112, 132, 134, 140, 141, 143], "randint": [60, 61, 132, 141], "randn": [12, 87, 91, 133, 136, 140], "random": [0, 2, 9, 12, 31, 36, 48, 66, 87, 91, 105, 112, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "random_numb": 60, "random_sampl": 106, "random_st": 141, "random_user_id": 60, "randomli": [2, 128, 140], "randomlist": 51, "randomst": 130, "randon": 141, "randrang": [31, 60, 61], "rang": [3, 11, 12, 15, 19, 28, 29, 32, 33, 34, 35, 37, 46, 50, 51, 52, 54, 60, 61, 69, 72, 81, 83, 87, 91, 105, 106, 107, 108, 112, 113, 114, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "rangeindex": [112, 122], "rank": [105, 106, 107, 108], "rapid": 9, "rapidash": 123, "rapidli": 9, "rare": [51, 86], "rate": [3, 4, 75, 102, 131, 134, 135, 139], "rather": [4, 6, 39, 46, 60, 64, 69, 83, 112, 113, 115, 119, 121, 122, 127, 136, 138, 140], "ratic": 123, "ratio": [4, 62, 142], "ration": 31, "rattata": 123, "raw": [19, 71, 140], "raw_str": 71, "rayquaza": 123, "rayquazamega": 123, "rb": 48, "rbg": 144, "rc": [127, 129, 138], "rcparam": [12, 87, 91, 138, 140, 141], "rdbm": 142, "rdbu": 132, "rdbu_r": 132, "rdgy": 132, "rdgy_r": 132, "rdpu": 132, "rdpu_r": 132, "rdylbu": 132, "rdylbu_r": 132, "rdylgn": 132, "rdylgn_r": 132, "re": [6, 11, 28, 32, 33, 54, 60, 112, 121, 122, 123, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 140, 142], "rea": 27, "reach": [0, 14, 18, 27, 29, 48, 95], "react": [32, 33, 48], "read": [9, 15, 16, 19, 20, 46, 50, 51, 54, 55, 56, 64, 69, 70, 76, 78, 82, 106, 107, 108, 112, 120, 126, 130, 131, 141, 149], "read_clipboard": 112, "read_csv": [102, 103, 112, 113, 120, 123, 124, 126, 131, 137, 138], "read_excel": [112, 123], "read_html": 112, "read_json": 112, "read_sql": 112, "read_tabl": 112, "readabl": [9, 22, 37, 48, 59, 60, 69, 78, 86, 113], "reader": 48, "readi": [51, 81, 83, 150], "readili": [65, 74], "readlin": 48, "readm": 48, "real": [0, 2, 3, 6, 10, 11, 31, 70, 71, 72, 81, 82, 112, 130, 135, 136, 137, 140, 141, 149], "realiti": 70, "realiz": 137, "realli": [19, 81, 82, 126, 128, 130, 131, 134, 135, 136, 137, 140, 141, 142, 143], "reason": [3, 15, 16, 17, 18, 31, 54, 59, 76, 82, 86, 109, 118, 126, 128, 135, 137, 142], "reassign": [17, 32, 34, 70, 118, 119], "rebind": 76, "recal": 0, "receiv": [6, 23, 24, 37, 57, 86], "recent": [14, 15, 16, 17, 18, 20, 28, 32, 33, 34, 35, 36, 41, 46, 48, 50, 51, 52, 55, 56, 57, 58, 60, 71, 72, 73, 74, 75, 81, 82, 83, 84, 86, 107, 116, 119, 121, 135, 140], "reciev": 11, "reciproc": 51, "recogn": [4, 6, 18, 60], "recognit": 6, "recollect": 132, "recomend": 70, "recommend": [11, 18, 19, 20, 40, 41, 46, 48, 63, 69, 70, 82, 105, 106, 130, 132, 134, 135, 136, 138, 141, 149], "record": [77, 120, 126, 140, 142], "recoveri": 49, "rect": [81, 134], "rectangl": [27, 75, 81, 134, 136, 138, 142], "rectangular": [138, 142, 143], "rectifi": 24, "recur": 86, "recurr": 149, "recurs": [9, 66, 83], "recursionerror": 58, "recursor": 58, "recycl": 49, "red": [3, 27, 69, 82, 102, 103, 129, 132, 133, 135], "redeclar": 70, "redefin": [83, 140], "rediu": 81, "reds_r": 132, "reduc": [3, 4, 17, 27, 28, 54, 58, 110, 112, 131, 137, 139, 140], "reduceat": 110, "reduct": [13, 149], "redund": [86, 112, 116], "redux": 33, "refactor": 18, "refect": 130, "refer": [9, 11, 16, 17, 29, 32, 33, 34, 48, 50, 60, 63, 64, 65, 70, 71, 75, 76, 81, 83, 86, 92, 108, 109, 110, 112, 126, 127, 129, 130, 132, 135, 136, 138, 139, 140, 141, 142, 146, 148], "referec": 140, "referenc": [55, 56, 126, 135, 136], "reference_vari": 81, "referenceerror": 50, "refin": 130, "reflect": [58, 130, 134, 136, 138, 140, 142], "reform": 142, "reformat": 32, "refresh": [10, 127], "reg": [19, 129, 131, 132, 133, 140, 145], "regard": [128, 135, 140], "regardless": 23, "regex": [9, 21, 123], "regex101": 19, "regex_pattern": 19, "regic": 123, "regigiga": 123, "regirock": 123, "regist": 64, "registeel": 123, "reglot": 130, "regplot": [128, 132, 134, 141], "regress": [1, 6, 127, 128, 130, 131, 134, 140, 141, 145, 149], "regular": [7, 19, 27, 32, 37, 88, 92, 112, 136, 140], "regularli": 81, "reindex": 116, "reindex_axi": 138, "reinforc": 149, "reinvent": 140, "reject": 29, "rel": [78, 127, 134, 138, 140], "relat": [3, 10, 39, 45, 46, 48, 50, 51, 57, 84, 126, 128, 135, 136, 139, 140, 141, 142, 143], "relationa": 112, "relationship": [3, 4, 128, 129, 130, 131, 132, 133, 138, 142], "releas": [51, 54, 102], "relev": [112, 127, 131, 135, 139, 142, 143], "reli": [32, 48], "relicanth": 123, "reload": 139, "relplot": 140, "rem": 57, "remain": [34, 48, 75, 126, 127, 130, 131, 132, 134, 139, 140, 141], "remaind": [28, 29, 57, 60, 62, 70, 75, 84, 102], "remean": 29, "rememb": [15, 16, 27, 29, 49, 54, 55, 70, 71, 75, 83, 86, 106, 134, 135, 136, 137, 138, 140, 150], "remind": 129, "remoraid": 123, "remot": 51, "remov": [16, 19, 27, 31, 32, 34, 48, 50, 54, 60, 82, 116, 117, 118, 122, 127, 130, 133, 135, 136, 137, 140, 141], "remove_item": 54, "remove_support_word": 48, "renam": [11, 105, 122, 138, 142], "rename_axi": 119, "render": [11, 49, 88, 92], "repeat": [27, 28, 32, 33, 34, 35, 48, 54, 58, 65, 67, 81, 83, 106, 109, 140, 142], "repeatedli": [22, 27, 28, 29], "repetit": [19, 27], "rephras": 136, "replac": [15, 18, 19, 29, 32, 37, 70, 82, 83, 107, 112, 119, 121, 124, 127, 129, 131, 133, 135, 137, 140], "replic": 140, "repositori": [17, 32], "repr": 11, "repres": [0, 31, 32, 40, 41, 42, 44, 45, 50, 51, 57, 64, 68, 71, 72, 78, 81, 82, 86, 116, 119, 121, 122, 126, 127, 129, 130, 131, 134, 136, 137, 138, 140, 142, 143], "represent": [11, 31, 32, 40, 41, 64, 81, 112, 126, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "reproduc": [12, 87, 91, 137], "request": [11, 107], "requir": [3, 11, 13, 14, 15, 18, 22, 27, 28, 31, 37, 50, 51, 52, 54, 57, 59, 63, 69, 70, 71, 73, 78, 81, 82, 83, 86, 95, 112, 116, 118, 119, 122, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 150], "required_datatyp": 73, "requis": 135, "resampl": 140, "resarch": 32, "rescu": [15, 18], "research": [32, 36, 129, 130, 135, 136, 138, 139, 142, 149], "resembl": [140, 142], "reserv": [68, 70], "reset": 127, "reset_index": [112, 113, 123, 138], "reshap": [105, 108, 110, 143], "reshiram": 123, "resid": [60, 133], "residplot": 141, "residu": 132, "resiz": [48, 102, 105], "resolut": 102, "resolv": [114, 141], "reson": 140, "resourc": [14, 48, 51, 129, 131, 132, 137, 138, 139, 140], "respect": [32, 39, 46, 51, 57, 72, 73, 74, 82, 113, 115, 119, 120, 128, 129, 130, 131, 138, 139, 140, 141, 142], "respectivv": 138, "respons": [84, 135, 139, 149], "rest": [5, 27, 29, 32, 33, 48, 51, 54, 64, 89, 116, 119, 127, 130, 132, 134, 135, 136, 138, 139, 140, 141, 147], "restart": [15, 27, 60, 127], "restaur": [130, 134, 135, 137], "restor": 61, "restrict": [18, 81, 86, 137], "restructur": 64, "result": [2, 6, 14, 15, 16, 17, 19, 20, 24, 25, 27, 28, 29, 31, 32, 33, 34, 45, 46, 50, 51, 54, 55, 57, 58, 60, 65, 68, 69, 74, 75, 83, 84, 107, 108, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 127, 129, 130, 131, 132, 138, 139, 140, 141, 142], "resurc": 139, "ret": 135, "retriev": [18, 32, 35, 57, 64, 72, 121], "return": [11, 14, 15, 17, 18, 19, 25, 27, 28, 32, 36, 37, 39, 40, 41, 42, 44, 45, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 74, 75, 81, 82, 83, 84, 86, 106, 107, 108, 109, 112, 116, 117, 118, 119, 120, 121, 122, 127, 128, 129, 134, 135, 137, 140, 141, 142], "reuniclu": 123, "reus": [11, 18, 81, 107], "reusabl": [20, 54, 60, 81, 83], "rev": 102, "rev_str": 15, "reveal": [86, 129, 141, 150], "revenu": 129, "revers": [15, 17, 32, 34, 35, 54, 105, 129], "reverse_list": 54, "reverse_list1": 54, "review": [105, 134, 135], "revis": [137, 138], "revisit": [131, 132], "revolut": 102, "reward": [19, 32], "rewrit": [24, 54], "rewritten": 37, "rfind": 32, "rfloor": 75, "rgb": [60, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "rgb_color_gen": 60, "rgba": [129, 131], "rhydon": 123, "rhyhorn": 123, "rhyperior": 123, "rich": [136, 140, 141], "rid": [127, 133, 135, 137], "right": [22, 32, 52, 57, 64, 69, 74, 75, 82, 83, 84, 102, 103, 107, 112, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 142], "rigor": 140, "rindex": 32, "riolu": 123, "risk": [140, 141], "rjust": [32, 74], "rmdir": 60, "rmtree": 49, "roam": 60, "robert": 129, "robust": [9, 78, 109, 130, 144], "rock": 123, "rocket": [11, 132, 134, 135, 137, 138, 139, 140, 141, 142], "rocket_r": 132, "rodriguez": 126, "roger": 102, "roggenrola": 123, "rohan": 4, "roi": 140, "role": [7, 69, 83, 112, 149], "roll": [110, 121], "romeo_and_juliet": 48, "romero": [112, 113, 124], "ronaldo": [27, 28, 102], "room": 3, "root": [48, 51, 60, 62, 105, 108], "rose": 115, "roselia": 123, "roserad": 123, "rot": 129, "rotat": 129, "rotom": 123, "rotomfan": 123, "rotomfrost": 123, "rotomheat": 123, "rotommow": 123, "rotomwash": 123, "rough": 140, "roughli": [131, 142], "round": [15, 23, 32, 37, 60, 73, 75], "routin": [67, 108, 138, 140], "row": [27, 28, 37, 48, 102, 105, 106, 107, 108, 109, 112, 116, 117, 119, 121, 122, 123, 128, 130, 131, 132, 134, 138, 139, 141, 142, 143, 144], "row1": 118, "row2": 118, "row_color": 144, "row_index": 120, "row_index1": 114, "row_index2": 114, "row_labl": 112, "row_ord": [130, 139, 142], "row_posit": 112, "row_r1": 107, "row_r2": 107, "rpm": 124, "rstrip": 32, "rt": 48, "ru": 51, "rubi": 78, "rufflet": 123, "rug": [128, 133], "rule": [6, 32, 54, 78, 83, 108, 112, 135, 138, 142], "run": [5, 9, 10, 11, 14, 15, 16, 17, 27, 28, 29, 31, 37, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 54, 55, 56, 57, 60, 69, 70, 76, 78, 81, 83, 89, 127, 129, 137, 139, 140, 147], "runnabl": 78, "runtim": [50, 51, 60, 83, 126], "runtimeerror": [50, 51], "runtimewarn": 108, "russia": [17, 33, 51], "russian": 48, "rvalu": 128, "s1": [39, 81, 121, 122], "s2": [39, 81, 121, 122], "s3": [121, 122], "s4": 122, "s_car": 83, "sabley": 123, "sableyemega": 123, "sad": 16, "safe": [34, 48, 81, 129, 133], "safer": [48, 49], "sai": [0, 3, 4, 6, 17, 19, 28, 57, 60, 70, 82, 83, 112, 127, 128, 129, 130, 131, 132, 135, 136, 138, 139, 140, 141, 142], "said": [0, 32, 83, 108, 127, 129, 130, 131], "saint": 102, "sake": [113, 126], "salam": 123, "salamencemega": 123, "salari": [52, 81, 83, 102, 116], "salarynotinrangeerror": 52, "sale": 140, "sales_data_of_bathingsoap": 103, "salesdata": 103, "salk": 27, "salmon": 138, "sam": [113, 115, 116, 117, 118, 119, 122], "same": [6, 7, 14, 15, 17, 20, 23, 24, 27, 29, 32, 36, 51, 54, 55, 56, 57, 59, 60, 61, 63, 64, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 88, 92, 103, 105, 106, 107, 108, 109, 112, 115, 116, 117, 119, 120, 122, 123, 124, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142], "sampl": [12, 14, 48, 61, 71, 81, 83, 87, 91, 106, 109, 126, 131, 132, 134, 135, 136, 137, 140, 141, 142], "sample_1": 136, "sample_2": 136, "sample_3": 136, "sample_cmap": 129, "sample_color": 129, "sample_combo": 136, "sample_melt": [134, 142], "samsung": 57, "samurott": 123, "san": [102, 126], "sandal": 6, "sandil": 123, "sandshrew": 123, "sandslash": 123, "sanitize_sequ": 135, "sapp": 126, "sat": [135, 136, 137, 138], "satisfi": [17, 22, 28, 29, 37, 83, 107], "satur": [129, 136, 137, 138, 140], "save": [11, 14, 15, 60, 67, 78, 102], "savefig": [102, 103], "saw": [11, 82], "sawk": 123, "sawsbuck": 123, "scalabl": 142, "scalar": [13, 108, 109, 112, 113, 137, 138], "scale": [102, 109, 127, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "scale_hu": 137, "scan": [78, 141], "scandic": 33, "scatter": [114, 128, 130, 132, 133, 134, 135, 139, 141, 142, 145], "scatter_kw": [130, 131, 132, 134, 141], "scatterbug": 123, "scatterplot": [130, 131, 132, 134, 135, 142], "scc": 131, "scenario": [3, 56, 83, 127, 130, 131, 135, 136, 137, 140, 150], "sceptil": 123, "sceptilemega": 123, "scheme": 129, "school": [10, 31, 113, 137, 138], "scienc": [0, 9, 11, 32, 35, 48, 54, 60, 112, 115, 125, 128, 130, 139, 140, 142, 150], "scientif": [11, 105, 129, 137], "scikit": [27, 105, 141, 149], "scipi": [11, 108, 128, 133, 140, 141], "scizor": 123, "scizormega": 123, "scoliped": 123, "scope": [9, 16, 50, 55, 56, 60, 69, 74, 80, 135, 136, 142], "score": [0, 3, 25, 113, 136, 138], "scorebook": 138, "scorecard": [138, 142], "scott": 137, "scrafti": 123, "scraggi": 123, "scratch": [14, 81, 83], "screen": [32, 39, 67, 74, 130, 139], "script": [11, 51, 60, 75, 78], "scyther": 123, "sd": [109, 138, 140], "seaborn": [131, 132, 133, 138, 139, 140, 141, 142, 143, 144], "seadra": 123, "seagreen": 142, "seak": 123, "sealeo": 123, "search": [18, 32, 35, 63, 76, 83, 124, 139], "season": [25, 54], "second": [6, 14, 15, 17, 26, 27, 32, 33, 34, 37, 40, 41, 43, 44, 45, 46, 50, 51, 55, 57, 60, 65, 70, 74, 75, 82, 83, 86, 107, 115, 116, 119, 121, 124, 127, 135, 136, 137, 138, 140, 142], "second_last": 32, "second_lett": 32, "second_numb": 74, "secondari": 26, "secondli": [130, 140], "secret": 150, "section": [1, 6, 16, 31, 32, 37, 48, 50, 69, 74, 95, 112, 113, 114, 115, 116, 117, 120, 122, 134, 137, 139, 140, 150], "secur": 81, "sedan": [112, 113, 124], "see": [3, 4, 5, 7, 12, 14, 15, 16, 17, 18, 19, 20, 24, 27, 28, 29, 31, 32, 35, 37, 46, 48, 50, 51, 54, 55, 56, 57, 59, 60, 61, 64, 67, 68, 69, 72, 73, 74, 75, 78, 81, 83, 84, 86, 87, 88, 89, 91, 92, 105, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 126, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 146, 147, 148], "seed": [12, 61, 87, 91, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "seedot": 123, "seek": 48, "seek_set": 48, "seekabl": 48, "seel": 123, "seem": [31, 63, 86, 128, 136, 137, 139, 140, 141, 142], "seen": [16, 18, 48, 70, 86, 112, 113, 121, 122, 132, 133, 134, 135, 136, 141, 142], "segment": [65, 127, 128, 130, 134, 139], "segreg": [127, 134, 137, 138, 140, 142], "seismic": 132, "seismic_r": 132, "seismitoad": 123, "select": [3, 4, 11, 32, 102, 105, 107, 113, 116, 119, 124, 129, 137, 140, 141, 142], "select_difficulti": 63, "self": [14, 15, 18, 37, 51, 52, 64, 81, 83, 84, 116, 119, 121, 126, 135], "self_mag": 84, "sell": 81, "semi": [11, 83], "send": 140, "sens": [3, 17, 27, 68, 70, 108, 112, 126], "sensibl": 84, "sensit": [29, 68, 70, 75, 129, 140], "sent": 6, "sentenc": [19, 27, 32, 36, 74, 75], "sentinel": 14, "sentret": 123, "sep": [40, 41, 64, 67, 74, 109, 123], "sepal": [102, 126, 134], "sepal_length": [126, 132, 134, 135, 141, 144], "sepal_width": [126, 131, 132, 134, 135, 141, 144], "sepallength": 102, "sepallengthcm": 102, "sepalwidthcm": 102, "separ": [6, 24, 27, 31, 32, 33, 34, 35, 36, 37, 48, 49, 51, 52, 54, 68, 69, 70, 72, 74, 75, 76, 81, 83, 103, 114, 120, 127, 128, 130, 132, 134, 136, 137, 140, 141, 142], "septemb": 25, "seq": 61, "sequenc": [14, 15, 27, 29, 33, 34, 35, 48, 49, 50, 54, 58, 59, 60, 61, 67, 69, 71, 72, 73, 75, 76, 107, 109, 121, 122, 130, 131, 140, 141], "sequencemethod": 69, "sequenti": 121, "serbian": 48, "seren": 126, "seri": [15, 26, 27, 28, 44, 60, 78, 124, 130, 133, 134, 137, 139, 142, 149], "serial": 64, "serif": [138, 140], "serperior": 123, "serv": [2, 52, 64, 88, 92, 139], "server": [0, 140], "servin": 123, "session": 60, "set": [0, 2, 3, 9, 11, 14, 18, 19, 28, 32, 33, 38, 48, 49, 54, 60, 71, 73, 75, 81, 82, 83, 102, 106, 107, 109, 112, 113, 114, 116, 117, 118, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150], "set1": [130, 132, 135, 138, 142], "set1_r": 132, "set2": [132, 136, 137, 138, 141], "set2_r": 132, "set3": [132, 136, 137], "set3_r": 132, "set_": 135, "set_1": 82, "set_axis_label": [139, 142], "set_context": 127, "set_fonts": 138, "set_hatch": 102, "set_index": [112, 120, 138], "set_opt": 112, "set_printopt": 110, "set_styl": [127, 129, 131, 137, 138], "set_temperatur": 18, "set_titl": [103, 139, 142], "set_transform": 135, "set_vis": 141, "set_xlabel": [137, 138, 140], "set_xtick": 138, "set_xticklabel": [137, 139], "set_ylabel": [137, 138, 140], "set_ytick": 138, "setattr": [82, 83], "seterr": 110, "setmaxpric": 81, "setosa": [102, 126, 134, 144], "setstat": 61, "settabl": 31, "setter": 81, "seven": [27, 60], "sever": [3, 4, 11, 15, 19, 25, 33, 45, 46, 51, 60, 74, 107, 137], "sevip": 123, "sewaddl": 123, "sex": [130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142], "sex_tim": 137, "sh": 81, "shade": [129, 131], "shadow": 130, "shall": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "shampoo": 103, "shampoosalesdata": 103, "shanghai": 37, "shape": [81, 105, 106, 107, 108, 109, 112, 116, 126, 130, 134, 137], "sharabl": 81, "share": [60, 82, 86, 112, 128, 129, 135, 140, 142], "sharei": [128, 130, 139, 142], "sharex": [103, 128, 130, 137, 139, 142], "sharpedo": 123, "sharpedomega": 123, "shayminland": 123, "shayminski": 123, "she": [52, 81], "shedinja": 123, "sheet": [104, 111, 112, 125], "sheet_nam": 48, "shelgon": 123, "shell": [15, 16, 17, 46, 67, 70, 130], "shellder": 123, "shello": 123, "shelmet": 123, "shelton": 126, "shieldon": 123, "shift": [11, 24, 27, 28, 29, 69, 75, 84, 141], "shiftri": 123, "shine": [132, 134, 137], "shinx": 123, "shoot": 126, "short": [25, 27, 37, 54, 59, 64, 69, 70, 120, 139], "shortcut": 9, "shorten": 51, "shorthand": 102, "shortli": [130, 137, 141], "shot": [126, 138, 140], "should": [3, 4, 5, 15, 16, 17, 19, 20, 23, 24, 27, 31, 35, 37, 48, 49, 51, 54, 60, 64, 69, 70, 74, 78, 82, 86, 89, 102, 103, 107, 108, 112, 113, 116, 117, 120, 121, 122, 128, 129, 130, 131, 135, 136, 140, 142, 147, 149], "shouldn": [135, 140], "show": [3, 4, 5, 7, 14, 28, 29, 32, 40, 41, 45, 55, 57, 58, 59, 60, 71, 78, 81, 82, 84, 88, 89, 92, 102, 112, 113, 115, 118, 119, 120, 122, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 147], "show_config": 110, "showcap": 134, "showflier": [134, 136], "shown": [2, 14, 17, 18, 24, 27, 29, 32, 33, 50, 63, 78, 81, 112, 113, 114, 116, 117, 118, 119, 120, 127, 136, 138, 143], "showroom": 112, "shroomish": 123, "shuckl": 123, "shuffl": [31, 60, 61], "shuffle_list": 60, "shuppet": 123, "shutil": 49, "sibl": 6, "sibsp": [136, 138], "side": [75, 83, 112, 127, 134, 136, 142], "sig": 135, "sight": 14, "sigilyph": 123, "sigma": 61, "sigmoid": [4, 6], "sign": [12, 57, 62, 69, 70, 87, 91, 130, 135], "signal": [6, 140], "signatur": 86, "signific": [10, 31, 70, 112, 126, 129, 130], "signs_of_mental_il": 126, "silcoon": 123, "silenc": 120, "silverman": 137, "simiar": 72, "similar": [3, 6, 15, 17, 19, 20, 27, 28, 32, 34, 37, 48, 54, 60, 63, 69, 76, 82, 88, 92, 107, 112, 127, 130, 131, 133, 134, 135, 137, 139, 140, 142, 143, 144], "similari": 75, "similarli": [18, 19, 31, 32, 36, 48, 49, 55, 56, 63, 71, 72, 76, 81, 82, 83, 84, 86, 115, 122, 126, 128, 129], "simipour": 123, "simisag": 123, "simisear": 123, "simmon": 129, "simpl": [6, 7, 9, 11, 14, 15, 16, 17, 18, 28, 32, 35, 39, 48, 51, 52, 60, 67, 71, 75, 77, 78, 82, 86, 88, 92, 114, 116, 119, 120, 122, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 149], "simpler": [11, 58, 130, 131, 137, 141], "simplest": [23, 27, 32, 60, 106, 108, 130, 136, 138], "simpli": [14, 15, 17, 18, 28, 32, 54, 63, 69, 75, 76, 82, 83, 108, 116, 139], "simplifi": [4, 6, 17, 116], "simul": 84, "simultan": [3, 4, 57, 131, 132, 137, 140], "sin": [60, 62, 105, 108, 127, 140, 142], "sinc": [6, 15, 17, 19, 24, 27, 29, 33, 34, 35, 36, 45, 46, 48, 51, 54, 57, 60, 61, 67, 72, 81, 82, 83, 84, 86, 107, 109, 126, 132, 133, 134], "sine": [60, 62, 105, 127, 140], "sing": [74, 81], "singapor": 34, "singl": [3, 13, 17, 19, 27, 32, 33, 36, 46, 51, 56, 59, 71, 72, 74, 78, 81, 86, 106, 107, 112, 114, 121, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144], "singular": 108, "sinh": [31, 60, 62], "sinplot": 127, "sinusoid": [3, 142], "site": [60, 116, 119, 120, 121, 126, 129, 133, 135], "situat": [15, 26, 34, 51, 54, 57, 73, 127], "six": [17, 60, 86, 112, 113, 124, 129], "size": [3, 4, 27, 28, 29, 32, 48, 63, 81, 105, 106, 108, 109, 112, 113, 121, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "size_func": 141, "skarmori": 123, "sketch": [81, 82], "skew": 140, "skiddo": 123, "skill": [25, 27, 35, 48, 70, 81, 83, 102, 140, 141], "skinnier": 137, "skip": [23, 24, 27, 28, 29, 32, 51, 57], "skiploom": 123, "skitti": 123, "sklearn": 141, "skorupi": 123, "skrelp": 123, "skuntank": 123, "sky": 129, "slake": 123, "slakoth": 123, "slash": [32, 49, 137], "sleep": [9, 47, 60, 67], "slice": [36, 69, 72, 107, 112, 141], "slice_a": 107, "slidingtackl": 102, "sliggoo": 123, "slight": [7, 34, 88, 92, 142], "slightli": [46, 68, 126, 135], "slope": [37, 54, 75, 128, 138], "slot": 107, "slow": [108, 116], "slowbro": 123, "slowbromega": 123, "slower": 78, "slowk": 123, "slowli": [134, 135, 136, 140], "slowpok": 123, "slugma": 123, "slurpuff": 123, "small": [6, 7, 29, 37, 52, 60, 65, 78, 88, 92, 130, 132, 134, 138, 140, 141, 142], "smaller": [25, 26, 54, 73, 105, 108, 115, 132, 134, 141], "smallest": [36, 62], "smallpox": 27, "smart": 70, "smart_divid": 17, "smeargl": 123, "smfyb": 60, "smim": 113, "smith": 113, "smoke": [140, 142], "smoker": [130, 133, 134, 135, 136, 137, 138, 139, 140, 142], "smoochum": 123, "smoot": 140, "smooth": [137, 140], "smoother": 130, "smoothli": 57, "sn": [126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "snake": 70, "snake_cas": 70, "sname": 119, "sneak": 126, "sneasel": 123, "snivi": 123, "snorlax": 123, "snorunt": 123, "snover": 123, "snow": 4, "snubbul": 123, "so": [0, 2, 5, 6, 9, 14, 15, 16, 17, 18, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 48, 50, 51, 54, 55, 57, 59, 60, 61, 65, 68, 69, 70, 71, 73, 75, 76, 78, 81, 82, 83, 84, 86, 89, 102, 105, 107, 108, 112, 113, 116, 118, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147], "soar": 139, "soccer": [102, 142], "social": 0, "socket": 11, "sofifa": 102, "softwar": [9, 11, 25, 130], "sold": 103, "sole": [128, 129, 140], "solid": 127, "solosi": 123, "solrock": 123, "solut": [16, 18, 20, 50, 54, 56, 73, 103, 108, 124, 137, 140, 142], "solv": [37, 56, 81, 114, 129, 130, 150], "solve_quadratic_eqn": 54, "some": [0, 4, 6, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 22, 25, 27, 28, 31, 32, 33, 34, 35, 36, 37, 48, 50, 51, 54, 56, 58, 60, 64, 67, 70, 72, 74, 75, 78, 81, 83, 86, 87, 88, 90, 91, 92, 93, 107, 108, 109, 112, 113, 116, 118, 119, 120, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 140, 141, 142, 146, 148, 150], "somedai": 140, "somehow": [130, 138], "someon": [65, 140], "someth": [14, 15, 19, 24, 39, 40, 41, 42, 43, 44, 45, 46, 51, 52, 58, 60, 69, 74, 112, 126, 127, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142], "sometim": [27, 29, 32, 51, 52, 54, 57, 58, 67, 74, 81, 106, 112, 119, 120, 127, 135, 137, 141], "somewher": [29, 33, 129, 136], "song": [63, 81], "soon": [27, 50, 81, 82, 130, 132], "sort": [17, 27, 36, 60, 122, 134, 135, 137, 142], "sort_valu": [112, 123, 124, 137, 138, 142], "sorted_point": 19, "sound": [128, 138], "soup": 71, "sourc": [2, 9, 64, 67, 69, 74, 78, 105, 107, 109, 112, 117, 120, 123, 124, 126, 149], "south": 102, "southampton": [136, 138], "sp": [120, 123], "space": [13, 19, 22, 25, 27, 29, 32, 50, 54, 57, 64, 67, 69, 74, 95, 105, 109, 112, 129, 131, 133, 137, 140, 142], "spain": 102, "spam": [3, 4], "span": [88, 92, 134, 142], "spanish": 48, "spatial": [138, 140], "speak": [14, 15, 86, 138, 142], "speaker": 127, "spearow": 123, "speci": [81, 82, 102, 126, 129, 132, 134, 135, 141, 144], "special": [3, 14, 17, 20, 68, 69, 70, 82, 86, 88, 92, 112, 126, 127, 139, 141, 142], "specialattribut": 69, "specialidentifi": 69, "specialmethod": 69, "specif": [3, 6, 20, 27, 28, 32, 48, 54, 60, 64, 65, 73, 74, 78, 81, 83, 88, 92, 103, 107, 112, 116, 119, 121, 122, 123, 124, 127, 128, 129, 130, 131, 135, 136, 137, 139, 140, 141, 142, 143], "specifi": [17, 18, 27, 29, 32, 46, 48, 49, 51, 59, 61, 69, 70, 71, 83, 84, 102, 105, 106, 107, 109, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 129, 131, 132, 140, 142], "spectral": 132, "spectral_r": 132, "speech": 48, "speech_barack_obama": 48, "speech_donald_trump": 48, "speech_melina_trump": 48, "speech_michelle_obama": 48, "speed": [83, 112, 123, 142], "speed_of_light": 70, "spewpa": 123, "spheal": 123, "sphere": 11, "sphinx": [7, 64, 88, 92], "spike": 140, "spinarak": 123, "spinda": 123, "spine": [127, 131, 136, 137], "spirit": 140, "spiritomb": 123, "split": [2, 11, 17, 27, 32, 36, 74, 105, 112, 120, 127, 134, 135, 137, 141], "split_string_decor": 17, "splitlin": 48, "splitted_str": 17, "spoink": 123, "spoke": 127, "spoken": [17, 48, 54], "sport": 83, "sports_car_info": 83, "sportscar": 83, "spread": [130, 136, 137, 140, 142], "spreadsheet": [48, 112], "spring": [25, 54, 86, 132, 136, 138], "spring_r": 132, "sprintf": [32, 74], "spritze": 123, "spyder": 127, "sql": [33, 112, 120], "sqr": 59, "sqrt": [60, 62, 105, 108, 110], "squar": [2, 3, 15, 16, 17, 23, 27, 28, 29, 32, 33, 34, 35, 37, 59, 60, 62, 64, 81, 86, 105, 106, 108, 128, 131, 132, 141, 142, 143], "square_numb": [54, 57], "squeez": 33, "squirtl": 123, "sr": 119, "st": 35, "stabil": 139, "stack": [33, 58, 59, 108, 109, 110, 113, 126, 138, 139, 140, 142], "stackexchang": 4, "stackplot": 103, "stage": [128, 140], "stai": [113, 116, 128], "stakehold": 141, "stamp": [140, 141], "stan": 17, "stand": [7, 17, 48, 88, 92, 136], "standard": [11, 51, 52, 54, 60, 62, 64, 70, 74, 81, 105, 106, 109, 112, 115, 122, 128, 129, 130, 136, 138, 144], "standard_scal": 144, "standingtackl": 102, "stantler": 123, "star": [17, 27, 77], "staraptor": 123, "starat": 123, "staravia": 123, "starli": 123, "starmi": 123, "start": [5, 6, 7, 9, 14, 15, 17, 22, 23, 27, 28, 32, 33, 34, 46, 48, 51, 54, 61, 63, 68, 69, 70, 72, 76, 88, 89, 92, 95, 105, 107, 109, 112, 113, 114, 115, 116, 118, 119, 121, 123, 127, 128, 129, 130, 134, 135, 136, 137, 138, 140, 142, 147, 150], "start_index": 11, "startindex": 107, "startswith": 32, "staryu": 123, "stat": [109, 126, 128, 131, 133, 137, 138, 140, 141], "stat_meth": 86, "state": [12, 15, 48, 61, 76, 81, 87, 91, 102, 106, 126, 131, 135, 136], "statement": [9, 15, 30, 33, 35, 39, 46, 48, 50, 52, 59, 67, 74, 75, 78, 80, 81, 82, 107, 142], "static": [74, 86], "staticmethod": 86, "statist": [0, 3, 25, 31, 81, 124, 126, 128, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 145, 149, 150], "statistician": 141, "statsmodel": [132, 137], "statu": [33, 126], "std": [81, 82, 105, 109, 110, 112, 126, 131, 133, 138, 142], "std1": 82, "std2": 82, "std3": 82, "stderr": 128, "stdev": 60, "stdout": [64, 74], "steadi": 134, "steel": [123, 126], "steelix": 123, "steelixmega": 123, "step": [3, 4, 6, 9, 17, 27, 32, 33, 34, 48, 58, 61, 74, 76, 82, 105, 109, 112, 122, 141], "step3": 74, "step_siz": 27, "stephen": 141, "stepsiz": 107, "stetement": 25, "stick": [137, 138, 140], "still": [16, 32, 64, 69, 81, 82, 86, 113, 115, 116, 119, 122, 127, 128, 130, 138, 139, 140, 141], "sting": 48, "stochast": 140, "stock": [132, 137, 138], "stockprice_data": 112, "stoke": 142, "stop": [19, 27, 28, 29, 32, 33, 34, 48, 51, 54, 58, 61, 70, 105, 109, 112, 122, 140], "stopiter": [14, 15, 29, 50], "storag": 81, "store": [11, 14, 15, 16, 18, 27, 29, 31, 32, 33, 40, 44, 48, 51, 52, 56, 63, 70, 73, 74, 75, 76, 78, 81, 83, 108, 112, 113, 114, 120, 127, 132, 140], "store_and_fwd_flag": 140, "stori": 139, "stoutland": 123, "str": [11, 19, 29, 32, 33, 41, 48, 50, 54, 64, 72, 73, 74, 82, 83, 84, 102, 119, 123, 137, 138], "str1": 32, "str2": 32, "str3": 32, "str4": 32, "straight": [3, 50, 72, 131, 143], "straightforward": 129, "strat": 32, "strategi": 112, "strawberri": [71, 82], "stream": [48, 64], "street": [25, 27], "strength": 6, "stress": [82, 130], "strftime": [9, 41, 42, 43, 44, 46, 47], "strictli": 128, "stride_trick": 110, "string": [9, 14, 15, 16, 17, 18, 23, 29, 31, 34, 36, 38, 42, 43, 44, 45, 48, 49, 50, 51, 54, 59, 67, 69, 70, 73, 75, 81, 82, 84, 112, 113, 119, 121, 129, 130, 142], "string1": 32, "string2": 32, "stringifi": 48, "stringmethod": 69, "strip": [32, 102, 119, 126, 129, 134, 136, 139, 140, 145], "strip_data": 135, "stripplot": [126, 129, 134, 135, 136, 140], "strive": 108, "strlist": 137, "stroke": 124, "stronger": 131, "strptime": [9, 40, 47], "structur": [7, 11, 17, 22, 27, 33, 48, 50, 63, 64, 68, 81, 88, 92, 102, 103, 112, 113, 114, 120, 121, 122, 123, 124, 126, 134, 142, 149], "struggl": 135, "stuck": 137, "stud": 81, "stud1": 113, "stud2": 113, "stud3": 113, "stud_ag": 119, "stud_mark": 119, "stud_nam": 119, "student": [25, 27, 33, 35, 74, 81, 82, 112, 113, 115, 116, 120, 121, 122, 134, 135, 138, 142], "student_count": 82, "student_data": 120, "student_df": [112, 113, 115, 116, 117, 118, 119, 121, 122], "student_dict": [112, 113, 115, 116, 117, 118, 119, 121, 122], "student_id": 138, "student_nam": 27, "studentdf": 120, "studentdict": 120, "students_enrol": 137, "studentstud": 82, "studi": [10, 13, 15, 67, 81, 109, 131, 140, 142, 143, 149, 150], "studnet": 82, "stuff": 83, "stunfisk": 123, "stunki": 123, "style": [69, 70, 74, 102, 109, 112, 113, 116, 119, 123, 124, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "sub": [16, 34, 49, 54, 58, 63, 64, 105, 138, 140, 142], "subarrai": 107, "subcategori": 138, "subclass": [51, 64, 83], "subdirectori": [49, 63], "subdivid": 140, "subgroup": 19, "subject": [128, 140], "subplot": [12, 87, 91, 127, 128, 137, 139, 141, 142], "subplot_kw": 142, "subscript": [69, 72], "subsequ": [14, 33], "subset": [36, 46, 112, 117, 118, 130, 141, 142, 149], "substitut": [19, 83], "substr": [19, 32], "substract": [75, 105], "subtract": [13, 31, 54, 70, 75, 84, 105, 108], "success": [15, 19, 140], "successful": 11, "successfulli": [18, 51, 135, 137], "sudden": 51, "sudowoodo": 123, "sugar": 17, "suggest": [39, 50, 130, 136, 142], "suicun": 123, "suit": [78, 81, 112, 129, 134, 135, 140], "suitabl": [15, 32, 130, 138], "sum": [2, 6, 15, 16, 20, 27, 28, 31, 33, 36, 39, 54, 57, 60, 62, 64, 65, 69, 73, 81, 84, 103, 105, 108, 109, 123, 124, 133, 136, 138], "sum1": 74, "sum_al": 51, "sum_all_num": 57, "sum_all_numb": 54, "sum_numb": 16, "sum_of_even": 54, "sum_of_five_num": 51, "sum_of_kd": 133, "sum_of_numb": 54, "sum_of_odd": 54, "sum_two_numb": 54, "summar": [16, 64, 113, 126, 135], "summari": [64, 102, 136, 137, 138, 141], "summat": [16, 108], "summer": [25, 54, 132], "summer_r": 132, "sun": [19, 40, 41, 130, 133, 135, 136, 137, 138, 142], "sundai": [40, 41], "sunflora": 123, "sunkern": 123, "sunni": 4, "sunroof": 82, "super": [52, 81, 86, 109, 116, 119, 142], "superclass": 83, "superhead": 142, "supervis": [6, 149, 150], "suppli": [49, 51, 119], "support": [5, 11, 27, 29, 31, 33, 34, 36, 48, 54, 62, 70, 71, 72, 78, 81, 83, 89, 108, 129, 130, 133, 138, 140, 142, 147], "support_word": 48, "suppos": [15, 18, 20, 22, 29, 37, 39, 60, 63, 64, 81, 84, 86, 108, 113, 114, 118, 119, 120, 121, 122, 140], "supress": 116, "suptitl": [133, 137, 142], "sure": [3, 11, 12, 19, 20, 51, 56, 87, 91, 105, 127, 130, 134, 136, 137, 138, 140], "surfac": 54, "surnam": [57, 64, 115, 122], "surround": [15, 69, 71], "surskit": 123, "survei": 129, "surviv": [136, 138], "suryansh": [3, 4], "suspect": 136, "suspend": [45, 46], "suspens": 46, "svd": [13, 110], "sw": 51, "swablu": 123, "swadloon": 123, "swahili": 48, "swalot": 123, "swampert": 123, "swampertmega": 123, "swanna": 123, "swap": [32, 54], "swapcas": 32, "swapfil": 49, "swarm": [126, 136, 139], "swarmplot": [126, 129, 134, 135, 136], "sweden": [33, 51], "sweet": 29, "swellow": 123, "swim": [81, 83], "swinub": 123, "swirlix": 123, "switch": [127, 131, 140], "switzerland": 131, "swoobat": 123, "sx": 32, "sy": [39, 49, 50, 51, 63, 64, 74], "syantax": 33, "sylveon": 123, "symbol": [17, 19, 20, 32, 60, 64, 68, 69, 70, 75, 84], "symmetr": 27, "symmetri": 6, "symmetric_differ": 36, "symmetric_difference_upd": 36, "synaps": 6, "sync": 105, "syntact": [17, 54, 67], "syntax": [7, 9, 15, 17, 18, 19, 32, 33, 34, 35, 36, 49, 51, 54, 59, 64, 68, 73, 74, 78, 81, 82, 83, 88, 92, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 127, 139, 140, 142], "syntaxerror": [32, 50, 57, 68, 70], "syntaxwarn": 75, "synthet": 142, "system": [6, 11, 14, 29, 31, 45, 48, 49, 50, 60, 69, 84, 149], "systemerror": 50, "systemexit": 50, "t": [6, 12, 18, 25, 27, 28, 29, 32, 33, 34, 35, 36, 37, 39, 41, 43, 45, 48, 51, 54, 56, 60, 63, 67, 70, 71, 72, 73, 74, 78, 81, 82, 83, 84, 86, 87, 91, 105, 108, 109, 110, 112, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "t1": [34, 39, 43, 45, 46], "t10": 129, "t2": [34, 39, 43, 46], "t3": [34, 39, 43], "t4": [34, 39], "t5": 39, "t6": 39, "tab": [22, 32, 50, 69, 71, 129], "tab10": 132, "tab10_r": 132, "tab20": 132, "tab20_r": 132, "tab20b": 132, "tab20b_r": 132, "tab20c": 132, "tab20c_r": 132, "taberror": 50, "tabl": [27, 29, 31, 40, 41, 60, 75, 84, 112, 113, 120, 134, 143], "table_nam": 112, "tableau": [129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "tableau_20": [131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "tabul": [33, 35, 84], "tabular": [48, 112, 121, 122], "tackl": 130, "tag": [4, 11, 48], "tail": [6, 112, 123, 124, 140], "taillow": 123, "take": [3, 4, 6, 14, 15, 16, 17, 19, 20, 23, 27, 28, 31, 32, 33, 36, 37, 39, 40, 41, 42, 43, 45, 46, 48, 49, 51, 54, 55, 56, 57, 58, 59, 60, 64, 69, 70, 74, 78, 81, 82, 83, 86, 108, 112, 113, 115, 116, 117, 118, 119, 121, 122, 126, 127, 128, 129, 130, 131, 134, 135, 137, 138, 139, 140, 141, 142, 143], "taken": [48, 139, 140], "talk": [45, 46, 127, 132, 136, 142], "talli": 142, "talonflam": 123, "tamper": [32, 37, 70, 81], "tan": [60, 62], "tangela": 123, "tangent": [60, 62], "tangrowth": 123, "tanh": [60, 62], "tap": 141, "tar": 60, "target": [4, 46, 78, 120, 129], "taser": 126, "task": [6, 11, 17, 27, 28, 33, 35, 36, 42, 45, 46, 51, 54, 58, 60, 65, 67, 74, 75, 78, 84, 129, 139, 140, 149], "tau": 60, "tauro": 123, "taxi": 140, "tchapter": 32, "tchp": 32, "tdatatyp": 32, "te": 19, "tea": 19, "teach": [17, 19, 32, 36, 110], "teacher": [19, 32, 36, 48], "teal": 129, "team": [57, 102, 140, 142], "tech": 150, "technic": [14, 86], "techniqu": [6, 16, 60, 134, 135, 140, 141, 149, 150], "teddiursa": 123, "tell": [23, 24, 29, 48, 51, 67, 74, 107, 128], "temp": [54, 70], "temp_convert": 51, "temperatur": [18, 54], "tempor": 140, "temporari": [83, 137], "temporarili": 127, "ten": [16, 17, 27, 48, 54, 103], "tend": 83, "tendenc": [81, 126, 130, 134, 136, 137, 138], "tensor": 13, "tensordot": 110, "tensorflow": [6, 105, 149], "tentacool": 123, "tentacruel": 123, "tepig": 123, "terabyt": 142, "term": [3, 4, 15, 17, 58, 65, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142], "termin": [14, 15, 27, 28, 29, 50, 51, 67, 105], "terrain": 132, "terrain_r": 132, "terrakion": 123, "territori": 131, "ters": 70, "test": [11, 19, 23, 24, 28, 29, 48, 49, 50, 51, 56, 60, 67, 75, 82, 123, 138, 140], "test1": 60, "test_1": [48, 49], "test_2": [48, 49], "test_express": 28, "test_modul": 60, "test_str": 19, "tester": 19, "testfil": [49, 51], "tex": [12, 87, 91], "text": [5, 7, 8, 19, 24, 32, 48, 54, 64, 75, 88, 89, 90, 92, 93, 112, 131, 133, 137, 138, 140, 142, 146, 147, 148, 149], "text_1": 48, "textcoord": 138, "textiobas": 48, "textiowrapp": 48, "textual": [32, 42], "textwrap": 32, "th": [0, 3, 4, 19, 32], "tha": 19, "thailand": 34, "than": [3, 9, 11, 15, 16, 19, 20, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 37, 39, 40, 46, 52, 58, 59, 60, 62, 70, 71, 72, 74, 75, 76, 78, 82, 83, 84, 86, 105, 107, 108, 112, 113, 115, 119, 121, 122, 127, 129, 132, 134, 136, 137, 138, 139, 140, 142], "thank": [74, 130], "that_particular_class": 138, "that_particular_class_men": 138, "thei": [6, 14, 15, 17, 18, 22, 24, 26, 29, 31, 32, 33, 34, 35, 36, 48, 50, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 72, 74, 75, 76, 78, 81, 82, 86, 88, 92, 106, 108, 112, 117, 121, 126, 127, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142], "theirs": [15, 25], "them": [11, 14, 16, 31, 32, 33, 34, 35, 36, 46, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 62, 70, 74, 75, 76, 81, 82, 83, 84, 95, 109, 112, 114, 126, 127, 129, 131, 132, 134, 135, 137, 140, 142, 143, 150], "theme": [127, 129], "themselv": [19, 149], "theoret": 14, "theori": [15, 136, 139], "therefor": [18, 19, 32, 78, 81], "thermodynam": 18, "theta": [3, 4, 6], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 95, 102, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150], "thick": [127, 137, 138], "thicken": 127, "thin": 137, "thing": [5, 11, 15, 17, 22, 27, 29, 32, 37, 49, 60, 69, 76, 82, 83, 86, 89, 106, 109, 112, 128, 129, 130, 136, 142, 147, 150], "think": [44, 70, 81, 82, 106, 127, 130, 136, 138, 139], "third": [11, 32, 39, 60, 63, 72, 74, 83, 102, 109, 112, 115, 130, 136, 138], "thirti": 32, "this_is_a_long_vari": 68, "thise": 135, "those": [11, 22, 46, 55, 59, 60, 61, 65, 76, 81, 82, 88, 92, 110, 127, 129, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142], "though": [32, 51, 55, 64, 83, 108, 112, 113, 117, 126, 127, 128, 129, 135, 137, 138, 139, 140, 141, 142], "thought": [22, 129, 135, 136, 137, 138], "thousand": 18, "thread": [45, 46, 60], "threat": 126, "threat_level": 126, "threaten": 126, "three": [2, 6, 18, 19, 20, 22, 27, 28, 32, 33, 34, 37, 39, 48, 56, 57, 70, 73, 74, 76, 82, 83, 86, 112, 115, 118, 119, 120, 126, 130, 134, 135, 136, 140, 141, 142, 143], "thresh": [112, 118], "threshold": [0, 6], "thrice": 136, "throh": 123, "through": [15, 27, 28, 29, 31, 37, 51, 57, 58, 67, 84, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 142, 143, 149, 150], "throughout": [69, 128, 130, 134, 141], "throw": [11, 51, 55, 78, 113, 115, 116, 119, 121], "thu": [18, 27, 28, 32, 45, 51, 69, 78, 81, 86, 129, 130, 131, 136, 137, 138, 140, 141, 142, 143], "thumb": [135, 138], "thundurusincarn": 123, "thundurustherian": 123, "thur": [135, 138], "thursdai": 136, "ti": [48, 130], "tick": [127, 132, 133, 139, 141, 142], "ticket": 138, "ticklabel_format": 137, "tickmark": 102, "tidi": [130, 134, 135, 139], "tight": 150, "tightli": 131, "tile": 108, "till": [27, 28, 29, 48, 72, 113, 116, 119, 122, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142], "tim": 126, "timburr": 123, "time": [4, 6, 11, 14, 15, 17, 22, 26, 27, 28, 29, 31, 32, 34, 41, 55, 58, 59, 60, 68, 69, 70, 76, 78, 82, 83, 84, 86, 102, 108, 112, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 149, 150], "time_left_for_newyear": 43, "time_str": 45, "timedelta": 43, "timedelta64": 110, "timepoint": 140, "times3": 16, "times5": 16, "timeseri": 145, "timestamp": [9, 47], "timplay": 11, "ting": 19, "tini": 137, "tip": [19, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142], "tire": 134, "tirtouga": 123, "titan": [126, 128, 136, 140, 142], "titl": [25, 32, 102, 103, 130, 133, 142, 143], "tivat": 19, "tk": 11, "tkinter": 60, "tlc": 140, "tm_hour": 45, "tm_isdst": 45, "tm_mdai": 45, "tm_min": 45, "tm_mon": 45, "tm_sec": 45, "tm_wdai": 45, "tm_ydai": 45, "tm_year": 45, "tmp": 49, "to_csv": [112, 123, 124], "to_dict": 112, "to_excel": [112, 123], "to_fahreheit": 18, "to_fahrenheit": 18, "to_json": 112, "to_sql": 112, "todai": [43, 44, 128, 131, 135, 136, 137, 138, 139, 140, 141], "togekiss": 123, "togepi": 123, "toget": 123, "togeth": [6, 15, 32, 70, 78, 84, 108, 131, 134, 136, 140], "toi": 126, "told": [29, 131], "tolist": [102, 103, 137], "tomato": [51, 54, 75], "ton": [32, 60], "too": [3, 4, 17, 50, 52, 75, 76, 135], "took": 17, "tool": [19, 64, 88, 92, 102, 103, 105, 112, 123, 124, 131, 140, 141, 142, 149, 150], "toolkit": 11, "tooth": 103, "toothpastesalesdata": 103, "top": [5, 70, 89, 105, 107, 108, 112, 127, 129, 130, 131, 136, 137, 138, 140, 142, 147], "topbar": 138, "topic": [32, 57, 103, 124, 128, 129, 132, 134, 136, 137, 138, 140, 141, 142, 150], "toprow": 115, "torchic": 123, "torkoal": 123, "tornadusincarn": 123, "tornadustherian": 123, "torterra": 123, "total": [6, 27, 28, 31, 39, 54, 57, 59, 70, 72, 82, 84, 106, 112, 123, 130, 131, 134, 135, 136, 137, 138, 139, 140, 142], "total_bil": [127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "total_expens": 81, "total_incom": 81, "total_profit": 103, "total_second": 39, "total_stud": 137, "total_women_per_class": 138, "totodil": 123, "touch": [109, 131, 142, 150], "toward": 150, "town": [136, 138], "toxicroak": 123, "toyotadf": 124, "tp": 0, "tpython": 32, "trace": [108, 130, 140], "traceback": [14, 15, 16, 17, 18, 20, 28, 32, 33, 34, 35, 36, 41, 46, 48, 50, 51, 52, 55, 56, 57, 58, 60, 69, 71, 72, 73, 74, 75, 81, 82, 83, 84, 86, 107, 116, 119, 121, 135, 140], "track": [15, 136, 138, 140], "tradit": 95, "trail": [31, 32, 34], "train": [0, 2, 3, 6, 95], "tranform": 32, "tranquil": 123, "transact": 4, "transax": 141, "transcript": 48, "transfer": [15, 27, 28, 29, 149], "transform": [6, 13, 78, 129, 149], "translat": [50, 78, 82, 129], "transluc": 140, "transmit": 6, "transpar": [129, 131, 135], "transpos": [13, 37, 105, 108, 113, 114, 120, 134], "transposed_row": 37, "trapinch": 123, "travel": [6, 74, 138], "travers": [6, 27], "treat": [5, 16, 19, 50, 55, 56, 81, 89, 108, 147], "tree": 48, "treecko": 123, "trelli": [141, 142], "trend": [130, 134, 136, 140], "treven": 123, "tri": [17, 50, 74, 81, 84, 106, 119, 128, 131, 136, 137, 140], "triangl": [27, 75, 83, 141], "triangular": 61, "trick": [105, 107, 128, 135], "tricki": 34, "trigger": 29, "trignometr": 140, "trigonometri": 31, "trip": 140, "trip_dur": 140, "tripl": [32, 54, 64, 69, 71, 72], "triu_indices_from": 141, "tropiu": 123, "trubbish": 123, "truck": [6, 83], "truck_info": 83, "true": [0, 14, 15, 17, 19, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 34, 36, 46, 48, 50, 52, 54, 59, 60, 62, 68, 69, 70, 71, 72, 74, 75, 82, 83, 84, 102, 103, 106, 107, 109, 112, 116, 117, 118, 119, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "true_divid": 108, "trump": 48, "trunc": [60, 62, 110], "truncat": [31, 48, 62, 72, 73, 75, 130], "trustworthi": 140, "truth": 75, "truthvalu": 69, "try": [3, 14, 16, 19, 23, 24, 25, 29, 32, 33, 34, 35, 37, 39, 48, 50, 52, 54, 55, 57, 68, 69, 70, 72, 73, 75, 76, 81, 82, 84, 86, 108, 113, 116, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "tryton": 11, "tsplot": 140, "tsv": 112, "tt": 41, "ttopic": 32, "tue": 40, "tuft": 141, "tukei": 140, "tumor": 4, "tune": [116, 140, 150], "tupl": [9, 11, 14, 15, 16, 17, 19, 20, 32, 36, 37, 38, 45, 48, 54, 57, 60, 69, 71, 73, 74, 75, 82, 83, 105, 106, 109, 113, 114, 124, 129, 131], "tuple1": 72, "tuple_1": 82, "tupleliter": 69, "tuppl": 106, "turn": [14, 31, 48, 51, 75, 78, 84, 134, 136, 137, 140, 141, 142], "turtwig": 123, "tutori": [9, 14, 17, 24, 32, 48, 70, 76, 83, 84, 105, 124, 128, 140], "tweak": [127, 129, 134, 139, 142], "twelv": 19, "twice": 83, "twilight": 129, "two": [5, 11, 14, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 31, 33, 34, 35, 36, 37, 41, 46, 48, 50, 51, 52, 55, 57, 58, 60, 63, 64, 65, 69, 70, 71, 72, 73, 74, 75, 81, 82, 83, 84, 86, 88, 89, 92, 106, 107, 108, 112, 114, 115, 116, 119, 120, 122, 126, 127, 128, 130, 131, 133, 134, 136, 137, 138, 139, 140, 141, 142, 147], "two_power_of_f": 37, "tworld": 67, "txt": [19, 49, 50, 51, 109, 123], "ty": 32, "tympol": 123, "tynamo": 123, "typ": 35, "type": [3, 4, 6, 11, 14, 16, 19, 20, 22, 27, 28, 29, 32, 36, 37, 39, 41, 43, 44, 50, 51, 55, 57, 58, 60, 67, 68, 69, 70, 75, 76, 78, 80, 81, 84, 86, 102, 105, 107, 108, 109, 112, 119, 120, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "type1": 123, "typecast": 73, "typeerror": [20, 32, 33, 35, 36, 51, 57, 60, 72, 73, 84], "typeobject": 69, "typhlos": 123, "typic": [6, 29, 84, 108, 112, 137, 140], "typo": 50, "tyranitar": 123, "tyranitarmega": 123, "tyrantrum": 123, "tyrogu": 123, "tyrunt": 123, "tz_london": [39, 43], "tz_ny": [39, 43], "tzinfo": 39, "tzname": 41, "u": [14, 16, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 48, 49, 50, 51, 54, 57, 60, 65, 67, 71, 74, 76, 78, 81, 82, 83, 84, 86, 102, 103, 108, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "u00dc": 71, "u00dcnic": 71, "u00f6": 71, "u00f6d": 71, "ubgxofi7uxswaykn": 60, "ui": 11, "uk": 39, "ukool": 32, "ular": 19, "ultim": 139, "umbreon": 123, "umpteen": 135, "unari": [69, 75], "unarm": 126, "unauthor": 81, "unavail": 142, "unawar": 140, "unbound": 123, "unboundlocalerror": [50, 55, 56], "uncertainti": 140, "unchang": [36, 71], "unchart": 131, "unclear": 112, "uncom": 36, "uncommon": 136, "und": 19, "undefin": 82, "under": [27, 29, 31, 39, 50, 62, 65, 72, 102, 122, 136, 137, 140, 141], "underli": [48, 62, 76, 78, 105, 112, 119, 129, 131, 134, 135, 137, 138, 139, 140, 142, 143], "undermin": 141, "underscor": [18, 60, 68, 70, 81, 82, 83, 84], "understand": [5, 9, 10, 13, 16, 17, 19, 22, 27, 28, 29, 31, 37, 64, 65, 69, 76, 78, 81, 86, 89, 95, 102, 103, 112, 113, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 147, 149, 150], "understood": 78, "undetermin": 126, "undoubtedli": 127, "unexpect": [29, 51], "unfamiliar": 129, "unfez": 123, "unhandl": 50, "unhash": 36, "unicod": [19, 32, 50, 69, 70, 72], "unicodedecodeerror": 50, "unicodeencodeerror": 50, "unicodeerror": 50, "unicodetranslateerror": 50, "unifi": 71, "uniform": [32, 60, 61, 106, 109, 110, 140, 141], "uniform_data": 143, "unind": [23, 69], "unint": 103, "union": [27, 72], "uniqu": [27, 35, 36, 54, 60, 61, 72, 76, 86, 112, 114, 121, 140, 144], "unit": [48, 102, 103, 126, 130, 131, 137, 138, 139, 140, 142], "univari": [3, 133, 135, 136, 139, 141, 142], "univers": [6, 74, 137, 138], "university_nam": 137, "unix": [39, 44, 45], "unknowingli": 82, "unknown": [3, 25, 50, 116, 119, 121, 126, 136, 140], "unknowncol": 119, "unless": [19, 26, 54, 69, 127, 130, 140], "unlik": [15, 33, 34, 48, 82, 106, 108, 112, 115, 130, 140], "unlimit": 51, "unnam": [102, 124, 139], "unnecessari": 18, "unobserv": 139, "unord": [27, 35, 36, 72, 112], "unorderd": 36, "unown": 123, "unpack": [32, 33, 34], "unpackbit": 110, "unpacking_person_info": 51, "unpickl": 64, "unravel_index": 110, "unreferenc": [48, 82], "unruffl": 137, "unsuccess": 19, "unsupervis": [149, 150], "unsupport": [50, 73, 84], "unsur": [19, 20], "until": [3, 14, 27, 28, 29, 48, 51, 52, 57, 58, 74, 108, 121], "unusu": [16, 31], "uolp": 32, "up": [11, 14, 18, 22, 27, 28, 29, 31, 48, 51, 54, 55, 57, 58, 65, 67, 69, 72, 73, 74, 78, 105, 112, 123, 128, 129, 130, 131, 133, 136, 138, 141, 142, 150], "upcom": [126, 128, 134, 142], "updat": [3, 4, 18, 28, 33, 36, 56, 112, 115, 116, 117, 118, 119, 121, 122, 126, 128, 132, 135, 141], "upfront": 78, "upon": [14, 29, 52, 83, 84, 86, 126, 135, 140, 141, 142, 150], "upper": [17, 19, 32, 74, 103, 119, 128, 136, 137, 140, 141], "uppercas": [17, 19, 32, 33, 60, 68, 70, 75], "uppercase_decor": 17, "uptil": 72, "upto": [135, 140, 142], "upward": 139, "urg": 132, "url": [112, 133], "ursar": 123, "us": [3, 4, 5, 6, 9, 14, 17, 20, 22, 23, 24, 25, 26, 29, 32, 35, 36, 37, 41, 42, 44, 45, 46, 48, 49, 50, 52, 54, 55, 57, 58, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 82, 83, 84, 89, 102, 106, 107, 108, 109, 112, 117, 118, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149], "usa": [17, 102], "usabl": [18, 64], "usag": [10, 18, 59, 78, 112, 113, 129, 130, 137, 142], "usd": [102, 137, 142], "useabl": 11, "useless": 6, "user": [9, 11, 14, 17, 22, 24, 25, 27, 28, 31, 35, 37, 49, 50, 51, 53, 54, 57, 60, 66, 69, 70, 73, 75, 84, 110, 116, 119, 124], "user_check": 25, "user_id_gen_by_us": 60, "userwarn": 126, "usual": [17, 28, 29, 37, 51, 54, 63, 70, 72, 78, 83, 106, 112, 118, 130, 136], "utc": [39, 40, 41, 44, 45], "utf": [48, 51], "util": [6, 37, 119, 138, 142], "utmost": [129, 136, 140, 141], "uxi": 123, "v": [6, 11, 13, 27, 32, 35, 48, 51, 70, 80, 108, 130, 132, 134, 135, 139, 145], "v0": 127, "v1": [84, 109, 142], "v2": [84, 109, 142], "v3": 11, "v_1": 142, "v_2": 142, "va": [128, 138], "vaccin": 27, "vagu": [6, 130], "vairabl": 74, "val": [18, 27, 29], "valid": [4, 19, 32, 34, 54, 68, 69, 76, 86, 112, 129], "valu": [0, 3, 4, 6, 11, 13, 14, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 31, 32, 36, 37, 39, 45, 48, 50, 51, 52, 55, 56, 57, 59, 60, 61, 62, 64, 67, 69, 71, 72, 73, 75, 76, 82, 102, 105, 106, 107, 108, 109, 112, 114, 116, 117, 119, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143], "value1": 33, "value2": 33, "value3": 33, "value_count": [102, 112, 124], "value_var": 142, "valueerror": [18, 51, 73, 74, 86, 107, 113, 121, 134], "valuen": 33, "valuetoolargeerror": 52, "valuetoosmallerror": 52, "vanillish": 123, "vanillit": 123, "vanillux": 123, "vaporeon": 123, "var": [51, 57, 81, 102, 132, 141], "var_1": 68, "var_nam": [134, 135, 136], "var_scope_test": 55, "vari": [51, 68, 81, 112, 127, 129, 134, 142], "variabel": 143, "variabl": [0, 4, 6, 9, 11, 15, 18, 19, 20, 23, 24, 25, 27, 28, 29, 31, 32, 33, 37, 39, 40, 42, 44, 50, 51, 54, 59, 60, 63, 64, 68, 71, 72, 73, 74, 75, 80, 82, 83, 86, 116, 118, 119, 121, 122, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142], "variable1": 68, "varianc": [0, 2, 81, 106, 109, 130], "variat": [0, 7, 24, 25, 27, 88, 92, 129, 131, 134, 135, 136, 137, 138, 139, 140, 142], "varieti": [11, 32, 134, 138, 141, 142], "variou": [1, 11, 17, 19, 27, 28, 31, 32, 33, 34, 35, 37, 48, 60, 64, 71, 72, 75, 76, 105, 112, 117, 120, 127, 128, 131, 132, 138, 141, 142, 143, 150], "variti": 134, "vartupl": 57, "vast": [105, 112, 115], "ve": [19, 51, 112, 126, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142], "vector": [2, 3, 13, 84, 108, 109, 134, 138, 140], "veg": 51, "veget": [34, 51], "vehicl": [83, 112, 140], "vehicle_info": 83, "vendor": 140, "vendor_id": 140, "veniped": 123, "venomoth": 123, "venonat": 123, "venusaur": 123, "venusaurmega": 123, "venv": 11, "verbos": 70, "verdana": 138, "veri": [0, 3, 4, 9, 11, 15, 22, 28, 32, 33, 35, 36, 37, 48, 59, 67, 69, 72, 78, 86, 95, 105, 108, 109, 112, 113, 115, 116, 118, 126, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 142], "veriabl": 55, "verifi": 83, "verify_integr": 121, "versatil": [32, 33, 141], "versicolor": [126, 134], "version": [11, 46, 48, 59, 60, 61, 75, 108, 120, 128, 129, 133, 141], "vert": 135, "vertiac": 137, "vertic": [19, 32, 86, 108, 109, 134, 135, 136, 137, 138, 139, 142], "vespiquen": 123, "via": [18, 29, 83, 140], "vibrava": 123, "victini": 123, "victreebel": 123, "video": [11, 142, 150], "view": [50, 83, 107, 110, 115, 126, 128, 130, 138, 139, 143], "viewer": 129, "vigoroth": 123, "vijai": 82, "vileplum": 123, "violin": [129, 136, 138, 139, 140, 145], "violinplot": [134, 135, 137], "virginica": [126, 134], "viridi": [129, 132, 138], "viridian": 129, "viridis_r": 132, "virizion": 123, "virtual": 136, "virtualenv": 11, "visibl": [55, 60, 74, 82, 130, 137, 140, 141, 142], "visibli": 128, "visit": [9, 14, 18, 19, 32, 39, 45, 46, 50, 52, 54, 55, 61, 62, 64, 69, 83, 84, 112, 130], "visual": [32, 33, 83, 95, 102, 103, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 149, 150], "visuali": 130, "visualizaion": 142, "visualstudio": 11, "vividli": 140, "vivillon": 123, "vlag": 132, "vlag_r": 132, "vmax": [135, 143], "vmin": [135, 143], "volatil": 48, "volbeat": 123, "volcanion": 123, "volcarona": 123, "volkswagen": [112, 113, 124], "voltorb": 123, "volum": 49, "volvo": [112, 113, 124], "vonmis": 61, "vonmisesvari": 61, "vowel": [33, 34, 70, 71], "vpython": 11, "vscode": 11, "vstack": 105, "vullabi": 123, "vulpix": 123, "vv": 108, "w": [27, 28, 29, 32, 33, 34, 36, 40, 41, 48, 51, 108, 126, 129, 141, 142], "wa": [14, 15, 16, 17, 18, 19, 24, 27, 29, 32, 37, 48, 50, 51, 55, 60, 67, 70, 74, 83, 84, 86, 107, 108, 113, 126, 127, 128, 130, 136, 138, 140, 141, 142], "wage": 140, "wagon": [112, 113, 124], "wai": [9, 11, 14, 15, 17, 18, 22, 26, 27, 28, 31, 32, 34, 35, 36, 37, 39, 42, 43, 48, 51, 52, 57, 60, 63, 65, 69, 72, 74, 75, 76, 84, 86, 102, 106, 107, 112, 113, 114, 115, 116, 120, 126, 127, 128, 129, 130, 131, 132, 134, 136, 137, 138, 140, 141, 143, 150], "wailmer": 123, "wailord": 123, "wait": [24, 46], "walk": 139, "walrein": 123, "want": [3, 6, 12, 15, 17, 18, 19, 22, 24, 26, 27, 28, 29, 31, 32, 33, 48, 49, 51, 55, 60, 63, 67, 69, 70, 74, 76, 81, 82, 83, 84, 86, 87, 91, 102, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 119, 120, 121, 122, 126, 127, 128, 129, 130, 132, 135, 136, 137, 140, 141, 142, 150], "warm": [83, 129], "warn": [78, 108, 120, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "wartortl": 123, "wash": 103, "washington": 126, "wast": 150, "wat": 132, "watch": [27, 150], "watchog": 123, "water": 123, "watev": 32, "watson": 27, "wave": [127, 142], "wb": 48, "we": [0, 3, 4, 6, 9, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 81, 82, 83, 84, 86, 95, 102, 103, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150], "weak": [50, 64], "weapon": [126, 140], "wear": 126, "weather": 4, "weavil": 123, "web": [9, 11, 78, 129], "web_tech": 32, "websit": [11, 70, 129], "weedl": 123, "week": [39, 40, 41, 43, 54, 135, 137, 138], "weekdai": [40, 41], "weekend": [136, 138], "weekli": [75, 102], "weep": 83, "weepinbel": 123, "weez": 123, "weibul": 61, "weibullvari": 61, "weight": [6, 54, 102, 116, 128, 132, 138, 140], "weight_of_object": 54, "weird": 112, "weirder": 17, "welcom": [17, 32, 48, 54, 60, 67, 81, 130, 135, 136, 137, 139, 140, 141, 142], "well": [3, 4, 11, 12, 16, 22, 24, 25, 27, 28, 29, 31, 32, 43, 49, 51, 59, 63, 69, 70, 75, 76, 81, 82, 83, 84, 87, 91, 112, 114, 115, 116, 119, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142], "went": 51, "were": [19, 20, 29, 48, 50, 51, 57, 74, 75, 83, 86, 108, 126, 134, 139], "what": [3, 4, 6, 9, 15, 16, 17, 18, 19, 20, 23, 29, 31, 37, 44, 51, 55, 61, 64, 68, 69, 75, 82, 84, 103, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 149], "whatev": [67, 82, 84, 130], "whatsoev": 142, "wheel": [112, 113, 123, 124, 140], "when": [3, 4, 5, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 32, 34, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 62, 64, 65, 68, 69, 70, 71, 72, 73, 74, 76, 78, 81, 82, 83, 84, 86, 88, 89, 92, 102, 103, 106, 108, 109, 112, 113, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 147], "whenev": [18, 28, 50, 64, 82, 86, 116, 119, 121, 122, 137, 138], "where": [0, 2, 4, 6, 11, 14, 16, 17, 18, 26, 28, 29, 31, 32, 33, 34, 37, 45, 48, 50, 51, 54, 55, 56, 60, 72, 73, 74, 75, 76, 78, 82, 83, 86, 107, 108, 110, 112, 114, 115, 116, 117, 119, 120, 121, 122, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "wherea": [19, 27, 31, 34, 39, 40, 55, 78, 81, 86, 88, 92, 113, 120, 121, 122, 127, 131, 140, 141], "whether": [4, 7, 22, 23, 24, 29, 48, 51, 52, 56, 64, 75, 83, 88, 92, 107, 112, 116, 117, 118, 119, 121, 122, 130, 131, 132, 139, 140], "whi": [135, 136], "which": [2, 3, 4, 5, 6, 10, 11, 14, 15, 16, 17, 18, 19, 20, 25, 27, 29, 31, 32, 34, 35, 36, 37, 42, 44, 46, 48, 49, 51, 52, 54, 55, 59, 60, 65, 69, 70, 71, 72, 73, 74, 76, 78, 81, 82, 83, 84, 86, 89, 102, 103, 105, 106, 107, 108, 109, 112, 113, 114, 116, 117, 119, 120, 121, 122, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 147, 150], "whichev": [131, 137], "while": [9, 14, 15, 18, 20, 22, 30, 31, 32, 35, 36, 46, 48, 50, 52, 54, 57, 59, 60, 63, 68, 69, 73, 75, 76, 78, 81, 82, 83, 86, 107, 113, 114, 118, 120, 121, 126, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 141, 142], "whilst": 141, "whimsicott": 123, "whirliped": 123, "whiscash": 123, "whisker": [6, 135, 136, 138, 140], "whiskerprop": 134, "whismur": 123, "white": [6, 22, 29, 32, 126, 127, 137, 138], "whitegrid": [127, 129, 130, 131, 132, 135, 137, 138, 140, 142], "whitespac": [27, 32, 69], "who": [24, 32, 110, 126, 136, 138, 140, 150], "whoisthi": [81, 83], "whole": [11, 19, 29, 32, 46, 54, 60, 75, 112, 113, 115], "whoop": 17, "whose": [0, 55, 59, 70, 82, 116, 119], "why": [15, 17, 18, 24, 31, 32, 50, 51, 64, 69, 108, 126, 134, 135, 136, 138], "wichita": 126, "wickham": 130, "wide": [11, 74, 109, 112, 119, 134, 135, 138], "wide_to_long": 134, "widen": 142, "wider": [137, 140], "widespread": 113, "width": [32, 75, 81, 103, 126, 131, 132, 134, 136, 137, 138, 140, 142], "width_ratio": 142, "wigglytuff": 123, "wiki": 133, "wikipedia": [0, 2, 3, 4, 6, 133], "wilder": 140, "win": 142, "win32": [11, 60], "window": [11, 48, 49, 67, 82, 126, 129, 140], "winerror": [48, 60], "wingul": 123, "winre_backup_partit": 49, "winreag": 49, "winter": [25, 54, 132], "winter_r": [132, 141], "wirh": 123, "wise": [103, 105, 112, 120, 123, 129, 132, 140], "wish": [18, 19, 29, 32, 54, 74, 129, 131, 136, 138, 140, 141, 142], "wistia": 132, "wistia_r": 132, "within": [2, 11, 14, 19, 28, 29, 34, 48, 49, 54, 56, 63, 72, 81, 83, 109, 112, 126, 127, 128, 132, 134, 135, 136, 137, 138, 140, 142, 144], "without": [6, 9, 14, 17, 23, 29, 32, 34, 36, 37, 40, 41, 48, 51, 56, 57, 59, 60, 63, 75, 76, 78, 81, 82, 83, 84, 108, 109, 116, 118, 121, 123, 126, 127, 128, 129, 134, 136, 137, 138, 140, 141, 142, 149], "wobbuffet": 123, "woman": [19, 136, 138], "won": [54, 83, 109, 112, 126, 127, 130, 134, 140, 142], "wonder": [39, 54, 140], "wont": 82, "woo": 81, "woobat": 123, "wooper": 123, "wor": 32, "word": [4, 6, 27, 29, 32, 36, 37, 48, 60, 68, 70, 75, 81, 82, 83, 130, 131, 138, 141], "work": [3, 4, 6, 11, 12, 15, 16, 17, 19, 20, 27, 28, 29, 31, 33, 35, 37, 39, 48, 49, 51, 55, 58, 60, 65, 72, 74, 75, 78, 81, 82, 83, 84, 87, 91, 105, 107, 108, 112, 115, 119, 126, 127, 129, 130, 131, 132, 135, 137, 140, 141, 142, 150], "workabl": 150, "workbook": 140, "workflow": 142, "workload": 65, "workplac": 132, "works_for_al": 17, "world": [3, 9, 10, 11, 24, 27, 32, 50, 54, 58, 60, 64, 70, 72, 75, 76, 80, 81, 82, 112, 127, 130, 135, 136, 140, 149], "world66": 32, "wormadampl": 123, "wormadamsandi": 123, "wormadamtrash": 123, "worri": [70, 133, 142], "worst": 0, "worth": [134, 135, 139], "would": [5, 6, 10, 11, 14, 16, 17, 18, 20, 22, 27, 29, 37, 48, 49, 50, 51, 57, 58, 60, 63, 65, 68, 69, 70, 74, 82, 83, 86, 89, 95, 126, 128, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 150], "wouldn": [130, 138, 141], "wrangl": [125, 132, 140], "wrap": [57, 81, 119], "wrapper": [17, 119, 130, 135, 141], "wrapper_accepting_paramet": 17, "writ": 60, "writabl": 48, "write": [4, 5, 7, 9, 11, 19, 25, 27, 28, 29, 32, 34, 37, 50, 54, 55, 56, 60, 64, 65, 69, 70, 71, 72, 74, 75, 78, 81, 83, 86, 88, 89, 92, 106, 112, 127, 128, 137, 146, 147, 148], "writeabl": 110, "writelin": 48, "written": [5, 11, 23, 31, 32, 37, 48, 51, 54, 60, 64, 65, 67, 68, 70, 71, 72, 78, 88, 89, 92, 147], "wrong": [24, 25, 51, 52], "wrote": [48, 67, 69], "wt": 134, "wtxmut": 134, "wurmpl": 123, "www": 11, "wxwidget": 11, "wynaut": 123, "x": [0, 2, 3, 4, 11, 15, 16, 17, 19, 20, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 37, 40, 41, 48, 54, 55, 56, 57, 59, 60, 62, 64, 69, 70, 71, 72, 74, 75, 82, 83, 84, 86, 102, 103, 105, 106, 107, 108, 109, 112, 113, 119, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "x1": [55, 75, 131], "x11": 129, "x2": [75, 102, 131], "x3": 75, "x45": 32, "x48": 32, "x58": 32, "x61": 32, "x86": 49, "x_axi": 133, "x_bin": 130, "x_ci": 130, "x_data": 134, "x_estim": 130, "x_jitter": 130, "x_max": 133, "x_med": 135, "x_min": 133, "x_partial": 130, "x_sum": 28, "x_var": [132, 141], "xatu": 123, "xavier": 137, "xaxi": 138, "xernea": 123, "xhh": 32, "xkcd": 129, "xkcd_palett": 129, "xkcd_rgb": [129, 135], "xl": 48, "xlabel": [102, 103, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140], "xlim": [128, 142], "xlist": 137, "xlrd": 48, "xlsx": 123, "xmax": 134, "xmin": 134, "xml": 11, "xml_exampl": 48, "xor": [75, 84], "xtick": [102, 103, 138], "xticklabel": 142, "xy": [138, 141], "xycoord": [128, 141], "xytext": 138, "xyz": [27, 34, 49, 51, 74], "xyzvalu": 74, "xz": 19, "y": [3, 4, 15, 19, 20, 25, 26, 27, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 54, 55, 57, 59, 60, 62, 70, 71, 72, 74, 75, 82, 83, 84, 86, 102, 103, 105, 106, 108, 109, 112, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "y1": [75, 131], "y2": [75, 131], "y3": 75, "y_data": 134, "y_jitter": 130, "y_med": 135, "y_partial": 130, "y_var": [132, 141], "yamask": 123, "yanma": 123, "yanmega": 123, "yaxi": 138, "ycarc5yrrupyg00": 60, "yd7efwnqkns7qxat": 60, "ye": [15, 17, 29, 35, 50, 113, 116, 119, 130, 136, 138, 141, 142], "year": [24, 27, 32, 40, 41, 42, 43, 44, 45, 51, 64, 75, 77, 81, 86, 102, 138, 142, 143], "year2021": 70, "year_2021": 70, "year_born": 51, "yellow": 140, "yesmail": 20, "yet": [11, 29, 138], "yield": [14, 15, 68, 107, 108, 127], "yj": [31, 72], "ylabel": [102, 103, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 140], "ylgn": 132, "ylgn_r": 132, "ylgnbu": 132, "ylgnbu_r": 132, "ylim": [128, 133, 141, 142], "ylist": 137, "ylorbr": 132, "ylorbr_r": 132, "ylorrd": 132, "ylorrd_r": 132, "ymax": 134, "ymin": 134, "yo": [19, 128], "you": [2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 27, 28, 29, 31, 32, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 82, 83, 84, 86, 87, 88, 89, 91, 92, 95, 103, 105, 106, 107, 108, 109, 112, 113, 114, 116, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 150], "your": [5, 7, 10, 12, 14, 16, 19, 22, 23, 24, 29, 32, 33, 34, 43, 48, 49, 51, 52, 54, 60, 62, 63, 67, 68, 69, 70, 74, 75, 78, 81, 82, 87, 88, 89, 91, 92, 95, 102, 105, 108, 112, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 147, 150], "your_ag": 24, "yourself": [37, 39, 54, 70, 74, 81, 140], "ytho": 32, "ython": 19, "ytick": [102, 103, 133, 141], "yveltal": 123, "yy": [39, 42], "yyyi": [39, 41], "z": [6, 20, 27, 32, 33, 34, 40, 41, 57, 68, 70, 75, 83, 106, 112, 123, 141], "z_score": 144, "za": 32, "zangoos": 123, "zapdo": 123, "zebstrika": 123, "zekrom": 123, "zen": [76, 86], "zero": [6, 14, 17, 18, 23, 24, 25, 26, 28, 29, 31, 32, 37, 40, 41, 50, 51, 71, 73, 75, 82, 86, 105, 106, 108, 109, 116, 119, 123, 138, 141], "zerodivisionerror": [17, 50, 51], "zfill": 32, "zigzagoon": 123, "zip": [27, 60, 72, 106, 114, 120, 135, 138, 141, 144], "zipcod": [25, 27], "zone": [40, 41, 43], "zoroark": 123, "zorua": 123, "zubat": 123, "zurich": 116, "zweilou": 123, "zxoyh": 60, "zygarde50": 123, "\u00f6": 71, "\u00fc": 71, "\u00fcnic\u00f6d": 71, "\u03c0": 54}, "titles": ["Anomaly Detection Using Gaussian Distribution", "Concepts at glance", "K-Means Algorithm", "Linear Regression", "Logistic Regression", "Notebooks with MyST Markdown", "Neural Network", "Markdown Files", "Here\u2019s my sample title", "Learn Python Programming", "Mathematics for Machine Learning", "Getting Started with Python", "Content with notebooks", "Linear Algebra", "Python Iterators", "Python Python Generators", "Python Closures", "Python Decorators", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator", "Python RegEx", "Python <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code></strong>", "Python Advanced Topics", "Python Flow-Control (Decision-Making) Statements", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-else</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-elif-else</span></code> statement", "Python Nested <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Loops in Python", "Loops in Python", "Control Statements in Python", "Python Flow Control", "Python Numbers, Type Conversion and Mathematics", "Python Strings", "Python List", "Python Tuple", "Python Dictionary", "Python Sets", "Python List Comprehension", "Python Data Types", "Python datetime", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strftime()</span></code>", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strptime()</span></code>", "How to get current date and time in Python?", "Python Get Current time", "Python timestamp to datetime and vice-versa", "Python time Module", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">sleep()</span></code>", "Python Date &amp; Time Module", "Python File I/O", "Python Directory and Files Management", "Python Errors and Built-in Exceptions", "Python Exceptions Handling Using <code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">except</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">finally</span></code> statement", "Python Custom Exceptions", "Python Files", "Python Functions", "Python Global, Local and Nonlocal variables", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code> Keyword", "Function Argument and Parameter", "Python Recursion", "Python Anonymous/<strong><code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span></code></strong> Function", "Python Modules", "Python Random Module", "Python Mathematical Functions", "Python Package", "Python Docstrings", "Python User-defined Functions", "Python Functions", "Python Hello, World", "Python Keywords and Identifiers", "Python Statement, Indentation and Comments", "Python Variables and Constants", "Python Literals", "Python Data Types", "Python Type Conversion and Type Casting", "Python Input, Output and Import", "Python Operators", "Python Namespace and Scope", "Data structures and algorithms", "Differences Between Interpreter and Compiler", "&lt;no title&gt;", "Python Introduction", "Python OOPs Concepts", "Python  Classes and Objects", "Python Inheritance", "Python Operator Overloading", "Python Object Class", "self in Python, Demystified", "Content with notebooks", "Markdown Files", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "Content with notebooks", "Markdown Files", "Here\u2019s my sample title", "Introduction to HuggingFace", "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80", "Table of Contents", "Langchain modules", "LangGraphs", "LangServe", "LangSmith", "Langchain expression language", "Matplotlib", "Python Matplotlib", "Python Matplotlib", "Python NumPy", "Python NumPy Array:", "Array indexing", "Array math", "Arrays reorganizing", "Python NumPy Exercises", "Python Numpy Module", "Python Pandas", "Create Pandas DataFrame from Python Dictionary", "Create Pandas DataFrame from Python List", "Pandas DataFrame head, tail, at, iat", "Drop columns in pandas DataFrame", "Drop duplicates in pandas DataFrame", "Drop columns with NA in pandas DataFrame", "Rename columns in Pandas DataFrame", "Convert Pandas DataFrame to Python dictionary", "Set index in pandas DataFrame", "Reset index in pandas DataFrame", "Python Pandas", "Python Pandas", "Python Pandas Module", "Loading Datasets in Seaborn", "Controlling Aesthetics of Seaborn Plots", "Matplotlib vs. Seaborn Plotting Code", "Seaborn Color Palettes", "LM Plot and Reg Plot", "Scatter Plot and Joint Plot", "Additional Regression Plots", "What is Distribution Plots?", "Seaborn: Categorical Data Plots", "Seaborn: Strip Plot", "Seaborn: Box Plot", "Seaborn: Violin Plot", "Bar Plot, Point Plot and Count plot", "Factor Plot", "Time Series &amp; LV Plot", "PairGrid", "FacetGrid", "What is heat map?", "What is cluster map?", "Python Seaborn", "Here\u2019s my sample title", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "AI/ML Learning Path", "Welcome to my technical diary \ud83e\udd2f"], "titleterms": {"": [8, 19, 33, 35, 39, 40, 42, 67, 90, 93, 110, 124, 133, 146, 148], "0": [19, 110, 122], "1": [15, 17, 19, 25, 26, 27, 29, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 48, 50, 51, 54, 60, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 96, 102, 103, 110, 116, 119, 122, 124, 133, 135, 138, 141], "10": [19, 39, 103, 110, 124], "100": 110, "100th": 110, "10x10": 110, "10x3": 110, "11": [19, 39, 110], "12": [39, 110], "13": [39, 110], "14": [39, 110], "15": [39, 110], "16": [39, 110], "16x16": 110, "17": 110, "18": 110, "19": 110, "1d": [107, 110], "2": [15, 17, 19, 25, 26, 27, 29, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 46, 48, 50, 54, 60, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 96, 102, 103, 110, 124, 133, 138], "20": 110, "2016": 110, "21": 110, "22": 110, "23": 110, "24": 110, "25": 110, "26": 110, "27": 110, "28": 110, "29": 110, "2d": [107, 110], "2x2x2": 110, "3": [15, 17, 19, 25, 27, 29, 32, 33, 34, 36, 39, 40, 42, 43, 46, 48, 50, 54, 60, 64, 69, 70, 71, 72, 74, 75, 96, 102, 103, 110, 124, 133, 138], "30": 110, "31": 110, "32": 110, "33": 110, "34": 110, "35": 110, "36": 110, "37": 110, "38": 110, "39": 110, "3x3": 110, "3x4": 110, "4": [15, 19, 39, 43, 46, 48, 50, 64, 69, 72, 75, 103, 110, 124, 133], "40": 110, "41": 110, "42": 110, "43": 110, "44": 110, "45": 110, "46": 110, "47": 110, "48": 110, "49": 110, "4x4": 110, "5": [19, 39, 43, 50, 64, 72, 75, 103, 110, 124, 133], "50": 110, "51": 110, "52": 110, "53": 110, "54": 110, "55": 110, "56": 110, "57": 110, "58": 110, "59": 110, "5x2": 110, "6": [19, 39, 43, 50, 72, 75, 103, 110, 124], "60": 110, "61": 110, "62": 110, "63": 110, "64": 110, "65": 110, "66": 110, "67": 110, "68": 110, "69": 110, "6x3": 110, "6x6": 110, "7": [19, 39, 50, 103, 110, 124], "70": 110, "71": 110, "72": 110, "73": 110, "74": 110, "75": 110, "76": 110, "77": 110, "78": 110, "79": 110, "8": [19, 39, 50, 103, 110, 124], "80": 110, "81": 110, "82": 110, "83": 110, "84": 110, "85": 110, "86": 110, "87": 110, "88": 110, "89": 110, "8x8": 110, "9": [19, 39, 50, 103, 110, 124], "90": 110, "91": 110, "92": 110, "93": 110, "94": 110, "95": 110, "96": 110, "97": 110, "98": 110, "99": 110, "9_": 19, "9x9": 110, "A": [19, 110], "Be": [86, 107], "By": 19, "For": 37, "If": [33, 35], "In": [11, 33, 60, 82], "No": 51, "Of": 83, "One": [4, 19, 24], "The": [2, 18, 23, 24, 32, 33, 34, 35, 48, 51, 60, 113, 116, 117, 118, 119, 120, 121, 122], "These": 133, "To": [86, 112], "_": 19, "__doc__": 64, "__init__": 86, "__new__": 86, "about": 9, "accept": 74, "access": [27, 32, 33, 34, 35, 74, 82], "accumul": 110, "across": 56, "ad": [35, 105, 119], "add": [5, 33, 35, 89, 110, 147], "addit": 132, "advanc": [9, 21, 32, 109, 149], "advantag": [34, 58, 60, 65], "aesthet": 127, "aggreg": 123, "ai": 149, "algebra": 13, "algorithm": [0, 2, 6, 77], "align": 74, "all": [4, 32, 33, 35, 60, 103, 110, 116, 117, 118, 119, 124], "allow": 133, "alphabet": 19, "alphanumer": 19, "alreadi": 35, "also": [19, 106], "altern": 19, "amount": 123, "an": [5, 14, 19, 33, 35, 36, 51, 82, 89, 110, 147], "anatomi": [136, 137], "ani": [19, 33, 35, 54, 110], "anomali": 0, "anonym": 59, "anoth": 57, "anyth": 35, "appart": 32, "appear": 33, "append": 33, "appli": 112, "applic": 11, "appropri": 40, "ar": [19, 33, 35, 36, 59, 60, 63, 65, 110, 113, 118, 133], "arang": 109, "arbitrari": [57, 110], "area": [11, 110], "arg": 20, "argmax": 106, "argmin": 106, "argument": [33, 51, 54, 57, 74], "arithmat": 75, "arithmet": 75, "around": 110, "arrai": [105, 106, 107, 108, 109, 110], "asarrai": 109, "ascend": [33, 34, 35], "asctim": 45, "assign": [70, 75], "attribut": [48, 64, 82, 106, 110, 112], "attributeerror": 50, "audienc": 150, "avail": 35, "averag": [110, 124], "avoid": 86, "awai": 110, "axi": [110, 116, 119, 133], "b": [19, 27, 28, 110], "back": 17, "background": 134, "backpropag": 6, "backslash": 19, "backward": 27, "bar": [102, 103, 138], "base": 110, "basic": [32, 57, 102, 105, 106], "batch": [3, 4], "bath": 103, "becom": 110, "befor": 19, "begin": 19, "beginn": [1, 149], "below": 110, "better": 36, "between": [15, 39, 43, 78, 110], "binari": 110, "bincount": 110, "bit": [36, 110], "bitwis": 75, "blank": 67, "block": [12, 87, 91, 110], "boolean": [54, 71, 75, 107, 109, 110], "bootstrap": 110, "border": 110, "both": [74, 78, 110], "bottom": 115, "box": [102, 135, 136], "boxplot": 138, "brace": 19, "bracket": 19, "break": [27, 28, 29, 32, 67], "breath": 11, "broadcast": [108, 109], "build": [14, 110, 129], "built": [17, 32, 33, 34, 35, 36, 50, 60, 82], "byte": 110, "c": [27, 28, 110], "calcul": [11, 103], "call": 54, "can": [37, 86, 110], "car": 124, "care": [107, 110], "caret": 19, "cart": 19, "cartesian": 110, "case": 150, "cast": 73, "catch": [29, 51], "categor": [134, 135], "cauchi": 110, "cell": [5, 89, 147], "center": 110, "chain": 17, "chang": [32, 33, 34, 35, 48, 49, 70, 110, 113, 114, 122, 123], "charact": [19, 32, 71], "chart": [102, 103], "chdir": 49, "check": [11, 105, 110], "checkerboard": 110, "choic": 11, "cij": 110, "class": [4, 6, 9, 17, 18, 19, 24, 25, 27, 32, 33, 34, 35, 36, 37, 39, 44, 45, 48, 50, 51, 52, 54, 60, 64, 70, 75, 81, 82, 83, 85, 110], "classif": [4, 6], "claus": 51, "clean": [112, 124], "clear": [33, 35], "clock": 46, "close": 48, "closest": 110, "closur": [16, 17], "cluster": 144, "code": [11, 12, 40, 41, 67, 78, 87, 91, 128], "collect": 71, "color": [110, 129, 143], "column": [110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124], "combin": [37, 105, 110, 112], "comma": 70, "command": [67, 110], "comment": [64, 69], "common": [32, 103, 110], "compani": 124, "compar": [110, 116], "comparis": [60, 78], "comparison": [75, 84, 105], "compil": [33, 78], "complier": 34, "compon": 67, "compos": 110, "comprehens": [33, 35, 37], "comput": [6, 110], "concaten": [32, 124], "concept": [1, 11, 81, 150], "conclus": 96, "condit": [22, 37, 112, 123, 124], "confid": 110, "configur": 110, "consecut": 110, "consid": [19, 110], "constant": [60, 70], "construct": 110, "constructor": [81, 82, 86, 112, 113, 114], "consum": 110, "contain": [19, 110], "content": [12, 87, 91, 96], "contigu": 110, "continu": [27, 28, 29], "control": [9, 22, 27, 28, 29, 30, 127], "convent": 70, "convers": [31, 71, 73, 112], "convert": [34, 110, 120], "coordin": 110, "copi": [33, 35, 105, 107, 110], "core": 150, "correspond": 110, "cost": [2, 3, 4, 6], "count": [33, 124, 138], "cours": 150, "cover": 110, "cream": 103, "creat": [5, 15, 32, 33, 34, 35, 36, 37, 40, 46, 52, 60, 82, 89, 106, 110, 112, 113, 114, 122, 129, 147], "creation": 112, "csv": [48, 112, 124], "ctime": 45, "cubehelix": 129, "current": [39, 42, 43, 49], "custom": [14, 52, 112, 114], "d": [19, 110], "dai": 39, "data": [9, 31, 38, 72, 77, 82, 102, 103, 109, 112, 113, 114, 123, 124, 133, 134, 143, 149], "datafram": [112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "dataset": [124, 126, 133, 138, 141], "datatyp": [11, 36, 106], "date": [9, 39, 40, 42, 44, 47, 110], "datetim": [39, 40, 41, 43, 44], "decim": [19, 31, 60], "decis": 22, "declar": 70, "decor": [17, 18], "deep": 11, "default": [17, 19, 24, 25, 27, 32, 33, 34, 35, 36, 37, 44, 48, 50, 51, 54, 57, 60, 70, 75, 81], "defin": [16, 52, 54, 65, 82, 86, 113, 117, 118, 119], "definit": [2, 3, 4, 6], "degre": 110, "del": 116, "delet": [32, 33, 34, 48, 82, 116], "demo": [0, 2, 3, 4, 6], "demystifi": 86, "densiti": 0, "descend": [33, 34, 35], "descent": [3, 4], "describ": [110, 123], "descript": 2, "desir": 123, "detail": 124, "detect": 0, "determin": 108, "diagon": 110, "diari": 150, "dict": [33, 34, 35, 112, 113, 120], "dict2": 35, "dictionari": [27, 35, 48, 51, 72, 113, 120], "differ": [15, 23, 24, 36, 39, 42, 43, 67, 78, 110], "digit": [19, 46], "dimens": 110, "dimension": 110, "dir": 60, "direct": [88, 92], "directori": 49, "disadvantag": 58, "discuss": 133, "disk": 103, "displai": [74, 103, 112], "distanc": 110, "distort": 2, "distplot": 133, "distribut": [0, 110, 133], "dive": 11, "do": 16, "docstr": [54, 64, 69], "document": [109, 110], "doe": 35, "dollar": 19, "dot": 110, "down": 67, "draw": [110, 135, 141], "drop": [112, 116, 117, 118], "drop_dupl": 117, "dropna": 118, "dtype": 110, "duplic": [117, 118, 121], "durat": 39, "e": 110, "each": [103, 110, 124, 141], "easi": 15, "editor": 11, "effici": 15, "einsum": 110, "either": [33, 34, 35], "eleg": 33, "element": [33, 34, 35, 36, 105, 110], "elif": 25, "els": [24, 25, 27, 28, 29, 51], "empti": 36, "encapsul": 81, "end": [19, 33, 67], "engin": 150, "enjoi": 150, "enumer": [51, 110], "environ": 11, "equal": [35, 110], "equat": 3, "equidist": 110, "equival": [19, 110], "error": [33, 50, 96, 116, 119], "escap": [19, 32], "essenti": 150, "estim": 0, "etc": 33, "evalu": 0, "everi": 110, "everytim": 86, "exampl": [5, 6, 19, 26, 27, 28, 29, 39, 40, 41, 42, 43, 44, 46, 52, 56, 60, 67, 70, 75, 83, 89, 102, 120, 147], "except": [29, 50, 51, 52, 115], "exclud": 110, "exercis": [17, 19, 24, 25, 27, 32, 33, 34, 35, 36, 37, 44, 48, 50, 51, 54, 60, 70, 75, 81, 103, 110, 124], "exist": 110, "expens": 124, "expert": 149, "explicit": 73, "explicitli": 86, "export": [112, 123], "express": [15, 101, 110, 119], "extend": 33, "extens": 48, "extract": 110, "f": [19, 110], "face": 103, "facetgrid": 142, "facewash": 103, "factor": 139, "fals": [33, 35], "faq": [28, 29], "faster": 110, "featur": [3, 96], "feedforward": 6, "fifa": 102, "file": [7, 9, 48, 49, 53, 88, 92, 109, 110, 124], "fill": 110, "filter": [17, 59, 112, 123], "final": 51, "find": [110, 124], "findal": 19, "first": [8, 33, 90, 93, 110, 115, 116, 117, 124, 146, 148], "five": 124, "fix": 110, "flatten": 109, "float": [31, 74, 110], "flow": [9, 22, 30], "follow": [103, 110, 124], "format": [32, 39, 40, 41, 42, 64, 74, 123, 143], "forward": 6, "four": 110, "fraction": 31, "frame": 124, "frequent": 110, "from": [33, 34, 35, 36, 39, 40, 60, 63, 74, 109, 110, 112, 113, 114, 115, 116, 117, 118, 122, 124], "from_dict": 113, "fromkei": 35, "frozenset": 36, "function": [2, 3, 4, 6, 9, 15, 16, 17, 27, 32, 33, 34, 35, 36, 37, 54, 56, 57, 58, 59, 60, 62, 64, 65, 66, 74, 83, 84, 106, 108, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122], "g": 110, "game": 110, "gaussian": [0, 110], "gener": [15, 37, 109, 110, 129], "get": [11, 17, 33, 35, 39, 42, 43, 49, 74, 95, 103, 110, 112], "getcwd": 49, "getter": 18, "give": 35, "given": [33, 34, 35, 110, 124], "glanc": 1, "global": [55, 56], "gmtime": 45, "good": 150, "gradient": [3, 4, 6], "graph": 102, "group": [19, 135], "groupbi": [112, 123], "h": 110, "ha": 110, "hand": [23, 24], "handl": [39, 51, 96], "happen": 86, "hard": 103, "have": 16, "head": 115, "header": 120, "heat": 143, "heatmap": 143, "hello": [51, 67], "help": [64, 69], "here": [8, 32, 86, 90, 93, 146, 148], "hide": 82, "hierarch": [83, 114], "higesht": 124, "high": 78, "higher": [16, 17], "histogram": [102, 103], "hold": 11, "hour": 39, "how": [9, 32, 33, 36, 40, 41, 42, 54, 60, 67, 105, 110, 115], "hstack": 109, "huggingfac": 94, "hybrid": 83, "hypothesi": [3, 4], "i": [7, 19, 27, 28, 32, 33, 34, 35, 36, 48, 54, 56, 58, 62, 76, 78, 86, 88, 92, 109, 110, 112, 118, 133, 143, 144, 150], "iat": 115, "ident": [75, 110], "identifi": 68, "ignor": [32, 110], "iloc": 116, "imag": 110, "immut": 110, "implement": [6, 15, 110, 133], "implicit": 73, "import": [60, 63, 74, 96, 105, 110, 112], "indent": 69, "index": [27, 33, 34, 107, 109, 110, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122], "indexerror": 50, "indic": 110, "infinit": [14, 15], "info": 112, "inform": 11, "inherit": [81, 83], "initi": [6, 96], "inlin": 69, "inner": 110, "inplac": 110, "input": 74, "insert": [33, 112], "insid": [11, 27, 28, 39, 110], "inspect": [32, 112], "instal": [11, 96, 105], "instanc": [37, 81, 82], "instead": 31, "int": 110, "integ": [74, 107, 110], "interact": 129, "interleav": 110, "intermedi": 149, "intern": 86, "interpret": [78, 110], "intersect": 36, "interv": 110, "introduct": [9, 11, 20, 80, 94, 96], "iri": 141, "issubclass": 83, "item": [33, 34, 35, 110], "iter": [14, 22, 27, 28, 32, 33, 34, 35, 36, 110, 112], "itm": 35, "its": 74, "j": 110, "januari": 110, "java": 78, "join": 112, "joint": 131, "jointplot": 133, "journei": 11, "json": 48, "jupyt": [0, 2, 3, 4, 6, 11], "just": 110, "justif": 74, "k": 2, "kdeplot": 133, "keep": [117, 121], "kei": [35, 37, 54, 73, 78, 81, 113, 120], "keyerror": 50, "keyword": [56, 57, 68, 83], "kwarg": 20, "label": [17, 19, 24, 25, 27, 32, 33, 34, 35, 36, 37, 44, 48, 50, 51, 54, 60, 70, 75, 81, 115], "lambda": [37, 59, 119], "langchain": [96, 97, 101], "langgraph": 98, "langserv": 99, "langsmith": 100, "languag": [78, 101], "larg": [110, 123], "largest": 110, "last": [103, 110, 115, 116, 117, 124], "launch": 95, "lead": 119, "learn": [9, 10, 17, 149, 150], "least": 118, "len": [33, 34, 35], "length": [35, 57, 110, 113], "let": [67, 70, 133], "letter": 140, "level": [17, 19, 25, 27, 33, 34, 36, 44, 48, 51, 54, 60, 70, 78, 81, 119, 122, 149], "librari": [102, 106], "life": 110, "like": [81, 110], "line": [23, 24, 27, 64, 67, 69, 70, 74, 102, 103, 110], "linear": [3, 13], "linspac": 109, "list": [11, 24, 25, 27, 28, 32, 33, 34, 35, 37, 40, 41, 49, 51, 54, 60, 72, 110, 113, 114, 119, 120, 121], "listdir": 49, "liter": 71, "lm": 130, "lmplot": 130, "load": [102, 106, 109, 123, 126], "loc": 116, "local": [40, 55], "localtim": 45, "logic": [25, 50, 75], "logist": [4, 6], "logspac": 109, "look": 81, "loop": [14, 15, 27, 28, 29, 37], "lv": 140, "machin": [10, 78, 149], "make": [22, 49, 110, 123, 124], "manag": [11, 49], "mani": 106, "manipul": 105, "map": [17, 59, 143, 144], "mark": 19, "markdown": [5, 7, 12, 87, 88, 89, 91, 92, 147], "mask": 109, "match": [19, 33], "math": [60, 62, 108], "mathemat": [10, 31, 62, 105, 108], "matplotlib": [9, 102, 103, 104, 128], "matric": [107, 110], "matrix": [108, 110], "max": [33, 34, 106], "maximum": [33, 34, 110], "mean": [2, 110], "member": 83, "membership": [32, 33, 34, 35, 36, 75], "memori": [15, 110], "merg": 124, "metacharact": 19, "metadata": [5, 89, 112, 147], "method": [19, 32, 33, 34, 35, 36, 48, 81, 83, 106, 110], "microsecond": 39, "mileag": 124, "min": [33, 34, 106], "minimum": [34, 110], "minut": 39, "miscellan": 109, "miss": 118, "mkdir": 49, "mktime": 45, "ml": 149, "model": [4, 6], "modif": 112, "modifi": [36, 81, 82], "modul": [9, 43, 45, 47, 56, 60, 61, 62, 63, 64, 97, 111, 125], "modulenotfounderror": 50, "month": [39, 103, 110], "more": [19, 32, 105], "most": [103, 110, 124], "mul": 110, "mulitpli": 110, "multi": [4, 6, 64, 69, 115, 116, 119, 121, 122], "multilevel": 83, "multilin": [74, 103], "multinomi": 110, "multipl": [51, 54, 60, 70, 74, 83, 108, 114, 116, 119, 121], "multipli": 110, "multithread": 46, "my": [8, 90, 93, 146, 148, 150], "myst": [5, 7, 12, 87, 88, 89, 91, 92, 147], "n": [19, 110, 115, 116], "na": 118, "name": [60, 70, 74, 76, 110, 114, 122, 124], "nameerror": 50, "namespac": 76, "nearest": 110, "necessari": [102, 110], "need": 81, "neg": [33, 34, 39], "negat": 110, "nest": [16, 26, 27, 28, 29, 37, 56, 113], "network": 6, "neural": 6, "neuron": 6, "new": [33, 35, 49, 110, 122, 150], "non": [19, 110], "nonloc": [16, 55], "normal": [0, 3, 15, 110], "notebook": [5, 11, 12, 87, 89, 91, 147], "np": 110, "nth": 110, "null": 110, "number": [28, 31, 33, 34, 35, 37, 71, 72, 74, 106, 109, 110, 118, 121, 122], "numer": [71, 110], "numpi": [9, 105, 106, 109, 110, 111], "o": [48, 60], "object": [9, 19, 39, 41, 43, 48, 78, 81, 82, 85, 112], "observ": 135, "old": [32, 121], "onc": 110, "one": [19, 23, 27, 70, 74, 110, 118, 120], "onli": [74, 110, 113], "oop": 81, "open": 48, "oper": [25, 32, 33, 34, 35, 36, 60, 75, 84, 105, 108], "opposit": 19, "option": 112, "order": [16, 17, 33, 34, 35, 83, 110], "orient": 81, "other": [33, 34, 35, 36, 122], "otherwis": [33, 34], "our": 123, "outer": [29, 110], "output": [12, 74, 81, 87, 91, 110], "over": [34, 110], "overfit": [3, 4], "overload": 84, "overrid": [81, 83], "p": 110, "p0": 110, "p1": 110, "pack": 51, "packag": [11, 63, 64, 96, 110], "pad": 110, "pair": 35, "pairgrid": 141, "pairplot": 133, "pairwis": 141, "palett": 129, "panda": [9, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125], "paramet": [0, 3, 16, 17, 54, 57, 82, 112, 120], "parent": [81, 83], "part": [110, 138, 141], "pass": [27, 28, 29, 33, 35, 54], "path": [60, 110, 149], "pattern": [19, 27, 28, 110], "per": 124, "percentil": 110, "period": 19, "pie": [102, 103], "pipelin": 15, "place": [110, 116, 117, 118, 119, 121, 122], "placehold": 105, "plot": [102, 103, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140], "plu": 19, "point": [37, 43, 73, 74, 81, 110, 138], "polar": 110, "polymorph": 81, "polynomi": 3, "pop": [33, 116], "posit": [48, 57, 74, 110, 115, 116, 119], "power": 110, "practic": 74, "prefix": [19, 119], "prerequisit": 17, "price": 124, "print": [27, 28, 39, 67, 74, 110, 112, 124], "printabl": 35, "privat": 83, "problem": [3, 4, 74], "process": 32, "produc": [35, 110], "product": [103, 110], "profit": 103, "program": [9, 46, 51, 67, 78, 81, 110], "propag": 6, "properti": [18, 82, 103], "provid": 106, "python": [9, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 83, 84, 85, 86, 103, 104, 105, 106, 110, 111, 112, 113, 114, 120, 121, 123, 124, 125, 145], "python3": 33, "quantifi": 19, "question": [19, 103], "quickli": [5, 89, 147], "quiz": 107, "r": [19, 110], "rais": [51, 119], "rand": 106, "randint": 106, "randn": 106, "random": [6, 60, 61, 106, 109, 110], "randomli": 110, "rang": [27, 103, 110, 116, 121, 122], "rank": 110, "raw": 32, "re": 19, "read": [48, 103, 110, 123], "real": [102, 110, 150], "recommend": 110, "record": 110, "recurs": 58, "reduc": 59, "refer": [0, 2, 3, 4, 6], "reg": 130, "regardless": 110, "regex": 19, "regplot": 130, "regress": [3, 4, 132], "regular": [3, 4, 110], "relat": [32, 75], "relationship": 141, "reload": 60, "rememb": [20, 37, 68, 73, 81], "remov": [33, 35, 36, 49, 105, 119], "renam": [49, 60, 112, 119], "reorgan": 109, "repeat": 110, "replac": 110, "replic": 32, "repres": [15, 39, 43, 110], "represent": [35, 110], "requir": 113, "resampl": 110, "reset": [117, 118, 122], "reset_index": 122, "reshap": 109, "residplot": 132, "resolut": 83, "resourc": [9, 104, 111, 125, 145], "result": 110, "return": [16, 33, 34, 35, 54], "revers": [27, 28, 33, 110], "rmdir": 49, "role": [88, 92], "round": 110, "row": [110, 113, 114, 115, 118, 120, 124], "rugplot": 133, "rule": [56, 68, 70], "run": 67, "sale": 103, "same": [33, 34, 110], "sampl": [8, 88, 90, 92, 93, 110, 146, 148], "save": [48, 103, 123], "scalar": 110, "scale": 3, "scatter": [103, 131], "scatterplot": 141, "scienc": 149, "scope": 76, "script": [64, 110], "seaborn": [126, 127, 128, 129, 130, 134, 135, 136, 137, 145], "search": [19, 60], "second": [39, 110], "section": [8, 90, 93, 146, 148], "see": [70, 103], "segment": 110, "select": [110, 112, 115], "self": [82, 86], "semicolon": 70, "separ": 77, "seq": [34, 35], "sequenc": [19, 32, 77], "sequenti": 129, "seri": [112, 120, 121, 140], "set": [4, 6, 27, 35, 36, 72, 110, 115, 121], "set_axi": 119, "set_index": 121, "setdefault": 35, "setter": 18, "shallow": [33, 35], "shape": 110, "share": [56, 110], "shift": 110, "short": [23, 24], "shortcut": [23, 24], "should": [33, 34, 81, 110], "show": 103, "sign": [74, 110], "similar": [35, 78], "singl": [54, 64, 69, 83, 113, 116, 119], "sixth": 110, "size": 110, "sleep": [45, 46], "slice": [32, 33, 34, 105], "slide": 110, "small": 110, "soap": 103, "solut": [3, 4], "some": 133, "sort": [33, 34, 35, 105, 110, 112, 123, 124], "space": 119, "span": [17, 19, 24, 25, 27, 32, 33, 34, 35, 36, 37, 44, 48, 50, 51, 54, 60, 70, 75, 81], "special": [19, 71, 75, 84], "specif": [11, 33, 34, 35, 51, 115], "specifi": [19, 33, 74], "split": 19, "spread": 51, "squar": 19, "stack": 103, "stai": 86, "star": 19, "start": [11, 19, 122], "statement": [22, 23, 24, 25, 26, 27, 28, 29, 37, 51, 54, 60, 69], "statist": [60, 105, 109, 112, 123], "step": 78, "str": 35, "stream": 15, "strftime": [39, 40, 45], "string": [11, 19, 27, 28, 32, 33, 35, 37, 39, 40, 41, 60, 64, 71, 72, 74], "strip": 135, "strptime": [39, 41, 45], "struct_tim": 45, "structur": [77, 110, 150], "style": [32, 103], "sub": 19, "subclass": 110, "subn": 19, "subpart": 110, "subplot": 103, "subsequ": 110, "subset": [105, 110], "subtract": 110, "suffix": 119, "sum": 110, "summari": [19, 32, 33, 34, 35, 36, 107, 112], "super": 83, "support": 32, "suppress": 116, "swap": 110, "swarm": [134, 135], "sy": 60, "symmetr": 36, "syntax": [23, 24, 25, 26, 27, 28, 37, 50], "t": 19, "tabl": 96, "tail": 115, "target": 150, "technic": 150, "tell": 110, "test": [33, 34, 35, 36, 112], "text": 74, "than": [36, 110], "thei": 110, "them": 110, "thi": [33, 35, 81, 103], "thing": [20, 68], "through": [14, 32, 33, 34, 35, 36], "throw": [33, 34], "tile": 110, "time": [9, 19, 33, 39, 40, 42, 43, 44, 45, 46, 47, 107, 110, 140], "timedelata": 43, "timedelta": 39, "timestamp": [39, 40, 44], "timezon": [39, 43], "tip": [138, 141], "titan": 138, "titl": [8, 90, 93, 146, 148], "to_dict": 120, "todai": [39, 42, 110], "tomorrow": 110, "tool": 95, "toolbox": 150, "toothpast": 103, "top": [115, 135], "topic": [9, 21, 69, 149], "total": [35, 103, 110, 124], "toyota": 124, "trail": 119, "train": 4, "transfer": 22, "triangl": 110, "tricki": 36, "triplet": 110, "true": [33, 35, 110], "try": 51, "tupl": [27, 33, 34, 35, 51, 72], "tutori": 11, "two": [32, 39, 43, 54, 110, 121, 124], "txt": 48, "type": [9, 31, 33, 34, 35, 38, 48, 54, 71, 72, 73, 74, 82, 83, 106, 110, 113, 114], "typeerror": [34, 50], "u": [70, 133], "ubyt": 110, "under": 110, "underscor": 19, "unequ": 110, "unicod": 71, "union": 36, "uniqu": 110, "unit": 6, "univers": 108, "unpack": [51, 77], "untidi": 143, "up": 60, "upcom": 11, "updat": [35, 124], "us": [0, 11, 15, 16, 18, 19, 27, 28, 31, 33, 34, 39, 40, 43, 51, 56, 59, 60, 64, 70, 74, 81, 86, 96, 103, 105, 110, 113, 114, 115, 116, 119, 120, 121, 124, 150], "user": [52, 65, 74, 113], "util": 96, "v": [4, 19, 37, 64, 78, 113, 116, 128], "valid": 70, "valu": [16, 33, 34, 35, 54, 70, 74, 81, 110, 113, 115, 118, 120, 140], "valueerror": [41, 50], "variabl": [3, 16, 35, 55, 56, 57, 70, 76, 77, 81, 113, 135], "variou": 74, "vector": [6, 110], "versa": 44, "version": [105, 110], "vertic": [110, 133], "vice": 44, "view": 112, "violin": [135, 137], "violinplot": 138, "virtual": 11, "visual": 133, "vstack": 109, "w": [19, 110], "wai": [19, 33], "want": 37, "warn": 110, "we": [11, 16, 34], "welcom": 150, "what": [7, 27, 28, 32, 33, 34, 35, 36, 39, 54, 56, 58, 59, 60, 62, 63, 65, 76, 78, 86, 88, 92, 109, 110, 112, 133, 143, 144], "when": [16, 28, 31, 33, 35, 107, 110], "where": [19, 113, 118], "which": [33, 110], "while": [27, 28, 29, 74, 112, 119], "whisker": 102, "whitespac": 19, "whose": 110, "why": [9, 27, 28, 34, 83, 86, 105], "wich": 110, "wide": 143, "widget": 129, "width": 74, "window": 110, "without": [18, 54, 110, 120, 122], "word": 19, "work": [14, 32, 40, 41, 123], "world": [51, 67, 102, 150], "would": 35, "wrap": 60, "write": [48, 51, 67, 68, 110], "x": 110, "xi": 110, "xlsx": 48, "xml": 48, "y": 110, "yaml": [5, 89, 147], "year": [39, 103], "yesterdai": 110, "yj": 110, "you": [37, 81], "your": [11, 103], "z": [19, 110], "z0": 19, "za": 19, "zero": [19, 110], "zip": 51}})