Search.setIndex({"alltitles": {"0. Computer vision libraries in PyTorch": [[173, "computer-vision-libraries-in-pytorch"]], "0. Simple Input/Output Still works": [[130, "simple-input-output-still-works"]], "05. PyTorch Going Modular": [[182, "pytorch-going-modular"]], "1 distplot()": [[192, "distplot"]], "1. Arithmatic Operators": [[96, "arithmatic-operators"]], "1. Bar Plot": [[197, "bar-plot"]], "1. Basic Operators for concatenation of two or more strings": [[53, "basic-operators-for-concatenation-of-two-or-more-strings"]], "1. Changing a Tuple": [[55, "changing-a-tuple"]], "1. Chat Messages": [[130, "chat-messages"]], "1. Dictionary Membership Test": [[56, "dictionary-membership-test"]], "1. Docstrings for Python Modules": [[85, "docstrings-for-python-modules"]], "1. Easy to Implement": [[36, "easy-to-implement"]], "1. Getting a GPU": [[170, "getting-a-gpu"]], "1. Identity operators": [[96, "identity-operators"]], "1. Import the numpy package under the name np and print the numpy version and the configuration (\u2605\u2606\u2606)": [[154, "import-the-numpy-package-under-the-name-np-and-print-the-numpy-version-and-the-configuration"]], "1. Indexing": [[55, "indexing"]], "1. List Membership Test": [[54, "list-membership-test"]], "1. Set Membership Test": [[57, "set-membership-test"]], "1. Simple Sequential Chains": [[117, "simple-sequential-chains"]], "1. Single lined comment:": [[90, "single-lined-comment"]], "1. Strip Plot": [[194, "strip-plot"]], "1. Supervised Learning \ud83c\udf93": [[1, "supervised-learning"]], "1. Tuple Membership Test": [[55, "tuple-membership-test"]], "1. [] - Square brackets": [[40, "square-brackets"]], "1. break Statement in Nested Loop": [[50, "break-statement-in-nested-loop"]], "1. continue Statement in Nested Loop": [[50, "continue-statement-in-nested-loop"]], "1. match.group()": [[40, "match-group"]], "1. re.findall()": [[40, "re-findall"]], "10. () - Group": [[40, "group"]], "10. Creating FoodVision Big": [[179, "creating-foodvision-big"]], "10. Find indices of non-zero elements from [3,7,0,0,9,0] (\u2605\u2606\u2606)": [[154, "find-indices-of-non-zero-elements-from-3-7-0-0-9-0"]], "10.2 Getting data for FoodVision Big": [[179, "getting-data-for-foodvision-big"]], "10.3 Creating a subset of the Food101 dataset for faster experimenting": [[179, "creating-a-subset-of-the-food101-dataset-for-faster-experimenting"]], "10.4 Turning our Food101 datasets into DataLoaders": [[179, "turning-our-food101-datasets-into-dataloaders"]], "10.5 Training FoodVision Big model": [[179, "training-foodvision-big-model"]], "10.6 Inspecting loss curves of FoodVision Big model": [[179, "inspecting-loss-curves-of-foodvision-big-model"]], "10.7 Saving and loading FoodVision Big": [[179, "saving-and-loading-foodvision-big"]], "10.8 Checking FoodVision Big model size": [[179, "checking-foodvision-big-model-size"]], "100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (\u2605\u2605\u2605)": [[154, "compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1d-array-x-i-e-resample-the-elements-of-an-array-with-replacement-n-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means"]], "11. Create a 4x4 identity matrix (\u2605\u2606\u2606)": [[154, "create-a-4x4-identity-matrix"]], "11. Turning our FoodVision Big model into a deployable app": [[179, "turning-our-foodvision-big-model-into-a-deployable-app"]], "11. \\ - Backslash": [[40, "backslash"]], "11.1 Downloading an example image and moving it to the examples directory": [[179, "downloading-an-example-image-and-moving-it-to-the-examples-directory"]], "11.2 Saving Food101 class names to file (class_names.txt)": [[179, "saving-food101-class-names-to-file-class-names-txt"]], "11.3 Turning our FoodVision Big model into a Python script (model.py)": [[179, "turning-our-foodvision-big-model-into-a-python-script-model-py"]], "11.4 Turning our FoodVision Big Gradio app into a Python script (app.py)": [[179, "turning-our-foodvision-big-gradio-app-into-a-python-script-app-py"]], "11.5 Creating a requirements file for FoodVision Big (requirements.txt)": [[179, "creating-a-requirements-file-for-foodvision-big-requirements-txt"]], "11.6 Downloading our FoodVision Big app files": [[179, "downloading-our-foodvision-big-app-files"]], "11.7 Deploying our FoodVision Big app to HuggingFace Spaces": [[179, "deploying-our-foodvision-big-app-to-huggingface-spaces"]], "12. Create a 2x2x2 array with random values (\u2605\u2606\u2606)": [[154, "create-a-2x2x2-array-with-random-values"]], "13. Create a 9x9 array with random values and find the minimum and maximum values (\u2605\u2606\u2606)": [[154, "create-a-9x9-array-with-random-values-and-find-the-minimum-and-maximum-values"]], "15. Create a 2d array with 1 on the border and 0 inside (\u2605\u2606\u2606)": [[154, "create-a-2d-array-with-1-on-the-border-and-0-inside"]], "16. How to add a border (filled with 0\u2019s) around an existing array? (\u2605\u2606\u2606)": [[154, "how-to-add-a-border-filled-with-0s-around-an-existing-array"]], "17. What is the result of the following expression? (\u2605\u2606\u2606)": [[154, "what-is-the-result-of-the-following-expression"]], "18. Create a 6x6 matrix with values 1,2,3,4 just below the diagonal (\u2605\u2606\u2606)": [[154, "create-a-6x6-matrix-with-values-1-2-3-4-just-below-the-diagonal"]], "19. Create a 6x6 matrix and fill it with a checkerboard pattern (\u2605\u2606\u2606)": [[154, "create-a-6x6-matrix-and-fill-it-with-a-checkerboard-pattern"]], "2 jointplot()": [[192, "jointplot"]], "2. . - Period": [[40, "period"]], "2. Convert a list of numeric value into a one-dimensional NumPy array (\u2605\u2606\u2606)": [[154, "convert-a-list-of-numeric-value-into-a-one-dimensional-numpy-array"]], "2. Deleting a Tuple": [[55, "deleting-a-tuple"]], "2. Docstrings for Python Functions": [[85, "docstrings-for-python-functions"]], "2. Getting PyTorch to run on the GPU": [[170, "getting-pytorch-to-run-on-the-gpu"]], "2. Inline comments": [[90, "inline-comments"]], "2. Iterating Through a Dictionary": [[56, "iterating-through-a-dictionary"]], "2. Iterating Through a List": [[54, "iterating-through-a-list"]], "2. Iterating Through a Set": [[57, "iterating-through-a-set"]], "2. Iterating Through a Tuple": [[55, "iterating-through-a-tuple"]], "2. Membership operators": [[96, "membership-operators"]], "2. Memory Efficient": [[36, "memory-efficient"]], "2. Negative Indexing": [[55, "negative-indexing"]], "2. Point Plot": [[197, "point-plot"]], "2. Python String Membership Operators": [[53, "python-string-membership-operators"]], "2. SERP API": [[126, "serp-api"]], "2. Summarization Chain": [[117, "summarization-chain"]], "2. Unsupervised Learning \ud83e\udde9": [[1, "unsupervised-learning"]], "2. break Statement in Outer Loop": [[50, "break-statement-in-outer-loop"]], "2. continue Statement in Outer Loop": [[50, "continue-statement-in-outer-loop"]], "2. match.start(), match.end() and match.span()": [[40, "match-start-match-end-and-match-span"]], "2. re.split()": [[40, "re-split"]], "2.1 Getting PyTorch to run on Apple Silicon": [[170, "getting-pytorch-to-run-on-apple-silicon"]], "20. Consider a (8,9,10) shape array, what is the index (x,y,z) of the 100th element? (\u2605\u2606\u2606)": [[154, "consider-a-8-9-10-shape-array-what-is-the-index-x-y-z-of-the-100th-element"]], "21. Create a checkerboard 8x8 matrix using the tile function (\u2605\u2606\u2606)": [[154, "create-a-checkerboard-8x8-matrix-using-the-tile-function"]], "22. Normalize a 6x6 random matrix (\u2605\u2606\u2606)": [[154, "normalize-a-6x6-random-matrix"]], "23. find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements. (\u2605\u2606\u2606)": [[154, "find-the-number-of-elements-of-an-array-length-of-one-array-element-in-bytes-and-total-bytes-consumed-by-the-elements"]], "24. Multiply a 6x3 matrix by a 3x4 matrix (real matrix product) (\u2605\u2606\u2606)": [[154, "multiply-a-6x3-matrix-by-a-3x4-matrix-real-matrix-product"]], "25. Given a 1D array, negate all elements which are between 3 and 8, in place. (\u2605\u2606\u2606)": [[154, "given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place"]], "26. What is the output of the following script? (\u2605\u2606\u2606)": [[154, "what-is-the-output-of-the-following-script"]], "27. Write a Python program compare two arrays using numpy (\u2605\u2606\u2606)": [[154, "write-a-python-program-compare-two-arrays-using-numpy"]], "28. What are the result of the following expressions? (\u2605\u2606\u2606)": [[154, "what-are-the-result-of-the-following-expressions"]], "29. How to round away from zero a float array ? (\u2605\u2606\u2606)": [[154, "how-to-round-away-from-zero-a-float-array"]], "3 pairplot()": [[192, "pairplot"]], "3. Count Plot": [[197, "count-plot"]], "3. Create a null vector of size 9 (\u2605\u2606\u2606)": [[154, "create-a-null-vector-of-size-9"]], "3. Deep Learning \ud83e\udde0": [[1, "deep-learning"]], "3. Docstrings for Python Classes": [[85, "docstrings-for-python-classes"]], "3. Multi lined comment:": [[90, "multi-lined-comment"]], "3. Other List Operations in Python": [[54, "id1"]], "3. Putting tensors (and models) on the GPU": [[170, "putting-tensors-and-models-on-the-gpu"]], "3. Python Relational Operators": [[53, "python-relational-operators"]], "3. Represent Infinite Stream": [[36, "represent-infinite-stream"]], "3. Slicing": [[55, "slicing"]], "3. Wolfram Alpha": [[126, "wolfram-alpha"]], "3. ^ - Caret": [[40, "caret"]], "3. match.re and match.string": [[40, "match-re-and-match-string"]], "3. re.sub()": [[40, "re-sub"]], "3.2.2 Exploring the Four Equations": [[178, "exploring-the-four-equations"]], "3.3 Creating a training loop and training a model on batches of data": [[173, "creating-a-training-loop-and-training-a-model-on-batches-of-data"]], "30. How to find common values between two arrays? (\u2605\u2606\u2606)": [[154, "how-to-find-common-values-between-two-arrays"]], "31. How to ignore all numpy warnings (not recommended)? (\u2605\u2606\u2606)": [[154, "how-to-ignore-all-numpy-warnings-not-recommended"]], "32. Is the following expressions true? (\u2605\u2606\u2606)": [[154, "is-the-following-expressions-true"]], "33. How to get the dates of yesterday, today and tomorrow? (\u2605\u2606\u2606)": [[154, "how-to-get-the-dates-of-yesterday-today-and-tomorrow"]], "34. How to get all the dates corresponding to the month of January 2016? (\u2605\u2605\u2606)": [[154, "how-to-get-all-the-dates-corresponding-to-the-month-of-january-2016"]], "35. How to compute ((A+B)*(-A/2)) in place (without copy)? (\u2605\u2605\u2606)": [[154, "how-to-compute-a-b-a-2-in-place-without-copy"]], "36. Extract the integer part of a random array of positive numbers using 4 different methods (\u2605\u2605\u2606)": [[154, "extract-the-integer-part-of-a-random-array-of-positive-numbers-using-4-different-methods"]], "37. Create a 3x3 matrix with row values ranging from 0 to 2 (\u2605\u2605\u2606)": [[154, "create-a-3x3-matrix-with-row-values-ranging-from-0-to-2"]], "38. Consider a generator function that generates 9 integers and use it to build an array (\u2605\u2606\u2606)": [[154, "consider-a-generator-function-that-generates-9-integers-and-use-it-to-build-an-array"]], "39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (\u2605\u2605\u2606)": [[154, "create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded"]], "4 Levels Of Tone Matching Techniques:": [[139, "levels-of-tone-matching-techniques"]], "4 rugplot()": [[192, "rugplot"]], "4. $ - Dollar": [[40, "dollar"]], "4. Docstrings for Python Scripts": [[85, "docstrings-for-python-scripts"]], "4. How to find the memory size of any array (\u2605\u2606\u2606)": [[154, "how-to-find-the-memory-size-of-any-array"]], "4. Moving tensors back to the CPU": [[170, "moving-tensors-back-to-the-cpu"]], "4. Pipelining Generators": [[36, "pipelining-generators"]], "4. Reinforcement Learning \ud83c\udfae": [[1, "reinforcement-learning"]], "4. re.subn()": [[40, "re-subn"]], "40. Create a random vector of size 10 and sort it (\u2605\u2605\u2606)": [[154, "create-a-random-vector-of-size-10-and-sort-it"]], "41. How to sum a small array faster than np.sum? (\u2605\u2605\u2606)": [[154, "how-to-sum-a-small-array-faster-than-np-sum"]], "42. Consider two random array A and B, check if they are equal (\u2605\u2605\u2606)": [[154, "consider-two-random-array-a-and-b-check-if-they-are-equal"]], "43. Make an array immutable (read-only) (\u2605\u2605\u2606)": [[154, "make-an-array-immutable-read-only"]], "44. Consider a random 5x2 matrix representing cartesian coordinates, convert them to polar coordinates (\u2605\u2605\u2606)": [[154, "consider-a-random-5x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates"]], "45. Create random vector of size 5 and replace the maximum value by 0 (\u2605\u2605\u2606)": [[154, "create-random-vector-of-size-5-and-replace-the-maximum-value-by-0"]], "46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (\u2605\u2605\u2606)": [[154, "create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area"]], "47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj)) (\u2605\u2605\u2606)": [[154, "given-two-arrays-x-and-y-construct-the-cauchy-matrix-c-cij-1-xi-yj"]], "48. Print the minimum and maximum representable value for each numpy scalar type (\u2605\u2605\u2606)": [[154, "print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type"]], "49. How to print all the values of an array? (\u2605\u2605\u2606)": [[154, "how-to-print-all-the-values-of-an-array"]], "5 Levels Of Summarization: Novice to Expert": [[131, "levels-of-summarization-novice-to-expert"]], "5 kdeplot()": [[192, "kdeplot"]], "5. * - Star": [[40, "star"]], "5. Docstrings for Python Packages": [[85, "docstrings-for-python-packages"]], "5. How to get the documentation of the numpy add function from the command line? (\u2605\u2606\u2606)": [[154, "how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line"]], "5. re.search()": [[40, "re-search"]], "50. How to find the closest value (to a given scalar) in a vector? (\u2605\u2605\u2606)": [[154, "how-to-find-the-closest-value-to-a-given-scalar-in-a-vector"]], "51. Create a structured array representing a position (x,y) and a color (r,g,b) (\u2605\u2605\u2606)": [[154, "create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b"]], "52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (\u2605\u2605\u2606)": [[154, "consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances"]], "53. How to convert a float (32 bits) array into an integer (32 bits) in place?": [[154, "how-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"]], "54. How to read the following file? (\u2605\u2605\u2606)": [[154, "how-to-read-the-following-file"]], "55. What is the equivalent of enumerate for numpy arrays? (\u2605\u2605\u2606)": [[154, "what-is-the-equivalent-of-enumerate-for-numpy-arrays"]], "56. Generate a generic 2D Gaussian-like array (\u2605\u2605\u2606)": [[154, "generate-a-generic-2d-gaussian-like-array"]], "57. How to randomly place e elements in a 2D array? (\u2605\u2605\u2606)": [[154, "how-to-randomly-place-e-elements-in-a-2d-array"]], "58. Subtract the mean of each row of a matrix (\u2605\u2605\u2606)": [[154, "subtract-the-mean-of-each-row-of-a-matrix"]], "59. How to sort an array by the nth column? (\u2605\u2605\u2606)": [[154, "how-to-sort-an-array-by-the-nth-column"]], "6# 6# 14. Create a random vector of size 20 and find the mean value (\u2605\u2606\u2606)": [[154, "create-a-random-vector-of-size-20-and-find-the-mean-value"]], "6. + - Plus": [[40, "plus"]], "6. Create a null vector of size 12 but the sixth value which is 1 (\u2605\u2606\u2606)": [[154, "create-a-null-vector-of-size-12-but-the-sixth-value-which-is-1"]], "60. How to tell if a given 2D array has null columns? (\u2605\u2605\u2606)": [[154, "how-to-tell-if-a-given-2d-array-has-null-columns"]], "61. Find the nearest value from a given value in an array (\u2605\u2605\u2606)": [[154, "find-the-nearest-value-from-a-given-value-in-an-array"]], "62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (\u2605\u2605\u2606)": [[154, "considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator"]], "63. Create an array class that has a name attribute (\u2605\u2605\u2606)": [[154, "create-an-array-class-that-has-a-name-attribute"]], "64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (\u2605\u2605\u2605)": [[154, "consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices"]], "65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (\u2605\u2605\u2605)": [[154, "how-to-accumulate-elements-of-a-vector-x-to-an-array-f-based-on-an-index-list-i"]], "66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (\u2605\u2605\u2606)": [[154, "considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors"]], "67. Considering a four dimensions array, how to get sum over the last two axis at once? (\u2605\u2605\u2605)": [[154, "considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once"]], "68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (\u2605\u2605\u2605)": [[154, "considering-a-one-dimensional-vector-d-how-to-compute-means-of-subsets-of-d-using-a-vector-s-of-same-size-describing-subset-indices"]], "69. How to get the diagonal of a dot product? (\u2605\u2605\u2605)": [[154, "how-to-get-the-diagonal-of-a-dot-product"]], "7. ? - Question Mark": [[40, "question-mark"]], "7. Create a vector with values ranging from 20 to 59 (\u2605\u2606\u2606)": [[154, "create-a-vector-with-values-ranging-from-20-to-59"]], "70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (\u2605\u2605\u2605)": [[154, "consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value"]], "71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (\u2605\u2605\u2605)": [[154, "consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5"]], "72. How to swap two rows of an array? (\u2605\u2605\u2605)": [[154, "how-to-swap-two-rows-of-an-array"]], "73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (\u2605\u2605\u2605)": [[154, "consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles"]], "74. Given a sorted array C that corresponds to a bincount, how to produce an array A such that np.bincount(A) == C? (\u2605\u2605\u2605)": [[154, "given-a-sorted-array-c-that-corresponds-to-a-bincount-how-to-produce-an-array-a-such-that-np-bincount-a-c"]], "75. How to compute averages using a sliding window over an array? (\u2605\u2605\u2605)": [[154, "how-to-compute-averages-using-a-sliding-window-over-an-array"]], "76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (\u2605\u2605\u2605)": [[154, "consider-a-one-dimensional-array-z-build-a-two-dimensional-array-whose-first-row-is-z-0-z-1-z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-z-3-z-2-z-1"]], "77. How to negate a boolean, or to change the sign of a float inplace? (\u2605\u2605\u2605)": [[154, "how-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace"]], "78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[154, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-p0-i-p1-i"]], "79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[154, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-set-of-points-p-how-to-compute-distance-from-each-point-j-p-j-to-each-line-i-p0-i-p1-i"]], "8. Reverse a vector (first element becomes last) (\u2605\u2606\u2606)": [[154, "reverse-a-vector-first-element-becomes-last"]], "8. {} - Braces": [[40, "braces"]], "80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (\u2605\u2605\u2605)": [[154, "consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary"]], "81. Consider an array a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], \u2026, [11,12,13,14]]? (\u2605\u2605\u2605)": [[154, "consider-an-array-a-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-b-1-2-3-4-2-3-4-5-3-4-5-6-11-12-13-14"]], "82. Compute a matrix rank (\u2605\u2605\u2605)": [[154, "compute-a-matrix-rank"]], "83. How to find the most frequent value in an array?": [[154, "how-to-find-the-most-frequent-value-in-an-array"]], "84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (\u2605\u2605\u2605)": [[154, "extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix"]], "85. Create a 2D array subclass such that a[i,j] == a[j,i] (\u2605\u2605\u2605)": [[154, "create-a-2d-array-subclass-such-that-a-i-j-a-j-i"]], "86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (\u2605\u2605\u2605)": [[154, "consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-how-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1"]], "87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (\u2605\u2605\u2605)": [[154, "consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4"]], "88. How to implement the Game of Life using numpy arrays? (\u2605\u2605\u2605)": [[154, "how-to-implement-the-game-of-life-using-numpy-arrays"]], "89. How to get the n largest values of an array (\u2605\u2605\u2605)": [[154, "how-to-get-the-n-largest-values-of-an-array"]], "9. Create a 3x3 matrix with values ranging from 12 to 20 (\u2605\u2606\u2606)": [[154, "create-a-3x3-matrix-with-values-ranging-from-12-to-20"]], "9. | - Alternation": [[40, "alternation"]], "9.1 Create transform with data augmentation": [[174, "create-transform-with-data-augmentation"]], "90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (\u2605\u2605\u2605)": [[154, "given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item"]], "91. How to create a record array from a regular array? (\u2605\u2605\u2605)": [[154, "how-to-create-a-record-array-from-a-regular-array"]], "92. Consider a large vector A, compute A to the power of 3 using 3 different methods (\u2605\u2605\u2605)": [[154, "consider-a-large-vector-a-compute-a-to-the-power-of-3-using-3-different-methods"]], "93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (\u2605\u2605\u2605)": [[154, "consider-two-arrays-a-and-b-of-shape-8-3-and-2-2-how-to-find-rows-of-a-that-contain-elements-of-each-row-of-b-regardless-of-the-order-of-the-elements-in-b"]], "94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (\u2605\u2605\u2605)": [[154, "considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3"]], "95. Convert a vector of ints into a matrix binary representation (\u2605\u2605\u2605)": [[154, "convert-a-vector-of-ints-into-a-matrix-binary-representation"]], "96. Given a two dimensional array, how to extract unique rows? (\u2605\u2605\u2605)": [[154, "given-a-two-dimensional-array-how-to-extract-unique-rows"]], "97. Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (\u2605\u2605\u2605)": [[154, "considering-2-vectors-a-b-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function"]], "98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (\u2605\u2605\u2605)?": [[154, "considering-a-path-described-by-two-vectors-x-y-how-to-sample-it-using-equidistant-samples"]], "99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (\u2605\u2605\u2605)": [[154, "given-an-integer-n-and-a-2d-array-x-select-from-x-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n"]], "AI/ML Learning Path": [[208, "ai-ml-learning-path"]], "About Python Programming": [[23, "about-python-programming"]], "Accept float input from User": [[95, "accept-float-input-from-user"]], "Accept multiline input from a user": [[95, "accept-multiline-input-from-a-user"]], "Accepting User Inputs (as both integer and string)": [[95, "accepting-user-inputs-as-both-integer-and-string"]], "Accepting User Inputs (only as integer)": [[95, "accepting-user-inputs-only-as-integer"]], "Access Tuple Elements": [[55, "access-tuple-elements"]], "Access elements from a list": [[54, "access-elements-from-a-list"]], "Accessing Attributes with self Parameter": [[103, "accessing-attributes-with-self-parameter"]], "Accessing Elements from Dictionary": [[56, "accessing-elements-from-dictionary"]], "Accessing output string arguments by name": [[95, "accessing-output-string-arguments-by-name"]], "Accessing the index in for loop": [[48, "accessing-the-index-in-for-loop"]], "Ad Hoc Example Financial Forecast Edit": [[138, "ad-hoc-example-financial-forecast-edit"]], "Add/Change List Elements": [[54, "add-change-list-elements"]], "Adding or Removing Elements": [[149, "adding-or-removing-elements"]], "Additional Regression Plots": [[191, "additional-regression-plots"]], "Adjust train() function to track results with SummaryWriter()": [[177, "adjust-train-function-to-track-results-with-summarywriter"]], "Adjusting model_1 to fit a straight line": [[172, "adjusting-model-1-to-fit-a-straight-line"]], "Advanced Level": [[208, "advanced-level"]], "Advanced Retrieval With LangChain": [[132, "advanced-retrieval-with-langchain"]], "Advanced string processing": [[53, "advanced-string-processing"]], "Advantage": [[81, "advantage"]], "Advantages of Recursion": [[79, "advantages-of-recursion"]], "Advantages of Tuple over List": [[55, "advantages-of-tuple-over-list"]], "Advantages of user-defined functions": [[86, "advantages-of-user-defined-functions"]], "Agents": [[117, "id1"], [118, "agents"]], "Agents - Make OpenAI Do Things For you": [[126, "agents-make-openai-do-things-for-you"]], "Agents \ud83e\udd16\ud83e\udd16": [[117, "agents"]], "Aggregate Statistics (Groupby)": [[167, "aggregate-statistics-groupby"]], "Algorithm Evaluation": [[2, "algorithm-evaluation"]], "An example cell": [[7, "an-example-cell"], [110, "an-example-cell"], [206, "an-example-cell"]], "Analyze Gradient Descent Progress": [[12, "analyze-gradient-descent-progress"], [13, "analyze-gradient-descent-progress"], [14, "analyze-gradient-descent-progress"], [15, "analyze-gradient-descent-progress"], [16, "analyze-gradient-descent-progress"], [17, "analyze-gradient-descent-progress"], [18, "analyze-gradient-descent-progress"]], "Anatomy of Box Plot": [[195, "anatomy-of-box-plot"]], "Anatomy of Violin Plot": [[196, "anatomy-of-violin-plot"]], "Angle between vectors": [[33, "angle-between-vectors"]], "Anomaly Detection Algorithm": [[2, "anomaly-detection-algorithm"]], "Anomaly Detection Using Gaussian Distribution": [[2, "anomaly-detection-using-gaussian-distribution"], [9, "anomaly-detection-using-gaussian-distribution"]], "Apply condition": [[156, "apply-condition"]], "Architecture of a classification neural network": [[172, "architecture-of-a-classification-neural-network"]], "Argument of an Exception": [[72, "argument-of-an-exception"]], "Array": [[149, "array"]], "Array Attributes and Methods": [[150, "array-attributes-and-methods"]], "Array Manipulation": [[149, "array-manipulation"]], "Array datatypes": [[150, "array-datatypes"]], "Array indexing": [[151, "array-indexing"]], "Array math": [[152, "array-math"]], "Arrays reorganizing": [[153, "arrays-reorganizing"]], "Assigning value to constant in Python": [[91, "assigning-value-to-constant-in-python"]], "Assigning values to Variables in Python": [[91, "assigning-values-to-variables-in-python"]], "Assignment operators": [[96, "assignment-operators"]], "Backpropagation": [[8, "backpropagation"]], "Backpropagation Algorithm": [[8, "backpropagation-algorithm"]], "Backward Iteration using the reversed() function": [[48, "backward-iteration-using-the-reversed-function"]], "Bar Chart": [[146, "bar-chart"]], "Bar Plot, Point Plot and Count plot": [[197, "bar-plot-point-plot-and-count-plot"]], "Basic Graph": [[146, "basic-graph"]], "Basic Statistics": [[149, "basic-statistics"]], "Basic operations": [[170, "basic-operations"]], "Batch Gradient Descent": [[5, "batch-gradient-descent"], [6, "batch-gradient-descent"]], "Batch Messages": [[130, "batch-messages"]], "Be careful when copying arrays!!!": [[151, "be-careful-when-copying-arrays"]], "Become one with the data (data preparation)": [[174, "become-one-with-the-data-data-preparation"]], "Beginner": [[3, "beginner"]], "Beginner Level": [[208, "beginner-level"]], "Bitwise operators": [[96, "bitwise-operators"]], "Bonus: Chapters With Timestamps": [[142, "bonus-chapters-with-timestamps"]], "Boolean Masking and Advanced Indexing": [[153, "boolean-masking-and-advanced-indexing"]], "Boolean array indexing": [[151, "boolean-array-indexing"]], "Boolean literals": [[92, "boolean-literals"]], "Box and Whiskers Chart": [[146, "box-and-whiskers-chart"]], "Box plot #1": [[146, "box-plot-1"]], "Box plot #2": [[146, "box-plot-2"]], "Breaking appart strings": [[53, "breaking-appart-strings"]], "Bringing FoodVision Mini to life by creating a Gradio demo": [[179, "bringing-foodvision-mini-to-life-by-creating-a-gradio-demo"]], "Broadcasting": [[152, "broadcasting"]], "Broadcasting with array reorganizing": [[153, "broadcasting-with-array-reorganizing"]], "Build model": [[171, "build-model"]], "Building Custom Iterators": [[35, "building-custom-iterators"]], "Building a Gradio interface": [[179, "building-a-gradio-interface"]], "Building a PyTorch linear model": [[171, "building-a-pytorch-linear-model"]], "Building a model": [[172, "building-a-model"]], "Building a model with non-linearity": [[172, "building-a-model-with-non-linearity"]], "Building a multi-class classification model in PyTorch": [[172, "building-a-multi-class-classification-model-in-pytorch"]], "Building a training and testing loop": [[172, "building-a-training-and-testing-loop"]], "Building color palettes:": [[188, "building-color-palettes"]], "Built-In Class Attributes": [[103, "built-in-class-attributes"]], "Built-in Functions with Set": [[57, "built-in-functions-with-set"]], "Built-in Higher Order Functions": [[38, "built-in-higher-order-functions"]], "Built-in functions to Work with Python": [[53, "built-in-functions-to-work-with-python"]], "Business idea: Job Data As A Service": [[136, "business-idea-job-data-as-a-service"], [137, "business-idea-job-data-as-a-service"]], "Calculate Model Training Precision": [[15, "calculate-model-training-precision"], [16, "calculate-model-training-precision"], [17, "calculate-model-training-precision"], [18, "calculate-model-training-precision"], [19, "calculate-model-training-precision"], [20, "calculate-model-training-precision"]], "Calculating patch embedding input and output shapes by hand": [[178, "calculating-patch-embedding-input-and-output-shapes-by-hand"]], "Calculus - Fourier Series": [[28, "calculus-fourier-series"]], "Canberra Distance": [[31, "canberra-distance"]], "Capital-pi notation": [[29, "capital-pi-notation"]], "Capital-sigma notation": [[30, "capital-sigma-notation"]], "Cart ^": [[40, "cart"]], "Catching Exceptions in Python": [[72, "catching-exceptions-in-python"]], "Catching Specific Exceptions in Python": [[72, "catching-specific-exceptions-in-python"]], "Catching exceptions with continue statement": [[50, "catching-exceptions-with-continue-statement"]], "Categorical Data Background": [[193, "categorical-data-background"]], "Cell mode vs. script mode": [[175, "cell-mode-vs-script-mode"]], "Chaining Decorators in Python": [[38, "chaining-decorators-in-python"]], "Chains \u26d3\ufe0f\u26d3\ufe0f\u26d3\ufe0f": [[117, "chains"]], "Change tensor datatype": [[170, "change-tensor-datatype"]], "Changing Dictionary to JSON": [[69, "changing-dictionary-to-json"]], "Changing Directory chdir() -": [[70, "changing-directory-chdir"]], "Changing JSON to Dictionary": [[69, "changing-json-to-dictionary"]], "Changing and Adding Dictionary elements": [[56, "changing-and-adding-dictionary-elements"]], "Chat Message History": [[117, "chat-message-history"]], "Chat Messages": [[117, "chat-messages"]], "Chat Model": [[117, "chat-model"]], "Chatbots": [[118, "chatbots"]], "Chebyshev Distance": [[31, "chebyshev-distance"]], "Check python datatypes": [[25, "check-python-datatypes"]], "Checking the contents of a PyTorch model": [[171, "checking-the-contents-of-a-pytorch-model"]], "Checking the size of EffNetB2 feature extractor": [[179, "checking-the-size-of-effnetb2-feature-extractor"]], "Checking the size of ViT feature extractor": [[179, "checking-the-size-of-vit-feature-extractor"]], "Chunk your data up into smaller documents": [[133, "chunk-your-data-up-into-smaller-documents"]], "Class": [[102, "class"]], "Class Constructor": [[102, "class-constructor"]], "Class Without Getters and Setters": [[39, "class-without-getters-and-setters"]], "Closing Files in Python": [[69, "closing-files-in-python"]], "Code Understanding": [[118, "code-understanding"]], "Code blocks and outputs": [[26, "code-blocks-and-outputs"], [112, "code-blocks-and-outputs"]], "Collecting EffNetB2 feature extractor stats": [[179, "collecting-effnetb2-feature-extractor-stats"]], "Collecting ViT feature extractor stats": [[179, "collecting-vit-feature-extractor-stats"]], "Combining Arrays": [[149, "combining-arrays"]], "Common Python String Methods": [[53, "common-python-string-methods"]], "Compare DataFrame drop() vs. pop() vs. del": [[160, "compare-dataframe-drop-vs-pop-vs-del"]], "Compare model results": [[174, "compare-model-results"]], "Compare model results and training time": [[173, "compare-model-results-and-training-time"]], "Comparing model results, prediction times and size": [[179, "comparing-model-results-prediction-times-and-size"]], "Comparision operators in Python": [[81, "comparision-operators-in-python"]], "Comparison": [[149, "comparison"]], "Comparison/Relational operators": [[96, "comparison-relational-operators"]], "Concepts at glance": [[3, "concepts-at-glance"]], "Conditional Changes": [[167, "conditional-changes"]], "Conditional statements": [[43, "conditional-statements"]], "Conditionals in List Comprehension": [[58, "conditionals-in-list-comprehension"]], "Constants": [[91, "constants"]], "Constants  -": [[81, "constants"]], "Construct and train Model 1": [[174, "construct-and-train-model-1"]], "Constructors in Python": [[103, "constructors-in-python"]], "Content with notebooks": [[26, "content-with-notebooks"], [112, "content-with-notebooks"]], "Contextual Compression": [[132, "contextual-compression"]], "Control Flow Statements": [[43, "control-flow-statements"]], "Control Statements in Python": [[50, "control-statements-in-python"]], "Control Statements in Python FAQs": [[50, "control-statements-in-python-faqs"]], "Controlling Aesthetics of Seaborn Plots": [[186, "controlling-aesthetics-of-seaborn-plots"]], "Convert Pandas DataFrame to Python dictionary": [[164, "convert-pandas-dataframe-to-python-dictionary"]], "Copying/Sorting": [[149, "copying-sorting"]], "Cosine Distance": [[31, "cosine-distance"]], "Cost Function": [[5, "cost-function"], [6, "cost-function"], [8, "cost-function"]], "Cost Function (Distortion)": [[4, "cost-function-distortion"]], "Create DataFrame from Hierarchical lists as columns": [[158, "create-dataframe-from-hierarchical-lists-as-columns"]], "Create DataFrame from dict using constructor": [[157, "create-dataframe-from-dict-using-constructor"]], "Create DataFrame from hierarchical lists as rows": [[158, "create-dataframe-from-hierarchical-lists-as-rows"]], "Create DataFrame from list by changing data type": [[158, "create-dataframe-from-list-by-changing-data-type"]], "Create DataFrame from list of dict": [[157, "create-dataframe-from-list-of-dict"]], "Create DataFrame from list using constructor": [[158, "create-dataframe-from-list-using-constructor"]], "Create DataFrame from list with a customized column name": [[158, "create-dataframe-from-list-with-a-customized-column-name"]], "Create DataFrame from list with a customized index": [[158, "create-dataframe-from-list-with-a-customized-index"]], "Create DataFrame from multiple lists": [[158, "create-dataframe-from-multiple-lists"]], "Create DataLoaders for ViT": [[179, "create-dataloaders-for-vit"]], "Create DataLoaders using automatically created transforms": [[177, "create-dataloaders-using-automatically-created-transforms"]], "Create DataLoaders using manually created transforms": [[177, "create-dataloaders-using-manually-created-transforms"]], "Create Datasets and DataLoaders": [[176, "create-datasets-and-dataloaders"], [177, "create-datasets-and-dataloaders"], [178, "create-datasets-and-dataloaders"], [180, "create-datasets-and-dataloaders"], [181, "create-datasets-and-dataloaders"]], "Create Datasets and DataLoaders (data_setup.py)": [[175, "create-datasets-and-dataloaders-data-setup-py"]], "Create Datasets and DataLoaders (script mode)": [[181, "create-datasets-and-dataloaders-script-mode"]], "Create Generators in Python": [[36, "create-generators-in-python"]], "Create Pandas DataFrame from Python Dictionary": [[157, "create-pandas-dataframe-from-python-dictionary"]], "Create Pandas DataFrame from Python List": [[158, "create-pandas-dataframe-from-python-list"]], "Create Test Objects": [[156, "create-test-objects"]], "Create TinyVGG model class": [[174, "create-tinyvgg-model-class"]], "Create a NumPy Array": [[150, "create-a-numpy-array"]], "Create a custom Dataset to replicate ImageFolder": [[174, "create-a-custom-dataset-to-replicate-imagefolder"]], "Create a function to display random images": [[174, "create-a-function-to-display-random-images"]], "Create a helper function to build SummaryWriter() instances": [[177, "create-a-helper-function-to-build-summarywriter-instances"]], "Create a helper function to set seeds": [[177, "create-a-helper-function-to-set-seeds"]], "Create a notebook with MyST Markdown": [[7, "create-a-notebook-with-myst-markdown"], [110, "create-a-notebook-with-myst-markdown"], [206, "create-a-notebook-with-myst-markdown"]], "Create embeddings of your documents to get ready for semantic search": [[133, "create-embeddings-of-your-documents-to-get-ready-for-semantic-search"]], "Create experiments and set up training code": [[177, "create-experiments-and-set-up-training-code"]], "Create feature extractor models": [[177, "create-feature-extractor-models"]], "Create the Transformer Encoder": [[178, "create-the-transformer-encoder"]], "Create train & test loop functions": [[174, "create-train-test-loop-functions"]], "Create train and test Dataset\u2019s and DataLoader\u2019s": [[174, "create-train-and-test-datasets-and-dataloaders"]], "Creating Custom Exceptions": [[73, "creating-custom-exceptions"]], "Creating DataLoaders for EffNetB2": [[179, "creating-dataloaders-for-effnetb2"]], "Creating Instance Objects": [[103, "creating-instance-objects"]], "Creating Python Dictionary": [[56, "creating-python-dictionary"]], "Creating Python List": [[54, "creating-python-list"]], "Creating Python Sets": [[57, "creating-python-sets"]], "Creating Python Tuple": [[55, "creating-python-tuple"]], "Creating a Lambda Function": [[58, "creating-a-lambda-function"]], "Creating a Transformer Encoder by combining our custom made layers": [[178, "creating-a-transformer-encoder-by-combining-our-custom-made-layers"]], "Creating a Transformer Encoder with PyTorch\u2019s Transformer layers": [[178, "creating-a-transformer-encoder-with-pytorchs-transformer-layers"]], "Creating a ViT feature extractor": [[179, "creating-a-vit-feature-extractor"]], "Creating a demos folder to store our FoodVision Mini app files": [[179, "creating-a-demos-folder-to-store-our-foodvision-mini-app-files"]], "Creating a folder for storing Python scripts": [[181, "creating-a-folder-for-storing-python-scripts"]], "Creating a folder of example images to use with our FoodVision Mini demo": [[179, "creating-a-folder-of-example-images-to-use-with-our-foodvision-mini-demo"]], "Creating a function to make an EffNetB2 feature extractor": [[179, "creating-a-function-to-make-an-effnetb2-feature-extractor"]], "Creating a function to make predictions across the test dataset": [[179, "creating-a-function-to-make-predictions-across-the-test-dataset"]], "Creating a function to map our inputs and outputs": [[179, "creating-a-function-to-map-our-inputs-and-outputs"]], "Creating a function to save the model": [[180, "creating-a-function-to-save-the-model"], [181, "creating-a-function-to-save-the-model"]], "Creating a function to save the model (script mode)": [[181, "creating-a-function-to-save-the-model-script-mode"]], "Creating a function to save the model (utils.py)": [[175, "creating-a-function-to-save-the-model-utils-py"]], "Creating a function to time our experiments": [[173, "creating-a-function-to-time-our-experiments"]], "Creating a helper function to get class names": [[174, "creating-a-helper-function-to-get-class-names"]], "Creating a list of example images": [[179, "creating-a-list-of-example-images"]], "Creating a loss function": [[178, "creating-a-loss-function"]], "Creating a loss function and optimizer for a multi-class PyTorch model": [[172, "creating-a-loss-function-and-optimizer-for-a-multi-class-pytorch-model"]], "Creating a loss function and optimizer in PyTorch": [[171, "creating-a-loss-function-and-optimizer-in-pytorch"]], "Creating a model and transforms for FoodVision Big": [[179, "creating-a-model-and-transforms-for-foodvision-big"]], "Creating a module in Python": [[81, "creating-a-module-in-python"]], "Creating a range and tensors like": [[170, "creating-a-range-and-tensors-like"]], "Creating a requirements file for FoodVision Mini (requirements.txt)": [[179, "creating-a-requirements-file-for-foodvision-mini-requirements-txt"]], "Creating a train() function to combine train_step() and test_step()": [[174, "creating-a-train-function-to-combine-train-step-and-test-step"]], "Creating a training and testing loop for a multi-class PyTorch model": [[172, "creating-a-training-and-testing-loop-for-a-multi-class-pytorch-model"]], "Creating a transform for torchvision.models (auto creation)": [[176, "creating-a-transform-for-torchvision-models-auto-creation"]], "Creating a transform for torchvision.models (manual creation)": [[176, "creating-a-transform-for-torchvision-models-manual-creation"]], "Creating an EffNetB2 feature extractor": [[179, "creating-an-effnetb2-feature-extractor"]], "Creating an Object in Python": [[103, "creating-an-object-in-python"]], "Creating an empty set is a bit tricky.": [[57, "creating-an-empty-set-is-a-bit-tricky"]], "Creating an optimization loop in PyTorch": [[171, "creating-an-optimization-loop-in-pytorch"]], "Creating an optimizer": [[178, "creating-an-optimizer"]], "Creating image patches with torch.nn.Conv2d()": [[178, "creating-image-patches-with-torch-nn-conv2d"]], "Creating mutli-class classification data": [[172, "creating-mutli-class-classification-data"]], "Creating tensors": [[170, "creating-tensors"]], "Creating the class token embedding": [[178, "creating-the-class-token-embedding"]], "Creating the position embedding": [[178, "creating-the-position-embedding"]], "Creating train_step() and test_step() functions and train() to combine them": [[175, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [180, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [181, "creating-train-step-and-test-step-functions-and-train-to-combine-them"]], "Creating train_step() and test_step() functions and train() to combine them (script mode)": [[181, "creating-train-step-and-test-step-functions-and-train-to-combine-them-script-mode"]], "Creating transforms and loading data for Model 0": [[174, "creating-transforms-and-loading-data-for-model-0"]], "Custom Prompts": [[144, "custom-prompts"]], "Customizing Exception Classes": [[73, "customizing-exception-classes"]], "Data": [[171, "data"], [192, "data"]], "Data (preparing and loading)": [[171, "data-preparing-and-loading"]], "Data Cleaning": [[156, "data-cleaning"]], "Data Hiding": [[103, "data-hiding"]], "Data structures and algorithms": [[98, "data-structures-and-algorithms"]], "DataFrame Attributes": [[156, "dataframe-attributes"]], "DataFrame GroupBy": [[156, "dataframe-groupby"]], "DataFrame Iteration": [[156, "dataframe-iteration"]], "DataFrame Join": [[156, "dataframe-join"]], "DataFrame Options": [[156, "dataframe-options"]], "DataFrame Sorting": [[156, "dataframe-sorting"]], "DataFrame constructor": [[156, "dataframe-constructor"]], "DataFrame constructor vs from_dict()": [[157, "dataframe-constructor-vs-from-dict"]], "DataFrame conversion": [[156, "dataframe-conversion"]], "DataFrame creation": [[156, "dataframe-creation"]], "DataFrame filter columns": [[156, "dataframe-filter-columns"]], "DataFrame from dict by changing the column data type": [[157, "dataframe-from-dict-by-changing-the-column-data-type"]], "DataFrame from dict nested dict": [[157, "dataframe-from-dict-nested-dict"]], "DataFrame from dict where values are variable-length lists": [[157, "dataframe-from-dict-where-values-are-variable-length-lists"]], "DataFrame from dict with a single value": [[157, "dataframe-from-dict-with-a-single-value"]], "DataFrame from dict with dict keys as a row": [[157, "dataframe-from-dict-with-dict-keys-as-a-row"]], "DataFrame from dict with key and value as a column": [[157, "dataframe-from-dict-with-key-and-value-as-a-column"]], "DataFrame from dict with required columns only": [[157, "dataframe-from-dict-with-required-columns-only"]], "DataFrame from dict with user-defined indexes": [[157, "dataframe-from-dict-with-user-defined-indexes"]], "DataFrame metadata": [[156, "dataframe-metadata"]], "DataFrame modification": [[156, "dataframe-modification"]], "DataFrame rename columns": [[156, "dataframe-rename-columns"]], "DataFrame selection": [[156, "dataframe-selection"]], "DataFrame to dict by row": [[164, "dataframe-to-dict-by-row"]], "DataFrame to dict by row index": [[164, "dataframe-to-dict-by-row-index"]], "DataFrame to dict using into parameter": [[164, "dataframe-to-dict-using-into-parameter"]], "DataFrame to dict with a list of values": [[164, "dataframe-to-dict-with-a-list-of-values"]], "DataFrame to dict with one column as the key": [[164, "dataframe-to-dict-with-one-column-as-the-key"]], "DataFrame to dict with pandas series of values": [[164, "dataframe-to-dict-with-pandas-series-of-values"]], "DataFrame to dict without header and index": [[164, "dataframe-to-dict-without-header-and-index"]], "Dataframe from CSV": [[156, "dataframe-from-csv"]], "Dataframe from dict": [[156, "dataframe-from-dict"]], "Datasets": [[10, "datasets"]], "Decorating Functions with Parameters": [[38, "decorating-functions-with-parameters"]], "Decorators in Python": [[38, "decorators-in-python"]], "Defining a Class in Python": [[103, "defining-a-class-in-python"]], "Defining a Closure Function": [[37, "defining-a-closure-function"]], "Defining a Function": [[75, "defining-a-function"]], "Defining a function with parameters": [[75, "defining-a-function-with-parameters"]], "Defining a function with parameters and return value": [[75, "defining-a-function-with-parameters-and-return-value"]], "Defining a function without any parameters": [[75, "defining-a-function-without-any-parameters"]], "Defining a function without parameters and return value": [[75, "defining-a-function-without-parameters-and-return-value"]], "Definition": [[4, "definition"], [5, "definition"], [6, "definition"], [8, "definition"]], "Delete Objects": [[103, "delete-objects"]], "Delete object properties": [[103, "delete-object-properties"]], "Delete/Remove List Elements": [[54, "delete-remove-list-elements"]], "Deleting Files": [[69, "deleting-files"]], "Density Estimation": [[2, "density-estimation"]], "Deployed Gradio app structure": [[179, "deployed-gradio-app-structure"]], "Deploying our FoodVision Mini app to HuggingFace Spaces": [[179, "deploying-our-foodvision-mini-app-to-huggingface-spaces"]], "Description": [[4, "description"]], "Determinant": [[152, "determinant"]], "Dictionary Built-in Dictionary Functions": [[56, "dictionary-built-in-dictionary-functions"]], "Differences Between Interpreter and Compiler": [[99, "differences-between-interpreter-and-compiler"]], "Differences between Generator function and Normal function": [[36, "differences-between-generator-function-and-normal-function"]], "Different types of ML \ud83d\udcda": [[1, "different-types-of-ml"]], "Different types of machine learning model deployment": [[179, "different-types-of-machine-learning-model-deployment"]], "Different ways to track machine learning experiments": [[177, "different-ways-to-track-machine-learning-experiments"]], "Disadvantages of Recursion": [[79, "disadvantages-of-recursion"]], "Display numbers in floating-point format": [[95, "display-numbers-in-floating-point-format"]], "Display output Number in various type format": [[95, "display-output-number-in-various-type-format"]], "Dissimilarity Measure": [[31, "dissimilarity-measure"]], "Docstring Formats": [[85, "docstring-formats"]], "Docstrings": [[75, "docstrings"]], "Docstrings in Python": [[90, "docstrings-in-python"]], "Document Loaders": [[117, "document-loaders"]], "Documents": [[117, "documents"]], "Dot product": [[33, "dot-product"]], "Download different datasets": [[177, "download-different-datasets"]], "Downloading our FoodVision Mini app files": [[179, "downloading-our-foodvision-mini-app-files"]], "Draw Decision Boundaries": [[15, "draw-decision-boundaries"], [16, "draw-decision-boundaries"]], "Draw a scatterplot for each pairwise relationship": [[200, "draw-a-scatterplot-for-each-pairwise-relationship"]], "Draw strips of observations on top of a box plot": [[194, "draw-strips-of-observations-on-top-of-a-box-plot"]], "Draw strips of observations on top of a violin plot": [[194, "draw-strips-of-observations-on-top-of-a-violin-plot"]], "Draw swarm observations on top of a violin plot": [[194, "draw-swarm-observations-on-top-of-a-violin-plot"]], "Drop NA from defined rows": [[162, "drop-na-from-defined-rows"]], "Drop all duplicates": [[161, "drop-all-duplicates"]], "Drop all the columns using loc": [[160, "drop-all-the-columns-using-loc"]], "Drop column by index position": [[160, "drop-column-by-index-position"]], "Drop column by suppressing errors": [[160, "drop-column-by-suppressing-errors"]], "Drop column from multi-index DataFrame": [[160, "drop-column-from-multi-index-dataframe"]], "Drop column in place": [[160, "drop-column-in-place"]], "Drop column using a function": [[160, "drop-column-using-a-function"]], "Drop column using pandas DataFrame delete": [[160, "drop-column-using-pandas-dataframe-delete"]], "Drop column using pandas DataFrame.pop() function": [[160, "drop-column-using-pandas-dataframe-pop-function"]], "Drop column where all values are missing": [[162, "drop-column-where-all-values-are-missing"]], "Drop column where at least one value is missing": [[162, "drop-column-where-at-least-one-value-is-missing"]], "Drop column with missing values in place": [[162, "drop-column-with-missing-values-in-place"]], "Drop column with the number of NA": [[162, "drop-column-with-the-number-of-na"]], "Drop columns": [[156, "drop-columns"]], "Drop columns in pandas DataFrame": [[160, "drop-columns-in-pandas-dataframe"]], "Drop columns with NA in pandas DataFrame": [[162, "drop-columns-with-na-in-pandas-dataframe"]], "Drop duplicates and reset the index": [[161, "drop-duplicates-and-reset-the-index"], [162, "drop-duplicates-and-reset-the-index"]], "Drop duplicates but keep first": [[161, "drop-duplicates-but-keep-first"]], "Drop duplicates but keep last": [[161, "drop-duplicates-but-keep-last"]], "Drop duplicates from defined columns": [[161, "drop-duplicates-from-defined-columns"]], "Drop duplicates in pandas DataFrame": [[161, "drop-duplicates-in-pandas-dataframe"]], "Drop duplicates in place": [[161, "drop-duplicates-in-place"]], "Drop first n columns": [[160, "drop-first-n-columns"]], "Drop multiple columns": [[160, "drop-multiple-columns"]], "Drop range of columns using iloc": [[160, "drop-range-of-columns-using-iloc"]], "Drop single column": [[160, "drop-single-column"]], "Drop the last column": [[160, "drop-the-last-column"]], "Encapsulation": [[102, "encapsulation"]], "Ensemble Retriever": [[132, "ensemble-retriever"]], "Enumerate": [[72, "enumerate"]], "Equation 1 overview": [[178, "equation-1-overview"]], "Equation 1: Split data into patches and creating the class, position and patch embedding": [[178, "equation-1-split-data-into-patches-and-creating-the-class-position-and-patch-embedding"]], "Equation 2 overview": [[178, "equation-2-overview"]], "Equation 2: Multi-Head Attention (MSA)": [[178, "equation-2-multi-head-attention-msa"]], "Equation 3 overview": [[178, "equation-3-overview"]], "Equation 3: Multilayer Perceptron (MLP)": [[178, "equation-3-multilayer-perceptron-mlp"]], "Equation 4 overview": [[178, "equation-4-overview"]], "Escape Sequence": [[53, "escape-sequence"]], "Escape character \\": [[40, "escape-character"]], "Estimating Parameters for a Gaussian": [[2, "estimating-parameters-for-a-gaussian"]], "Euclidian Distance": [[31, "euclidian-distance"]], "Evaluate model by plotting loss curves": [[176, "evaluate-model-by-plotting-loss-curves"]], "Evaluating a model trained with non-linear activation functions": [[172, "evaluating-a-model-trained-with-non-linear-activation-functions"]], "Evaluation": [[118, "evaluation"]], "Example 1. Even function": [[28, "example-1-even-function"]], "Example 10: Print year, month, hour, minute and timestamp": [[60, "example-10-print-year-month-hour-minute-and-timestamp"]], "Example 11: Difference between two dates and times": [[60, "example-11-difference-between-two-dates-and-times"]], "Example 12: Difference between two timedelta objects": [[60, "example-12-difference-between-two-timedelta-objects"]], "Example 13: Printing negative timedelta object": [[60, "example-13-printing-negative-timedelta-object"]], "Example 14: Time duration in seconds": [[60, "example-14-time-duration-in-seconds"]], "Example 15: Format date using strftime()": [[60, "example-15-format-date-using-strftime"]], "Example 16: strptime()": [[60, "example-16-strptime"]], "Example 1:": [[47, "example-1"]], "Example 1: Current time using datetime object": [[64, "example-1-current-time-using-datetime-object"]], "Example 1: Declaring and assigning value to a constant": [[91, "example-1-declaring-and-assigning-value-to-a-constant"]], "Example 1: Declaring and assigning value to a variable": [[91, "example-1-declaring-and-assigning-value-to-a-variable"]], "Example 1: Get Current Date and Time": [[60, "example-1-get-current-date-and-time"]], "Example 1: Python get today\u2019s date": [[63, "example-1-python-get-todays-date"]], "Example 1: Python sleep()": [[67, "example-1-python-sleep"]], "Example 1: Python timestamp to datetime": [[65, "example-1-python-timestamp-to-datetime"]], "Example 1: datetime to string using strftime()": [[61, "example-1-datetime-to-string-using-strftime"]], "Example 1: string to datetime object": [[62, "example-1-string-to-datetime-object"]], "Example 2:": [[47, "example-2"]], "Example 2: Creating string from a timestamp": [[61, "example-2-creating-string-from-a-timestamp"]], "Example 2: Current date in different formats": [[63, "example-2-current-date-in-different-formats"]], "Example 2: Current time using time module": [[64, "example-2-current-time-using-time-module"]], "Example 2: Declaring multiple variables in one line** using comma  ,  and semicolon ;": [[91, "example-2-declaring-multiple-variables-in-one-line-using-comma-and-semicolon"]], "Example 2: Get Current Date": [[60, "example-2-get-current-date"]], "Example 2: Python create a digital clock": [[67, "example-2-python-create-a-digital-clock"]], "Example 2: Python datetime to timestamp": [[65, "example-2-python-datetime-to-timestamp"]], "Example 2: string to datetime object": [[62, "example-2-string-to-datetime-object"]], "Example 3: Changing the value of a variable": [[91, "example-3-changing-the-value-of-a-variable"]], "Example 3: Current time of a timezone": [[64, "example-3-current-time-of-a-timezone"]], "Example 3: Date object to represent a date": [[60, "example-3-date-object-to-represent-a-date"]], "Example 3: Get the current date and time": [[63, "example-3-get-the-current-date-and-time"]], "Example 3: Locale\u2019s appropriate date and time": [[61, "example-3-locales-appropriate-date-and-time"]], "Example 3: Python multithreading": [[67, "example-3-python-multithreading"]], "Example 4: Get current date": [[60, "example-4-get-current-date"]], "Example 4: Time Objects to Represent Time": [[64, "example-4-time-objects-to-represent-time"]], "Example 4: sleep() in a multithreaded program": [[67, "example-4-sleep-in-a-multithreaded-program"]], "Example 5: Difference Between Two Points in Time Using": [[64, "example-5-difference-between-two-points-in-time-using"]], "Example 5: Get date from a timestamp": [[60, "example-5-get-date-from-a-timestamp"]], "Example 6: Difference Between Two Points in Time Using timedelata": [[64, "example-6-difference-between-two-points-in-time-using-timedelata"]], "Example 6: Print today\u2019s year, month and day": [[60, "example-6-print-todays-year-month-and-day"]], "Example 7: Time object to represent time": [[60, "example-7-time-object-to-represent-time"]], "Example 8: Print hour, minute, second and microsecond": [[60, "example-8-print-hour-minute-second-and-microsecond"]], "Example 9: Python datetime object": [[60, "example-9-python-datetime-object"]], "Example : Arithmetic operators in Python": [[96, "example-arithmetic-operators-in-python"]], "Example : Comparison operators in Python": [[96, "example-comparison-operators-in-python"]], "Example : Identity operators in Python": [[96, "example-identity-operators-in-python"]], "Example : Logical operators in Python": [[96, "example-logical-operators-in-python"]], "Example : Membership operators in Python": [[96, "example-membership-operators-in-python"]], "Example : Share a global Variable Across Python Modules": [[77, "example-share-a-global-variable-across-python-modules"]], "Example Selectors": [[117, "example-selectors"]], "Example Using decimal Module": [[81, "example-using-decimal-module"]], "Example Using math Module": [[81, "example-using-math-module"]], "Example Using operator Module": [[81, "example-using-operator-module"]], "Example Using os Module": [[81, "example-using-os-module"]], "Example Using random Module": [[81, "example-using-random-module"]], "Example Using statistics Module": [[81, "example-using-statistics-module"]], "Example Using string Module": [[81, "example-using-string-module"]], "Example Using sys Module": [[81, "example-using-sys-module"]], "Example of Inheritance in Python": [[104, "example-of-inheritance-in-python"]], "Example of Method Overriding in Python": [[104, "example-of-method-overriding-in-python"]], "Example of RegEx with Metacharacters": [[40, "example-of-regex-with-metacharacters"]], "Example to convert pandas DataFrame to dict": [[164, "example-to-convert-pandas-dataframe-to-dict"]], "Example:": [[50, "example"], [88, "example"]], "Example: Nested for loop": [[48, "example-nested-for-loop"]], "Example: Nested for loop to print pattern": [[48, "example-nested-for-loop-to-print-pattern"]], "Example: Nested while loop": [[49, "example-nested-while-loop"]], "Example: Nested while loop to print the pattern": [[49, "example-nested-while-loop-to-print-the-pattern"]], "Example: User-Defined Exception in Python": [[73, "example-user-defined-exception-in-python"]], "Examples": [[29, "examples"], [30, "examples"]], "Exceptions in Python": [[72, "exceptions-in-python"]], "Exercise 10: Merge two data frames using the following condition": [[168, "exercise-10-merge-two-data-frames-using-the-following-condition"]], "Exercise 1: From the given dataset print the first and last five rows": [[168, "exercise-1-from-the-given-dataset-print-the-first-and-last-five-rows"]], "Exercise 1: Read Total profit of all months and show it using a line plot": [[147, "exercise-1-read-total-profit-of-all-months-and-show-it-using-a-line-plot"]], "Exercise 2: Clean the dataset and update the CSV file": [[168, "exercise-2-clean-the-dataset-and-update-the-csv-file"]], "Exercise 2: Get total profit of all months and show line plot with the following Style properties": [[147, "exercise-2-get-total-profit-of-all-months-and-show-line-plot-with-the-following-style-properties"]], "Exercise 3: Find the most expensive car company name": [[168, "exercise-3-find-the-most-expensive-car-company-name"]], "Exercise 3: Read all product sales data and show it  using a multiline plot": [[147, "exercise-3-read-all-product-sales-data-and-show-it-using-a-multiline-plot"]], "Exercise 4: Print All Toyota Cars details": [[168, "exercise-4-print-all-toyota-cars-details"]], "Exercise 4: Read toothpaste sales data of each month and show it using a scatter plot": [[147, "exercise-4-read-toothpaste-sales-data-of-each-month-and-show-it-using-a-scatter-plot"]], "Exercise 5: Count total cars per company": [[168, "exercise-5-count-total-cars-per-company"]], "Exercise 5: Read face cream and facewash product sales data and show it using the bar chart": [[147, "exercise-5-read-face-cream-and-facewash-product-sales-data-and-show-it-using-the-bar-chart"]], "Exercise 6: Find each company\u2019s Higesht price car": [[168, "exercise-6-find-each-companys-higesht-price-car"]], "Exercise 6: Read sales data of bathing soap of all months and show it using a bar chart. Save this plot to your hard disk": [[147, "exercise-6-read-sales-data-of-bathing-soap-of-all-months-and-show-it-using-a-bar-chart-save-this-plot-to-your-hard-disk"]], "Exercise 7: Find the average mileage of each car making company": [[168, "exercise-7-find-the-average-mileage-of-each-car-making-company"]], "Exercise 7: Read the total profit of each month and show it using the histogram to see the most common profit ranges": [[147, "exercise-7-read-the-total-profit-of-each-month-and-show-it-using-the-histogram-to-see-the-most-common-profit-ranges"]], "Exercise 8: Calculate total sale data for last year for each product and show it using a Pie chart": [[147, "exercise-8-calculate-total-sale-data-for-last-year-for-each-product-and-show-it-using-a-pie-chart"]], "Exercise 8: Sort all cars by Price column": [[168, "exercise-8-sort-all-cars-by-price-column"]], "Exercise 9: Concatenate two data frames using the following conditions": [[168, "exercise-9-concatenate-two-data-frames-using-the-following-conditions"]], "Exercise 9: Read Bathing soap facewash of all months and display it using the Subplot": [[147, "exercise-9-read-bathing-soap-facewash-of-all-months-and-display-it-using-the-subplot"]], "Exercise Question 10: Read all product sales data and show it using the stack plot": [[147, "exercise-question-10-read-all-product-sales-data-and-show-it-using-the-stack-plot"]], "Exercises \u279e <span class='label label-default'>Level 1</span>": [[65, "exercises-level-1"]], "Expert Level": [[208, "expert-level"]], "Explicit Type Conversion": [[94, "explicit-type-conversion"]], "Exploring Figure 1": [[178, "exploring-figure-1"]], "Exploring Table 1": [[178, "exploring-table-1"]], "Exporting Data": [[156, "exporting-data"]], "Extra Credit: Loop this process through many twitter accounts": [[139, "extra-credit-loop-this-process-through-many-twitter-accounts"]], "Extra learning": [[171, "extra-learning"]], "Extra resources": [[172, "extra-resources"], [173, "extra-resources"], [174, "extra-resources"], [175, "extra-resources"], [177, "extra-resources"], [179, "extra-resources"]], "Extra rsources": [[178, "extra-rsources"]], "Extra-curriculum": [[176, "extra-curriculum"]], "Extract Data From Calls & Video Transcripts/Interviews": [[144, "extract-data-from-calls-video-transcripts-interviews"]], "Extract Structured Data From Text: Expert Mode (Using Function Calling)": [[136, "extract-structured-data-from-text-expert-mode-using-function-calling"]], "Extract Structured Data From Text: Expert Mode (Using Kor)": [[137, "extract-structured-data-from-text-expert-mode-using-kor"]], "Extraction": [[118, "extraction"]], "FacetGrid": [[201, "facetgrid"], [201, "id1"]], "Factor Plot": [[198, "factor-plot"]], "Fashion MNIST": [[10, "fashion-mnist"]], "Feature Scaling": [[5, "feature-scaling"]], "Features (variables)": [[5, "features-variables"]], "File Positions": [[69, "file-positions"]], "File Types": [[69, "file-types"]], "File with csv Extension": [[69, "file-with-csv-extension"]], "File with json Extension": [[69, "file-with-json-extension"]], "File with txt Extension": [[69, "file-with-txt-extension"]], "File with xlsx Extension": [[69, "file-with-xlsx-extension"]], "File with xml Extension": [[69, "file-with-xml-extension"]], "Files": [[69, "files"]], "Filter, Sort, and Groupby": [[156, "filter-sort-and-groupby"]], "Filtering Data": [[167, "filtering-data"]], "Find Anomalies Using Gaussian Distribution": [[9, "find-anomalies-using-gaussian-distribution"]], "Finding the min, max, mean, sum, etc (aggregation)": [[170, "finding-the-min-max-mean-sum-etc-aggregation"]], "Fing Outliers": [[9, "fing-outliers"]], "Flatten Data": [[153, "flatten-data"]], "Flattening the patch embedding with torch.nn.Flatten()": [[178, "flattening-the-patch-embedding-with-torch-nn-flatten"]], "FoodVision Mini model deployment experiment outline": [[179, "foodvision-mini-model-deployment-experiment-outline"]], "For instance if you want to generate a list of numbers": [[58, "for-instance-if-you-want-to-generate-a-list-of-numbers"]], "Format Code List": [[61, "format-code-list"], [62, "format-code-list"]], "Format output strings by its positions": [[95, "format-output-strings-by-its-positions"]], "Forward (or Feedforward) Propagation": [[8, "forward-or-feedforward-propagation"]], "Forward Propagation Example": [[8, "forward-propagation-example"]], "Freezing the base model and changing the output layer to suit our needs": [[176, "freezing-the-base-model-and-changing-the-output-layer-to-suit-our-needs"]], "Frozenset methods": [[57, "frozenset-methods"]], "Function Argument and Parameter": [[78, "function-argument-and-parameter"]], "Function Calling Hello World Example": [[136, "function-calling-hello-world-example"]], "Function Calling Models": [[117, "function-calling-models"]], "Function Calling with OpenAI\u2019s GPT Models: An Interactive Tutorial": [[138, "function-calling-with-openais-gpt-models-an-interactive-tutorial"]], "Function as a Parameter": [[37, "function-as-a-parameter"]], "Function as a Parameter of Another Function": [[78, "function-as-a-parameter-of-another-function"]], "Function as a Return Value": [[37, "function-as-a-return-value"]], "Function pass Statement": [[75, "function-pass-statement"]], "Function return Statement": [[75, "function-return-statement"]], "Functionizing training and test loops": [[173, "functionizing-training-and-test-loops"]], "Functions in Python Math Module": [[83, "functions-in-python-math-module"]], "Gaussian (Normal) Distribution": [[2, "gaussian-normal-distribution"]], "General form": [[28, "general-form"]], "Generate Random Numbers": [[153, "generate-random-numbers"]], "Generators in Python": [[36, "generators-in-python"]], "Generic Seaborn Plots:": [[188, "generic-seaborn-plots"]], "Get Current Directory getcwd() -": [[70, "get-current-directory-getcwd"]], "Get Data": [[178, "get-data"]], "Get a users Tweets": [[139, "get-a-users-tweets"]], "Get data": [[174, "get-data"], [175, "get-data"], [176, "get-data"], [177, "get-data"], [180, "get-data"], [181, "get-data"]], "Get multiple input values from a user in one line": [[95, "get-multiple-input-values-from-a-user-in-one-line"]], "Get the statistics of DataFrame": [[156, "get-the-statistics-of-dataframe"]], "Getting Started with Python": [[25, "getting-started-with-python"]], "Getting a dataset": [[173, "getting-a-dataset"]], "Getting a pretrained ViT model and creating a feature extractor": [[178, "getting-a-pretrained-vit-model-and-creating-a-feature-extractor"]], "Getting a pretrained model": [[176, "getting-a-pretrained-model"]], "Getting a pretrained model, freezing the base layers and changing the classifier head": [[177, "getting-a-pretrained-model-freezing-the-base-layers-and-changing-the-classifier-head"]], "Getting a summary of our model with torchinfo.summary()": [[176, "getting-a-summary-of-our-model-with-torchinfo-summary"]], "Getting a visual summary of our ViT model": [[178, "getting-a-visual-summary-of-our-vit-model"]], "Getting back to Decorators": [[38, "getting-back-to-decorators"]], "Getting data": [[179, "getting-data"]], "Getting information from tensors": [[170, "getting-information-from-tensors"]], "Getting prediction probabilities for a multi-class PyTorch model": [[172, "getting-prediction-probabilities-for-a-multi-class-pytorch-model"]], "Getting setup": [[176, "getting-setup"], [177, "getting-setup"], [178, "getting-setup"], [179, "getting-setup"]], "Getting specific: What\u2019s ViT made of?": [[178, "getting-specific-whats-vit-made-of"]], "Global Variables": [[76, "global-variables"]], "Global Variables Across Python Modules": [[77, "global-variables-across-python-modules"]], "Global and local variables": [[76, "global-and-local-variables"]], "Global in Nested Functions": [[77, "global-in-nested-functions"]], "Going Modular Scripts": [[183, "going-modular-scripts"]], "Going Modular: Part 1 (cell mode)": [[180, "going-modular-part-1-cell-mode"]], "Going Modular: Part 2 (script mode)": [[181, "going-modular-part-2-script-mode"]], "Going from raw model outputs to predicted labels (logits -> prediction probabilities -> prediction labels)": [[172, "going-from-raw-model-outputs-to-predicted-labels-logits-prediction-probabilities-prediction-labels"]], "Gradient Computation": [[8, "gradient-computation"]], "Gradio overview": [[179, "gradio-overview"]], "Group the strips by a categorical variable": [[194, "group-the-strips-by-a-categorical-variable"]], "HIGH-LEVEL LANGUAGES": [[99, "high-level-languages"]], "Hamming Distance": [[31, "hamming-distance"]], "Handling timezone in Python": [[60, "handling-timezone-in-python"]], "Help topics": [[90, "help-topics"]], "Here is a list of all the escape sequences supported by Python.": [[53, "here-is-a-list-of-all-the-escape-sequences-supported-by-python"]], "Here\u2019s my first section": [[22, "heres-my-first-section"], [111, "heres-my-first-section"], [114, "heres-my-first-section"], [205, "heres-my-first-section"]], "Here\u2019s my sample title": [[22, "heres-my-sample-title"], [111, "heres-my-sample-title"], [114, "heres-my-sample-title"], [205, "heres-my-sample-title"]], "Hierarchical Inheritance": [[104, "hierarchical-inheritance"]], "Higher Order Functions": [[37, "higher-order-functions"]], "Histogram": [[146, "histogram"]], "How Are Sets Better Than Other DataTypes?": [[57, "how-are-sets-better-than-other-datatypes"]], "How strftime() works?": [[61, "how-strftime-works"]], "How strptime() works?": [[62, "how-strptime-works"]], "How to Install NumPy?": [[149, "how-to-install-numpy"]], "How to access characters in a string?": [[53, "how-to-access-characters-in-a-string"]], "How to call a function in python?": [[75, "how-to-call-a-function-in-python"]], "How to change or delete a string?": [[53, "how-to-change-or-delete-a-string"]], "How to create a string in Python?": [[53, "how-to-create-a-string-in-python"]], "How to deal with overfitting": [[174, "how-to-deal-with-overfitting"]], "How to deal with underfitting": [[174, "how-to-deal-with-underfitting"]], "How to get current date and time in Python?": [[63, "how-to-get-current-date-and-time-in-python"]], "How to import modules in Python?": [[81, "how-to-import-modules-in-python"]], "How to learn Python?": [[23, "how-to-learn-python"]], "How to slice a string in Python?": [[53, "how-to-slice-a-string-in-python"]], "How to slice lists in Python?": [[54, "how-to-slice-lists-in-python"]], "How to use DataFrame.head() function": [[159, "how-to-use-dataframe-head-function"]], "How to use DataFrame.tail() function": [[159, "how-to-use-dataframe-tail-function"]], "How\u2019s it going to function?": [[179, "hows-it-going-to-function"]], "Hybrid Inheritance": [[104, "hybrid-inheritance"]], "Hypothesis": [[5, "hypothesis"]], "Hypothesis (the Model)": [[6, "hypothesis-the-model"]], "Identifiers": [[89, "identifiers"]], "Identity matrix": [[32, "identity-matrix"]], "Illustrate Hidden Layers Perceptrons": [[18, "illustrate-hidden-layers-perceptrons"], [19, "illustrate-hidden-layers-perceptrons"], [20, "illustrate-hidden-layers-perceptrons"]], "Implicit Type Conversion": [[94, "implicit-type-conversion"]], "Import Dependencies": [[9, "import-dependencies"], [11, "import-dependencies"], [12, "import-dependencies"], [13, "import-dependencies"], [14, "import-dependencies"], [15, "import-dependencies"], [16, "import-dependencies"], [17, "import-dependencies"], [18, "import-dependencies"], [19, "import-dependencies"], [20, "import-dependencies"]], "Import NumPy and Check Version": [[149, "import-numpy-and-check-version"]], "Importing Data": [[156, "importing-data"]], "Importing PyTorch": [[170, "importing-pytorch"]], "Importing PyTorch and setting up device-agnostic code": [[174, "importing-pytorch-and-setting-up-device-agnostic-code"]], "Importing module from a package": [[84, "importing-module-from-a-package"]], "Importing the Package": [[119, "importing-the-package"]], "Improving a model (from a model perspective)": [[172, "improving-a-model-from-a-model-perspective"]], "In the upcoming tutorials, we will deep dive into specific concepts of Python, hold on your breath and start your journey": [[25, "in-the-upcoming-tutorials-we-will-deep-dive-into-specific-concepts-of-python-hold-on-your-breath-and-start-your-journey"]], "Index": [[156, "index"]], "Indexes - Structuring documents to LLMs can work with them": [[117, "indexes-structuring-documents-to-llms-can-work-with-them"]], "Indexing": [[156, "indexing"]], "Indexing (selecting data from tensors)": [[170, "indexing-selecting-data-from-tensors"]], "Indexing a 1D array": [[151, "indexing-a-1d-array"]], "Indexing a 2D array (matrices)": [[151, "indexing-a-2d-array-matrices"]], "Informal introduction to python: using python as calculator": [[25, "informal-introduction-to-python-using-python-as-calculator"]], "Inheritance": [[102, "inheritance"]], "Inheritance in Python": [[104, "inheritance-in-python"]], "Init and Train Linear Regression Model": [[12, "init-and-train-linear-regression-model"], [13, "init-and-train-linear-regression-model"], [14, "init-and-train-linear-regression-model"]], "Init and Train Logistic Regression Model": [[11, "init-and-train-logistic-regression-model"], [15, "init-and-train-logistic-regression-model"], [16, "init-and-train-logistic-regression-model"], [17, "init-and-train-logistic-regression-model"], [18, "init-and-train-logistic-regression-model"]], "Init and Train MLP Model": [[19, "init-and-train-mlp-model"], [20, "init-and-train-mlp-model"]], "Input and output shapes": [[172, "input-and-output-shapes"]], "Input and output shapes of a computer vision model": [[173, "input-and-output-shapes-of-a-computer-vision-model"]], "Inputs and outputs, layers and blocks": [[178, "inputs-and-outputs-layers-and-blocks"]], "Insert columns": [[156, "insert-columns"]], "Inspecting EffNetB2 loss curves": [[179, "inspecting-effnetb2-loss-curves"]], "Inspecting Strings": [[53, "inspecting-strings"]], "Inspecting ViT loss curves": [[179, "inspecting-vit-loss-curves"]], "Installation": [[119, "installation"]], "Instance Variables and Methods": [[102, "instance-variables-and-methods"]], "Instructing LLMs To Match Tone": [[139, "instructing-llms-to-match-tone"]], "Integer array indexing": [[151, "integer-array-indexing"]], "Interacting with APIs": [[118, "interacting-with-apis"]], "Interactive widget to create a sequential cubehelix palette:": [[188, "interactive-widget-to-create-a-sequential-cubehelix-palette"]], "Interesting User Feedback (Persona: Investor):": [[136, "interesting-user-feedback-persona-investor"], [137, "interesting-user-feedback-persona-investor"]], "Intermediate Level": [[208, "intermediate-level"]], "Interpreter Vs Compiler": [[99, "interpreter-vs-compiler"]], "Introduction": [[119, "introduction"]], "Introduction to *args and **kwargs in Python": [[41, "introduction-to-args-and-kwargs-in-python"]], "Introduction to HuggingFace": [[115, "introduction-to-huggingface"]], "Introduction to Machine Learning! \ud83d\ude80": [[1, "introduction-to-machine-learning"]], "Introduction to tensors": [[170, "introduction-to-tensors"]], "Iris Flowers": [[10, "iris-flowers"]], "Iterate Dictionary using for loop": [[48, "iterate-dictionary-using-for-loop"]], "Iterate List using for loop": [[48, "iterate-list-using-for-loop"]], "Iterate List using while loop": [[49, "iterate-list-using-while-loop"]], "Iterate Numbers using while loop": [[49, "iterate-numbers-using-while-loop"]], "Iterate Set using for loop": [[48, "iterate-set-using-for-loop"]], "Iterate String using for loop": [[48, "iterate-string-using-for-loop"]], "Iterate String using while loop": [[49, "iterate-string-using-while-loop"]], "Iterate Tuple using for loop": [[48, "iterate-tuple-using-for-loop"]], "Iterating Through a string": [[53, "iterating-through-a-string"]], "Iterating Through an Iterator": [[35, "iterating-through-an-iterator"]], "Iterative statements": [[43, "iterative-statements"]], "Iterators in Python": [[35, "iterators-in-python"]], "Java is both Compiled and Interpreted.": [[99, "java-is-both-compiled-and-interpreted"]], "Join/Combine": [[156, "join-combine"]], "Jupyter Demos": [[2, "jupyter-demos"], [4, "jupyter-demos"], [5, "jupyter-demos"], [6, "jupyter-demos"], [8, "jupyter-demos"]], "K-Means Algorithm": [[4, "k-means-algorithm"]], "K-Means Algorithm Demo": [[11, "k-means-algorithm-demo"]], "KEY DIFFERENCE": [[99, "key-difference"]], "KEY SIMILARITIES": [[99, "key-similarities"]], "Key Points to Remember": [[58, "key-points-to-remember"], [94, "key-points-to-remember"]], "Key Points to Remember:": [[102, "key-points-to-remember"]], "Keywords": [[89, "keywords"]], "Kor Hello World Example": [[137, "kor-hello-world-example"]], "LM Plot and Reg Plot": [[189, "lm-plot-and-reg-plot"]], "Lambda Function": [[58, "lambda-function"]], "LangChain Components": [[117, "langchain-components"]], "LangChain Cookbook Part 2: Use Cases\ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73": [[118, "langchain-cookbook-part-2-use-cases"]], "LangChain Cookbook \ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73": [[117, "langchain-cookbook"]], "LangChain Magic": [[140, "langchain-magic"]], "LangChain Support For Functions": [[138, "langchain-support-for-functions"]], "LangChain Use Cases": [[118, "langchain-use-cases"]], "LangGraphs": [[122, "langgraphs"]], "LangServe": [[123, "langserve"]], "LangSmith": [[124, "langsmith"]], "Langchain": [[121, "langchain"]], "Langchain expression language": [[125, "langchain-expression-language"]], "Langchain modules": [[120, "langchain-modules"]], "Langchain projects gallery": [[121, "langchain-projects-gallery"], [145, "langchain-projects-gallery"]], "Language Model": [[117, "language-model"]], "Let us see valid variable names": [[91, "let-us-see-valid-variable-names"]], "Letter Value (LV) Plot": [[199, "letter-value-lv-plot"]], "Let\u2019s break down the different components of the code.": [[88, "lets-break-down-the-different-components-of-the-code"]], "Let\u2019s discuss some plots that allow us to visualize the distribution of a dataset. These plots are:": [[192, "lets-discuss-some-plots-that-allow-us-to-visualize-the-distribution-of-a-dataset-these-plots-are"]], "Let\u2019s implement with dataset": [[192, "lets-implement-with-dataset"]], "Level 1: Basic Prompt - Summarize a couple sentences": [[131, "level-1-basic-prompt-summarize-a-couple-sentences"]], "Level 2: Prompt Templates - Summarize a couple paragraphs": [[131, "level-2-prompt-templates-summarize-a-couple-paragraphs"]], "Level 3: Map Reduce - Summarize a couple pages multiple pages": [[131, "level-3-map-reduce-summarize-a-couple-pages-multiple-pages"]], "Level 4: Best Representation Vectors - Summarize an entire book": [[131, "level-4-best-representation-vectors-summarize-an-entire-book"]], "Level 5: Agents - Summarize an unknown amount of text": [[131, "level-5-agents-summarize-an-unknown-amount-of-text"]], "Line Graph": [[146, "line-graph"]], "Linear Algebra": [[27, "linear-algebra"]], "Linear Algebra - Matrices": [[32, "linear-algebra-matrices"]], "Linear Algebra - Vectors": [[33, "linear-algebra-vectors"]], "Linear Regression": [[5, "linear-regression"]], "Linspace": [[153, "linspace"]], "List Comprehension vs String vs For Loop in Python": [[58, "list-comprehension-vs-string-vs-for-loop-in-python"]], "List Comprehension: Elegant way to create new List": [[54, "list-comprehension-elegant-way-to-create-new-list"]], "List Comprehensions vs Lambda functions": [[58, "list-comprehensions-vs-lambda-functions"]], "List Directories and Files listdir() -": [[70, "list-directories-and-files-listdir"]], "List Index": [[54, "list-index"]], "List comprehension can be combined with if statement": [[58, "list-comprehension-can-be-combined-with-if-statement"]], "List of Tools": [[126, "list-of-tools"]], "Literal Collections": [[92, "literal-collections"]], "Load Data from File": [[153, "load-data-from-file"]], "Load Documents": [[129, "load-documents"]], "Load Fifa Data": [[146, "load-fifa-data"]], "Load Necessary Libraries": [[146, "load-necessary-libraries"]], "Load Your LLM": [[129, "load-your-llm"]], "Load in NumPy Library": [[150, "load-in-numpy-library"]], "Load in the best model and make predictions with it": [[177, "load-in-the-best-model-and-make-predictions-with-it"]], "Load the Data": [[9, "load-the-data"], [11, "load-the-data"], [12, "load-the-data"], [13, "load-the-data"], [14, "load-the-data"], [15, "load-the-data"], [16, "load-the-data"], [17, "load-the-data"], [18, "load-the-data"], [19, "load-the-data"], [20, "load-the-data"]], "Load up our texts and documents": [[132, "load-up-our-texts-and-documents"]], "Load up your HTML from your company page": [[140, "load-up-your-html-from-your-company-page"]], "Load your data": [[133, "load-your-data"]], "Loading Datasets in Seaborn": [[185, "loading-datasets-in-seaborn"]], "Loading a saved PyTorch model\u2019s state_dict()": [[171, "loading-a-saved-pytorch-models-state-dict"]], "Loading data into Pandas": [[167, "loading-data-into-pandas"]], "Loading in a custom image with PyTorch": [[174, "loading-in-a-custom-image-with-pytorch"]], "Local Variables": [[76, "local-variables"]], "LogSpace": [[153, "logspace"]], "Logical/Boolean operators": [[96, "logical-boolean-operators"]], "Logistic Regression": [[6, "logistic-regression"]], "Logistic Regression With Linear Boundary Demo": [[15, "logistic-regression-with-linear-boundary-demo"]], "Logistic Regression With Non-Linear Boundary Demo": [[16, "logistic-regression-with-non-linear-boundary-demo"]], "Loops in Python": [[48, "loops-in-python"], [49, "loops-in-python"]], "MACHINE CODE": [[99, "machine-code"]], "MNIST (Handwritten Digits)": [[10, "mnist-handwritten-digits"]], "Main Use Cases": [[118, "main-use-cases"]], "Main takeaways": [[174, "main-takeaways"], [176, "main-takeaways"], [177, "main-takeaways"], [178, "main-takeaways"], [179, "main-takeaways"]], "Make a prediction on a custom image": [[174, "make-a-prediction-on-a-custom-image"]], "Make and evaluate random predictions with best model": [[173, "make-and-evaluate-random-predictions-with-best-model"]], "Make classification data and get it ready": [[172, "make-classification-data-and-get-it-ready"]], "Make predictions and evaluate the model": [[172, "make-predictions-and-evaluate-the-model"]], "Make predictions and get Model 0 results": [[173, "make-predictions-and-get-model-0-results"]], "Make predictions on a custom image": [[178, "make-predictions-on-a-custom-image"]], "Make predictions on images from the test set": [[176, "make-predictions-on-images-from-the-test-set"]], "Making a New Directory mkdir() -": [[70, "making-a-new-directory-mkdir"]], "Making a confusion matrix for further prediction evaluation": [[173, "making-a-confusion-matrix-for-further-prediction-evaluation"]], "Making a model (TinyVGG)": [[180, "making-a-model-tinyvgg"], [181, "making-a-model-tinyvgg"]], "Making a model (TinyVGG) (script mode)": [[181, "making-a-model-tinyvgg-script-mode"]], "Making a model (model_builder.py)": [[175, "making-a-model-model-builder-py"]], "Making and evaluating predictions with a PyTorch multi-class model": [[172, "making-and-evaluating-predictions-with-a-pytorch-multi-class-model"]], "Making and timing predictions with EffNetB2": [[179, "making-and-timing-predictions-with-effnetb2"]], "Making and timing predictions with ViT": [[179, "making-and-timing-predictions-with-vit"]], "Making changes to the data": [[167, "making-changes-to-the-data"]], "Making predictions": [[171, "making-predictions"]], "Making predictions on a custom image": [[176, "making-predictions-on-a-custom-image"]], "Making predictions using torch.inference_mode()": [[171, "making-predictions-using-torch-inference-mode"]], "Making predictions with a trained PyTorch model (inference)": [[171, "making-predictions-with-a-trained-pytorch-model-inference"]], "Making predictions with our trained models and timing them": [[179, "making-predictions-with-our-trained-models-and-timing-them"]], "Manhattan Distance": [[31, "manhattan-distance"]], "Manipulating tensors (tensor operations)": [[170, "manipulating-tensors-tensor-operations"]], "Markdown + notebooks": [[26, "markdown-notebooks"], [112, "markdown-notebooks"]], "Markdown Files": [[21, "markdown-files"], [109, "markdown-files"], [113, "markdown-files"]], "Match object": [[40, "match-object"]], "Mathematics": [[149, "mathematics"]], "Mathematics essentials": [[34, "mathematics-essentials"]], "Mathematics for Machine Learning": [[24, "mathematics-for-machine-learning"]], "Matplotlib": [[146, "matplotlib"]], "Matplotlib vs. Seaborn Plotting Code": [[187, "matplotlib-vs-seaborn-plotting-code"]], "Matrices": [[170, "matrices"]], "Matrix Multiplication": [[152, "matrix-multiplication"]], "Matrix addition": [[32, "matrix-addition"]], "Matrix determinant": [[32, "matrix-determinant"]], "Matrix inverse": [[32, "matrix-inverse"]], "Matrix multiplication": [[32, "matrix-multiplication"]], "Matrix multiplication (is all you need)": [[170, "matrix-multiplication-is-all-you-need"]], "Matrix operations": [[32, "matrix-operations"]], "Matrix subtraction": [[32, "matrix-subtraction"]], "Matrix transpose": [[32, "matrix-transpose"]], "Memory": [[117, "memory"]], "MetaCharacters": [[40, "metacharacters"]], "Metadata info of DataFrame": [[156, "metadata-info-of-dataframe"]], "Method #1: Simple - Describe the tone you would like": [[139, "method-1-simple-describe-the-tone-you-would-like"]], "Method #2: Intermediate - Specify your tone description + examples": [[139, "method-2-intermediate-specify-your-tone-description-examples"]], "Method #3: AI-Assisted: Ask the LLM help with tone descriptions": [[139, "method-3-ai-assisted-ask-the-llm-help-with-tone-descriptions"]], "Method 4 - Technique Fusion: Combine multiple techniques to mimic tone": [[139, "method-4-technique-fusion-combine-multiple-techniques-to-mimic-tone"]], "Method Overriding": [[104, "method-overriding"]], "Method Resolution Order in Python": [[104, "method-resolution-order-in-python"]], "Method to Modify Class Default Values": [[102, "method-to-modify-class-default-values"]], "Microchips Tests (Artificial)": [[10, "microchips-tests-artificial"]], "Minkowski Distance": [[31, "minkowski-distance"]], "Miscellaneous": [[153, "miscellaneous"]], "Model 0: Build a baseline model": [[173, "model-0-build-a-baseline-model"]], "Model 0: TinyVGG without data augmentation": [[174, "model-0-tinyvgg-without-data-augmentation"]], "Model 1: Building a better model with non-linearity": [[173, "model-1-building-a-better-model-with-non-linearity"]], "Model 1: TinyVGG with Data Augmentation": [[174, "model-1-tinyvgg-with-data-augmentation"]], "Model 2: Building a Convolutional Neural Network (CNN)": [[173, "model-2-building-a-convolutional-neural-network-cnn"]], "Models - The interface to the AI brains": [[117, "models-the-interface-to-the-ai-brains"]], "Modify Object Properties": [[103, "modify-object-properties"]], "Modifying a set in Python": [[57, "modifying-a-set-in-python"]], "More": [[149, "more"], [149, "id2"]], "More classification evaluation metrics": [[172, "more-classification-evaluation-metrics"]], "Moving our trained EffNetB2 model to our FoodVision Mini demo directory": [[179, "moving-our-trained-effnetb2-model-to-our-foodvision-mini-demo-directory"]], "Multi-class Classification": [[8, "multi-class-classification"]], "Multi-class Classification (One-vs-All)": [[6, "multi-class-classification-one-vs-all"]], "Multi-line Docstrings in Python": [[85, "multi-line-docstrings-in-python"]], "Multi-line statement": [[90, "multi-line-statement"]], "MultiQuery": [[132, "multiquery"]], "Multidimensional": [[29, "multidimensional"], [30, "multidimensional"]], "Multiple Fields": [[137, "multiple-fields"]], "Multiple Results": [[136, "multiple-results"]], "Multithreading in Python": [[67, "multithreading-in-python"]], "Multivariate Linear Regression Demo": [[12, "multivariate-linear-regression-demo"]], "Multivariate Logistic Regression Demo": [[17, "multivariate-logistic-regression-demo"], [18, "multivariate-logistic-regression-demo"]], "My Journey": [[0, "my-journey"]], "My workflow": [[175, "my-workflow"]], "My workflow for replicating papers": [[178, "my-workflow-for-replicating-papers"]], "MyST markdown": [[26, "myst-markdown"], [112, "myst-markdown"]], "Need of Encapsulation": [[102, "need-of-encapsulation"]], "Negative indexing": [[54, "negative-indexing"]], "Nested Loops in List Comprehension": [[58, "nested-loops-in-list-comprehension"]], "Nested break loops": [[50, "nested-break-loops"]], "Nested continue loops": [[50, "nested-continue-loops"]], "Nested for loops": [[48, "nested-for-loops"]], "Nested while loops": [[49, "nested-while-loops"]], "Network Model (Set of Neurons)": [[8, "network-model-set-of-neurons"]], "Neural Network": [[8, "neural-network"]], "Neural Network (Multilayer Perceptron) Demo": [[19, "neural-network-multilayer-perceptron-demo"], [20, "neural-network-multilayer-perceptron-demo"]], "Neuron Model (Logistic Unit)": [[8, "neuron-model-logistic-unit"]], "Non-Linear Y(X) Dependency (Artificial)": [[10, "non-linear-y-x-dependency-artificial"]], "Non-linear Regression Demo": [[13, "non-linear-regression-demo"]], "Nonlocal Variables": [[76, "nonlocal-variables"]], "Nonlocal variable in a nested function": [[37, "nonlocal-variable-in-a-nested-function"]], "Normal Equation": [[5, "normal-equation"]], "Notebooks with MyST Markdown": [[7, "notebooks-with-myst-markdown"], [110, "notebooks-with-myst-markdown"], [206, "notebooks-with-myst-markdown"]], "NumPy Array Types:": [[150, "numpy-array-types"]], "NumPy Basics": [[149, "numpy-basics"], [149, "id1"]], "Number Data Type in Python": [[52, "number-data-type-in-python"]], "Numeric Literals": [[92, "numeric-literals"]], "Numpy Array basics": [[150, "numpy-array-basics"]], "Numpy Documentation": [[153, "numpy-documentation"]], "Numpy also provides many functions to create arrays:": [[150, "numpy-also-provides-many-functions-to-create-arrays"]], "OBJECT CODE": [[99, "object-code"]], "Object": [[102, "object"]], "Object Default Methods": [[102, "object-default-methods"]], "Object Method": [[102, "object-method"]], "Object Oriented Programming": [[102, "object-oriented-programming"]], "Object Properties": [[103, "object-properties"]], "Old style formatting": [[53, "old-style-formatting"]], "One of the most common errors in deep learning (shape errors)": [[170, "one-of-the-most-common-errors-in-deep-learning-shape-errors"]], "One or more times +": [[40, "one-or-more-times"]], "OpenAI Vanilla Example": [[138, "openai-vanilla-example"]], "Opening Attributes - Real World Example": [[136, "opening-attributes-real-world-example"], [137, "opening-attributes-real-world-example"]], "Opening Files in Python": [[69, "opening-files-in-python"]], "Operations": [[149, "operations"]], "Option #1: Chroma (for local)": [[133, "option-1-chroma-for-local"]], "Option #1: Pinecone": [[142, "option-1-pinecone"]], "Option #2: Chroma": [[142, "option-2-chroma"]], "Option #2: Pinecone (for cloud)": [[133, "option-2-pinecone-for-cloud"]], "Option 1: Loading Image Data Using ImageFolder": [[174, "option-1-loading-image-data-using-imagefolder"]], "Option 2: Loading Image Data with a Custom Dataset": [[174, "option-2-loading-image-data-with-a-custom-dataset"]], "Orthogonality and Parallelism": [[33, "orthogonality-and-parallelism"]], "Other Dictionary Operations": [[56, "other-dictionary-operations"]], "Other Frozenset methods": [[57, "other-frozenset-methods"]], "Other List Operations in Python": [[54, "other-list-operations-in-python"]], "Other Python Set Methods": [[57, "other-python-set-methods"]], "Other Set Operations": [[57, "other-set-operations"]], "Other Tuple Operations": [[55, "other-tuple-operations"]], "Other forms of transforms (data augmentation)": [[174, "other-forms-of-transforms-data-augmentation"]], "Other topics": [[121, "other-topics"]], "Output Parsers Method 1: Prompt Instructions & String Parsing": [[117, "output-parsers-method-1-prompt-instructions-string-parsing"]], "Output Parsers Method 2: OpenAI Fuctions": [[117, "output-parsers-method-2-openai-fuctions"]], "Output String justification": [[95, "output-string-justification"]], "Output formatting": [[95, "output-formatting"]], "Output text alignment specifying a width": [[95, "output-text-alignment-specifying-a-width"]], "Overfitting Problem": [[5, "overfitting-problem"], [6, "overfitting-problem"]], "Overloading Comparison Operators": [[105, "overloading-comparison-operators"]], "Overloading the + Operator": [[105, "overloading-the-operator"]], "Overriding parent method": [[102, "overriding-parent-method"]], "Package manager and virtual environment": [[25, "package-manager-and-virtual-environment"]], "Packing": [[72, "packing"]], "Packing Dictionaries": [[72, "packing-dictionaries"]], "Packing Lists": [[72, "packing-lists"]], "Packing and Unpacking Arguments in Python": [[72, "packing-and-unpacking-arguments-in-python"]], "PairGrid": [[200, "pairgrid"]], "Pandas DataFrame head, tail, at, iat": [[159, "pandas-dataframe-head-tail-at-iat"]], "Parameters": [[5, "parameters"]], "Parameters:": [[156, "parameters"]], "Parent Document Retriever": [[132, "parent-document-retriever"]], "Part 1: with Iris dataset": [[200, "part-1-with-iris-dataset"]], "Part 1: with Tips dataset": [[200, "part-1-with-tips-dataset"]], "Part 1: with Titanic dataset": [[197, "part-1-with-titanic-dataset"]], "Part 2: with Tips dataset": [[197, "part-2-with-tips-dataset"]], "Pass the tweets as examples": [[139, "pass-the-tweets-as-examples"]], "Passing Arguments with Key and Value": [[75, "passing-arguments-with-key-and-value"]], "Performance-speed tradeoff": [[173, "performance-speed-tradeoff"]], "Period .": [[40, "id3"]], "Personalized email generation": [[140, "personalized-email-generation"]], "Pie Chart": [[146, "pie-chart"]], "Pie Chart #1": [[146, "pie-chart-1"]], "Pie Chart #2": [[146, "pie-chart-2"]], "Pie Chart #3": [[146, "pie-chart-3"]], "Placeholders": [[149, "placeholders"]], "Plot Precision/Recall Progress": [[9, "plot-precision-recall-progress"]], "Plot Test Dataset Predictions": [[17, "plot-test-dataset-predictions"], [18, "plot-test-dataset-predictions"], [19, "plot-test-dataset-predictions"], [20, "plot-test-dataset-predictions"]], "Plot feature extractor ViT model loss curves": [[178, "plot-feature-extractor-vit-model-loss-curves"]], "Plot the Clustering Results": [[11, "plot-the-clustering-results"]], "Plot the Data": [[9, "plot-the-data"], [11, "plot-the-data"], [13, "plot-the-data"], [15, "plot-the-data"], [16, "plot-the-data"], [17, "plot-the-data"], [18, "plot-the-data"], [19, "plot-the-data"], [20, "plot-the-data"]], "Plot the Model Predictions": [[12, "plot-the-model-predictions"], [13, "plot-the-model-predictions"], [14, "plot-the-model-predictions"]], "Plot the distribution on the vertical axis:": [[192, "plot-the-distribution-on-the-vertical-axis"]], "Plot the loss curves of Model 0": [[174, "plot-the-loss-curves-of-model-0"]], "Plot the loss curves of Model 1": [[174, "plot-the-loss-curves-of-model-1"]], "Plot the loss curves of our ViT model": [[178, "plot-the-loss-curves-of-our-vit-model"]], "Polymorphism": [[102, "polymorphism"]], "Polynomial Regression": [[5, "polynomial-regression"]], "Positional Arguments (Basic)": [[78, "positional-arguments-basic"]], "Positional min/max": [[170, "positional-min-max"]], "Practice Problem": [[95, "practice-problem"]], "Predict on a custom image with the best model": [[177, "predict-on-a-custom-image-with-the-best-model"]], "Predicting on custom images with a trained PyTorch model": [[174, "predicting-on-custom-images-with-a-trained-pytorch-model"]], "Prepara the Data for Training": [[11, "prepara-the-data-for-training"], [15, "prepara-the-data-for-training"]], "Prepare DataLoader": [[173, "prepare-dataloader"]], "Prepare the Data for Training": [[16, "prepare-the-data-for-training"]], "Prepare transforms for images": [[178, "prepare-transforms-for-images"]], "Preparing data for the pretrained ViT model": [[178, "preparing-data-for-the-pretrained-vit-model"]], "Preparing data to see if our model can model a straight line": [[172, "preparing-data-to-see-if-our-model-can-model-a-straight-line"]], "Prerequisites for learning decorators": [[38, "prerequisites-for-learning-decorators"]], "Print Training Results": [[17, "print-training-results"], [18, "print-training-results"]], "Print blank lines": [[88, "print-blank-lines"]], "Private members of parent class": [[104, "private-members-of-parent-class"]], "Product notation": [[29, "product-notation"]], "Programming Steps Comparision:": [[99, "programming-steps-comparision"]], "Prompt": [[117, "prompt"]], "Prompt Template": [[117, "prompt-template"]], "Prompt Templates": [[130, "prompt-templates"]], "Promptless changes": [[144, "promptless-changes"]], "Prompts - Text generally used as instructions to your model": [[117, "prompts-text-generally-used-as-instructions-to-your-model"]], "Properties": [[29, "properties"], [30, "properties"]], "Properties of identity matrix": [[32, "properties-of-identity-matrix"]], "Properties of matrix addition": [[32, "properties-of-matrix-addition"]], "Properties of matrix determinant": [[32, "properties-of-matrix-determinant"]], "Properties of matrix multiplication": [[32, "properties-of-matrix-multiplication"]], "Properties of matrix subtraction": [[32, "properties-of-matrix-subtraction"]], "Properties of matrix transpose": [[32, "properties-of-matrix-transpose"]], "Properties of scalar multiplication": [[32, "properties-of-scalar-multiplication"]], "Pros and cons of notebooks vs Python scripts": [[175, "pros-and-cons-of-notebooks-vs-python-scripts"]], "Pulling Data From Twitter": [[143, "pulling-data-from-twitter"]], "Pulling Data From Websites": [[143, "pulling-data-from-websites"]], "Pulling Data From YouTube": [[143, "pulling-data-from-youtube"]], "Putting custom image prediction together: building a function": [[174, "putting-custom-image-prediction-together-building-a-function"]], "Putting it all together": [[171, "putting-it-all-together"]], "Putting it all together to create ViT": [[178, "putting-it-all-together-to-create-vit"]], "Putting it all together: from image to embedding": [[178, "putting-it-all-together-from-image-to-embedding"]], "Putting things together by building a multi-class PyTorch model": [[172, "putting-things-together-by-building-a-multi-class-pytorch-model"]], "PyTorch Computer Vision": [[173, "pytorch-computer-vision"]], "PyTorch Custom Datasets": [[174, "pytorch-custom-datasets"]], "PyTorch Experiment Tracking": [[177, "pytorch-experiment-tracking"]], "PyTorch Fundamentals": [[170, "pytorch-fundamentals"]], "PyTorch Going Modular": [[175, "pytorch-going-modular"]], "PyTorch Model Deployment": [[179, "pytorch-model-deployment"]], "PyTorch Neural Network Classification": [[172, "pytorch-neural-network-classification"]], "PyTorch Paper Replicating": [[178, "pytorch-paper-replicating"]], "PyTorch Transfer Learning": [[176, "pytorch-transfer-learning"]], "PyTorch Workflow Fundamentals": [[171, "pytorch-workflow-fundamentals"]], "PyTorch in the wild": [[175, "pytorch-in-the-wild"], [181, "pytorch-in-the-wild"]], "PyTorch model building essentials": [[171, "pytorch-model-building-essentials"]], "PyTorch tensors & NumPy": [[170, "pytorch-tensors-numpy"]], "PyTorch testing loop": [[171, "pytorch-testing-loop"]], "PyTorch training loop": [[171, "pytorch-training-loop"]], "Pydantic Model": [[136, "pydantic-model"]], "Python  Classes and Objects": [[103, "python-classes-and-objects"]], "Python **kwargs": [[41, "python-kwargs"]], "Python *args": [[41, "python-args"]], "Python *args and **kwargs": [[41, "python-args-and-kwargs"]], "Python - filter Function": [[38, "python-filter-function"]], "Python - map Function": [[38, "python-map-function"]], "Python @property decorator": [[39, "python-property-decorator"]], "Python Advanced Topics": [[23, "python-advanced-topics"], [42, "python-advanced-topics"]], "Python Anonymous/lambda Function": [[80, "python-anonymous-lambda-function"]], "Python Applications Area": [[25, "python-applications-area"]], "Python Arbitrary/Variable-length Arguments": [[78, "python-arbitrary-variable-length-arguments"]], "Python AttributeError": [[71, "python-attributeerror"]], "Python Built-In Modules Examples": [[81, "python-built-in-modules-examples"]], "Python Built-in Exceptions": [[71, "python-built-in-exceptions"]], "Python Built-in List Functions": [[54, "python-built-in-list-functions"]], "Python Built-in Tuple Functions": [[55, "python-built-in-tuple-functions"]], "Python Classes and Objects": [[103, "id1"]], "Python Closures": [[37, "python-closures"]], "Python Comments": [[85, "python-comments"], [90, "python-comments"]], "Python Comments Using Strings": [[85, "python-comments-using-strings"]], "Python Comments vs Docstrings": [[85, "python-comments-vs-docstrings"]], "Python Custom Exceptions": [[73, "python-custom-exceptions"]], "Python Data Types": [[23, "python-data-types"], [59, "python-data-types"], [93, "python-data-types"]], "Python DataFrame": [[156, "python-dataframe"]], "Python Date & Time Module": [[23, "python-date-time-module"], [68, "python-date-time-module"]], "Python Decimal": [[52, "python-decimal"]], "Python Decorators": [[38, "python-decorators"]], "Python Default Arguments": [[78, "python-default-arguments"]], "Python Dictionary": [[56, "python-dictionary"]], "Python Dictionary Comprehension": [[56, "python-dictionary-comprehension"]], "Python Dictionary Methods": [[56, "python-dictionary-methods"]], "Python Dictionary {}": [[93, "python-dictionary"]], "Python Directory": [[70, "python-directory"]], "Python Directory and Files Management": [[70, "python-directory-and-files-management"]], "Python Docstrings": [[85, "python-docstrings"]], "Python Errors and Built-in Exceptions": [[71, "python-errors-and-built-in-exceptions"]], "Python Exceptions Handling Using try, except and finally statement": [[72, "python-exceptions-handling-using-try-except-and-finally-statement"]], "Python File I/O": [[69, "python-file-i-o"]], "Python File Methods": [[69, "python-file-methods"]], "Python Files": [[23, "python-files"], [74, "python-files"]], "Python Flow Control": [[23, "python-flow-control"], [51, "python-flow-control"]], "Python Flow-Control (Decision-Making) Statements": [[43, "python-flow-control-decision-making-statements"]], "Python Fractions": [[52, "python-fractions"]], "Python Frozenset": [[57, "python-frozenset"]], "Python Function Arguments": [[78, "python-function-arguments"]], "Python Functions": [[23, "python-functions"], [75, "python-functions"], [87, "python-functions"]], "Python Generator Expression": [[36, "python-generator-expression"]], "Python Generators with a Loop": [[36, "python-generators-with-a-loop"]], "Python Get Current time": [[64, "python-get-current-time"]], "Python Global, Local and Nonlocal variables": [[76, "python-global-local-and-nonlocal-variables"]], "Python Hello, World": [[88, "python-hello-world"]], "Python Import function": [[95, "python-import-function"]], "Python Indentation": [[90, "python-indentation"]], "Python IndexError": [[71, "python-indexerror"]], "Python Infinite Iterators": [[35, "python-infinite-iterators"]], "Python Inheritance": [[104, "python-inheritance"]], "Python Input Using input() function": [[95, "python-input-using-input-function"]], "Python Input, Output and Import": [[95, "python-input-output-and-import"]], "Python Installation": [[25, "python-installation"]], "Python Introduction": [[23, "python-introduction"], [101, "python-introduction"]], "Python Iterators": [[35, "python-iterators"]], "Python KeyError": [[71, "python-keyerror"]], "Python Keyword Arguments": [[78, "python-keyword-arguments"]], "Python Keywords and Identifiers": [[89, "python-keywords-and-identifiers"]], "Python List": [[54, "python-list"]], "Python List Comprehension": [[58, "python-list-comprehension"]], "Python List Methods": [[54, "python-list-methods"]], "Python List Operations": [[54, "python-list-operations"]], "Python List []": [[93, "python-list"]], "Python Literals": [[92, "python-literals"]], "Python Logical Errors (Exceptions)": [[71, "python-logical-errors-exceptions"]], "Python Mathematical Functions": [[83, "python-mathematical-functions"]], "Python Mathematics": [[52, "python-mathematics"]], "Python Matplotlib": [[147, "python-matplotlib"], [148, "python-matplotlib"]], "Python Matplotlib Module": [[23, "python-matplotlib-module"]], "Python Module Search Path": [[81, "python-module-search-path"]], "Python ModuleNotFoundError": [[71, "python-modulenotfounderror"]], "Python Modules": [[81, "python-modules"]], "Python Modules List": [[81, "python-modules-list"]], "Python Multilevel Inheritance": [[104, "python-multilevel-inheritance"]], "Python Multiple Inheritance": [[104, "python-multiple-inheritance"]], "Python NameError": [[71, "python-nameerror"]], "Python Namespace and Scope": [[97, "python-namespace-and-scope"]], "Python Nested if statement": [[47, "python-nested-if-statement"]], "Python NumPy": [[149, "python-numpy"]], "Python NumPy Array:": [[149, "python-numpy-array"], [150, "python-numpy-array"]], "Python NumPy Exercises": [[154, "python-numpy-exercises"]], "Python Numbers": [[93, "python-numbers"]], "Python Numbers, Type Conversion and Mathematics": [[52, "python-numbers-type-conversion-and-mathematics"]], "Python Numpy Module": [[23, "python-numpy-module"], [155, "python-numpy-module"]], "Python OOPs Concepts": [[102, "python-oops-concepts"]], "Python Object Class": [[23, "python-object-class"], [106, "python-object-class"]], "Python Operator Overloading": [[105, "python-operator-overloading"], [105, "id1"]], "Python Operators": [[96, "python-operators"]], "Python Output Using print() function": [[95, "python-output-using-print-function"]], "Python Package": [[84, "python-package"]], "Python Pandas": [[156, "python-pandas"], [167, "python-pandas"], [168, "python-pandas"]], "Python Pandas Module": [[23, "python-pandas-module"], [169, "python-pandas-module"]], "Python Python Generators": [[36, "python-python-generators"]], "Python Random Module": [[82, "python-random-module"]], "Python Recursion": [[79, "python-recursion"]], "Python Recursive Function": [[79, "python-recursive-function"]], "Python RegEx": [[40, "python-regex"]], "Python RegEx Methods": [[40, "python-regex-methods"]], "Python Resources": [[23, "python-resources"]], "Python Seaborn": [[204, "python-seaborn"]], "Python Set Operations": [[57, "python-set-operations"]], "Python Set {}": [[93, "python-set"]], "Python Sets": [[57, "python-sets"]], "Python Single Inheritance": [[104, "python-single-inheritance"]], "Python Special Functions": [[105, "python-special-functions"]], "Python Statement, Indentation and Comments": [[90, "python-statement-indentation-and-comments"]], "Python String Formatting": [[53, "python-string-formatting"]], "Python String Replication Operator (*)": [[53, "python-string-replication-operator"]], "Python Strings": [[25, "python-strings"], [53, "python-strings"], [93, "python-strings"]], "Python Strings Operations": [[53, "python-strings-operations"]], "Python Syntax Errors": [[71, "python-syntax-errors"]], "Python Tuple": [[55, "python-tuple"]], "Python Tuple ()": [[93, "python-tuple"]], "Python Type Conversion and Type Casting": [[94, "python-type-conversion-and-type-casting"]], "Python TypeError": [[71, "python-typeerror"]], "Python User-defined Functions": [[86, "python-user-defined-functions"]], "Python ValueError": [[71, "python-valueerror"]], "Python Variable Scope": [[97, "python-variable-scope"]], "Python Variables": [[91, "python-variables"]], "Python Variables and Constants": [[91, "python-variables-and-constants"]], "Python __doc__ attribute": [[85, "python-doc-attribute"]], "Python break statement": [[50, "python-break-statement"]], "Python continue statement": [[50, "python-continue-statement"]], "Python datetime": [[60, "python-datetime"]], "Python docstrings": [[85, "id1"]], "Python for Loop": [[48, "python-for-loop"]], "Python format datetime": [[60, "python-format-datetime"]], "Python from-import statement": [[81, "python-from-import-statement"]], "Python global Keyword": [[77, "python-global-keyword"]], "Python if statement": [[44, "python-if-statement"]], "Python if-elif-else statement": [[46, "python-if-elif-else-statement"]], "Python if-else statement": [[45, "python-if-else-statement"]], "Python import statement": [[81, "python-import-statement"]], "Python lists": [[25, "python-lists"]], "Python pass statement": [[50, "python-pass-statement"]], "Python sleep()": [[67, "python-sleep"]], "Python strftime()": [[61, "python-strftime"]], "Python strftime() - datetime object to string": [[60, "python-strftime-datetime-object-to-string"]], "Python strptime()": [[62, "python-strptime"]], "Python strptime() - string to datetime": [[60, "python-strptime-string-to-datetime"]], "Python super() function": [[104, "python-super-function"]], "Python time Module": [[66, "python-time-module"]], "Python time.asctime()": [[66, "python-time-asctime"]], "Python time.ctime()": [[66, "python-time-ctime"]], "Python time.gmtime()": [[66, "python-time-gmtime"]], "Python time.localtime()": [[66, "python-time-localtime"]], "Python time.mktime()": [[66, "python-time-mktime"]], "Python time.sleep()": [[66, "python-time-sleep"]], "Python time.strftime()": [[66, "python-time-strftime"]], "Python time.strptime()": [[66, "python-time-strptime"]], "Python time.time()": [[66, "python-time-time"]], "Python timestamp to datetime and vice-versa": [[65, "python-timestamp-to-datetime-and-vice-versa"]], "Python try with else clause": [[72, "python-try-with-else-clause"]], "Python try-finally Clause": [[72, "python-try-finally-clause"]], "Python while Loop": [[49, "python-while-loop"]], "Pytorch": [[184, "pytorch"]], "Q&A: Map Re-Rank": [[129, "q-a-map-re-rank"]], "Quantifier {}": [[40, "quantifier"]], "Query those docs to get your answer back": [[133, "query-those-docs-to-get-your-answer-back"]], "Querying Tabular Data": [[118, "querying-tabular-data"]], "Question & Answering Using Documents As Context": [[118, "question-answering-using-documents-as-context"]], "Quickly add YAML metadata for MyST Notebooks": [[7, "quickly-add-yaml-metadata-for-myst-notebooks"], [110, "quickly-add-yaml-metadata-for-myst-notebooks"], [206, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Quiz time": [[151, "quiz-time"]], "Raise error while renaming a column": [[163, "raise-error-while-renaming-a-column"]], "Raising Exceptions in Python": [[72, "raising-exceptions-in-python"]], "Raising an Exception": [[72, "raising-an-exception"]], "Random Initialization": [[8, "random-initialization"]], "Random number": [[150, "random-number"]], "Random tensors": [[170, "random-tensors"]], "Raw String to ignore escape sequence": [[53, "raw-string-to-ignore-escape-sequence"]], "Reading Data in Pandas": [[167, "reading-data-in-pandas"]], "Reading Files in Python": [[69, "reading-files-in-python"]], "Real World Examples": [[146, "real-world-examples"]], "Recreating non-linear data (red and blue circles)": [[172, "recreating-non-linear-data-red-and-blue-circles"]], "References": [[2, "references"], [4, "references"], [5, "references"], [6, "references"], [8, "references"]], "Regularization": [[5, "regularization"], [6, "regularization"]], "Reloading a module": [[81, "reloading-a-module"]], "Removing a Directory or a File remove() and rmdir() -": [[70, "removing-a-directory-or-a-file-remove-and-rmdir"]], "Removing elements from Dictionary": [[56, "removing-elements-from-dictionary"]], "Removing elements from a set": [[57, "removing-elements-from-a-set"]], "Rename a single column": [[163, "rename-a-single-column"]], "Rename all columns with a list": [[163, "rename-all-columns-with-a-list"]], "Rename column by adding prefix/suffix": [[163, "rename-column-by-adding-prefix-suffix"]], "Rename column by index position": [[163, "rename-column-by-index-position"]], "Rename column in multi-index DataFrame": [[163, "rename-column-in-multi-index-dataframe"]], "Rename column using DataFrame.set_axis()": [[163, "rename-column-using-dataframe-set-axis"]], "Rename column using a function": [[163, "rename-column-using-a-function"]], "Rename columns by removing leading and trailing spaces": [[163, "rename-columns-by-removing-leading-and-trailing-spaces"]], "Rename columns in Pandas DataFrame": [[163, "rename-columns-in-pandas-dataframe"]], "Rename columns in all levels": [[163, "rename-columns-in-all-levels"]], "Rename columns in defined level": [[163, "rename-columns-in-defined-level"]], "Rename columns in place": [[163, "rename-columns-in-place"]], "Rename multiple columns": [[163, "rename-multiple-columns"]], "Renaming a Directory or a File rename() -": [[70, "renaming-a-directory-or-a-file-rename"]], "Replicating Equation 2 with PyTorch layers": [[178, "replicating-equation-2-with-pytorch-layers"]], "Replicating Equation 3 with PyTorch layers": [[178, "replicating-equation-3-with-pytorch-layers"]], "Replicating non-linear activation functions": [[172, "replicating-non-linear-activation-functions"]], "Replicating the ViT paper: an overview": [[178, "replicating-the-vit-paper-an-overview"]], "Reset index and change column name": [[166, "reset-index-and-change-column-name"]], "Reset index and creates new column in level": [[166, "reset-index-and-creates-new-column-in-level"]], "Reset index and name other level": [[166, "reset-index-and-name-other-level"]], "Reset index by level": [[166, "reset-index-by-level"]], "Reset index in pandas DataFrame": [[166, "reset-index-in-pandas-dataframe"]], "Reset index in place": [[166, "reset-index-in-place"]], "Reset index starts from 1": [[166, "reset-index-starts-from-1"]], "Reset index to starts at 0": [[166, "reset-index-to-starts-at-0"]], "Reset index to the range of numbers": [[166, "reset-index-to-the-range-of-numbers"]], "Reset index without new column": [[166, "reset-index-without-new-column"]], "Reset multi-level index": [[166, "reset-multi-level-index"]], "Reshape Data": [[153, "reshape-data"]], "Reshaping, stacking, squeezing and unsqueezing": [[170, "reshaping-stacking-squeezing-and-unsqueezing"]], "Residplot()": [[191, "residplot"]], "Resources": [[148, "resources"], [155, "resources"], [169, "resources"], [184, "resources"], [204, "resources"]], "Retrievers": [[117, "retrievers"]], "Return Boolean Values": [[75, "return-boolean-values"]], "Return Multiple Values": [[75, "return-multiple-values"]], "Return Single Value": [[75, "return-single-value"]], "Return a List": [[75, "return-a-list"]], "Reverse for loop": [[48, "reverse-for-loop"]], "Reverse for loop using range()": [[48, "reverse-for-loop-using-range"]], "Reverse while loop": [[49, "reverse-while-loop"]], "Rinse and Repeat: Loop Through Companies": [[140, "rinse-and-repeat-loop-through-companies"]], "Rules and Naming Convention for Variables and constants": [[91, "rules-and-naming-convention-for-variables-and-constants"]], "Rules for writing identifiers": [[89, "rules-for-writing-identifiers"]], "Rules of global Keyword": [[77, "rules-of-global-keyword"]], "Running a notebook in cell mode": [[180, "running-a-notebook-in-cell-mode"]], "Running our FoodVision Mini demo locally": [[179, "running-our-foodvision-mini-demo-locally"]], "Running tensors on GPUs (and making faster computations)": [[170, "running-tensors-on-gpus-and-making-faster-computations"]], "Running the \u201cHello, World!\u201d Program": [[88, "running-the-hello-world-program"]], "Salary": [[137, "salary"]], "Sample Roles and Directives": [[109, "sample-roles-and-directives"], [113, "sample-roles-and-directives"]], "Save and load best performing model": [[173, "save-and-load-best-performing-model"]], "Save feature extractor ViT model and check file size": [[178, "save-feature-extractor-vit-model-and-check-file-size"]], "Saving EffNetB2 feature extractor": [[179, "saving-effnetb2-feature-extractor"]], "Saving ViT feature extractor": [[179, "saving-vit-feature-extractor"]], "Saving a PyTorch model\u2019s state_dict()": [[171, "saving-a-pytorch-models-state-dict"]], "Saving and loading a PyTorch model": [[171, "saving-and-loading-a-pytorch-model"]], "Saving and loading a model": [[171, "saving-and-loading-a-model"]], "Saving as JSON File": [[69, "saving-as-json-file"]], "Saving our Data (Exporting into Desired Format)": [[167, "saving-our-data-exporting-into-desired-format"]], "Scalar": [[170, "scalar"]], "Scalar multiplication": [[32, "scalar-multiplication"], [33, "scalar-multiplication"]], "Scatter Plot and Joint Plot": [[190, "scatter-plot-and-joint-plot"]], "Schema - Nuts and Bolts of working with Large Language Models (LLMs)": [[117, "schema-nuts-and-bolts-of-working-with-large-language-models-llms"]], "Seaborn Color Palettes": [[188, "seaborn-color-palettes"]], "Seaborn Lmplots:": [[189, "seaborn-lmplots"]], "Seaborn Regplots:": [[189, "seaborn-regplots"]], "Seaborn: Box Plot": [[195, "seaborn-box-plot"]], "Seaborn: Categorical Data Plots": [[193, "seaborn-categorical-data-plots"]], "Seaborn: Strip Plot": [[194, "seaborn-strip-plot"]], "Seaborn: Violin Plot": [[196, "seaborn-violin-plot"]], "Select best threshold": [[9, "select-best-threshold"]], "Select bottom n rows in pandas DataFrame": [[159, "select-bottom-n-rows-in-pandas-dataframe"]], "Select bottom rows except for first n rows": [[159, "select-bottom-rows-except-for-first-n-rows"]], "Select bottom rows from the multi index DataFrame": [[159, "select-bottom-rows-from-the-multi-index-dataframe"]], "Select top n rows in pandas DataFrame": [[159, "select-top-n-rows-in-pandas-dataframe"]], "Select top rows except for last n rows": [[159, "select-top-rows-except-for-last-n-rows"]], "Select top rows from multi-index DataFrames": [[159, "select-top-rows-from-multi-index-dataframes"]], "Select value using row and column labels using DataFrame.at": [[159, "select-value-using-row-and-column-labels-using-dataframe-at"]], "Select value using row and column position using DataFrame.iat": [[159, "select-value-using-row-and-column-position-using-dataframe-iat"]], "Selection": [[156, "selection"]], "Self Can Be Avoided": [[107, "self-can-be-avoided"]], "Self Is Here To Stay": [[107, "self-is-here-to-stay"]], "Self Querying": [[132, "self-querying"]], "Series": [[156, "series"]], "Server Operational Parameters": [[10, "server-operational-parameters"]], "Set Difference": [[57, "set-difference"]], "Set Intersection": [[57, "set-intersection"]], "Set Symmetric Difference": [[57, "set-symmetric-difference"]], "Set Union": [[57, "set-union"]], "Set index but keep column": [[165, "set-index-but-keep-column"]], "Set index by column number": [[165, "set-index-by-column-number"]], "Set index by keeping old index": [[165, "set-index-by-keeping-old-index"]], "Set index in pandas DataFrame": [[165, "set-index-in-pandas-dataframe"]], "Set index in place": [[165, "set-index-in-place"]], "Set index using a Python range": [[165, "set-index-using-a-python-range"]], "Set index using a column": [[165, "set-index-using-a-column"]], "Set index using a column with duplicates": [[165, "set-index-using-a-column-with-duplicates"]], "Set index using a list": [[165, "set-index-using-a-list"]], "Set index using multiple columns": [[165, "set-index-using-multiple-columns"]], "Set multi-index using a list and column": [[165, "set-multi-index-using-a-list-and-column"]], "Set multi-index using two Python series": [[165, "set-multi-index-using-two-python-series"]], "Set specific value in pandas DataFrame": [[159, "set-specific-value-in-pandas-dataframe"], [159, "id1"]], "Setting up a pretrained model": [[176, "setting-up-a-pretrained-model"]], "Setting up a series of modelling experiments": [[177, "setting-up-a-series-of-modelling-experiments"]], "Setting up training code for our ViT model": [[178, "setting-up-training-code-for-our-vit-model"]], "Setup a loss function and optimizer for model_2": [[173, "setup-a-loss-function-and-optimizer-for-model-2"]], "Setup device agnostic-code (for using a GPU if there is one)": [[173, "setup-device-agnostic-code-for-using-a-gpu-if-there-is-one"]], "Setup loss function and optimizer": [[172, "setup-loss-function-and-optimizer"]], "Setup loss, optimizer and evaluation metrics": [[173, "setup-loss-optimizer-and-evaluation-metrics"], [173, "id1"]], "Shortcut for if statement (Short-hand if or one-line if)": [[44, "shortcut-for-if-statement-short-hand-if-or-one-line-if"]], "Shortcut of if else (Short Hand if \u2026 else or One line if else)": [[45, "shortcut-of-if-else-short-hand-if-else-or-one-line-if-else"]], "Significance of random seeding": [[170, "significance-of-random-seeding"]], "Simple Q&A Example": [[118, "simple-q-a-example"]], "Single Parameter:": [[75, "single-parameter"]], "Single-line docstrings in Python": [[85, "single-line-docstrings-in-python"]], "Slicing and Subsetting": [[149, "slicing-and-subsetting"]], "Solution to Overfitting": [[5, "solution-to-overfitting"], [6, "solution-to-overfitting"]], "Sorting/Describing Data": [[167, "sorting-describing-data"]], "Sources": [[135, "sources"]], "Special Sequences": [[40, "special-sequences"]], "Special literals": [[92, "special-literals"]], "Special operators": [[96, "special-operators"]], "Specify Pattern Using RegEx": [[40, "specify-pattern-using-regex"]], "Specifying a sign while displaying output numbers": [[95, "specifying-a-sign-while-displaying-output-numbers"]], "Split data into training and test sets": [[171, "split-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Sets": [[12, "split-the-data-into-training-and-test-sets"], [17, "split-the-data-into-training-and-test-sets"], [18, "split-the-data-into-training-and-test-sets"], [19, "split-the-data-into-training-and-test-sets"], [20, "split-the-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Subsets": [[14, "split-the-data-into-training-and-test-subsets"]], "Spreading in Python": [[72, "spreading-in-python"]], "Square Brackets []": [[40, "id2"]], "Statement": [[90, "statement"]], "Statistics": [[153, "statistics"], [156, "statistics"]], "Step 1: Extract Topic Titles & Short Description": [[142, "step-1-extract-topic-titles-short-description"]], "Step 2: Expand on the topics you found": [[142, "step-2-expand-on-the-topics-you-found"]], "Stepping through nn.Conv2d()": [[173, "stepping-through-nn-conv2d"]], "Stepping through nn.MaxPool2d()": [[173, "stepping-through-nn-maxpool2d"]], "String Concatenation Operator (+)": [[53, "string-concatenation-operator"]], "String literals (unicode character strings)": [[92, "string-literals-unicode-character-strings"]], "Structured Data - Turn your LLM output into structured data": [[142, "structured-data-turn-your-llm-output-into-structured-data"]], "Summaries Of Longer Text": [[118, "summaries-of-longer-text"]], "Summaries Of Short Text": [[118, "summaries-of-short-text"]], "Summarization": [[118, "summarization"]], "Summarize: Map Reduce": [[129, "summarize-map-reduce"]], "Summarize: Refine": [[129, "summarize-refine"]], "Summarize: Stuff": [[129, "summarize-stuff"]], "Summary": [[53, "summary"], [54, "summary"], [55, "summary"], [56, "summary"], [57, "summary"], [156, "summary"]], "Summary - MetaCharacters": [[40, "summary-metacharacters"]], "Summary:": [[151, "summary"], [156, "id1"]], "Summation notation": [[30, "summation-notation"]], "Swarm Plot": [[193, "swarm-plot"], [194, "swarm-plot"]], "Syntax :": [[45, "syntax"], [48, "syntax"]], "Syntax of List Comprehension": [[58, "syntax-of-list-comprehension"]], "Syntax:": [[44, "syntax"], [46, "syntax"], [47, "syntax"], [49, "syntax"]], "Table of Contents": [[119, "table-of-contents"]], "Tensor datatypes": [[170, "tensor-datatypes"]], "Tensors": [[170, "tensors"]], "Terminology": [[178, "terminology"]], "Text": [[117, "text"]], "Text Embedding Model": [[117, "text-embedding-model"]], "Text Splitters": [[117, "text-splitters"]], "The @property Decorator": [[39, "the-property-decorator"]], "The Algorithm": [[4, "the-algorithm"]], "The Custom Prompts - Customize your prompt to fit your use case": [[142, "the-custom-prompts-customize-your-prompt-to-fit-your-use-case"]], "The DataFrame.drop() function": [[160, "the-dataframe-drop-function"]], "The DataFrame.drop_duplicates() function": [[161, "the-dataframe-drop-duplicates-function"]], "The DataFrame.dropna() function": [[162, "the-dataframe-dropna-function"]], "The DataFrame.rename() function": [[163, "the-dataframe-rename-function"]], "The DataFrame.reset_index() function": [[166, "the-dataframe-reset-index-function"]], "The DataFrame.set_index() function": [[165, "the-dataframe-set-index-function"]], "The DataFrame.to_dict() function": [[164, "the-dataframe-to-dict-function"]], "The Difference\u2026": [[44, "the-difference"]], "The First Pass - Run through your text and extract the topics per your custom prompts": [[142, "the-first-pass-run-through-your-text-and-extract-the-topics-per-your-custom-prompts"]], "The LayerNorm (LN) layer": [[178, "the-layernorm-ln-layer"]], "The MLP layer(s)": [[178, "the-mlp-layer-s"]], "The Multi-Head Self Attention (MSA) layer": [[178, "the-multi-head-self-attention-msa-layer"]], "The Set Up - Create your LLMs and get data": [[142, "the-set-up-create-your-llms-and-get-data"]], "The balance between overfitting and underfitting": [[174, "the-balance-between-overfitting-and-underfitting"]], "The difference\u2026": [[45, "the-difference"]], "The dir() built-in function": [[81, "the-dir-built-in-function"]], "The except Clause with Multiple Exceptions": [[72, "the-except-clause-with-multiple-exceptions"]], "The except Clause with No Exceptions": [[72, "the-except-clause-with-no-exceptions"]], "The file Object Attributes": [[69, "the-file-object-attributes"]], "The format() Method for Formatting Strings": [[53, "the-format-method-for-formatting-strings"]], "The from_dict() function": [[157, "the-from-dict-function"]], "The missing piece: non-linearity": [[172, "the-missing-piece-non-linearity"]], "The property Class": [[39, "the-property-class"]], "Things to Remember:": [[41, "things-to-remember"]], "Things to note": [[175, "things-to-note"]], "Time Series & LV Plot": [[199, "time-series-lv-plot"]], "Time-Series Plot": [[199, "time-series-plot"]], "To Do": [[134, "to-do"]], "To customize the display of DataFrame while printing": [[156, "to-customize-the-display-of-dataframe-while-printing"]], "Toolkit": [[117, "toolkit"]], "Tools": [[117, "tools"]], "Tools required to work with neural networks": [[207, "tools-required-to-work-with-neural-networks"]], "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80": [[116, "tools-to-get-a-launch"]], "Top-K Similarity Search - Ask A Book A Question": [[133, "top-k-similarity-search-ask-a-book-a-question"]], "Topic Modeling With Language Models": [[142, "topic-modeling-with-language-models"]], "Topics on Learning Data Science and Machine Learning": [[208, "topics-on-learning-data-science-and-machine-learning"]], "Train and Evaluate Model 0": [[174, "train-and-evaluate-model-0"]], "Train feature extractor ViT model": [[178, "train-feature-extractor-vit-model"]], "Train model": [[172, "train-model"], [176, "train-model"]], "Train model and track results": [[177, "train-model-and-track-results"]], "Train the model": [[171, "train-the-model"]], "Train, evaluate and save the model": [[180, "train-evaluate-and-save-the-model"], [181, "train-evaluate-and-save-the-model"]], "Train, evaluate and save the model (script mode)": [[181, "train-evaluate-and-save-the-model-script-mode"]], "Train, evaluate and save the model (train.py)": [[175, "train-evaluate-and-save-the-model-train-py"]], "Training": [[171, "training"]], "Training EffNetB2 feature extractor": [[179, "training-effnetb2-feature-extractor"]], "Training Set": [[6, "training-set"]], "Training ViT feature extractor": [[179, "training-vit-feature-extractor"]], "Training a model with non-linearity": [[172, "training-a-model-with-non-linearity"]], "Training and testing model_2 using our training and test functions": [[173, "training-and-testing-model-2-using-our-training-and-test-functions"]], "Training our ViT model": [[178, "training-our-vit-model"]], "Transfer statements": [[43, "transfer-statements"]], "Transform Datasets and create DataLoaders": [[177, "transform-datasets-and-create-dataloaders"]], "Transforming data": [[174, "transforming-data"]], "Transforming data with torchvision.transforms": [[174, "transforming-data-with-torchvision-transforms"]], "Try a forward pass on a single image (to test the model)": [[174, "try-a-forward-pass-on-a-single-image-to-test-the-model"]], "Tuple Methods": [[55, "tuple-methods"]], "Tuple Operations": [[55, "tuple-operations"]], "Turn custom loaded images into DataLoader\u2019s": [[174, "turn-custom-loaded-images-into-dataloaders"]], "Turn data into tensors and create train and test splits": [[172, "turn-data-into-tensors-and-create-train-and-test-splits"]], "Turn images into DataLoader\u2019s": [[178, "turn-images-into-dataloaders"]], "Turn loaded images into DataLoader\u2019s": [[174, "turn-loaded-images-into-dataloaders"]], "Turning a single image into patches": [[178, "turning-a-single-image-into-patches"]], "Turning our EffNetB2 model into a Python script (model.py)": [[179, "turning-our-effnetb2-model-into-a-python-script-model-py"]], "Turning our FoodVision Mini Gradio Demo into a deployable app": [[179, "turning-our-foodvision-mini-gradio-demo-into-a-deployable-app"]], "Turning our FoodVision Mini Gradio app into a Python script (app.py)": [[179, "turning-our-foodvision-mini-gradio-app-into-a-python-script-app-py"]], "Turning the ViT patch embedding layer into a PyTorch module": [[178, "turning-the-vit-patch-embedding-layer-into-a-pytorch-module"]], "Twitter Reply Bot": [[128, "twitter-reply-bot"]], "Two Parameter:": [[75, "two-parameter"]], "Type Conversion": [[52, "type-conversion"]], "Type Conversion of Numbers in Python": [[92, "type-conversion-of-numbers-in-python"]], "Types Of Inheritance": [[104, "types-of-inheritance"]], "Types of Constructors": [[103, "types-of-constructors"]], "Types of Functions": [[75, "types-of-functions"]], "Typical workflow for a ML system": [[1, "typical-workflow-for-a-ml-system"]], "Unit vector": [[33, "unit-vector"]], "Univariate Linear Regression Demo": [[14, "univariate-linear-regression-demo"]], "Universal  Array Functions (Mathematical operations)": [[152, "universal-array-functions-mathematical-operations"]], "Unpacking": [[72, "unpacking"]], "Unpacking Dictionaries": [[72, "unpacking-dictionaries"]], "Unpacking List or a Tuple": [[72, "unpacking-list-or-a-tuple"]], "Unpacking Lists": [[72, "unpacking-lists"]], "Unpacking a sequence into separate variables": [[98, "unpacking-a-sequence-into-separate-variables"]], "Update the train() function to include a writer parameter": [[177, "update-the-train-function-to-include-a-writer-parameter"]], "Uploading to Hugging Face": [[179, "uploading-to-hugging-face"]], "Use Cases:": [[142, "use-cases"]], "Use __new__ or __init__?": [[107, "use-new-or-init"]], "Use lambda expressions to rename": [[163, "use-lambda-expressions-to-rename"]], "Use of Python Generators": [[36, "use-of-python-generators"]], "Use of global Keyword": [[77, "use-of-global-keyword"]], "Use of inheritance": [[102, "use-of-inheritance"]], "Use of lambda Function in python": [[80, "use-of-lambda-function-in-python"]], "Use torchinfo to get an idea of the shapes going through our model": [[174, "use-torchinfo-to-get-an-idea-of-the-shapes-going-through-our-model"]], "Using An Agent": [[127, "using-an-agent"]], "Using Control Statement in for loops in Python": [[48, "using-control-statement-in-for-loops-in-python"]], "Using Control Statement in while loops in Python": [[49, "using-control-statement-in-while-loops-in-python"]], "Using Embeddings": [[118, "using-embeddings"]], "Using Getters and Setters": [[39, "using-getters-and-setters"]], "Using LLMs To Summarize Personal Research": [[143, "using-llms-to-summarize-personal-research"]], "Using LangChain\u2019s Response Schema": [[118, "using-langchains-response-schema"]], "Using Langchain": [[119, "using-langchain"]], "Using Python inside Jupyter notebook": [[25, "using-python-inside-jupyter-notebook"]], "Using a code editor of your choice": [[25, "using-a-code-editor-of-your-choice"]], "Using a pretrained ViT from torchvision.models on the same dataset": [[178, "using-a-pretrained-vit-from-torchvision-models-on-the-same-dataset"]], "Using drop with axis='columns' or axis=1": [[160, "using-drop-with-axis-columns-or-axis-1"]], "Using python in a jupyter notebook": [[25, "using-python-in-a-jupyter-notebook"]], "Using r prefix before RegEx": [[40, "using-r-prefix-before-regex"]], "Using rename with axis='columns' or axis=1": [[163, "using-rename-with-axis-columns-or-axis-1"]], "Using the help() Function for Docstrings": [[85, "using-the-help-function-for-docstrings"]], "ValueError in strptime()": [[62, "valueerror-in-strptime"]], "Vanilla Extraction": [[118, "vanilla-extraction"]], "Variable Function Arguments": [[78, "variable-function-arguments"]], "Vector addition": [[33, "vector-addition"]], "Vector operations": [[33, "vector-operations"]], "Vector subtraction": [[33, "vector-subtraction"]], "VectorStores": [[117, "vectorstores"]], "Vectorized Implementation of Forward Propagation": [[8, "vectorized-implementation-of-forward-propagation"]], "Vectors": [[170, "vectors"]], "View experiments in TensorBoard": [[177, "view-experiments-in-tensorboard"]], "View our model\u2019s results in TensorBoard": [[177, "view-our-models-results-in-tensorboard"]], "Viewing/Inspecting Data": [[156, "viewing-inspecting-data"]], "Visualize a single image": [[178, "visualize-a-single-image"]], "Visualize an image": [[174, "visualize-an-image"]], "Visualize the Fit": [[9, "visualize-the-fit"]], "Visualizing our data": [[173, "visualizing-our-data"]], "Visualizing the speed vs. performance tradeoff": [[179, "visualizing-the-speed-vs-performance-tradeoff"]], "Ways to deploy a machine learning model": [[179, "ways-to-deploy-a-machine-learning-model"]], "Welcome": [[209, "welcome"]], "What Happens Internally?": [[107, "what-happens-internally"]], "What are lambda functions in Python?": [[80, "what-are-lambda-functions-in-python"]], "What are modules in Python?": [[81, "what-are-modules-in-python"]], "What are packages?": [[84, "what-are-packages"]], "What are user-defined functions in Python?": [[86, "what-are-user-defined-functions-in-python"]], "What can PyTorch be used for?": [[170, "what-can-pytorch-be-used-for"]], "What experiments are we going to run?": [[177, "what-experiments-are-we-going-to-run"]], "What has script mode got to do with PyTorch?": [[181, "what-has-script-mode-got-to-do-with-pytorch"]], "What is Compiler?": [[99, "what-is-compiler"]], "What is DataFrame in Pandas": [[156, "what-is-dataframe-in-pandas"]], "What is Dictionary in Python?": [[56, "what-is-dictionary-in-python"]], "What is Distribution Plots?": [[192, "what-is-distribution-plots"]], "What is Hugging Face Spaces?": [[179, "what-is-hugging-face-spaces"]], "What is Interpreter?": [[99, "what-is-interpreter"]], "What is LangChain?": [[117, "what-is-langchain"], [118, "what-is-langchain"]], "What is List in Python?": [[54, "what-is-list-in-python"]], "What is Machine Learning? \ud83e\udde0": [[1, "what-is-machine-learning"]], "What is MyST?": [[21, "what-is-myst"], [109, "what-is-myst"], [113, "what-is-myst"]], "What is Name in Python?": [[97, "what-is-name-in-python"]], "What is PyTorch?": [[170, "what-is-pytorch"]], "What is Set in Python?": [[57, "what-is-set-in-python"]], "What is String in Python?": [[53, "what-is-string-in-python"]], "What is Tuple in Python?": [[55, "what-is-tuple-in-python"]], "What is a Namespace in Python?": [[97, "what-is-a-namespace-in-python"]], "What is a classification problem?": [[172, "what-is-a-classification-problem"]], "What is a custom dataset?": [[174, "what-is-a-custom-dataset"]], "What is a function in Python?": [[75, "what-is-a-function-in-python"]], "What is a machine learning research paper?": [[178, "what-is-a-machine-learning-research-paper"]], "What is a matrix?": [[32, "what-is-a-matrix"]], "What is a vector?": [[33, "what-is-a-vector"]], "What is cell mode?": [[180, "what-is-cell-mode"]], "What is cluster map?": [[203, "what-is-cluster-map"]], "What is experiment tracking?": [[177, "what-is-experiment-tracking"]], "What is for loop in Python?": [[48, "what-is-for-loop-in-python"]], "What is global keyword?": [[77, "what-is-global-keyword"]], "What is going modular?": [[175, "what-is-going-modular"]], "What is heat map?": [[202, "what-is-heat-map"]], "What is hstack?": [[153, "what-is-hstack"]], "What is machine learning model deployment?": [[179, "what-is-machine-learning-model-deployment"]], "What is math module in Python?": [[83, "what-is-math-module-in-python"]], "What is paper replicating?": [[178, "what-is-paper-replicating"]], "What is recursion?": [[79, "what-is-recursion"]], "What is script mode?": [[181, "what-is-script-mode"]], "What is self in Python?": [[107, "what-is-self-in-python"]], "What is transfer learning?": [[176, "what-is-transfer-learning"]], "What is vstack?": [[153, "what-is-vstack"]], "What is while loop in Python?": [[49, "what-is-while-loop-in-python"]], "What kind of experiments should you run?": [[177, "what-kind-of-experiments-should-you-run"]], "What model should I use?": [[173, "what-model-should-i-use"]], "What our training setup is missing": [[178, "what-our-training-setup-is-missing"]], "What should an ideal loss curve look like?": [[174, "what-should-an-ideal-loss-curve-look-like"]], "What we\u2019re going to cover": [[171, "what-were-going-to-cover"], [172, "what-were-going-to-cover"], [173, "what-were-going-to-cover"], [174, "what-were-going-to-cover"], [175, "what-were-going-to-cover"], [176, "what-were-going-to-cover"], [177, "what-were-going-to-cover"], [178, "what-were-going-to-cover"], [179, "what-were-going-to-cover"], [181, "what-were-going-to-cover"]], "What we\u2019re going to cover in this module": [[170, "what-were-going-to-cover-in-this-module"]], "What we\u2019re working towards": [[175, "what-were-working-towards"]], "What\u2019s inside datetime?": [[60, "whats-inside-datetime"]], "What\u2019s the difference between this notebook (Part 1) and the script mode notebook (Part 2)?": [[180, "whats-the-difference-between-this-notebook-part-1-and-the-script-mode-notebook-part-2"]], "What\u2019s the difference between this notebook (Part 2) and the cell mode notebook (Part 1)?": [[181, "whats-the-difference-between-this-notebook-part-2-and-the-cell-mode-notebook-part-1"]], "When do we have closures?": [[37, "when-do-we-have-closures"]], "When to use Decimal instead of float?": [[52, "when-to-use-decimal-instead-of-float"]], "When to use closures?": [[37, "when-to-use-closures"]], "Where can you find code examples for machine learning research papers?": [[178, "where-can-you-find-code-examples-for-machine-learning-research-papers"]], "Where can you get help?": [[175, "where-can-you-get-help"], [176, "where-can-you-get-help"]], "Where does computer vision get used?": [[173, "where-does-computer-vision-get-used"]], "Where to find pretrained models": [[176, "where-to-find-pretrained-models"]], "Where\u2019s it going to go?": [[179, "wheres-it-going-to-go"]], "Which pretrained model should you use?": [[176, "which-pretrained-model-should-you-use"]], "While loop in Python FAQs": [[49, "while-loop-in-python-faqs"]], "Who uses PyTorch?": [[170, "who-uses-pytorch"]], "Why LangChain?": [[117, "why-langchain"], [118, "why-langchain"]], "Why Learn Machine Learning? \ud83e\udd14": [[1, "why-learn-machine-learning"]], "Why Learn Python?": [[23, "why-learn-python"]], "Why and When to use while loop in Python": [[49, "why-and-when-to-use-while-loop-in-python"]], "Why deploy a machine learning model?": [[179, "why-deploy-a-machine-learning-model"]], "Why is self explicitly defined everytime?": [[107, "why-is-self-explicitly-defined-everytime"]], "Why replicate a machine learning research paper?": [[178, "why-replicate-a-machine-learning-research-paper"]], "Why should we use Tuple? (Advantages of Tuple)": [[55, "why-should-we-use-tuple-advantages-of-tuple"]], "Why super() keyword": [[104, "why-super-keyword"]], "Why this website ?": [[0, "why-this-website"]], "Why track experiments?": [[177, "why-track-experiments"]], "Why two parts?": [[175, "why-two-parts"]], "Why use NumPy?": [[149, "why-use-numpy"]], "Why use PyTorch?": [[170, "why-use-pytorch"]], "Why use a pretrained model?": [[178, "why-use-a-pretrained-model"]], "Why use for loop?": [[48, "why-use-for-loop"]], "Why use transfer learning?": [[176, "why-use-transfer-learning"]], "Why would you want to go modular?": [[175, "why-would-you-want-to-go-modular"]], "Wide format (untidy)": [[202, "wide-format-untidy"]], "With Streaming": [[130, "with-streaming"]], "Work in progress": [[108, "work-in-progress"]], "Working With Lists": [[137, "working-with-lists"]], "Working of for loop for Iterators": [[35, "working-of-for-loop-for-iterators"]], "Working with large amounts of data": [[167, "working-with-large-amounts-of-data"]], "World Happiness Report 2017": [[10, "world-happiness-report-2017"]], "Wrap up": [[81, "wrap-up"]], "Write your custom prompt templates": [[140, "write-your-custom-prompt-templates"]], "Writing the \u201cHello, World!\u201d Program": [[72, "writing-the-hello-world-program"]], "Writing to Files in Python": [[69, "writing-to-files-in-python"]], "Zapier Natural Language Actions API": [[127, "zapier-natural-language-actions-api"]], "Zero or more times *": [[40, "zero-or-more-times"]], "Zero or one time ?": [[40, "zero-or-one-time"]], "Zeros and ones": [[170, "zeros-and-ones"]], "Zip": [[72, "zip"]], "[] . ^ $ * + ? {} () \\ |": [[40, "id1"]], "\\A - Matches if the specified characters are at the start of a string.": [[40, "a-matches-if-the-specified-characters-are-at-the-start-of-a-string"]], "\\B - Opposite of \\b. Matches if the specified characters are not at the beginning or end of a word.": [[40, "b-opposite-of-b-matches-if-the-specified-characters-are-not-at-the-beginning-or-end-of-a-word"]], "\\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \\t\\n\\r\\f\\v].": [[40, "s-matches-where-a-string-contains-any-non-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\W - Matches any non-alphanumeric character. Equivalent to [^a-zA-Z0-9_].": [[40, "w-matches-any-non-alphanumeric-character-equivalent-to-a-za-z0-9"]], "\\Z - Matches if the specified characters are at the end of a string.": [[40, "z-matches-if-the-specified-characters-are-at-the-end-of-a-string"]], "\\b - Matches if the specified characters are at the beginning or end of a word.": [[40, "b-matches-if-the-specified-characters-are-at-the-beginning-or-end-of-a-word"]], "\\d - Matches any non-decimal digit. Equivalent to [^0-9]": [[40, "d-matches-any-non-decimal-digit-equivalent-to-0-9"]], "\\s - Matches where a string contains any whitespace character. Equivalent to [ \\t\\n\\r\\f\\v].": [[40, "s-matches-where-a-string-contains-any-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.": [[40, "w-matches-any-alphanumeric-character-digits-and-alphabets-equivalent-to-a-za-z0-9-by-the-way-underscore-is-also-considered-an-alphanumeric-character"]], "__init__() is not a constructor": [[107, "init-is-not-a-constructor"]], "a) break in for loop": [[48, "a-break-in-for-loop"]], "a) break in while loop": [[49, "a-break-in-while-loop"]], "all(dict) - The all() function returns True when all elements in the given iterable are true. If not, it returns False.": [[56, "all-dict-the-all-function-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "all(list) - The method all() method returns True when all elements in the given iterable are true. If not, it returns False.": [[54, "all-list-the-method-all-method-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "any(dict) - The any() function returns True if any element of an iterable is True. If not, any() returns False.": [[56, "any-dict-the-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "any(list) - any() function returns True if any element of an iterable is True. If not, any() returns False.": [[54, "any-list-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "append() - The append() method adds an item to the end of the list.": [[54, "append-the-append-method-adds-an-item-to-the-end-of-the-list"]], "arange()": [[153, "arange"]], "asarray()": [[153, "asarray"]], "b) continue in for loop": [[48, "b-continue-in-for-loop"]], "b) continue in while loop": [[49, "b-continue-in-while-loop"]], "boxplot() and violinplot()": [[197, "boxplot-and-violinplot"]], "c) pass in for loop": [[48, "c-pass-in-for-loop"]], "c) pass in while loop": [[49, "c-pass-in-while-loop"]], "clear() - The clear() method removes all items from the list.": [[54, "clear-the-clear-method-removes-all-items-from-the-list"]], "clear() - The method clear() removes all items from the dictionary.": [[56, "clear-the-method-clear-removes-all-items-from-the-dictionary"]], "continue statement in while loop": [[50, "continue-statement-in-while-loop"]], "continue statement with else statements": [[50, "continue-statement-with-else-statements"]], "copy()  - The copy() method returns a shallow copy of the list.": [[54, "copy-the-copy-method-returns-a-shallow-copy-of-the-list"]], "copy() - The method copy() returns a shallow copy of the dictionary.": [[56, "copy-the-method-copy-returns-a-shallow-copy-of-the-dictionary"]], "count() - The count() method returns the number of times the specified element appears in the list.": [[54, "count-the-count-method-returns-the-number-of-times-the-specified-element-appears-in-the-list"]], "datetime.date Class": [[60, "datetime-date-class"]], "datetime.datetime": [[60, "datetime-datetime"]], "datetime.time": [[60, "datetime-time"]], "datetime.timedelta": [[60, "datetime-timedelta"]], "extend() - The extend() method adds all the elements of an iterable (list, tuple, string etc.) to the end of the list.": [[54, "extend-the-extend-method-adds-all-the-elements-of-an-iterable-list-tuple-string-etc-to-the-end-of-the-list"]], "for  loop in one line": [[48, "for-loop-in-one-line"]], "for loop inside for loop": [[48, "for-loop-inside-for-loop"]], "for loop inside while loop": [[49, "for-loop-inside-while-loop"]], "for loop with else": [[48, "for-loop-with-else"]], "for loop with if-else": [[48, "for-loop-with-if-else"]], "for loop with range() function": [[48, "for-loop-with-range-function"]], "fromkeys() - The method fromkeys() creates a new dictionary with keys from seq and values set to value.": [[56, "fromkeys-the-method-fromkeys-creates-a-new-dictionary-with-keys-from-seq-and-values-set-to-value"]], "heatmap": [[202, "heatmap"]], "heatmap colors": [[202, "heatmap-colors"]], "heatmap data": [[202, "heatmap-data"]], "if-elif-else statements and Logical Operator": [[46, "if-elif-else-statements-and-logical-operator"]], "if-elif-else statements or Logical Operator": [[46, "if-elif-else-statements-or-logical-operator"]], "if-elif-else statements with logical operators": [[46, "if-elif-else-statements-with-logical-operators"]], "import all names": [[81, "import-all-names"]], "import multiple modules": [[81, "import-multiple-modules"]], "import with renaming": [[81, "import-with-renaming"]], "index() - The index() method returns the index of the specified element in the list.": [[54, "index-the-index-method-returns-the-index-of-the-specified-element-in-the-list"]], "insert() - The insert() method inserts an element to the list at the specified index.": [[54, "insert-the-insert-method-inserts-an-element-to-the-list-at-the-specified-index"]], "issubclass()": [[104, "issubclass"]], "itmes() - The method items() returns a list of dict\u2019s (key, value) tuple pairs.": [[56, "itmes-the-method-items-returns-a-list-of-dicts-key-value-tuple-pairs"]], "keys() - The method keys() returns a list of all the available keys in the dictionary.": [[56, "keys-the-method-keys-returns-a-list-of-all-the-available-keys-in-the-dictionary"]], "lambda function use with filter()": [[80, "lambda-function-use-with-filter"]], "lambda function with map()": [[80, "lambda-function-with-map"]], "lambda function with reduce()": [[80, "lambda-function-with-reduce"]], "len(dict) - The len() function gives the total length of the dictionary. This would be equal to the number of items in the dictionary.": [[56, "len-dict-the-len-function-gives-the-total-length-of-the-dictionary-this-would-be-equal-to-the-number-of-items-in-the-dictionary"]], "len(list) - The len() method returns the number of elements in the list.": [[54, "len-list-the-len-method-returns-the-number-of-elements-in-the-list"]], "len(tuple) - The len() method returns the number of elements in the tuple.": [[55, "len-tuple-the-len-method-returns-the-number-of-elements-in-the-tuple"]], "math module Functions:": [[81, "math-module-functions"]], "max(list) - The max() method returns the elements from the list with maximum value.": [[54, "max-list-the-max-method-returns-the-elements-from-the-list-with-maximum-value"]], "max(tuple) - The max() method returns the elements from the tuple with maximum value. Type of element should be same otherwise complier throw TypeError.": [[55, "max-tuple-the-max-method-returns-the-elements-from-the-tuple-with-maximum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "max, min, argmax, argmin": [[150, "max-min-argmax-argmin"]], "min(list) - this method is used to get min value from the list. In Python3 lists element\u2019s type should be same otherwise compiler throw type Error.": [[54, "min-list-this-method-is-used-to-get-min-value-from-the-list-in-python3-lists-elements-type-should-be-same-otherwise-compiler-throw-type-error"]], "min(tuple) - The min() method returns the elements from the tuple with minimum value. Type of element should be same otherwise complier throw TypeError.": [[55, "min-tuple-the-min-method-returns-the-elements-from-the-tuple-with-minimum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "pop() - The pop() method removes the item at the given index from the list and returns the removed item.": [[54, "pop-the-pop-method-removes-the-item-at-the-given-index-from-the-list-and-returns-the-removed-item"]], "rand": [[150, "rand"]], "randint": [[150, "randint"]], "randn": [[150, "randn"]], "remove() - The remove() method removes the first matching element (which is passed as an argument) from the list.": [[54, "remove-the-remove-method-removes-the-first-matching-element-which-is-passed-as-an-argument-from-the-list"]], "reverse()  - The reverse() method reverses the elements of the list.": [[54, "reverse-the-reverse-method-reverses-the-elements-of-the-list"]], "self in Python, demystified": [[107, "self-in-python-demystified"]], "setdefault() - The method setdefault() is similar to get but will set dict[key] = default if key is not already in dict.": [[56, "setdefault-the-method-setdefault-is-similar-to-get-but-will-set-dict-key-default-if-key-is-not-already-in-dict"]], "sort()  - The sort() method sorts the elements of a given list in a specific ascending or descending order.": [[54, "sort-the-sort-method-sorts-the-elements-of-a-given-list-in-a-specific-ascending-or-descending-order"]], "sorted(dict) - The sorted() function sorts the elements of a given iterable in a specific order (either ascending or descending) and returns the sorted iterable as a list.": [[54, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [55, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [56, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"]], "str(dict) - The str() function produces a printable string representation of a dictionary.": [[56, "str-dict-the-str-function-produces-a-printable-string-representation-of-a-dictionary"]], "time.sleep() in multithreaded programs": [[67, "time-sleep-in-multithreaded-programs"]], "time.struct_time Class": [[66, "time-struct-time-class"]], "tuple(seq) - The tuple() method converts a list of items into tuples.": [[55, "tuple-seq-the-tuple-method-converts-a-list-of-items-into-tuples"]], "type() - The type() function returns the type of the passed variable. If passed variable is dictionary then it would return a dictionary type.": [[56, "type-the-type-function-returns-the-type-of-the-passed-variable-if-passed-variable-is-dictionary-then-it-would-return-a-dictionary-type"]], "update() - The method update() adds dictionary dict2\u2019s key-values pairs in to dict. This function does not return anything.": [[56, "update-the-method-update-adds-dictionary-dict2s-key-values-pairs-in-to-dict-this-function-does-not-return-anything"]], "value() - The method values() returns a list of all the values available in a given dictionary.": [[56, "value-the-method-values-returns-a-list-of-all-the-values-available-in-a-given-dictionary"]], "while loop inside for loop": [[48, "while-loop-inside-for-loop"]], "while loop inside while loop": [[49, "while-loop-inside-while-loop"]], "while loop with else": [[49, "while-loop-with-else"]], "while loop with if-else": [[49, "while-loop-with-if-else"]], "\u201cHello, World!\u201d Program": [[88, "hello-world-program"]], "\ud83d\udcbb Exercises  \u279e <span class='label label-default'>List</span>": [[45, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Date and Time</span>": [[65, "exercises-date-and-time"]]}, "docnames": ["Profile_readme", "content/concepts/Introduction_to_ml", "content/concepts/anomaly-detection", "content/concepts/concepts", "content/concepts/k-means", "content/concepts/linear-regression", "content/concepts/logistic-regression", "content/concepts/markdown-notebooks", "content/concepts/neural-networks", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo", "content/concepts/notebooks/data/README", "content/concepts/notebooks/k_means/k_means_demo", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo", "content/concepts/notebooks/linear_regression/non_linear_regression_demo", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo", "content/core/markdown", "content/core/mymarkdown", "content/essentials/000_Intro_to_Python", "content/essentials/intro_mathematics", "content/essentials/intro_python", "content/essentials/intro_statistics", "content/essentials/mathematics/1_linear_algebra", "content/essentials/mathematics/calculus_fourier-series", "content/essentials/mathematics/capital-pi-notation", "content/essentials/mathematics/capital-sigma-notation", "content/essentials/mathematics/dissimilarity_measures", "content/essentials/mathematics/linear-algebra_matrices", "content/essentials/mathematics/linear-algebra_vectors", "content/essentials/mathematics/mathematics_toc", "content/essentials/python/advanced/001_Python_Iterators", "content/essentials/python/advanced/002_Python_Generators", "content/essentials/python/advanced/003_Python_Closure", "content/essentials/python/advanced/004_Python_Decorators", "content/essentials/python/advanced/005_Python_Property", "content/essentials/python/advanced/006_Python_RegEx", "content/essentials/python/advanced/Python_args_and_kwargs", "content/essentials/python/advanced/advanced_toc", "content/essentials/python/controlflow/000_Python_Flow_Control_statement", "content/essentials/python/controlflow/001_Python_if_statement", "content/essentials/python/controlflow/002_Python_if_else_statement", "content/essentials/python/controlflow/003_Python_if_elif_else_statement", "content/essentials/python/controlflow/004_Python_Nested_if_statement", "content/essentials/python/controlflow/005_Python_for_Loop", "content/essentials/python/controlflow/006_Python_while_Loop", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements", "content/essentials/python/controlflow/controlflow_toc", "content/essentials/python/datatypes/001_Python_Numbers", "content/essentials/python/datatypes/002_Python_String", "content/essentials/python/datatypes/003_Python_List", "content/essentials/python/datatypes/004_Python_Tuple", "content/essentials/python/datatypes/005_Python_Dictionary", "content/essentials/python/datatypes/006_Python_Sets", "content/essentials/python/datatypes/Python_List_Comprehension", "content/essentials/python/datatypes/datatypes_toc", "content/essentials/python/datetime/001_Python_datetime_Module", "content/essentials/python/datetime/002_Python_strftime", "content/essentials/python/datetime/003_Python_strptime", "content/essentials/python/datetime/004_Python_current_date_and_time", "content/essentials/python/datetime/005_Python_get_current_time", "content/essentials/python/datetime/006_Python_timestamp_to_datetime", "content/essentials/python/datetime/007_Python_time_Module", "content/essentials/python/datetime/008_Python_sleep", "content/essentials/python/datetime/datetime_toc", "content/essentials/python/files/001_Python_File_Input_Output", "content/essentials/python/files/002_Python_File_Directory", "content/essentials/python/files/003_Python_File_Exception", "content/essentials/python/files/004_Python_Exceptions_Handling", "content/essentials/python/files/005_Python_User_defined_Exceptions", "content/essentials/python/files/files_toc", "content/essentials/python/functions/001_Python_Functions", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal", "content/essentials/python/functions/003_Python_Function_global_Keywords", "content/essentials/python/functions/004_Python_Function_Arguments", "content/essentials/python/functions/005_Python_Function_Recursion", "content/essentials/python/functions/006_Python_Function_Anonymous", "content/essentials/python/functions/007_Python_Function_Module", "content/essentials/python/functions/008_Python_Function_random_Module", "content/essentials/python/functions/009_Python_Function_math_Module", "content/essentials/python/functions/010_Python_Function_Package", "content/essentials/python/functions/Python_Docstrings", "content/essentials/python/functions/Python_User_defined_Functions", "content/essentials/python/functions/functions_toc", "content/essentials/python/introduction/002_Hello_World", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments", "content/essentials/python/introduction/005_Python_Variables_&_Constants", "content/essentials/python/introduction/006_Python_Literals", "content/essentials/python/introduction/007_Python_Data_Types", "content/essentials/python/introduction/008_Python_Type_Conversion", "content/essentials/python/introduction/009_Python_Input_Output_Import", "content/essentials/python/introduction/010_Python_Operators", "content/essentials/python/introduction/011_Python_Namespace_and_Scope", "content/essentials/python/introduction/1_data_structures_and_agorithms", "content/essentials/python/introduction/Interpreter_Vs_Compiler", "content/essentials/python/introduction/constant", "content/essentials/python/introduction/intro_toc", "content/essentials/python/objects/001_Python_OOPs_Concepts", "content/essentials/python/objects/002_Python_Classes_and_Objects", "content/essentials/python/objects/003_Python_Inheritance", "content/essentials/python/objects/004_Python_Operator_Overloading", "content/essentials/python/objects/objects_toc", "content/essentials/python/objects/self_in_Python_Demystified", "content/essentials/statistics/statistics", "content/markdown", "content/markdown-notebooks", "content/mymarkdown", "content/notebooks", "content/real-world/markdown", "content/real-world/mymarkdown", "content/tools/hf/intro", "content/tools/intro_tools", "content/tools/langchain/LangChain Cookbook Part 1 - Fundamentals", "content/tools/langchain/LangChain Cookbook Part 2 - Use Cases", "content/tools/langchain/intro", "content/tools/langchain/langchain-modules", "content/tools/langchain/langchain_toc", "content/tools/langchain/langgraph", "content/tools/langchain/langserve", "content/tools/langchain/langsmith", "content/tools/langchain/lcel", "content/tools/langchain/projects/agents/Agents", "content/tools/langchain/projects/agents/Agents + ZapierToolkit", "content/tools/langchain/projects/bots/Twitter_Reply_Bot/Twitter Reply Bot Notebook", "content/tools/langchain/projects/chains/Chain Types", "content/tools/langchain/projects/chatapi/ChatAPI + LangChain Basics", "content/tools/langchain/projects/data_generation/5 Levels Of Summarization - Novice To Expert", "content/tools/langchain/projects/data_generation/Advanced Retrieval With LangChain", "content/tools/langchain/projects/data_generation/Ask A Book Questions", "content/tools/langchain/projects/data_generation/Clean and Standardize Data", "content/tools/langchain/projects/data_generation/Custom Files Question & Answer", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Function Calling)", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Kor)", "content/tools/langchain/projects/data_generation/Exploring ChatGPT Function Calling", "content/tools/langchain/projects/data_generation/Instructing LLMs To Match Tone", "content/tools/langchain/projects/data_generation/Personalized Email Generation", "content/tools/langchain/projects/data_generation/Retrieval_With_MMR", "content/tools/langchain/projects/data_generation/Topic Modeling With Language Models", "content/tools/langchain/projects/data_generation/Using LLMs To Summarize Personal Research", "content/tools/langchain/projects/data_generation/Working With Call or Video Transcripts", "content/tools/langchain/projects/project_toc", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2", "content/tools/matplotlib/matplotlib_toc", "content/tools/numpy/001_Python_NumPy", "content/tools/numpy/002_Python_NumPy_Array_Part1", "content/tools/numpy/003_Python_NumPy_Array_Part2", "content/tools/numpy/004_Python_NumPy_Array_Part3", "content/tools/numpy/005_Python_NumPy_Array_Part4", "content/tools/numpy/Python_Numpy_Exercises_with_hints", "content/tools/numpy/numpy_toc", "content/tools/pandas/001_Python_Pandas_DataFrame", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index", "content/tools/pandas/002_Python_Pandas_Exercise_1", "content/tools/pandas/003_Python_Pandas_Exercise_2", "content/tools/pandas/pandas_toc", "content/tools/pytorch/00_pytorch_fundamentals", "content/tools/pytorch/01_pytorch_workflow", "content/tools/pytorch/02_pytorch_classification", "content/tools/pytorch/03_pytorch_computer_vision", "content/tools/pytorch/04_pytorch_custom_datasets", "content/tools/pytorch/05_pytorch_going_modular", "content/tools/pytorch/06_pytorch_transfer_learning", "content/tools/pytorch/07_pytorch_experiment_tracking", "content/tools/pytorch/08_pytorch_paper_replicating", "content/tools/pytorch/09_pytorch_model_deployment", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode", "content/tools/pytorch/going_modular/README", "content/tools/pytorch/going_modular/going_modular/README", "content/tools/pytorch/pytorch_toc", "content/tools/seaborn/001_Seaborn_Loading_Dataset", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics", "content/tools/seaborn/003_Matplotlib_vs_Seaborn", "content/tools/seaborn/004_Seaborn_Color_Palettes", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots", "content/tools/seaborn/008_Seaborn_Distribution_Plots", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot", "content/tools/seaborn/016_Seaborn_PairGrid_Plot", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot", "content/tools/seaborn/018_Seaborn_Heat_Map", "content/tools/seaborn/019_Seaborn_Cluster_Map", "content/tools/seaborn/seaborn_toc", "content/tools/tools-for-llms", "content/tools/tools-for-ml", "content/tools/tools-for-nn", "curriculum", "intro"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["Profile_readme.md", "content/concepts/Introduction_to_ml.md", "content/concepts/anomaly-detection.md", "content/concepts/concepts.md", "content/concepts/k-means.md", "content/concepts/linear-regression.md", "content/concepts/logistic-regression.md", "content/concepts/markdown-notebooks.md", "content/concepts/neural-networks.md", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo.ipynb", "content/concepts/notebooks/data/README.md", "content/concepts/notebooks/k_means/k_means_demo.ipynb", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/non_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo.ipynb", "content/core/markdown.md", "content/core/mymarkdown.md", "content/essentials/000_Intro_to_Python.ipynb", "content/essentials/intro_mathematics.ipynb", "content/essentials/intro_python.ipynb", "content/essentials/intro_statistics.ipynb", "content/essentials/mathematics/1_linear_algebra.ipynb", "content/essentials/mathematics/calculus_fourier-series.ipynb", "content/essentials/mathematics/capital-pi-notation.ipynb", "content/essentials/mathematics/capital-sigma-notation.ipynb", "content/essentials/mathematics/dissimilarity_measures.ipynb", "content/essentials/mathematics/linear-algebra_matrices.ipynb", "content/essentials/mathematics/linear-algebra_vectors.ipynb", "content/essentials/mathematics/mathematics_toc.md", "content/essentials/python/advanced/001_Python_Iterators.ipynb", "content/essentials/python/advanced/002_Python_Generators.ipynb", "content/essentials/python/advanced/003_Python_Closure.ipynb", "content/essentials/python/advanced/004_Python_Decorators.ipynb", "content/essentials/python/advanced/005_Python_Property.ipynb", "content/essentials/python/advanced/006_Python_RegEx.ipynb", "content/essentials/python/advanced/Python_args_and_kwargs.ipynb", "content/essentials/python/advanced/advanced_toc.md", "content/essentials/python/controlflow/000_Python_Flow_Control_statement.ipynb", "content/essentials/python/controlflow/001_Python_if_statement.ipynb", "content/essentials/python/controlflow/002_Python_if_else_statement.ipynb", "content/essentials/python/controlflow/003_Python_if_elif_else_statement.ipynb", "content/essentials/python/controlflow/004_Python_Nested_if_statement.ipynb", "content/essentials/python/controlflow/005_Python_for_Loop.ipynb", "content/essentials/python/controlflow/006_Python_while_Loop.ipynb", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements.ipynb", "content/essentials/python/controlflow/controlflow_toc.md", "content/essentials/python/datatypes/001_Python_Numbers.ipynb", "content/essentials/python/datatypes/002_Python_String.ipynb", "content/essentials/python/datatypes/003_Python_List.ipynb", "content/essentials/python/datatypes/004_Python_Tuple.ipynb", "content/essentials/python/datatypes/005_Python_Dictionary.ipynb", "content/essentials/python/datatypes/006_Python_Sets.ipynb", "content/essentials/python/datatypes/Python_List_Comprehension.ipynb", "content/essentials/python/datatypes/datatypes_toc.md", "content/essentials/python/datetime/001_Python_datetime_Module.ipynb", "content/essentials/python/datetime/002_Python_strftime.ipynb", "content/essentials/python/datetime/003_Python_strptime.ipynb", "content/essentials/python/datetime/004_Python_current_date_and_time.ipynb", "content/essentials/python/datetime/005_Python_get_current_time.ipynb", "content/essentials/python/datetime/006_Python_timestamp_to_datetime.ipynb", "content/essentials/python/datetime/007_Python_time_Module.ipynb", "content/essentials/python/datetime/008_Python_sleep.ipynb", "content/essentials/python/datetime/datetime_toc.md", "content/essentials/python/files/001_Python_File_Input_Output.ipynb", "content/essentials/python/files/002_Python_File_Directory.ipynb", "content/essentials/python/files/003_Python_File_Exception.ipynb", "content/essentials/python/files/004_Python_Exceptions_Handling.ipynb", "content/essentials/python/files/005_Python_User_defined_Exceptions.ipynb", "content/essentials/python/files/files_toc.md", "content/essentials/python/functions/001_Python_Functions.ipynb", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal.ipynb", "content/essentials/python/functions/003_Python_Function_global_Keywords.ipynb", "content/essentials/python/functions/004_Python_Function_Arguments.ipynb", "content/essentials/python/functions/005_Python_Function_Recursion.ipynb", "content/essentials/python/functions/006_Python_Function_Anonymous.ipynb", "content/essentials/python/functions/007_Python_Function_Module.ipynb", "content/essentials/python/functions/008_Python_Function_random_Module.ipynb", "content/essentials/python/functions/009_Python_Function_math_Module.ipynb", "content/essentials/python/functions/010_Python_Function_Package.ipynb", "content/essentials/python/functions/Python_Docstrings.ipynb", "content/essentials/python/functions/Python_User_defined_Functions.ipynb", "content/essentials/python/functions/functions_toc.md", "content/essentials/python/introduction/002_Hello_World.ipynb", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers.ipynb", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments.ipynb", "content/essentials/python/introduction/005_Python_Variables_&_Constants.ipynb", "content/essentials/python/introduction/006_Python_Literals.ipynb", "content/essentials/python/introduction/007_Python_Data_Types.ipynb", "content/essentials/python/introduction/008_Python_Type_Conversion.ipynb", "content/essentials/python/introduction/009_Python_Input_Output_Import.ipynb", "content/essentials/python/introduction/010_Python_Operators.ipynb", "content/essentials/python/introduction/011_Python_Namespace_and_Scope.ipynb", "content/essentials/python/introduction/1_data_structures_and_agorithms.ipynb", "content/essentials/python/introduction/Interpreter_Vs_Compiler.ipynb", "content/essentials/python/introduction/constant.ipynb", "content/essentials/python/introduction/intro_toc.md", "content/essentials/python/objects/001_Python_OOPs_Concepts.ipynb", "content/essentials/python/objects/002_Python_Classes_and_Objects.ipynb", "content/essentials/python/objects/003_Python_Inheritance.ipynb", "content/essentials/python/objects/004_Python_Operator_Overloading.ipynb", "content/essentials/python/objects/objects_toc.md", "content/essentials/python/objects/self_in_Python_Demystified.ipynb", "content/essentials/statistics/statistics.ipynb", "content/markdown.md", "content/markdown-notebooks.md", "content/mymarkdown.md", "content/notebooks.ipynb", "content/real-world/markdown.md", "content/real-world/mymarkdown.md", "content/tools/hf/intro.md", "content/tools/intro_tools.ipynb", "content/tools/langchain/LangChain Cookbook Part 1 - Fundamentals.ipynb", "content/tools/langchain/LangChain Cookbook Part 2 - Use Cases.ipynb", "content/tools/langchain/intro.md", "content/tools/langchain/langchain-modules.md", "content/tools/langchain/langchain_toc.md", "content/tools/langchain/langgraph.md", "content/tools/langchain/langserve.md", "content/tools/langchain/langsmith.md", "content/tools/langchain/lcel.md", "content/tools/langchain/projects/agents/Agents.ipynb", "content/tools/langchain/projects/agents/Agents + ZapierToolkit.ipynb", "content/tools/langchain/projects/bots/Twitter_Reply_Bot/Twitter Reply Bot Notebook.ipynb", "content/tools/langchain/projects/chains/Chain Types.ipynb", "content/tools/langchain/projects/chatapi/ChatAPI + LangChain Basics.ipynb", "content/tools/langchain/projects/data_generation/5 Levels Of Summarization - Novice To Expert.ipynb", "content/tools/langchain/projects/data_generation/Advanced Retrieval With LangChain.ipynb", "content/tools/langchain/projects/data_generation/Ask A Book Questions.ipynb", "content/tools/langchain/projects/data_generation/Clean and Standardize Data.ipynb", "content/tools/langchain/projects/data_generation/Custom Files Question & Answer.ipynb", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Function Calling).ipynb", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Kor).ipynb", "content/tools/langchain/projects/data_generation/Exploring ChatGPT Function Calling.ipynb", "content/tools/langchain/projects/data_generation/Instructing LLMs To Match Tone.ipynb", "content/tools/langchain/projects/data_generation/Personalized Email Generation.ipynb", "content/tools/langchain/projects/data_generation/Retrieval_With_MMR.ipynb", "content/tools/langchain/projects/data_generation/Topic Modeling With Language Models.ipynb", "content/tools/langchain/projects/data_generation/Using LLMs To Summarize Personal Research.ipynb", "content/tools/langchain/projects/data_generation/Working With Call or Video Transcripts.ipynb", "content/tools/langchain/projects/project_toc.md", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1.ipynb", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2.ipynb", "content/tools/matplotlib/matplotlib_toc.md", "content/tools/numpy/001_Python_NumPy.ipynb", "content/tools/numpy/002_Python_NumPy_Array_Part1.ipynb", "content/tools/numpy/003_Python_NumPy_Array_Part2.ipynb", "content/tools/numpy/004_Python_NumPy_Array_Part3.ipynb", "content/tools/numpy/005_Python_NumPy_Array_Part4.ipynb", "content/tools/numpy/Python_Numpy_Exercises_with_hints.ipynb", "content/tools/numpy/numpy_toc.md", "content/tools/pandas/001_Python_Pandas_DataFrame.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index.ipynb", "content/tools/pandas/002_Python_Pandas_Exercise_1.ipynb", "content/tools/pandas/003_Python_Pandas_Exercise_2.ipynb", "content/tools/pandas/pandas_toc.md", "content/tools/pytorch/00_pytorch_fundamentals.ipynb", "content/tools/pytorch/01_pytorch_workflow.ipynb", "content/tools/pytorch/02_pytorch_classification.ipynb", "content/tools/pytorch/03_pytorch_computer_vision.ipynb", "content/tools/pytorch/04_pytorch_custom_datasets.ipynb", "content/tools/pytorch/05_pytorch_going_modular.md", "content/tools/pytorch/06_pytorch_transfer_learning.ipynb", "content/tools/pytorch/07_pytorch_experiment_tracking.ipynb", "content/tools/pytorch/08_pytorch_paper_replicating.ipynb", "content/tools/pytorch/09_pytorch_model_deployment.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode.ipynb", "content/tools/pytorch/going_modular/README.md", "content/tools/pytorch/going_modular/going_modular/README.md", "content/tools/pytorch/pytorch_toc.md", "content/tools/seaborn/001_Seaborn_Loading_Dataset.ipynb", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics.ipynb", "content/tools/seaborn/003_Matplotlib_vs_Seaborn.ipynb", "content/tools/seaborn/004_Seaborn_Color_Palettes.ipynb", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot.ipynb", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot.ipynb", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots.ipynb", "content/tools/seaborn/008_Seaborn_Distribution_Plots.ipynb", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot.ipynb", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot.ipynb", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot.ipynb", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot.ipynb", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot.ipynb", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot.ipynb", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot.ipynb", "content/tools/seaborn/016_Seaborn_PairGrid_Plot.ipynb", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot.ipynb", "content/tools/seaborn/018_Seaborn_Heat_Map.ipynb", "content/tools/seaborn/019_Seaborn_Cluster_Map.ipynb", "content/tools/seaborn/seaborn_toc.md", "content/tools/tools-for-llms.md", "content/tools/tools-for-ml.md", "content/tools/tools-for-nn.md", "curriculum.md", "intro.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 25, 26, 28, 31, 32, 35, 36, 37, 38, 39, 43, 44, 47, 48, 49, 50, 52, 53, 55, 58, 62, 64, 65, 66, 67, 69, 71, 72, 75, 76, 77, 79, 80, 81, 83, 85, 86, 90, 92, 93, 94, 95, 97, 99, 102, 103, 104, 105, 107, 109, 110, 112, 113, 117, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 150, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 170, 172, 173, 175, 176, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 206], "0": [2, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 66, 67, 69, 71, 72, 73, 75, 77, 78, 80, 81, 82, 83, 89, 91, 92, 93, 94, 95, 96, 99, 103, 104, 105, 107, 112, 117, 118, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "00": [0, 60, 61, 62, 64, 66, 67, 95, 118, 132, 137, 140, 142, 156, 157, 159, 170, 172, 173, 181, 189, 190, 196, 199], "000": [52, 129, 131, 137, 142, 144, 173, 174, 176, 179, 190, 195], "0000": [15, 66, 96, 171, 172, 173, 178], "00000": 156, "000000": [53, 61, 62, 95, 136, 137, 156, 167, 168, 185, 190, 201], "00000000": 170, "0000003": 53, "000007": 17, "000013": 18, "000032": 17, "000036": 18, "000066": 17, "000079": 17, "0000a3": 197, "0000e": 172, "0001": [52, 60, 66, 171, 173], "000110011001100110011": 52, "000112": 17, "000126": 17, "000155": 17, "00015641732898075134": 117, "000174": 18, "000191": 17, "00019600906371495047": 117, "000214": 17, "000216": 17, "000238": 18, "000269": 18, "000285": 18, "0003": 173, "000301": 18, "000325": 18, "00035465431654651654": 117, "000367": 18, "000385": 17, "000410": 18, "000456": 18, "000465": 18, "000550": 18, "0006": 179, "000683": 12, "000743": 18, "0007734206914647714": 117, "0009": 173, "000917": 17, "000a": 52, "001": [61, 62, 117, 171, 174, 175, 176, 177, 180, 181], "0010": [96, 181], "001058628615053026": 117, "0011": [96, 173], "001100": 18, "001139": 18, "001178": 18, "00121062e": 199, "001232": 18, "001262": 18, "0012645035749301314": 171, "001270": 17, "001354": 18, "00140327e": 199, "0016": 173, "001619": 18, "001665": 18, "0017": 173, "0018": 173, "001835": 17, "001868": 201, "001873": 17, "001899": 18, "0019": [180, 181], "001_python_file_input_output": 70, "002": [61, 62], "0020": 173, "002108": 18, "002177": 18, "002200": 18, "0023": 178, "002327879593869": 153, "00232788": 153, "0024": 173, "002464": 18, "002513": 18, "0027": 173, "0028": 178, "002841": 18, "002895": 18, "002940": 18, "002_python_file_directori": 70, "003": [14, 117, 118, 178], "0030": 173, "003029": 18, "0031": 173, "003152": 18, "003165106289088726": 117, "0031846734422911363": 117, "003456": 17, "003478": 18, "0035": 173, "00357518e": 199, "0037": 173, "003780": 18, "003845": 18, "0039": 173, "003_python_file_except": 70, "004": 176, "004079": 17, "004274": 18, "004291": 18, "0043": 173, "004785": 14, "004838": 17, "0049": 173, "004_python_exceptions_handl": 70, "005": 199, "0051": 173, "0052": 173, "005294": 18, "005308": 18, "005356": 201, "005408": 18, "005436": 17, "0055": [170, 173], "0056": 173, "0057": 173, "005742": 18, "005743": 17, "0058": 173, "005837": 17, "005978": 18, "005_python_user_defined_except": 70, "0060": 173, "00603": 172, "00615": 172, "00616708": 150, "006191": 197, "0062": 173, "006201": 18, "006215683650225401": 171, "0063": 173, "0065": 173, "0067": 180, "006730": 17, "0069": 173, "007": [95, 176, 199], "007120": 17, "0072": 178, "007234": 201, "0073": 173, "007320": 18, "0075": 173, "007525": 17, "00778181e": 199, "0078": 173, "007860": 18, "00786338": 153, "007995": 17, "007_python_function_modul": 69, "0080": 173, "00826323e": 199, "0083": 173, "0084": 173, "00856914e": 199, "0086": 172, "008831": 18, "0089": 173, "009": 53, "0090": [173, 180], "009066": 18, "0092": 173, "0094": 173, "009417": 17, "0095": [173, 178, 180, 181], "009509": 18, "009529": 18, "00960206e": 199, "009757": 18, "009783552028238773": 179, "00_pytorch_fundament": 170, "01": [12, 14, 53, 60, 61, 62, 64, 66, 67, 95, 118, 170, 171, 172, 173, 174, 179, 181, 185, 189, 192, 194, 195, 196, 197, 199, 201], "010": [53, 199], "0100": [96, 172], "010000": 156, "0101": [96, 173], "0102": [173, 180], "010289": 18, "0103": 173, "010311": 17, "01032310e": 199, "01051775e": 199, "010527": 18, "01061": 172, "0107": [172, 173], "010755": 18, "0109": 173, "011": [176, 177], "0110": 173, "01118234211553424": 117, "011255": 17, "0114": 173, "011523": 197, "011630": 18, "01169557310640812": 179, "011743": 18, "0118": 173, "01183409e": 199, "0119": 173, "012098": 18, "012345": 53, "0123456789": 81, "0124": 173, "0125": 173, "0126": 173, "0127": 173, "012874804746266883": 117, "012986": 18, "0131": 173, "013148": 18, "01326": 172, "013316": 18, "013350": 18, "0134": 173, "01345985e": 199, "013474": 18, "0135": 173, "013555": 18, "013648": 172, "013763": 18, "013801801018416882": 171, "013853": 18, "0140": 173, "014086711220443249": 171, "0141": [173, 181], "014127": 18, "0142": [172, 173], "01426": 172, "0143": 173, "014374": 17, "0146": 173, "014745": 18, "0148": 173, "0149": [172, 173], "0150": 173, "015092319017854244": 117, "0152": 173, "0155": 173, "0156": 173, "015672": 17, "0157": [173, 174], "01580": 178, "015862": 18, "015877": 18, "0160": [173, 174], "0161": [173, 178], "016288": 18, "0163": 173, "016412": 179, "0165": 173, "0167": 173, "016705": 16, "0168": 172, "0169": 173, "0170": 173, "0171": 173, "01710843e": 199, "0173": 173, "0177": 173, "017837": 18, "0180": 173, "0181": 173, "0182": 173, "0187": 173, "0188": 173, "0190": 173, "019028": 17, "01919923e": 199, "0192": 173, "0193": 173, "0194": 173, "019404": 18, "019472001962491232": 117, "019542": 18, "019561": 17, "0196": [173, 174], "019608": 156, "019675": 18, "019745": 18, "0198": 173, "0199": 173, "019922": 13, "019968": 173, "01996805111821": 173, "01_learn_python4data": [70, 81, 168], "01_pytorch_workflow_model_0": 171, "01_pytorch_workflow_model_1": 171, "01x345": 53, "02": [13, 60, 61, 62, 66, 67, 118, 171, 172, 173, 174, 181, 185, 199], "0200": [171, 172], "02004": 172, "0201": 173, "0203": 173, "020391": 17, "0204": 173, "020408": 167, "0205": 173, "0207": 173, "0208": [180, 181], "0209": 173, "0210": [173, 181], "021069": 197, "02127": 172, "0213": 173, "0214": 180, "021509": 172, "0216": 173, "021708": 16, "0218": 173, "021838": 18, "021854": 17, "02210": 48, "0222": 180, "0223": [173, 175, 180, 181], "022326": 17, "0225": 173, "0226": 173, "022727": 167, "0228": 173, "0229": 173, "022960": 18, "0231": 173, "02319487": 153, "0232": 173, "0233": 173, "0235": [173, 178], "0236": 173, "023622": 18, "0237": 173, "0238": 173, "0240": 173, "024045": 18, "024052": 16, "0241": 173, "0242": 173, "02423": 172, "024253": 18, "0244": 173, "0245": 173, "0247": 173, "0248": 173, "0249": 173, "025000": 190, "0252": 173, "0253": 173, "025347": 18, "025388": 18, "02539500e": 199, "0254": 173, "025531": 18, "025549": 17, "0256": [173, 179], "025678": 18, "0257": 173, "0258": 173, "02587": 172, "0259": 173, "0260": 173, "026005": 18, "026023": 18, "0261": 173, "0262": 173, "0263": [173, 179], "026366": 18, "0264": [173, 179], "0266": 173, "026648": 18, "0268": 173, "02683718e": 199, "0269": 179, "027": 179, "0271": 173, "0272": 173, "0273": 173, "0274": 173, "027404": 18, "0275": 173, "027513": 18, "0277": 173, "0278": 173, "02788739837706089": 171, "02799": 172, "0280": 173, "028090": 18, "0283": 173, "0284": 173, "028452": 16, "0285": 173, "02850": 172, "0286": 173, "0288": 173, "028944": 18, "028969": 18, "0290": 173, "02901": 172, "0291": 173, "02919730e": 199, "0292": 173, "02928161e": 199, "029371": 18, "029398": 18, "0294": 173, "0295": 173, "0297": 173, "02989209e": 199, "0299": 173, "02f": 33, "03": [25, 53, 67, 118, 131, 142, 170, 172, 173, 174, 175, 179, 181, 185, 199], "0300": 172, "030114": 197, "0304": 173, "0306": 173, "03068156e": 199, "0307": 173, "030774": 185, "03083": 172, "030971": 18, "030e2eec799d": 38, "031": 179, "0310": 173, "031250": 167, "0313": 173, "03132382780313492": 171, "0314": [173, 174], "03145352": 153, "0314fd17": 132, "0315": 173, "0316": 173, "0318": 173, "0319": 173, "032258": 167, "0323": 173, "0324": 173, "032475": 17, "03247675": 153, "0326": 173, "032878": 17, "0330": 173, "03300": 172, "033011": 18, "033088": 18, "033175": 17, "033192": 18, "0333": 173, "033395": 18, "03348578e": 199, "0335": 173, "0336": 173, "03387531e": 199, "033911": 18, "0342": 173, "0343": 173, "034357": 16, "0344": 173, "03448": 172, "0345": 173, "03461004": 153, "03476089984178543": 171, "03486": 172, "0349": 173, "035009": 18, "03505598723366": 81, "0351": 170, "035149": 17, "0352": [173, 174], "0353": [173, 174], "0354": 173, "0355": 173, "0356": [173, 178], "035714": 167, "0359": 173, "0360": 173, "036166": 18, "036300": 18, "0364": 173, "03643": 172, "0365": 173, "0366": 173, "0367": 173, "0369": 173, "0370": 173, "0371": 172, "037224": 17, "0373": 173, "0374": 173, "037445": 18, "0375": 173, "0376": 173, "0377": 173, "037732": 18, "037747": 18, "0381": 173, "03818932920694351": 171, "038202": 18, "0383": 173, "0384": 173, "0385": 173, "038580": 17, "0386": 173, "0388": 173, "0389": 173, "0390": 173, "03910": 172, "0392": [173, 174], "0395": 173, "039631": 197, "039698": 18, "0397": 173, "0398": 173, "0399": 173, "039919": 18, "03_daniels_macbook_pro": 177, "03_pytorch_computer_vision_model_2": 173, "03pm": 61, "04": [60, 66, 67, 118, 136, 137, 142, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 189], "0400": [171, 172], "040000": 156, "0401": 173, "0402": 173, "0404": 173, "0406": 173, "0408": 173, "0409": 173, "04098": 172, "040986": 18, "0411": 173, "0412": 173, "0413": 173, "0415": 173, "04167863354086876": 171, "041750": 18, "0420": [172, 173], "042011": 17, "0421": [172, 173], "042190": 16, "0422": 173, "0424": 173, "0426": 173, "0427": 173, "0428": 173, "042849": 9, "042857": 167, "0429": 173, "04295": 172, "042991": 18, "0430": 173, "0431": [173, 174], "0432": 173, "04324": 172, "043293": 18, "0433": 173, "0440": 173, "0441": 173, "0443": 173, "044382": 18, "0444": 173, "0446": 173, "0447": 173, "0448": 173, "0449": 173, "0450": 173, "045016": 18, "045149999999999996": 136, "0452": 173, "04543796554207802": 171, "0455": 173, "0457": 173, "0458": 173, "0459": 173, "045985": 18, "0461": 178, "04617067e": 199, "0462": 173, "0463": 173, "046456": [12, 14], "046484": 18, "0465": 178, "0467": 173, "0468": 173, "046815": 9, "0469": 173, "0470": 173, "04702762e": 199, "0471": 173, "0472": 173, "047295": 17, "0473": 173, "047347": 18, "0474": 173, "04763428": 150, "0477": 173, "0478": 173, "0481": 173, "048227": 18, "0485": 173, "04857": 172, "0486": 173, "048779": 18, "0488": 173, "048819": 13, "0489": 173, "04892": 172, "0494": 179, "0496": 173, "0497": 173, "049796": 18, "0498": 173, "04_custom_data_cr": [174, 179], "04_python_funct": [69, 81], "05": [9, 61, 62, 67, 118, 127, 133, 142, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 185], "0500": [195, 197], "05017144e": 199, "050218": 18, "0505": 173, "050755": 18, "05082974": 150, "0510": [173, 174], "051020": 167, "051179": 18, "0512": 173, "051267": 16, "05133": 172, "0515": 173, "0516": 173, "051891": 18, "0521": 173, "05233094e": 199, "052387": 13, "0524": 173, "0525": 173, "0527": 173, "0528": 177, "0529": 173, "0530": 173, "053148526698350906": 171, "0532": 173, "0533": 173, "053369999999999994": 137, "0534": 173, "0535": 173, "0537": [175, 177, 180, 181], "053816": 18, "0539": 173, "0540": 173, "0541": 173, "0542": [173, 178], "0544": 173, "0546": 173, "05473060e": 199, "0549": [173, 174], "0551": 173, "0552": 173, "055217": 18, "0553": 173, "0554": 173, "0555": 173, "0556": 173, "0557": 173, "05571": 172, "0558": 173, "0559": 173, "055903": 18, "05599": 172, "0560": 173, "0562": 173, "0563": 173, "056380": 17, "0564": 173, "05655136772680869": 82, "0566": 173, "05669558e": 199, "0567": 173, "0568": 173, "05698": 172, "0570": 173, "057333": 185, "0574": 173, "0577": 173, "0578": 174, "0579": 173, "0580": 173, "0583": 173, "0584": 173, "058497": 17, "0585": 173, "0586": 173, "0587": 173, "058710": 18, "0588": [173, 174], "058824": 167, "058849": 18, "0590": 173, "05908a030c74": 103, "0592": 173, "05924": 172, "0594": 173, "0595": 173, "059554": 18, "0596": 173, "0597": 173, "0598": [172, 173], "0599": 173, "05_going_modular_cell_mode_tinyvgg_model": [175, 180, 181], "05_going_modular_script_mode_tinyvgg_model": [175, 181], "05_going_modular_tingvgg_model": [175, 180, 181], "05_python_fil": 70, "05_pytorch_going_modular_cell_mod": 182, "05_pytorch_going_modular_script_mod": 182, "05t22": 137, "06": [60, 61, 62, 63, 64, 66, 67, 142, 177, 178, 179, 181, 183, 185, 187], "0600": 171, "0602": 173, "0603": 173, "0605": 173, "0607": 173, "061065": 18, "06107": 172, "06109": 172, "0613": [117, 136, 138, 142, 173], "0616": [173, 175, 177, 180, 181], "06161913e": 199, "061689": 18, "0617": 173, "0618": 173, "061915": 18, "0620": 173, "0622": 173, "0623": 173, "0624": 173, "062439": 18, "062500": 167, "0627": [174, 179, 180], "0629": 173, "0630": 181, "0631": 173, "0632": 179, "0633": 173, "0634": [173, 174], "0635": 173, "063577": 201, "0636": 173, "0637": 173, "0638": [173, 179], "0639": 173, "0641": 179, "064182": 179, "06418210905976593": 179, "0642": 179, "0643": 173, "0645": 173, "064516": 167, "0646": [170, 173], "0647": 173, "06473556160926819": 171, "0649": 173, "0650": 178, "0651": 173, "065211": [12, 14], "065444": 18, "06563599e": 199, "0657": 173, "065897": 18, "0659": 173, "065937": 18, "0661": 173, "0662": 179, "0663": 173, "0665": 173, "0666": 173, "06663512e": 199, "066667": 156, "0667": [173, 174], "0669": 173, "0672": 173, "0673": 173, "0674": 173, "06745": 172, "0676": 173, "0677": 173, "0678": 173, "0680": 173, "068044": 13, "0681": 173, "0684": 173, "0685": 173, "068645": 16, "0688": 173, "0689": 173, "0690": 173, "0691": 173, "0692": 173, "0693": [173, 179], "0694": 173, "06947804e": 199, "0696": 173, "069723": 13, "0699": 173, "06_pytorch_transfer_learn": 177, "07": [61, 62, 64, 67, 118, 170, 171, 173, 177, 179], "0700": 127, "0701": 173, "070254": 18, "070279": 18, "0704": 173, "070574": 18, "0706": [173, 174], "0708": 195, "0709": 173, "0711": 173, "0713": 173, "0714": 173, "0717": 173, "07216": 172, "072182": 16, "0722": 173, "07232122868299484": 171, "0724": 173, "0726": 172, "0729": 179, "0730": 173, "0731": 173, "073129": 12, "073160": 17, "0734": 173, "0735": 173, "073595": 18, "0736": 173, "073709": 199, "07376": 172, "0738": 173, "073953": 18, "0740": 178, "074074": 167, "0742": 173, "0745": [173, 174], "07450952e": 199, "0747": 173, "0750": [173, 195], "0752": 173, "0754": 173, "0755": [172, 173], "0757": 178, "0758": 173, "0759": 179, "0761": 178, "0763": 173, "07659773e": 199, "0766": 173, "0769": 173, "076923": 167, "077036": 197, "0772": 173, "0773": 173, "0774": 173, "0775": 173, "0776": [173, 178], "0777": [173, 179], "0778": 172, "0779": 173, "0780": 173, "078020": 18, "0781": 173, "0782": 173, "0783": 173, "0785": 173, "0786": 173, "0787": 173, "0788": 173, "0789": 173, "0790": 173, "0791": 174, "0793": 173, "079365": 18, "0796": 173, "0797": [173, 178], "0799": 173, "07_": 177, "07_effnetb0_data_10_percent_10_epoch": 177, "07_effnetb0_data_10_percent_5_epoch": 177, "07_effnetb0_data_20_percent_10_epoch": 177, "07_effnetb0_data_20_percent_5_epoch": 177, "07_effnetb2_data_10_percent_10_epoch": 177, "07_effnetb2_data_10_percent_5_epoch": 177, "07_effnetb2_data_20_percent_10_epoch": 177, "07_effnetb2_data_20_percent_5_epoch": 177, "08": [60, 64, 66, 67, 118, 142, 170, 173, 179], "0800": 171, "080169": 199, "0803": [173, 174], "0804": 173, "0805": 173, "0805937647819519": 171, "0806": 173, "08062": 172, "0808": 173, "0808e": 173, "0810": 173, "0813": 173, "0814": 173, "08143941": 150, "0816": 173, "0817": 173, "0818": 173, "0820": 173, "0823": 173, "0824": 174, "0825": 173, "083": 176, "0830": [173, 179], "08309749e": 199, "083132": 16, "083174": 18, "083261": 18, "0833": 181, "08333022e": 199, "083333": [156, 167], "0835": 173, "0837": [173, 181], "0838": 173, "0840": 173, "0842": 173, "0843": 173, "0844": 179, "084423": 18, "0845": 173, "0847": [173, 174], "084713": 174, "0848": 173, "0850": 173, "0851": [173, 181], "0853": 173, "0855": [173, 178], "08553692": 152, "085536923187668": 81, "0857": 173, "0859": 173, "0861": 173, "0862": 173, "0863": [173, 174], "086334": 18, "0864": 173, "086505": 18, "0866": 173, "086688": 13, "086780": 17, "087": 12, "0871": 173, "0872": 173, "087328": 18, "0875": 173, "0876": 173, "087777": 18, "0878": 173, "0880": 174, "0881": 173, "0882": 173, "0883": [173, 181], "0886": 173, "0888": 173, "08886633068323135": 171, "0890": 173, "08908725529909134": 171, "0891": 173, "089286": 167, "0894": 173, "0896": 173, "0897": 173, "0899": 179, "08_pretrained_vit_feature_extractor_pizza_steak_sushi": 178, "09": [61, 62, 67, 118, 136, 142, 170, 176, 179], "0901": 173, "0902": [173, 174], "0903": 173, "0904": 173, "0905": 173, "090909": 167, "09090909090909": 81, "0911": 173, "0913": 173, "0914": 173, "0915": 173, "0916": 173, "091695": 18, "0918": 173, "091864": 12, "0919": 170, "09199": 173, "0920": 173, "0923754647374153": 177, "0924": [176, 177], "0926": 173, "0927": 173, "092742": 16, "0928": [173, 177, 179], "0929": 173, "09309": 172, "0932": 173, "0933": [173, 179], "093484": 18, "0936": 173, "0937": 173, "0938": [173, 178], "0939": 173, "0940": 173, "0941": 174, "0945": 173, "0947": 173, "0948": 173, "0949": 173, "0950": [173, 179], "0953": 173, "0955": 180, "095564": 174, "0956": [174, 181], "0957": 173, "0958": 173, "0959": 173, "0960": 173, "0961": 173, "096154": 167, "096220": 18, "0963": 173, "0964": 173, "0965": 173, "0968": 173, "096812": 18, "0969": 173, "09708521e": 199, "0972": 173, "0974": 173, "097538": [12, 14], "0977": 173, "0978": 173, "09790012e": 199, "098": 12, "0980": [173, 174], "0981": 173, "098383": 18, "0984": 173, "0985": 174, "098520": 174, "098661": 18, "0987": 173, "098811": 18, "0989": [172, 173], "09919948130846024": 171, "0992": 173, "0993": 173, "099350157876355": 153, "09935016": 153, "0994": 173, "09_pretrained_effnetb2_feature_extractor_food101_20_perc": 179, "09_pretrained_effnetb2_feature_extractor_pizza_steak_sushi_20_perc": 179, "09_pretrained_vit_feature_extractor_pizza_steak_sushi_20_perc": 179, "09_pytorch_model_deploy": 179, "0_": 53, "0a4959e7a13b": 54, "0b": 52, "0b0001": 52, "0b10": [52, 96], "0b1010": 92, "0b1101011": 52, "0d17a834dca2": 78, "0ef33cc3a94d": 71, "0f": 118, "0f0f0f": 188, "0f0f0f0f": 188, "0f73a35e8ce2": 89, "0j": [92, 96], "0m": [117, 118, 127, 129, 140, 144, 173], "0mib": 170, "0o": 52, "0o12": 52, "0o15": 52, "0o310": 92, "0qgx4kh": 117, "0th": [170, 178], "0x": 52, "0x0000012c87c0af70": 37, "0x000001d284b3b430": 36, "0x000001d8aec3ac10": 103, "0x000001d8aec44eb0": 103, "0x000001d8aec7e1f0": 103, "0x000001d8aec7e4c0": 103, "0x000001d8aec7e5e0": 103, "0x00000218ffc65220": 105, "0x0000021e45765b20": 102, "0x0000021e45765dc0": 102, "0x00007ffad7cb2770": 37, "0x000a": 52, "0x12c": 92, "0x12c4cb88d90": 200, "0x12c4df5c1c0": 200, "0x12c4e273c70": 200, "0x12c50e26c10": 200, "0x12c53a52d60": 200, "0x12c53affc10": 200, "0x163ca247070": 203, "0x163cdf926d0": 203, "0x163ce3245e0": 203, "0x163cfcc79d0": 203, "0x163d0288250": 203, "0x163d05bfa60": 203, "0x163d0f2ae20": 203, "0x1662f00ac70": 191, "0x16633986eb0": 191, "0x166339f84c0": 191, "0x16635a26b80": 191, "0x16635a63550": 191, "0x170b84f24a0": 39, "0x1a11b1a6e80": 194, "0x1a11b2e7a00": 194, "0x1a11b349eb0": 194, "0x1a2186f5940": 201, "0x1a21896cac0": 201, "0x1a218c77d30": 201, "0x1a218d2d6a0": 201, "0x1a218de36a0": 201, "0x1a21a1a7310": 201, "0x1a21a449490": 201, "0x1a21a492c70": 201, "0x1a21b6eba00": 201, "0x1be276a14a8": 203, "0x1bfbd546670": 192, "0x1bfbe8c42b0": 192, "0x1bfbe8d2640": 192, "0x1bfbeacc8b0": 192, "0x1bfbf65d610": 192, "0x1ce07cb24f0": 197, "0x1ce07cc58e0": 197, "0x1da1f804700": 198, "0x1da1f8bf520": 198, "0x1da209c66d0": 198, "0x1da20f86b20": 198, "0x1da20fa4c10": 198, "0x1da214a06d0": 198, "0x1edcdfafd30": 199, "0x219288a7220": 190, "0x2192d5bb3a0": 190, "0x2192de12c70": 190, "0x2192dfa48b0": 190, "0x2192e06b910": 190, "0x2192e0be9d0": 190, "0x2192e328640": 190, "0x22c3a5e3ac0": 196, "0x22c3a722fd0": 196, "0x22c3b278670": 196, "0x22c3c78df40": 196, "0x22c3c8f1040": 196, "0x263397171f0": 188, "0x264e0145a90": 187, "0x26bc28689d0": 189, "0x26bc65bb8b0": 189, "0x26bc7611700": 189, "0x26bc7dd6cd0": 189, "0x26bc7eaf0a0": 189, "0x26bc8131250": 189, "0x26bc81b38b0": 189, "0x26bc81e5730": 189, "0x29872f94b20": 195, "0x7f122dd0f0d0": 179, "0x7f17f3f5f520": 178, "0x7f18845ff0d0": 178, "0x7f53c0b9dca0": 174, "0x7f53c0b9de50": 174, "0x7f53c6d64040": 174, "0x7f5460ab8400": 174, "0x7f5460ab8490": 174, "0x7f5460ad23d0": 174, "0x7f5460ad2f70": 174, "0x7f5461f70c40": 174, "0x7f5461f70c70": 174, "0x7f8389169070": 117, "0x7f853747b550": 180, "0x7f853747bbe0": 180, "0x7fa942951460": 176, "0x7fa942951550": 176, "0x7fa9429a37c0": 176, "0x7fa9429a3a60": 176, "0x7fc991463cd0": 173, "0x7fc991475120": 173, "0x7fca2e3445b0": 181, "0x7fca2e344760": 181, "0x7febf1d213a0": 177, "0x7febf1d21490": 177, "0x7febf1d216a0": 177, "0x7febf1d218e0": 177, "0xfb": 52, "1": [0, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 39, 41, 44, 45, 46, 48, 49, 52, 58, 66, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 92, 93, 94, 95, 97, 99, 102, 103, 104, 105, 107, 112, 118, 127, 129, 132, 134, 136, 137, 140, 141, 143, 144, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 167, 169, 171, 172, 175, 176, 177, 182, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 198, 199, 201, 202, 203], "10": [0, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 30, 32, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 61, 64, 67, 71, 72, 73, 75, 76, 77, 78, 80, 81, 83, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 105, 107, 112, 117, 118, 129, 131, 133, 136, 137, 139, 142, 143, 144, 146, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "100": [14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 30, 36, 40, 48, 49, 50, 54, 56, 58, 75, 80, 81, 92, 104, 105, 112, 127, 129, 132, 134, 139, 143, 146, 150, 151, 153, 156, 157, 158, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 186, 187, 190, 191, 192, 195, 196, 200, 201], "1000": [13, 15, 20, 49, 52, 79, 91, 96, 102, 117, 118, 131, 132, 134, 135, 136, 137, 147, 153, 171, 172, 174, 176, 178, 179, 189, 195, 196, 197, 198, 199], "10000": [10, 17, 18, 19, 131, 142, 147, 153, 156, 173], "100000": [16, 147, 185], "1000000000000000055511151231257827021181583404541015625": 52, "1001": 173, "1002": 173, "10026431e": 199, "1003": 173, "1004": 173, "1005": 173, "1006": 173, "1008": 173, "100k": 131, "100th": 139, "101": [78, 103, 166, 167, 174, 177, 179, 196, 197, 200, 201], "1010": [96, 172, 173], "1011": 173, "1012": 178, "1016": 173, "1017": 173, "1018": 173, "101803": 14, "102": [78, 103, 156, 157, 166, 167, 168, 174, 176], "1020": [173, 174], "1021": 173, "1024": [177, 178, 179], "10276143": 150, "1029": 173, "103": [103, 166, 167, 168, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1031": 173, "1034": 173, "1039": 173, "104": [32, 103, 156, 157, 167, 168, 174], "1041": 173, "1043": 173, "1044": 173, "104504": 17, "1046": 173, "1049": 173, "105": [12, 40, 136, 167], "1050": [53, 173], "1051": 173, "1052": 173, "1053": [163, 173], "1054": [163, 173], "1055": [163, 173], "1056": 163, "1057": [163, 173], "1058": 174, "1059": [173, 174], "106": [167, 170], "1060": 173, "1061": [170, 173], "1062": 173, "1063": [171, 173], "1065": 173, "106628291529549": 81, "1067": 178, "106846": 18, "10696289e": 199, "107": [52, 167, 174], "1070": 173, "107072": 18, "1070e": 173, "1072": 179, "107221": 15, "107353": 14, "1074": [173, 174], "1077": 173, "1078": [173, 174], "107833": 174, "108": [167, 174], "1080": 173, "108178": 18, "1082": 173, "1084": [173, 178], "1086": 173, "1087": 173, "1088": 173, "109": [78, 156, 167, 177, 179], "1092": 173, "109299": 197, "1093": 173, "1095": 173, "1095522857580948": 193, "109553": 18, "1096": 173, "1097": [173, 178], "1097501": 150, "1098": [127, 174, 178], "1099": [127, 173], "1099_file": 91, "10_epoch": 177, "10_python_pandas_modul": 168, "10ffff_": 53, "10fp": 179, "10k": [129, 178], "10mb": 179, "10x256": 174, "11": [13, 16, 18, 32, 36, 39, 45, 48, 50, 52, 53, 54, 56, 58, 62, 66, 67, 76, 80, 90, 92, 93, 96, 98, 102, 103, 118, 129, 131, 133, 137, 139, 143, 146, 150, 151, 152, 153, 156, 160, 165, 167, 168, 170, 172, 173, 174, 176, 178, 185, 187, 195, 200, 201], "110": [167, 168, 170, 179], "1100": [53, 127], "1101": [127, 173], "110110": 99, "1102": 127, "1104": 181, "1105": 170, "110560": 18, "1105e": 172, "111": [96, 127, 156, 157, 167, 168, 174, 179], "1110": [96, 173], "1111": [40, 96, 173], "111111": [95, 167], "11111111": 153, "1112": [173, 175, 180, 181], "1114": 173, "1115": 173, "1117": 173, "112": [127, 137, 167, 168, 173, 176], "1120": 173, "1121": 173, "11222578": 9, "1123": 173, "112300": 137, "1124": 173, "112483": 18, "1126": 174, "1127": 174, "1128": 174, "11289431e": 199, "1129": 174, "113": [127, 167, 173, 174], "1130": [173, 174], "1131": [174, 181], "1132": [173, 174], "1134": 194, "1135": [173, 194], "113538": 18, "1136": 194, "11360953003168106": 171, "1137": [173, 174, 194], "1138": [173, 181, 194], "1139": 173, "114": [127, 156, 157, 167, 168, 173, 174], "1140": 173, "1141748": 118, "11421774e": 199, "1143": 173, "1144": 173, "1145": 173, "1146": 173, "1147": 173, "1148": 173, "1149": 173, "115": [127, 129, 156, 157, 167, 168, 173], "1150": 173, "1151515151515152": 187, "1154": 173, "115551": 18, "115697": 174, "1157": [174, 178], "115799": 12, "1158": 194, "1159": 194, "115971": 18, "116": [127, 129, 167, 173], "1160": 194, "1161": 194, "1162": 194, "1163": 179, "117": [127, 129, 167, 170], "1170": 173, "1172": 174, "11734513e": 199, "117543": 18, "1176": 174, "117647": 167, "117668": 18, "118": [127, 129, 167], "1181": 173, "11818328e": 199, "119": [127, 129, 167, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "119e50d96cfb": 71, "11x": [178, 179], "12": [9, 11, 13, 15, 17, 19, 20, 25, 30, 32, 33, 36, 40, 41, 44, 45, 46, 47, 48, 50, 52, 53, 54, 56, 58, 61, 62, 64, 65, 66, 67, 71, 73, 75, 76, 80, 81, 92, 93, 95, 96, 98, 102, 107, 117, 118, 129, 137, 139, 142, 143, 150, 151, 152, 153, 160, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 187, 188, 189, 194, 196, 197, 199, 201, 202], "120": [5, 50, 78, 81, 127, 131, 156, 158, 167, 168, 170, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1200": 171, "12000": 147, "120027": 118, "120k": 140, "121": [127, 129, 131, 167], "1212": 98, "121486": 172, "121492": 18, "1216": [174, 178], "122": [13, 127, 167], "1224": [173, 178], "122967": 18, "123": [13, 53, 94, 98, 127, 129, 167], "12336799": 150, "123456789": 53, "1234567890": [41, 92], "1234567890123456789": [52, 93], "12345678901234568": [52, 93], "12345678910": 49, "123774": 12, "1238": 181, "123xyz": 179, "124": [13, 94, 129, 167, 174], "1240": [127, 172], "1241": 127, "1242": 127, "1243": 127, "124377": 18, "1244": 127, "1246": 178, "125": [13, 49, 118, 129, 146, 152, 167], "125000": 167, "1251": 178, "1252": 185, "1255": 174, "12551": 129, "1257": 173, "1258": [173, 178], "12587": 196, "126": [13, 129, 167, 176], "1262": 173, "126257": 197, "127": [13, 129, 146, 167, 179, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1270": 179, "12751": 129, "1277": [173, 179], "1278387305019275": 187, "128": [13, 54, 58, 129, 167, 173], "1280": [176, 177, 178], "12800": 173, "128440": 156, "1285": [173, 174], "12872044e": 199, "1288": [171, 173], "128x": 178, "129": [13, 129, 167], "1294": 174, "12940": [156, 157, 168, 190], "12945": 168, "1295": 136, "1296": 185, "129861": 12, "12k": 129, "13": [9, 13, 16, 29, 30, 32, 36, 39, 49, 52, 53, 54, 58, 61, 62, 64, 67, 71, 76, 78, 80, 81, 92, 94, 96, 102, 117, 129, 139, 142, 143, 146, 151, 152, 153, 160, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 190, 197, 199, 201], "130": [13, 118, 129, 156, 167, 170, 174, 176], "1300": 173, "13037": 172, "1309": 170, "131": [13, 32, 167], "1313": 179, "1316": 173, "1318": 181, "131910": 16, "132": [13, 129, 167], "1320": 173, "1322": 173, "1324": 172, "1325": 173, "1326244364": 60, "1328": 178, "133": [13, 129, 167, 179], "1331": 178, "1332": 170, "1333": [174, 195], "1336": 170, "134": [13, 129, 167], "13409426e": 199, "13415": [156, 157, 168], "1345": 40, "13495": [156, 157, 168], "13499": 168, "135": [13, 129, 167], "135432": 179, "135925": 168, "136": [13, 129, 167, 174], "1360": 174, "136041": 174, "1366": 178, "13680419e": 199, "137": [13, 129, 131, 167, 174], "1373": [173, 174], "1375": [127, 178], "13756537093": 95, "1376": 127, "1377": [127, 178], "137723281": 13, "1378": 127, "1379": 127, "138": [13, 129, 146, 167, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1382": 174, "138264": 156, "1383": 178, "138373": 174, "1384": 174, "139": [13, 129, 167, 174], "13914421e": 199, "13915538e": 199, "139472": 131, "13950": [156, 157, 168], "1396": 179, "13960670e": 199, "1399": 173, "14": [9, 13, 14, 16, 18, 20, 25, 32, 33, 39, 40, 48, 50, 53, 54, 55, 56, 58, 63, 65, 67, 71, 75, 76, 91, 92, 93, 96, 100, 102, 103, 107, 129, 139, 142, 143, 146, 151, 152, 153, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "140": [13, 127, 129, 137, 167, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1400": [136, 171], "140000": 137, "14003": 190, "1401": 129, "1403": 173, "1403916": 118, "1404": 173, "140708960741200": 97, "140708960741232": 97, "140708960741424": 97, "1408": [177, 179], "141": [13, 127, 129, 167, 168, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "14112001": 152, "1412": 173, "1415": 53, "14159": [81, 83], "141592653589793": [52, 81, 95], "14183273e": 199, "142": [13, 127, 129, 137, 167, 179], "14204329": 153, "1425": 174, "1426": 174, "142631": 174, "142705": 18, "142857": 167, "143": [13, 127, 129, 167, 174], "1437": 178, "14398": 172, "144": [13, 29, 49, 96, 127, 129, 167, 174], "1445": [185, 194], "1446": 194, "14464017748832703": 171, "1447": [178, 194], "1448": 194, "1449": 194, "145": [13, 167, 174, 179], "1453": 185, "14577043e": 199, "1459": 181, "146": [13, 36, 167, 170, 174], "146124": 18, "14613738e": 199, "1465": 173, "147": [13, 167, 174], "1472": 174, "14770535": 150, "147751": 18, "147760": 172, "148": [13, 152, 167, 174, 179, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "148148": 167, "14847551e": 199, "149": [13, 167, 174], "1490": 174, "149320": 18, "1495": 172, "1499": 173, "14it": 173, "14j": 92, "14m": 178, "15": [9, 13, 16, 17, 18, 19, 20, 30, 32, 37, 39, 40, 41, 44, 45, 47, 48, 50, 52, 53, 54, 55, 57, 58, 61, 62, 66, 67, 72, 73, 93, 96, 102, 103, 127, 129, 136, 137, 139, 143, 146, 151, 152, 167, 168, 173, 174, 176, 177, 178, 179, 185, 187, 189, 194, 195, 197, 198, 199], "150": [13, 15, 16, 92, 105, 117, 129, 146, 147, 156, 167, 174, 179, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1500": [132, 173, 189, 191], "15000": [73, 147], "150000": 147, "1501": 173, "1502": 173, "1503": 173, "1505": 173, "1506": 172, "15097": 13, "151": [13, 129, 167], "151165": 197, "1511893559": 60, "1513": 173, "15150": 179, "151786": 167, "152": [13, 129, 167, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "152862": 18, "1528797322": 61, "153": [49, 129, 167], "1531": 172, "15325888": 172, "153259": 172, "1533": 172, "153319": 12, "153527": [12, 14], "1536": [117, 131], "153883": 18, "154": [129, 156, 157, 167, 168, 174], "1541": 173, "1545730073": 65, "1545925769": 66, "1545966844": 66, "1549": 164, "155": [129, 136, 167], "15514180e": 199, "1554": 178, "1556": 178, "156": [25, 167, 168, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "156250": 167, "156586": 17, "1568291": 196, "15687723e": 199, "1569": 173, "157": [167, 170], "15750": 168, "1576": 178, "158": [167, 168, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "158023": 146, "1582568": 196, "1589": [173, 178], "159": 167, "1590": 173, "159689": 14, "159790": 18, "16": [9, 13, 16, 28, 31, 32, 33, 35, 38, 39, 48, 49, 50, 52, 54, 55, 56, 58, 67, 73, 80, 81, 86, 91, 92, 93, 96, 103, 104, 129, 139, 142, 143, 151, 152, 153, 167, 168, 170, 171, 174, 176, 178, 179, 185, 189, 190, 192, 194, 195, 196, 197, 200, 201], "160": [156, 167, 168, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1600": 171, "1608": [173, 174], "161": 167, "161290": 167, "161491": 17, "16188": 156, "16189161": 173, "162": [75, 167], "1620": [173, 174], "162014": 174, "1623": 174, "1624370069": 65, "1624370297": 66, "16280mib": 170, "162875": 9, "163": [167, 174], "163778": 18, "164": [133, 167], "1640": 178, "1647": [174, 192], "1648": 170, "165": [137, 167, 174], "16500": [156, 157, 168], "165000": 137, "1652": 178, "166": [18, 20, 167], "1664": 173, "1666": 172, "1669": 179, "167": 167, "167204": 18, "168": [156, 157, 167, 168], "1680013019": 117, "168321": 61, "1685": 174, "1686": 174, "169": [167, 168], "1690": [180, 181], "169322": 172, "1695": 178, "1697": 174, "169704": 174, "16j": 92, "16pt": 197, "16x": 174, "16x16": 178, "17": [13, 16, 39, 48, 49, 52, 54, 56, 57, 58, 66, 67, 72, 73, 93, 102, 103, 104, 129, 131, 139, 143, 151, 159, 167, 168, 172, 174, 178, 179, 185, 193, 197, 201, 202], "170": [118, 167], "1700": 19, "1701": 178, "170215": 18, "17041474e": 199, "171": [156, 157, 167, 168, 170, 174], "1711e": 173, "17137357e": 199, "171588": 18, "171995": 168, "172": [66, 167, 174], "1725": [173, 174], "17254901960784313": 190, "173": [167, 174], "173282": 172, "17328203": 172, "1733": 172, "1734": 173, "173469": 167, "1736": 172, "174": [167, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "174260": 9, "17450": [156, 157, 168], "175": [118, 146, 167], "175000": 147, "1751": 173, "1752011936438014": 52, "1757": 137, "176": [78, 156, 157, 167, 168, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "176471": 167, "1765": 174, "1766": 179, "1768": 137, "177": 167, "1772": 178, "177mib": 170, "178": 167, "179": 167, "179027": 18, "17951135e": 199, "179585": 12, "1796": 48, "17995": 168, "17th": 117, "18": [13, 16, 28, 30, 33, 35, 39, 44, 45, 48, 50, 56, 57, 58, 60, 61, 63, 64, 67, 69, 73, 95, 96, 98, 103, 104, 117, 129, 139, 142, 143, 146, 151, 156, 157, 159, 167, 168, 172, 174, 178, 179, 185, 196, 200, 201], "180": [49, 142, 167, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1800": 171, "18000": 147, "1802": 173, "1804": [172, 174, 178], "18089902e": 199, "181": [167, 174], "1815": 173, "18176766975113706": 187, "1819": [75, 78], "182": [167, 168, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1821": 75, "1822565": 196, "183": [81, 167, 179], "18324209e": 199, "18344": 168, "184": [167, 168, 174], "184080": 13, "1843": 174, "1845": 173, "185": [167, 179], "1850": 173, "1855": 117, "186": 167, "18644463e": 199, "1865": 173, "1867": 173, "1869": 173, "186e9069bdbf14a9": 127, "187": [167, 168, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1872": 172, "187264": [12, 14], "1873": 173, "1875": 173, "187500": 167, "188": [156, 157, 167, 168, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "18812": 129, "1882": [173, 174], "1882615260180538": 193, "188828": 18, "1889": 172, "189": [167, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "18920": 168, "19": [13, 16, 35, 39, 41, 48, 49, 53, 54, 57, 58, 66, 67, 73, 75, 76, 78, 92, 96, 103, 129, 139, 143, 146, 151, 152, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 170, 173, 174, 176, 178, 187, 190, 193, 196], "190": [167, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1900": 156, "19000": 104, "1902": 173, "190337": 16, "190504": 195, "19068": 129, "190871": 146, "191": 167, "1910": 173, "19116": 103, "1913": 172, "192": [167, 176], "1920e": 172, "1922": 174, "192250": 16, "1926": 72, "1927": 173, "1928": 48, "192985": 146, "193": [167, 168, 174], "19305918e": 199, "193080": 146, "193451495": 170, "1937": 25, "194": [167, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1942": 40, "1945": 172, "195": 167, "1953": 48, "1955": 178, "19566591e": 199, "195915": 9, "196": [146, 153, 167, 178, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1960": [129, 135], "1961": 174, "196526332130161": 153, "1966": 53, "19680801": [26, 112], "19692239e": 199, "197": [167, 168, 178, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1970": [60, 65, 66, 170], "1973": 173, "19735756e": 199, "197483": 16, "1976713240146637": 171, "1977": 199, "19789154e": 199, "1979": [174, 178, 181], "197917": 174, "198": 167, "1980": 129, "1984": [117, 173, 178], "1985": 129, "1988": [117, 129], "1989": [117, 178], "199": [138, 167, 168, 179, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "1990": 129, "199128": 17, "1992": 129, "1993": [129, 132], "199333": 185, "1994": 129, "1995": [129, 132], "1996": [1, 129, 131], "1997": [1, 129], "1998": 129, "1999": [129, 173], "19a": 71, "19th": 129, "1a2": 40, "1ab34": 40, "1b9ae9b69587": 152, "1d": [149, 150, 173, 178], "1e": [31, 173, 174, 178, 179], "1e100": 92, "1e6": [29, 30], "1e8": 196, "1erejibdqeccqncb1pbz7w": 117, "1f": [53, 147, 197], "1j": [32, 92, 154], "1k": [131, 172, 178], "1m": [32, 117, 118, 127, 129, 140, 144, 146], "1min": 177, "1n": 32, "1num": 91, "1p": 94, "1st": [38, 54, 76, 77, 78, 79, 81, 118, 139, 142, 170], "1variabl": 89, "1x": 179, "1x1": [17, 19], "1x2": [17, 19], "1x3": [17, 19], "1x4": [17, 19], "1x5": [17, 19], "1x6": [17, 19], "1x7": [17, 19], "1x8": [17, 19], "1x9": [17, 19], "2": [4, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 28, 29, 30, 31, 32, 33, 35, 37, 38, 41, 43, 44, 45, 46, 48, 49, 52, 58, 66, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 89, 92, 93, 94, 95, 97, 99, 102, 103, 104, 105, 107, 110, 127, 129, 130, 132, 134, 140, 141, 143, 144, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 175, 176, 177, 182, 183, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 206], "20": [12, 13, 14, 16, 17, 18, 19, 20, 29, 30, 33, 35, 37, 39, 41, 47, 48, 49, 50, 52, 53, 54, 57, 58, 60, 64, 67, 72, 73, 75, 76, 78, 80, 81, 93, 103, 117, 118, 129, 133, 135, 139, 143, 146, 149, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 173, 176, 177, 178, 179, 181, 187, 189, 190, 195, 197], "200": [56, 75, 78, 81, 92, 104, 117, 118, 128, 129, 133, 136, 137, 146, 151, 167, 171, 172, 178, 179, 190, 199, 201], "2000": [129, 132, 136, 137, 141, 143, 144, 147], "20000": 143, "200000": [147, 156], "200000000000003": 86, "2001": 135, "2003": 129, "20040757": 153, "2005": 129, "200555": 64, "2005in": 132, "2006": [129, 132], "2006i": 132, "2008": 118, "200882": 18, "2009": 129, "201": [60, 129, 167], "2010": 129, "2011": [146, 172], "2012": [60, 98, 129], "2013": [61, 62, 129], "201300": 197, "2014": [129, 137], "2015": [129, 178, 185, 201], "2016": [129, 199, 201], "2016life": 133, "2017": [12, 14, 60, 133, 172, 178, 187, 201], "2017becaus": 117, "2018": [40, 60, 61, 62, 65, 66, 118, 146, 201], "2019": [60, 61, 62, 64, 65, 66, 78, 118, 129, 170, 178], "202": [75, 129, 167], "2020": [64, 129, 156], "20200": 179, "2020when": 131, "2021": [53, 60, 61, 63, 66, 75, 117, 136, 170, 179], "2021befor": [117, 129], "2021pythondatatyp": 53, "2022": [72, 136, 138, 140, 170, 173, 174, 176, 177, 178, 179], "2023": [25, 127, 131, 135, 136, 137, 138, 140, 143, 170], "20240789e": 199, "202563": 190, "2028": 173, "202998": 9, "203": [18, 20, 129, 167], "2032": 178, "2039": [173, 174], "204": [129, 167], "2044": 178, "204451": 18, "20491465": 153, "205": [129, 131, 167], "2050": 178, "2052": 173, "205306": 16, "2056": 192, "206": [129, 167], "2064": 178, "207": [129, 167, 168, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "2074": 178, "2076": 178, "20784702e": 199, "208": [129, 167, 168, 176], "20800138e": 199, "20801": 146, "20843398e": 199, "2086": 131, "2087a9c41308": 39, "209": 167, "209539": 16, "209800": 16, "20994144e": 199, "20it": 181, "20th": 129, "20x20": 8, "21": [13, 16, 32, 39, 41, 48, 49, 50, 53, 57, 58, 60, 62, 63, 66, 67, 73, 78, 81, 104, 139, 142, 146, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 173, 174, 176, 189, 192, 194, 195, 196, 197, 201], "210": [167, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "2102": 40, "2106": 173, "2109": 170, "211": [127, 167, 186], "211349": [12, 14], "211538": 167, "2117351": 179, "2118": [172, 173], "212": [127, 167, 186], "2124579": 174, "2126": 185, "21260800e": 199, "2129": 178, "213": [127, 167, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "21330910940589698": 193, "2134": 173, "21355": 13, "2137": 178, "213710": 16, "21379529e": 199, "214": [18, 20, 127, 167, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "214286": 167, "214695": 199, "214782": 13, "2148": 117, "215": [127, 144, 167, 173], "2150": 178, "2154": 153, "2157": [173, 174], "216": [49, 81, 167, 173], "2162": 170, "217": [167, 173], "21728": 13, "21729660034179688": 171, "217391": 167, "21741122e": 199, "21748794e": 199, "218": [167, 173, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "2181": 173, "2183": 173, "21855997e": 199, "2189884": 13, "219": [137, 152, 167, 173, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "2191": 173, "2196": 173, "21987980e": 199, "21k": 178, "22": [13, 16, 25, 30, 32, 53, 54, 58, 60, 61, 63, 64, 66, 67, 73, 78, 80, 81, 96, 129, 151, 152, 153, 157, 167, 170, 173, 174, 178, 185, 195, 197, 201], "220": 167, "2200": [142, 178], "220087": 197, "22026": 52, "2205": 178, "220657": 18, "2209": 173, "221": [167, 177, 179], "2210": 172, "2211": 173, "222": 167, "222222": 167, "22222222": 153, "22291790e": 199, "223": [167, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "223188": 9, "2235": 173, "22357762": 153, "22389": 190, "223905": [12, 14], "22397933e": 199, "224": [167, 170, 174, 176, 177, 178, 179], "22417715e": 199, "224369": 12, "2244": 172, "224x224": 176, "225": [129, 167, 174, 176, 177, 178, 179, 180, 181], "225000": 147, "2251799813685248": 52, "2256": 172, "2258": 173, "225806": 167, "22592182e": 199, "226": [129, 146, 167], "2261": 178, "226677": 14, "22672978": 150, "227": [129, 167, 177, 179, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "2270": 172, "22709318e": 199, "22722896e": 199, "2275": [173, 174], "2279": 178, "228": [129, 146, 167], "2281": 178, "228173": 179, "228434": 197, "22897": 196, "229": [129, 167, 170, 176, 177, 178, 179, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "22911": 190, "2292": [170, 178], "22931538e": 199, "22949": 190, "2298": 129, "23": [13, 16, 32, 40, 48, 49, 53, 54, 60, 61, 62, 64, 66, 67, 81, 94, 103, 117, 127, 129, 136, 138, 139, 146, 151, 156, 157, 167, 168, 170, 173, 174, 177, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "230": [137, 167], "230000": 137, "2303": 173, "2305ca5": 25, "231": 167, "2314": 174, "23148074": 172, "231481": 172, "2315": 172, "23180804": 150, "2319": 173, "232": [167, 176, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "23250": 142, "2328": 173, "233": [49, 167], "2331": 173, "233336": 12, "233423": 60, "23379671": 153, "2339e": 172, "234": 167, "234234": 117, "2344": 178, "2345": 173, "234566": 60, "2347": [173, 178], "234922": 12, "235": 167, "2351": 178, "2352": 178, "2353": 174, "2354": 173, "2358": 178, "236": 167, "2360": 173, "23600": 168, "23606798": 152, "23611012e": 199, "2368": 170, "237": [129, 167], "2377": 178, "238": [129, 167], "2381": 172, "23845": 168, "2389": 178, "239": [129, 167], "2391": 178, "2392": [173, 174], "24": [13, 16, 30, 41, 48, 50, 54, 56, 58, 61, 62, 67, 80, 81, 103, 129, 142, 146, 151, 156, 157, 167, 168, 173, 174, 176, 178, 179, 189, 192, 194, 195, 196, 197, 201], "240": [129, 167, 176], "2400": 172, "2401": 173, "241": [129, 167], "2412": 178, "2418": 178, "242": 167, "2422": 178, "24271445e": 199, "24299133e": 199, "242b77ef2a87": 93, "243": 167, "2431": [173, 174], "2432": 173, "244": 167, "2445": 178, "2446": 178, "244898": 201, "2449": 173, "245": 167, "2454": 178, "245426098662": 160, "245483": [12, 14], "2456": 173, "245614": 167, "2457": 29, "24576mib": 170, "2458": 185, "246": 167, "246154": 156, "2465": 173, "24674836e": 199, "24677": 190, "247": [167, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "2471": 173, "247597": [12, 14], "2476979795053773": 52, "248": [167, 178], "24813498e": 199, "248490": [12, 14], "24865": 196, "249": 167, "2493": 178, "249765": 173, "2499": 173, "25": [13, 17, 18, 19, 20, 25, 31, 38, 41, 48, 49, 50, 52, 54, 56, 58, 61, 65, 67, 72, 81, 92, 93, 95, 103, 129, 140, 143, 146, 147, 151, 152, 156, 167, 172, 174, 179, 185, 187, 189, 190, 192, 196, 197, 201], "250": [105, 118, 131, 144, 167, 173, 174, 178, 179], "2500": [174, 195, 197], "250000": [147, 156, 167, 190], "2505": 172, "250fe64180f3": 103, "250k": 140, "250w": 170, "251": [52, 167], "2510": [173, 174], "2518868": 137, "252": 167, "2521": 173, "25231985e": 199, "25250": 179, "2526": 178, "252785": 14, "253": [52, 167], "2531": 179, "2534156": 196, "2535": 185, "2536": 173, "254": [102, 167], "2541": 178, "2549": [172, 173], "25490048e": 199, "255": [10, 12, 17, 18, 19, 20, 167, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "2557": 192, "2558": 173, "2559205": 150, "256": [31, 54, 58, 129, 167, 173, 174, 176, 177, 178], "2560": [173, 174], "25600": 173, "2560x3": 174, "2566": 170, "2569": 173, "257": [85, 129, 167], "2573": 178, "2578": 174, "257812": 174, "258": [129, 167], "2581": 173, "2582289": 179, "258364": 16, "2587": 173, "258745": 196, "2588": 173, "259": [129, 167], "259259": 167, "259490": 185, "25hmlxtend": 173, "25th": 156, "26": [13, 53, 55, 58, 64, 67, 69, 81, 129, 131, 136, 142, 146, 151, 156, 157, 167, 168, 185, 189, 195, 197], "260": [129, 167], "2604": [174, 178, 181], "260417": 174, "2606": 178, "2609": 173, "261": [129, 167], "2617": 178, "261842": 190, "262": [167, 176], "262680": 17, "2627": 173, "263": 167, "2633": 178, "2635": 178, "263600": 16, "2637": 178, "2638": 173, "264": 167, "2641": [175, 177, 180, 181], "26421880": 173, "264672": 18, "265": 167, "265008": 13, "2652958": 136, "26568259e": 199, "26571389e": 199, "266": 167, "2660": 178, "2664": 173, "2669": 173, "267": 167, "2671131": 170, "2671256": 170, "268": 167, "2686": 173, "2688": 173, "269": 167, "2694": 178, "2697": 178, "269809": 173, "26t12": 136, "27": [13, 37, 41, 48, 49, 50, 58, 64, 66, 69, 78, 80, 95, 96, 129, 140, 142, 146, 151, 152, 156, 157, 167, 168, 170, 173, 174, 176, 195], "270": 167, "2706": 173, "2707": 178, "271": 167, "2711": 172, "2713": 173, "2714": 179, "271429": 167, "272": 167, "27216990e": 199, "272699": 197, "272727": 167, "273": [39, 167], "2738": 178, "274": 167, "2741": 173, "2748": 172, "275": [167, 194], "27500": 156, "2751": 178, "2752603": 179, "2753": 173, "2754": 178, "27541": 179, "275510": 167, "275862": 179, "276": 167, "2761": 12, "2766": 178, "276716": [12, 14], "27672348": 150, "277": [131, 167], "277027": [12, 14], "2771": 178, "2772": 178, "2773": 178, "27764243": 150, "2779": 173, "278": 167, "2780": 177, "2782": 178, "278711": 18, "27891384e": 199, "279": [127, 167], "2793": 178, "2795": [170, 178], "27j": 92, "27w": 170, "28": [13, 16, 32, 39, 48, 49, 50, 58, 60, 66, 72, 81, 102, 136, 141, 146, 151, 167, 168, 173, 174, 176, 177, 197], "280": [127, 132, 142, 167, 174], "2801": 142, "2804": 178, "2805": 179, "280702": 167, "2809": [173, 178], "280w": 170, "281": [127, 167, 176], "281250": 167, "28128674924373626": 179, "281287": 179, "2813": 179, "2815": 172, "2817": 194, "2818": 194, "2819": 194, "282": [127, 167], "2820": 194, "2821": 194, "2822": 185, "2824": [172, 173, 174], "28254475e": 199, "282662": [12, 14], "283": [127, 167], "2833": [173, 195, 197], "28366219": 152, "284": [12, 14, 167], "2840": [173, 178], "28418980453852622603883856494709731311218158362293224700445543940796643776911788129508577246309929258069598467896008287596053863082109746801947722280783720032649818198464452375358348619120021135797251857019557032565638659667745421115194468559021541269027438746788486392649581405327516658718317011453858465218779880972140612551504149701082164179367484198570734230003528355826545644223794779911723917115845213739921327820409005460708547942445234906498880588411276755120002108963510955276534630522965966177951626038063994937181228938844252668098515385045718428663547788122173798704717510979319749834083419004355222012043715855123615249682039587844431246269017612728291710718821388840627277407189863509789929339102406655115786899696829902032282666983426897111750208839152830573688512831984602085360572485861376": 96, "2842": [172, 173], "2848": 178, "285": [118, 167], "2852": 181, "286": 167, "2863": 173, "28675168e": 199, "2869": 179, "287": [129, 167], "287372": [12, 14], "2874848": 179, "288": [129, 167, 176, 177, 179], "2881": 172, "2883": 174, "28883356e": 199, "289": [129, 167], "2890": 172, "289000": 146, "2891": 178, "289474": 190, "28th": 129, "28x19": [17, 19], "28x20": [17, 19], "28x21": [17, 19], "28x22": [17, 19], "28x23": [17, 19], "28x24": [17, 19], "28x25": [17, 19], "28x26": [17, 19], "28x27": [17, 19], "28x28": [6, 8, 10, 17, 18, 19, 20, 173], "29": [13, 16, 20, 39, 48, 49, 66, 69, 118, 151, 152, 167, 168, 174, 177, 178, 179, 188, 189, 194, 196, 201], "290": [129, 167, 176], "2902": 173, "290549": [12, 14], "2906": 172, "291": [129, 167], "291667": 167, "2917": 173, "2918": 172, "291853": 15, "292": 167, "2920": 173, "2920e": 173, "29235": 13, "292969": 174, "293": 167, "2930": [174, 181], "293987": 13, "294": 167, "29402596": 153, "2941": 173, "29431485e": 199, "2946014910624595": 81, "294804": [12, 14], "294850": 14, "295": 167, "29515": 173, "29534113": 153, "295455": 167, "29560668e": 199, "295817": 12, "296": 167, "2969": 178, "297": 167, "2972": 177, "2973": [175, 177, 180, 181], "298": 167, "2981": 173, "298226": 12, "299": 167, "2992": 178, "29995": 168, "29ajdjehni": 139, "2a721b8800df": 132, "2ac45d11f3db": 132, "2b7b22686f73744e616d65223a22544954414e2d525458227d": 170, "2d": [16, 146, 147, 149, 150, 156, 172, 173, 178, 193, 202], "2d7f5e": 197, "2darrai": [160, 163], "2f": [12, 13, 14, 53, 95, 104, 146, 172, 173, 197, 200], "2f7f4e5fdb49": 67, "2j": [32, 52, 92, 93], "2k": 173, "2m": 131, "2min": 177, "2n": 32, "2nd": [38, 53, 54, 55, 76, 77, 79, 118, 139, 142, 170], "2p": 28, "2x": [146, 178, 179], "2x2": [150, 201], "3": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 62, 66, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 86, 89, 92, 93, 94, 95, 96, 97, 99, 100, 102, 103, 104, 105, 107, 117, 118, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 142, 143, 144, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 171, 172, 174, 175, 176, 177, 180, 181, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202, 203], "30": [15, 18, 20, 29, 30, 37, 38, 39, 45, 48, 49, 50, 53, 54, 58, 60, 61, 62, 64, 66, 72, 75, 76, 77, 78, 81, 93, 96, 97, 102, 118, 129, 132, 140, 146, 151, 156, 167, 170, 171, 172, 173, 176, 178, 179, 187, 190, 192, 194, 195, 198], "300": [19, 39, 54, 91, 92, 118, 129, 131, 137, 139, 143, 146, 167, 171, 172, 178, 188], "3000": [18, 19, 73, 118, 131, 132, 171, 172], "300000": [147, 185], "3000000000000003": 52, "300000e": 95, "3008": 178, "301": 167, "301184": [12, 14], "30119580e": 199, "3013": 173, "3015": 173, "302": 167, "3020": 173, "302078": 12, "3024": 174, "3025": 171, "303": [167, 179], "3031": 173, "30378713e": 199, "3038": 179, "303m": 178, "304": 167, "3047": 174, "305": 167, "305880": 16, "306": 167, "3061": 170, "306264": 197, "30668723": 150, "307": [167, 178], "3070": 172, "3072": 178, "3076": 173, "307m": 178, "308": 167, "3083": 173, "308492": 16, "3087": 178, "309": [167, 179], "30911403e": 199, "3092": 177, "30920635": 150, "30c": 170, "30fp": 179, "31": [32, 39, 48, 49, 60, 61, 62, 66, 81, 146, 167, 168, 173, 174, 176, 179, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "310": [163, 167], "31002414e": 199, "3100563": 179, "3102": 170, "310634": 16, "3106e": 172, "3107": 172, "311": [14, 163, 167], "311099": 17, "3112": 178, "3114": 178, "312": [129, 163, 167], "3125": 172, "312500": 167, "31287314e": 199, "31288138031959534": 171, "3129": 179, "313": [129, 163, 167, 173], "313125": 15, "3137": 173, "313707": [12, 14], "31390556e": 199, "314": [12, 14, 75, 129, 163, 167], "3140": [171, 172], "3141": 178, "3142": 172, "3143": 14, "3145": 178, "3149": 178, "315": [129, 167], "315317": 12, "31576734e": 199, "3159": 178, "315964": [12, 14], "316": [12, 14, 129, 167], "3169": 172, "317": 167, "31701798e": 199, "31708111e": 199, "318": [127, 167], "3187": 177, "318750": 156, "319": [127, 167], "3191": 173, "31dc": 132, "31m10": 173, "31m54": 173, "31x31": 173, "32": [16, 32, 33, 35, 39, 48, 50, 54, 58, 62, 117, 118, 127, 129, 131, 132, 140, 142, 144, 152, 156, 167, 170, 173, 174, 175, 176, 177, 178, 179, 181, 185, 197, 201], "320": [127, 167, 176], "3208": 178, "320879": 14, "3209": 178, "321": [127, 167], "3210": 172, "321004": 197, "32105794e": 199, "3212": [173, 178], "3216": 173, "322": [127, 167], "322715": [12, 14], "323": 167, "3230": 170, "32354": 173, "324": 167, "324129": 197, "3242": 173, "3246": 172, "3248": 173, "325": 167, "325394": 12, "326": 167, "3261": 178, "3263": 178, "326574": [12, 14], "3268": 179, "327": [167, 178, 179], "3275": 178, "3277": 174, "3278": 178, "328": 167, "3280": [171, 172], "3285697102546692": 173, "32857": 173, "328570": 173, "329": 167, "3295": [180, 181], "3298": 178, "329871": 12, "32k": 131, "32m1": 173, "32m519": 173, "33": [14, 16, 30, 32, 48, 60, 67, 78, 94, 95, 102, 104, 117, 118, 127, 146, 153, 167, 168, 170, 177, 179], "330": [50, 167], "3301": 178, "3307": 178, "3308": 177, "33094796e": 199, "331": 167, "33114510e": 199, "331191": 63, "33142653": 150, "332": 167, "33205527e": 199, "3323": 178, "333": [53, 60, 96, 167], "3333": [180, 181], "333333": 168, "33333333": [52, 152, 153], "333333333333333": 96, "333333333333333481363069950020872056484222412109375": 81, "3333333333333335": 81, "334": 167, "3345": 178, "334694": 18, "3349": 177, "335": 167, "3350": 172, "33516842e": 199, "3352": 174, "3353": 178, "336": 167, "33662976e": 199, "3367": [171, 173], "337": 167, "3371": [174, 180, 181], "3372": 178, "3374": 178, "33768743e": 199, "3377": [172, 173, 178], "3378": 174, "338": 167, "3380": 172, "3383": 177, "33856867e": 199, "338695217273813": 153, "339": 167, "3393": 173, "3399": 173, "33it": 181, "34": [40, 49, 60, 67, 81, 96, 102, 117, 151, 153, 167, 168, 170, 173, 178, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "340": [48, 49, 167], "3400": [175, 177, 180, 181], "3401": 170, "3407": 173, "340730": 13, "3409": 173, "340909": 167, "341": 167, "3410": 178, "3412": 174, "3417": 172, "342": 167, "3420": 171, "34238": 60, "342380": 60, "3428": 178, "343": [49, 167], "343280": 12, "343750": 167, "3438": 178, "344": [14, 167], "344095": [12, 14], "34422627": 117, "34425779": 118, "34435993e": 199, "3448": [172, 178], "345": 167, "345081": 16, "3451": 173, "3452": 176, "3454": 177, "3456": 40, "345673": 40, "3456789": 53, "3457": [53, 179], "3458": 178, "346": 167, "3463551998138428": 171, "3464": 178, "347": [62, 167], "348": [62, 167], "3483": 177, "3486": [173, 178], "3487": 176, "348722": 173, "349": [62, 167, 173], "3492": 176, "3493": 173, "349540": 15, "3496": 178, "35": [9, 33, 40, 48, 50, 53, 54, 63, 66, 93, 117, 146, 151, 167, 168, 174, 176, 185, 194, 195, 196, 197], "350": [20, 62, 118, 167, 176], "350000": [147, 185], "351": [62, 167], "3512": 179, "3513": 171, "352": 167, "35266299": 150, "352682": 12, "353": 167, "3535e": 172, "3539": 172, "354": 167, "3547": 179, "354839": 167, "35488217e": 199, "3549": 172, "355": 167, "3551": 177, "355280": [12, 14], "356": [40, 167], "3560": 171, "356651": [12, 14], "3567": 178, "3568": 177, "357": 167, "3570": 178, "35713": 173, "357143": 167, "357150": 14, "3572": 178, "35731444e": 199, "357765": 12, "358": 167, "3581": 178, "3582": 173, "359": 167, "3594": 178, "35994688e": 199, "35c": 170, "35it": 181, "36": [36, 48, 49, 50, 53, 58, 75, 95, 117, 118, 129, 146, 167, 173, 185, 188], "360": 167, "36000": 168, "3606": 178, "3608": 173, "360856": 195, "3609": 173, "361": [66, 167], "3610895313": 129, "361467": 12, "36149": 173, "362": [66, 167], "3620": 177, "362012": [12, 14], "3622237": 179, "3624": 173, "362880": 29, "363": 167, "363636": 167, "364": 167, "3649": 170, "36492380e": 199, "365": [53, 167], "366": [61, 62, 66, 167], "3662": 173, "3664": 178, "36699927e": 199, "367": 167, "367007": [12, 14], "3673": 173, "3677": 178, "36782780e": 199, "368": 167, "3681b3969e27": 73, "36880": 168, "369": 167, "36938945e": 199, "3694": 173, "36m0": 173, "37": [16, 39, 48, 49, 142, 156, 157, 167, 168, 172, 176, 201], "370": 167, "3700": [171, 178], "3702": 178, "37028": 168, "370370": 167, "3705": 177, "371": 167, "3711": 177, "3712": 181, "37144872e": 199, "3715": 172, "37181743e": 199, "372": 167, "3723": 172, "3726": 178, "3727": [173, 178], "373": [167, 176], "3733": 173, "3736": [173, 178], "3738": 174, "37380679e": 199, "374": 167, "3741": 178, "3742": 178, "3743": 170, "3745": [173, 177], "3749": 179, "375": [69, 167], "375000": [16, 167], "3752": 173, "3757": [172, 179], "3759": 173, "376": 167, "37644": 190, "377": [12, 14, 49, 129, 167], "3770514": 179, "3776": 178, "37796264e": 199, "378": [129, 167], "3781": 178, "378594": 173, "37859424920129": 173, "3787": 178, "379": [129, 167], "379273": 12, "379510": [12, 14], "38": [16, 64, 146, 167, 172, 173, 174, 190, 195, 197, 199, 201], "380": [129, 167, 178], "3801": 172, "381": [129, 167], "382": [129, 167], "3820": 178, "38209653": 150, "38223": 190, "38224839e": 199, "382612": [12, 14], "382817": [12, 14], "3829": [170, 179], "383": [129, 167], "38336447": 153, "3835": 173, "38385823e": 199, "384": [129, 167, 174], "3840": 171, "38400": 173, "3841": 173, "384232": 16, "38429280e": 199, "3843": 173, "384398": 12, "384399": [12, 14], "384403": [12, 14], "3849": 173, "385": [132, 167], "385399": [12, 14], "38568225e": 199, "38575866e": 199, "385965": 167, "385970": [12, 14], "386": 167, "3860": 172, "3862": 177, "3864": 170, "3867": [180, 181], "387": 167, "3870": 173, "387097": 167, "38787858e": 199, "388": 167, "3882": 173, "3889": 177, "389": [129, 167], "3890561": 152, "389559": 14, "3897": 179, "39": [48, 53, 60, 67, 137, 146, 167, 174, 185, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "390": [129, 167], "3904": 170, "3906": [177, 178], "3909": 177, "391": [118, 129, 167, 176, 177], "39119225e": 199, "3913": 178, "3915": 179, "39169378e": 199, "392": [129, 167], "392857": 167, "393": [129, 167], "393174": 12, "3934": 178, "393413": 197, "3937": 172, "39373073": 172, "393731": 172, "3938": 173, "394": 167, "3945": [175, 177, 180, 181], "3946": 172, "39461": 179, "395": 167, "39594634e": 199, "396": 167, "3961": 174, "397": 167, "3970": 118, "39764517e": 199, "39771": 173, "398": 167, "3980": [171, 178], "39801": 40, "398040": 16, "3982": [171, 178], "3984": [176, 177, 178], "3984375": 177, "39878883": 150, "399": [54, 167], "39957927e": 199, "3bfaa309574d": 57, "3blue1brown": [8, 171], "3d": [9, 12, 25, 151, 170, 173], "3da34cc7641": 53, "3e": 178, "3e859d37287a": 89, "3ec8c6652eef": 79, "3f": [53, 95, 173, 174, 176, 180, 181], "3j": [25, 52, 92, 93, 103], "3m": [117, 118, 127, 140, 178], "3mabout": 118, "3mbelow": 140, "3misl": 117, "3mlook": 118, "3mnull": 127, "3mselect": 118, "3msystem": 144, "3mthere": 118, "3muse": 129, "3mwrite": [117, 129, 144], "3myour": 129, "3n": 32, "3pm": 127, "3rd": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 54, 77, 79, 142, 144, 149, 189], "3x2": 170, "4": [4, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 66, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 83, 88, 89, 90, 91, 93, 94, 95, 96, 99, 103, 104, 107, 112, 117, 118, 128, 129, 130, 132, 133, 134, 136, 137, 138, 140, 142, 143, 144, 146, 149, 150, 151, 152, 153, 155, 156, 157, 159, 161, 163, 165, 167, 171, 172, 173, 174, 175, 176, 177, 180, 181, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "40": [13, 16, 29, 30, 48, 50, 58, 67, 72, 78, 93, 95, 96, 118, 129, 138, 142, 146, 151, 158, 167, 170, 171, 172, 174, 176, 181, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "400": [0, 8, 118, 129, 132, 136, 137, 143, 167, 171, 172, 173, 190], "4000": [142, 147, 173, 174], "400000": [147, 168, 185], "40015831": 150, "400770": [12, 14], "4008": 178, "4009": 178, "401": 167, "4012e": 173, "402": 167, "4023": 178, "4027": 172, "403": [12, 167], "4032": 174, "4033": 178, "403509": 167, "403846": 167, "4039": 174, "404": 167, "404206": 15, "404240": 16, "4044": 178, "4049": 171, "405": 167, "4054": 173, "405706": [12, 14], "406": [167, 176, 177, 178, 179], "40603744": 153, "4061": 172, "40636423e": 199, "4064": 173, "406469": 9, "407": 167, "4071": 170, "4078": 174, "408": 167, "408520": 9, "408781": 12, "409": [167, 176, 194], "40904134e": 199, "409091": 167, "4092": 173, "4094": 173, "4096": 178, "40960": 168, "4097": 129, "40it": 181, "41": [33, 48, 49, 66, 67, 137, 146, 167, 168, 172, 173, 174, 176, 179, 199], "410": [167, 194], "4102": 181, "410458": [12, 14], "41083552e": 199, "411": [167, 194], "411377": 16, "4114": 173, "4115": 178, "4116": 171, "412": [167, 194], "4120": [171, 178], "41276190e": 199, "4128131430": 127, "4129": 178, "41292267e": 199, "413": [167, 194], "41315": 168, "4131591": 152, "4133": [180, 181], "4134": 172, "414": 167, "41405704e": 199, "41406033e": 199, "414062": 174, "4141": [174, 181], "41421356": 152, "414368": 199, "4147": 172, "415": 167, "4151": 160, "4152": 160, "4153": 160, "4154": [160, 172], "4155": 160, "4157": 173, "416": 167, "41614684": 152, "416667": 167, "417": 167, "4175e": 173, "4178": 178, "418": 167, "4184": 171, "4186": 160, "4187": 160, "4188": [160, 178], "4189": 160, "419": 167, "4190": 160, "4196": [173, 174], "419745": 14, "42": [48, 50, 60, 67, 104, 131, 153, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 191], "420": 167, "421": [127, 167], "422": [12, 127, 167], "4224": 170, "4227": 177, "4228": 173, "4229": 178, "423": [127, 167], "4235": 174, "423522": 13, "423851": 16, "424": [127, 167], "4242": 177, "4245": 179, "42477796076938": 81, "42499377e": 199, "425": [127, 167], "4251": 171, "42530": 196, "42538101e": 199, "4256": 173, "425781": 174, "4258": [174, 178], "426": 167, "4260": 171, "42612988": 153, "426227": [12, 14], "42651757188499": 173, "426518": 173, "427": 167, "4271": 173, "4272": 178, "427426": [12, 14], "4275": 173, "4277": 173, "4279": 172, "428": 167, "428571": 167, "42857143": 152, "4286f4": 146, "428939": [12, 14], "429": 167, "4290": 179, "43": [18, 20, 33, 48, 49, 67, 142, 152, 167, 172, 173, 174, 179], "430": 167, "430182": [12, 14], "4306": 160, "4307": 160, "4308": 160, "4309": 160, "430905": 14, "431": 167, "4310": 160, "4312": 172, "4318": 171, "43186c7d3555": 89, "4319": 173, "43196619e": 199, "432": 167, "433": 167, "4330": 173, "4332": 172, "433627": 12, "434": 167, "4340020aef34": 103, "4344": 177, "43469003": 153, "435": 167, "4353": 174, "4355": 179, "435540": [12, 14], "43563027": 150, "435633": 60, "435866": 185, "436": 167, "4364": 173, "4366": 178, "4368": 178, "437": [129, 167], "4372": 173, "437500": 167, "4378": 178, "438": [129, 167], "4381": 179, "4386": 171, "4388": [173, 179], "439": [129, 167], "439305": 16, "43e7": 132, "44": [30, 66, 67, 167, 173, 174, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "440": [129, 167], "4400": [180, 181], "4404": 177, "441": [129, 167], "4411": 173, "44120621e": 199, "4414": 173, "4417": 173, "442": [127, 167], "4422": 172, "44220765": 172, "442208": 172, "4422102": 173, "44225798": 150, "442308": [156, 167], "4428": [170, 178], "443": [127, 167, 179], "443572": [12, 14], "443705": 16, "4439": 163, "444": [127, 167], "4440": 163, "4441": [163, 172], "4442": 163, "4443": 163, "444444": 167, "44444444": 153, "445": [127, 167], "4451": 173, "4453": 171, "4455": 173, "4458": 177, "446": [127, 167], "4462": 177, "44666284e": 199, "4469": 170, "447": [127, 167], "4474": 179, "44794755e": 199, "448": [127, 167, 176], "4482": 178, "449": [127, 167, 174], "4492": 178, "4493": 173, "449489742783178": 81, "4496": 194, "4497": 194, "4498": 194, "4499": 194, "45": [15, 16, 48, 49, 50, 67, 81, 90, 98, 118, 144, 146, 164, 167, 170, 172, 174, 185, 194, 201], "450": [127, 167, 170, 174, 179], "4500": [17, 194], "45000": 156, "451": [127, 167, 174], "4510": 173, "45103300e": 199, "4515": 178, "452": [167, 174], "4520": 171, "4522": 178, "453": [167, 174], "4533": [180, 181], "4535": 178, "45359369": 150, "454": [167, 174], "4540": 178, "45400": 168, "45409876e": 199, "454545": 167, "45468093e": 199, "455": 167, "45503": 173, "455357": 167, "4555": 177, "4559": 172, "456": [53, 94, 167, 174, 176, 177, 178, 179], "456140": 167, "4566": 170, "4569": 173, "457": [167, 174], "4570": 178, "4575": 177, "458": 167, "4583": 195, "458333": 167, "4584": 178, "458614": 15, "4588": [171, 173], "459": 167, "4592": 178, "45d582f31548": 103, "46": [16, 41, 67, 75, 118, 146, 167, 168, 170, 172, 174, 177, 194, 201], "460": [167, 170], "4601": 173, "46063092e": 199, "46075265e": 199, "4609": 173, "461": [167, 181], "4618": 171, "462": 167, "462272": [12, 14], "463": 167, "4631": 178, "4637": 132, "464": 167, "4640": 177, "4641": 153, "4644": 178, "4647": 173, "465": 167, "4651": 172, "4653": 179, "4654131651654516546": 117, "465640": 16, "465794806718": 52, "4658": 178, "466": 167, "466366": 14, "4666666666666668": 187, "4667": [173, 174, 180], "466b90e7ef2f": 93, "467": 167, "4678": 177, "468": 167, "468750": 167, "4688": 170, "469": [12, 14, 167], "4691": 171, "469388": 167, "4694": 178, "46be": 132, "47": [48, 49, 60, 67, 167, 168, 172, 174, 179, 185, 194], "470": 167, "47016730e": 199, "4702": 177, "470490": [12, 14], "470689": 14, "471": [132, 167], "4714": 170, "4717": 178, "472": 167, "4722": 178, "4726e": 172, "473": 167, "473137c03db7": 89, "4732": 178, "47320909e": 199, "474": 167, "4740": 172, "474232": 18, "4744512": 173, "4745": 173, "475": 167, "475540": [12, 14], "476": 167, "476004": 16, "47633": 173, "4764": 171, "47663894295692444": 173, "476639": 173, "47664": 173, "477": 167, "4770": 173, "4771": 178, "477273": 167, "477699": [12, 14], "4777": [165, 170], "4778": 165, "4779": 165, "477962": 16, "477f": 132, "478": 167, "4780": 165, "4781": [165, 178], "478125": 197, "478162": [12, 14], "4784": 173, "4785": 178, "4787": 178, "479": 167, "479139": 12, "479204": [12, 14], "4794": 177, "4795": 172, "479556": [12, 14], "479646": 172, "47989": 173, "4799": 173, "47e4": 132, "48": [32, 48, 50, 60, 67, 96, 104, 118, 157, 159, 166, 167, 168, 170, 172, 174, 179, 194], "480": 167, "48013283e": 199, "48048431": 150, "480633": [12, 14], "4807": [170, 173], "481": 167, "48106518387794495": 171, "48122198e": 199, "481349": [12, 14], "4814": 173, "482": 167, "482383": [12, 14], "4824": 173, "4825": 178, "483": 167, "4830": 173, "4836": 171, "48383283e": 199, "484": 167, "4840": 178, "4844": 179, "484415": [12, 14], "4846": 173, "485": [167, 176, 177, 178, 179], "4854": 172, "4858414": 137, "486": 167, "4863": 174, "4868": 178, "487": [127, 167], "4873": 173, "48755100e": 199, "4876": 173, "488": [127, 167], "488215": 14, "488412": 12, "4886": 177, "489": [127, 167], "4895": 36, "489796": 156, "48df7f551452": 132, "49": [48, 49, 50, 56, 58, 66, 67, 81, 132, 167, 168, 172, 174], "490": [127, 167, 173], "490625": 190, "4908": 177, "4909": [171, 179], "490946": 12, "491": [127, 167], "491228": 167, "4915": 178, "4917": 173, "491723": 17, "4919": 170, "492": [167, 176], "4920": 178, "492727": 12, "492754": 167, "4928": 178, "49291": 190, "493": [14, 167], "4930": [177, 178], "49332966e": 199, "4937": 179, "494": [12, 14, 167], "494387": [12, 14], "495": [131, 167, 170], "4950701": 173, "4951": 173, "49521424": 153, "49529338e": 199, "49574452": 153, "4958": [170, 178], "49587": 190, "496": 167, "4961": 177, "496714": 156, "49690158e": 199, "497": [127, 167], "4970": 178, "4972": 178, "49769501e": 199, "4977199": 137, "49798680e": 199, "498": [127, 167], "4980": 173, "4982": 171, "4982726": 137, "49890664e": 199, "499": [127, 167, 170], "4999": 20, "49e421f2057c": 94, "4a9f159cd120": 53, "4b26ab49e29c": 35, "4c10": 132, "4c669126467b": 53, "4c6e": 132, "4d": 173, "4d4a0e714c73": 89, "4ed3868a9a2": 54, "4f": [15, 16, 17, 18, 19, 20, 53, 174, 175, 177, 180, 181], "4fd1": 132, "4k": [140, 142], "4m": 146, "4n": 29, "4oz": 117, "4th": [54, 55], "4x": 179, "5": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 30, 31, 32, 33, 35, 37, 38, 39, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 90, 91, 92, 93, 94, 95, 96, 97, 99, 103, 104, 105, 107, 112, 117, 118, 121, 128, 129, 130, 132, 134, 136, 137, 138, 139, 140, 142, 143, 144, 146, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 163, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "50": [11, 40, 44, 48, 49, 50, 52, 53, 56, 58, 64, 67, 69, 76, 81, 98, 117, 129, 133, 144, 146, 152, 153, 156, 158, 159, 167, 168, 170, 171, 172, 174, 177, 185, 189, 190, 192, 194, 195, 196, 197, 199, 201], "500": [12, 13, 14, 127, 129, 131, 133, 158, 167, 171, 172, 199], "5000": [10, 18, 20, 73, 118, 132, 199], "50000": [13, 146], "500000": [147, 156, 167, 168, 185], "500005": [12, 14], "5003": 173, "5006": 179, "501": [127, 167], "5012": 173, "502": 167, "502190": 16, "502418": 13, "503": 167, "5032": 178, "503945": [12, 14], "504": [12, 14, 167], "505": 167, "5050": [75, 179], "5054": 171, "50547116e": 199, "506": 167, "50628105e": 199, "5069": 178, "507": 167, "507192": 18, "5078": 172, "508": 167, "5081": 178, "5085": 178, "50882884": 118, "509": 167, "5095": 177, "50954": 173, "5098": [173, 174], "50b154750974": 89, "50th": 156, "51": [13, 67, 118, 146, 167, 168, 172, 195], "510": 167, "5100": 173, "510042": [12, 14], "51026454": 150, "511": 167, "5111": 181, "5113": 178, "5114": 173, "5116": 179, "512": [49, 54, 58, 80, 167, 172, 173, 174], "5120": 178, "51200": 173, "5127": 171, "512x512": 174, "513": 167, "5132": 173, "513250": 16, "513433": 199, "513890": 16, "514": 167, "51479": 13, "5148": 173, "515": [167, 170], "5157": 170, "5158": 178, "515941f58fe7": 77, "516": 167, "51601397e": 199, "516129": 167, "5166": 173, "51681": 190, "516912": [12, 14], "517": 167, "5176": 177, "51782e52f201": 72, "517857": 167, "518": 167, "518519": 167, "5188": 178, "519": [96, 167, 173], "5197": 173, "5199": 173, "52": [32, 67, 133, 146, 156, 157, 167, 168, 172, 174], "520": 167, "5200": [171, 180], "5202": 177, "52037": 13, "52063": 190, "521": 167, "522": [12, 14, 167], "5220": 170, "523": 167, "5239": 179, "524": 167, "524770": 16, "525": [14, 167], "5255": 173, "5257e": 172, "52580": 190, "526": 167, "526373": 201, "527": [12, 167], "5272": 171, "527393": 60, "527542": [12, 14], "5276": 178, "528": 167, "5283": 178, "5285": 170, "529": 167, "529412": 167, "5299914": 136, "53": [48, 49, 56, 61, 62, 65, 67, 167, 168, 172, 185, 194, 195, 197], "530": 167, "53037048e": 199, "530624": 14, "5308": 178, "5309": 172, "531": 167, "531250": 167, "5313": 173, "531874": 13, "532": 167, "5326": 173, "533": 167, "5333": [173, 174], "5334": 178, "53341062e": 199, "533524": [12, 14], "53360752e": 199, "534": 167, "5347": 178, "5348": 168, "5349": 178, "535": 167, "535714": 167, "53590397e": 199, "536": 167, "536747": 12, "536997": 16, "537": [12, 14, 167], "53783010e": 199, "538": 167, "5384": 173, "5387": 179, "5388": 172, "539": 167, "53901780e": 199, "53909609": 150, "5394": 178, "5396": 173, "5397727272727273": 177, "5398": [176, 177], "5398e": 172, "5399": 173, "53mib": 170, "54": [48, 49, 50, 60, 67, 80, 91, 102, 129, 146, 152, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 168, 172, 179, 195], "540": 167, "540222": 17, "540247": [12, 14], "54030231": 152, "5404": 173, "5406e": 173, "5409": 173, "541": 167, "5412": 174, "54143": 172, "5416": 178, "541667": 167, "5417": 178, "5418903291546293": 193, "542": 167, "5425": [177, 196], "542734": 199, "54275813": 150, "543": 167, "5432": 178, "54321": 48, "5435": 177, "5439": 172, "544": 167, "545": 167, "54507446": 170, "54510477e": 199, "5455131": 196, "5458": 172, "546": 167, "546523": 15, "5467": 181, "54682": 196, "547": 167, "547083": 199, "547509": 12, "54777888": 150, "5478": 178, "548": [167, 176, 177], "5480": 178, "548052": 16, "54808": 196, "548195": [12, 14], "5483": 170, "5485": 178, "5486": 173, "5489": 173, "549": 167, "54902750e": 199, "5493": 170, "5494": [178, 179], "55": [48, 49, 60, 67, 75, 81, 129, 153, 158, 160, 163, 167, 172, 174, 193, 201], "550": [136, 137, 167], "551": 167, "551020": 167, "55109787e": 199, "551122": [12, 14], "5513833499989991": 193, "551695": 118, "551792": 13, "552": 167, "5521": 177, "5523": 178, "55283762": 150, "5529": [173, 174], "553": 167, "5531": 172, "553519": 197, "55360672": 150, "55382448e": 199, "554": 167, "555": [49, 53, 98, 167], "5550161930871431": 153, "5551779866218567": 171, "55555556": 153, "5557": 178, "5558": 173, "555816": 197, "556": 167, "5566": 177, "557": 167, "5570": 178, "5573": 177, "558": 167, "5581": 178, "5589": [160, 173], "559": 167, "5590": 160, "5591": 160, "5592": 160, "5593": 160, "5595": 173, "55965906e": 199, "5599": [172, 173], "56": [25, 29, 47, 48, 50, 60, 64, 67, 81, 129, 142, 156, 157, 159, 166, 167, 168, 172, 176, 179, 201], "560": [167, 176], "5604": 179, "5606": 178, "56077258e": 199, "5608": 174, "561": 167, "5610": 173, "5611": 177, "561772": [12, 14], "562": 167, "5622": 177, "562500": 167, "563": 167, "5630": 173, "56348096e": 199, "564": 167, "5644": 181, "5645": 178, "5646e": 173, "5647": [173, 174], "5649": 179, "564980": [12, 14], "565": 167, "56580759e": 199, "566": [62, 167], "56650192e": 199, "567": [62, 167, 178], "56705": 13, "5671": 178, "5676": 177, "5678": 178, "5679": 177, "568": [62, 167], "5686": [173, 174], "569": [62, 167], "5692": 178, "5696": 172, "5698": 196, "57": [14, 33, 65, 67, 129, 146, 156, 157, 167, 168, 179], "570": [62, 131, 167], "57057605": 153, "5706": [175, 177, 180, 181], "571": [167, 178], "571429": 167, "572": [167, 176], "5720": 178, "572094": 14, "5721": 178, "5722": 178, "5724": 178, "5725": [173, 174], "5728": 177, "57292499e": 199, "573": 167, "57330710e": 199, "57367853e": 199, "5739": 178, "5739762187004089": 171, "574": 167, "5745": 170, "575": 167, "5750": 178, "5753": 178, "5755": 179, "5757": 178, "576": 167, "5764": 178, "5765": 174, "5767": 173, "576700": 9, "5768": 178, "577": 167, "5778": 181, "578": [118, 167], "5783": 178, "5784": 171, "5785": 178, "57861": 172, "579": [94, 167], "5790": 178, "5793": 178, "57953b0b580c": 39, "5796": 178, "5798": 177, "5799": 172, "58": [12, 60, 61, 66, 67, 127, 129, 146, 156, 157, 167, 168, 172, 177, 201], "580": 167, "5804": 174, "5808771025513102": 193, "58099293e": 199, "581": 167, "5810": 179, "5816": 178, "581728": [12, 14], "582": [118, 167], "5822": 180, "5823": 178, "5824": 178, "5826": 178, "5828025": 66, "583": 167, "584": 167, "5843": [174, 178], "5844": 172, "5845": 178, "5847": 178, "5849": 178, "585": 167, "5850": 178, "5853": 178, "585384": [12, 14], "5854679515581645": 52, "58556641e": 199, "586": 167, "5866": 173, "58662330e": 199, "5867": 180, "5868": 178, "5869": 179, "587": [167, 176], "5870": [177, 178], "5876": [178, 179], "5877": 178, "58776": 13, "588": 167, "5880": 178, "5882": [173, 174], "588235": 167, "5885": 172, "588767": 12, "5888": 178, "58883361": 153, "58899709e": 199, "589": 167, "58900": 168, "5897": [177, 178], "58it": 173, "59": [12, 19, 60, 61, 62, 64, 66, 67, 129, 156, 157, 167, 168, 172, 174, 178, 189, 192, 194, 195, 196, 197, 201], "590": 167, "5900": 178, "59039": 173, "59068226": 153, "591": 167, "5918": 172, "592": 167, "5920": 173, "5924": 173, "592799": 179, "593": 167, "59302": 173, "5932": 173, "5935": 179, "5936": 170, "59362951e": 199, "59371929e": 199, "594": 167, "594445": [12, 14], "5949": [173, 177], "595": 167, "5951": 172, "596": 167, "5961": 174, "59621339e": 199, "597": 167, "5975": 172, "598": 167, "5980": 177, "59815003": 152, "599": 167, "5990": 172, "5997": 173, "5998": 172, "59b7b8cc9b5b": 103, "5_epoch": 177, "5aa728677edf": 81, "5b2db8c64782": 53, "5b50fb5d02c4": 78, "5c": [127, 129], "5e2": 92, "5f": [172, 173], "5f195de51d93": 105, "5k": [131, 142], "5m": 146, "5th": [53, 54], "5x": [129, 179], "6": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 28, 29, 30, 32, 33, 35, 36, 37, 39, 41, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 66, 67, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 86, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 107, 129, 132, 134, 137, 139, 140, 141, 143, 146, 149, 150, 151, 152, 153, 156, 157, 159, 163, 167, 170, 172, 173, 174, 176, 177, 178, 183, 185, 187, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203], "60": [13, 45, 48, 49, 50, 58, 78, 81, 95, 97, 129, 146, 156, 157, 158, 167, 168, 170, 171, 172, 173, 174, 181, 190, 191, 193], "600": [49, 96, 129, 136, 137, 167, 171, 172, 176], "6000": [17, 20, 147], "60000": [10, 17, 18, 19, 20, 102, 146, 173], "600000": 185, "60000000000001": 39, "6002": 170, "60059908": 153, "6009": 170, "601": 167, "6010": 172, "60124": 190, "60154": 190, "6016": 172, "601607": [12, 14], "602": 167, "6020": 172, "6022": 177, "603": 167, "60332219e": 199, "603704": 197, "6039": [173, 174], "604": 167, "605": 167, "605370": 185, "6055": 170, "6058": 173, "6059": 173, "606": 167, "60600": 179, "60631cbc73b0": 76, "60683359e": 199, "607": 167, "6078": 173, "60786967": 150, "608": 167, "60811794e": 199, "60818266e": 199, "609": [12, 167], "609060": 18, "60966": 13, "61": [56, 66, 129, 156, 157, 167, 168, 170, 173, 174, 189, 192, 194, 195, 196, 197, 201], "610": [49, 117, 167], "610574": [12, 14], "611": [14, 167], "6111": 177, "611101": [12, 14], "611172": 197, "6117": 172, "6118": 173, "612": 167, "6127": 177, "612924": [12, 14], "613": 167, "614": 167, "614062": [12, 14], "614349": 13, "61440440e": 199, "614655": 16, "615": 167, "6150": 178, "61500": 168, "616": 167, "616463": [12, 14], "6167": 177, "61670566e": 199, "61675899e": 199, "6168": 170, "617": 167, "617722": 13, "6177e": 173, "61784629": 150, "617951": [12, 14], "618": [129, 167], "6186": 172, "619": [129, 167], "6194": 170, "6197751905438615": 81, "62": [75, 167, 168, 172, 173, 196], "620": [129, 167], "6200": 177, "620071": [12, 14], "6203": 177, "621": [129, 167], "621415": 197, "62145": 172, "622": [129, 167], "622030": [12, 14], "622167": 197, "6223": 173, "62242956e": 199, "6227": 177, "623": 167, "62311335e": 199, "6235": 173, "62362": 172, "624": 167, "625": 167, "62500": 156, "62503489e": 199, "6254": 176, "626": 167, "6260": 176, "626007": [12, 14], "62636": 190, "6267": 181, "627": 167, "627163": [12, 14], "6274509803921569": 190, "62792336e": 199, "628": 167, "6286": 170, "6289": 173, "629": 167, "629630": 167, "62996541e": 199, "62it": 132, "62x62": 173, "63": [48, 50, 71, 72, 75, 94, 95, 118, 167, 194, 201], "630": 167, "63033250e": 199, "6306": 173, "631": 167, "6311": 180, "6314": 173, "631579": 167, "63158859": 150, "6317": 179, "6319": 172, "632": 167, "63212579e": 199, "63238643": 153, "6325": 177, "632m": 178, "633": [78, 167], "6335": 173, "6338": 168, "633974": 14, "634": 167, "6345": 173, "63465586e": 199, "635": [14, 167], "635423": [12, 14], "635457": 17, "635574": 16, "636": 167, "637": 167, "6372": 176, "6377": 168, "638": 167, "6380": 173, "6386": 173, "639": 167, "6392": [173, 174], "63it": 173, "64": [17, 18, 19, 20, 25, 48, 49, 50, 54, 58, 80, 152, 167, 170, 172, 173, 174, 175, 176, 180, 181, 201], "640": 167, "64000": 146, "64034418e": 199, "6404": 177, "641": 167, "64154651": 196, "642": 167, "643": 167, "6430": 178, "6431": 173, "6436": 173, "64387910e": 199, "644": 167, "6445": 177, "645": 167, "645161": 167, "6454": 173, "646": 167, "647": 167, "6471": 174, "64757": 172, "647689": 156, "648": 167, "6485e": 173, "6488": 168, "649": [167, 178], "6494": 172, "64x64": 174, "65": [44, 45, 46, 53, 94, 118, 157, 159, 166, 167, 172, 173, 174, 201], "650": 167, "65000": 146, "650667": 14, "651": 167, "6510": 173, "651253": 201, "65160": 172, "652": [14, 167], "65235094": 153, "653": 167, "65364362": 152, "6538": 170, "654": 167, "6541": [170, 173], "6542": 178, "6545": 177, "654593": 65, "6549": 173, "654x": 176, "655": 167, "65575249e": 199, "65596512e": 199, "656": [167, 178], "6562": 177, "65625": 177, "65628077": 150, "656404": 197, "657": 167, "6575": 168, "6579": 172, "658": 167, "6585": 179, "6588": 173, "659": 167, "65903086e": 199, "66": [47, 48, 53, 77, 95, 127, 167, 168, 174, 189, 192, 194, 195, 196, 197, 201], "660": 167, "66000": 146, "660125": 16, "6608": 170, "661": 167, "6610": 177, "6611852": 196, "6612": 173, "662": 167, "6627": 173, "663": 167, "66322": 172, "664": 167, "665": 167, "666": [56, 167], "666451": 9, "66659": 172, "66666667": 153, "6667": 173, "667": 167, "6673": 177, "667565": 197, "668": 167, "669": 167, "6698": 177, "6698453426361084": 177, "6699": 172, "67": [49, 53, 118, 127, 152, 167, 168, 172, 201], "670": 167, "67027": 173, "670396": 201, "6705": 170, "6706": [173, 174], "671": 167, "672": 167, "6722926497459412": 177, "6723": 177, "67285": 172, "673": 167, "6737": 173, "67391582": 118, "674": 167, "6745": [173, 174], "6746": 177, "6746167540550232": 177, "675": 167, "67515": 172, "67526014e": 199, "676": 167, "67631096e": 199, "676366": 9, "676435": 172, "6766": 179, "6768": 178, "6769": 177, "6769256368279457": 177, "677": 167, "67761063e": 199, "678": [129, 167], "6784": [173, 174], "6785": 168, "678571": 167, "679": [129, 167], "67941": 172, "67it": 173, "68": [127, 146, 160, 163, 167, 168, 170, 189, 192, 194, 195, 196, 197, 199, 201], "680": [129, 167], "680027": 14, "681": [129, 167], "68102": 172, "681159": 167, "682": [129, 167], "682091": 201, "6826": 170, "683": [167, 174], "6833": 17, "68334519e": 199, "683673": 167, "6839": 173, "684": 167, "68411": 172, "684211": 167, "684940": 16, "685": 167, "68500": 173, "6850008964538574": 173, "685001": 173, "6851": 177, "68517": 172, "6852": 172, "68572271": 153, "686": 167, "68602648": 150, "68603251e": 199, "6863": 173, "68671849e": 199, "687": 167, "68723": 172, "68744134": 150, "68747069e": 199, "68795": 172, "688": 167, "6881": [173, 177], "689": 167, "6891": 172, "68940": 172, "6894e": 172, "68977": 172, "69": [48, 127, 157, 167, 168, 201], "690": 167, "69001671e": 199, "6902": 173, "691": 167, "69102": 172, "69115": 172, "6918": 168, "692": 167, "692250": 16, "69258130e": 199, "69261": 172, "69272794e": 199, "69288277": 172, "692883": 172, "6928e": 173, "6929": 172, "69295": 172, "69298": 172, "69299": 172, "6929e": 172, "693": [167, 174], "69301": 172, "69302": 172, "69303": 172, "69305": 172, "69308": 172, "6931471805599453": 81, "69319": 172, "69343173": 150, "69349": 172, "693597": 14, "69361323e": 199, "69379": 172, "69396": 172, "694": 167, "6940": 173, "6941": 173, "69432": 172, "69437": 172, "69458": 172, "69465": 172, "69467": 172, "69468": 172, "695": 167, "69537": 172, "69543": 172, "69551": 172, "69563": 172, "69583": 172, "696": 167, "69623": 172, "69659": 172, "6968": 171, "697": 167, "69714": 172, "69736459e": 199, "69791535": 150, "698": 167, "6980": 173, "6984": 172, "698874": 16, "699": [127, 167], "69901020e": 199, "6992": 177, "69942": 172, "699560": 16, "6ab0f28c63a7": 73, "6ac8e81b6f0c": 71, "6f47904706aa": 152, "6f8260f6f5bb": 76, "6j": [52, 93, 103], "6k": 129, "6m": 146, "6p": 95, "6th": 53, "6x": 179, "7": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 29, 30, 31, 32, 33, 35, 39, 41, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 64, 66, 67, 71, 72, 75, 76, 77, 78, 80, 81, 90, 91, 92, 93, 94, 95, 96, 103, 104, 105, 107, 117, 118, 129, 131, 132, 133, 134, 139, 140, 143, 146, 150, 151, 152, 153, 156, 157, 163, 167, 170, 171, 172, 173, 174, 176, 177, 178, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203], "70": [44, 46, 48, 50, 58, 78, 127, 129, 139, 144, 146, 157, 159, 164, 166, 167, 168, 170, 171, 172, 189, 190, 201], "700": [117, 127, 167, 171, 172, 200], "700557": 16, "7008": 170, "701": [127, 167], "7010": 173, "7011": 173, "70166723e": 199, "702": [127, 167], "7020": 173, "7023": 179, "70291": 172, "703": [127, 167], "703704": 167, "704": [127, 129, 167], "7043": 173, "7044": 172, "704545": 167, "705": [127, 167, 177, 179], "70542": 172, "7055": 173, "705882": 167, "7059": 173, "706": [127, 167], "706461": 14, "7064960040152073": 177, "7065": 177, "706585": 12, "707": 167, "707107": 156, "7076": 177, "708": 167, "70805473e": 199, "709": 167, "7091468499697177e": 187, "7097": 177, "70974533": 9, "7098": [173, 174], "7099": 173, "71": [118, 127, 167, 168, 173, 189, 195, 196, 197], "710": [167, 176], "7108": 176, "711": 167, "7113": 179, "712": 167, "713": 167, "7134": 173, "7137": [173, 174], "714": 167, "71400": 168, "714286": 168, "71432477e": 199, "715": 167, "7150": 177, "715070": 195, "716": 167, "71671100e": 199, "7168": 172, "717": [167, 176], "7173": 173, "7175": [177, 179], "71755233e": 199, "7176": 173, "718": 167, "71828": [81, 83], "718281828459045": 81, "71828183": 152, "71875": 177, "7188": 177, "719": 167, "7191": [173, 177], "7196": 178, "7197": 172, "72": [29, 48, 50, 75, 118, 127, 138, 156, 159, 167, 174, 179, 201], "720": [52, 79, 81, 167], "7200": 173, "7205": 173, "72090": 172, "721": 167, "7216": 174, "7219": 173, "72196": 172, "722": 167, "72223991e": 199, "72227": 173, "72247358e": 199, "7227": 178, "723": 167, "72352380e": 199, "724": 167, "724490": 167, "724638": 167, "725": 167, "7255": 173, "726": 167, "72638167e": 199, "727": [167, 178], "72708198e": 199, "727273": 167, "72765023e": 199, "728": 167, "7280": 173, "7283": 173, "72888392e": 199, "729": [49, 80, 167], "7294": 173, "72964213e": 199, "7298": 177, "73": [40, 127, 167, 173], "730": 167, "730464": 179, "730982": 13, "731": 167, "731755": 185, "7318": 173, "732": 167, "73205081": 152, "733": 167, "7333": 173, "73370838": 153, "734": [167, 178], "7342": 173, "734673": 201, "7347": 172, "735": 167, "73524094": 153, "7359b7dba965": 49, "736": 167, "7360": 178, "7367": 172, "737": 167, "73712819e": 199, "7373": 173, "738": 167, "739": 167, "74": [118, 167, 172], "740": 167, "7402e": 173, "7408": 179, "7409": 173, "74098031e": 199, "741": 167, "741152": 9, "7412": 173, "74149939e": 199, "741935": 167, "742": 167, "7426e": 172, "7427": 178, "743": 167, "74304829e": 199, "74307119e": 199, "74371246e": 199, "744": 167, "74400348e": 199, "744281": 201, "7444": 178, "744415": 12, "74486871e": 199, "745": 167, "74509907e": 199, "7451": [173, 174], "746": 167, "746011": 201, "74609375": 177, "7461": 177, "7463": 176, "74663": 118, "7469": 170, "746921": 179, "747": 167, "748": 167, "7489": 178, "749": 167, "7490": 173, "7498": 178, "74m": 179, "75": [67, 131, 146, 153, 156, 157, 167, 170, 172, 173, 174, 179, 180, 181, 185, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "750": [167, 174, 179], "7500": 179, "750000": [156, 167, 168, 190, 201], "750615": 195, "75075a70c90": 151, "7507bdc665d5": 38, "751": 167, "7511": 177, "751712": 13, "752": 167, "75209323e": 199, "7524": 173, "7529": 173, "753": 167, "7532": 179, "7539": 176, "754": 167, "7542": 172, "754246": 172, "75424625": 172, "7548e": 173, "755": 167, "755102": 201, "7553": 173, "756": 167, "75615888": 172, "756159": 172, "7562": 172, "75665366e": 199, "7568025": 152, "7569": [173, 174], "757": 167, "75750": 179, "7578": 177, "758": [167, 178], "758000": 185, "7589": 178, "759": 167, "75986": 172, "75th": 156, "76": [40, 117, 153, 167, 196, 201], "760": [167, 178], "7601": 172, "7604": 177, "7608": 173, "76093000e": 199, "761": 167, "761378": 13, "762": 167, "762238": 185, "762329": 201, "7624": 178, "76249894": 153, "763": 167, "763270": 9, "76344": 13, "764": 167, "7642": 172, "7645": 171, "7647": 173, "7648": 176, "765": 167, "765298": 185, "765539": 12, "7656": 177, "766": [153, 167], "7661": 172, "766294": 15, "7665": [172, 178], "767": 167, "7670": 179, "768": [167, 178, 179, 185], "7685": 179, "7686": 173, "7687": 170, "769": 167, "769231": 167, "7695": 177, "76a0a5ce1450": 67, "76bf7a927991": 78, "77": [48, 78, 93, 95, 151, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 176, 189, 196], "770": 167, "7705221": 179, "7708": 178, "771": 167, "7711": 172, "7712": 173, "7714": 172, "771513": 172, "772": 167, "77237368": 153, "7725": 173, "772579": 17, "772900": 18, "773": [98, 167, 170], "7736742424242425": 177, "7737": 177, "774": 167, "775": [17, 18, 167], "7754": 173, "775403": 14, "776": [17, 18, 142, 167], "7765": 173, "7767": 177, "77678046e": 199, "777": [17, 18, 167], "7773": [176, 177], "77777778": 153, "777778": 167, "778": [17, 18, 167], "779": [17, 18, 167], "78": [80, 117, 131, 153, 156, 167, 173, 174, 189, 201], "780": [17, 18, 167], "7804": 173, "780573": 13, "781": [17, 18, 167], "78101": 173, "7812": 177, "781250": 167, "782": [17, 18, 167], "782dbd1412fe": 163, "783": [17, 18, 167], "7833": 173, "7837507526079813": 177, "7838": 177, "7839": 173, "784": [10, 17, 18, 19, 20, 167, 173], "7843": 173, "784433": 16, "7849e": 173, "785": [10, 17, 18, 19, 20, 167], "7852": 176, "785269": 196, "785280": 196, "785714": 167, "786": 167, "7860": 179, "7861e": 173, "78673234e": 199, "787": 167, "7870": 173, "788": 167, "78883111e": 199, "789": [53, 167], "7898": 168, "78993856e": 199, "79": [156, 167, 168, 172], "790": 167, "7900723": 170, "79018354e": 199, "79025614": 153, "791": 167, "7912": 176, "792": 167, "7922": 173, "792566": [12, 14], "79270929e": 199, "793": 167, "7930": [176, 177], "793456": 172, "7935": 173, "7936": 170, "794": [167, 185], "795": 167, "795455": 167, "795521": 16, "7956": 173, "796": 167, "7961": 173, "7963": 173, "796667": [12, 14], "79671774e": 199, "797": 167, "797101": 167, "7975": [156, 157, 168], "7978": 173, "798": 167, "79823164": 150, "7986e": 172, "799": 167, "7993": 172, "7994": 172, "7995": [156, 157, 168], "79998373e": 199, "79rhbrct01": 139, "7c9145eb11e9": 96, "7e786bcbd078": 73, "7fce570bf337": 93, "7m": 179, "7w": 170, "7x": 129, "8": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 29, 31, 32, 33, 35, 38, 39, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 80, 81, 88, 90, 91, 93, 94, 95, 100, 103, 105, 107, 117, 118, 128, 129, 132, 133, 137, 139, 141, 142, 143, 146, 150, 151, 152, 153, 156, 157, 159, 160, 163, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202], "80": [12, 14, 17, 18, 19, 20, 46, 48, 50, 58, 129, 131, 134, 136, 137, 143, 146, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 172, 176, 179, 181, 190, 194, 198, 201], "800": [140, 142, 167, 171, 172, 178, 179, 190], "8000": [18, 20, 147, 173], "80000": 156, "800000": [167, 185], "8008": 177, "801": 40, "801005": 13, "8016": 170, "803349": 172, "8036360430009386": 52, "8037": 177, "803724929690361": 177, "8039": 173, "804460": 179, "8049": 177, "8049242424242425": 177, "806452": 167, "8069e": 173, "807018": 167, "8078": 173, "8080e": 172, "8086": 177, "809158": [12, 14], "80966303e": 199, "8099": 177, "81": [44, 48, 49, 50, 56, 58, 75, 94, 156, 157, 167, 168], "810696": [12, 14], "8111": 173, "8112": 172, "8117": 173, "8118": 173, "8125": 177, "812500": 167, "8127": 173, "8138": 177, "8141": 171, "8144": 177, "814809": 199, "8153": [176, 177], "81539193": 172, "815392": 172, "8154": 172, "8157": 173, "816327": 167, "816653826391969": 107, "816760": [12, 14], "81788758": 153, "8189": 168, "81893678": 150, "81945073e": 199, "8196": 173, "82": [156, 157, 167, 168, 173, 174], "8201e": 172, "8206": 173, "821429": 167, "822132": 9, "8235": 173, "8236": 173, "8242": 177, "8256": 171, "8258": 177, "82636160e": 199, "82647438e": 199, "82701252e": 199, "827153": 199, "8275": 173, "828066": 185, "82974801e": 199, "83": [18, 75, 156, 157, 167, 170, 173], "8300": 171, "8303a512b8c1": 132, "830770": 197, "830875": [12, 14], "83098322e": 199, "8314": 173, "831415": 12, "83161031e": 199, "831681": 179, "8324": 178, "83263141": 9, "83288998e": 199, "83319662e": 199, "8333333333333334": 96, "833552": [12, 14], "834558": [12, 14], "8346": 173, "83464298e": 199, "835299": 190, "8353": 173, "8354": 177, "8365": 173, "8372": 171, "83727878e": 199, "83770503": 150, "83847501e": 199, "8392": 173, "84": [104, 156, 167], "8400": 172, "840201": 12, "84147098": 152, "8421": 173, "8424": 178, "84254180e": 199, "843": [176, 177, 179], "8431": 173, "843333": 185, "8436": 173, "843750": 167, "8438": [177, 179], "843887": [12, 14], "8446": 173, "8458": 177, "8466": [173, 177], "846939": 167, "846976": 197, "847": 98, "8471": 173, "8474": 170, "8479": 177, "8484": 173, "8488": 171, "84915141e": 199, "85": [12, 95, 134, 146, 150, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176, 178, 179, 190, 191, 198], "8500": 177, "850000": 190, "85051737e": 199, "8510": 173, "8515": 173, "8515625": 177, "8516": 177, "851852": 167, "8524": 173, "853181": 9, "8549": 173, "85505447": 150, "8551": 170, "855366": 14, "8560606060606061": 177, "8561": [176, 177], "8563": 173, "8564": 173, "857142857142854": 95, "857143": 167, "85800963": 179, "858131": [12, 14], "8588": 173, "858904": 15, "859": 180, "85956433e": 199, "85mb": 179, "86": [64, 156, 157, 167, 168, 173, 178, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "8600": 171, "8603": 171, "8604": [177, 179], "8608": 180, "8613": 170, "8615": 179, "8620": 170, "8625": 195, "8627": 173, "86299475e": 199, "863636": 167, "864": 176, "8646": 177, "8652": 181, "8655": [172, 176, 177], "86635ab2cc7": 103, "8665": 178, "8667": 173, "868809": 16, "869565": 167, "8698": 172, "86m": 178, "87": [118, 129, 139, 146, 156, 157, 159, 166, 167, 168, 173, 174, 196], "8705": 173, "8706": 173, "8711": [173, 177], "871429": 167, "8717": 176, "8719": 171, "872": 12, "87236687": 150, "87285499e": 199, "87380356": 153, "8739": 171, "8743": [175, 180, 181], "8745": 173, "8747": 177, "875000": 167, "8759": [177, 178], "87646883e": 199, "8769": 177, "8771": [177, 179], "8778": [168, 178], "87786341e": 199, "877976": 173, "878": 173, "8784": 173, "87853325e": 199, "87970769e": 199, "88": [16, 102, 129, 146, 153, 156, 157, 164, 167, 168, 172, 173, 179, 189, 198], "8804": 173, "8812": 179, "88165065e": 199, "8823": 170, "8824": 173, "8835": 171, "884058": 167, "8843": 178, "8854": 177, "8856": 173, "8859": 127, "885bc9be9cd": 173, "88618684": 153, "8863": 173, "8863636363636364": 177, "8864": 177, "8867": 177, "8873": 177, "8878": 171, "8883": 178, "88888889": 153, "8896": [177, 179], "88d1d80d": 132, "89": [13, 19, 40, 49, 81, 129, 139, 146, 156, 167, 168, 196], "8902": 173, "8904402624046048": 193, "8913": 180, "891691": 9, "8917": 179, "8935": 173, "8938": 177, "89380846e": 199, "8941": 173, "8948": 172, "894992": 199, "8950": 171, "8958": 179, "8959": 179, "89632087": 150, "8967": 172, "896723": 172, "89672343": 172, "8974628075957298": 177, "8975": 177, "8977": [177, 178], "8979": 177, "8980": 173, "8983": 173, "8984": 177, "8985": [175, 180, 181], "8988": 170, "899084": 9, "8994": 181, "8b5cab780f33": 76, "8c3c435d663c": 132, "8cc0f1bdc5ed": 91, "8de2d37fa505": 132, "8f0bbdfdf6e5": 54, "8f1c": 132, "8oz": 117, "8th": 55, "9": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 29, 30, 32, 33, 35, 36, 37, 38, 41, 44, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 66, 67, 71, 72, 73, 75, 76, 77, 78, 80, 81, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 102, 103, 105, 107, 117, 118, 127, 129, 131, 132, 139, 143, 146, 149, 150, 151, 152, 153, 156, 157, 159, 163, 164, 165, 167, 170, 172, 173, 176, 177, 178, 179, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203], "90": [13, 17, 29, 33, 46, 48, 49, 50, 53, 58, 75, 76, 78, 91, 92, 95, 97, 102, 118, 129, 132, 134, 142, 144, 146, 157, 159, 164, 166, 167, 170, 171, 172, 177, 178, 179, 190, 194, 198], "900": [76, 102, 131, 171, 172, 176, 179], "900000": 185, "900000e": 53, "9007": 173, "90093797e": 199, "9013": 173, "901514": 16, "9018": 171, "9020": 173, "90264482e": 199, "90328251e": 199, "903846": 167, "9042": 177, "9062": 179, "906250": 167, "9066": 171, "9072": 177, "907975": 12, "9081": [177, 178], "90891100e": 199, "909091": 167, "90929743": 152, "9096": 173, "909784": 14, "9098": 173, "90m": 173, "91": [13, 94, 129, 146, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 173, 174, 185], "910": 174, "9104": [177, 179], "91174698": 153, "9131": 179, "9132757981618246": 177, "9133": [176, 177], "91348997e": 199, "9137": 173, "9138": 172, "9141": 177, "9143": 172, "9145": 178, "914559": 14, "914701": 9, "9150": 170, "9155": 133, "9157": 171, "91703708e": 199, "9176": [173, 177, 178], "9179": 172, "917c66cfdb68": 132, "9182": 171, "9186": 177, "919264": 17, "91940167": 150, "92": [13, 146, 167, 198], "9200": 170, "9216": 173, "9217": 177, "922403": 9, "922826": 18, "9239": 132, "924": 174, "9247": 177, "9250": [177, 195, 197], "9255": 173, "925579": 14, "925926": 167, "9260": 178, "9269": 173, "9271": 177, "927536": 167, "9280": [177, 178], "928539": 14, "928571": 167, "9290": 179, "9293": 179, "9294": 173, "9296": 171, "92fab552c144": 81, "93": [18, 20, 48, 146, 167, 173, 198], "930": 118, "93054890e": 199, "93082264e": 199, "93102691": 150, "9312": 173, "93143051": 150, "932169": 14, "932537": 14, "932585": 17, "9331e": 172, "9333": 173, "9336": 177, "9346": 170, "9347": 179, "935": 174, "9352": 172, "9354": 173, "9369": 170, "9373": 173, "9375": 179, "9381": 179, "9384": [177, 178], "9396": 177, "93fed76e63a5": 173, "94": [146, 156, 157, 167, 168, 173, 198], "9401": 173, "9408": 170, "9409": 179, "9412": [19, 173], "9416": 173, "9436": 171, "9443": 179, "944681": 12, "9451": 173, "9453": 178, "9456e": 173, "946429": 167, "947368": [167, 190], "9478274870593494": 82, "948141": 16, "9485": 173, "9486": 173, "9489": 177, "9490": 173, "9492": 177, "9499": 179, "95": [13, 134, 146, 156, 167, 168, 170, 172, 179, 188, 189, 196, 197, 198, 199], "9500": 179, "9508": 172, "952": 176, "9521": 172, "9529": 173, "9531": 178, "9534": 179, "9536": 170, "9537": 173, "9539e": 173, "954": 188, "9542": 179, "95501935e": 199, "9552": 180, "9557": 177, "956": 12, "9560342718892494": 82, "9563": 179, "95636": 173, "9565": 131, "9569": 173, "9570": 178, "9571": 173, "9575": 171, "9576": [172, 173], "9577": 177, "95892427": 152, "9591": 181, "9593": 170, "95966987": 150, "96": [13, 15, 17, 19, 45, 46, 47, 48, 49, 56, 71, 72, 78, 91, 102, 129, 146, 156, 167, 179, 189], "9602": 179, "96052f3c0c69": 53, "9608": 173, "96139878e": 199, "9618232": 66, "96238081e": 199, "96248829": 153, "9625": 179, "963": [178, 179], "963404": 195, "964286": 167, "9646": 179, "9647": 173, "965323": 18, "9663": 170, "966365e": 53, "96652011": 153, "9666": [170, 172], "96671753e": 199, "966907": 16, "96875": 179, "9688": 179, "9693": 179, "97": [13, 53, 69, 156, 157, 167, 168, 198], "9704": 178, "97087710e": 199, "971014": 167, "9714": 171, "9716": 170, "9717076499418887": 187, "97187673e": 199, "9722": 179, "9725": 173, "9727": 178, "97305419e": 199, "9739": 172, "9752e": 173, "9753e": 172, "9754": 170, "976073": 197, "9765": 173, "9766": 178, "977": 176, "9771": 179, "97739775e": 199, "9775": 173, "977733270": 179, "977974": 18, "978": 177, "9784": 179, "9785208702087402": 179, "9792": 179, "97964329e": 199, "97mib": 170, "98": [39, 53, 156, 167, 179, 192, 201], "9804": 173, "980769": 167, "981": 75, "9812": 179, "98237187e": 199, "9830": 177, "9831": 16, "9833": 179, "9834262422606419": 193, "9838": 170, "9839": 178, "9844": 178, "984659090909091": 179, "9847": 179, "98514058e": 199, "9854": 171, "98547": 196, "9856": 179, "986095083415364e": 9, "986e6d871071": 41, "987": 49, "98749888": 150, "9883": 178, "9893": 179, "9894": 172, "9899925": 152, "98a1ccc168e9": 78, "99": [30, 32, 45, 48, 53, 56, 61, 62, 90, 92, 93, 95, 129, 150, 156, 157, 167, 168, 172, 179, 189, 192, 193, 194, 195, 196, 197, 201], "9909e": 172, "9924": 173, "99262966e": 199, "9932": 173, "9933": 179, "994": [177, 194], "994177": 64, "9942": 172, "994667": 14, "995": 194, "9950": 172, "996": [178, 194], "9960": 170, "9961": 181, "9966e": 172, "997": 194, "9971": 179, "99714633e": 199, "9976563219": 41, "997677": 201, "99771051": 9, "998": 194, "9986": [173, 181], "9988e": 172, "999": [53, 56, 76, 77, 153, 178], "9992e": 173, "9995": [156, 157, 168], "999703": 201, "9999": [19, 60, 66, 81], "999926": 201, "999999": [61, 62, 95], "999999999999998": 49, "999999999999999": 152, "9b450cb47d30": 54, "9b9247988596": 71, "9d80": 132, "9dea": 132, "9df797f83624": 53, "9e77": 132, "9e95083e441a": 53, "9mib": 170, "9th": 129, "9yzf8kj6rp": 139, "A": [0, 1, 2, 8, 9, 10, 19, 20, 25, 32, 33, 35, 36, 37, 38, 39, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 65, 67, 69, 70, 71, 72, 75, 76, 78, 79, 81, 84, 85, 88, 89, 90, 91, 92, 93, 95, 96, 97, 99, 102, 103, 104, 107, 117, 121, 126, 127, 128, 130, 131, 132, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 149, 150, 151, 153, 156, 157, 159, 160, 163, 164, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 193, 194, 195, 196, 197, 198, 199, 201, 202], "AND": [105, 118, 126], "AS": 0, "And": [1, 35, 36, 53, 72, 92, 96, 117, 118, 129, 133, 142, 144, 157, 158, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "As": [25, 26, 28, 33, 35, 37, 39, 40, 41, 48, 49, 52, 55, 56, 67, 71, 72, 75, 77, 78, 84, 85, 94, 96, 99, 102, 103, 107, 112, 129, 131, 132, 135, 138, 139, 142, 143, 156, 157, 158, 159, 161, 162, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 187, 189, 190, 193, 194, 196, 197, 198, 199, 200, 201, 202], "At": [40, 97, 99, 107, 117, 129, 131, 133, 136, 137, 139, 140, 142, 144, 174, 178, 186, 190, 197, 199, 201], "BUT": [188, 190, 193, 195, 196, 197, 199], "Be": [19, 20, 35, 139, 140, 144, 170], "Being": 57, "But": [0, 5, 6, 8, 11, 26, 36, 37, 38, 43, 46, 49, 50, 52, 53, 55, 57, 58, 72, 78, 80, 81, 86, 90, 91, 93, 95, 96, 102, 103, 105, 112, 117, 118, 128, 129, 131, 132, 133, 136, 138, 139, 144, 156, 157, 158, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 187, 188, 189, 190, 196, 197, 198, 199], "By": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 48, 49, 50, 60, 63, 79, 81, 103, 107, 129, 132, 156, 157, 158, 160, 161, 162, 163, 165, 166, 168, 170, 174, 175, 177, 178, 181, 188, 190, 195, 196, 197, 199], "For": [4, 5, 6, 8, 13, 15, 16, 17, 18, 21, 24, 25, 26, 29, 30, 32, 33, 36, 38, 39, 40, 41, 43, 47, 48, 49, 50, 52, 53, 62, 66, 69, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 95, 96, 97, 99, 102, 103, 104, 105, 109, 112, 113, 117, 118, 127, 129, 131, 132, 134, 136, 137, 139, 140, 143, 150, 151, 152, 153, 156, 157, 158, 159, 161, 162, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "IN": 140, "IT": [95, 103, 134, 157], "If": [0, 2, 5, 6, 7, 25, 28, 29, 35, 36, 38, 40, 43, 44, 45, 46, 48, 49, 50, 53, 55, 57, 58, 60, 62, 63, 64, 66, 69, 70, 71, 72, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 90, 91, 95, 97, 99, 102, 103, 104, 107, 110, 116, 117, 118, 126, 127, 128, 129, 131, 132, 133, 136, 137, 139, 140, 142, 143, 144, 149, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 190, 191, 196, 197, 198, 199, 200, 201, 206], "In": [0, 1, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 104, 105, 107, 116, 117, 118, 128, 129, 131, 132, 133, 135, 136, 137, 138, 142, 143, 144, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "Into": 131, "It": [0, 1, 8, 10, 18, 19, 20, 21, 23, 25, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 60, 61, 65, 69, 70, 71, 72, 75, 77, 79, 80, 81, 83, 85, 86, 89, 90, 91, 92, 93, 95, 96, 99, 102, 103, 104, 105, 107, 109, 113, 117, 118, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 149, 150, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 191, 192, 193, 196, 198, 199, 200, 201, 202, 208], "Its": [8, 19, 20, 23, 25, 118, 129], "NO": 57, "NOT": [11, 96, 105, 188, 189], "Near": 179, "No": [1, 40, 44, 48, 49, 71, 75, 90, 93, 99, 117, 118, 129, 136, 137, 139, 142, 144, 156, 157, 160, 163, 170, 178, 179, 189, 192, 194, 195, 196, 197, 201], "Not": [54, 55, 56, 72, 82, 83, 96, 99, 105, 107, 129, 134, 137, 139, 144, 149, 150, 162, 172, 173, 174, 176, 177, 179, 185, 194], "OF": [139, 142, 143], "OR": [40, 96, 105, 132, 185, 196], "Of": [132, 172, 178, 179], "On": [5, 9, 17, 18, 19, 20, 35, 37, 49, 56, 57, 69, 76, 78, 81, 99, 103, 129, 132, 149, 170, 179, 190, 197, 201], "One": [0, 1, 8, 29, 36, 39, 53, 60, 67, 81, 84, 90, 91, 102, 107, 117, 118, 129, 132, 133, 138, 143, 144, 151, 171, 172, 173, 174, 176, 177, 178, 179, 180, 186, 187, 188, 189, 195, 197, 199], "Or": [8, 49, 118, 131, 139, 163, 164, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 187, 199], "Such": [8, 19, 20, 38, 49, 156, 157, 160, 164, 174, 177, 179], "THE": 140, "TO": [38, 139, 167, 199], "That": [0, 7, 25, 37, 43, 53, 55, 69, 72, 105, 110, 117, 129, 131, 132, 133, 139, 142, 144, 170, 171, 172, 173, 174, 176, 177, 178, 179, 187, 194, 196, 197, 198, 200, 201, 202, 206], "The": [1, 2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 41, 43, 46, 47, 48, 49, 50, 52, 57, 58, 60, 61, 62, 66, 67, 70, 73, 75, 76, 77, 78, 79, 80, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 110, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 156, 158, 159, 168, 170, 171, 173, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206], "Their": [129, 170, 193], "Then": [0, 2, 50, 63, 64, 65, 67, 73, 76, 77, 81, 91, 92, 102, 103, 104, 117, 118, 128, 129, 131, 132, 133, 138, 139, 142, 143, 144, 157, 171, 172, 173, 174, 175, 178, 179, 188, 194, 195, 196, 199, 201], "There": [1, 5, 25, 26, 32, 35, 36, 39, 40, 41, 43, 48, 49, 53, 54, 55, 57, 63, 64, 69, 71, 78, 81, 85, 92, 96, 103, 105, 107, 112, 117, 118, 129, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144, 156, 157, 159, 160, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 201], "These": [0, 1, 15, 16, 17, 18, 24, 38, 39, 52, 53, 67, 71, 72, 78, 79, 81, 82, 90, 97, 102, 105, 129, 131, 133, 135, 137, 138, 139, 140, 143, 163, 170, 172, 173, 174, 176, 178, 179, 185, 188, 189, 190, 193, 195, 197, 199], "To": [5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 28, 35, 36, 39, 40, 41, 43, 45, 49, 50, 52, 53, 57, 58, 60, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 81, 83, 85, 90, 92, 93, 94, 95, 97, 99, 102, 103, 104, 105, 118, 119, 127, 129, 131, 135, 136, 137, 144, 149, 150, 152, 153, 157, 158, 160, 161, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 189, 191, 192, 193, 195, 197, 198, 200, 201], "Will": [78, 172, 174, 177], "With": [0, 1, 6, 7, 25, 44, 55, 58, 72, 105, 110, 129, 143, 153, 170, 171, 172, 173, 176, 177, 178, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 206], "_": [28, 29, 30, 31, 32, 36, 39, 81, 89, 91, 98, 102, 103, 104, 127, 129, 163, 177, 178, 179, 194, 196, 200], "_0": 178, "_1": 31, "_2": [31, 33], "__": [102, 103, 105], "___________": 139, "__add__": 105, "__and__": 105, "__bases__": 103, "__builtins__": [60, 71, 81], "__cached__": [60, 81], "__call__": [38, 127, 129], "__class__": [72, 102, 103, 127, 173], "__closure__": 37, "__d": 104, "__dict__": [39, 85, 103], "__div__": 105, "__doc__": [60, 75, 81, 90, 103], "__eq__": 105, "__file__": [60, 81], "__floordiv__": 105, "__ge__": 105, "__get_result": 129, "__getitem__": [48, 156, 174], "__gt__": 105, "__iadd__": 105, "__idiv__": 105, "__imod__": 105, "__imul__": 105, "__init__": [35, 36, 39, 73, 84, 85, 102, 103, 104, 105, 129, 171, 172, 173, 174, 175, 178, 180, 181, 194], "__invert__": 105, "__ipow__": 105, "__isub__": 105, "__iter__": [35, 36], "__le__": 105, "__len__": 174, "__loader__": [60, 81], "__lshift__": 105, "__lt__": 105, "__main__": [85, 102, 103, 104, 105, 107, 174], "__maxpric": 102, "__mod__": 105, "__module__": 103, "__mro__": 104, "__mul__": 105, "__name__": [60, 81, 103, 173, 194], "__ne__": 105, "__next__": [35, 36], "__or__": 105, "__package__": [60, 81], "__peg_parser__": 89, "__pow__": 105, "__pycache__": 179, "__rshift__": 105, "__salari": 102, "__secretcount": 103, "__spec__": [60, 81], "__str__": [73, 105], "__sub__": 105, "__truediv__": 105, "__version__": [85, 149, 154, 170, 171, 173, 174, 176, 177, 178, 179], "__weakref__": [85, 103], "__xor__": 105, "_acal": 129, "_add_numeric_oper": 156, "_age": 91, "_age_": 163, "_arun": 127, "_ax": 194, "_backward_hook": 174, "_base": 129, "_call": [127, 129], "_call_impl": [173, 174], "_classname__attrnam": 103, "_completion_with_retri": [129, 139], "_condit": 129, "_conv_forward": 174, "_decor": [163, 188, 194], "_drop_axi": 160, "_epoch": 177, "_except": 129, "_forward_hook": 174, "_forward_pre_hook": 174, "_gener": 129, "_get_action_request": 127, "_get_input": 129, "_get_sess": 127, "_global_backward_hook": [173, 174], "_global_backward_pre_hook": 173, "_global_forward_hook": [173, 174], "_global_forward_pre_hook": [173, 174], "_if": 91, "_indentation_": 43, "_init_": 72, "_input": 134, "_interpret_respons": 129, "_interpret_response_lin": 129, "_io": 69, "_justcounter__secretcount": 103, "_make_request": 127, "_marks_": 163, "_maxlin": 127, "_name_": 163, "_output": 31, "_p": 31, "_pair": 174, "_prompt": 129, "_raise_timeout": 127, "_read_statu": 127, "_reversed_padding_repeated_twic": 174, "_run": 127, "_should_continu": 127, "_sinplot_": 186, "_sock": 127, "_sslobj": 127, "_state": 129, "_strptime": 62, "_strptime_datetim": 62, "_take_next_step": 127, "_temperatur": 39, "_timeout_occur": 127, "_transform_index": 163, "_y": 197, "a04242241123": 53, "a1": 193, "a2": 193, "a3": 193, "a4372dda": 132, "a46e692b8bdd": 173, "a8dfd56d4d8": 71, "a_": 32, "a_0": 28, "a_copi": 151, "a_g_": 91, "a_n": 28, "aa": 40, "aabbcc": 146, "aabc": 40, "aaron": 129, "ab": [25, 40, 54, 60, 69, 154, 178, 191, 197, 200], "ab123csd": 40, "abacu": 40, "abandon": 129, "abbrevi": [61, 62, 63, 164, 188, 194, 195], "abc": [40, 48, 54, 55, 95, 140], "abc12d": 40, "abc12de23f456": 40, "abcdef": 146, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 81, "abhai": 140, "abil": [53, 102, 104, 118, 132, 136, 137, 139, 142, 172, 175, 177, 178, 179, 194], "abl": [5, 8, 24, 35, 37, 78, 94, 97, 104, 118, 129, 131, 132, 140, 142, 144, 171, 172, 174, 176, 178, 179, 181, 186, 189, 193, 195, 196, 197, 199, 200], "abnorm": 50, "abomasnow": 167, "abomasnowmega": 167, "abort": 50, "about": [0, 7, 8, 9, 11, 21, 25, 26, 31, 35, 37, 38, 39, 40, 41, 43, 48, 52, 53, 54, 55, 56, 57, 58, 60, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 83, 85, 89, 90, 91, 92, 95, 97, 102, 103, 104, 105, 107, 109, 110, 112, 113, 117, 118, 126, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 153, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 186, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 206], "abov": [5, 6, 8, 25, 35, 36, 37, 38, 39, 40, 41, 44, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 67, 69, 71, 72, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 90, 91, 92, 94, 97, 102, 103, 104, 105, 107, 117, 129, 131, 132, 137, 139, 142, 143, 149, 151, 156, 158, 159, 160, 161, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "abra": 167, "abraham": 174, "abruptli": [48, 49], "absenc": 52, "absol": 167, "absolmega": 167, "absolut": [25, 31, 37, 39, 43, 75, 83, 129, 144, 171, 172, 173], "absolute_url": [136, 137], "absolute_valu": 75, "absorpt": 0, "abstract": [71, 102, 117, 118, 129, 131, 136, 139, 144, 178, 193, 195, 196, 199], "abund": 129, "abus": 37, "abxz": 40, "abyss": 40, "ac": 40, "academ": [118, 157], "acc": [151, 172, 173, 179], "accademia": 129, "acceler": [140, 170, 171, 173, 174, 176, 177, 178, 179, 181], "accelgor": 167, "accent": 191, "accent_r": 191, "accept": [53, 73, 103, 109, 113, 129, 136, 137, 138, 144, 173, 178, 179, 185, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "access": [25, 37, 39, 46, 57, 61, 66, 69, 71, 75, 76, 77, 80, 81, 83, 84, 85, 90, 93, 96, 97, 102, 104, 107, 117, 129, 136, 137, 139, 140, 149, 150, 151, 156, 157, 158, 159, 170, 171, 175, 176, 178, 179, 188, 189, 196], "access_level": 46, "accessor": 156, "accid": 129, "accident": 102, "acco": 167, "accomod": 170, "accompani": 129, "accomplish": [53, 57, 58, 63, 139], "accord": [46, 75, 86, 96, 105, 117, 129, 178, 199, 201, 202], "accordingli": [49, 69, 97, 173, 177, 179, 186, 188, 189, 190, 199], "account": [16, 38, 127, 129, 133, 136, 144, 176, 177, 178, 179, 193, 197], "accounts_to_mim": 139, "accum": 173, "accumul": [171, 172, 173, 174, 175, 180, 181], "accur": [1, 5, 6, 12, 14, 17, 18, 19, 20, 45, 52, 83, 93, 129, 132, 140, 142, 144, 170, 190], "accuraci": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 129, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "accuracy_fn": [172, 173], "accuracy_scor": 172, "acd": 40, "acdbea": 40, "ach": 40, "achiev": [50, 95, 102, 105, 117, 139, 142, 164, 170, 172, 174, 176, 177, 178, 179, 186, 187, 190, 191, 196, 199], "achiv": 53, "acm": [98, 144], "acme_co_v2": 144, "acmico": 144, "acn": 144, "aco": [81, 83], "acombine_doc": 129, "acompletion_with_retri": 129, "acordingli": 199, "acosh": [81, 83], "acquaint": [189, 190, 198, 199, 200, 201], "acquir": [102, 104, 132, 178], "acquisit": 132, "acrobat": 129, "acronym": 178, "across": [1, 107, 118, 129, 137, 143, 144, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201], "act": [0, 25, 38, 43, 76, 85, 96, 102, 103, 118, 143, 194, 200], "action": [1, 43, 55, 72, 75, 102, 107, 117, 118, 126, 129, 131, 137, 138, 139, 140, 156, 170, 173, 174, 176, 178, 179, 187, 201], "action_id": 127, "activ": [8, 19, 20, 25, 65, 128, 129, 131, 136, 137, 139, 140, 144, 170, 173, 174, 176, 177, 178, 179, 201, 208], "actual": [11, 15, 16, 17, 18, 19, 20, 35, 36, 38, 39, 53, 67, 69, 73, 78, 91, 93, 103, 104, 105, 107, 118, 129, 131, 132, 133, 138, 139, 142, 144, 147, 152, 156, 164, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "actviat": 172, "ad": [0, 5, 6, 12, 13, 14, 15, 16, 17, 18, 25, 38, 39, 40, 48, 50, 52, 54, 55, 57, 65, 71, 75, 94, 95, 104, 117, 129, 152, 153, 156, 157, 158, 164, 166, 170, 172, 173, 174, 175, 176, 178, 180, 181, 185, 186, 187, 189, 194, 195, 196, 197, 199], "ad7c0de6": 132, "ada": [117, 133], "adam": [171, 172, 174, 175, 176, 177, 178, 179, 180, 181], "adapt": [127, 139, 176, 177, 178, 192, 196, 199, 200, 201], "adaptiveavgpool2d": [176, 177], "add": [5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 37, 38, 40, 41, 45, 48, 49, 55, 57, 58, 71, 72, 75, 77, 78, 80, 81, 86, 90, 92, 94, 95, 96, 102, 103, 104, 105, 117, 129, 130, 131, 132, 133, 135, 136, 137, 138, 142, 144, 146, 147, 149, 152, 153, 156, 157, 158, 163, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 186, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 203], "add_": [26, 112], "add_6_and_3": 89, "add_ai_messag": 117, "add_binari": 85, "add_collect": 194, "add_docu": 132, "add_graph": 177, "add_legend": [200, 201], "add_legend_data": 194, "add_patch": 193, "add_prefix": 163, "add_scalar": 177, "add_skil": 102, "add_subplot": 173, "add_suffix": 163, "add_ten": [37, 75], "add_two_num": 58, "add_two_numb": [75, 78], "add_user_messag": 117, "add_video_info": 143, "addbackward0": 178, "adder": 41, "addict": 132, "addit": [8, 12, 13, 14, 15, 16, 17, 18, 25, 27, 30, 41, 52, 72, 75, 78, 80, 85, 91, 94, 95, 96, 102, 104, 105, 117, 118, 129, 132, 144, 149, 170, 178, 186, 187, 189, 190, 194, 196, 199, 204], "addition": [24, 102, 132, 190, 197, 199, 200, 201], "additional_kwarg": [117, 130, 136, 138], "additoinal_kwarg": 138, "addmmbackward0": [170, 178], "address": [5, 6, 48, 56, 144, 197], "adher": [129, 177], "adienc": 200, "adject": 129, "adjust": [8, 96, 131, 137, 142, 170, 171, 173, 174, 175, 176, 178, 179, 180, 181, 193, 194, 195, 198, 199], "admin": 46, "administr": 134, "admir": 129, "admiss": 129, "admit": 142, "adopt": 179, "adorn": 129, "adrish": 178, "adult_mal": [195, 197], "advanc": [11, 25, 50, 78, 91, 117, 118, 121, 129, 137, 139, 172, 173, 177, 178, 179, 186, 197], "advantag": [11, 35, 99, 117, 118, 129, 132, 136, 137, 142, 143, 186, 196], "adventur": 129, "advers": 197, "adversari": 208, "advic": [129, 132, 142, 143, 197], "advis": [81, 129, 132, 142, 143, 190, 197], "advisor": [129, 143], "advisori": 143, "aegislashblad": 167, "aegislashshield": 167, "aerodactyl": 167, "aerodactylmega": 167, "aesthet": [179, 185, 187, 188, 189, 190, 194, 197, 199, 201, 204], "af0f59439c9b": 37, "affect": [76, 129, 143, 156, 190], "affili": [118, 140], "afford": [129, 140, 186], "afhuu987u3": 139, "afmhot": 191, "afmhot_r": 191, "afoo": 40, "afootbal": 40, "afootest": 40, "after": [1, 8, 32, 35, 46, 48, 49, 50, 52, 53, 55, 66, 67, 69, 71, 72, 75, 76, 77, 78, 81, 85, 89, 90, 91, 93, 94, 99, 103, 105, 107, 117, 118, 129, 136, 137, 139, 140, 142, 144, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 187, 191, 196, 201], "afternoon": 139, "afterward": [129, 132, 144], "ag": [41, 45, 48, 56, 71, 72, 75, 78, 81, 85, 91, 95, 102, 103, 104, 107, 117, 129, 133, 146, 156, 157, 159, 160, 161, 162, 163, 165, 166, 172, 173, 185, 187, 190, 194, 195, 197, 201], "again": [0, 44, 49, 67, 69, 71, 73, 79, 81, 102, 104, 105, 107, 118, 129, 132, 138, 139, 142, 144, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "against": [40, 129, 134, 142, 152, 157, 164, 173, 187, 189, 190, 194, 200, 201], "agarw": 140, "age_": 91, "agenc": [117, 118, 134, 140], "agenda": [185, 187, 189, 196, 199], "agent": [1, 121, 129, 145], "agent_executor": 131, "agent_toolkit": 127, "agentexecutor": [117, 118, 127], "agg": [156, 168], "aggfunc": 156, "aggreg": [8, 129, 199], "aggron": 167, "aggronmega": 167, "agil": [140, 144], "agnost": [144, 170, 171, 172, 175, 176, 177, 178, 179, 181], "ago": [117, 129, 135], "agonistc": 178, "agre": [118, 129, 187], "agricultur": [134, 170], "ah": 128, "ahead": [133, 144, 179, 187, 190], "ai": [0, 25, 116, 118, 129, 130, 136, 140, 142, 143, 144, 170, 175, 176, 177, 178, 179, 197], "ai_respons": 117, "ai_response_messag": 138, "aid": [118, 129, 142, 143, 179, 200], "aim": [1, 4, 11, 118, 139, 143, 156, 160, 198], "aimessag": [117, 130, 134, 136, 138, 144], "aimessageprompttempl": [128, 130, 144], "aipom": 167, "air": [129, 131, 134, 139], "airbnb": 143, "airlin": [134, 202], "airmark": 142, "airport": 132, "airtabl": 143, "ak": 178, "akin": [1, 174], "al": 178, "ala": 129, "alakazam": 167, "alakazammega": 167, "alammar": 178, "alan": [48, 49, 75, 78, 157], "alan99": 50, "alan99whit": 49, "alarm": 129, "album": 117, "alchemi": 117, "alexhormozi": 139, "alfa": [156, 157, 168], "algebra": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 149, 190, 208], "algorithm": [1, 3, 5, 6, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 29, 30, 48, 104, 131, 140, 170, 171, 178, 189, 200, 208], "alia": [40, 179], "alic": 137, "alien": 129, "align": [1, 26, 28, 29, 30, 32, 33, 53, 112, 147, 156, 176, 178, 190], "alina": 146, "aliv": [195, 197], "all": [0, 1, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 28, 29, 30, 32, 33, 35, 36, 37, 39, 40, 46, 47, 48, 49, 50, 52, 55, 57, 60, 61, 62, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 107, 110, 117, 118, 126, 127, 129, 131, 132, 134, 136, 137, 138, 139, 140, 142, 143, 144, 149, 150, 151, 152, 153, 156, 157, 158, 159, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206], "all_even": 36, "all_kei": 56, "alla": 117, "allan": 53, "allclos": 154, "allianc": [117, 129], "alliter": 130, "alll": 147, "alloc": [80, 102, 199], "allow": [12, 13, 14, 15, 16, 17, 18, 21, 23, 25, 37, 38, 39, 40, 41, 43, 46, 48, 49, 52, 54, 55, 71, 72, 77, 78, 90, 91, 92, 96, 102, 103, 104, 105, 107, 109, 113, 117, 118, 127, 129, 130, 138, 139, 140, 143, 151, 152, 156, 157, 163, 164, 165, 170, 172, 174, 175, 176, 177, 178, 179, 181, 188, 191, 195, 196, 200, 201], "allus": 139, "almost": [25, 129, 139, 170, 171, 172, 174, 175, 176, 177, 178, 179, 189, 198, 199], "aloha": 185, "alomomola": 167, "alon": [129, 131, 178, 193, 195, 197], "along": [9, 11, 12, 15, 16, 38, 48, 71, 72, 75, 78, 80, 81, 85, 104, 107, 117, 129, 138, 139, 149, 150, 152, 170, 172, 174, 178, 179, 186, 189, 191, 193, 194, 196, 198, 199], "alongisd": 171, "alongsid": [130, 172, 173, 174, 179], "alot": 178, "alow": 50, "alp": 129, "alpha": [9, 19, 20, 32, 33, 82, 91, 179, 188, 190, 191, 192, 193, 194, 196, 201], "alphabet": [29, 30, 49, 50, 53, 77, 92], "alphanumer": 53, "alpin": 129, "alreadi": [9, 24, 37, 38, 53, 54, 57, 69, 71, 81, 86, 99, 107, 118, 129, 131, 132, 133, 134, 139, 143, 144, 156, 157, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 189, 190, 191, 193, 194, 195, 196, 198, 199, 201], "alright": [171, 172, 173, 174, 176, 178, 179, 192], "also": [0, 1, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 35, 36, 37, 38, 39, 43, 44, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 84, 85, 88, 90, 91, 92, 94, 95, 96, 97, 99, 102, 103, 104, 107, 110, 112, 117, 118, 126, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 144, 147, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206], "alt": 118, "altaria": 167, "altariamega": 167, "alter": [38, 43, 93, 156, 174, 178, 179, 186, 189, 191, 193, 194, 196, 197, 198, 199], "altern": [28, 30, 32, 37, 53, 69, 78, 81, 92, 118, 129, 160, 163, 178, 179, 196, 199, 201], "although": [5, 13, 29, 30, 37, 75, 76, 80, 84, 96, 97, 103, 129, 131, 172, 179, 186, 187, 188, 194, 195, 199, 200], "altman": [117, 129, 131], "altspel": 118, "alu": 69, "alumni": 129, "alwai": [25, 28, 30, 35, 43, 44, 72, 73, 75, 81, 82, 83, 86, 89, 90, 94, 96, 97, 103, 104, 107, 129, 131, 132, 136, 137, 144, 151, 156, 170, 171, 172, 174, 176, 177, 178, 179, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199], "alzheim": 139, "am": [0, 38, 40, 53, 61, 62, 76, 85, 95, 107, 139, 143, 144, 174, 186, 189, 191, 193, 194, 195, 196, 197, 199, 201], "amateurish": 129, "amaura": 167, "amax": [19, 20], "amaz": [52, 176, 201], "amazingli": 130, "amazon": 179, "amazonaw": 173, "amber": 188, "ambigi": 118, "ambigu": 86, "ambipom": 167, "ambit": 129, "ambiti": 129, "amd": [99, 138, 177], "amd64": 25, "amelia": 107, "america": [60, 64, 118], "american": [117, 129, 185], "ami": [41, 48, 103, 136], "amid": 129, "amin": [19, 20], "among": [46, 67, 103, 129, 142, 188, 189, 197, 198, 201], "amongst": 174, "amoonguss": 167, "amount": [0, 1, 43, 45, 73, 93, 99, 129, 132, 136, 137, 138, 144, 149, 170, 171, 172, 173, 176, 177, 178, 179, 190, 194, 195, 196, 201], "amp": 134, "ampharo": 167, "ampharosmega": 167, "ampl": 199, "amusingli": 129, "an": [0, 2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 28, 29, 30, 32, 33, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 58, 61, 65, 66, 67, 69, 70, 71, 73, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 104, 105, 107, 113, 117, 118, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 142, 143, 144, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 175, 176, 177, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "anaconda": [81, 149, 186], "anaconda3": [62, 81, 117, 118, 127, 129, 131, 132, 160, 163, 164, 165, 185, 188, 192, 194], "analog": [84, 156], "analogi": 142, "analys": [6, 15, 16, 17, 18, 99, 116, 186], "analysi": [0, 1, 4, 5, 6, 13, 15, 16, 17, 18, 65, 99, 118, 156, 157, 160, 167, 168, 179, 185, 186, 188, 189, 193, 194, 195, 197, 198, 199, 201, 202, 208], "analyst": [0, 156, 164, 187], "analyt": [1, 137, 156, 189], "analyz": [0, 8, 72, 99, 141, 146, 147, 156, 157, 158, 161, 162, 164, 167, 168, 193, 201], "analyze_list_overlap": 141, "anana": 40, "anathema": 132, "anatomi": 118, "ancient": 129, "andorra": 118, "andreessen": [117, 142], "andrej": 170, "android": 179, "anduril": 143, "angel": [117, 129, 132], "angl": 83, "angri": 129, "ani": [0, 5, 7, 8, 19, 20, 23, 25, 28, 32, 33, 35, 36, 38, 39, 47, 48, 49, 50, 52, 53, 55, 57, 58, 65, 71, 72, 76, 77, 78, 79, 80, 81, 85, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 102, 103, 104, 110, 117, 118, 126, 129, 132, 133, 136, 137, 139, 140, 142, 143, 144, 149, 150, 152, 153, 156, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 186, 187, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206], "anim": [8, 19, 20, 104, 129, 144, 178], "anisotrop": [29, 30], "ankl": [18, 20, 173], "anlalyst": 0, "ann": [8, 19, 20], "anniversari": 40, "annoi": [132, 153], "annot": [179, 187, 196, 197, 200], "annotate_ax": 194, "announc": 129, "annual": [25, 157, 190], "anoint": 129, "anomal": 2, "anomali": [3, 131, 135, 208], "anomaly_detect": 9, "anon": 129, "anonym": [23, 36, 58, 87], "anorith": 167, "anoth": [4, 8, 23, 29, 30, 32, 33, 36, 37, 38, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 58, 63, 69, 71, 75, 76, 77, 81, 84, 85, 89, 90, 92, 94, 95, 96, 97, 102, 103, 104, 117, 118, 127, 129, 131, 132, 136, 137, 138, 139, 144, 146, 151, 152, 156, 157, 158, 165, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "anscomb": [189, 191], "ansi": 129, "answer": [52, 117, 126, 128, 129, 131, 132, 135, 139, 140, 142, 173, 174, 175, 176, 177, 178, 179, 181, 199], "answer_kei": 118, "antialia": [174, 177, 178, 180, 181], "antibiot": 48, "antiqu": 129, "anuko": 53, "anukool": [0, 53, 70, 75, 102], "any_fun": 85, "anybodi": 144, "anymor": [129, 200], "anyof": 138, "anyon": [53, 129, 136, 137, 142, 177, 179], "anyth": [25, 44, 53, 75, 103, 107, 117, 118, 129, 137, 142, 144, 160, 163, 165, 166, 170, 171, 172, 173, 174, 177, 178, 179, 186, 193, 196, 201], "anytim": [178, 187], "anywai": [45, 129, 132, 142, 174, 179, 195, 196, 200], "anywher": [40, 129, 136, 137, 170, 177, 179, 191], "aord": 132, "ap": 144, "apart": [5, 25, 54, 129, 132, 143, 152, 190, 193, 199], "apex": 129, "api": [117, 121, 129, 131, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 160, 163, 170, 176, 177, 178, 179], "api_bas": 129, "api_doc": 118, "api_kei": [129, 133, 138, 142], "api_requestor": 129, "api_resourc": 129, "api_typ": 129, "api_vers": 129, "api_wrapp": 127, "apichain": 118, "apolog": 129, "app": [128, 129, 133, 136, 137, 142, 143, 144, 173, 174, 175, 176, 177, 188], "appart": 50, "appdata": 81, "appeal": [129, 131, 186, 187, 197], "appear": [53, 76, 77, 80, 85, 90, 104, 118, 129, 137, 172, 173, 178, 179, 186, 188, 189, 190, 197, 201], "appen": 153, "append": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 48, 58, 69, 72, 75, 80, 81, 85, 95, 102, 131, 139, 142, 143, 149, 153, 156, 163, 165, 168, 171, 173, 174, 175, 177, 179, 180, 181, 189, 191, 192, 193, 194, 201], "appendex": 178, "appendix": 178, "appet": 130, "appl": [40, 48, 54, 56, 57, 92, 93, 96, 103, 118, 129, 130, 158, 179, 197], "apple_pi": 179, "appli": [25, 32, 33, 38, 39, 71, 80, 118, 129, 131, 132, 140, 142, 143, 159, 160, 162, 163, 164, 166, 170, 172, 173, 174, 176, 178, 188, 189, 193, 196, 198, 199, 200, 201], "applic": [0, 1, 23, 29, 30, 32, 33, 52, 53, 65, 81, 84, 102, 117, 118, 119, 126, 129, 132, 136, 137, 139, 143, 152, 157, 163, 170, 171, 175, 178, 179, 181, 193, 208], "appreci": [129, 139], "approach": [8, 27, 102, 118, 129, 139, 142, 143, 152, 160, 163, 171, 177, 200, 201], "appropri": [1, 6, 15, 16, 17, 18, 44, 45, 46, 47, 52, 62, 75, 176, 177, 178, 179, 188, 193], "approx": 33, "approxim": [5, 6, 52, 127, 129, 131, 178, 198, 199], "apr": 88, "apredict": 129, "april": [50, 118, 129, 132, 137, 174, 179], "apython": [40, 80], "ar": [0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 58, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 82, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 109, 110, 113, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 150, 151, 152, 153, 156, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206], "ara": 118, "arang": [9, 29, 30, 146, 149, 151, 152, 154, 170, 171, 172, 201, 202], "arbitrari": [28, 56, 57, 72, 107, 130, 151, 156, 174, 188], "arbok": 167, "arc": [83, 129], "arcanin": 167, "arcco": 33, "arceu": 167, "arch": 129, "archen": 167, "archeop": 167, "architectur": [8, 129, 173, 174, 175, 176, 177, 178, 179, 180, 181], "architecur": 178, "architecutur": 176, "architetur": 178, "archiv": [174, 178], "arctan2": 154, "arcx": 53, "arcxarcx": 53, "area": [1, 75, 102, 104, 117, 118, 131, 139, 144, 174, 178, 179, 190, 196, 199, 200], "area_of_circl": 75, "aren": [58, 129, 131, 132, 133, 138, 143, 144, 170, 171, 173, 174, 176, 177, 178, 179, 195, 197, 199], "arg": [38, 42, 50, 62, 72, 78, 107, 127, 129, 163, 172, 173, 174, 175, 177, 178, 179, 180, 181, 188, 191, 194, 200], "arg1": [58, 78], "arg2": 58, "arg3": 58, "argentina": 146, "argmax": [154, 170, 172, 173, 174, 175, 176, 179, 180, 181], "argmin": [131, 154, 170], "argpars": [175, 181], "argpartit": 154, "argsort": 154, "argu": [118, 142, 172], "arguabl": 129, "argument": [23, 35, 36, 38, 39, 40, 41, 53, 57, 58, 60, 61, 62, 66, 67, 69, 70, 71, 73, 76, 80, 81, 85, 87, 91, 103, 107, 117, 118, 127, 129, 131, 136, 138, 146, 150, 153, 173, 174, 175, 176, 186, 187, 188, 189, 190, 192, 195, 199, 201], "argument1": 81, "argument2": 81, "argument_list": 80, "argv": 81, "ariado": 167, "aris": [38, 49], "arithmet": [39, 52, 71, 75, 102, 105, 152], "arm": [99, 185], "armaldo": 167, "arnold": 185, "aromatiss": 167, "aron": 167, "around": [53, 78, 85, 93, 118, 126, 127, 129, 131, 132, 133, 139, 142, 143, 144, 170, 176, 179, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201], "arr": [150, 152], "arrai": [15, 16, 19, 20, 23, 25, 26, 29, 30, 31, 32, 33, 48, 53, 56, 58, 112, 129, 131, 155, 156, 170, 172, 174, 189, 190, 191, 193, 199, 200, 201, 202], "arrang": [0, 32, 70, 129, 139, 167, 170, 189, 194, 197, 198], "array_equ": [149, 154], "arriv": [129, 193, 196], "arrow": [71, 178], "arrrai": 156, "arsen": [199, 200, 201], "art": [1, 50, 129, 134, 140, 172, 173, 174, 175, 176, 178, 179], "arthur": [38, 41, 46, 48, 56, 75, 78, 95, 102, 103, 104], "arthurhunt": 41, "arti": 129, "articl": [0, 10, 18, 20, 49, 67, 77, 78, 107, 118, 129, 131, 135, 156, 157, 160, 162, 163, 172, 178, 179, 190], "articuno": 167, "artif": 16, "artifici": [1, 8, 13, 16, 19, 20, 129, 139, 140, 170, 173, 174, 179, 197, 208], "artificial_intellig": 197, "artist": [118, 129, 177, 194], "arxiv": 178, "as_cmap": 188, "as_retriev": [117, 118, 132, 135, 141, 142], "as_strid": 154, "asabeneh": [25, 69], "asarrai": 174, "ascend": [129, 156, 167, 168], "ascii": [53, 69], "ascii_lett": 81, "ascontiguousarrai": 154, "asian": 185, "asid": [129, 130, 170, 197], "asin": [81, 83], "asinh": [81, 83], "ask": [0, 25, 36, 43, 52, 73, 117, 118, 121, 129, 131, 132, 135, 138, 140, 142, 143, 144, 145, 172, 174, 175, 176, 178, 179, 199], "asp": 129, "aspect": [102, 117, 118, 139, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 198, 199, 200, 201], "aspra": 129, "assaria": 185, "assemblyai": 142, "assert": [71, 72, 89, 90, 173, 175, 176, 177, 178, 179, 180, 181], "assert_same_host": 127, "assertionerror": 71, "assess": 198, "asset": [118, 140, 142], "assign": [4, 8, 18, 20, 37, 38, 39, 48, 53, 54, 55, 56, 57, 58, 63, 71, 76, 77, 78, 80, 85, 90, 92, 93, 94, 97, 98, 102, 105, 107, 118, 132, 139, 156, 157, 160, 163, 165, 166, 172, 174, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201], "assist": [129, 138, 142, 144, 188, 200], "associ": [1, 10, 18, 20, 29, 30, 56, 81, 85, 90, 97, 103, 118, 127, 129, 187, 190, 194, 195, 199, 201], "assosci": [176, 179], "assum": [2, 5, 8, 12, 14, 39, 117, 129, 131, 132, 160, 174, 179, 188], "assumpt": [129, 142, 190, 199], "assur": [129, 178, 193, 195, 199], "asterisk": [41, 78, 81], "asterix": 129, "asthenospher": 126, "astonish": 129, "astrai": 129, "astyp": [149, 153, 154, 156, 196, 201], "async": [89, 127, 129], "atan": [81, 83], "atan2": [81, 83], "atanh": [81, 83], "ate": 139, "ateli": 129, "ath": 40, "atk": 167, "atlanta": [104, 118], "atlanti": 41, "atleast": 191, "atleast_2d": 154, "atmospher": [139, 187], "atol": 173, "attach": [37, 39, 50, 91, 102, 129, 156, 170, 176, 178, 187, 188, 189, 190, 191, 194, 196, 198, 199, 201], "attachment_count": 127, "attack": [167, 185], "attain": 197, "attempt": [129, 176, 179, 187, 195, 199], "attend": [129, 142], "attent": [129, 132, 142, 174, 179, 194, 196, 201], "attic": 129, "attir": 129, "attitud": 139, "attn_dropout": 178, "attn_output": 178, "attr": [103, 104], "attract": [95, 129, 186], "attrib": 69, "attribut": [37, 38, 39, 40, 57, 60, 66, 71, 73, 75, 81, 83, 90, 95, 102, 104, 107, 126, 132, 139, 141, 152, 160, 163, 170, 173, 174, 176, 177, 178, 179, 181, 191, 193, 194, 199], "attributeerror": [57, 102, 103, 104, 194, 199], "attributeinfo": 132, "attributemethod": 90, "au": 33, "audi": [156, 157, 168], "audienc": [129, 200], "audino": 167, "audinomega": 167, "audio": [25, 142, 170, 171, 173, 174, 176, 179, 201], "aug": 88, "augment": [126, 173, 176, 177, 179], "augmentedassign": 90, "august": 129, "auli": 178, "auroru": 167, "australia": [12, 14, 146, 190], "australian": 144, "austrian": 129, "auth": [139, 143], "authent": [136, 137], "author": [117, 118, 129, 132, 139, 178], "authorit": 139, "authors_str": 139, "authors_tone_descript": 139, "auto": [118, 138, 142, 167, 168, 173, 174, 175, 177, 178, 179, 180, 181], "auto_transform": 176, "autogener": [117, 118], "autogpt": 118, "autograd": 171, "autom": [0, 1, 25, 48, 49, 118, 131, 136, 137, 138, 140], "automat": [0, 1, 8, 35, 36, 39, 52, 81, 91, 94, 102, 103, 107, 117, 128, 131, 136, 137, 140, 156, 171, 172, 174, 176, 178, 179, 186, 187, 190, 192], "automatic_transform": 177, "automobil": 156, "automobile_data": [156, 157, 168], "automobile_data1": 168, "autonom": [118, 139], "autonotebook": 133, "autopct": [146, 147], "autoregress": 199, "autoreload": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "autumn": [117, 185, 191], "autumn_r": 191, "ava": 69, "avail": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 52, 53, 54, 55, 57, 69, 81, 83, 85, 90, 92, 93, 95, 97, 104, 105, 117, 118, 129, 131, 132, 140, 144, 152, 156, 162, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 187, 188, 189, 190, 196, 197, 199, 200, 201], "availalbl": 171, "avalanch": 129, "avalugg": 167, "averag": [2, 5, 48, 75, 118, 129, 132, 139, 144, 147, 156, 157, 173, 174, 175, 176, 177, 179, 180, 181, 190, 195, 199, 201], "averaged_perceptron_tagg": 135, "avg": 167, "avgpool": 176, "avgpool2d": 173, "aviat": 134, "avocado": 96, "avoid": [37, 46, 47, 50, 57, 58, 69, 79, 84, 94, 102, 129, 132, 144, 150, 160, 170, 173, 178, 190, 199], "avov": [190, 191], "aw": [117, 129, 136, 137, 170, 179], "awai": [12, 13, 14, 15, 16, 17, 18, 25, 40, 129, 144, 173, 177, 181, 186, 189, 190, 195, 197], "await": [89, 179, 187], "awar": [19, 20, 69, 129, 132, 138, 144, 170, 171, 173, 178, 179, 190, 194], "award": 199, "awesom": [25, 117, 118, 128, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 191], "awk": 25, "ax": [9, 12, 15, 16, 26, 31, 112, 129, 160, 163, 170, 173, 174, 178, 179, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "ax1": [200, 202], "ax2": 200, "ax4": 200, "ax5": 200, "ax6": 200, "ax_joint": 190, "axarr": 147, "axes_styl": [186, 197], "axessubplot": [185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199, 202], "axew": 167, "axhlin": 201, "axi": [12, 15, 16, 17, 18, 19, 20, 28, 31, 129, 131, 146, 147, 149, 150, 152, 153, 156, 162, 167, 170, 173, 174, 176, 178, 179, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201], "axiomat": 129, "axis_nam": 160, "axisgrid": [187, 189, 190, 191, 192, 195, 198, 199, 200, 201], "axz": 40, "az": 185, "azelf": 167, "azumaril": 167, "azur": [170, 179], "azuril": 167, "b": [12, 31, 38, 46, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 66, 69, 72, 75, 76, 77, 78, 81, 82, 83, 85, 91, 92, 93, 95, 96, 97, 103, 104, 105, 107, 127, 132, 136, 137, 140, 146, 149, 150, 151, 152, 156, 157, 159, 160, 161, 162, 163, 166, 170, 171, 178, 179, 185, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "b1": 105, "b2": 105, "b2b": [118, 140, 144], "b3ac65e67ae9": 76, "b4c816180ad9": 95, "b712": 132, "b72af0bfcd83": 54, "b8ab82a1062c": 78, "b8eab4452d4b": 103, "b902": 129, "b942612e6b6a": 54, "b951d4fef2c8": 72, "b977fb738e16": 102, "b_0": 28, "b_n": 28, "ba": 178, "baat": 139, "baby_back_rib": 179, "babyagi": 118, "babydog": 104, "bac": 40, "back": [0, 9, 53, 70, 78, 99, 105, 116, 117, 118, 127, 129, 131, 132, 134, 136, 137, 138, 139, 140, 142, 143, 149, 156, 160, 163, 164, 165, 166, 167, 171, 173, 174, 177, 178, 179, 187, 194, 195, 196, 197, 198, 199], "backbon": [176, 177, 178], "backend": [170, 186, 189, 201], "background": [36, 117, 143, 171, 178, 186, 188, 190, 196, 197, 199], "backlash": 40, "backlog": 140, "backoff": [136, 137], "backpropag": [19, 20, 171, 172], "backquot": 131, "backslash": [53, 70, 90, 92], "backspac": 53, "backtick": 131, "backward": [39, 49, 53, 70, 93, 107, 171, 172, 173, 174, 175, 176, 179, 180, 181, 196], "bacon": 130, "bad": [72, 129, 131, 132, 136, 139, 142, 144, 156, 171, 173, 176, 179, 195], "bad_str": 117, "badli": 129, "baevski": 178, "bag": [18, 20, 91, 173], "bagon": 167, "bai": 144, "baidu": [78, 91], "baklava": 179, "balanc": [129, 132, 143, 172, 176], "bald": 129, "ball": [48, 56, 92, 128], "baltoi": 167, "ban": 129, "banana": [40, 48, 54, 72, 92, 93, 95, 96, 118, 158], "band": [117, 118, 129, 199], "bandwidth": [192, 196, 199], "banett": 167, "banettemega": 167, "bang": 170, "bangladesh": 190, "bank": [0, 118, 127, 129, 179, 194], "baptisteri": 129, "bar": [40, 54, 56, 77, 138, 173, 174, 187, 193, 194, 195, 196, 198, 199, 201, 204], "bar1": 197, "bar2": 197, "bar3": 197, "barbaracl": 167, "barboach": 167, "barcelona": 146, "barchart": 146, "bare": [129, 172], "barebon": 173, "bargain": 129, "barh": 173, "bark": 104, "barn": 41, "barplot": [186, 193, 197, 198], "barrier": 139, "basculin": 167, "base": [1, 4, 5, 6, 7, 8, 11, 12, 14, 15, 16, 18, 19, 20, 25, 28, 32, 33, 48, 49, 50, 52, 53, 58, 60, 61, 62, 66, 71, 72, 73, 79, 81, 83, 84, 94, 95, 99, 102, 103, 104, 107, 110, 116, 117, 118, 127, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 153, 156, 157, 159, 160, 167, 168, 170, 171, 172, 173, 174, 175, 178, 179, 188, 190, 191, 196, 197, 199, 201, 202, 205, 206], "base1": 104, "base2": 104, "base_compressor": 132, "base_retriev": 132, "baseclass": [102, 104], "baseexcept": [127, 129], "basel": 30, "baselin": [178, 197], "basement": 129, "basemodel": [117, 136], "basesslerror": 127, "baseto": 81, "basi": [25, 53, 54, 142, 176, 178, 189, 191, 192, 193, 195], "basic": [24, 29, 30, 33, 38, 39, 40, 50, 52, 66, 73, 77, 81, 102, 117, 129, 133, 134, 142, 152, 156, 171, 172, 174, 188, 189, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208], "basicconfig": 132, "basicli": 55, "basicmethod": 90, "basil": 117, "basin": 129, "basketbal": 132, "bastiodon": 167, "bat": 104, "batch": [129, 134, 140, 174, 175, 176, 177, 178, 179, 180, 181], "batch_first": 178, "batch_messag": 130, "batch_siz": [173, 174, 175, 176, 177, 178, 179, 180, 181], "batchmat": 129, "batchnorm2d": 176, "bath": 129, "bathingsoap": 147, "bathingsoapsalesdata": 147, "bathroom": 170, "battl": 53, "bayleef": 167, "baz": 54, "bb": 40, "bb99b9cebaa8": 56, "bbb1": 132, "bbox_inch": 31, "bc9e07fcbe69": 57, "bcaaeab6bf17": 94, "bce": 131, "bceloss": [171, 172], "bcelosswithlogit": 172, "bcewithlogitsloss": 172, "beach": [117, 179], "beak": 48, "bear": [45, 129], "bearabl": 129, "beartic": 167, "beat": 179, "beaten": 117, "beauti": [40, 129, 139, 143, 144, 174, 177, 178, 179, 185, 199], "beautifi": 69, "beautifli": 167, "beautifulli": [129, 179, 194], "beautifulsoup": [25, 136, 137, 143], "becam": [0, 117, 118, 129], "becasu": 89, "becauas": 133, "becaus": [8, 25, 28, 36, 38, 48, 49, 50, 53, 61, 71, 72, 75, 76, 77, 78, 80, 89, 90, 91, 92, 93, 94, 96, 102, 103, 104, 107, 117, 118, 126, 129, 131, 132, 135, 137, 138, 139, 142, 143, 144, 157, 159, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "becom": [0, 36, 39, 48, 49, 53, 76, 107, 117, 118, 129, 132, 135, 139, 156, 157, 158, 171, 172, 179, 199], "becuas": 139, "bed": 129, "bedroom": [1, 129, 170], "bee": 193, "beedril": 167, "beedrillmega": 167, "beef_carpaccio": 179, "beef_tartar": 179, "been": [4, 8, 15, 16, 17, 18, 19, 20, 40, 50, 53, 54, 55, 56, 69, 71, 72, 85, 91, 107, 116, 117, 118, 129, 131, 132, 133, 135, 138, 141, 142, 154, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 188, 189, 190, 193, 194, 196, 198, 199, 200, 201], "beeswarm": [193, 194], "beet_salad": 179, "befor": [0, 1, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 36, 37, 38, 39, 41, 48, 49, 52, 58, 60, 66, 67, 70, 72, 76, 77, 78, 80, 85, 94, 99, 103, 104, 107, 118, 129, 130, 132, 139, 140, 143, 144, 153, 156, 157, 158, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 185, 187, 188, 189, 190, 191, 195, 196, 197, 199, 200, 201], "beforehand": 49, "began": 201, "begin": [26, 28, 29, 30, 32, 33, 39, 48, 53, 54, 55, 66, 69, 81, 85, 90, 91, 103, 105, 107, 112, 117, 118, 127, 129, 132, 142, 143, 165, 166, 167, 170, 172, 173, 174, 176, 177, 178, 179, 185, 186, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 201], "beginn": [23, 99, 179, 189, 195, 196], "begun": [129, 132], "behav": [69, 92, 105, 107, 152], "behavior": [1, 28, 52, 85, 102, 103, 104, 107, 161, 165, 166, 170, 176, 189], "behaviour": [28, 96], "beheeyem": 167, "behind": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 79, 80, 118, 139, 144, 170, 171, 173, 174, 177, 178, 193, 196, 198, 201], "behold": 129, "beignet": 179, "being": [1, 8, 15, 16, 19, 20, 25, 28, 39, 40, 49, 54, 56, 57, 75, 78, 93, 102, 104, 109, 113, 118, 128, 129, 131, 132, 135, 139, 142, 143, 144, 170, 171, 172, 173, 174, 176, 177, 178, 179, 186, 189, 190, 191, 193, 195, 197, 199, 200], "bel": [118, 129], "beldum": 167, "belgium": [118, 146, 190], "belief": 129, "believ": [129, 131, 132, 137, 140, 142, 194, 199], "bell": [53, 117], "bella": [48, 102, 103, 107], "belli": 129, "bellossom": 167, "bellsprout": 167, "belong": [4, 11, 52, 92, 93, 102, 103, 129, 172, 178], "belov": 129, "below": [4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 36, 39, 44, 45, 48, 49, 50, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 75, 78, 79, 81, 84, 85, 88, 89, 91, 92, 95, 96, 102, 104, 105, 117, 118, 129, 131, 132, 133, 136, 137, 139, 140, 142, 143, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 179, 186, 190, 192, 200, 201, 202], "ben": 102, "bench": 129, "benchmark": [10, 18, 20, 172, 174, 176, 178, 179], "bend": [129, 189], "beneath": 129, "benedictevan": 139, "benefici": [131, 159, 176], "benefit": [53, 81, 104, 136, 137, 172, 173, 174, 175, 176, 178, 179, 180, 181], "benevol": 118, "bengaluru": 136, "benignli": 129, "bent": 129, "benz": 168, "beret": 177, "bergman": 117, "bergmit": 167, "bergum": 179, "berkelei": 140, "bert": [178, 208], "bertop": 142, "besid": [117, 118, 129, 132, 139, 149], "best": [1, 2, 5, 25, 36, 38, 48, 50, 53, 54, 69, 86, 99, 117, 118, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 143, 144, 147, 170, 171, 172, 174, 175, 176, 178, 179, 180, 181, 188, 189, 190, 191, 193, 196, 199], "best_match": 118, "best_model": 177, "best_model_path": 177, "bet": [117, 129], "beta": [32, 82, 174, 176, 178, 189], "beta_": 178, "betavari": 82, "betoken": 129, "better": [12, 14, 37, 40, 48, 49, 67, 85, 90, 99, 104, 105, 107, 117, 129, 131, 132, 133, 136, 137, 138, 139, 143, 144, 146, 147, 156, 170, 171, 172, 174, 176, 177, 178, 179, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 208], "betw": 12, "between": [0, 1, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 20, 30, 48, 49, 50, 52, 53, 54, 55, 57, 65, 79, 81, 82, 85, 96, 103, 107, 117, 118, 129, 132, 134, 137, 139, 141, 142, 143, 144, 152, 153, 156, 170, 171, 172, 173, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202], "bewar": [174, 177, 178], "beyond": [172, 195, 199], "bfa": 129, "bfc5aa62a0ff": 96, "bfee": 132, "bfoo": 40, "bia": [8, 139, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 208], "bias": [171, 177], "bibarel": 167, "bibimbap": 179, "bibl": 187, "bicub": [176, 177, 179], "bidirect": 178, "bidoof": 167, "big": [0, 12, 13, 14, 117, 118, 129, 132, 139, 141, 142, 143, 144, 171, 173, 174, 176, 177, 178, 180, 199, 200, 201, 208], "bigger": [5, 8, 9, 11, 17, 18, 19, 20, 39, 45, 95, 131, 139, 151, 177, 178, 179, 191, 193, 200], "biggest": [129, 132, 139, 150, 173, 174, 176, 177, 178, 179, 186], "biggr": 28, "bilinear": [174, 177, 178, 180, 181], "bill": [38, 48, 53, 75, 78, 129, 139, 189, 190, 193, 194, 195, 196, 199, 201], "billgat": 139, "billion": 170, "billionair": 129, "bin": [85, 96, 135, 146, 170, 179, 187, 190, 192, 196, 197, 201], "binacl": 167, "binari": [6, 15, 16, 17, 18, 52, 53, 69, 85, 90, 92, 95, 96, 99, 171, 172, 173, 191], "binary_r": 191, "binary_sum": 85, "bind": [97, 103, 194], "binder": [0, 25], "binomi": 190, "biographi": 117, "biolog": [8, 19, 20], "biologi": [118, 139], "bird": [102, 104, 117, 129], "birth": [40, 129, 190], "birth_year": [75, 78, 91], "birthdai": 75, "bisharp": 167, "bit": [5, 6, 9, 11, 17, 18, 19, 20, 25, 55, 82, 96, 99, 117, 129, 130, 131, 132, 136, 137, 138, 142, 143, 144, 170, 171, 172, 174, 176, 177, 178, 179, 187, 191, 202], "bitter": [176, 177], "bitwis": [90, 105], "bivarait": 190, "bivari": [192, 198, 201], "bizarr": 129, "bject": 69, "blab": 142, "black": [0, 8, 11, 117, 185, 193, 194, 197], "blackwel": 129, "blank": [85, 143], "blastois": 167, "blastoisemega": 167, "blaziken": 167, "blazikenmega": 167, "bleakest": 129, "blend": 201, "blind": 188, "blissei": 167, "blister": 129, "blitzl": 167, "blob": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 172, 179, 200], "blobmodel": 172, "block": [7, 43, 44, 45, 46, 47, 48, 49, 50, 69, 72, 75, 90, 102, 110, 129, 131, 143, 156, 170, 171, 174, 179, 192, 199, 202, 206], "block_1": [173, 180, 181], "block_2": [173, 180, 181], "blog": [0, 65, 107, 140, 142, 143, 175, 177, 178, 179], "blood": [104, 129, 199], "blood_pressur": 199, "bloom": 129, "bloomberg": 140, "blow": 129, "blown": 129, "blu": 102, "blue": [48, 90, 118, 129, 137, 146, 170, 171, 173, 177, 179, 188, 189, 191, 194, 202], "blueprint": [102, 103, 107], "blues_r": 191, "blurt": [129, 132], "bm25": 132, "bm25_retriev": 132, "bm25retriev": 132, "bmatrix": [29, 30, 32, 33], "bmv": 168, "bmw": [104, 137, 168], "board": [136, 137], "board_token": [136, 137], "boat": 129, "bob": [91, 118, 137], "bobbi": 137, "bodi": [35, 44, 45, 46, 47, 48, 49, 50, 75, 76, 80, 102, 104, 118, 127, 131, 156, 157, 167, 168, 178, 185], "body_camera": 185, "body_plain": 127, "body_po": 127, "bog": 178, "bogot\u00e1": 118, "boi": 129, "boil": 117, "bokeh": 190, "bold": [129, 146, 178, 196, 197, 199, 201], "bolder": 201, "boldor": 167, "bolt": 142, "bonafid": 118, "bonapart": 131, "bond": [53, 95, 129], "bone": 191, "bone_r": 191, "bonefi": [136, 137], "bonsli": 167, "bonu": [137, 144, 179, 197], "book": [0, 7, 21, 26, 91, 105, 109, 110, 112, 113, 117, 118, 121, 129, 132, 139, 142, 145, 179, 183, 188, 197, 205, 206], "bookmark": 198, "bool": [103, 104, 173, 174, 177], "bool_a": 151, "bool_idx": 151, "boolean": [17, 18, 19, 20, 38, 46, 53, 81, 90, 103, 138, 149, 150, 156, 160, 161, 162, 163, 165, 166], "boom": 129, "boost": [55, 173], "booster": 187, "boot": [18, 20, 137, 173], "boot_trac": 199, "bootstrap": [143, 197, 199], "border": 118, "bore": [50, 129, 132, 179], "born": [40, 72, 117, 178], "boss": 129, "boston": [117, 118, 129, 138], "bot": [33, 117, 118, 121, 136, 139, 143, 144, 145], "both": [0, 17, 18, 19, 20, 36, 38, 40, 45, 48, 50, 52, 53, 54, 55, 56, 57, 58, 60, 66, 69, 70, 72, 76, 77, 81, 90, 92, 96, 97, 102, 104, 107, 109, 113, 117, 118, 129, 132, 135, 143, 152, 156, 157, 158, 160, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 190, 194, 196, 197, 201], "bother": [129, 178, 187, 189], "bottl": 132, "bottleneck": [140, 173, 177], "bottom": [17, 18, 19, 20, 25, 117, 129, 136, 137, 151, 156, 172, 173, 179, 187, 195, 197, 199], "bottom_plot": 197, "bottombar": 197, "bottomrow": 159, "bouffal": 167, "bought": [129, 132, 174], "bounc": 129, "bound": [29, 30, 37, 38, 71, 82, 99, 103, 129, 156, 171, 194], "boundari": [6, 10, 172], "bowl": 117, "bowlder": 129, "box": [109, 113, 117, 118, 136, 137, 142, 196, 197, 198, 199, 201, 204], "boxen": 199, "boxenplot": 199, "boxplot": [146, 186, 188, 193, 194, 195, 196, 199, 201], "boxprop": [146, 193], "boyc": 118, "bp": 146, "br": [136, 137], "bra": 118, "brace": [53, 56, 57, 90, 93, 95, 129], "bracket": [36, 44, 48, 49, 53, 54, 55, 56, 58, 90, 92, 134, 150, 151, 170], "braden": 127, "brain": [8, 19, 20, 129, 139, 200], "braixen": 167, "branch": 129, "brand": [132, 137, 144, 201], "bratwurst": 130, "brave": 118, "braviari": 167, "brazil": 146, "brbg": 191, "brbg_r": 191, "bre": 118, "bread": [53, 134, 179], "bread_pud": 179, "break": [8, 23, 35, 43, 51, 72, 73, 75, 81, 89, 90, 92, 95, 117, 127, 129, 139, 171, 172, 173, 174, 177, 178, 179, 200, 201], "breakdown": [179, 182, 183, 193], "breakeven": 129, "breakfast_burrito": 179, "breakthrough": 139, "breathless": 129, "breez": 195, "breloom": 167, "breviti": [151, 177, 178], "brew": 188, "brewer": 188, "brex": 143, "brg": 191, "brg_r": 191, "brick": 178, "bridg": [129, 178, 179], "brief": [28, 29, 30, 66, 69, 82, 83, 103, 140, 142, 153], "briefli": [129, 130, 188], "bright": [129, 188], "brighten": 129, "brighter": 139, "brilliant": [53, 132], "bring": [53, 69, 117, 118, 128, 129, 132, 133, 139, 143, 170, 173, 178, 189, 191, 195, 197, 201], "british": 129, "broad": 178, "broader": [194, 199], "broadli": 71, "brochur": 144, "brock": 185, "broke": 129, "broken": [39, 79, 129, 135], "bronzong": 167, "bronzor": 167, "brooklyn": 194, "broswer": 179, "broth": 130, "brother": [102, 117, 137], "brought": 129, "brown": [117, 137, 185, 188], "brows": 118, "browser": [25, 129, 179, 188], "brrrr": [174, 178], "bruce": 78, "brush": 129, "bruyn": 146, "brv": 131, "bs4": [136, 137, 143], "bsd": [156, 167, 168], "btw": [117, 149], "bu": 170, "bubbl": 129, "buchheit": 131, "buck": 185, "bucket": 188, "bud": 135, "budew": 167, "budget": 129, "bue": 202, "buffer": [69, 127], "bug": [127, 129, 132, 167], "bugn": 191, "bugn_d": 197, "bugn_r": 191, "bui": [129, 132], "build": [0, 9, 12, 14, 15, 16, 25, 36, 39, 40, 102, 103, 109, 113, 117, 118, 128, 129, 130, 131, 132, 135, 136, 137, 140, 142, 143, 144, 156, 170, 176, 178, 186, 192, 194, 208], "builder": 129, "built": [7, 25, 35, 37, 39, 48, 50, 52, 58, 69, 72, 73, 75, 80, 85, 86, 88, 90, 95, 97, 102, 104, 105, 110, 118, 128, 129, 140, 142, 144, 147, 156, 160, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 206], "builtin": [25, 85, 170], "builtwith": [136, 137], "buizel": 167, "bulbasaur": 167, "bulk": [142, 193], "bulldoz": 129, "bullet": [131, 142, 143, 144, 174], "bullet_point": 144, "bullshit": 133, "bunch": [1, 53, 117, 118, 129, 132, 139, 143, 170, 171, 172, 173, 174, 176, 177, 179, 187], "buneari": 167, "bunnelbi": 167, "bupu": 191, "bupu_r": 191, "bureaucrat": 129, "burger": 136, "buri": 129, "burlington": 185, "burmi": 167, "burn": [129, 139], "burndown": 140, "bush": 129, "busi": [1, 25, 118, 129, 132, 139, 140, 142, 143, 144, 156, 189, 194, 197], "bussi": 25, "butter": [53, 130], "butterfre": 167, "button": [129, 144], "buyer": 129, "bw": [196, 198], "bwr": [191, 198], "bwr_r": 191, "bx": 190, "bye": 144, "bylaw": 129, "byo": 118, "bypass": 50, "byte": [69, 70, 156, 177, 178, 179], "bytetensor": 174, "c": [0, 9, 11, 23, 25, 30, 39, 40, 46, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 64, 69, 70, 71, 72, 75, 80, 81, 83, 89, 90, 91, 92, 93, 95, 96, 97, 99, 102, 103, 104, 107, 129, 131, 135, 139, 146, 147, 150, 151, 152, 153, 156, 160, 161, 162, 163, 164, 165, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 185, 188, 190, 192, 193, 194, 195, 197, 202], "c0": [187, 188], "c00e5d7d3c3": 71, "c014293b63c7478c": 117, "c02acf54079b": 168, "c1": [103, 104, 188], "c2": 188, "c3": 188, "c3f637926d7e": 69, "c4": 188, "c454c1331524": 73, "c5": 188, "c6": 188, "c7": 188, "c761920b81b0": 72, "c8": 188, "c8f749f7a9ca": 168, "c9": 188, "c92d9f2b36de": 93, "c_name": 104, "ca": [40, 117, 118, 138, 140, 185], "cab": [40, 199], "cabbag": 72, "cabin": 129, "cabxz": 40, "cach": [117, 179, 194], "cacnea": 167, "cacturn": 167, "cacul": [171, 172], "cad": 25, "cadenc": [136, 137], "caffein": 132, "cake": [129, 179], "calcuat": 172, "calcul": [5, 8, 9, 12, 14, 28, 33, 44, 48, 50, 52, 65, 75, 83, 90, 95, 96, 102, 104, 107, 129, 156, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 186, 188, 190, 192, 193, 194, 196, 197, 199], "calcula": 24, "calculate_ag": [75, 78], "calculate_area": 102, "calculu": [129, 208], "calculus_fourierseries__util": 28, "calendar": [127, 140, 199], "califonya": 117, "california": [117, 129], "californian": 129, "call": [2, 8, 9, 19, 20, 21, 25, 35, 36, 37, 38, 39, 40, 41, 43, 47, 48, 49, 53, 54, 55, 56, 57, 58, 62, 67, 69, 71, 72, 73, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 90, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 109, 113, 118, 121, 127, 129, 131, 133, 134, 135, 139, 140, 142, 145, 151, 158, 159, 160, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 186, 188, 194, 196, 197, 199, 200, 201, 202], "callabl": [35, 38, 81, 163, 194, 196], "callablemethod": 90, "callback": [130, 136, 137], "callback_manag": [127, 129, 130], "callbackmanag": 130, "caller": 36, "calm": 129, "calul": 171, "cambridg": [129, 196], "came": [118, 129, 133, 138, 174, 176], "camelcas": 91, "camera": [129, 173, 185], "camerupt": 167, "cameruptmega": 167, "can": [0, 1, 5, 7, 8, 12, 14, 19, 20, 23, 25, 26, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 110, 112, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 171, 173, 174, 177, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208], "canada": [12, 14, 118, 146], "canadian": 118, "canb": 31, "canberra_dist": 31, "cancellederror": 129, "cancer": 129, "candi": [103, 129], "candid": 179, "canidaefamili": 104, "cannot": [36, 38, 39, 41, 48, 50, 52, 53, 55, 56, 57, 62, 69, 71, 72, 76, 77, 78, 80, 81, 89, 91, 92, 93, 94, 95, 96, 99, 102, 107, 153, 157, 160, 162, 170, 174, 185, 191, 197], "canon": [25, 129], "canva": 129, "canvas": 129, "cap": [170, 174, 197], "capabl": [1, 117, 138, 170, 171, 172, 173, 174, 176, 178, 179, 201], "capac": [139, 172, 179], "caper": 129, "capit": [31, 53, 81, 91, 117, 118, 129, 132, 142], "capita": [12, 14], "capital_c": 91, "capitalinfo": 118, "capitalis": 53, "capitalist": 132, "capres": 117, "capsiz": 197, "captial": 53, "caption": 173, "captur": [72, 82, 96, 137, 178, 181], "capword": [81, 91], "car": [1, 8, 103, 104, 117, 118, 129, 137, 156, 157, 170, 173, 176, 178, 179, 185], "car_horsepow": 168, "car_info": 104, "car_manufactur": 168, "car_park": 170, "car_pric": 168, "caramel": 130, "carbink": 167, "carbonara": 117, "card": [118, 129, 172], "care": [35, 69, 129, 131, 132, 134, 137, 139, 152, 156, 170, 174, 177, 178, 189, 190, 199, 202], "career": [0, 1, 136, 137, 140, 142], "carefulli": 50, "carnegi": [8, 129], "carnivin": 167, "carolin": 117, "carpricedf": 168, "carracosta": 167, "carri": [52, 57, 96, 105, 118, 129, 132, 166], "carriag": 53, "carrot": [72, 130, 179], "cars_schema": 137, "carsdf": 168, "carsdf1": 168, "carsdf2": 168, "carshorsepowerdf": 168, "carson": [78, 129], "cart": 129, "carter": [102, 139], "cartesian": 12, "cartoon": 129, "carvanha": 167, "cascoon": 167, "case": [4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 37, 38, 40, 44, 45, 48, 50, 52, 53, 56, 57, 67, 71, 72, 81, 89, 90, 91, 92, 95, 96, 97, 99, 102, 104, 107, 117, 121, 129, 131, 132, 134, 135, 136, 137, 140, 143, 144, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 202, 208], "cash": [118, 143], "cast": [129, 150], "castform": 167, "cat": [8, 48, 92, 93, 107, 172, 173, 178, 191], "cat1": 107, "cat2": 107, "cat_po": 194, "catalyz": 139, "catbackward0": 178, "catch": [43, 73, 129, 137, 196, 201], "cateat": 146, "categor": [1, 6, 15, 16, 17, 18, 81, 142, 156, 157, 185, 188, 189, 192, 195, 196, 197, 198, 199, 200, 201, 204], "categori": [11, 15, 16, 18, 20, 43, 52, 71, 93, 117, 131, 136, 138, 142, 167, 172, 179, 185, 188, 191, 193, 197, 200], "categoricalindex": 156, "category_point": [189, 191], "caterpi": 167, "cathi": 48, "catplot": 199, "caught": [35, 50, 72], "caus": [38, 39, 50, 57, 69, 71, 72, 73, 129, 132, 172, 174, 179], "caution": 142, "cautiou": 201, "cayenn": 130, "cb": [136, 137], "cb8ac02fbcd3": 71, "cbar": 202, "cbook": 194, "cca2": 118, "cca3": 118, "ccn3": 118, "cd": [81, 179], "cde": 40, "cdn": 146, "cdot": [28, 29, 30, 32, 33, 170, 172, 178], "cdotp": 31, "ce": [118, 142], "ceil": [17, 18, 19, 20, 81, 83, 129, 154], "ceil_mod": [173, 174, 180, 181], "celebi": 167, "celebr": [136, 137], "celeri": 130, "cell": [17, 18, 19, 20, 25, 37, 56, 57, 76, 104, 118, 170, 171, 173, 174, 177, 178, 179, 182, 186, 202], "cell_cont": 37, "celsiu": [39, 117, 138], "center": [28, 53, 72, 95, 129, 131, 137, 139, 153, 172, 178, 187, 192, 195, 196, 197, 200], "centimet": [10, 11, 15], "centimetr": 185, "centr": 189, "central": [139, 173, 185, 189, 193, 195, 196, 197, 199], "centric": 143, "centroid": [4, 11, 131], "centroid_id": 11, "centuri": [61, 62, 117, 129], "ceo": [126, 129, 132, 142, 144], "cert": 127, "certain": [2, 12, 13, 14, 15, 16, 17, 18, 32, 40, 43, 50, 53, 55, 62, 64, 71, 72, 81, 86, 129, 138, 156, 170, 172, 173, 174, 176, 177, 179, 186, 195], "certainli": [129, 178, 179, 187, 190, 193, 196, 197, 199, 200], "certainti": 129, "cezann": 129, "ch": 48, "chaang": 167, "chain": [46, 91, 96, 104, 118, 121, 126, 127, 129, 131, 132, 133, 135, 136, 137, 140, 142, 143, 144, 157, 160, 161, 166], "chain_new": 118, "chain_typ": [117, 118, 129, 131, 133, 135, 140, 142, 143, 144], "chain_type_kwarg": 142, "chair": 129, "chairman": 199, "challeng": [0, 53, 139, 143, 173, 177, 178, 179, 200], "champion": 144, "chanc": [129, 139, 170, 171, 172, 173, 174, 177, 178, 181], "chandelur": 167, "chandler": 185, "chang": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 38, 44, 48, 49, 52, 57, 58, 65, 71, 72, 75, 76, 77, 78, 81, 93, 94, 95, 99, 102, 103, 104, 105, 117, 118, 129, 131, 132, 136, 137, 138, 139, 146, 150, 151, 153, 156, 159, 160, 161, 162, 163, 165, 171, 172, 173, 174, 175, 178, 179, 180, 181, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "changabl": 179, "change_to_upp": 38, "changelog": 172, "channel": [127, 129, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181], "chansei": 167, "chaotic": 129, "chapter": [53, 139, 175, 176, 177, 178, 179], "char": [36, 48, 92], "charact": [25, 43, 48, 49, 50, 61, 62, 69, 81, 88, 90, 91, 93, 95, 118, 128, 129, 131, 133, 139, 142, 163, 186], "character": 139, "characterist": [1, 6, 8, 57, 102, 167, 168, 179, 199], "charactertextsplitt": 118, "charcter": 53, "charg": [129, 179], "charizard": 167, "charizardmega": 167, "charm": [117, 129], "charmand": 167, "charmeleon": 167, "chart": [140, 197, 199, 200], "chase": [129, 132, 185], "chat": [118, 121, 128, 129, 136, 137, 138, 139, 142, 143, 144], "chat_histori": 118, "chat_model": [117, 118, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144], "chat_prompt": [128, 130, 142, 144], "chat_prompt_combin": [142, 144], "chat_prompt_map": [142, 144], "chat_prompt_with_valu": 130, "chatbas": 118, "chatbot": [138, 140], "chatcomplet": 138, "chatgener": 130, "chatgpt": [117, 121, 131, 138, 142], "chatmessag": [130, 138], "chatmessagehistori": 117, "chatopenai": [117, 118, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 142, 143, 144], "chatot": 167, "chatpdf": 118, "chatprompttempl": [117, 118, 128, 130, 134, 142, 144], "chaturvedi": [0, 75, 102], "chdir": 81, "che": [40, 118], "cheap": [117, 129, 132], "cheaper": [136, 137], "cheapli": 129, "cheat": [148, 155, 169, 171], "cheatham": 129, "cheatsheet": 171, "cheb": 31, "chebyshev_dist": 31, "check": [0, 12, 14, 15, 16, 17, 18, 19, 20, 26, 36, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 57, 58, 61, 62, 69, 72, 75, 77, 81, 93, 96, 103, 104, 112, 117, 118, 128, 129, 131, 132, 133, 136, 137, 139, 142, 143, 144, 153, 156, 161, 165, 170, 172, 173, 174, 175, 176, 177, 180, 181, 186, 188, 190, 191, 194, 199, 201], "check_latest_vers": [117, 131, 132], "checkbox": 25, "checkout": [170, 178], "checkpoint": 167, "checkr": 143, "chees": 117, "chef": 177, "chelsea": 201, "chemistri": 139, "cher": 40, "cherbourg": [195, 197], "cherrim": 167, "cherubi": 167, "chesnaught": 167, "chespin": 167, "chess": 142, "chevrolet": 168, "chicago": 118, "chicken": [130, 172, 173], "chikorita": 167, "child": [69, 102, 104, 132, 133, 195], "child_splitt": 132, "childbirth": 139, "childmethod": 104, "children": [129, 133, 139, 142, 197], "chimchar": 167, "chimecho": 167, "chinchou": 167, "ching": 40, "chingl": 167, "chip": [139, 179], "chirag": 103, "chocol": 179, "choic": [0, 46, 52, 81, 82, 117, 118, 129, 130, 132, 138, 139, 154, 174, 188, 189, 190, 192, 193, 194, 195, 199], "choos": [2, 9, 72, 118, 129, 131, 136, 137, 138, 142, 150, 156, 157, 171, 172, 173, 176, 177, 179, 188, 189, 194, 195, 197, 199, 200, 202], "choose_colorbrewer_palett": 188, "choose_cubehelix_palett": 188, "chop": 117, "chopper": 129, "chore": 129, "chose": [1, 25, 129, 131, 176, 178, 190], "chosen": [82, 129, 177, 194, 201], "chp": 53, "chracter": 95, "christina": 144, "christma": 133, "chroma": [117, 132, 141], "chromadb": 135, "chronometri": 199, "chunk": [75, 117, 118, 127, 129, 131, 132, 140, 141, 142, 143, 144, 167, 173, 178, 188, 189, 195, 199], "chunk_overlap": [117, 118, 129, 131, 132, 133, 135, 140, 141, 142, 143, 144], "chunk_siz": [117, 118, 129, 131, 132, 133, 135, 140, 141, 142, 143, 144], "chunk_summari": 131, "chunksiz": 167, "church": 129, "churn": 129, "chw": [173, 174], "ci": [170, 189, 191, 197, 198, 199], "ci_band": 199, "ci_bar": 199, "cider": 130, "cinccino": 167, "cioc": 118, "cir": 102, "circl": [83, 102, 129, 147, 177], "circlemodelv0": 172, "circlemodelv1": 172, "circlemodelv2": 172, "circu": 129, "circular": 172, "circumfer": 83, "circumst": [72, 195], "cirqu": 129, "citi": [69, 72, 91, 102, 117, 118, 129, 137, 138, 142, 146, 157, 160, 185, 194], "citizen": [37, 129], "cividi": [188, 191, 194], "cividis_r": 191, "civil": 129, "cl": [62, 107, 129], "cl100k_base": 143, "claim": [129, 131, 185], "clamperl": 167, "clara": 129, "clarifi": [40, 72, 97, 137, 142, 186], "clariti": [131, 136, 137, 142, 178], "clark": [38, 75, 78, 95], "clasess": 16, "class": [10, 11, 15, 16, 17, 18, 19, 20, 25, 35, 36, 37, 38, 41, 48, 49, 50, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 69, 71, 72, 81, 84, 89, 90, 91, 93, 94, 95, 97, 105, 107, 117, 118, 126, 129, 132, 134, 136, 137, 149, 150, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 170, 171, 173, 175, 176, 177, 180, 181, 189, 193, 195, 196, 197, 199, 200, 201, 202], "class1": 104, "class2": 104, "class_1": 174, "class_2": 174, "class_dict": [174, 180, 181], "class_embed": 178, "class_idx": 174, "class_nam": [173, 174, 175, 176, 177, 178, 180, 181], "class_names_found": 174, "class_suit": 102, "class_to_idx": [174, 180, 181], "class_token": 178, "class_token_embedding_expand": 178, "class_token_embedding_singl": 178, "class_token_posit": 178, "classic": [117, 130, 142, 174], "classif": [1, 11, 139, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 200, 208], "classifi": [1, 6, 11, 15, 16, 17, 18, 19, 20, 71, 172, 173, 174, 175, 176, 178, 179, 180, 181, 197], "classification_report": 172, "classifici": 172, "classinfo": 104, "classmethod": [60, 65], "classnam": [102, 174], "classon": 102, "classtwo": 102, "clauncher": 167, "claus": 146, "clawitz": 167, "claydol": 167, "clayton": 78, "clean": [1, 40, 69, 72, 79, 84, 90, 118, 121, 129, 134, 135, 136, 137, 138, 143, 144, 161, 162, 180, 208], "cleaner": [36, 152], "cleans": 199, "clear": [15, 16, 36, 57, 84, 107, 129, 132, 139, 173, 177, 187, 197], "clearer": [73, 90, 187, 201], "clearest": 129, "clearli": [39, 129, 170], "clefabl": 167, "clefairi": 167, "cleffa": 167, "clever": [129, 138], "clich": 40, "click": [0, 25, 129, 173, 179], "client": [127, 129, 200], "climat": 139, "climax": 139, "climb": 129, "clip": 178, "clipboard": 156, "cllose": 189, "clni": 31, "cloak": 167, "clock": [61, 62, 199], "clone": [129, 176, 177, 178, 179], "close": [5, 37, 71, 72, 85, 99, 104, 118, 127, 129, 131, 133, 134, 135, 138, 139, 143, 144, 156, 171, 172, 173, 174, 177, 178, 179, 187, 190, 193, 194, 196, 197, 198, 199, 200], "closer": [35, 94, 107, 129, 132, 171, 172, 174, 190], "closest": [129, 131, 134, 179], "closest_centroids_id": 11, "closest_index": 131, "closest_indic": 131, "closeup": 129, "closur": [23, 38, 42, 129], "closure_result": 37, "clot": 129, "cloth": [6, 8, 18, 20, 132, 173], "cloud": [118, 136, 137, 142, 144, 170, 175, 178, 179, 199], "cloudi": [6, 129], "clove": 117, "cloyster": 167, "cls_name": 174, "club": [129, 132, 146, 201], "clue": 139, "clung": 118, "clunki": 129, "cluster": [1, 4, 131, 172, 195, 196, 200, 202, 204, 208], "cluster_centers_": 131, "cluster_std": 172, "clustergrid": 203, "clustermap": 203, "cm": [11, 15, 26, 112, 172], "cmap": [17, 18, 19, 20, 26, 112, 172, 173, 188, 191, 194, 200, 202, 203], "cmap_cycl": 191, "cmath": 83, "cmd": 177, "cmo": 144, "cmp": [54, 55, 56], "cmrmap": 191, "cmrmap_r": 191, "cmu": 129, "cn": 188, "cnn": [174, 175, 178, 180, 181], "cnt": 48, "co": [28, 33, 52, 81, 83, 97, 118, 139, 140, 143, 144, 149, 152, 176, 179, 185, 201], "coach": 140, "coars": 129, "coast": [129, 132], "coat": [8, 18, 20, 173, 177], "coatofarm": 118, "coats_of_arm": 118, "cobalion": 167, "code": [0, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 56, 58, 60, 66, 69, 70, 72, 75, 76, 78, 79, 80, 81, 84, 85, 86, 89, 90, 92, 95, 96, 102, 104, 107, 110, 117, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 149, 152, 170, 171, 172, 175, 176, 179, 180, 181, 182, 185, 186, 188, 189, 191, 192, 193, 194, 196, 197, 198, 199, 201, 206], "codeobject": 90, "coeffici": [28, 149, 187, 189, 200], "coefici": 28, "coerc": [52, 202], "coercion": 52, "coexist": 190, "cofagrigu": 167, "coffe": [133, 197], "cofound": 129, "cognat": 129, "coher": 139, "coin": [131, 174], "coinbas": 143, "col": [118, 151, 156, 160, 163, 165, 167, 173, 187, 189, 191, 193, 195, 196, 198, 199, 201], "col1": [156, 157, 158, 160, 161, 164], "col2": [156, 157, 158, 160, 161, 164], "col3": 156, "col_clust": 203, "col_fil": 166, "col_l": 193, "col_label": [156, 158, 160], "col_label1": 165, "col_label2": 165, "col_level": 166, "col_nam": [160, 176, 177, 178, 179, 198], "col_ord": [189, 198, 201], "col_posit": 156, "col_r1": 151, "col_r2": 151, "col_var": 198, "col_width": [176, 177, 178, 179], "col_wrap": [189, 191, 198, 201], "colab": [0, 24, 25, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181], "cold": [26, 53, 112, 129, 132], "coldest": 129, "coldest_th": 39, "collabor": [0, 1, 127, 129, 140], "collar": 129, "colleagu": [129, 142], "collect": [1, 8, 25, 35, 48, 49, 56, 57, 67, 70, 71, 81, 93, 97, 103, 129, 131, 135, 136, 137, 142, 154, 164, 172, 174, 176, 178, 193, 194, 201], "collection_nam": 132, "collector": [69, 142], "colleg": [102, 117, 129, 131, 132, 142], "collid": [84, 97], "collison": 129, "colombi": 118, "colombia": 118, "colombian": 118, "colombien": 118, "colombienn": 118, "colon": [44, 53, 54, 55, 56, 71, 75, 129], "coloni": 129, "color": [4, 8, 12, 26, 48, 102, 103, 112, 126, 127, 129, 131, 136, 137, 143, 146, 147, 173, 174, 178, 180, 181, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204], "color_channel": [170, 173, 174, 176, 177, 178, 180, 181], "color_cod": [191, 201], "color_map": [17, 18, 19, 20, 127], "color_palett": [188, 197], "colorbrew": 188, "colormap": [188, 197, 203], "colosseum": 117, "colour": [170, 172, 173, 176, 177, 178, 179, 200, 202], "colour_channel": 170, "column": [0, 9, 13, 15, 16, 17, 18, 19, 20, 32, 48, 58, 69, 117, 118, 146, 149, 150, 151, 152, 153, 167, 170, 173, 176, 178, 179, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203], "column_1": 201, "column_2": 201, "column_current_nam": 163, "column_label": [156, 164], "column_nam": 156, "column_on": 156, "column_posit": 156, "col\u00f4mbia": 118, "com": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 41, 75, 78, 91, 98, 117, 118, 127, 129, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181], "comb": 81, "combe": 167, "combin": [5, 9, 11, 12, 14, 15, 53, 54, 55, 72, 89, 91, 96, 104, 117, 118, 129, 130, 131, 132, 140, 142, 143, 144, 150, 158, 165, 170, 171, 172, 173, 176, 177, 179, 192, 193, 196, 198, 199, 201], "combine_doc": 129, "combine_docu": 129, "combine_prompt": [131, 140, 142, 143, 144], "combine_prompt_templ": [131, 140, 143], "combusken": 167, "come": [25, 36, 39, 49, 50, 52, 53, 58, 72, 75, 86, 97, 105, 107, 117, 118, 126, 129, 131, 132, 135, 138, 139, 143, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 189, 190, 192, 194, 196, 197, 199, 200, 201], "comedi": 135, "comfort": [38, 58, 129, 142, 198], "comic": [129, 146], "comma": [54, 55, 56, 57, 75, 93, 139, 170, 176, 178], "command": [7, 25, 49, 72, 80, 81, 85, 99, 103, 110, 118, 126, 129, 137, 140, 149, 170, 175, 177, 179, 181, 186, 189, 206], "commenc": [198, 201], "comment": [23, 39, 75, 101, 117, 118, 128, 129, 142, 149, 170, 171, 174], "commentari": 171, "commerc": [25, 132], "commerci": [23, 140, 142], "commiss": [140, 199], "commit": [132, 179], "committe": [118, 144], "commod": 129, "common": [2, 8, 9, 29, 38, 54, 57, 60, 65, 69, 71, 81, 102, 103, 107, 117, 118, 126, 129, 131, 135, 136, 137, 142, 143, 151, 156, 158, 171, 172, 173, 174, 175, 176, 178, 179, 186, 188, 189, 193, 195, 197, 199, 200, 201], "commonli": [1, 29, 30, 40, 53, 54, 56, 57, 60, 66, 104, 118, 129, 173, 188, 189, 190, 191, 192, 197, 199], "commonmark": [21, 109, 113], "commun": [117, 118, 129, 131, 134, 139, 140, 170, 178, 179], "communit": 117, "commut": [29, 30], "comonli": 201, "compact": [58, 129], "compani": [0, 56, 78, 104, 118, 129, 132, 136, 137, 143, 144, 147, 156, 157, 170, 175, 176, 178], "companion": [129, 200, 201], "company_grp": 168, "company_info": 104, "company_inform": 140, "company_nam": 104, "company_path": 140, "company_sales_data": 147, "compar": [1, 11, 23, 36, 45, 52, 53, 54, 55, 56, 96, 99, 105, 117, 118, 129, 132, 133, 139, 141, 171, 172, 176, 177, 178, 186, 187, 190, 192, 193, 196, 197], "compare_result": 173, "comparis": [187, 190], "comparison": [53, 90, 132, 141, 146, 157, 160, 171, 173, 177, 179, 195, 197, 200], "comparit": 193, "compat": [39, 94, 105, 107, 152, 157, 170, 174, 175, 178, 179, 196], "compatible_format": 85, "compens": [137, 176, 194], "compet": [142, 157, 198], "competit": [0, 143, 144, 187], "competitor": [129, 131], "compil": [0, 23, 25, 38, 40, 90, 101, 129, 174, 191, 199], "complain": [107, 133], "complement": [40, 96, 186, 194], "complementari": 83, "complet": [0, 48, 49, 50, 53, 57, 69, 81, 82, 85, 97, 104, 126, 128, 129, 136, 137, 143, 144, 147, 153, 168, 174, 177, 179, 193, 197, 199], "completion_token": [136, 137], "completion_with_retri": [129, 139], "complex": [1, 8, 19, 20, 25, 48, 49, 52, 79, 83, 90, 92, 93, 96, 103, 104, 116, 117, 126, 132, 139, 146, 147, 156, 157, 167, 168, 173, 187, 189, 200], "complex128": 153, "complex_number1": 92, "complex_number2": 92, "complexnumb": 103, "compli": 99, "complianc": 140, "complic": [103, 117, 118, 129, 131, 137, 156, 173, 174, 186, 188], "complier": 99, "compon": [12, 13, 14, 15, 16, 17, 18, 32, 33, 75, 102, 118, 129, 172, 178, 179, 188, 189, 198, 199, 201], "compos": [54, 118, 174, 175, 176, 177, 178, 179, 180, 181], "composit": [129, 174], "composur": 146, "compound": [25, 96, 129], "comprehend": [195, 200], "comprehens": [35, 36, 48, 142, 179, 190], "compress": [173, 174, 175, 178, 179, 180, 181], "compress_docu": 132, "compressed_doc": 132, "compression_retriev": 132, "compressor": 132, "compris": [174, 178, 190], "comput": [0, 1, 2, 19, 20, 25, 32, 47, 52, 53, 57, 58, 67, 69, 72, 84, 90, 96, 99, 102, 104, 117, 129, 132, 135, 139, 140, 149, 152, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 184, 187, 190, 193, 194, 195, 196, 197, 199, 201], "computation": [170, 173, 189], "comstock": 129, "con": [170, 174, 177, 179], "concat": [81, 156, 167, 168, 178, 191, 195, 200, 201], "concaten": [54, 55, 81, 95, 102, 105, 149, 156, 170, 173, 178, 195], "conceal": 188, "concentr": [132, 193], "concept": [0, 23, 24, 27, 73, 97, 104, 106, 117, 118, 129, 139, 142, 149, 172, 175, 178, 179, 188, 189, 190, 192, 195, 197, 199, 200, 201, 208], "conceptu": [84, 117, 118, 195, 196, 198], "concern": [142, 144, 178, 179, 187, 195], "concis": [8, 36, 54, 56, 58, 73, 80, 117, 128, 129, 131, 139, 140, 142, 144, 151, 152, 178], "conclud": [37, 129, 139, 197, 199, 201], "conclus": [107, 139, 176, 178], "concret": [178, 199], "concurr": [67, 129], "conda": [25, 149], "condens": [128, 175, 178, 180, 181], "condit": [32, 35, 36, 38, 44, 45, 46, 47, 48, 49, 50, 56, 57, 69, 71, 79, 80, 90, 94, 96, 129, 151, 160, 162, 199, 200, 201], "condition": 129, "condition_inn": 47, "conditon_out": 47, "conduct": [6, 15, 16, 17, 18, 99, 144, 178], "conf_mat": 173, "confer": 129, "confid": [139, 176, 177, 179, 189, 191, 193, 195, 196, 197, 199], "config": [77, 132], "configur": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "confin": 167, "confirm": [118, 172], "confis": 173, "conflict": [139, 156], "confluenc": 118, "confmat": 173, "confmat_tensor": 173, "confus": [36, 47, 84, 107, 118, 129, 170, 172, 179, 187, 188, 194, 195, 197, 200], "confusing_text": 118, "confusionmatrix": [172, 173], "congratul": [73, 116, 139, 178], "conjuct": 199, "conjunct": 95, "conkeldurr": 167, "conn": 127, "connect": [8, 72, 118, 127, 132, 137, 140, 170, 174, 176, 178, 179, 194, 195, 197, 199], "connection_object": 156, "connectionerror": 127, "connectionist": [8, 19, 20], "connectionpool": 127, "conscious": [129, 133], "consequ": 1, "consid": [5, 8, 13, 19, 20, 28, 49, 53, 54, 56, 57, 61, 62, 72, 78, 84, 99, 105, 107, 142, 143, 144, 152, 153, 157, 161, 162, 171, 172, 173, 174, 175, 177, 178, 179, 187, 193, 195, 198, 200, 201], "consider": [11, 15, 25, 58, 129, 174, 177, 179, 189, 195, 199, 208], "consist": [5, 8, 10, 11, 15, 17, 18, 19, 20, 32, 54, 56, 71, 85, 86, 90, 104, 131, 135, 137, 140, 151, 172, 173, 176, 177, 178, 189, 197, 202], "consol": [25, 95, 133, 142, 156], "consolid": 143, "conspicu": 129, "constant": [5, 6, 23, 30, 40, 83, 92, 101, 129, 150, 152, 178, 198, 199], "constantli": [131, 143, 198, 200], "constitut": [8, 19, 20], "constrain": 129, "constraint": [39, 129, 140, 173, 179], "construct": [38, 39, 45, 50, 72, 79, 84, 85, 102, 118, 134, 135, 150, 151, 156, 171, 172, 178, 179], "constructor": [60, 73, 85, 104, 172], "consult": 129, "consum": [134, 140, 142, 199], "consumpt": 179, "contact": [139, 140, 142, 144], "contain": [8, 10, 15, 16, 35, 36, 48, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 66, 69, 70, 72, 80, 81, 84, 85, 91, 92, 94, 95, 97, 102, 103, 118, 129, 132, 137, 138, 142, 144, 147, 153, 156, 157, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 196, 197, 199, 202], "contempl": [129, 139], "contend": 179, "content": [7, 21, 25, 40, 69, 70, 72, 81, 109, 110, 113, 117, 118, 126, 128, 129, 130, 131, 133, 134, 136, 137, 138, 139, 141, 142, 143, 144, 156, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 206], "content_attr": 141, "contest": 25, "context": [53, 77, 105, 117, 129, 132, 133, 139, 142, 171, 173, 174, 175, 176, 180, 181, 186], "contextmanag": 90, "contextualcompressionretriev": 132, "contigu": [53, 195], "contin": 118, "continu": [2, 9, 23, 36, 43, 51, 72, 89, 90, 103, 104, 127, 129, 133, 139, 143, 170, 172, 176, 177, 178, 179, 180, 190, 194, 197, 198, 201], "contour": [9, 15, 16, 188, 190, 191], "contract": [0, 129, 144], "contractor": 140, "contradict": 129, "contrast": [1, 129, 151, 178], "contrastingli": 1, "contribut": [5, 6, 137, 143, 178, 197, 208], "control": [8, 25, 36, 44, 45, 52, 53, 90, 102, 105, 107, 118, 129, 137, 140, 142, 178, 185, 187, 188, 190, 194, 195, 196, 197, 199, 201, 204], "conttinu": 191, "conv": [173, 174], "conv1d": 173, "conv2d": [174, 175, 176, 180, 181], "conv2dnormactiv": 176, "conv3d": 173, "conv_block_1": [174, 175, 180, 181], "conv_block_2": [174, 175, 180, 181], "conv_lay": 173, "conv_layer_2": 173, "convei": [139, 197, 199], "conveni": [5, 6, 29, 30, 129, 133, 149, 178, 187, 189, 190, 193, 196], "convent": [40, 85, 103, 107, 117, 118, 129, 160, 163, 171, 199], "convention": 103, "conver": 139, "converg": [4, 5, 29, 30, 129, 174, 189], "convers": [23, 53, 90, 101, 118, 129, 138, 139, 144, 188, 193, 196], "conversationbuffermemori": 118, "convert": [7, 8, 17, 18, 19, 20, 32, 39, 52, 53, 54, 58, 60, 61, 62, 65, 69, 71, 83, 92, 94, 95, 99, 110, 118, 129, 131, 133, 136, 137, 142, 143, 149, 150, 153, 156, 157, 158, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 193, 197, 206], "convert_dictionary_to_python_object": 103, "convient": 156, "convinc": 129, "convini": [150, 153], "convnet": [153, 173], "convnext": 176, "convnext_smal": [176, 177], "convnext_tini": [176, 177], "convolu": 178, "convolut": [129, 176, 178, 208], "convolv": 173, "conwai": 129, "cook": [95, 117, 129, 130, 174, 177], "cool": [117, 118, 127, 129, 132, 138, 139, 143, 144, 153, 177, 178, 179, 188, 191], "cool_r": 191, "cooler": 36, "coolest": 129, "coolwarm": [26, 112, 191, 192, 195, 196, 197, 200], "coolwarm_r": 191, "coon": 129, "coordin": 105, "cop": 118, "cope": 72, "copi": [25, 53, 57, 70, 81, 102, 129, 131, 143, 152, 153, 156, 160, 161, 162, 163, 165, 166, 170, 171, 173, 174, 178, 179, 194], "copper": [191, 197], "copper_r": 191, "copy2": 179, "copyreg": 85, "copyright": 25, "copysign": [81, 83, 154], "cord": 129, "core": [19, 20, 103, 129, 135, 143, 149, 154, 156, 160, 163, 164, 165, 173, 174, 178, 179, 180, 189, 196, 201], "coremltool": 179, "corg": 54, "cori": [48, 53, 75, 78], "cornel": [129, 196], "corner": [129, 151], "cornic": 129, "corpdev": 132, "corphish": 167, "corpor": 134, "corr": [156, 202], "corr_func": 200, "corrcoef": 149, "corrctli": [17, 18], "correct": [6, 8, 15, 16, 17, 18, 19, 20, 45, 49, 54, 71, 78, 81, 99, 118, 129, 132, 139, 153, 157, 158, 172, 173, 177, 178, 179, 187, 189, 195, 201], "correctli": [1, 5, 15, 16, 17, 18, 19, 20, 48, 73, 117, 172, 173, 177, 178, 179, 200], "correl": [1, 131, 149, 156, 187, 190, 191, 193, 198, 200, 201, 203], "correspond": [1, 8, 12, 32, 33, 56, 66, 71, 73, 81, 97, 99, 103, 107, 117, 134, 151, 190, 193, 196, 197, 198, 199, 201], "correspondingli": 129, "corridor": 129, "corrupt": [12, 14], "corsola": 167, "cosh": [81, 83], "cosin": [28, 81, 83, 149, 178], "cosine_dist": 31, "coss": 31, "cost": [12, 13, 14, 15, 16, 17, 18, 19, 20, 129, 131, 132, 136, 137, 140, 142, 143, 170, 172, 173, 176, 177, 178, 179], "cost_histori": [12, 13, 14], "cottone": 167, "couch": 174, "could": [8, 9, 25, 35, 50, 53, 69, 72, 84, 86, 97, 102, 107, 117, 118, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 143, 144, 152, 153, 160, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 187, 188, 193, 194, 196, 197, 199], "couldn": [0, 107, 129, 132, 170, 174, 176, 177, 178, 179, 191], "council": 144, "counsel": 144, "count": [8, 9, 40, 48, 49, 50, 53, 55, 89, 103, 107, 118, 129, 132, 136, 137, 139, 141, 143, 146, 156, 167, 170, 174, 178, 179, 185, 190, 193, 196, 199, 201, 204], "counter": [48, 49, 103], "counterbalanc": 129, "counterintuit": [36, 132], "counterpart": [36, 53, 83, 170], "counti": 71, "countless": 139, "countplot": [193, 196, 197], "countri": [5, 10, 12, 14, 38, 41, 48, 53, 69, 71, 72, 91, 102, 118, 129, 139, 144, 146, 190, 199], "countries_to_look_at": 146, "country_lst_on": 72, "country_lst_two": 72, "coupl": [5, 6, 118, 129, 142, 144, 172, 173, 174, 177, 178, 179, 188, 194, 195, 196, 197], "cours": [0, 24, 25, 75, 81, 129, 132, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 185, 187, 189, 190, 191, 193, 194, 195, 197, 199], "course_nam": 75, "coursera": [0, 2, 4, 5, 6, 8, 10], "cous": [12, 13, 14], "cov": [189, 200], "covari": 189, "cover": [37, 38, 40, 69, 117, 118, 126, 129, 131, 142, 156, 157, 158, 162, 163, 165, 185, 187, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 208], "coverd": 172, "coverg": 189, "covert": 99, "cow": 178, "cowork": 129, "cp1252": 69, "cplai": 25, "cpu": [129, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "cpu_count": [174, 175, 179, 181], "crack": 129, "cradili": 167, "craft": [139, 176, 177, 179, 193], "cram": 200, "cramer": 32, "cranido": 167, "crank": 129, "crap": 129, "crash": [72, 179], "crawdaunt": 167, "crawl": 129, "crazi": [117, 144, 170, 178], "cream": 136, "creat": [0, 1, 9, 12, 18, 20, 25, 26, 35, 37, 38, 39, 40, 48, 49, 52, 60, 62, 63, 64, 65, 69, 70, 71, 72, 75, 76, 77, 79, 85, 86, 88, 89, 91, 92, 93, 97, 99, 102, 104, 105, 107, 112, 117, 118, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 143, 144, 149, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 168, 183, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "create_dataload": [175, 176, 177, 178, 179, 181], "create_docu": [117, 118, 131, 142, 143, 144], "create_effnetb0": 177, "create_effnetb2": 177, "create_effnetb2_model": 179, "create_extraction_chain": [137, 142], "create_extraction_chain_pydant": 136, "create_output": 129, "create_structured_output_chain": 117, "create_vit_model": 179, "create_writ": 177, "creation": [69, 117, 139, 150, 172, 174, 175, 178, 179, 208], "creativ": [128, 130, 134, 140, 143, 172, 177], "creator": [107, 174], "credenti": 139, "credit": [25, 118, 129, 172, 186], "cresselia": 167, "cript": 69, "crisi": 142, "crisp": 129, "crispi": 130, "cristiano": 146, "criteria": [1, 37, 38, 144, 179], "criterion": [172, 173, 178], "critic": [72, 131, 199, 200], "crm": [117, 136, 137], "croagunk": 167, "crobat": 167, "croconaw": 167, "crop": 174, "crop_siz": [176, 177, 178, 179], "cross": [8, 79, 129, 171, 172, 199, 201], "crossentropi": 172, "crossentropyloss": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "crowd": 129, "crucial": [132, 139], "cruis": 137, "crush": 129, "crust": 126, "crustl": 167, "cruz": 129, "cryogon": 167, "crystal": 129, "crystallin": 129, "csjfqsk97xz704h7v3fzjqph0000gn": [127, 129], "css": [53, 102], "css4": 188, "csv": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 118, 134, 146, 147, 157, 164, 165, 166, 167, 177, 185, 190, 196, 197, 199, 201], "csv_exampl": 69, "csv_reader": 69, "ctitl": 31, "ctrl": [25, 49, 71], "cu102": 178, "cu113": [171, 174, 176, 177, 179], "cu116": 170, "cu118": [173, 178], "cub": 118, "cubchoo": 167, "cube": [37, 49, 58, 78, 80, 95, 129], "cubehelix": 191, "cubehelix_palett": 188, "cubehelix_r": 191, "cubic": 5, "cubon": 167, "cuda": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "cue": 129, "cuisin": [117, 130], "cultur": [126, 129, 137, 142], "cum": 53, "cumbersom": 189, "cumhuriyeti": 118, "cumsum": [149, 154], "cumul": [1, 149], "cup": [117, 197], "curat": [1, 117, 118, 178, 189], "curios": 129, "curiou": [129, 144, 178, 189], "curious": [0, 201], "curl": 129, "curli": [40, 53, 56, 57, 95], "currect": 118, "currenc": 118, "current": [0, 1, 4, 5, 6, 12, 13, 14, 19, 20, 23, 37, 48, 49, 50, 61, 65, 66, 67, 68, 69, 72, 77, 81, 82, 85, 97, 102, 103, 104, 117, 118, 126, 129, 138, 139, 140, 142, 143, 165, 166, 171, 172, 173, 174, 176, 177, 178, 179, 187, 188, 189, 191, 193, 201], "current_datetime_hostnam": 177, "current_examples_indic": 11, "current_file_nam": 70, "current_palett": 188, "current_salari": 91, "current_tim": 64, "current_year": [75, 78], "current_year_2021": 91, "curri": 102, "curriculum": [171, 173, 179], "cursor": [69, 139, 143], "curtain": 201, "curv": [12, 13, 14, 15, 16, 17, 18, 171, 177, 190, 196], "custom": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 45, 81, 85, 117, 118, 121, 126, 129, 131, 136, 137, 139, 143, 145, 157, 171, 172, 173, 175, 179, 180, 186, 187, 188, 189, 191, 193, 194, 196, 197, 198, 199, 200, 201], "custom_imag": 174, "custom_image_path": [174, 176, 177, 178], "custom_image_pr": 174, "custom_image_pred_class": 174, "custom_image_pred_label": 174, "custom_image_pred_prob": 174, "custom_image_transform": 174, "custom_image_transformed_with_batch_s": 174, "custom_image_uint8": 174, "custom_lin": [26, 112], "customari": 129, "customerror": 73, "customis": [176, 177], "customiz": [140, 176, 179, 186, 199, 201], "cut": [10, 17, 18, 19, 20, 129, 131, 144, 172, 195, 196, 198], "cute": 144, "cyan": 188, "cycl": [129, 188, 191], "cycler": [26, 112], "cylind": [156, 157, 168], "cym": 118, "cyndaquil": 167, "cython": 194, "d": [1, 4, 31, 46, 48, 50, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 72, 75, 92, 93, 95, 103, 104, 105, 118, 127, 129, 131, 132, 136, 137, 138, 139, 140, 142, 144, 147, 150, 153, 156, 161, 162, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 190, 194, 196, 200, 202], "d1": [63, 104], "d2": 63, "d3": 63, "d4": 63, "d75c9779269a": 73, "d7cfabc8": 132, "d9e056c8": 132, "d_model": 178, "da": [31, 118, 197], "daaaat": 40, "daaat": 40, "daat": 40, "dad": [174, 176, 177, 178, 179], "daddi": 133, "dai": [0, 24, 40, 52, 53, 61, 62, 63, 64, 65, 66, 75, 77, 117, 128, 129, 139, 142, 144, 170, 176, 177, 178, 179, 186, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 201], "daili": [136, 137, 189], "dam": 129, "damn": 118, "dan": 129, "danc": [102, 118, 129, 142, 178], "dandelion": 129, "danger": [129, 130, 132], "daniel": [129, 170, 171], "dar": 126, "dark": [117, 129, 167, 173, 186, 188, 191, 197], "dark2": 191, "dark2_r": 191, "darken": 129, "darkest": 129, "darkgrid": [186, 193, 195, 196, 199], "darkrai": 167, "darmanitanstandard": 167, "darmanitanzen": 167, "darumaka": 167, "dash": 192, "dashboard": [193, 194], "dat": 40, "data": [0, 1, 5, 6, 8, 10, 25, 26, 35, 36, 37, 40, 41, 48, 49, 53, 54, 55, 56, 57, 62, 69, 70, 72, 75, 78, 81, 85, 91, 92, 94, 95, 96, 99, 102, 104, 112, 116, 117, 121, 126, 127, 128, 129, 130, 131, 132, 134, 135, 138, 139, 140, 141, 149, 151, 152, 159, 160, 161, 162, 163, 164, 166, 169, 183, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204], "data1": [54, 156, 190], "data2": 190, "data_1": [69, 70], "data_10_perc": 177, "data_10_percent_path": 177, "data_20_perc": 177, "data_20_percent_path": [177, 179], "data_analysi": 197, "data_compli": [136, 137], "data_dir": 179, "data_fold": 174, "data_folder_1": 181, "data_folder_2": 181, "data_load": [173, 174], "data_path": [174, 175, 176, 177, 180, 181], "data_point": 192, "data_setup": [176, 177, 178, 179, 180, 181, 183], "data_str": 62, "data_transform": [174, 175, 180, 181], "data_typ": 157, "databas": [65, 69, 117, 118, 126, 156, 179], "datafam": 158, "datafram": [12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 118, 134, 146, 150, 167, 168, 169, 172, 173, 174, 177, 179, 185, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "dataindepend": [127, 142, 144], "dataload": 171, "dataloader_nam": 177, "datalod": 177, "datapoint": [174, 180, 181, 187, 188, 193, 196, 198, 199, 201], "datasci": 76, "dataseri": 156, "dataset": [0, 1, 9, 11, 12, 13, 14, 16, 118, 121, 145, 146, 153, 156, 159, 160, 161, 162, 163, 164, 166, 167, 171, 172, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 201, 202, 203, 204], "datatyp": [23, 53, 55, 83, 93, 94, 101, 156, 157, 171, 174, 176, 201], "date": [12, 62, 64, 117, 118, 127, 156, 176, 177, 185, 189, 191, 199, 201], "date_object": [60, 62], "date_rang": 156, "date_str": [60, 62], "date_tim": 61, "date_time1": 61, "date_time2": 61, "dateclass": 60, "datetim": [23, 63, 68, 81, 136, 137, 156, 177], "datetime64": 154, "datetime_capi": 60, "datetime_london": [60, 64], "datetime_ni": [60, 64], "datetime_object": 60, "datetimeindex": 156, "daughter": 102, "dave": 98, "david": [78, 95, 140], "daviddeutschoxf": 139, "davinci": [117, 118], "dawn": 129, "dazzl": 129, "db": [31, 117, 118], "db_chain": 118, "dbb7": 132, "dbt": 143, "dct": 72, "dd": [60, 62, 63, 177], "dd6f749658a4": 39, "ddot": 32, "de": [28, 40, 118, 129, 146], "dead": [129, 132], "deadlin": 129, "deal": [27, 39, 50, 52, 53, 69, 94, 129, 132, 140, 142, 144, 153, 156, 170, 171, 172, 173, 178, 179, 185, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201], "dealer": 129, "dealt": [185, 189, 193], "dear": 140, "death": 129, "debat": [118, 173, 175, 179], "debug": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 71, 79, 86, 90, 137, 179], "debut": 117, "dec": [25, 38, 61, 62, 66, 88, 140], "decad": [129, 130, 139], "decai": [174, 178], "decemb": 65, "decend": 167, "decent": [129, 193, 196, 197], "decept": 195, "decid": [1, 5, 6, 9, 12, 14, 39, 43, 56, 117, 118, 129, 132, 138, 163, 170, 172, 174, 179, 189, 190, 195, 196, 197, 199, 201], "decim": [39, 53, 61, 62, 85, 91, 92, 93, 96, 150, 177, 179], "decis": [1, 10, 47, 117, 118, 144, 172, 177], "deck": [144, 195, 197, 201], "declar": [37, 49, 69, 71, 73, 75, 76, 77, 97, 102, 103, 107, 150, 189, 197, 199, 200, 201], "decliv": 129, "decod": [53, 71, 129], "decompos": [28, 86], "decomposit": [27, 152], "decor": [23, 37, 42, 107, 199, 201], "decorator_with_paramet": 38, "decreas": [8, 12, 13, 14, 15, 16, 17, 18, 49, 79, 174, 185, 188, 190, 195], "decrement": 105, "dedenn": 167, "dedic": [3, 129, 139, 140, 175, 181, 183, 201], "deduc": [189, 196], "dedupl": 142, "deel": 143, "deem": 133, "deep": [8, 27, 50, 118, 129, 138, 149, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 208], "deepak": 81, "deeper": [60, 118, 171, 172, 178, 185, 189, 191, 196, 198, 199, 201], "deeplak": [117, 131, 132], "deepli": [50, 129, 189], "deerl": 167, "def": [31, 35, 36, 37, 38, 39, 41, 45, 46, 47, 50, 58, 67, 72, 73, 75, 76, 77, 78, 79, 80, 81, 85, 86, 89, 90, 92, 95, 97, 102, 103, 104, 105, 107, 118, 127, 128, 129, 136, 137, 138, 139, 140, 141, 143, 163, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 189, 191, 193, 194, 200, 201], "default": [7, 9, 11, 17, 18, 19, 20, 37, 40, 48, 53, 55, 60, 69, 75, 77, 79, 81, 83, 85, 88, 103, 104, 110, 117, 118, 129, 132, 133, 144, 146, 149, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 186, 188, 189, 191, 192, 195, 196, 198, 199, 201, 202, 206], "default_ord": 53, "default_tim": [173, 174, 176, 179, 180, 181], "default_valu": 156, "defect": 173, "defens": [143, 167], "defer": 165, "defin": [1, 5, 6, 7, 19, 20, 23, 28, 32, 35, 36, 38, 39, 40, 41, 48, 49, 52, 53, 54, 55, 56, 58, 60, 66, 71, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 90, 91, 92, 93, 95, 97, 102, 104, 105, 110, 117, 118, 129, 131, 132, 135, 138, 153, 156, 160, 164, 171, 172, 173, 174, 176, 177, 178, 179, 186, 187, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206], "definit": [25, 33, 38, 48, 75, 78, 80, 81, 85, 90, 95, 102, 103, 104, 107, 129, 131, 136, 137, 142, 178], "defint": [172, 178, 179], "deflat": 179, "degrad": [107, 176, 177], "degre": [5, 12, 13, 14, 15, 16, 17, 18, 39, 81, 83, 117, 129], "dei": 178, "deino": 167, "del": [37, 53, 54, 55, 56, 89, 103], "delai": [66, 67, 129, 179, 187, 193], "delattr": 103, "delcatti": 167, "deleg": 104, "delelop": 25, "delet": [37, 39, 56, 70, 71, 90, 132, 142, 149, 156, 162, 165, 174], "delete_al": 142, "delete_collect": 132, "deliber": 71, "delibird": 167, "delici": [117, 130, 139, 179], "delight": [129, 139], "delimit": [69, 131, 153, 156, 167], "deliv": [140, 170], "delphox": 167, "delta": 178, "delv": [1, 186, 187, 190, 191], "demand": [36, 130, 131, 186], "demo": [3, 9, 10, 117, 129, 139, 144, 174, 178, 191], "demonstr": [35, 54, 104, 118, 158, 171, 175, 178, 181, 190, 193, 200, 201], "demonym": 118, "demor": 129, "den": 31, "deni": 46, "denim": [188, 194], "denmark": [12, 14, 72, 190], "denomin": 52, "denot": [29, 30, 39, 41, 53, 78, 79, 93, 102, 170], "dens": [132, 178], "densii": 196, "densiti": [9, 132, 187, 188, 190, 191, 192, 194, 196, 199], "deoxysattack": 167, "deoxysdefens": 167, "deoxysnorm": 167, "deoxysspe": 167, "depart": [103, 129, 136, 137, 199], "depat": 103, "depend": [1, 5, 6, 25, 28, 37, 43, 50, 69, 73, 81, 82, 105, 109, 113, 117, 129, 131, 132, 135, 136, 137, 142, 149, 156, 171, 172, 173, 174, 175, 176, 177, 179, 181, 185, 187, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201], "depict": [188, 193, 195, 199], "deploi": [128, 143, 170, 177, 178], "deploy": [178, 184, 208], "deposit": 129, "deprec": [118, 132, 164, 168, 170, 176, 177, 187, 192, 194], "deprecation_addendum": 194, "depress": 129, "depth": [79, 91, 104, 129, 174, 177, 185, 189, 190, 193], "deriv": [5, 6, 8, 72, 73, 102, 104, 107, 118, 129, 132, 199], "derived1": 104, "derived2": 104, "derivedclass": [102, 104], "desc": 173, "descend": 156, "descent": [8, 19, 20, 129, 171, 172, 173, 174, 178], "describ": [5, 6, 8, 15, 16, 17, 18, 32, 75, 78, 81, 96, 117, 118, 129, 131, 132, 137, 142, 144, 156, 170, 171, 172, 173, 178, 179, 185, 190, 195, 197, 198, 199, 200, 201], "describejob": [136, 137], "descript": [50, 53, 54, 55, 56, 57, 69, 75, 81, 82, 83, 85, 102, 103, 117, 118, 126, 127, 129, 131, 132, 134, 136, 137, 138, 140, 149, 156, 163, 170, 177, 178, 179, 185, 195, 199], "descriptor": [69, 85], "deseri": 171, "deserv": 196, "desgin": 92, "design": [0, 25, 38, 117, 118, 129, 134, 137, 140, 156, 172, 177, 178, 179, 189, 197, 198], "desir": [38, 50, 54, 117, 129, 139, 153, 170, 173, 174, 178, 179, 201, 208], "desk": [25, 129], "desktop": [25, 70, 129], "desper": [129, 143], "despin": [186, 196, 197, 198, 200, 201], "despit": [117, 129, 142, 174, 178, 179], "destin": [138, 177, 178, 179], "destination_path": 138, "destini": 129, "destroi": [36, 76, 103, 129, 132, 142], "destruct": [103, 129], "destructur": 72, "det": [32, 152], "detach": [69, 171, 178], "detail": [1, 7, 36, 39, 66, 71, 78, 95, 102, 103, 104, 110, 117, 129, 138, 142, 151, 156, 158, 160, 165, 166, 170, 177, 178, 179, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 201, 205, 206], "detect": [1, 3, 5, 6, 19, 20, 71, 142, 151, 173, 179, 188, 208], "determin": [1, 57, 126, 129, 132, 161, 162, 166, 189, 190, 191, 193, 195, 197, 199, 200, 201], "determinist": [82, 118], "detour": 117, "deu": 118, "dev": [175, 177], "dev20220620": [176, 177], "dev20220824": 179, "devcon": 170, "develop": [0, 11, 15, 23, 25, 73, 84, 91, 99, 107, 117, 118, 119, 129, 131, 132, 135, 136, 137, 139, 140, 143, 170, 175, 176, 177, 179], "deviat": [2, 9, 149, 153, 156, 176, 178, 195, 197], "devic": [0, 95, 99, 136, 137, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181], "device_count": 170, "devop": [140, 179], "dewgong": 167, "dewott": 167, "df": [118, 134, 146, 147, 156, 160, 163, 164, 165, 166, 167, 168, 179, 185, 187, 189, 191, 194, 196, 199, 201, 202], "df1": [156, 190], "df2": [156, 190], "df6ce7ede1dc": 71, "df_compani": 140, "df_xlsx": 167, "dfca0b041b3d": 73, "dharmesh": 139, "dhl": 53, "di": [40, 48, 117, 118, 129], "diag": [154, 200], "diag_ax": 200, "diag_indic": 200, "diag_kind": [191, 200], "diag_kw": 191, "diag_sharei": 200, "diagnol": 172, "diagnost": 118, "diagon": [32, 173, 191, 200], "diagram": [97, 159, 163, 166, 178, 192], "dial": 128, "dialect": [129, 135], "dialga": 167, "dialogu": [48, 139], "diamet": [83, 129], "dianci": 167, "dianciemega": 167, "dice": [117, 130], "dichotom": [6, 15, 16, 17, 18], "dict": [25, 41, 57, 69, 72, 75, 81, 92, 93, 94, 103, 118, 129, 141, 146, 158, 159, 160, 161, 162, 163, 165, 166, 168, 171, 173, 174, 175, 177, 179, 180, 181, 187, 196, 201, 203], "dict1": [48, 56], "dict2": 48, "dict_1": 103, "dict_item": 56, "dict_kei": [56, 174], "dict_valu": 56, "dictat": 170, "diction": 139, "dictionair": 179, "dictionari": [23, 25, 38, 39, 41, 53, 54, 55, 57, 59, 71, 75, 85, 90, 92, 94, 96, 103, 118, 136, 137, 139, 141, 143, 156, 158, 163, 168, 171, 173, 174, 175, 177, 178, 179, 180, 181, 186, 188, 201], "dictionaryliter": 90, "did": [0, 36, 38, 44, 71, 72, 76, 95, 96, 102, 104, 117, 129, 131, 132, 135, 142, 143, 144, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 199], "didn": [0, 53, 102, 105, 117, 118, 129, 132, 133, 170, 172, 173, 174, 179, 186, 195, 196, 201], "die": [132, 201], "diet": [198, 199], "diff": [12, 14, 64], "differ": [0, 8, 9, 12, 19, 20, 37, 38, 40, 41, 43, 48, 49, 50, 52, 53, 54, 55, 56, 61, 65, 66, 67, 69, 70, 71, 72, 75, 76, 78, 80, 81, 84, 86, 91, 92, 93, 94, 95, 96, 97, 102, 103, 104, 105, 107, 109, 113, 117, 118, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 151, 152, 156, 157, 158, 161, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "difference_upd": 57, "differenti": [89, 139], "differnt": 176, "difficult": [0, 99, 118, 129, 186, 193, 194, 195, 196, 197], "difficulti": [129, 131, 170], "dig": [60, 170, 199, 201], "digest": 118, "diggersbi": 167, "digit": [6, 8, 17, 18, 19, 20, 29, 30, 48, 53, 62, 81, 85, 89, 91, 96, 102, 136, 137, 153, 173, 199], "digit_label": [17, 18, 19, 20], "digit_pixel": [17, 18, 19, 20], "diglett": 167, "dilat": [173, 174, 180, 181], "dilig": [0, 129, 130], "dim": [170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181], "dim0": 170, "dim1": 170, "dim_feedforward": 178, "dimenion": 170, "dimens": [131, 149, 150, 151, 152, 156, 170, 171, 172, 173, 174, 176, 178, 179, 189, 200, 201], "dimension": [1, 4, 27, 48, 58, 131, 149, 150, 156, 158, 170, 173, 174, 176, 178, 189, 200, 201, 208], "diner": 129, "dinner": [75, 129, 189, 192, 193, 194, 195, 196, 197, 201], "dip": 130, "diploma": 129, "dir": [40, 60, 71, 176, 177], "dir_nam": 70, "dir_path": 174, "dir_with_log": 177, "direct": [5, 6, 7, 10, 18, 20, 21, 33, 49, 53, 58, 60, 61, 62, 66, 80, 102, 110, 117, 127, 132, 170, 176, 178, 197, 206], "direction": 131, "directli": [25, 36, 54, 73, 75, 81, 84, 97, 99, 102, 103, 118, 132, 142, 152, 172, 174, 175, 178, 179, 181, 186, 192, 198, 199], "directori": [23, 69, 71, 74, 81, 84, 95, 118, 140, 171, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183], "directory_nam": 81, "directoryload": [132, 135, 141], "dirichlet": 199, "dirnam": [118, 174], "dirpath": [118, 174], "dirti": 118, "disadvantag": [99, 144, 171, 196], "disagre": 52, "disallowed_speci": 118, "disappear": 129, "disappoint": 129, "disast": 131, "disastr": 129, "disc": 117, "discard": 57, "discern": 174, "disclosur": 201, "disconcertingli": 129, "disconnect": 72, "discontinu": 28, "discord": [117, 118], "discourag": [107, 129], "discours": 201, "discov": [1, 129, 131, 132, 135, 170, 171, 172], "discoverd": 171, "discovered": 129, "discoveri": 117, "discret": [133, 188, 189, 196, 197, 199, 201], "discrimin": [11, 15], "discuss": [40, 45, 52, 53, 55, 81, 86, 90, 95, 104, 131, 139, 140, 142, 144, 156, 157, 158, 159, 160, 165, 166, 172, 174, 175, 176, 178, 179, 180, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "diseas": 172, "disengag": 199, "dish": [117, 130], "disk": [69, 99, 128, 129, 171, 173], "dislik": [118, 129], "dismai": 129, "disp": 170, "dispar": 199, "dispers": [185, 195], "displai": [2, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 45, 46, 47, 48, 49, 50, 53, 60, 70, 72, 73, 85, 88, 99, 103, 104, 110, 118, 142, 144, 146, 153, 159, 179, 186, 188, 190, 193, 194, 195, 196, 197, 199, 200, 201, 202, 206], "display_random_imag": 174, "display_shap": 174, "displaystyl": [28, 31], "displot": 192, "dispos": 199, "dispsid": 104, "disput": [129, 131], "disregard": [50, 173], "disrupt": 72, "dissatisfi": 129, "dissert": 129, "dissimilarity__util": 31, "dist": [81, 173, 204], "distac": 48, "distanc": [48, 107, 131, 135, 195, 196], "distant": 129, "distil": [131, 132], "distinct": [1, 118, 129, 151, 199], "distinguish": [8, 11, 15, 16, 19, 20, 57, 69, 107, 135, 188], "distort": 199, "distplot": [187, 200], "distract": [129, 132], "distribut": [16, 23, 82, 129, 131, 146, 149, 150, 153, 176, 177, 178, 185, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201], "district": 129, "distriut": 195, "ditribut": 190, "ditto": [132, 167], "div": [136, 137], "dive": [118, 129, 138, 171, 185, 189, 195, 197, 198, 201], "diverg": 188, "divers": [131, 174, 179], "divid": [38, 43, 49, 60, 71, 81, 83, 84, 86, 95, 96, 149, 152, 154, 156, 157, 160, 172, 173, 174, 179, 193, 195, 197, 198, 199], "dividend": [78, 118], "divis": [32, 33, 38, 43, 49, 50, 58, 71, 72, 75, 96, 105, 149, 152, 170, 178, 179], "divisbl": 178, "divisor": 78, "divorc": 129, "django": 25, "dll": 81, "dm": [136, 137, 144], "do": [5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 35, 36, 39, 40, 43, 44, 45, 48, 49, 50, 53, 54, 57, 58, 64, 71, 72, 73, 75, 78, 81, 82, 83, 85, 86, 90, 91, 93, 95, 96, 97, 99, 102, 103, 104, 105, 107, 109, 112, 113, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "do_someth": 78, "doattempt": 129, "doc": [39, 75, 85, 117, 118, 127, 129, 131, 132, 138, 140, 141, 142, 143, 152, 171, 173], "doc_id": 132, "doc_summari": 129, "docker": 137, "docsearch": [118, 133, 135, 142], "docstor": [118, 132], "docstr": [23, 53, 87, 103, 175, 180, 181], "doctor": 40, "document": [7, 26, 69, 75, 85, 90, 102, 103, 110, 112, 113, 126, 130, 131, 135, 138, 140, 141, 142, 143, 144, 150, 151, 152, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 186, 189, 195, 205, 206], "document_compressor": 132, "document_content_descript": 132, "document_load": [117, 118, 129, 131, 132, 133, 135, 140, 141, 143], "documentari": 129, "dodg": [168, 193, 194, 195, 196, 197, 198, 199], "dodrio": 167, "doduo": 167, "doe": [5, 12, 14, 36, 38, 39, 40, 44, 48, 49, 50, 53, 54, 55, 57, 58, 62, 69, 71, 72, 75, 76, 78, 81, 83, 85, 91, 93, 96, 97, 99, 102, 103, 104, 105, 117, 118, 129, 131, 132, 138, 140, 142, 143, 144, 150, 152, 156, 159, 160, 161, 162, 163, 165, 166, 170, 171, 172, 176, 177, 178, 179, 188, 189, 191, 193, 194, 196, 201], "does_exist": 54, "doesn": [11, 39, 48, 49, 50, 53, 55, 56, 62, 78, 81, 103, 129, 131, 132, 136, 137, 138, 143, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 194, 196, 197, 201], "dog": [55, 104, 129, 130, 137, 144, 172, 173, 176, 178, 179], "dohc": [156, 157, 168], "dollar": [26, 112, 129, 144, 146, 147, 177], "domain": [1, 25, 127, 129, 142, 172, 174, 176, 187, 189, 194, 197, 199, 201], "dominantli": 189, "don": [0, 8, 11, 39, 49, 50, 54, 58, 69, 75, 77, 81, 84, 91, 102, 104, 107, 117, 118, 128, 129, 131, 132, 133, 135, 138, 139, 140, 142, 143, 144, 156, 163, 165, 166, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 190, 192, 194, 195, 196, 197, 199, 200, 201], "done": [25, 32, 33, 36, 38, 39, 44, 45, 48, 49, 50, 53, 58, 69, 84, 88, 94, 95, 99, 104, 107, 129, 131, 132, 133, 138, 139, 140, 144, 157, 161, 164, 170, 171, 172, 173, 174, 177, 178, 179, 183, 186, 187, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201], "dong": [5, 6], "donotpai": 142, "donphan": 167, "door": [1, 103, 129], "doshi": 140, "dot": [24, 27, 29, 32, 81, 84, 102, 103, 146, 147, 149, 152, 170, 171, 172, 174, 179, 190, 193, 194, 195, 196, 197, 199], "dotenv": [117, 118, 128, 130, 131, 132, 133, 136, 138, 139, 141, 142, 143], "doubl": [41, 53, 75, 80, 90, 92, 93, 96, 102, 103, 104, 105, 117, 129, 139, 142, 170, 176, 177, 178, 179, 186], "doublad": 167, "doubt": [0, 129, 132, 142, 173, 190, 193, 194, 195], "down": [0, 5, 6, 39, 50, 79, 81, 96, 118, 129, 132, 136, 137, 142, 144, 171, 172, 173, 174, 177, 178, 179, 180, 185, 186, 188, 190, 200, 201], "download": [25, 81, 118, 135, 146, 147, 153, 172, 173, 174, 175, 176, 178, 180, 181, 183], "download_data": [177, 178, 179], "downsid": [174, 197], "downtown": 56, "dozen": [173, 177], "dpi": [146, 147], "dr": [0, 69, 81, 102, 117], "draft": [127, 129, 196, 197, 198, 199, 200, 201], "drag": [129, 193], "dragalg": 167, "dragon": 167, "dragonair": 167, "dragonit": 167, "drain": 117, "dramat": [170, 179], "drapion": 167, "dratini": 167, "drave": 129, "draw": [9, 17, 18, 129, 170, 172, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 201], "draw_fram": 197, "draw_stripplot": 194, "drawn": [107, 129, 191, 194, 195, 199, 201], "dream": 129, "dress": [8, 18, 20, 130, 173], "drifblim": 167, "drifloon": 167, "drift": 129, "drilbur": 167, "drill": [188, 189], "drive": [0, 1, 45, 117, 129, 137, 139, 143, 170, 176, 178], "driven": [129, 143], "driver": [78, 117, 129, 170, 179, 199], "drop": [10, 12, 14, 17, 18, 19, 20, 36, 129, 139, 143, 144, 165, 166, 167, 188, 189, 201], "drop_dupl": [162, 166], "drope": 160, "droplet": 129, "dropna": [156, 166, 187, 189, 191, 200, 201], "dropoff_datetim": 199, "dropoff_latitud": 199, "dropoff_longitud": 199, "dropout": [174, 176, 177, 178, 179], "dropout1": 178, "dropout2": 178, "drowze": 167, "druddigon": 167, "dry": [75, 102, 129], "dst": 179, "dt": [28, 31], "dt_object": 65, "dt_object1": 62, "dt_object2": 62, "dt_string": [62, 63], "dtype": [19, 20, 146, 149, 150, 152, 153, 156, 157, 158, 164, 165, 167, 168, 170, 171, 172, 174, 179, 190, 191, 200], "duc": 40, "ducklett": 167, "due": [28, 39, 41, 50, 52, 54, 69, 72, 97, 99, 118, 129, 130, 131, 132, 142, 152, 171, 173, 174, 177, 178, 179, 181, 193], "dugtrio": 167, "duh": 139, "dull": [129, 186], "dummi": [138, 181, 190, 197, 201], "dump": [69, 85, 127, 136, 137, 138], "dunsparc": 167, "duo": 117, "duomo": 129, "duosion": 167, "duplic": [48, 57, 81, 93, 97, 132, 136, 137, 156, 160, 166], "durant": 167, "durat": 199, "dure": [0, 25, 58, 71, 72, 78, 80, 81, 99, 107, 129, 132, 142, 143, 171, 172, 174, 176, 177, 178, 179, 186, 189, 193, 198], "dusclop": 167, "duski": 188, "dusknoir": 167, "duskul": 167, "dust": 129, "dusti": 188, "dustox": 167, "duti": [126, 185], "dwebbl": 167, "dwell": 129, "dweller": 129, "dylan": 129, "dynam": [93, 97, 99, 117, 127, 131, 142, 144], "dynamicfeatur": 90, "dystopia": [12, 14], "e": [4, 5, 6, 8, 12, 13, 14, 24, 25, 31, 36, 40, 48, 49, 50, 52, 53, 54, 55, 56, 57, 69, 70, 72, 76, 77, 81, 83, 91, 92, 94, 95, 96, 102, 104, 117, 118, 127, 129, 133, 138, 147, 150, 152, 153, 156, 157, 158, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "e0e0e0": 146, "e15e5601926f": 107, "e2e604bf92d": 71, "e32e417070a1": 93, "e53a": 132, "e8fb9ed4ccdc": 199, "each": [1, 2, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 35, 36, 38, 45, 46, 48, 49, 50, 53, 54, 55, 56, 57, 72, 75, 79, 80, 81, 85, 90, 91, 92, 93, 94, 95, 97, 99, 102, 103, 104, 107, 118, 127, 129, 130, 131, 132, 133, 139, 140, 141, 142, 144, 149, 150, 151, 152, 156, 157, 158, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 208], "eachoth": 178, "eager": 0, "ear": [129, 132], "earli": [24, 129, 132, 174], "earlier": [132, 170, 171, 177, 179, 185, 186, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "earliest": 142, "earn": [118, 129, 142], "earnest": 129, "earplug": 132, "earth": [75, 129], "eas": [129, 179], "easi": [0, 23, 25, 35, 48, 49, 53, 69, 84, 86, 88, 99, 102, 117, 118, 129, 132, 133, 139, 142, 143, 144, 156, 157, 170, 175, 177, 178, 179, 186, 191, 193, 195, 197, 199, 201], "easier": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 35, 39, 40, 58, 79, 84, 89, 95, 99, 107, 117, 118, 131, 140, 144, 158, 172, 173, 175, 178, 193, 198, 200], "easiest": [129, 176, 179], "easili": [29, 30, 36, 60, 65, 85, 104, 117, 129, 140, 142, 143, 160, 174, 177, 178, 179, 186, 190, 193, 201], "east": 129, "east1": 133, "eastern": 129, "eat": [88, 104, 117, 129, 132, 139, 176, 178, 179], "eaten": [129, 132], "eaxh": 12, "ec3d": 132, "ecc": 170, "eccentr": 132, "echo": 0, "ecommerc": [129, 137], "econom": 139, "economi": [5, 12, 14], "ecosystem": [21, 109, 113, 143, 179], "ecu": 118, "ed": 48, "ed7c4dc05b92": 76, "edg": [1, 8, 129, 135, 136, 137, 147, 179, 187, 196, 197, 200], "edgecolor": [187, 193, 194, 197, 200, 201], "edit": [117, 129, 131, 132, 139, 178, 179], "edit_financial_forecast": 138, "editor": [46, 129, 186], "edu": 10, "educ": [40, 134, 139, 177, 178, 193, 199], "education_level": 196, "edward": 200, "ee": 40, "ee4e8ee8c904": 71, "ee80ca1a52c8": 92, "eec": 140, "eelektrik": 167, "eelektross": 167, "eeve": 167, "effect": [53, 69, 77, 81, 102, 129, 138, 140, 173, 174, 176, 178, 179, 188, 190, 193, 197], "effici": [39, 48, 49, 52, 69, 75, 81, 84, 97, 99, 102, 140, 149, 156, 158, 173, 187, 194, 199], "efficientnet": 176, "efficientnet_b0": [176, 177], "efficientnet_b0_weight": [176, 177], "efficientnet_b1": 176, "efficientnet_b2": [176, 177, 179], "efficientnet_b2_weight": [177, 179], "efficientnet_b7": 176, "efficientnet_bx": 176, "efficientnetb0": 177, "efficientnetb2": [177, 179], "effnetb0": 177, "effnetb2": [177, 178], "effnetb2_average_time_per_pr": 179, "effnetb2_food101": 179, "effnetb2_food101_model_path": 179, "effnetb2_food101_result": 179, "effnetb2_foodvision_mini_model_destin": 179, "effnetb2_foodvision_mini_model_path": 179, "effnetb2_model_s": 177, "effnetb2_result": 179, "effnetb2_stat": 179, "effnetb2_test_pred_df": 179, "effnetb2_test_pred_dict": 179, "effnetb2_total_param": 179, "effnetb2_transform": 179, "effnetb2_weight": [177, 179], "effort": [0, 129, 178, 179, 200], "eg": [40, 91, 99], "egg": [81, 117, 130], "egregi": 129, "eh": 82, "eigenvalu": [27, 152], "eigenvector": 27, "eight": [129, 142, 168, 177], "eighti": 40, "einstein": 40, "either": [40, 43, 44, 46, 66, 72, 73, 85, 90, 96, 99, 104, 117, 126, 129, 132, 139, 156, 157, 163, 170, 171, 172, 173, 174, 175, 180, 181, 185, 186, 188, 189, 192, 193, 195, 196, 197, 199, 200, 201], "ekan": 167, "el": 53, "elabor": [85, 143, 178], "elad": 143, "eladgil": 143, "elaps": 127, "elast": 129, "elasticsearch": 137, "eldest": 129, "electabuzz": 167, "electivir": 167, "electr": [139, 167], "electrik": 167, "electrod": 167, "eleg": [23, 35, 36, 37, 56, 58, 79, 129], "elegantli": 35, "elekid": 167, "element": [28, 29, 30, 32, 35, 48, 49, 52, 53, 66, 70, 80, 81, 82, 93, 94, 96, 98, 150, 151, 152, 153, 156, 158, 159, 170, 172, 177, 178, 179, 186, 197, 199, 201], "elementari": 195, "elementtre": 69, "elementwis": [32, 33, 152, 153], "elementwise_affin": 178, "elemnet": [56, 93], "elemtnt": 93, "elev": 129, "elgyem": 167, "elif": [15, 23, 37, 43, 47, 50, 51, 73, 89, 129, 170], "elig": 118, "elimin": [50, 93, 107], "elisabeth": 142, "eliza": 144, "elizabeth": 142, "ell": 178, "elliot": [117, 185], "ellipsi": 90, "ello": 53, "elonmusk": 139, "els": [17, 18, 19, 20, 23, 35, 37, 40, 43, 44, 47, 51, 53, 54, 56, 58, 69, 75, 78, 79, 81, 86, 89, 92, 95, 102, 103, 117, 118, 127, 129, 134, 136, 137, 139, 142, 143, 144, 146, 157, 160, 162, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 191, 194, 197, 199, 200], "elsewher": [129, 132, 142, 170, 171], "elucid": 197, "emac": 129, "email": [6, 15, 16, 17, 18, 25, 40, 41, 98, 121, 127, 136, 137, 139, 145], "emath": 154, "emb": [26, 112, 118, 131, 132, 133, 179], "embark": [195, 197], "embark_town": [195, 197], "embed": [52, 85, 129, 131, 132, 135, 141, 142, 144], "embed_dim": 178, "embed_docu": [117, 131], "embed_queri": 117, "embedd": [117, 178], "embedding_dim": 178, "embedding_dimens": 178, "embedding_dropout": 178, "embedding_funct": 132, "embedding_layer_input_shap": 178, "embedding_layer_output_shap": 178, "embedding_list": 117, "embedding_s": 178, "emboar": 167, "embodi": 129, "embosom": 129, "emerg": 131, "emili": 102, "emmett": 129, "emoji": [118, 128, 139], "emolga": 167, "emot": [129, 139, 143], "emp": [103, 104], "emp_data": 78, "emp_id": [56, 78], "emp_nam": 56, "emphas": [117, 129, 132, 139, 144], "emphasi": [117, 139, 179, 198, 201], "employe": [102, 103, 104, 129, 132, 137, 144, 199], "employee_info": 104, "empoleon": 167, "empow": [1, 40, 53, 188], "empower": 139, "empoye": 78, "empti": [12, 39, 40, 48, 49, 50, 53, 54, 55, 56, 69, 70, 75, 77, 82, 84, 102, 103, 129, 131, 149, 152, 156, 157, 162, 164, 171, 174, 175, 177, 179, 180, 181, 192], "empty_lik": 152, "emul": 179, "en": [132, 135, 172, 192], "enabl": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 104, 118, 136, 137, 138, 140, 144, 170, 171, 174, 175, 179, 200, 208], "enable_limit": 132, "encapsul": 37, "enclos": [37, 48, 49, 53, 55, 71, 88, 131, 194], "encod": [32, 53, 69, 71, 72, 118, 137, 143, 173, 185, 201, 202], "encoder_lay": 178, "encoder_or_encoder_class": 137, "encompass": [129, 131], "encount": [71, 72, 129, 152, 172, 199], "encourag": [117, 129, 131, 142, 178, 179, 196], "encrypt": [82, 129], "end": [0, 26, 28, 29, 30, 32, 33, 35, 36, 44, 48, 49, 50, 53, 55, 62, 67, 69, 71, 72, 75, 79, 85, 90, 93, 95, 99, 112, 118, 126, 129, 131, 132, 137, 139, 140, 142, 143, 144, 149, 153, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 188, 189, 190, 191, 194, 197, 199, 200, 201], "end_dim": [173, 174, 178, 180, 181], "end_index": 25, "end_tim": [174, 176, 179, 180, 181], "endindex": 151, "endless": [1, 196], "endors": 142, "endpoint": [118, 153], "endswith": [53, 175, 180, 181], "endur": 129, "energet": 129, "energi": [129, 131, 134], "enforc": [90, 94, 179], "eng": 118, "engag": [129, 139, 199], "engin": [0, 25, 40, 103, 117, 118, 126, 129, 133, 137, 139, 140, 156, 157, 167, 168, 175, 176, 177, 178, 179, 181, 183, 199], "engine_api_resourc": 129, "engine_rotation_spe": 91, "england": [69, 71, 72, 102, 129, 146], "english": [53, 56, 92, 99, 129, 131, 186], "enhanc": [173, 187, 193, 194, 201], "enjoi": [0, 53, 81, 117, 118, 129, 130, 139, 142, 144, 191, 196], "enlarg": 186, "enorm": 0, "enough": [45, 54, 55, 91, 117, 127, 129, 132, 135, 172, 173, 174, 177, 178, 179, 185, 187, 193, 195, 196, 197, 198, 199, 200], "enrol": [142, 197], "enron": 132, "ensembl": [173, 208], "ensemble_doc": 132, "ensemble_retriev": 132, "ensembleretriev": 132, "ensur": [58, 69, 90, 104, 144, 171, 174, 176, 177, 178, 179, 188, 191, 193, 197, 199, 200], "ensure_ascii": 69, "entangl": 129, "entei": 167, "enter": [44, 45, 47, 49, 50, 72, 73, 75, 86, 90, 95, 104, 117, 118, 127, 129, 140, 143, 144, 199, 201], "enterpris": [25, 129, 178], "entertain": [132, 134], "enthusiast": [129, 139], "entir": [35, 36, 53, 54, 55, 56, 69, 99, 104, 129, 132, 133, 142, 159, 171, 178, 179, 192, 196, 197, 199, 201], "entireti": 201, "entiti": [33, 89, 102, 136], "entranc": 129, "entrepreneur": [140, 143], "entri": [19, 20, 46, 48, 56, 72, 129, 139, 156, 157, 164, 174], "entropi": [171, 172], "enuemer": 48, "enum": [117, 136, 138, 142, 176], "enumer": [11, 12, 15, 16, 17, 18, 31, 48, 53, 57, 131, 173, 174, 175, 178, 180, 181, 194, 197], "env": [0, 25, 117, 133, 174, 179], "enviou": 129, "environ": [0, 24, 81, 99, 117, 118, 126, 127, 129, 133, 136, 137, 138, 139, 142, 143, 144, 174, 175, 177, 179, 189, 201], "envis": 143, "eof": 69, "eoferror": 71, "ep": [154, 178], "epar": 69, "epic": 179, "episod": [139, 142], "epitom": 200, "epoch": [66, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "epoch_count": 171, "epsilon": [9, 19, 20], "epub": 117, "eq": [81, 132, 172, 178], "equal": [28, 32, 33, 35, 44, 45, 46, 47, 48, 49, 50, 52, 78, 79, 81, 83, 88, 92, 96, 105, 117, 118, 129, 131, 147, 149, 152, 156, 163, 170, 172, 173, 174, 178, 179, 192, 195, 197, 199], "equal1": 81, "equat": [6, 8, 13, 32, 144, 172, 187], "equip": [153, 190], "equival": [36, 38, 39, 48, 50, 53, 54, 56, 58, 60, 61, 62, 69, 80, 92, 96, 103, 104, 107, 129, 151, 152, 170, 172, 176, 177, 178], "er": [40, 129], "era": [129, 201], "eras": [69, 174], "erf": [81, 83], "erfc": [81, 83], "eric": 78, "erp": 25, "err": 127, "err_kw": 199, "err_palett": 199, "err_styl": 199, "errcolor": 197, "errno": 71, "error": [1, 8, 25, 35, 38, 39, 50, 52, 53, 57, 69, 72, 73, 75, 76, 78, 83, 89, 90, 93, 94, 95, 99, 102, 103, 104, 105, 118, 129, 131, 136, 137, 139, 143, 152, 157, 165, 171, 172, 173, 174, 175, 176, 178, 179, 187, 188, 197, 198], "errstat": 154, "errwidth": 197, "escap": [26, 70, 112, 142], "escavali": 167, "esp": 118, "especi": [27, 99, 107, 129, 149, 170, 172, 179], "espeon": 167, "espurr": 167, "esqu": 118, "essai": [117, 118, 129, 131, 132, 133, 135, 177], "essenc": [135, 170, 171, 173, 174, 176, 177, 178, 179, 181], "essenti": [24, 104, 149, 153, 172, 173, 174, 175, 176, 178, 197], "essesnti": 116, "est": 118, "establish": [143, 179, 191, 199], "estat": [129, 134, 142], "estim": [5, 9, 13, 129, 144, 171, 174, 176, 187, 189, 190, 191, 192, 193, 196, 197, 198, 199], "et": [69, 178], "eta": 173, "etc": [5, 8, 17, 18, 19, 20, 25, 26, 35, 36, 48, 49, 50, 52, 53, 55, 56, 57, 60, 61, 62, 66, 75, 80, 81, 89, 90, 91, 94, 96, 97, 99, 102, 103, 112, 117, 118, 128, 129, 136, 137, 139, 149, 151, 152, 153, 156, 164, 167, 168, 171, 178, 185, 190, 191, 194, 198, 199], "ethan": [75, 78, 95], "ethic": 208, "etr": 129, "etre": 69, "eu": 173, "eucl": 31, "euclid": 135, "euclidean": [33, 83], "euclidean_dist": 31, "eugen": 137, "eur": 118, "euro": 118, "europ": [60, 64, 118], "eva": 139, "eval": [25, 75, 95, 118, 138, 171, 172, 173, 174, 175, 176, 179, 180, 181], "eval_chain": 118, "eval_model": 173, "evalu": [43, 44, 45, 46, 49, 50, 80, 95, 96, 99, 143, 144, 170, 171, 177, 179], "evalut": [173, 179], "evan": 185, "even": [23, 25, 36, 37, 38, 39, 43, 45, 46, 48, 49, 50, 52, 53, 54, 58, 69, 72, 75, 76, 78, 79, 80, 85, 90, 94, 95, 99, 103, 104, 107, 117, 129, 131, 132, 136, 137, 139, 140, 142, 144, 152, 153, 157, 158, 161, 162, 170, 171, 172, 173, 174, 176, 177, 178, 179, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "even_list": 80, "even_no": 80, "even_num": 75, "even_numb": [38, 48, 58, 80], "even_odd": 75, "evenli": [129, 149, 153], "evenodd": 78, "event": [9, 72, 118, 126, 139, 140, 142, 143], "eventu": [129, 178, 198, 200], "ever": [40, 48, 53, 128, 129, 133, 136, 137, 142, 170, 171, 191, 194, 201], "everest": 131, "everi": [1, 6, 8, 9, 11, 15, 16, 17, 18, 19, 20, 25, 45, 48, 50, 52, 53, 57, 58, 62, 72, 79, 81, 93, 97, 99, 102, 103, 104, 105, 107, 118, 129, 136, 137, 139, 142, 150, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 188, 189, 190, 192, 194, 195, 199, 200, 201], "everon": 174, "everydai": [0, 126, 129, 135], "everyon": [78, 118, 129, 133, 136, 137, 139, 144, 190], "everyth": [38, 54, 55, 56, 57, 73, 81, 93, 97, 102, 103, 129, 131, 170, 171, 172, 174, 177, 178, 179, 194, 197, 198], "everytim": [170, 181, 194], "everywher": [35, 170, 173, 179], "evid": [187, 189, 193], "evoc": [118, 139], "evok": 188, "evolut": 129, "evolutionari": 118, "evolv": [118, 132, 143, 179], "ew": 53, "eward": 40, "ex": [1, 40, 99, 117, 118, 136, 139], "exact": [5, 52, 129, 132, 171, 186, 193, 195], "exactli": [0, 40, 50, 53, 72, 107, 129, 135, 137, 139, 172, 177, 179, 180, 186, 193], "exagger": 129, "exam": [129, 171], "examin": 189, "exampl": [1, 2, 4, 5, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 32, 33, 35, 36, 37, 38, 39, 41, 44, 45, 46, 52, 53, 54, 55, 56, 57, 58, 66, 69, 71, 72, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 89, 90, 92, 93, 94, 95, 97, 98, 102, 103, 105, 107, 112, 127, 128, 129, 131, 132, 133, 135, 142, 143, 144, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 186, 187, 188, 190, 191, 192, 193, 197, 198, 199, 201, 202], "example_1": 179, "example_2": 179, "example_3": 179, "example_list": 179, "example_prompt": 117, "example_selector": 117, "example_text": 139, "example_tweet": 139, "example_writ": 177, "exaplan": [71, 102], "exc_info": [72, 129], "excadril": 167, "exce": 129, "exceed": [79, 129], "excel": [0, 36, 69, 126, 136, 137, 156, 171, 172, 173, 176, 177, 179], "excel_book": 69, "except": [8, 19, 20, 23, 25, 35, 38, 40, 53, 54, 69, 74, 81, 85, 89, 90, 103, 118, 127, 129, 136, 137, 143, 161, 170, 171, 172, 173, 174, 176, 177, 178, 179, 186, 188, 189, 193, 195, 197], "exception": 190, "exception1": 72, "exception2": 72, "exceptioni": 72, "exceptionii": 72, "exceptionn": 72, "excercis": 155, "excess": 129, "exchang": [140, 179], "excit": [1, 118, 129, 139, 143, 144, 177, 178], "exclud": [41, 57, 117, 129, 140, 143, 179, 185, 199, 200], "exclude_repli": [139, 143], "exclus": [69, 81, 129, 150, 156, 160], "excurs": 129, "excus": 201, "exect": 139, "execut": [0, 7, 25, 35, 36, 37, 39, 43, 44, 45, 46, 47, 48, 49, 50, 58, 66, 67, 69, 72, 75, 76, 81, 86, 88, 90, 97, 99, 102, 103, 110, 118, 126, 127, 129, 144, 160, 163, 165, 166, 171, 179, 201, 206], "exeggcut": 167, "exeggutor": 167, "exercis": [23, 76, 77, 129, 131, 139, 142, 167, 169, 171, 172, 173, 174, 176, 178, 179, 185, 198, 199], "exerics": 170, "exert": 129, "exhaust": [35, 48, 99, 129, 178, 189], "exhilar": 129, "exist": [5, 32, 38, 39, 40, 53, 54, 55, 56, 57, 58, 69, 71, 81, 97, 102, 103, 104, 107, 118, 129, 131, 134, 144, 156, 159, 160, 161, 162, 163, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 189, 197, 201, 202], "exist_ok": [171, 173, 174, 175, 176, 177, 179, 180, 181], "exit": [48, 49, 50, 69, 71, 81, 88], "exmapl": [139, 178], "exmpl": 53, "exp": [31, 52, 81, 83, 152, 154, 172], "expand": [32, 80, 85, 129, 153, 174, 178, 198], "expanded_top": 142, "expandtab": 53, "expect": [8, 12, 14, 28, 40, 72, 96, 126, 129, 131, 132, 156, 164, 170, 171, 172, 173, 174, 176, 179, 193, 195, 196, 199, 201], "expectantli": [129, 132], "expens": [79, 129, 132, 142, 170, 179], "experi": [0, 1, 25, 117, 128, 129, 130, 131, 133, 136, 137, 139, 142, 143, 144, 170, 171, 172, 174, 175, 176, 178, 184, 186, 189, 190, 193, 194, 195, 197, 201, 208], "experien": 137, "experiment": [25, 139, 170, 175, 177, 179], "experiment_nam": 177, "experiment_numb": 177, "expert": [1, 118, 129, 196], "expertis": [131, 139], "expir": 179, "explain": [6, 15, 16, 17, 18, 79, 97, 107, 117, 118, 129, 131, 135, 144, 153, 161, 164, 171, 172, 173, 174, 175, 180, 181, 185, 186, 188, 189, 190, 194, 199], "explan": [41, 44, 45, 46, 48, 49, 50, 53, 58, 60, 63, 65, 67, 71, 72, 73, 76, 77, 78, 80, 82, 83, 86, 94, 96, 102, 103, 104, 105, 107, 117, 118, 152, 153, 178, 183, 194], "explanatori": 187, "explicit": [1, 29, 30, 90, 107, 129, 144, 152, 188, 194, 196, 197], "explicitli": [1, 37, 52, 58, 69, 75, 91, 118, 127, 129, 150, 179, 186, 197], "explin": 139, "explod": 146, "exploit": 99, "explor": [1, 40, 66, 116, 117, 129, 131, 135, 136, 137, 138, 139, 142, 144, 170, 171, 172, 173, 174, 175, 176, 177, 186, 189, 191, 194, 196], "exploratori": [1, 186], "explos": 178, "exploud": 167, "expm1": [81, 83], "expon": [35, 48, 53, 83, 95], "exponenti": [29, 53, 81, 82, 92, 96, 129, 152, 172, 196, 199], "export": [85, 171], "expos": [127, 129, 144], "expovari": 82, "express": [29, 30, 39, 40, 44, 45, 46, 49, 50, 53, 54, 56, 58, 75, 78, 80, 90, 92, 94, 95, 96, 98, 105, 118, 129, 142, 156, 170, 199], "expression1": 47, "expression2": 47, "expression3": 47, "expression4": 47, "exract": 142, "extempor": 198, "extend": [39, 53, 75, 90, 102, 104, 118, 129, 139, 143, 165, 188, 195, 196, 197], "extens": [9, 21, 25, 37, 81, 85, 88, 90, 95, 109, 113, 146, 147, 173, 175, 177, 178, 179, 180, 181, 190, 199], "extent": [129, 194, 199], "extern": [50, 72, 117, 118, 133, 177], "extra": [39, 70, 71, 117, 132, 136, 137, 144, 163, 170, 180, 181, 183, 194, 195, 198], "extra_repr": 173, "extra_return_dict": 129, "extrac": [17, 18], "extract": [1, 9, 11, 15, 16, 17, 18, 19, 20, 40, 93, 117, 121, 132, 138, 139, 141, 145, 156, 173, 174, 176, 177, 178, 179, 194, 202], "extractal": [117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 174, 175, 176, 177, 180, 181], "extracton": 118, "extractor": 176, "extrapol": 190, "extravag": 129, "extrem": [129, 132, 139, 142, 144, 156, 179, 186, 187, 188, 189, 194, 196, 199, 201], "ey": [32, 129, 150, 154, 179, 197], "f": [28, 33, 37, 47, 52, 53, 61, 62, 69, 72, 73, 78, 85, 95, 98, 102, 103, 107, 117, 118, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 147, 152, 153, 160, 163, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 191, 194, 196, 199], "f09af94986b4": 55, "f1": [2, 9, 172], "f1_histori": 9, "f1_score": 172, "f1score": 172, "f2db54e8947c": 194, "f3f4b74da706": 55, "f45": 40, "f6b2789c4214": 165, "f6df5dfa": 132, "f7b055f5764d": 36, "f7d40ce0c112": 39, "f7ffd6347533": 71, "fab": [81, 83], "fab2e1af2c65": 107, "fabric": 201, "fabul": [139, 144, 193], "face": [8, 79, 117, 129, 139, 143, 174, 185, 200], "facebook": [142, 144, 170], "facebookfacebook": 140, "facecolor": [146, 193, 197], "facecream": 147, "facecremsalesdata": 147, "faceprep": 50, "facet": [186, 189, 198, 200, 201], "facet_kw": 198, "facetgrid": [189, 190, 191, 195, 198, 199, 200, 204], "facewashsalesdata": 147, "facil": [81, 142], "facilit": [32, 137, 195, 197], "fact": [35, 38, 54, 55, 117, 118, 129, 132, 135, 144, 149, 178, 179, 189, 196, 198, 199], "facto": 129, "factor": [27, 30, 50, 143, 179, 187, 191, 195, 196, 197, 199, 204], "factori": [29, 52, 79, 81, 83, 85, 129], "factorplot": [193, 195, 196, 198, 199], "faculti": 129, "fade": [188, 195], "fahrenheit": [39, 117, 138], "fail": [5, 6, 45, 46, 49, 69, 71, 129, 132, 156, 170, 171, 174, 188], "fair": [129, 171, 172, 173, 174, 176, 177, 178, 179, 191, 199], "fairi": [129, 167], "fairli": [36, 129, 173, 178], "faiss": [117, 118, 131, 132, 135], "faith": [176, 179], "fake": [129, 199], "fall": [44, 52, 71, 86, 93, 129, 193, 199], "fallback": 150, "fallen": 129, "fals": [2, 9, 12, 14, 17, 18, 19, 20, 31, 38, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 69, 75, 81, 85, 89, 91, 92, 96, 104, 105, 118, 129, 136, 137, 138, 150, 151, 153, 154, 156, 160, 161, 162, 163, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203], "falsifi": 129, "famili": [6, 12, 14, 85, 139, 179, 190, 197, 199], "familiar": [39, 53, 55, 103, 129, 147, 168, 171, 172, 174, 191, 194, 196, 197, 198], "famou": [117, 129], "fan": [170, 178, 194, 201], "fanci": [117, 118, 129, 134, 151, 156], "fandango": 25, "fanstast": 179, "fantast": [172, 175, 177, 178, 179], "faq": 140, "far": [40, 46, 107, 129, 132, 153, 167, 170, 171, 172, 173, 174, 176, 177, 178, 179, 186, 187, 188, 189], "fare": [195, 197, 199], "farfetch": 167, "farm": [129, 134], "fasewash": 147, "fashion": [6, 8, 18, 20, 104, 129, 173, 177, 179], "fashionmnist": [173, 174], "fashionmnistmodelv0": 173, "fashionmnistmodelv1": 173, "fashionmnistmodelv2": 173, "fast": [69, 117, 118, 129, 132, 149, 156, 160, 170, 175, 176, 177, 178, 179, 199], "fastai": 176, "fastapi": 179, "faster": [52, 55, 58, 93, 99, 102, 104, 140, 152, 171, 173, 177, 178], "fastest": 179, "fat": [130, 198], "fatal": [129, 132, 185], "father": 129, "fatherhood": 129, "fatigu": 129, "fatorplot": 193, "faustomoral": 179, "fav_food": 117, "favor": [129, 139], "favorit": [117, 118, 130, 139, 143, 144], "favorite_count": [139, 143], "favour": 178, "favourit": [0, 179], "fbf7cddd4b2a": 71, "fc": [146, 197], "fdel": 39, "fe": 133, "fear": [0, 129, 132], "fearow": 167, "feasibl": [129, 165], "feat": [177, 178], "featheri": 129, "featur": [1, 2, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 38, 102, 104, 105, 117, 118, 129, 135, 138, 140, 160, 170, 171, 172, 173, 174, 176, 185, 187, 188, 189, 190, 191, 193, 195, 196, 199, 200, 201], "feature_map_height": 178, "feature_map_width": 178, "feb": [61, 62, 88], "februari": [61, 62, 117, 129, 170], "fed": [1, 129, 131, 135, 178], "fee": 142, "fee1": 132, "feeba": 167, "feebl": 129, "feed": [45, 139, 170, 176, 196, 208], "feedback": [45, 132, 144, 179], "feedforward": [19, 20, 178], "feedpars": 25, "feel": [117, 129, 131, 133, 134, 139, 142, 143, 178, 179, 185, 189, 190, 191, 193, 194, 195], "feet": [118, 129], "felic": 129, "felici": 140, "fell": 129, "fellow": 140, "felt": [129, 142], "femal": [69, 102, 167, 185, 189, 192, 194, 195, 196, 197, 201], "female_dinn": 196, "female_lunch": 196, "fenc": [178, 195], "fennekin": 167, "feraligatr": 167, "ferrose": 167, "ferrothorn": 167, "fervent": 129, "fetch": [13, 81, 132, 138, 156, 186, 189, 190, 193, 195, 197, 199, 200, 201], "few": [37, 38, 39, 48, 49, 52, 53, 56, 60, 116, 117, 118, 129, 131, 132, 133, 139, 142, 143, 144, 153, 156, 159, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "fewer": [0, 23, 178, 199, 200], "fewshotprompttempl": 117, "feynman": 0, "fffbe51149a7": 62, "fget": 39, "fh": 72, "fib": 81, "fibo": 81, "fibo1": 81, "fibonacci": [36, 49, 81], "fibonacci_numb": 36, "fickl": 132, "fiction": 197, "fiddl": 198, "field": [12, 14, 53, 69, 92, 117, 118, 129, 131, 132, 133, 136, 138, 139, 156, 159, 178, 179, 188, 199], "fierc": 129, "fifa": 118, "fifa_data": 146, "fifteen": 129, "fifti": 129, "fig": [26, 31, 112, 173, 174, 178, 179, 187, 192, 196], "fight": [12, 13, 14, 15, 16, 17, 18, 19, 20, 129, 139, 167], "fighth": [17, 18, 19, 20], "figma": [140, 143], "fignam": 31, "figsiz": [9, 11, 12, 14, 17, 18, 19, 20, 26, 28, 112, 146, 171, 172, 173, 174, 178, 179, 188, 196, 197, 199, 203], "figur": [9, 11, 12, 17, 18, 19, 20, 28, 47, 73, 84, 89, 104, 117, 118, 129, 131, 132, 135, 139, 146, 147, 171, 172, 173, 174, 176, 177, 179, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 203], "file": [7, 25, 35, 36, 53, 71, 72, 73, 77, 78, 81, 84, 85, 88, 89, 91, 95, 99, 110, 117, 118, 121, 129, 131, 132, 138, 142, 144, 145, 147, 156, 164, 165, 166, 167, 171, 174, 175, 176, 177, 180, 181, 182, 183, 201, 206], "file_data": 69, "file_extens": 179, "file_nam": [131, 156], "file_path": 133, "filedata": 153, "fileexistserror": 81, "filemoveinput": 138, "filenam": [81, 95, 118, 132, 156, 171, 174, 175, 177, 179, 180, 181, 190], "fileno": 69, "filenotfounderror": [69, 71, 174], "filepath": [171, 174, 176, 177, 178, 179], "files": [177, 179], "fill": [127, 129, 146, 149, 150, 153, 170, 174, 175, 177, 179, 180, 181, 190], "fillna": 156, "filter": [0, 54, 56, 58, 129, 131, 132, 139, 166, 173], "filter_cond": 156, "filterwarn": [187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "fin": [72, 118], "final": [8, 28, 36, 38, 48, 49, 50, 53, 54, 69, 71, 76, 77, 89, 91, 95, 97, 107, 117, 118, 126, 128, 129, 131, 132, 134, 139, 140, 142, 143, 152, 166, 171, 173, 174, 177, 178, 179, 181, 188, 191, 195, 196, 197, 199, 200, 201], "final_prompt": [117, 118, 128, 139], "finali": 153, "finaltext": 95, "financ": [134, 149], "financi": [52, 118, 129, 136, 137], "find": [0, 2, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 33, 36, 40, 48, 49, 53, 58, 60, 64, 69, 72, 75, 79, 81, 86, 91, 93, 104, 107, 117, 118, 127, 128, 129, 131, 132, 133, 134, 137, 139, 140, 141, 142, 143, 151, 152, 153, 156, 160, 162, 171, 172, 173, 174, 175, 177, 179, 180, 181, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199], "find_class": 174, "find_even_numb": 75, "findarea": 104, "findli": 140, "fine": [89, 95, 117, 118, 129, 139, 171, 172, 174, 176, 178, 199], "finer": [136, 137, 186], "finfo": 154, "finish": [37, 48, 117, 118, 129, 140, 144, 173, 177, 178, 179, 180, 181, 189, 192], "finit": [28, 35, 52, 133], "finland": [12, 14, 48, 53, 69, 72, 91, 102], "finneon": 167, "fintech": 194, "fir": 187, "fire": [129, 167, 179], "firelight": 129, "firesid": 129, "firm": [129, 142, 195], "firmer": 200, "firmli": 129, "first": [1, 8, 9, 10, 17, 18, 19, 20, 28, 32, 35, 36, 37, 38, 39, 40, 43, 44, 45, 47, 48, 49, 50, 53, 58, 60, 61, 62, 66, 69, 70, 71, 72, 75, 76, 78, 81, 85, 86, 91, 95, 99, 102, 103, 104, 105, 107, 117, 118, 128, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 146, 151, 152, 156, 163, 165, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 186, 188, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201], "first_lett": 53, "first_nam": [38, 48, 53, 75, 91, 94, 137], "first_name_to_list": 94, "first_nm": 78, "first_numb": 95, "first_respons": 138, "firstnam": [41, 75, 78, 91, 95, 102], "fisher": [11, 15, 129], "fit": [1, 2, 5, 6, 12, 13, 14, 85, 117, 129, 131, 134, 171, 173, 174, 178, 179, 180, 181, 187, 189, 190, 191, 192, 195, 196, 199], "fit_fn": 187, "fit_reg": 189, "fit_transform": 131, "fitit": 142, "fitler": 132, "five": [40, 48, 104, 129, 146, 156, 157, 159, 170, 172, 173, 178, 179], "fix": [26, 48, 71, 78, 99, 112, 117, 118, 129, 156, 171, 172, 173, 174, 178, 189, 199], "flaaffi": 167, "flab\u00e9b\u00e9": 167, "flag": [13, 17, 18, 19, 20, 40, 118, 127, 146, 154, 160, 161, 162, 163, 165, 166, 167, 175, 179, 185, 191, 199], "flag_r": 191, "flagcdn": 118, "flake": 129, "flamer": 167, "flank": 129, "flaot": 52, "flareon": 167, "flase": 96, "flask": 25, "flat": 154, "flat_latency_grid": 9, "flat_prob": 9, "flat_throughput_grid": 9, "flatten": [9, 11, 12, 13, 14, 15, 16, 58, 149, 173, 174, 175, 180, 181, 193], "flatten_model": 173, "flattened_list": 58, "flattn": 178, "flavor": [21, 109, 113, 117, 130], "flavour": [170, 177], "flee": [129, 185], "fleme": 48, "fletchind": 167, "fletchl": 167, "flexibl": [25, 41, 93, 136, 137, 156, 170, 171, 187, 189, 192, 193, 194], "flexibli": 192, "flexport": 143, "flierprop": 195, "fliersiz": 195, "flight": [129, 185, 202, 203], "fligth": 202, "flip": [174, 186], "float": [25, 39, 47, 50, 53, 54, 55, 57, 60, 67, 71, 72, 81, 82, 83, 86, 90, 92, 93, 94, 96, 104, 129, 150, 156, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 188, 193, 194, 196, 197], "float16": 170, "float32": [170, 171, 172, 174, 176], "float64": [146, 150, 152, 156, 157, 158, 164, 170], "float64index": 156, "float_1": 92, "float_16_tensor": 170, "float_2": 92, "float_32_tensor": 170, "float_numb": 95, "floatingpointerror": 71, "floattensor": 174, "floatzel": 167, "floett": 167, "flood": [129, 132], "floor": [81, 83, 96, 103, 105, 129, 154, 172, 193], "floppi": 128, "florenc": 129, "florg": 167, "flounder": 129, "flow": [11, 48, 49, 50, 53, 69, 72, 129, 139, 171, 178, 200], "flowchart": 1, "flower": [4, 6, 11, 15, 16, 48, 129, 185, 193], "floyd": 48, "fluctuat": 199, "fluff": 132, "fluoresc": 129, "flush": [49, 67, 69, 85], "fly": [36, 102, 103, 104, 129, 134, 167, 179], "flygon": 167, "flying_test": 102, "fmod": [81, 83], "fmri": 199, "fmt": 146, "fn": [2, 129, 179], "fo": 40, "focu": [117, 118, 128, 129, 139, 143, 170, 171, 178, 179, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201], "focus": [102, 117, 126, 129, 131, 139, 140, 142, 144, 172, 174, 175, 177, 178, 179], "foe": 81, "folder": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 70, 81, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 156, 167, 168, 173, 174, 175, 176, 177, 180, 188, 190, 191, 196, 197, 199], "folk": 117, "follow": [0, 1, 2, 4, 5, 6, 7, 8, 18, 20, 23, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 48, 50, 52, 53, 54, 55, 56, 57, 58, 69, 71, 72, 73, 75, 78, 79, 81, 82, 84, 85, 86, 88, 90, 91, 92, 95, 96, 97, 99, 102, 103, 104, 105, 107, 110, 116, 117, 118, 129, 130, 131, 132, 134, 136, 137, 138, 139, 140, 144, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 186, 188, 199, 200, 201, 202, 206], "fom": 49, "font": [129, 137, 146, 186, 194, 197, 199], "font_scal": [186, 196], "fontdict": 146, "fontnam": 146, "fontsiz": [146, 173, 174, 178, 179, 196, 201], "fontweight": [146, 196, 197, 201], "foo": [40, 54, 56, 138], "food": [93, 117, 130, 136, 139, 172, 174, 175, 178, 179], "food101": [174, 177], "food101_class_nam": 179, "food101_class_names_load": 179, "food101_train_transform": 179, "food_1": 130, "food_2": 130, "food_imag": 174, "food_nam": 179, "foodextractor": 136, "foodvis": [176, 177, 178], "foodvision_big": 179, "foodvision_big_class_names_path": 179, "foodvision_big_demo_path": 179, "foodvision_mini": 179, "foodvision_mini_demo_path": 179, "foodvision_mini_exampl": 179, "foodvision_mini_examples_path": 179, "foongu": 167, "foot": [129, 146], "footbal": [40, 201], "football_plot": 201, "footer": 140, "footnot": 129, "footprint": [178, 179], "forbid": 129, "forc": [0, 73, 133, 139, 150, 157, 179, 185], "force_edgecolor": 200, "forcibli": 85, "ford": [104, 168], "forecast": [136, 137], "foreign": 129, "forese": 143, "foreshadow": 139, "forest": [129, 173], "forev": 49, "forget": [0, 8, 178, 179], "forgot": [71, 129, 174], "forgotten": [49, 129], "form": [5, 8, 9, 11, 13, 15, 37, 44, 48, 52, 53, 56, 58, 61, 62, 69, 70, 78, 80, 81, 86, 93, 99, 102, 118, 129, 131, 132, 137, 139, 143, 149, 150, 152, 156, 160, 161, 164, 167, 172, 173, 175, 176, 177, 178, 179, 180, 181, 193, 194, 195, 196, 197, 198, 199, 200, 201], "formal": [78, 107, 129, 178], "format": [10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 38, 41, 48, 55, 56, 65, 66, 69, 81, 90, 102, 103, 105, 117, 118, 128, 129, 130, 131, 134, 137, 138, 139, 140, 144, 156, 157, 164, 170, 172, 173, 174, 175, 176, 177, 178, 179, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "format_instruct": [117, 118, 134], "format_prompt": [118, 128, 130, 132, 134, 137], "format_regex": 62, "format_tool_to_openai_funct": 138, "format_vers": 85, "former": [90, 104, 129, 140], "formfe": 53, "formul": 48, "formula": [2, 5, 6, 40, 171, 172, 178], "forretress": 167, "fortan": 153, "forth": [81, 118], "forth_respons": 138, "forti": [129, 135], "fortran": 129, "fortun": [52, 129], "forum": [129, 172, 175, 176, 179, 193, 194, 195, 197], "forward": [48, 53, 70, 71, 93, 129, 140, 144, 170, 171, 172, 173, 175, 176, 178, 180, 181, 199, 202], "forward_cal": [173, 174], "found": [0, 33, 37, 40, 48, 50, 53, 56, 62, 71, 72, 81, 96, 99, 104, 117, 129, 131, 132, 136, 137, 139, 140, 143, 144, 150, 160, 163, 170, 171, 172, 173, 174, 176, 177, 178, 179, 188, 195, 197, 199, 202], "foundat": [129, 174, 178, 198], "founder": [129, 131, 132, 140, 143, 176, 178], "fountain": [117, 129], "four": [10, 11, 15, 40, 43, 48, 62, 75, 92, 95, 104, 107, 129, 132, 139, 144, 153, 156, 157, 168, 171, 172, 173, 179, 185, 186, 195, 201], "fourth": [40, 49, 95, 118, 132, 160], "fp": [2, 127], "fr": 118, "fra": 118, "frac": [12, 14, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 96, 172], "fractal": 135, "fraction": [62, 83, 142, 187], "fradul": 179, "fragrant": [117, 129], "frame": [16, 17, 18, 19, 20, 79, 90, 129, 156, 160, 163, 164, 165, 173, 179, 195, 200, 201], "frameobject": 90, "framework": [8, 19, 20, 25, 117, 118, 119, 138, 142, 170, 178, 201], "franc": [117, 118], "frances": 118, "francesa": 118, "franchis": 142, "franci": 118, "francia": 118, "franciaorsz\u00e1g": 118, "francisco": [117, 118, 138, 140, 142, 144, 185], "francja": 118, "francouzsk\u00e1": 118, "francuska": 118, "franc\u00e9": 118, "franc\u00fazska": 118, "franc\u00fazsko": 118, "frank": 78, "frankreich": 118, "frankrijk": 118, "frankrik": 118, "frans": 118, "fransa": 118, "franz\u00f6sisch": 118, "fran\u00e7a": 118, "fran\u00e7ai": 118, "fran\u00e7ais": 118, "fraud": [172, 179], "fraudul": [6, 15, 16, 17, 18, 179], "fraxur": 167, "fra\u00f1": 118, "free": [1, 23, 69, 117, 129, 131, 132, 133, 136, 137, 139, 143, 170, 177, 178, 179, 190, 191, 193, 194, 195, 197, 199], "freecodecamp": 179, "freed": 69, "freedom": [5, 12, 14, 137, 177, 200], "freelanc": 129, "freeli": [23, 199], "freez": [129, 178, 179], "french": [117, 118, 179], "frequenc": [156, 195, 196], "frequent": [50, 81, 131, 151, 152, 156, 178, 179, 195, 198], "fresh": [117, 130, 132, 139, 171, 172], "fresher": [129, 201], "frexp": [81, 83], "fri": [66, 136, 194, 196, 197], "friction": [117, 118, 129], "fridai": 117, "fridman": 176, "friend": [6, 118, 129, 132, 133, 137, 170, 176, 178, 179], "friendli": [36, 58, 179], "frighten": 129, "frighteningli": 129, "frillish": 167, "frist": 172, "froaki": 167, "frogadi": 167, "frolick": 129, "from": [0, 1, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 26, 28, 29, 30, 31, 35, 36, 37, 39, 40, 48, 49, 50, 52, 53, 58, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 79, 80, 82, 83, 85, 89, 91, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, 107, 112, 116, 117, 118, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 145, 146, 147, 149, 150, 151, 152, 163, 164, 165, 171, 173, 174, 175, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "from__email": 127, "from__nam": 127, "from_arrai": [160, 163], "from_chain_typ": [118, 135, 142], "from_dict": [156, 168], "from_docu": [117, 118, 132, 133, 135, 141, 142], "from_exampl": 117, "from_llm": [118, 132], "from_llm_and_api_doc": 118, "from_messag": [128, 130, 142, 144], "from_numpi": [170, 172], "from_response_schema": [117, 118, 134], "from_templ": [118, 128, 130, 134, 142, 144], "from_text": 133, "from_tupl": [159, 166], "from_uri": 118, "from_valu": 127, "from_youtube_url": 143, "from_zapier_nla_wrapp": 127, "fromarrai": 154, "fromisoformat": [136, 137], "fromit": 154, "fromtimestamp": [60, 61, 65], "fron": [12, 14], "front": [40, 53, 129, 131, 132, 170, 177, 178, 197], "frontend": 186, "frontier": [131, 135], "froslass": 167, "frosti": 129, "frown": 107, "froze": 176, "frozen": [176, 177, 178, 179], "frugal": 129, "fruit": [40, 48, 54, 72, 92, 103, 118, 129, 132, 158, 197], "fruit1": 158, "fruit2": 158, "fruit3": 158, "fruit4": 158, "fruit_nam": 118, "fruit_output": 118, "fruit_queri": 118, "fruits1": 92, "fruits2": 92, "fruits3": 92, "fruits4": 92, "fruits_and_veg": 72, "fruits_df": 158, "fruits_dict": 158, "fruits_list": 158, "fset": 39, "fsize": 31, "fsum": [81, 83], "fucntion": [76, 77], "fulfil": [133, 170, 189], "full": [10, 17, 18, 19, 20, 25, 60, 61, 62, 69, 70, 75, 81, 84, 91, 117, 118, 127, 128, 129, 131, 132, 135, 139, 150, 152, 170, 171, 172, 174, 177, 178, 179, 181, 196], "full_backward_hook": [173, 174], "full_data": 69, "full_lik": 150, "full_nam": [75, 78], "full_text": [139, 143], "fulli": [126, 129, 131, 170, 177, 178, 179, 197], "fun": [40, 75, 76, 77, 78, 81, 91, 96, 129, 132, 136, 139, 171, 173, 176, 178, 179, 181, 188, 200], "fun1": [76, 77, 104], "fun2": [76, 77, 104], "fun3": [77, 104], "func": [38, 118, 131, 163, 194], "func1": 102, "func2": 102, "function": [3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 29, 30, 35, 39, 40, 41, 43, 49, 50, 52, 60, 66, 67, 69, 70, 71, 72, 76, 82, 84, 88, 89, 90, 91, 92, 93, 94, 97, 102, 103, 107, 109, 113, 118, 121, 126, 128, 131, 135, 137, 139, 142, 143, 145, 147, 149, 153, 156, 158, 170, 176, 183, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201], "function_cal": [117, 136, 138], "function_descript": 138, "function_nam": [75, 138], "function_respons": 138, "functionis": 177, "functionnam": 72, "functool": [80, 129], "fund": [117, 118, 127, 129, 132, 179], "fundament": [102, 121, 129, 131, 139, 156, 177, 178, 179, 184, 188], "fundrais": 132, "fungu": 118, "funni": 129, "fur": 8, "furfrou": 167, "furret": 167, "further": [4, 12, 13, 14, 15, 16, 17, 18, 36, 53, 69, 71, 73, 75, 95, 97, 99, 140, 156, 157, 165, 171, 172, 174, 177, 178, 179, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "furthermor": [36, 38, 39, 54, 75, 81, 97, 102, 107, 132, 186], "furtur": 176, "fusion": [174, 175, 180, 181], "fut": 129, "futher": 118, "futur": [48, 50, 69, 91, 107, 118, 128, 129, 131, 132, 137, 139, 143, 164, 170, 171, 172, 173, 174, 175, 177, 179, 181, 188, 192, 198, 199, 201], "futurewarn": [131, 164, 168, 188, 192], "fuzz": 118, "fuzzywuzzi": 118, "g": [1, 5, 6, 8, 12, 14, 24, 38, 50, 54, 55, 69, 91, 117, 133, 138, 146, 147, 150, 152, 153, 156, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203], "g53c4ty0qi": 139, "g7qxxsfswytpkuzd7": 118, "ga": 146, "gabit": 167, "gackl": 129, "gai": 129, "gain": [129, 144, 178, 189, 190, 198, 199], "gallad": 167, "gallademega": 167, "galleri": [118, 129], "galvantula": 167, "gam": 199, "game": [25, 84, 117, 129, 171], "gamma": [81, 82, 83, 199], "gammavari": 82, "gap": [89, 129, 131, 135], "garbag": [69, 71, 103, 135, 161], "garbodor": 167, "garchomp": 167, "garchompmega": 167, "garden": 129, "gardevoir": 167, "gardevoirmega": 167, "gari": 78, "garlic": [117, 130, 179], "gas_pric": 146, "gas_price_figur": 146, "gastli": 167, "gastrodon": 167, "gate": 139, "gatesfound": 139, "gather": [117, 129, 136, 137, 143, 156, 157, 161, 178, 194], "gaug": [193, 194], "gaul": 129, "gauss": 82, "gaussian": [82, 153, 178, 189, 190, 192, 199], "gaussian_anomali": 9, "gaussian_anomaly_detect": 9, "gaussiananomalydetect": 9, "gaussiankd": 196, "gave": [118, 129, 132, 133, 142], "gca": [194, 200, 201], "gcd": 81, "gcp": [133, 137, 170], "gdp": [5, 12, 14, 129, 199], "gdpr": [136, 137], "gea": 146, "geeksforgeek": [5, 6], "gelu": 178, "gem": 129, "gender": [69, 102, 185, 189, 193, 194, 196, 197, 201], "gender_domin": 196, "gener": [5, 6, 8, 12, 15, 16, 19, 20, 23, 25, 30, 33, 35, 38, 42, 43, 48, 49, 52, 53, 55, 71, 72, 73, 75, 79, 80, 81, 82, 84, 85, 90, 93, 96, 99, 102, 103, 104, 107, 116, 118, 121, 127, 128, 129, 130, 131, 132, 139, 142, 143, 145, 147, 150, 151, 160, 163, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208], "generaliz": [173, 174], "generate_full_nam": 75, "generate_group": 78, "generate_respons": 128, "generatig": 187, "generatingdata": [189, 191], "generation_info": 130, "generatorexit": 71, "generos": [12, 14], "genesect": 167, "genexpr": 36, "genfromtxt": [153, 154], "gengar": 167, "gengarmega": 167, "genius": 129, "genotyp": 193, "genr": 117, "genteel": 129, "gentleman": 199, "gentli": 129, "genuin": [129, 139], "geociti": 129, "geodud": 167, "geograph": 199, "geometr": 33, "geophys": 118, "georg": 178, "geq": 28, "gereet": 75, "germain": 146, "german": 130, "germancar": 168, "germani": [118, 130, 168], "get": [0, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 32, 35, 36, 37, 39, 40, 41, 44, 45, 47, 48, 49, 50, 52, 53, 57, 58, 62, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 78, 80, 81, 90, 91, 96, 97, 102, 103, 104, 105, 107, 109, 110, 113, 117, 118, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 140, 143, 144, 150, 151, 153, 157, 159, 163, 164, 166, 168, 171, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206], "get_authors_tone_descript": 139, "get_company_pag": 140, "get_cost": [12, 14], "get_current_weath": [117, 138], "get_data": 103, "get_food_ment": 136, "get_format_instruct": [117, 118, 134], "get_group": 168, "get_height": 197, "get_num_token": [118, 131, 142], "get_offset": 193, "get_openai_callback": [136, 137], "get_original_tweet": [139, 143], "get_relevant_docu": [117, 132, 141], "get_similar_public_figur": 139, "get_temperatur": 39, "get_text": [136, 137, 143], "get_tool": 127, "get_video_transcript": 143, "get_width": 197, "get_x": 197, "get_xlim": 194, "get_xticklabel": 197, "get_yticklabel": 197, "getattr": [103, 104, 141, 194], "getcwd": 81, "getcwdb": 70, "getdata": 103, "getdatalim": 193, "getenv": [117, 118, 128, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 143], "getidea": [131, 135], "getlogg": 132, "getrandbit": 82, "getrespons": 127, "getroot": 69, "getstat": 82, "ggplot": 146, "gh_jid": [136, 137], "ghost": 167, "gi": 170, "giant": [129, 132], "gibl": 167, "giddi": 129, "gif": 127, "giffin": 129, "gift": 38, "gigabyt": 201, "gigalith": 167, "gil": 143, "gini": 118, "giphi": 127, "girafarig": 167, "giratinaalt": 167, "giratinaorigin": 167, "gist": [131, 190], "gist_earth": 191, "gist_earth_r": 191, "gist_grai": 191, "gist_gray_r": 191, "gist_heat": 191, "gist_heat_r": 191, "gist_ncar": 191, "gist_ncar_r": 191, "gist_rainbow": 191, "gist_rainbow_r": 191, "gist_stern": 191, "gist_stern_r": 191, "gist_yarg": 191, "gist_yarg_r": 191, "git": [175, 176, 177, 178, 179], "gitattribut": 179, "github": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 91, 117, 142, 146, 147, 173, 174, 175, 176, 177, 178, 179, 180, 181], "githubusercont": 179, "gitlab": [140, 143], "give": [0, 15, 16, 25, 35, 38, 44, 45, 48, 50, 52, 53, 72, 81, 83, 89, 91, 96, 102, 103, 116, 117, 118, 128, 129, 131, 132, 133, 136, 137, 138, 139, 142, 143, 144, 149, 150, 152, 153, 156, 157, 158, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201], "giveawai": 191, "given": [2, 4, 5, 28, 29, 30, 33, 36, 38, 41, 43, 44, 48, 49, 50, 53, 57, 60, 62, 66, 67, 71, 72, 75, 78, 81, 85, 88, 89, 92, 95, 97, 104, 107, 117, 118, 128, 129, 131, 132, 134, 135, 138, 142, 143, 144, 149, 150, 153, 157, 170, 172, 173, 174, 175, 176, 177, 178, 179, 189, 193, 194, 196, 199, 201], "gkdive": 146, "gkhandl": 146, "gkkick": 146, "gkposit": 146, "gkreflex": 146, "gl": 118, "glaceon": 167, "glacial": 129, "glacier": 129, "glad": 144, "glali": 167, "glaliemega": 167, "glameow": 167, "glare": 129, "glass": 129, "glassi": 129, "gleam": 129, "glean": [136, 137], "glenbrook": 129, "gligar": 167, "glimps": [171, 196], "gliscor": 167, "glob": [132, 135, 174, 176, 177, 179], "global": [23, 37, 71, 80, 87, 89, 97, 132, 139, 178], "global_lang": 76, "global_step": 177, "global_var": [76, 77], "globalglob": 76, "gloom": 167, "glori": 129, "gloriou": 129, "glove": 144, "glu": 187, "gmail": 127, "gmtoff": 62, "gmtoff_fract": 62, "gnbu": 191, "gnbu_r": 191, "gnome": 170, "gnuplot": 191, "gnuplot2": 191, "gnuplot2_r": 191, "gnuplot_r": 191, "go": [0, 5, 6, 8, 9, 12, 17, 18, 19, 20, 25, 28, 38, 39, 47, 48, 50, 52, 72, 75, 79, 97, 99, 102, 105, 107, 117, 118, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 149, 167, 184, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "goal": [1, 118, 128, 129, 131, 132, 133, 137, 139, 140, 142, 143, 144, 154, 173, 174, 177, 178, 179, 182, 186, 189, 190, 198], "god": [56, 129], "goe": [12, 13, 14, 15, 16, 17, 18, 37, 67, 71, 72, 73, 81, 107, 136, 137, 139, 144, 160, 163, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 190, 196], "gogh": 25, "gogoat": 167, "going_modular": [175, 176, 177, 178, 179, 181, 182], "goku": [177, 179], "golbat": 167, "gold": [129, 136, 137], "goldeen": 167, "goldman": 129, "golduck": 167, "golem": 167, "golett": 167, "golurk": 167, "gone": [129, 144, 170, 174, 177, 178, 179, 189, 193, 199], "gonna": [144, 199], "goo": 118, "good": [17, 18, 19, 20, 37, 48, 53, 55, 69, 72, 73, 75, 78, 81, 86, 90, 95, 117, 118, 127, 128, 129, 131, 132, 134, 135, 136, 139, 140, 142, 143, 144, 146, 147, 156, 170, 171, 172, 173, 174, 176, 177, 178, 179, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201], "good_or_bad": 136, "good_str": 117, "goodorbad": 136, "goodra": 167, "googl": [0, 25, 85, 104, 117, 118, 126, 127, 132, 143, 144, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 199], "google_api_kei": 118, "google_cse_id": 118, "googlemap": 118, "googlesearchapiwrapp": 118, "googol": 92, "goomi": 167, "gorebyss": 167, "got": [0, 38, 41, 77, 81, 93, 94, 105, 129, 132, 142, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 195, 196], "got_stream": 129, "gothita": 167, "gothitel": 167, "gothorita": 167, "gotten": [129, 177], "gourgeistaverag": 167, "gourgeistlarg": 167, "gourgeistsmal": 167, "gourgeistsup": 167, "govern": [12, 14, 129, 193, 199], "gpt": [117, 118, 128, 131, 132, 135, 136, 137, 139, 142, 143, 144, 208], "gpt3": 142, "gpt4": [117, 118, 131, 136, 137, 142, 144], "gpt_index": 117, "gpu": [171, 172, 174, 175, 176, 177, 178, 179, 181], "gr": 179, "grab": [133, 137, 139, 142, 197], "gracefulli": [50, 165], "grad": [117, 129, 140, 171, 172, 173, 174, 175, 180, 181], "grad_fn": [170, 172, 173, 178], "grade": [44, 45, 46, 118, 129, 146, 157, 193], "graded_output": 118, "gradient": [19, 20, 171, 172, 173, 174, 176, 178], "gradual": [129, 178], "graduat": [129, 196], "graham": [117, 129, 131, 132, 133], "grai": [173, 188, 191, 193, 194, 201], "graido": 179, "grain": 142, "granbul": 167, "grand": 129, "grandeur": 129, "grandli": 129, "grandpar": 104, "grant": [46, 129, 140], "granul": 129, "grape": 48, "graph": [1, 5, 131, 147, 171, 177, 190, 193, 197, 199], "graph_obj": 12, "graphic": [25, 72, 129, 170, 175, 178, 194, 196, 200, 202], "grasp": 131, "grass": 167, "grate": [117, 139], "grather": 139, "gravel": 167, "graviti": [75, 91, 94, 100], "gray_r": 191, "grayscal": [10, 18, 20, 173, 174, 188], "great": [105, 117, 118, 127, 129, 130, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 173, 174, 176, 178, 187, 193, 194, 199, 200, 201, 202], "greater": [44, 46, 47, 49, 50, 73, 81, 83, 91, 96, 105, 129, 149, 152, 156], "greatest": [176, 178, 179], "greatli": 129, "greek": [29, 30, 102, 131], "green": [0, 17, 18, 19, 20, 48, 90, 129, 137, 170, 171, 173, 177, 188, 191, 192, 194], "greenhous": [136, 137], "greens_r": 191, "greet": [38, 75, 78, 95, 103], "greet_modul": 81, "greg": [127, 136, 137, 139, 140, 144], "gregori": [136, 137], "gregorykamradt": [117, 118, 131, 132], "grei": [17, 18, 19, 20, 139, 186, 188, 191, 192, 197], "greninja": 167, "gretta": 78, "grew": [129, 140], "greyish": 188, "greys_r": 191, "grid": [9, 12, 14, 147, 149, 150, 179, 186, 191, 196, 198, 199, 200, 201], "grid_kw": 191, "gridlin": 147, "gridsiz": 196, "gridspec": 201, "gridspec_kw": [196, 201], "grill": 130, "grim": 129, "grimer": 167, "grind": 129, "grip": [195, 200], "grotl": 167, "groudon": 167, "groudonprim": 167, "ground": [102, 117, 118, 129, 135, 167, 171, 172, 178, 179], "group": [1, 25, 117, 129, 132, 142, 156, 168, 174, 178, 186, 189, 193, 195, 196, 197, 199], "groupbi": [168, 194, 196], "grouper": 196, "grove": 129, "grovyl": 167, "grow": [0, 23, 75, 84, 95, 117, 129, 132, 133, 135, 144, 178], "growlith": 167, "grown": [135, 142], "growth": [12, 13, 14, 129, 132, 136, 137, 143, 199], "gruesom": 129, "grumpig": 167, "gt": [81, 136, 137], "gti": 129, "gtm": 137, "guancial": 117, "guarante": [55, 69, 72, 118, 129, 139, 177, 201], "guard": 129, "guava": [48, 197], "guess": [15, 16, 39, 73, 132, 139, 144, 150, 156, 171, 172, 174, 176, 177, 178, 185, 194, 195, 197, 198], "guest": [46, 129], "guestim": 142, "gui": [25, 72, 129, 132, 187, 191, 193, 197, 199], "guid": [0, 1, 23, 26, 112, 118, 133, 140, 170, 171, 173, 174, 175, 177, 179, 180, 181, 187, 188, 190], "guidanc": [1, 188], "guidebook": 179, "guidelin": 170, "guilti": 129, "gulpin": 167, "gun": 185, "gunmet": 188, "gurdurr": 167, "gusti": 117, "gusto": 143, "gutenberg": 117, "gutenbergload": 117, "guthri": 185, "gweriniaeth": 118, "gyarado": 167, "gyaradosmega": 167, "gz": [81, 173], "h": [1, 36, 40, 48, 49, 50, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 65, 66, 94, 96, 152, 173, 174, 176, 178, 185, 195, 197], "h1": 153, "h2": 153, "ha": [0, 4, 8, 12, 14, 17, 18, 19, 20, 23, 25, 28, 29, 30, 33, 35, 37, 38, 39, 40, 41, 43, 45, 46, 48, 50, 52, 53, 56, 57, 58, 60, 66, 67, 69, 70, 71, 72, 73, 75, 77, 78, 80, 81, 84, 88, 90, 92, 93, 94, 96, 97, 99, 102, 103, 104, 107, 117, 118, 127, 129, 130, 131, 132, 135, 136, 137, 138, 139, 142, 143, 144, 146, 151, 152, 153, 156, 157, 158, 159, 162, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201], "habit": [0, 199], "hack": [129, 196], "hackathon": [117, 118], "hacker": [129, 140], "hackernew": 117, "hackl": 118, "had": [0, 37, 38, 71, 75, 78, 81, 117, 129, 131, 132, 133, 139, 142, 143, 144, 152, 172, 173, 174, 176, 178, 179, 180, 181, 186, 190, 191, 194, 195, 196, 197, 198, 199, 201], "hadlei": [189, 199], "hadn": [129, 132, 174], "hale": 129, "half": [117, 129, 142, 144, 170, 172, 177, 188, 198], "halfwai": 129, "hall": 142, "hallucin": 143, "halt": 72, "halv": [117, 129, 173], "hamm": 31, "hamming_distance_a": 31, "hamming_distance_b": 31, "hamper": 81, "hamster": 178, "hand": [0, 1, 48, 56, 57, 69, 76, 78, 99, 102, 103, 129, 132, 133, 135, 138, 139, 144, 170, 171, 172, 174, 176, 177, 179, 186, 189, 190, 191, 194, 197, 199, 201], "handcraft": [174, 178], "handel": [23, 74], "handi": [25, 117, 132, 146, 147, 156, 167, 168, 174, 178, 181, 189, 190, 193, 194, 196, 199, 200, 201], "handl": [6, 25, 35, 36, 37, 50, 53, 66, 67, 69, 70, 71, 73, 78, 118, 129, 131, 143, 149, 151, 157, 165, 172, 174, 176, 177, 178, 179, 190, 197, 199], "handle_error_respons": 129, "handler": 50, "handwritten": [6, 8, 17, 19, 173], "hang": [129, 170], "hank": 78, "happen": [28, 35, 36, 37, 41, 48, 49, 97, 99, 104, 105, 117, 118, 129, 131, 132, 133, 139, 140, 144, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187], "happi": [5, 12, 14, 50, 53, 54, 75, 88, 95, 102, 127, 139, 144, 171, 190, 195, 199], "happili": 0, "happin": 14, "happind": [12, 14], "happini": 167, "har": [174, 178], "hard": [23, 40, 69, 79, 118, 126, 129, 131, 132, 133, 136, 137, 139, 142, 144, 170, 171, 172, 175, 177, 178, 179, 201], "hardcod": [171, 179], "hardcor": 142, "harder": [129, 174, 177], "hardli": [117, 129], "hardtop": 168, "hardwar": [0, 19, 20, 52, 99, 117, 129, 132, 134, 170, 171, 173, 174, 176, 177, 178, 179, 181], "hariyama": 167, "harj": 129, "harmless": 187, "harmon": [2, 28], "harper": 78, "harri": [103, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166], "harsh": 129, "harvard": [129, 132, 196], "has_w2": 91, "hasattr": [103, 139, 143], "hash": [85, 90, 129], "hashabl": 57, "hashtag": 139, "hasn": [171, 172, 174, 177], "hassl": 117, "hat": [33, 174, 177], "hatch": 146, "hatchback": [156, 157, 168], "hate": [130, 132], "haunt": 129, "haunter": 167, "have": [0, 1, 2, 5, 6, 7, 8, 9, 11, 15, 16, 17, 18, 19, 20, 24, 28, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 65, 67, 69, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 99, 102, 103, 104, 105, 107, 110, 116, 117, 118, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206], "haven": [60, 129, 132, 171, 172, 176, 178, 191, 193, 194, 199], "hawk": 40, "hawlucha": 167, "haxoru": 167, "hazard": 129, "hazel": 129, "hazi": 201, "he": [40, 53, 69, 72, 73, 102, 117, 118, 129, 132, 135, 142, 143, 144, 174, 178, 200], "head": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 118, 129, 135, 139, 144, 146, 156, 167, 168, 170, 172, 176, 179, 185, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 201, 203], "headcount": 138, "header": [75, 78, 127, 129, 159, 160, 163, 165, 166, 167, 196, 201], "headlin": [126, 142], "headquart": 129, "heal": 129, "health": [12, 14, 129, 134, 139, 142, 143, 172], "healthcar": [139, 143], "healthi": 129, "healthkit": 118, "heap": 129, "hear": [129, 136, 137, 140, 142], "heard": [129, 144, 179], "heart": [27, 136, 137, 172, 178], "hearti": [129, 130], "heat": [117, 130, 201, 204], "heathkit": [118, 129], "heatmap": [201, 203], "heatmor": 167, "heatran": 167, "heaven": 129, "heavi": [146, 174, 196, 199], "heavier": 129, "heaviest": 129, "heavili": [129, 142, 191, 192], "hedg": 129, "heedless": 129, "heel": 129, "hei": [40, 55, 127, 136, 137, 144, 178], "height": [118, 129, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 187, 190, 191, 197], "height_ratio": 196, "heinlein": 129, "held": [118, 199], "heliolisk": 167, "helioptil": 167, "hello": [23, 25, 36, 37, 38, 40, 44, 45, 48, 53, 54, 55, 57, 67, 71, 75, 78, 81, 85, 90, 91, 93, 94, 95, 96, 97, 101, 103, 104, 127, 181, 193], "hello009": 53, "hello99": 53, "hello99world66": 53, "hello_world": 181, "hellohellohello": 53, "helloworld": [48, 49, 50, 53, 54, 55, 57], "help": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 25, 40, 43, 48, 49, 50, 54, 60, 61, 62, 65, 66, 72, 73, 75, 79, 81, 86, 89, 91, 97, 102, 109, 113, 117, 118, 127, 129, 130, 131, 132, 133, 135, 136, 137, 140, 142, 143, 144, 146, 147, 149, 156, 157, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 183, 186, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201], "helper": [48, 118, 128, 133, 136, 137, 172, 173, 175, 182], "helper_funct": [172, 173, 176, 178, 179], "helpless": 129, "helsinki": 69, "henc": [43, 44, 48, 49, 50, 52, 53, 54, 55, 58, 60, 69, 76, 80, 81, 93, 95, 96, 97, 99, 102, 105, 132, 151, 170, 171, 172, 178, 185, 186, 189, 190, 197, 198, 199, 201], "her": [117, 129, 139, 142, 144, 198], "heracross": 167, "heracrossmega": 167, "herb": 130, "herdier": 167, "here": [5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 35, 36, 37, 38, 39, 40, 48, 49, 50, 52, 54, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 102, 103, 104, 105, 109, 112, 113, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 137, 138, 139, 142, 143, 144, 151, 152, 153, 157, 158, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "herebi": 129, "hereon": 201, "heroku": 129, "heterogen": [55, 156, 158, 164], "hex": [52, 53, 188, 190, 192], "hexadecim": [52, 53, 92, 95], "hexagon": 190, "hexpoint": 107, "hf": 179, "hh": 53, "hhmm": [61, 62], "hi": [0, 40, 56, 67, 72, 117, 118, 129, 131, 135, 139, 142, 143, 178, 198, 199], "hibern": 137, "hidden": [1, 8, 35, 102, 117, 129, 172, 173, 174, 175, 177, 178, 180, 181], "hidden_unit": [172, 173, 174, 175, 180, 181], "hide": [37, 39, 102, 129, 188, 196], "hiden": 173, "hierarch": [156, 157, 159, 166, 203], "hierarchi": 84, "high": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 82, 117, 129, 135, 137, 139, 140, 142, 143, 146, 147, 149, 150, 156, 170, 173, 174, 176, 177, 178, 186, 190, 195, 196, 197, 198, 200], "high_end": 137, "higher": [12, 13, 14, 15, 16, 17, 18, 19, 20, 45, 80, 94, 99, 129, 140, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 189, 190, 196, 198], "higher_order_funct": 37, "highest": [9, 81, 126, 129, 156, 170, 172, 173, 174, 177, 185, 190, 193, 195, 197], "highli": [1, 69, 103, 107, 118, 129, 149, 173, 178, 179, 186, 190, 191, 193, 194, 195, 196, 197, 200], "highlight": [129, 139, 144, 178, 179, 187, 189, 201, 203], "hike": 144, "hill": [5, 6], "hilltop": 129, "him": [117, 129, 133, 143], "himself": [107, 118, 129, 142, 143], "hint": [73, 128, 139, 154, 168, 170, 172, 173, 174, 176, 178, 197], "hip": 129, "hippopota": 167, "hippowdon": 167, "hire": [129, 132, 142], "hispan": 185, "hist": [9, 12, 14, 146, 147, 191, 192, 200, 201], "hist_kw": 187, "histogram": [9, 12, 14, 187, 190, 191, 192, 194, 197, 200], "histohram": [9, 12, 14], "histori": [9, 118, 129, 135, 138, 144], "histplot": 192, "histtyp": 200, "hit": [71, 179], "hitch": 129, "hitmonchan": 167, "hitmonle": 167, "hitmontop": 167, "hl": 188, "hls_palett": 188, "hmm": [139, 178, 179, 196, 200], "hmmm": [177, 198], "hmph": 129, "hn": 129, "hnloader": 117, "ho": [53, 167, 176, 177, 178, 179], "hoax": 129, "hobbi": 157, "hoffman": 185, "hold": [17, 18, 19, 20, 54, 77, 78, 91, 107, 117, 131, 133, 136, 137, 150, 174, 179, 181, 193, 196, 198, 201], "holder": [142, 143], "hole": 129, "holi": 178, "hollow": 129, "home": [102, 117, 129, 138, 140, 170], "home_print": 138, "homebrew": 133, "homemad": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "homepag": [143, 179], "homework": [190, 191, 194, 197, 199], "homogen": [55, 150], "hon": 25, "honchkrow": 167, "honda": 168, "honedg": 167, "honei": 50, "honest": 193, "honestli": [129, 191, 195, 196, 199], "honor": 199, "hood": [118, 137, 195, 196], "hook": [118, 174], "hoopahoopa": 167, "hoorai": 44, "hoothoot": 167, "hootsuit": 144, "hope": [48, 53, 75, 129, 132, 139, 170, 185, 189, 191, 197, 199, 200], "hopefulli": [129, 131, 132, 139, 142, 173, 174, 176, 178, 179], "hoppip": 167, "horac": [174, 178], "horitzont": 153, "horizon": [129, 174, 198], "horizont": [32, 53, 118, 149, 153, 174, 178, 186, 193, 194, 195, 196, 197, 199, 201], "horizontalalign": 178, "horowitz": 142, "horrai": 44, "horribl": 129, "horrifi": [129, 132], "hors": 129, "horsea": 167, "horsepow": [156, 157, 167, 168], "hose": 171, "hospit": 129, "host": [128, 129, 142, 170, 177, 179], "hostnam": [72, 177], "hot": [26, 112, 129, 130, 179, 191], "hot_r": 191, "hottest": 118, "hotz": 178, "houndoom": 167, "houndoommega": 167, "houndour": 167, "hour": [61, 62, 64, 65, 66, 104, 129, 144, 146, 171, 178, 179, 198], "hous": [1, 103, 129, 132, 144, 170, 199], "how": [0, 1, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 35, 36, 37, 38, 39, 40, 43, 45, 48, 49, 50, 52, 55, 56, 58, 60, 66, 69, 71, 72, 73, 76, 77, 78, 80, 82, 83, 85, 94, 95, 99, 102, 103, 104, 105, 110, 117, 118, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 156, 157, 158, 160, 162, 163, 164, 165, 166, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 189, 190, 194, 196, 197, 198, 199, 200, 201, 206], "how_to_describe_ton": 139, "howard": [171, 176], "howdi": 40, "howev": [39, 40, 44, 45, 48, 55, 57, 58, 67, 72, 73, 77, 90, 91, 93, 94, 97, 99, 102, 103, 104, 105, 107, 129, 132, 138, 142, 143, 144, 150, 151, 152, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 202], "hp": 167, "hr": 132, "href": 170, "hrv": 118, "hspace": [17, 18, 19, 20, 196], "hstack": [9, 12, 149, 200], "hsv": [189, 191, 194, 195, 197, 198], "hsv_r": [191, 194], "html": [25, 26, 53, 69, 102, 112, 118, 129, 135, 136, 137, 141, 142, 143, 144, 152, 156, 171, 172, 173, 188, 199, 203], "http": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 117, 118, 127, 129, 132, 133, 135, 136, 137, 139, 140, 141, 143, 144, 146, 152, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 192, 199, 203], "httplib": 127, "httplib_request_kw": 127, "httplib_respons": 127, "hu": 50, "hub": [117, 176, 178], "hubspot": 144, "hue": [188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "hue_kw": [200, 201], "hue_ord": [189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "hug": 174, "huge": [33, 93, 117, 129, 132, 166, 176, 178, 188, 193, 196, 199, 201], "huggingfac": [173, 176, 178], "huggingface_hub": 179, "huh": 129, "human": [1, 39, 40, 58, 90, 99, 117, 118, 129, 130, 138, 139, 142, 144, 171, 179, 200, 208], "human_input": 118, "human_message_prompt": [128, 130, 144], "human_message_prompt_combin": 144, "human_message_prompt_map": [142, 144], "human_templ": [128, 130, 142, 144], "humanmessag": [117, 118, 130, 134, 136, 138, 144], "humanmessageprompttempl": [117, 118, 128, 130, 134, 142, 144], "humili": 129, "hun": 118, "hundr": [39, 129, 170, 201], "hung": 129, "hungari": 190, "hungri": [45, 176], "hunt": [41, 75, 95, 178], "huntail": 167, "hunter": 129, "husband": [129, 144], "hush": 129, "husl": [188, 197], "hustl": 142, "huyen": 179, "hwc": [173, 174], "hwchase17": 139, "hybrid": [132, 178, 196], "hydreigon": 167, "hyperbol": 83, "hyperparamet": [171, 172, 173, 175, 177, 178, 181], "hypno": 167, "hypot": [81, 83], "hypothesi": 8, "i": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 50, 52, 58, 60, 61, 62, 63, 65, 66, 67, 70, 71, 72, 73, 74, 76, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 110, 111, 112, 114, 119, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 171, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206, 208], "i1": 32, "i2": 32, "i3": 32, "i9": 179, "i_1": 32, "i_2": 32, "i_3": 32, "i_m": 32, "i_n": 32, "i_num": 73, "ia": 185, "iat": 156, "ibm": 129, "ic": [10, 129, 136, 167], "icefir": [191, 193, 194, 195, 196, 199, 200, 201], "icefire_r": 191, "iceland": [12, 14, 72], "ici": 129, "icon": [0, 25, 178], "id": [44, 75, 78, 81, 97, 103, 117, 118, 132, 136, 137, 146, 166, 170, 175, 185, 186, 197, 198, 199], "id_var": [195, 201], "idd": 118, "idea": [29, 30, 35, 36, 86, 90, 95, 107, 118, 127, 129, 131, 132, 135, 139, 140, 142, 144, 171, 172, 173, 175, 176, 177, 178, 179, 191, 193, 194, 195, 199, 200, 201], "ideal": [49, 134, 143, 171, 172, 173, 176, 177, 178, 179, 185, 186, 188, 193, 196, 197, 199, 200], "idel": 129, "ident": [29, 30, 129, 136, 137, 149, 150, 152, 156, 166, 190, 197, 198, 200], "identif": 9, "identifi": [1, 8, 23, 38, 53, 58, 72, 75, 80, 81, 84, 90, 91, 96, 97, 101, 102, 117, 129, 136, 137, 139, 140, 156, 157, 158, 161, 163, 165, 173, 179, 197, 199], "identitytransform": 194, "ideologi": 178, "idual": 178, "idx": [174, 178], "idx1": 173, "idx3": 173, "ieee754_realbin": 31, "ifetch": 195, "ifram": 179, "igglybuff": 167, "igma": 30, "ignor": [48, 49, 50, 85, 90, 129, 131, 137, 160, 163, 171, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203], "ignore_index": [161, 162], "igor": 175, "ii": [26, 112, 129, 189], "iii": 185, "iinfo": 154, "ij": [29, 30, 32], "ill": 129, "illeg": [71, 90], "illumin": 188, "illumis": 167, "illustr": [4, 5, 6, 11, 12, 13, 14, 15, 16, 17, 36, 48, 49, 57, 72, 73, 86, 107, 129, 174, 178, 185, 186, 187, 194, 196, 200, 201], "iloc": [118, 156, 167], "imag": [1, 5, 6, 8, 10, 17, 18, 19, 20, 25, 26, 69, 79, 92, 103, 112, 118, 129, 139, 170, 171, 172, 173, 175, 180, 181, 183, 186, 188, 190, 199, 200, 201], "image01": [174, 175, 181], "image02": 174, "image101": 174, "image102": 174, "image154": 174, "image155": 174, "image167": 174, "image24": 174, "image25": 174, "image37": 174, "image_batch": 178, "image_class": 174, "image_conv_feature_map": 178, "image_out_of_conv": 178, "image_out_of_conv_flatten": 178, "image_out_of_conv_flattened_reshap": 178, "image_patch_1": 178, "image_patch_1_posit": 178, "image_patch_2": 178, "image_patch_2_posit": 178, "image_patch_3": 178, "image_patch_3_posit": 178, "image_path": [174, 175, 176, 177, 178, 179, 180, 181], "image_path_list": 174, "image_permut": 178, "image_resolut": 178, "image_s": [17, 18, 19, 20, 176, 177], "image_transform": 176, "imageclassif": [176, 177, 178, 179], "imagefold": [175, 180, 181], "imagefoldercustom": 174, "imagenet": [172, 174, 176, 177, 178, 179], "imagenet1k_v1": 176, "imagenet_v1": 176, "imagenet_v2": 176, "imageri": 139, "imagin": [40, 97, 129, 132, 138, 156, 171, 172, 173, 177, 178, 179], "imaginari": [52, 71, 92, 93, 154, 189], "imbal": 187, "img": [70, 173, 174, 176, 179, 180, 181, 190], "img_as_arrai": 174, "img_batch": [174, 180, 181], "img_custom": 174, "img_permut": 174, "img_singl": [174, 180, 181], "img_siz": 178, "imgseek": 25, "imit": [13, 129], "immedi": [36, 45, 48, 49, 66, 67, 72, 75, 88, 107, 129, 178, 179, 185], "immens": [140, 187], "immers": 142, "immut": [48, 53, 54, 55, 56, 57, 75, 92, 93, 153], "imp": 81, "impa": 143, "impact": [117, 118, 139, 142, 189, 194], "imperfect": 52, "implement": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 35, 37, 38, 39, 50, 52, 54, 55, 73, 75, 81, 90, 99, 102, 104, 105, 107, 126, 129, 143, 144, 152, 170, 171, 172, 173, 176, 178, 189, 190, 191, 201, 208], "impli": [53, 54, 69, 70, 90, 96, 129], "implic": [129, 143, 194], "implicit": [53, 107, 139], "implicitli": [52, 90, 107, 129, 168], "import": [1, 2, 23, 25, 26, 28, 29, 30, 31, 32, 33, 38, 40, 43, 49, 52, 55, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 77, 80, 82, 83, 85, 89, 90, 91, 99, 101, 102, 107, 112, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "import_ipynb": 81, "importantli": 173, "importerror": 71, "importlib": 81, "imposs": [95, 133, 178, 179, 196], "impport": 0, "impress": [117, 129, 139, 142], "improp": 71, "improv": [1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 75, 118, 131, 132, 139, 140, 143, 156, 165, 170, 171, 173, 174, 176, 177, 178, 179, 208], "impur": 129, "imshow": [17, 18, 19, 20, 173, 174, 176, 178], "in_channel": [173, 174, 175, 178, 180, 181], "in_featur": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "inan": 196, "inbox": [127, 129, 132], "inbuilt": [92, 153, 160], "inc": 38, "incas": 170, "inch": [129, 146], "incid": [185, 197], "incit": 129, "includ": [7, 25, 26, 35, 40, 45, 48, 49, 50, 53, 54, 69, 72, 81, 85, 86, 88, 93, 99, 103, 107, 110, 112, 117, 118, 126, 127, 128, 129, 131, 132, 139, 140, 142, 143, 144, 147, 150, 153, 156, 157, 168, 171, 173, 174, 175, 176, 178, 179, 180, 181, 185, 186, 191, 195, 201, 202, 206], "inclus": [81, 82, 150, 156, 188], "incom": [78, 118, 134, 190], "incompat": 178, "incomplet": 90, "inconsist": [71, 170], "incorpor": [129, 130, 173, 174, 177, 178, 186], "incorport": 130, "incorrect": [45, 49, 71, 90, 99, 117, 118, 179], "increas": [8, 12, 13, 14, 15, 16, 17, 18, 49, 50, 54, 90, 131, 132, 136, 137, 142, 143, 172, 173, 174, 176, 177, 178, 179, 188, 190, 194, 195, 198, 199, 201], "incred": [139, 177], "incredibli": 128, "increment": [48, 49, 50, 77, 105], "ind": 54, "inde": [129, 194, 195, 196, 197, 201], "indefinit": 49, "indent": [23, 44, 45, 47, 48, 50, 69, 71, 75, 77, 101, 136, 137], "indentationerror": [71, 90], "independ": [5, 6, 13, 15, 16, 17, 18, 99, 118, 127, 129, 140, 186, 189, 197, 198], "index": [4, 5, 12, 14, 15, 16, 17, 18, 19, 20, 29, 30, 31, 36, 40, 49, 53, 56, 57, 66, 71, 72, 81, 93, 95, 132, 133, 135, 142, 149, 150, 167, 168, 171, 172, 173, 174, 176, 177, 178, 179, 190, 197, 199, 200, 201], "index1": 157, "index2": 157, "index_nam": [133, 142], "index_on": 156, "indexerror": [53, 54, 55], "indi": 118, "india": [136, 139], "indianr": 192, "indic": [2, 9, 13, 17, 18, 19, 20, 44, 53, 54, 55, 66, 69, 71, 90, 129, 131, 151, 160, 161, 164, 171, 175, 176, 177, 178, 179, 180, 181, 185, 189, 191, 193, 195, 196, 197, 199], "indirect": 104, "indirectli": 73, "individu": [53, 56, 69, 81, 129, 137, 139, 142, 151, 172, 175, 178, 187, 191, 193, 195, 196, 197, 198, 199, 200, 202], "indivis": 199, "indulg": 117, "industri": [1, 129, 132, 134, 142, 143, 157, 158, 170], "ineff": 129, "ineffici": [48, 79], "inexpens": 129, "inexplic": 135, "inf": [35, 81, 152, 154, 194], "infam": 178, "infer": [91, 132, 138, 142, 153, 156, 157, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 190, 194, 196, 198, 199, 200, 201], "inference_mod": [172, 173, 174, 175, 176, 179, 180, 181], "inferior": 129, "infernap": 167, "inferno": 191, "inferno_r": 191, "infin": [28, 29, 30, 83, 152, 154], "infinit": [29, 30, 49, 52, 67, 79, 96, 170, 173, 176], "infit": 35, "inflow": 129, "influenc": [129, 137, 172, 179], "influenti": 177, "info": [19, 20, 85, 103, 104, 107, 132, 154, 175, 176, 177, 178, 179, 180, 181, 192], "inform": [0, 1, 7, 9, 26, 60, 69, 72, 77, 91, 107, 110, 112, 117, 118, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 156, 157, 173, 174, 176, 177, 178, 179, 193, 195, 197, 198, 199, 200, 201, 206], "informatin": 118, "infrastructur": 129, "infti": [28, 29, 30, 31], "ing": 40, "ingredi": [117, 172, 174], "inher": [1, 188], "inheret": 177, "inherit": [23, 72, 73, 106, 107, 174, 178], "inhomogen": 151, "inimit": 129, "init": [7, 9, 107, 110, 117, 131, 133, 142, 177, 206], "init_notebook_mod": 12, "initi": [4, 12, 13, 14, 19, 20, 35, 36, 48, 49, 50, 57, 69, 76, 82, 84, 91, 97, 102, 103, 104, 107, 118, 129, 131, 132, 133, 142, 149, 150, 162, 171, 172, 174, 178, 189, 192, 200, 201], "initialize_ag": [117, 118, 126, 127, 131], "initialzi": 171, "inkai": 167, "inlcud": 178, "inlin": [12, 28, 31, 80, 113, 146, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "inmemorystor": 132, "inner": [3, 8, 37, 38, 48, 49, 50, 76, 131, 152, 156, 170, 194, 195, 196], "inner_arg": 194, "inner_f": 194, "inner_fun": 76, "inner_func": 97, "inner_funct": 97, "inner_kwarg": 194, "innermost": [49, 50], "innov": [118, 139, 143], "innumer": 129, "inplac": [156, 160, 161, 162, 163, 165, 166, 167, 176, 177, 178, 179, 197], "input": [1, 5, 6, 8, 12, 14, 18, 19, 20, 35, 36, 37, 38, 39, 41, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 62, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 86, 89, 91, 92, 93, 94, 96, 99, 102, 103, 104, 105, 107, 109, 113, 117, 118, 126, 127, 129, 134, 137, 138, 139, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 174, 175, 176, 177, 180, 181, 183, 189, 193, 194, 195, 199, 200, 201, 202], "input_docu": [129, 133, 140, 142, 143, 144], "input_featur": 172, "input_formatt": 137, "input_i": 172, "input_industri": 134, "input_kei": [118, 129], "input_list": 129, "input_param_nam": 14, "input_param_name_1": 12, "input_param_name_2": 12, "input_s": [174, 176, 177, 178, 179], "input_shap": [173, 174, 175, 176, 177, 180, 181], "input_to_model": 177, "input_vari": [117, 118, 130, 131, 132, 134, 139, 140, 143], "inputsid": 104, "insan": [117, 118, 129], "insert": [53, 56, 85, 103, 117, 118, 127, 140, 149, 157, 166], "insid": [35, 37, 38, 39, 40, 41, 44, 45, 47, 50, 53, 54, 55, 56, 57, 58, 67, 69, 70, 72, 75, 76, 77, 78, 81, 85, 86, 88, 90, 91, 93, 94, 95, 97, 102, 103, 104, 105, 107, 129, 142, 144, 156, 170, 171, 173, 175, 176, 177, 178, 179, 181, 190, 195, 196, 197, 198, 201], "insight": [1, 129, 139, 140, 142, 143, 190, 194, 195, 197], "inspect": [107, 163, 171, 173, 174, 177, 178], "inspir": [8, 19, 20, 129, 139, 142, 178], "insrantli": 25, "inst_creat": 107, "insta": 151, "instacart": 143, "instagraminstagram": 140, "instal": [0, 69, 81, 117, 126, 131, 132, 133, 135, 138, 143, 170, 172, 173, 174, 176, 177, 178, 179, 187], "instanc": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 38, 48, 52, 54, 62, 71, 72, 81, 85, 90, 93, 97, 104, 107, 129, 152, 153, 156, 163, 164, 171, 172, 173, 174, 175, 178, 179, 180, 181, 193, 196, 201, 202], "instant": 80, "instanti": [52, 60, 102, 103, 107, 118, 171, 172, 173, 175, 177, 178, 179, 180, 181], "instantli": 50, "instead": [8, 10, 17, 18, 19, 20, 25, 36, 37, 39, 41, 45, 49, 71, 81, 91, 99, 102, 103, 104, 105, 129, 130, 132, 133, 140, 152, 156, 158, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 185, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 201], "instens": 174, "instinct": 129, "institut": [129, 173], "instruct": [1, 7, 44, 67, 72, 90, 110, 118, 127, 131, 136, 137, 138, 142, 143, 144, 175, 186, 205, 206], "insur": 132, "int": [17, 18, 19, 20, 25, 35, 37, 38, 48, 49, 52, 53, 54, 55, 71, 72, 73, 85, 92, 93, 94, 95, 96, 103, 104, 117, 136, 146, 162, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "int32": [150, 152, 153], "int64": [19, 20, 150, 153, 156, 157, 167, 168, 172, 179], "int8": [170, 176], "int_": 28, "int_1": 92, "int_2": 92, "intact": [129, 189], "intead": 118, "integ": [44, 46, 48, 50, 52, 53, 54, 55, 56, 57, 58, 60, 69, 72, 75, 79, 81, 82, 83, 85, 90, 92, 93, 94, 96, 138, 149, 150, 156, 157, 158, 170, 172, 174, 175, 177, 180, 181], "integr": [117, 118, 126, 129, 175, 177], "intel": [99, 129, 179], "intellectu": 129, "intellig": [129, 139, 140, 170, 173, 189, 197, 208], "intellij": 186, "intelloom": 0, "intend": [10, 18, 20, 129, 190, 201], "intens": [0, 129, 139, 174, 189], "intent": [85, 117, 127, 189, 197], "inter": [195, 197, 198], "interac": 179, "interact": [1, 8, 12, 24, 25, 26, 36, 69, 81, 88, 95, 103, 112, 117, 129, 130, 142, 143, 156, 170, 177, 179, 186], "intercept": 187, "intercept_stderr": 187, "interchang": [156, 170, 194], "interest": [0, 1, 36, 38, 40, 72, 97, 103, 129, 131, 135, 140, 142, 144, 162, 171, 178, 181, 186, 187, 188, 196, 197, 198, 199, 200], "interfac": [25, 39, 72, 102, 118, 126, 129, 138, 186, 188], "interg": 94, "interleaf": 129, "intermedi": 99, "intermediari": [99, 178], "intermediate_step": [127, 129], "intern": [35, 36, 39, 50, 53, 54, 69, 71, 78, 82, 102, 103, 105, 129, 157, 171, 172, 173, 188], "internal_job_id": [136, 137], "internet": [25, 126, 129, 139, 179, 191], "interp": 154, "interpol": [174, 176, 177, 178, 179, 180, 181, 190, 199], "interpolationmod": [174, 176, 177, 178, 179], "interpret": [25, 36, 40, 44, 48, 49, 50, 53, 71, 72, 75, 78, 79, 81, 85, 88, 89, 90, 94, 95, 96, 97, 101, 129, 172, 174, 189, 197, 198, 199, 200], "interquartil": 196, "interrelationship": 201, "interrupt": 71, "intersect": [48, 93], "intersect1d": 154, "intersection_upd": 57, "interspers": 172, "interst": 131, "interv": [6, 15, 16, 17, 18, 28, 29, 30, 129, 146, 149, 153, 186, 189, 191, 193, 195, 196, 197, 198, 199], "intervent": 208, "interview": [129, 143, 199, 208], "intim": 129, "intimid": [178, 179], "intiuit": 25, "intothinairbook": 131, "intrigu": [1, 185], "intrins": [185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "intro": [41, 129, 136, 137, 205], "introduc": [8, 39, 53, 142, 171, 172, 173, 177, 178, 195, 196, 200, 201], "introduct": [3, 53, 118, 127, 172, 173, 177, 178, 208], "introductori": 190, "intrud": 173, "intuit": [9, 24, 39, 156, 171, 173, 174, 177, 193], "inuit": 139, "inv": [32, 149], "invalid": [16, 47, 53, 71, 72, 81, 89, 91, 94, 95, 152], "invalidrequesterror": 129, "invent": [117, 129], "inventor": 48, "inventori": 136, "invers": [27, 50, 66, 83, 131, 149, 152], "invert": [32, 40], "invest": [129, 132, 140, 142, 143, 197], "investig": [172, 177], "investor": [129, 132, 140, 143], "invis": 196, "invit": [129, 142, 144], "invitingli": 129, "invoc": [80, 189], "invok": [0, 38, 58, 103, 105], "involv": [1, 52, 96, 104, 129, 139, 143, 144, 170, 171, 172, 173, 174, 175, 178, 179, 185, 190, 193, 195, 199, 208], "io": [133, 136, 137, 142, 172, 173, 174, 175, 179, 180, 181, 183], "ioerror": 72, "ion": [26, 112], "ip": [142, 199], "ipad": 118, "iphon": 118, "iplot": 12, "ipo": 132, "ipod": 118, "ipykernel_28927": 127, "ipykernel_3695928": 170, "ipykernel_4303": 129, "ipynb": [21, 25, 70, 81, 109, 113, 170, 174, 177, 179, 182], "ipynb_checkpoint": [70, 179], "ipython": [25, 35, 36, 37, 38, 39, 41, 49, 53, 54, 55, 56, 57, 62, 67, 69, 71, 72, 73, 76, 77, 78, 79, 81, 89, 91, 92, 93, 94, 95, 96, 102, 103, 105, 107, 118, 142, 144, 151, 152, 160, 163, 165, 168, 173, 179, 186, 188, 190, 194, 199], "iqr": 195, "ireland": 190, "iri": [4, 6, 11, 15, 146, 185, 188, 190, 191, 193, 194, 195, 203], "iris_data": [146, 203], "iris_typ": [11, 15], "iron": 35, "ironi": 139, "irrespect": 50, "irrespons": 129, "is_avail": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "is_cal": 38, "is_dir": [174, 175, 176, 177, 180, 181], "is_even": [38, 75], "is_explicit_retri": 129, "is_fil": [172, 173, 174, 176, 177, 178], "is_mar": 48, "is_marri": 91, "is_name_long": 38, "is_odd": 38, "is_return": 38, "is_uniqu": 165, "isalnum": 53, "isalpha": [49, 53], "isatti": 69, "isclos": [81, 173], "isdecim": [49, 53], "isdigit": 53, "isdisjoint": 57, "isfinit": [81, 83], "ish": 131, "ishan": 140, "isidentifi": 53, "isin": [195, 197], "isinf": [81, 83], "isinst": [52, 93, 103, 104, 129], "isl": 117, "island": 132, "islow": 53, "isn": [8, 19, 20, 128, 129, 131, 137, 139, 142, 143, 156, 163, 170, 171, 173, 174, 175, 177, 178, 179, 181, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "isnan": [81, 83], "isnul": 156, "isnumer": 53, "iso": 127, "isol": [25, 97, 129], "isotrop": [29, 30], "isprint": 53, "isqrt": 81, "isspac": [50, 53], "issu": [6, 52, 58, 77, 131, 137, 139, 144, 147, 170, 171, 172, 173, 174, 179, 188, 196, 200], "issubset": 57, "issuecom": 179, "issuperset": 57, "istitl": 53, "isupp": 53, "isuzu": 168, "ita": 118, "ital": 171, "itali": 118, "italian": 129, "item": [9, 12, 14, 17, 18, 19, 20, 35, 36, 38, 40, 41, 48, 49, 53, 57, 58, 71, 72, 80, 81, 85, 93, 103, 117, 118, 129, 136, 137, 139, 141, 143, 149, 157, 160, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 197], "items": [150, 153, 154], "iter": [5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 36, 38, 42, 50, 58, 71, 79, 81, 83, 95, 98, 118, 127, 129, 139, 142, 143, 157, 173, 174, 175, 177, 178, 179, 180, 181, 186, 197, 199, 201], "iter_obj": 35, "iteract": 179, "iterrow": [140, 156, 167, 179], "itertool": 191, "its": [1, 2, 5, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 28, 29, 30, 36, 37, 38, 48, 49, 52, 53, 54, 55, 56, 57, 60, 61, 62, 69, 75, 76, 78, 81, 85, 93, 96, 97, 99, 102, 103, 104, 107, 118, 126, 129, 131, 132, 133, 135, 136, 137, 139, 142, 143, 144, 156, 157, 158, 159, 160, 162, 164, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 190, 194, 195, 196, 201, 202, 203], "itself": [0, 8, 19, 20, 35, 37, 39, 48, 53, 55, 56, 57, 69, 73, 75, 79, 99, 102, 103, 104, 107, 118, 129, 132, 135, 170, 171, 178, 189, 196, 197, 200, 208], "iv": 40, "ivan": 78, "ivysaur": 167, "j": [5, 6, 8, 29, 30, 31, 48, 49, 50, 53, 61, 62, 69, 91, 92, 103, 118, 149, 150, 157, 178, 187, 200], "jab": 133, "jack": 159, "jaguar": 168, "jai": 178, "jaltma": 139, "jam": [53, 132], "jan": [61, 62, 88, 170, 185], "jane": [103, 159], "januari": [40, 50, 60, 61, 62, 65, 66, 117, 129, 131, 133, 135], "japan": 168, "japanesecar": 168, "jason": 94, "java": [23, 48, 49, 53, 54, 56, 90, 102, 107, 137], "javascrip": 69, "javascript": [40, 53, 58, 69, 72, 99, 102, 117, 118], "jeep": 137, "jellic": 167, "jenner": 48, "jeremi": [171, 176], "jerryjliu": 117, "jessica": 129, "jet": [188, 191], "jet_r": 191, "jetbrain": 186, "jft": 178, "jigglypuff": 167, "jill": 159, "jirachi": 167, "jit": [173, 174], "jitter": [194, 199], "jlufe": 56, "jo": [9, 179], "job": [0, 1, 40, 53, 99, 117, 118, 129, 132, 140, 142, 143, 170, 188, 189, 193, 196, 200], "job_descript": [136, 137], "job_id": [136, 137], "job_index": [136, 137], "joe": [137, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 185], "joei": 117, "john": [29, 55, 78, 129, 135, 146, 185, 199], "joi": 133, "join": [0, 31, 53, 69, 95, 117, 118, 131, 134, 139, 142, 143, 144, 177, 178, 179, 196], "joined_df": 156, "joint": [189, 198, 204], "jointgrid": [190, 192], "jointplot": [190, 191], "joke": [117, 118, 129], "jokingli": 129, "jolteon": 167, "joltik": 167, "jose": 159, "journal": 189, "journei": [118, 129, 177, 189, 201], "jpeg": [174, 175, 176, 177, 178, 179, 181], "jpg": [174, 176, 177, 179], "jpn": 118, "jr": [146, 167], "json": [25, 81, 117, 118, 127, 134, 136, 137, 138, 139, 156], "json_exampl": 69, "json_str": [134, 156], "jude": 40, "judg": 118, "judgment": 117, "judson": 117, "juic": 92, "juicebox": 140, "jul": 88, "juli": [129, 132, 178, 179], "julian": 129, "jumbl": [172, 189], "jump": [28, 50, 53, 132, 136, 137, 139, 142, 178, 189, 195, 197, 201], "jumpluff": 167, "jun": [61, 63, 88], "jun21_00": 177, "june": [50, 60, 61, 62, 63, 66, 129, 177, 187], "junior": 129, "jupyt": [0, 7, 10, 21, 23, 26, 95, 109, 110, 112, 113, 117, 133, 174, 175, 177, 180, 181, 186, 188, 205, 206, 208], "jupytext": [7, 110, 206], "just": [0, 6, 10, 17, 18, 19, 20, 35, 36, 38, 50, 53, 80, 84, 85, 93, 95, 107, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 156, 158, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "justcount": 103, "justifi": [53, 95], "justin": [129, 140], "juventu": 146, "jvm": 99, "jynx": 167, "k": [3, 29, 30, 33, 48, 49, 53, 82, 117, 129, 131, 132, 141, 142, 146, 147, 173, 174, 176, 177, 178, 179, 185, 187, 188, 193, 194], "k_depth": 199, "k_mean": 11, "kabuto": 167, "kabutop": 167, "kadabra": 167, "kaggl": [0, 10, 198], "kakuna": 167, "kamradt": 127, "kan": 129, "kanban": 140, "kangaskhan": 167, "kangaskhanmega": 167, "kappa": 82, "kapur": 6, "karen": 199, "karpathi": 170, "karrablast": 167, "kate": 55, "kb": [81, 173], "kde": [187, 190, 192, 196, 200], "kdeplot": [188, 190, 191, 200, 201], "kecleon": 167, "keen": [38, 198], "keenli": 129, "keep": [0, 5, 6, 26, 28, 36, 40, 49, 78, 84, 103, 112, 117, 129, 131, 132, 133, 136, 137, 138, 139, 141, 157, 162, 170, 172, 173, 174, 176, 177, 178, 179, 185, 187, 188, 189, 190, 196, 197, 198, 199, 200, 201], "keepdim": 154, "kei": [41, 43, 48, 54, 55, 57, 71, 72, 92, 93, 96, 117, 118, 129, 131, 132, 133, 135, 136, 137, 139, 142, 143, 144, 156, 158, 163, 165, 168, 171, 172, 174, 175, 177, 178, 179, 180, 181, 191, 200], "keldeoordinari": 167, "keldeoresolut": 167, "kenel": 192, "kenneth": [185, 188], "kenya": 139, "kept": [84, 129, 131, 171, 173, 178, 188], "kera": [179, 208], "kernel": [7, 25, 110, 173, 178, 186, 188, 191, 192, 196, 199, 206], "kernel_density_estim": 192, "kernel_list": 192, "kernel_s": [173, 174, 175, 178, 180, 181], "kevin": [118, 129], "keyboard": 23, "keyboardinterrupt": [49, 67, 71, 72, 127, 129], "keyerror": [56, 57, 159, 160, 163, 165], "keystrok": 129, "keyword": [23, 37, 38, 41, 44, 46, 48, 49, 50, 53, 54, 55, 56, 57, 58, 72, 75, 76, 80, 81, 85, 87, 95, 97, 101, 102, 103, 107, 132, 136, 137, 146, 188, 190, 199, 201], "keyword_ord": 53, "kg": 52, "kgmid": 117, "ki": 139, "kick": [0, 129, 131], "kid": [129, 132, 133, 187], "kidnei": 129, "kilcher": 178, "kill": 201, "killer": 132, "kind": [8, 35, 36, 72, 75, 78, 90, 109, 113, 117, 118, 129, 132, 140, 144, 146, 156, 163, 164, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201], "kindl": 129, "kindli": 201, "king": 129, "kingdra": 167, "kingler": 167, "kingma": 178, "kirlia": 167, "kit": [118, 129, 179], "kivi": 25, "kiwi": [48, 118], "klang": 167, "klefki": 167, "klink": 167, "klinklang": 167, "km": [104, 118], "kmean": [11, 131], "knew": [117, 118, 129, 138, 174], "know": [0, 11, 24, 36, 37, 38, 39, 48, 49, 50, 52, 72, 75, 78, 79, 81, 91, 93, 99, 104, 105, 107, 117, 118, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 144, 149, 151, 153, 159, 160, 163, 165, 170, 171, 172, 174, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "knowledg": [0, 8, 73, 118, 129, 131, 135, 137, 174, 176, 199, 200], "known": [2, 9, 11, 12, 14, 25, 29, 30, 37, 48, 49, 52, 55, 56, 76, 80, 91, 94, 99, 102, 103, 105, 129, 132, 139, 152, 170, 171, 172, 173, 174, 175, 178, 179, 185, 189, 191, 193, 194, 195, 197, 199, 200, 201], "knoxvil": 185, "koehrsen": 172, "kof": 167, "kolombia": 118, "kolombiya": 118, "kolumbi": 118, "kolumbia": 118, "kolumbiai": 118, "kolumbian": 118, "kolumbien": 118, "kolumbii": 118, "kolumbija": 118, "kolumbijsk\u00e1": 118, "kool": 53, "kor": [118, 121, 136, 145], "korea": 146, "krabbi": 167, "kricketot": 167, "kricketun": 167, "kristian": 179, "krokorok": 167, "krookodil": 167, "kubernet": 137, "kw": [129, 194, 200, 201], "kwarg": [38, 42, 72, 107, 127, 129, 163, 173, 174, 191, 194, 200, 201], "kwiatkowski": 171, "kyogr": 167, "kyogreprim": 167, "kyurem": 167, "kyuremblack": 167, "kyuremwhit": 167, "k\u00f6zt\u00e1rsas\u00e1g": 118, "l": [8, 12, 28, 36, 40, 48, 49, 50, 53, 54, 55, 56, 57, 72, 80, 94, 129, 146, 171, 178, 179, 197], "l1": 172, "l1loss": [171, 172], "l2": 172, "la": 142, "la_": [26, 112], "lab": [129, 140, 143], "label": [1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 102, 111, 118, 146, 147, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 171, 173, 174, 176, 178, 179, 180, 181, 189, 196, 197, 199, 200, 201, 203, 205], "label_batch": [174, 178, 180, 181], "label_custom": 174, "label_dist": 192, "label_map": [18, 20], "label_out": 178, "label_singl": [174, 180, 181], "label_smooth": 179, "labelbottom": [17, 18, 19, 20], "labelleft": [17, 18, 19, 20], "labels": 179, "labels_": 131, "labl": [156, 172], "labour": [0, 190], "lack": [1, 129, 144, 176], "laden": 129, "laet": [18, 20], "lai": 129, "lair": 129, "lairon": 167, "lake": 129, "lam": 193, "lambd": 82, "lambda": [28, 31, 36, 38, 89, 129, 139, 143, 156, 196], "lame": 129, "lampent": 167, "lampi\u00e3o": 31, "lanc": 118, "land": [116, 129], "landladi": 129, "landlock": 118, "landmark": 135, "landorusincarn": 167, "landorustherian": 167, "landscap": [129, 143], "lane": 173, "langchain": [126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 139, 141, 142, 143, 144, 208], "langchainai": 128, "langchaintest": 133, "langsmithhub": 117, "languag": [0, 23, 25, 39, 40, 48, 49, 50, 53, 54, 56, 58, 69, 71, 89, 90, 91, 96, 102, 103, 107, 109, 113, 118, 126, 128, 129, 131, 132, 135, 136, 137, 138, 139, 140, 143, 170, 173, 176, 178, 200, 208], "lanturn": 167, "laod": 203, "lapra": 167, "larg": [1, 25, 28, 29, 30, 31, 32, 33, 36, 54, 70, 71, 73, 81, 86, 96, 99, 129, 130, 131, 132, 143, 146, 147, 150, 152, 156, 159, 166, 168, 170, 171, 173, 174, 176, 177, 178, 179, 186, 187, 194, 195, 199], "larger": [25, 37, 75, 84, 94, 99, 128, 129, 132, 152, 170, 171, 173, 174, 175, 176, 177, 178, 179, 199], "larger_chunk_relevant_doc": 132, "largest": [57, 81, 83, 118, 142, 170, 178, 179], "lark": 132, "larvesta": 167, "larvitar": 167, "last": [8, 25, 35, 36, 37, 38, 39, 41, 48, 49, 50, 53, 54, 55, 56, 57, 62, 67, 69, 71, 72, 73, 75, 76, 77, 78, 79, 81, 85, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 107, 117, 127, 129, 132, 133, 139, 143, 144, 151, 152, 153, 156, 163, 165, 166, 170, 173, 174, 177, 178, 179, 186, 190, 191, 194, 196, 197, 199, 201], "last_index": [53, 160], "last_lett": 53, "last_nam": [38, 48, 53, 75, 91], "last_nm": 78, "lastli": [69, 195, 197, 201], "lastnam": [41, 75, 78, 91, 95, 102], "late": [129, 143, 185, 187], "latenc": [2, 9, 10, 142, 173, 179], "latency_from": 9, "latency_grid": 9, "latency_rang": 9, "latency_to": 9, "latent": [178, 198], "later": [0, 36, 39, 50, 73, 85, 90, 91, 95, 96, 103, 117, 118, 129, 132, 133, 139, 142, 143, 144, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 189, 191, 193, 194, 195, 198, 201], "latest": [25, 117, 118, 127, 131, 132, 135, 138, 140, 170, 174, 176, 177, 178, 179, 187, 199], "latex": 178, "latia": 167, "latiasmega": 167, "latin": 129, "latio": 167, "latiosmega": 167, "latitud": 199, "latlng": 118, "latter": [104, 129, 170, 177], "lattic": 200, "latvia": 190, "lauder": 139, "launch": [25, 129, 140, 142, 177, 179], "lavish": 129, "lavishli": 129, "law": [129, 131, 132], "layer": [1, 8, 102, 126, 132, 170, 171, 172, 173, 174, 175, 179, 180, 181], "layer_1": 172, "layer_2": 172, "layer_3": 172, "layer_norm": 178, "layer_numb": [19, 20], "layer_stack": 173, "layout": [12, 129, 175, 179, 181, 201], "lazi": [36, 48], "lb": 146, "lc": [117, 118], "ldexp": [81, 83], "ldot": [53, 178], "lead": [53, 71, 81, 117, 118, 129, 131, 142, 172, 173, 176, 177, 178], "leader": 118, "leadership": 144, "leaf": 129, "leafeon": 167, "leap": 198, "learn": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 35, 36, 37, 39, 40, 41, 45, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 95, 97, 102, 103, 104, 105, 116, 118, 129, 132, 135, 139, 140, 142, 143, 144, 147, 149, 156, 158, 159, 161, 163, 164, 165, 166, 168, 172, 173, 174, 175, 180, 181, 183, 184, 185, 189, 190, 191, 195, 197, 198, 199, 200, 201, 202], "learnabl": [177, 178], "learnable_embed": 178, "learner": [0, 136, 137, 170, 177], "learning_r": [12, 13, 14, 175, 181], "learnpytorch": 183, "learnt": [0, 19, 20, 193, 194, 195, 199, 201], "least": [8, 19, 20, 25, 36, 40, 54, 56, 67, 97, 103, 107, 129, 131, 133, 139, 152, 172, 173, 174, 176, 178, 179, 187, 190, 191, 193, 194, 195, 197, 199], "leather": 129, "leaureat": 0, "leav": [0, 49, 57, 118, 129, 132, 143, 171, 172, 173, 174, 176, 177, 179, 191, 193, 194, 196, 197, 199, 201], "leavanni": 167, "lectur": [0, 53, 140, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "lecun": 178, "led": [117, 132, 139, 142], "ledft": 187, "ledian": 167, "ledyba": 167, "lee": [129, 146, 185], "left": [17, 18, 19, 20, 28, 29, 31, 33, 35, 40, 48, 53, 61, 62, 64, 84, 95, 96, 104, 105, 129, 132, 146, 147, 151, 156, 172, 173, 174, 176, 177, 178, 179, 186, 187, 190, 194, 196, 197, 198], "leftov": [129, 173], "leg": 104, "legal": [118, 129, 134, 142, 144], "legandari": 167, "legend": [9, 11, 14, 15, 16, 17, 18, 26, 112, 146, 147, 171, 174, 179, 189, 191, 194, 196, 197, 198, 199, 200, 201], "legend_": 194, "legend_el": 179, "legend_out": [189, 198, 201], "legendari": 167, "legit": 129, "lego": [171, 178], "leisur": 139, "lembk": 185, "lemon": 72, "len": [15, 16, 17, 18, 19, 20, 29, 30, 31, 36, 38, 48, 49, 50, 53, 57, 58, 62, 91, 96, 117, 118, 127, 129, 131, 132, 133, 134, 136, 137, 140, 141, 142, 143, 144, 149, 160, 163, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "lenght": 131, "length": [10, 11, 15, 36, 40, 41, 48, 52, 53, 57, 82, 91, 93, 96, 102, 104, 117, 129, 131, 146, 149, 152, 156, 163, 165, 167, 168, 172, 173, 174, 176, 177, 178, 179, 180, 181, 185, 187, 189, 190, 193, 197, 201], "length_1": 179, "length_2": 179, "lengthi": [36, 84, 196], "leq": 28, "lesli": 185, "less": [9, 12, 14, 36, 44, 45, 46, 49, 50, 58, 67, 73, 83, 96, 99, 105, 117, 128, 129, 132, 136, 137, 139, 142, 156, 170, 171, 172, 174, 176, 177, 178, 179, 189, 200], "lesser": [45, 156], "lesson": [129, 132, 142, 143, 156, 176, 177], "let": [2, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 52, 53, 55, 57, 58, 60, 66, 67, 69, 71, 72, 75, 76, 77, 79, 80, 81, 85, 94, 95, 96, 97, 102, 103, 104, 105, 107, 110, 117, 118, 128, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206], "letter": [29, 30, 40, 48, 49, 50, 53, 57, 58, 71, 81, 89, 91, 118, 129, 170], "lettervalu": [198, 204], "level": [6, 9, 15, 16, 17, 18, 25, 47, 52, 72, 75, 84, 116, 118, 121, 126, 129, 140, 142, 144, 146, 156, 157, 159, 160, 165, 173, 174, 177, 179, 181, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "level_0": 157, "level_index": 160, "levelsio": 139, "leverag": [138, 143, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 199], "lewi": 185, "lex": 176, "lf": 179, "lfloor": 96, "lg_doc": 129, "lg_loader": 129, "lgamma": [81, 83], "li": [27, 118, 129], "lib": [53, 62, 81, 117, 118, 127, 129, 131, 132, 133, 154, 160, 163, 164, 165, 170, 173, 174, 185, 188, 192, 194], "librari": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 29, 30, 53, 83, 86, 90, 117, 118, 130, 131, 137, 140, 142, 147, 149, 156, 157, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208], "licens": [25, 140, 156, 167, 168, 179], "lichen": 118, "lichtenstein": 129, "lickilicki": 167, "lickitung": 167, "lie": [107, 129], "liepard": 167, "life": [12, 14, 24, 76, 126, 129, 131, 132, 133, 135, 139, 142, 144, 178, 200], "lifecycl": 177, "lifelong": [136, 137], "lifestyl": 129, "light": [129, 139, 146, 177, 178, 179, 188], "light_medium": 146, "lightblu": 187, "lighter": 201, "lightest": 129, "lightli": 117, "lightn": 129, "like": [1, 2, 4, 5, 6, 7, 8, 15, 16, 17, 18, 23, 25, 32, 33, 35, 36, 38, 39, 40, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 75, 78, 80, 81, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 109, 110, 113, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 147, 149, 152, 153, 156, 157, 158, 159, 160, 164, 165, 166, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206], "likelihood": 192, "likewis": [164, 166], "lileep": 167, "lili": 137, "lillig": 167, "lillipup": 167, "lim_": [28, 29, 30, 31], "limb": 129, "lime": 72, "limit": [48, 52, 73, 76, 79, 93, 105, 118, 129, 131, 132, 139, 140, 143, 170, 174, 176, 177, 178, 179, 185, 187, 193, 196, 199, 200, 201, 203], "limitless": 189, "limousin": 199, "linalg": [32, 131, 149, 152, 154], "lindayacc": 139, "line": [5, 7, 12, 13, 14, 15, 16, 17, 18, 23, 25, 26, 27, 37, 39, 40, 43, 49, 50, 53, 56, 57, 58, 69, 71, 72, 75, 76, 78, 80, 81, 89, 92, 93, 96, 99, 103, 104, 109, 110, 112, 113, 117, 118, 127, 129, 139, 144, 152, 153, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201, 206], "line2d": [26, 112], "line_count": 69, "line_kw": [189, 190], "linear": [3, 6, 8, 9, 11, 17, 18, 19, 20, 24, 104, 149, 170, 174, 175, 176, 177, 178, 179, 180, 181, 187, 188, 189, 190, 191, 193, 195, 198, 199, 201, 208], "linear1": 178, "linear2": 178, "linear_lay": [171, 178], "linear_layer_stack": 172, "linear_regress": [12, 13, 14], "linearli": [8, 19, 20, 189, 199], "linearregress": [12, 13, 14], "linearregressionmodel": 171, "linearregressionmodelv2": 171, "linearsegmentedcolormap": 188, "linecollect": 194, "linefe": 53, "lineplot": 199, "liner": 6, "linestyl": [146, 147, 197], "linetoolong": 127, "linewidth": [146, 147, 186, 187, 193, 194, 195, 196, 199, 200, 201, 202], "linez": 134, "linger": 129, "link": [25, 99, 117, 118, 128, 129, 136, 137, 139, 140, 170, 174, 175, 176, 177, 178, 179, 188, 189, 190, 198, 199, 201], "linkedin": [143, 144], "linkedinindustri": 134, "linkedinlinkedin": 140, "linoon": 167, "linregress": 187, "linregressresult": 187, "linspac": [12, 13, 14, 15, 16, 26, 112, 149, 154, 186, 192, 199, 201], "linux": 69, "liquid": 130, "lisp": [129, 135], "list": [10, 11, 15, 23, 35, 36, 38, 40, 41, 52, 57, 59, 60, 69, 71, 80, 82, 83, 84, 85, 89, 90, 92, 94, 95, 96, 102, 103, 104, 105, 107, 117, 118, 127, 129, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 156, 160, 162, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201], "list1": [48, 54, 75, 80, 81, 93, 141, 158], "list2": [54, 80, 141, 158], "list3": 54, "list_": 36, "list_1": 103, "list_enumer": 53, "list_nam": 54, "list_of_class_nam": 174, "list_of_cmap": 200, "list_of_list": [48, 58], "list_siz": 48, "listdir": 179, "listedcolormap": 197, "listen": [140, 142], "listliter": 90, "lit": 129, "liter": [23, 53, 61, 62, 71, 72, 78, 85, 90, 91, 94, 95, 96, 101, 139], "literatur": 139, "lithuania": 190, "litleo": 167, "littl": [9, 11, 17, 18, 19, 20, 97, 104, 117, 129, 130, 132, 133, 144, 151, 170, 172, 173, 177, 178, 179, 187, 189, 193, 194, 196, 197, 198, 200, 201], "litwick": 167, "live": [0, 38, 53, 69, 72, 102, 117, 118, 129, 132, 133, 137, 139, 144, 171, 177, 178, 179], "liverpool": 201, "livestream": 178, "livingston": 129, "ljust": [31, 53, 95], "ll": [21, 48, 50, 72, 75, 80, 84, 103, 109, 113, 117, 118, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 202], "llama": 117, "llc": 129, "llm": [0, 118, 126, 127, 128, 131, 132, 133, 134, 135, 136, 137, 138, 140, 144, 208], "llm3": [131, 142], "llm4": [131, 142], "llm_chain": [118, 129], "llm_output": [117, 130], "llm_prefix": 127, "llmchain": [117, 118, 129, 130, 132, 140, 144], "llmchainextractor": 132, "llmresult": 130, "lm": [188, 199, 204], "lmax": 31, "lmk": 132, "lmplot": [190, 191], "ln_layer": 178, "lo": 117, "load": [69, 81, 85, 99, 117, 118, 131, 134, 135, 138, 139, 141, 142, 143, 144, 176, 178, 180, 181, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204], "load_and_split": 118, "load_dataset": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "load_dotenv": [117, 118, 128, 130, 131, 132, 133, 136, 138, 139, 141, 142, 143], "load_ext": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 177], "load_imag": 174, "load_qa_chain": [129, 133], "load_state_dict": [171, 173, 177, 179], "load_summarize_chain": [117, 118, 129, 131, 140, 142, 143, 144], "load_tool": [117, 118, 126], "loaded_effnetb2_food101": 179, "loaded_model_0": 171, "loaded_model_1": 171, "loaded_model_1_pr": 171, "loaded_model_2": 173, "loaded_model_2_result": 173, "loaded_model_pr": 171, "loader": [118, 131, 132, 133, 135, 140, 141, 143, 174, 175, 177, 178, 180, 181], "loan": 129, "lobbi": 132, "loc": [146, 147, 153, 156, 167, 179, 194, 196, 197], "loc_var": 76, "local": [5, 6, 23, 25, 36, 37, 60, 62, 63, 64, 65, 66, 67, 71, 77, 80, 87, 97, 103, 104, 107, 117, 118, 129, 139, 142, 156, 170, 171, 173, 176, 191], "local_lang": 76, "local_tim": 66, "localtim": [64, 67], "locat": [1, 40, 53, 54, 69, 71, 81, 84, 91, 95, 96, 104, 117, 118, 133, 136, 137, 138, 140, 147, 167, 172, 174, 176, 177, 179, 180, 181, 194, 195, 196, 199], "location_chain": 117, "locator_param": 187, "lock": 129, "locket": 81, "locomot": 129, "log": [81, 82, 83, 128, 129, 132, 137, 149, 153, 177], "log10": [52, 81, 83], "log1p": [81, 83], "log2": [81, 83], "log_dir": 177, "logarithm": [52, 81, 83], "logdir": 177, "logger": 129, "logic": [0, 43, 45, 79, 105, 107, 117, 139, 156, 160, 163, 174, 179], "logical_and": 154, "logical_not": 154, "logist": [3, 134, 189, 190], "logistic_regress": [9, 11, 15, 16, 17, 18], "logisticregress": [15, 16, 17, 18], "logit": [173, 174, 176, 178, 179, 180, 181], "lognormvari": 82, "logo": [69, 70, 129], "logo1": 70, "logos22": 140, "logspac": [26, 112], "logx": 189, "lombr": 167, "london": [38, 60, 64, 69, 72, 102, 160], "lone": 129, "long": [0, 38, 43, 49, 50, 52, 53, 58, 89, 90, 92, 97, 107, 117, 118, 129, 131, 132, 133, 137, 139, 142, 144, 153, 171, 173, 174, 176, 177, 178, 179, 180, 181, 187, 193, 194], "long_nam": 38, "longer": [12, 13, 14, 15, 16, 17, 18, 19, 20, 39, 53, 81, 102, 129, 132, 142, 144, 171, 172, 173, 174, 176, 177, 178, 179, 192], "longest": 173, "longitud": 199, "longtensor": 172, "look": [0, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 35, 37, 38, 39, 40, 43, 50, 52, 69, 71, 76, 79, 81, 84, 85, 89, 90, 94, 95, 102, 104, 105, 107, 118, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 167, 170, 171, 172, 173, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "looker": [136, 137], "lookuna": 53, "lookup": [126, 156, 173], "loom": 129, "loop": [5, 23, 41, 43, 51, 53, 54, 55, 56, 57, 67, 69, 72, 78, 90, 95, 118, 127, 131, 143, 152, 156, 170, 175, 177, 178, 179, 180, 181, 197], "loos": [8, 117, 139], "loosen": 132, "lopunni": 167, "lopunnymega": 167, "lose": [0, 69, 129, 132, 144, 171], "loss": [94, 131, 139, 175, 177, 180, 181, 201], "loss_fn": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "lossfunct": 174, "lost": [53, 129], "lot": [0, 5, 6, 23, 26, 36, 48, 49, 53, 79, 81, 84, 99, 112, 117, 118, 126, 129, 131, 132, 133, 134, 139, 143, 144, 151, 170, 171, 172, 173, 174, 176, 177, 178, 187, 189, 197, 199], "lotad": 167, "loud": 129, "loudr": 167, "love": [0, 25, 38, 40, 95, 117, 127, 129, 130, 131, 136, 137, 139, 140, 144, 170, 171, 179], "low": [12, 13, 14, 15, 16, 17, 18, 19, 20, 82, 117, 129, 136, 137, 142, 147, 150, 174, 190, 195, 198], "low_end": 137, "lower": [29, 30, 40, 53, 94, 126, 129, 147, 151, 152, 170, 171, 173, 174, 177, 178, 179, 187, 195, 196, 198, 199, 200], "lowercas": [40, 53, 81, 89, 91, 170], "lowess": [189, 191], "lowest": [81, 156, 170, 173, 174, 177, 195, 197], "lowland": [129, 135], "lp": 129, "lr": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "lsr": [187, 190], "lst": [37, 58, 72], "lst_one": 72, "lst_two": 72, "lstrip": 53, "lt": [136, 137], "lucario": 167, "lucariomega": 167, "lucia": 103, "lucidrain": 178, "luck": [129, 131], "lucki": 129, "luckili": [118, 178], "lucr": 1, "ludicolo": 167, "lugia": 167, "luke": [126, 196], "lumber": 129, "lumineon": 167, "lump": 195, "lunaton": 167, "lunch": [1, 129, 132, 139, 179, 189, 193, 194, 196, 201], "lure": 129, "lusti": 129, "lut": 203, "luvdisc": 167, "lux": 118, "luxembourg": [118, 190], "luxio": 167, "luxrai": 167, "luxuri": [117, 129], "lvplot": 199, "lw": [26, 112, 193, 194, 197, 199, 201], "ly": 129, "m": [0, 4, 5, 6, 9, 29, 30, 32, 40, 48, 50, 54, 55, 60, 61, 62, 63, 64, 65, 66, 67, 81, 83, 88, 89, 91, 94, 95, 104, 117, 118, 129, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 170, 171, 173, 174, 176, 177, 178, 179, 185, 188, 193, 195, 197, 201], "m1": [32, 170], "m2": [32, 170], "m3": 170, "m_": [29, 30, 32], "ma": [40, 117, 173], "maaan": 40, "mac": 170, "machamp": 167, "machin": [0, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 104, 116, 129, 130, 140, 170, 171, 172, 173, 174, 175, 176, 181, 189, 197, 198, 200, 201], "machine_learn": 197, "machinehack": 0, "machineri": 156, "machok": 167, "machop": 167, "maco": [70, 170], "macreadi": 1, "macro": 129, "macro_cas": 91, "mad": 128, "made": [0, 40, 71, 73, 97, 99, 103, 117, 118, 129, 130, 132, 138, 139, 142, 144, 171, 172, 173, 174, 175, 176, 177, 179, 199], "madrid": 146, "mae": [171, 172], "magazin": 129, "magbi": 167, "magcargo": 167, "magic": [38, 105, 118, 128, 129, 133, 135, 177, 178, 179, 181, 186], "magikarp": 167, "magma": [188, 189, 191], "magma_r": 191, "magmar": 167, "magmortar": 167, "magnemit": 167, "magnet": 199, "magneton": 167, "magnezon": 167, "magnific": 129, "magnitud": [5, 6, 33, 104, 105, 174, 189, 197], "mai": [2, 4, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 36, 40, 52, 53, 54, 55, 57, 60, 61, 67, 72, 73, 75, 77, 78, 84, 88, 94, 97, 99, 102, 103, 104, 107, 117, 118, 129, 131, 132, 133, 135, 136, 137, 139, 142, 143, 144, 151, 156, 157, 158, 160, 161, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "mail": [40, 127, 154], "mailbox": 81, "main": [29, 30, 32, 40, 52, 55, 76, 77, 81, 85, 91, 102, 103, 104, 107, 117, 129, 132, 140, 170, 171, 172, 173, 175, 180, 181, 182, 183, 193, 197, 199, 202], "main1": 77, "main_tab_text": 117, "main_tag": 177, "mainfact": 118, "mainfram": 0, "mainli": [48, 117, 129, 178, 181], "maintain": [86, 143, 189], "mainten": 208, "major": [9, 36, 95, 129, 172, 175, 178, 180, 181, 193, 194, 197, 198], "majorli": [156, 157, 189, 193, 194, 198, 199, 201], "make": [0, 1, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 29, 30, 36, 37, 38, 39, 40, 41, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 69, 71, 72, 73, 75, 76, 77, 79, 81, 84, 86, 89, 90, 91, 94, 95, 97, 99, 102, 104, 105, 107, 112, 117, 118, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 156, 157, 158, 160, 161, 163, 183, 185, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "make_blob": [172, 200], "make_circl": 172, "make_kd": 191, "make_multiplier_of": 37, "make_predict": 173, "make_pretti": 38, "make_sound": 107, "make_uppercas": 38, "makedir": 181, "maker": 118, "mako": [191, 199, 203], "mako_r": 191, "makuhita": 167, "malamar": 167, "male": [69, 102, 167, 185, 189, 192, 194, 195, 196, 197, 201], "male_dinn": 196, "male_lunch": 196, "malign": [6, 15, 16, 17, 18], "maltreat": 129, "mammal": 104, "mammalnam": 104, "mamoswin": 167, "man": [39, 40, 117, 118, 129, 139, 195, 197], "manadatori": 189, "manag": [40, 75, 81, 84, 118, 129, 130, 136, 137, 140, 171, 173, 174, 175, 176, 177, 178, 180, 181, 199], "manaphi": 167, "manchest": [102, 146], "mandatori": [55, 60, 75, 78, 90, 103, 107, 189, 193, 194, 201], "mandibuzz": 167, "manectr": 167, "manectricmega": 167, "mango": [48, 54, 72, 92, 95, 158, 197], "manh": 31, "manhattan": 194, "manhattan_dist": 31, "mani": [0, 5, 6, 7, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 29, 30, 40, 48, 49, 50, 53, 57, 69, 70, 72, 73, 81, 85, 96, 102, 103, 107, 109, 110, 113, 117, 118, 129, 131, 132, 133, 137, 142, 143, 144, 146, 152, 153, 156, 161, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 188, 194, 199, 200, 202, 206], "manifold": 131, "manipul": [39, 53, 60, 81, 129, 132, 152, 156, 166, 173, 174, 178, 201], "mankei": 167, "mann": 139, "manner": [38, 43, 48, 49, 104, 118, 131, 193, 199], "manner_of_death": 185, "mantin": 167, "mantissa": 83, "mantyk": 167, "manual": [1, 5, 6, 8, 35, 72, 73, 131, 133, 153, 171, 178, 179], "manual_se": [170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181], "manual_transform": [176, 177, 178], "manufactur": [103, 134, 173], "map": [1, 8, 18, 20, 27, 58, 90, 97, 117, 118, 134, 140, 142, 143, 144, 156, 163, 171, 172, 174, 178, 188, 190, 191, 194, 196, 200, 201, 204], "map_chain": 131, "map_datafram": 201, "map_diag": [191, 200], "map_loc": 179, "map_low": [191, 200], "map_offdiag": 200, "map_prompt": [131, 140, 142, 143, 144], "map_prompt_templ": [131, 140, 143], "map_reduc": [117, 118, 129, 131, 140, 142, 143, 144], "map_rerank": 129, "map_upp": [191, 200], "mapper": 163, "mappingmethod": 90, "mapreduc": 143, "mapreducedocumentschain": [117, 129, 140, 144], "maprerankdocumentschain": 129, "mapsto": 31, "maptplotlib": 201, "mar": [88, 127], "maractu": 167, "marathon": 129, "marc": 117, "march": [40, 50, 129, 173], "marco": 129, "mareep": 167, "margin": [12, 129, 174, 190, 193], "margin_titl": [198, 201], "maria": 129, "maril": 167, "marin": [130, 144], "mariya": 48, "mark": [43, 44, 48, 56, 75, 85, 88, 90, 95, 103, 117, 129, 146, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 192, 194, 197], "markdown": [25, 117, 118, 134, 136, 137, 143, 175, 178, 205], "markdownfil": [7, 110, 206], "markdownifi": [136, 137, 143], "markedli": [21, 109, 113], "marker": [11, 12, 146, 147, 185, 189, 190, 191, 194, 195, 197, 199, 200, 201], "markeredgecolor": 146, "markerfacecolor": 147, "markers": 146, "market": [0, 1, 102, 118, 129, 131, 132, 140, 142, 143, 144], "marketplac": [136, 140, 142], "marks_df": 156, "marks_dict": 156, "marksaroufim": 170, "markup": [109, 113, 129], "maroon": 129, "marowak": 167, "marri": 91, "marshtomp": 167, "martin": 118, "martrix": 170, "martyr": 129, "marvel": 129, "mask": [160, 201], "masquerain": 167, "mass": [75, 91, 129, 156], "massachusett": 129, "massiv": [156, 159], "master": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 142], "masterstudentclass": 103, "mat": 151, "mat1": [170, 173, 174], "mat2": [170, 174], "match": [62, 78, 118, 121, 127, 129, 132, 134, 137, 140, 145, 160, 163, 165, 170, 171, 172, 174, 176, 177, 178, 179, 190, 192, 195, 196, 201], "match_replac": 40, "match_scor": 134, "matching_tone_sampl": 139, "materi": [8, 171, 175, 176, 178, 182], "matern": 139, "math": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 52, 56, 71, 87, 95, 112, 117, 126, 129, 178], "mathbb": [32, 33, 178], "mathbf": [172, 178], "mathemat": [0, 25, 29, 30, 33, 48, 57, 58, 81, 96, 105, 135, 156, 172, 178, 187, 190, 195, 197, 199, 208], "mathemet": 116, "mathew": 146, "mathpix": 178, "matlab": [48, 69, 91, 99, 102, 151, 152], "matmul": [152, 170], "matplotlib": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 28, 31, 112, 131, 171, 172, 173, 174, 176, 177, 178, 179, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "matric": [27, 34, 152], "matrix": [8, 9, 17, 18, 19, 20, 27, 29, 30, 58, 149, 150, 151, 153, 156, 172, 177, 200, 201, 202, 203], "matrixmultipl": 170, "matruc": 152, "matter": [38, 50, 72, 75, 78, 129, 132, 133, 139, 170, 174, 177, 193], "matthew": 185, "mattress": 129, "mawil": 167, "mawilemega": 167, "max": [5, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 31, 35, 36, 57, 104, 149, 152, 153, 154, 156, 168, 173, 174, 176, 179, 185, 190, 192, 193, 201], "max_inst": 107, "max_iter": [11, 15, 16, 17, 18, 19, 20], "max_pool_lay": 173, "max_pool_tensor": 173, "max_row": 156, "max_siz": [174, 177, 178, 180, 181], "max_spe": 104, "max_token": [131, 134, 136, 137], "maxim": 1, "maximum": [11, 15, 16, 17, 18, 19, 20, 40, 49, 79, 102, 129, 132, 146, 149, 152, 153, 156, 170, 172, 173, 174, 192, 195, 196], "maxpoo2d": 173, "maxpool2d": [174, 175, 180, 181], "maxsiz": 81, "maxsplit": 40, "maxyear": 60, "maya": 140, "mayb": [48, 117, 129, 132, 136, 137, 142, 171, 199], "mazda": 168, "maze": 1, "mb": [9, 19, 20, 173, 174, 176, 177, 178, 179], "mba": [129, 132, 140], "mbconv": 176, "mbox": [26, 112], "mccarthi": [129, 135], "mckinnei": 129, "mco": 118, "md": [7, 21, 109, 110, 113, 136, 137, 143, 206], "mdkir": 179, "mdoel": 177, "me": [0, 45, 53, 95, 118, 128, 129, 131, 132, 133, 135, 136, 137, 139, 140, 142, 143, 144, 175, 176, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 199, 200, 201], "meadow": 129, "meal": [117, 129, 130, 139], "meal_chain": 117, "mealtim": 179, "mean": [2, 3, 5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 28, 32, 33, 37, 39, 40, 44, 45, 48, 49, 50, 53, 54, 55, 57, 60, 61, 62, 66, 71, 76, 78, 81, 89, 90, 92, 93, 94, 95, 96, 102, 103, 105, 107, 112, 117, 118, 129, 131, 132, 133, 134, 138, 139, 142, 149, 150, 153, 156, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 187, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201], "meaning": [158, 173, 201], "meant": [118, 129, 135, 176, 185], "meantim": [129, 173], "meantin": 172, "meanwhil": [117, 129, 132, 190, 194, 197, 199, 201], "measur": [1, 10, 11, 15, 34, 117, 129, 171, 172, 173, 185, 187, 190, 193, 194, 195, 198, 199], "meat": [136, 137, 138], "mechan": [24, 85, 152, 178, 189, 199, 202], "media": [118, 134, 144], "median": [81, 146, 149, 153, 156, 194, 195, 196, 197, 199], "medianprop": 146, "medic": [118, 129, 131], "medicham": 167, "medichammega": 167, "medicin": 129, "medit": 117, "meditit": 167, "medium": [26, 36, 112, 117, 129, 130, 146, 170, 188], "medium_heavi": 146, "meet": [44, 117, 118, 127, 129, 142, 143, 144, 194, 195], "mega": 167, "megabyt": [177, 178, 179], "meganium": 167, "melbourn": 137, "mellon": 8, "meloettaaria": 167, "meloettapirouett": 167, "melt": [129, 193, 194, 195, 201], "melt_df": 195, "member": [39, 57, 102, 103, 129, 142, 190, 196], "membership": [118, 142], "memor": [29, 30, 189], "memori": [19, 20, 35, 48, 52, 53, 54, 69, 71, 79, 91, 93, 96, 97, 99, 102, 103, 118, 129, 149, 153, 156, 170, 171, 173, 174, 178, 186, 199], "memory_kei": 118, "memoryerror": [71, 72], "men": [129, 188], "mennen": 48, "mental": [139, 142], "mention": [8, 36, 53, 72, 85, 117, 128, 129, 132, 136, 137, 142, 144, 156, 177, 178, 186, 190, 194, 197, 198, 199, 201], "mentioned_parent_tweet_text": 128, "mentor": 139, "menu": [92, 140, 174, 188], "meow": 107, "meowsticfemal": 167, "meowsticmal": 167, "meowth": 167, "merced": 168, "mercenari": 129, "merchant": [118, 129], "merci": [117, 129], "mercuri": 129, "mere": [107, 129], "merg": [105, 156, 178, 179, 196], "merrili": 129, "meshgrid": [9, 154, 172], "mesprit": 167, "mess": [129, 167], "messag": [0, 5, 6, 37, 44, 45, 46, 47, 71, 72, 73, 75, 78, 85, 118, 127, 128, 134, 136, 138, 139, 140, 142, 144, 170, 179], "message_id": 127, "message_text": 127, "message_url": 127, "messageprompttempl": 130, "messi": [48, 49, 129, 143, 146], "met": [37, 45, 49, 118, 129, 162], "meta": [40, 170], "metadata": [117, 132, 135, 136, 137, 144, 174], "metadata_field_info": 132, "metagross": 167, "metagrossmega": 167, "metal": 118, "metang": 167, "metaphor": 129, "metapod": 167, "metaprogram": 38, "meteo": 126, "meter": 199, "meth": 107, "method": [25, 29, 30, 32, 35, 36, 37, 38, 39, 48, 49, 58, 60, 61, 62, 63, 64, 65, 70, 71, 72, 73, 78, 81, 84, 85, 90, 95, 99, 103, 105, 107, 118, 127, 129, 131, 132, 136, 137, 142, 144, 152, 156, 157, 160, 163, 165, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 185, 189, 190, 195, 196, 197, 198, 199, 200, 201, 203], "method_4_prompt_templ": 139, "methodologi": 140, "meticul": 177, "metric": [1, 137, 170, 171, 174, 175, 176, 177, 179, 180, 181, 203], "metropolitan": 118, "mew": 167, "mewtwo": 167, "mewtwomega": 167, "mfm": 142, "mfm_pod_alex": 142, "mfm_pod_rob": 142, "mfm_pod_steph": 142, "mfmpod": 142, "mib": 178, "michael": [140, 185], "microchip": [6, 16], "microcomput": [118, 129], "microphon": 117, "microprocessor": 139, "microsecond": [61, 62, 64], "microsoft": [129, 136, 137, 139, 140, 170, 179], "mid": [96, 129, 143], "middai": 129, "middl": [72, 129, 142, 151, 172, 174, 193, 195, 196, 197], "midnight": 129, "midwiv": 139, "mienfoo": 167, "mienshao": 167, "mig": 170, "might": [0, 2, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 37, 49, 50, 52, 67, 72, 107, 129, 131, 132, 133, 136, 137, 142, 144, 150, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 187, 189, 193, 194, 195, 196, 197, 198, 200, 201], "mighti": 129, "mightyena": 167, "mike": 129, "milaan": [38, 48, 53, 56, 69, 71, 72, 75, 78, 81, 91, 94, 96, 102, 104, 168], "milan": [53, 69, 103], "mild": 129, "mile": [118, 129, 197], "mileag": [156, 157, 167, 191, 193], "mileagedf": 168, "mileston": [177, 178, 179], "mill": 129, "million": [129, 136, 142, 176, 177], "milot": 167, "miltank": 167, "mime": 167, "mimic": [173, 178], "mimick": 139, "min": [5, 12, 13, 14, 15, 16, 57, 149, 152, 153, 154, 156, 185, 190, 192, 193, 198, 201], "min_row": 156, "minc": 117, "minccino": 167, "mind": [28, 43, 58, 78, 129, 131, 132, 133, 136, 137, 139, 142, 173, 174, 175, 177, 178], "mine": [117, 129, 134, 136, 137, 170, 171, 178, 179], "mini": [129, 142, 144, 173, 175, 176, 177, 178, 196], "miniatur": 129, "minim": [4, 8, 80, 129, 132, 139, 175, 177, 180, 181, 185], "minimum": [5, 6, 12, 13, 14, 15, 16, 17, 18, 19, 20, 54, 129, 146, 149, 153, 156, 170, 172, 187, 195, 196], "mink": [31, 129], "minkowski_distance_a": 31, "minkowski_distance_b": 31, "minor": 132, "minu": [96, 195], "minun": 167, "minut": [19, 20, 61, 62, 64, 65, 66, 129, 140, 170, 171, 172, 173, 174, 176, 177, 179, 193, 194, 198], "minyear": 60, "miracul": 129, "mirror": [79, 137, 200], "misc": 85, "misdreavu": 167, "misinterpret": [129, 188], "mislead": 190, "mismagiu": 167, "mismatch": [107, 170, 172, 173], "miss": [12, 13, 14, 15, 16, 17, 18, 45, 71, 72, 78, 127, 129, 131, 132, 133, 135, 150, 157, 166, 179, 197, 199], "missing_label": 163, "mission": 95, "mistak": [0, 54, 71, 99, 117, 129, 132, 195], "mistakenli": 129, "mistress": 129, "mit": [129, 172, 173, 179, 196], "mitchel": 139, "mitsubishi": 168, "mix": [54, 55, 56, 57, 78, 130, 150, 151, 170, 177, 179, 193, 194, 195, 199], "mix_fruit": 48, "mixtur": [117, 130], "mkdir": [81, 171, 173, 174, 175, 176, 177, 179, 180, 181], "ml": [0, 3, 24, 140, 175, 177, 179, 197], "mlc": 194, "mlflow": 177, "mlop": [0, 177, 179], "mlp": 8, "mlp_block": 178, "mlp_block_output": 178, "mlp_dropout": 178, "mlp_layer": 178, "mlp_size": 178, "mlpblock": 178, "mlxtend": 173, "mm": [60, 62, 63, 170, 177], "mmr": 141, "mmr_relevant_doc": 141, "mmxxiii": 117, "mn": [32, 40], "mnist": [6, 8, 17, 18, 19, 20, 173], "moat": 143, "mobil": [139, 142, 170, 176, 179], "mock": 144, "mod": [81, 154], "modal": 196, "mode": [12, 25, 69, 72, 81, 82, 103, 133, 167, 171, 172, 173, 174, 176, 179, 182, 183, 194, 195], "model": [1, 5, 9, 99, 102, 103, 116, 118, 121, 126, 128, 129, 131, 132, 133, 135, 137, 139, 140, 143, 144, 145, 182, 183, 184, 187, 189, 191, 198, 199, 200, 208], "model_": 200, "model_0": [171, 172, 173, 174, 175, 180, 181], "model_0_df": 174, "model_0_result": [173, 174, 180, 181], "model_1": [171, 173, 174, 181], "model_1_df": 174, "model_1_result": [173, 174], "model_2": [172, 174, 181], "model_2_result": 173, "model_3": 172, "model_4": 172, "model_acc": 173, "model_build": [181, 183], "model_loss": 173, "model_nam": [117, 118, 128, 131, 136, 137, 139, 142, 143, 171, 173, 175, 177, 178, 179, 180, 181], "model_path": [171, 173], "model_s": 179, "model_save_path": [171, 173, 175, 180, 181], "model_select": 172, "model_size_legend": 179, "model_weight": 177, "moder": [129, 139], "modern": [139, 173, 176, 177, 178], "modf": [81, 83], "modif": [39, 102, 104, 153, 160, 163, 165, 166, 194, 197, 198, 199, 201], "modifi": [37, 38, 39, 48, 49, 53, 54, 58, 67, 69, 76, 77, 81, 93, 95, 96, 129, 142, 151, 156, 161, 167, 173, 177, 194, 196, 198, 199, 208], "modul": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 35, 36, 37, 38, 39, 40, 41, 49, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 65, 67, 69, 70, 71, 72, 73, 76, 78, 79, 80, 87, 90, 91, 92, 93, 94, 95, 96, 97, 102, 103, 105, 107, 127, 129, 135, 151, 152, 160, 163, 165, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 189, 194, 199, 201], "modular": [75, 143, 176, 177, 178, 179, 184], "modulo": [71, 105], "modulu": [96, 105], "mohanda": [177, 179], "moistur": [147, 194], "moisturizersalesdata": 147, "moltr": 167, "moment": [97, 129, 139, 174, 194, 201], "momentum": [132, 172, 178], "mon": [50, 61, 62, 139, 177], "monaco": 118, "mondai": [61, 62, 66, 117, 118], "monei": [129, 132, 140, 142, 143, 193, 194], "monetari": 178, "monferno": 167, "monitor": [144, 179, 208], "monkei": 196, "monologu": 142, "monoton": 104, "monster": 129, "month": [50, 61, 62, 63, 64, 65, 66, 117, 118, 129, 131, 142, 143, 144, 178, 197, 199, 202], "month_numb": 147, "monthli": 179, "monthlist": 147, "montreal": 118, "mood": 139, "moon": [75, 129, 130], "moor": [129, 132], "morain": 129, "moral": [118, 187], "more": [0, 1, 5, 6, 7, 8, 12, 13, 14, 15, 16, 17, 18, 21, 24, 25, 26, 29, 30, 32, 35, 36, 37, 39, 41, 43, 45, 48, 50, 52, 54, 55, 56, 57, 58, 60, 61, 66, 67, 69, 70, 71, 72, 73, 75, 76, 78, 80, 81, 82, 85, 89, 90, 91, 92, 97, 99, 102, 103, 104, 105, 107, 109, 110, 112, 113, 117, 118, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 150, 151, 152, 153, 156, 157, 162, 165, 167, 168, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 206], "moreland": 188, "moreov": [1, 69, 129], "mormon": 142, "morn": [75, 78, 95, 129], "morphism": 102, "morri": 129, "mortal": 139, "most": [0, 1, 23, 25, 27, 29, 35, 36, 37, 38, 39, 40, 41, 49, 52, 53, 54, 55, 56, 57, 62, 67, 69, 71, 72, 73, 76, 77, 78, 79, 81, 90, 92, 93, 94, 95, 96, 99, 102, 103, 104, 105, 107, 109, 113, 117, 118, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 142, 143, 151, 152, 156, 158, 160, 163, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 193, 194, 195, 196, 197, 198, 199, 201, 202], "mostli": [49, 53, 129, 143, 177, 178, 179, 188, 201], "mother": 129, "mothim": 167, "motion": 129, "motiv": [40, 129, 132, 143], "motorcycl": 8, "motto": [118, 170, 171, 172, 173, 177, 178], "mountain": [129, 132], "mous": [54, 55], "move": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 44, 48, 50, 69, 97, 128, 129, 132, 135, 136, 137, 138, 139, 142, 143, 163, 172, 173, 174, 175, 178, 186, 187, 190, 193, 194, 195, 197, 199, 200, 201], "move_fil": 138, "movefiletool": 138, "movement": [1, 137], "movi": [126, 142, 200], "mozzarella": 117, "mp": 170, "mpimg": [17, 18, 19, 20], "mpl": 197, "mr": [129, 167], "mrdbourk": [174, 175, 176, 177, 178, 179, 180, 181], "mri": 199, "mro": 104, "mrr": 142, "msa_block": 178, "msa_block_output": 178, "msa_lay": 178, "msablock": 178, "msc": 25, "mse": 172, "mseloss": 172, "msg": [37, 38, 75, 78, 185, 192], "mt": 32, "mtransform": 194, "mu": [9, 82], "mu_param": 9, "much": [1, 5, 8, 12, 13, 14, 23, 25, 29, 30, 36, 39, 56, 81, 117, 118, 129, 130, 131, 132, 135, 136, 137, 142, 144, 153, 170, 171, 172, 173, 174, 175, 178, 179, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201], "mudkip": 167, "muir": 129, "muir_lake_tahoe_in_wint": 129, "muk": 167, "mul": [81, 170], "mulitpl": 170, "mult": [174, 176], "multi": [0, 92, 93, 132, 157, 158, 173, 174, 176, 177, 179, 196, 200, 201], "multi_queri": 132, "multiclass": [172, 173], "multideriv": 104, "multidimension": [149, 151, 156], "multihead": 178, "multihead_attn": 178, "multihead_self_attention_block": 178, "multiheadattent": 178, "multiheadselfattentionblock": 178, "multiindex": [156, 159, 160, 163, 166], "multilay": 8, "multilayer_perceptron": [19, 20], "multilayerperceptron": [19, 20], "multilevel": 197, "multilin": [40, 53, 80, 90, 92, 93], "multiline_str": [53, 92], "multimedia": 25, "multip": 27, "multipl": [0, 1, 5, 8, 13, 19, 20, 25, 29, 30, 36, 38, 46, 48, 50, 53, 54, 57, 58, 69, 76, 78, 80, 89, 90, 92, 96, 99, 102, 105, 107, 117, 118, 129, 132, 144, 149, 150, 156, 157, 159, 161, 162, 166, 168, 171, 172, 173, 177, 178, 179, 187, 188, 189, 193, 194, 195, 196, 199, 200, 201], "multiple_vari": 58, "multipli": [12, 13, 14, 15, 16, 17, 18, 32, 37, 48, 49, 55, 60, 75, 79, 85, 86, 95, 96, 149, 152, 170, 174], "multiqueryretriev": 132, "multitouch": 25, "multivari": [3, 5, 6, 9, 201], "multivariate_gaussian": 9, "multivariate_norm": [188, 189, 190, 200], "munch": 139, "munchlax": 167, "munger": 142, "munna": 167, "murdoch": 142, "murkrow": 167, "musharna": 167, "music": [84, 118, 132], "musk": 142, "must": [28, 32, 35, 37, 38, 47, 48, 52, 53, 54, 55, 56, 57, 69, 70, 72, 75, 76, 78, 79, 82, 84, 85, 89, 90, 91, 93, 94, 97, 99, 103, 104, 107, 118, 127, 129, 133, 137, 147, 151, 157, 161, 162, 170, 171, 172, 178, 179, 186, 187, 194, 201], "mustard": 130, "mut": 193, "mutabl": [48, 54, 55, 56, 57, 93, 156], "mutat": 151, "mute": 196, "mutlipl": [170, 179], "mv": [176, 177, 178, 179], "mx": 170, "my": [6, 49, 52, 53, 69, 72, 76, 77, 85, 91, 93, 103, 107, 117, 118, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 144, 146, 147, 170, 172, 173, 174, 176, 177, 179, 188, 193, 195, 196, 197, 199], "my_addit": 86, "my_ag": 45, "my_data": 70, "my_dict": 56, "my_dict1": 56, "my_dict2": 56, "my_dict3": 56, "my_document_create_tim": 117, "my_document_id": 117, "my_document_sourc": 117, "my_func": 76, "my_gen": 36, "my_it": 35, "my_list": [35, 36, 54, 80, 150, 156], "my_list1": [54, 150], "my_list2": [54, 150], "my_list3": 54, "my_list4": 54, "my_list5": 54, "my_matrix": 150, "my_modul": 81, "my_nam": 91, "my_noun": 117, "my_set": [48, 57], "my_str": [36, 53], "my_text": 117, "my_tupl": 55, "my_tuple1": 55, "my_tuple2": 55, "my_tuple3": 55, "my_tuple4": 55, "my_vaccin": 48, "mychesstutor": 142, "myclass": 89, "mygraph": 146, "mymethod": 104, "mynewclass": 103, "myself": [0, 129, 132, 135, 144], "myspac": 128, "myst": 205, "mysteri": 129, "mystifi": 129, "n": [4, 5, 6, 9, 11, 13, 26, 28, 29, 30, 31, 32, 33, 35, 36, 37, 41, 44, 45, 48, 49, 50, 53, 54, 55, 58, 69, 72, 73, 75, 78, 79, 80, 81, 85, 88, 90, 91, 92, 94, 95, 98, 102, 103, 104, 112, 117, 118, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 149, 150, 153, 156, 157, 158, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 185, 193, 195, 196, 197, 199, 200], "n0": 48, "n1": 48, "n10": 48, "n21": 48, "n28": 48, "n3": 48, "n36": 48, "n45": 48, "n6": 48, "n_": 32, "n_boot": [189, 197, 198, 199], "n_cluster": 131, "n_color": 188, "n_compon": 131, "n_featur": [172, 200], "n_list": 54, "n_sampl": [172, 200], "n_tupl": 55, "na": [132, 156, 160, 161, 166], "na_valu": 168, "nacho": 179, "nafter": [160, 161, 162, 165, 166], "nag": 129, "nail": 185, "naiv": [107, 129, 177], "name": [12, 18, 20, 25, 36, 37, 38, 39, 40, 41, 48, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 62, 66, 67, 69, 70, 71, 72, 75, 76, 78, 80, 84, 85, 86, 89, 90, 92, 93, 94, 96, 98, 102, 103, 104, 105, 107, 117, 118, 127, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 156, 157, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 185, 188, 189, 190, 192, 193, 197, 199, 201], "name_to_tool_map": 127, "named_tupl": 66, "nameerror": [37, 39, 53, 54, 55, 56, 72, 76, 92, 93, 103], "nameless": 80, "names_upper_cas": 38, "namespac": [23, 37, 39, 80, 81, 84, 90, 101, 103, 107, 149, 172], "nan": [81, 83, 150, 152, 154, 157, 162, 166, 167, 168, 185, 189, 195, 197], "nanci": 129, "nand": [132, 171], "nangalo": 139, "nangel": 132, "nanoth": 132, "nanswer": 135, "nanyon": 135, "nanywher": 132, "napoleon": 131, "napr": 88, "narendramodi": 139, "narrat": 129, "narrow": [129, 144, 178, 196], "nat": [156, 157, 159, 160, 161, 162, 163, 164, 165, 166], "natali": 117, "nation": [118, 129, 146, 173], "nativ": [96, 177, 185, 186], "nativenam": 118, "natu": 167, "natur": [2, 9, 25, 38, 49, 81, 83, 97, 117, 118, 126, 129, 131, 132, 136, 137, 138, 139, 140, 149, 171, 176, 178, 179, 199, 208], "naug": 88, "navan": 143, "navi": 129, "navig": [1, 178], "nayron": [19, 20], "nb": 175, "nbagg": 186, "nbe": 132, "nbecaus": [132, 135], "nbest": 132, "nbetween": 135, "nbin": 187, "nbook": 132, "nbraden": 127, "nbubbl": 132, "nbug": 132, "nbuild": 135, "nbusi": 132, "nbut": [132, 135], "nbyte": [127, 150], "ncalifornia": 130, "ncan": 132, "nceo": 132, "nchat": 127, "ncheaper": 132, "nchw": [173, 174], "ncode": 135, "ncol": [173, 178, 187, 196, 197], "ncolumn": 163, "ncompani": 132, "ncongratul": 73, "ncontain": 69, "ncontradict": 132, "nconv_layer_2": 173, "ndarrai": [149, 150, 153, 156, 157, 158, 170, 202], "ndata": [41, 135], "ndatafram": 166, "ndebug": 132, "ndec": 88, "ndenumer": [154, 187], "ndepart": 132, "ndestroi": 132, "ndframe": 156, "ndim": [31, 149, 150, 170], "ndindex": 154, "ndo": [53, 132], "ne": 146, "nearbi": 144, "nearest": [4, 11, 174, 179], "nearli": [53, 80, 96, 129, 149, 177], "neat": 90, "neatli": 189, "necessari": [25, 35, 47, 49, 85, 117, 118, 139, 144, 165, 171, 174, 175, 177, 178, 179, 180, 181, 182, 186, 191], "necessarili": [133, 156, 173, 178, 179, 185, 189, 194, 195, 201], "necessit": 1, "neck": 129, "need": [0, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 36, 39, 40, 43, 45, 48, 49, 52, 53, 54, 55, 58, 60, 62, 63, 64, 66, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 86, 88, 91, 93, 95, 99, 103, 104, 105, 107, 110, 116, 117, 118, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 183, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 202, 206], "need_weight": 178, "needl": 129, "neg": [2, 5, 6, 16, 30, 44, 45, 46, 47, 53, 69, 83, 92, 95, 129, 154, 159, 172, 174, 190, 196], "negat": [40, 96], "negative_numb": 95, "neighbor": 129, "neighborhood": 129, "neither": [28, 47, 53, 76, 83, 129, 176, 196], "neliza": 144, "nenter": 73, "nenuemer": 48, "neq": [31, 32], "nervou": 129, "nescessarili": 152, "nest": [23, 29, 30, 38, 43, 45, 46, 51, 54, 55, 56, 76, 79, 97, 117, 137, 149, 150, 158, 194, 196, 197], "nestl": 129, "net": [0, 129, 144], "netflix": 175, "netherland": [12, 14], "netscap": 132, "netsuit": [136, 137], "network": [1, 3, 72, 116, 129, 134, 142, 153, 170, 171, 174, 175, 176, 178, 179, 180, 181, 208], "networkerror": 72, "neural": [1, 3, 116, 153, 170, 171, 174, 176, 178, 179, 208], "neural_network": [19, 20, 172], "neuron": [19, 20, 172, 173], "never": [0, 35, 49, 50, 52, 72, 91, 96, 99, 117, 129, 132, 142, 156, 171, 178, 179, 186, 188, 193], "nevertheless": 129, "new": [0, 1, 2, 5, 6, 12, 13, 14, 17, 18, 19, 20, 24, 25, 38, 39, 40, 43, 49, 53, 55, 57, 58, 61, 62, 64, 65, 69, 73, 77, 80, 91, 95, 97, 102, 103, 104, 105, 107, 117, 118, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 144, 146, 151, 153, 156, 157, 160, 161, 162, 163, 165, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201], "new_": 156, "new_ag": 163, "new_axi": 160, "new_col": 163, "new_col_nam": 156, "new_df": 167, "new_dict": 56, "new_file_nam": 70, "new_head": 166, "new_index": 163, "new_list": 80, "new_mark": 163, "new_nam": 163, "new_sig": 194, "new_str": 40, "new_valu": 156, "new_year": 64, "new_york": [60, 64], "newaxi": [31, 200], "newdir": 70, "newer": [117, 131, 132, 171, 173, 177, 178], "newli": [107, 166, 171], "newlin": [40, 53, 69, 85, 90, 92, 179], "newshap": 153, "newslett": [140, 179], "newspap": 129, "newton": [75, 117], "nexampl": 117, "nexpens": 132, "nexplicit": 132, "next": [8, 35, 36, 44, 46, 48, 49, 50, 53, 69, 71, 72, 81, 82, 90, 99, 117, 118, 129, 131, 132, 133, 139, 140, 142, 143, 144, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "next_step_output": 127, "nexusgpt": 118, "neymar": [48, 49, 146], "nf": 156, "nfar": 135, "nfeb": 88, "nfirst": [132, 172], "nfor": [48, 132, 135], "nfounder": 132, "nfrom": 135, "ng": 40, "ngeometr": 132, "ngeometri": 135, "nglhx4b33_o": 143, "ngo": 132, "ngood": 53, "ngreg": 144, "nha": 135, "nhand": 132, "nhappen": 132, "nhave": 132, "nhe": 135, "nhead": 178, "nhow": [95, 117, 132], "nhwc": 173, "ni": [48, 132, 135], "nice": [117, 118, 128, 129, 131, 138, 139, 144, 170, 171, 172, 174, 176, 177, 178, 179, 186, 188, 193, 194, 199], "nicer": [53, 197], "nicest": 129, "nichol": 185, "nidok": 167, "nidoqueen": 167, "nidoran": 167, "nidorina": 167, "nidorino": 167, "nif": 132, "night": [78, 129, 136, 196], "nightclub": 142, "nightli": [176, 177, 178, 179], "nightmar": 0, "nikla": [5, 6], "nin": [53, 132], "nincada": 167, "nine": [40, 129], "ninetal": 167, "nineti": 53, "ninjask": 167, "ninvest": 132, "ninvestor": 132, "nipy_spectr": 191, "nipy_spectral_r": [191, 193], "nissan": 168, "nit": [132, 135], "nj": 32, "njam": 132, "njul": 88, "njun": 88, "njust": [132, 135], "nknow": 132, "nla": 127, "nlabel": 172, "nld": 118, "nlike": 135, "nlist": 164, "nloosen": 132, "nlp": [0, 176, 178], "nltk": 135, "nm": 32, "nmai": 88, "nman": 132, "nmar": 88, "nmarket": 132, "nmatter": 132, "nmax": 173, "nmccarthi": 135, "nmillion": 132, "nmore": 132, "nmulti": 90, "nn": [170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 196], "nnew": 170, "nnois": 132, "nnorm": 132, "nnotat": 135, "nnov": 88, "nnumber": 178, "no_grad": 171, "no_of_nonna_valu": 162, "no_of_sid": 104, "nob": 187, "nobl": [0, 129], "noct": 88, "noctowl": 167, "node": [8, 19, 20, 137], "nof": [132, 135], "noften": 132, "nohtyp": 53, "noibat": 167, "nois": [129, 132, 133, 136, 137, 142, 143, 172, 189, 194], "noisi": 132, "noisier": 196, "noivern": 167, "nomin": [6, 15, 16, 17, 18], "non": [0, 3, 5, 6, 8, 11, 19, 20, 32, 37, 41, 44, 49, 53, 69, 70, 78, 82, 103, 117, 127, 132, 156, 162, 174, 176, 178, 179, 185, 186, 189, 191, 193, 199], "non_full_backward_hook": [173, 174], "noncommitt": 139, "nondynamicallyquantizablelinear": 178, "none": [38, 39, 40, 44, 48, 49, 56, 66, 69, 72, 75, 78, 82, 85, 89, 90, 92, 103, 117, 127, 129, 130, 132, 137, 138, 153, 154, 156, 157, 160, 161, 162, 163, 165, 166, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "nonlinear": [5, 8, 13, 19, 20, 189], "nonloc": [23, 77, 87, 89, 97], "nonlov": 76, "nonmarinemamm": 104, "nonneg": [149, 150], "nonparametr": [189, 191], "nonprofit": [134, 144], "nonwingedmamm": 104, "nonzero": 154, "noob": [129, 131], "noodl": 130, "nook": 129, "noondai": 129, "noper": 135, "noqa": 129, "nor": [28, 47, 53, 72, 76, 83, 129, 132, 135, 196], "noraml": 178, "nordic_countri": 72, "nordinari": 132, "norigin": 135, "norm": [33, 39, 83, 131, 152, 178, 187, 192, 194], "norm1": 178, "norm2": 178, "norm_first": 178, "normal": [9, 13, 17, 18, 19, 20, 33, 37, 38, 40, 49, 50, 53, 58, 72, 73, 76, 80, 81, 82, 103, 118, 129, 132, 138, 150, 153, 159, 167, 175, 176, 177, 178, 179, 180, 187, 189, 190, 191, 192, 195, 196, 203], "normal_arrai": 153, "normalis": 202, "normalize_data": [13, 17, 18, 19, 20], "normalized_shap": 178, "normalvari": 82, "north": [129, 144, 197], "northeast": 118, "northern": 129, "norwai": [12, 14, 72], "norwegian": 129, "nose": 129, "nosepass": 167, "notabl": [136, 137], "notaion": 151, "notat": [5, 6, 57, 95, 135, 146, 151, 171, 196], "notation3": 95, "notch": [171, 173, 174, 177, 179, 195], "note": [0, 5, 6, 29, 30, 35, 36, 37, 39, 43, 49, 50, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 67, 70, 72, 75, 76, 78, 81, 85, 89, 90, 91, 92, 95, 96, 97, 102, 103, 104, 109, 113, 117, 118, 129, 131, 132, 133, 136, 137, 138, 139, 142, 144, 147, 150, 151, 152, 156, 157, 159, 160, 163, 164, 165, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 199, 200, 201], "notebook": [0, 10, 12, 21, 27, 95, 109, 113, 117, 126, 128, 132, 133, 138, 170, 172, 173, 174, 176, 177, 178, 179, 182, 183, 186, 188, 189, 190, 191, 198, 199, 201, 205, 208], "notecard": 129, "notepad": 88, "noth": [40, 44, 48, 49, 50, 57, 75, 102, 118, 129, 131, 139, 142, 152, 174, 179, 194, 195, 196, 202], "notic": [28, 29, 30, 38, 50, 52, 56, 58, 60, 71, 93, 103, 104, 117, 118, 129, 131, 132, 135, 137, 139, 142, 143, 156, 170, 171, 173, 174, 175, 176, 177, 178, 179, 181, 186, 187, 189, 191, 193, 194, 195, 196, 197, 199, 200], "notif": [8, 25], "notimplementederror": 71, "notion": [52, 105, 118, 143], "notnul": 156, "notwithstand": 129, "noun": [117, 129], "nour": 135, "noutput": [45, 117, 170], "nov": [88, 171], "novel": 129, "novemb": [129, 132], "now": [6, 8, 9, 11, 12, 13, 14, 15, 16, 23, 28, 36, 37, 38, 39, 40, 43, 44, 45, 48, 49, 58, 60, 61, 63, 64, 65, 69, 71, 72, 75, 76, 77, 78, 80, 81, 84, 85, 90, 92, 94, 95, 97, 102, 103, 104, 105, 107, 117, 118, 127, 128, 129, 131, 132, 133, 136, 138, 139, 140, 142, 143, 144, 152, 163, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "nowher": 156, "np": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 28, 29, 30, 31, 32, 33, 112, 131, 146, 149, 150, 151, 152, 153, 156, 162, 166, 168, 170, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "npack": 132, "npaid": 132, "npatch": 178, "npen": 132, "npeopl": 132, "nperfect": 90, "nprior": 129, "nqualiti": 135, "nquestion": 135, "nquicker": 132, "nread": [117, 132], "nresult": 164, "nrow": [173, 178, 187, 196], "nsaturdai": 117, "nsell": 132, "nsep": 88, "nshape": 174, "nsheet": 69, "nshould": 132, "nsilicon": 132, "nsimplest": 135, "nsize": 174, "nso": 132, "nsoftwar": 132, "nsome": 132, "nsourc": 132, "nspur": 132, "nsqueez": 132, "nstartup": 132, "nsteadili": 135, "nstick": 132, "nstill": 132, "nt": 28, "ntake": 132, "ntell": 132, "ntest": [173, 174, 180, 181], "nthat": 132, "nthe": [132, 135], "nthei": 132, "nthem": [132, 135], "ntheoret": 135, "nthese": 135, "nthi": [69, 73, 127], "nthink": 132, "ntnkvx7sbx": 139, "nto": [127, 132, 135], "ntoo": 132, "ntorchvis": 173, "ntotal": 178, "ntrain": 173, "ntruth": 117, "ntwo": 135, "nuanc": 117, "nuclear": 129, "nude": 129, "null": [28, 48, 49, 57, 127, 136, 137, 138, 156, 162, 189, 201], "num": [31, 35, 36, 37, 38, 41, 44, 45, 46, 47, 48, 49, 53, 72, 75, 78, 79, 80, 90, 91, 95, 103, 153, 156, 157, 168, 177, 179, 192], "num1": [44, 45, 46, 47, 75, 78, 86, 91, 95, 103], "num2": [44, 45, 46, 47, 75, 78, 86, 91, 95, 103], "num3": 95, "num4": 95, "num_cel": [17, 18, 19, 20], "num_class": [172, 173, 178, 179], "num_clust": [11, 131], "num_doc": 131, "num_docu": 131, "num_epoch": [174, 175, 177, 180, 181], "num_exampl": [9, 11, 15, 16], "num_featur": 172, "num_flo": 94, "num_float": 94, "num_head": 178, "num_images_to_plot": [176, 177], "num_int": 94, "num_iter": [12, 13, 14], "num_lay": 178, "num_list": [58, 80], "num_magnitude_bin": [174, 179], "num_new": 94, "num_on": 75, "num_param": [176, 177, 178, 179], "num_patch": 178, "num_perceptron": [19, 20], "num_point": [189, 191], "num_str": 94, "num_sum": 94, "num_token": [118, 131], "num_tokens_first_doc": 131, "num_top_class": 179, "num_total_charact": 118, "num_training_exampl": [17, 18, 19, 20], "num_transformer_lay": 178, "num_two": 75, "num_word": 129, "num_work": [174, 175, 179, 180, 181], "numb": 12, "number": [1, 2, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 50, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 83, 85, 86, 90, 91, 94, 96, 98, 103, 104, 105, 107, 117, 118, 129, 131, 132, 137, 138, 139, 141, 142, 143, 144, 146, 147, 149, 156, 157, 158, 159, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "number33": 95, "number_arithmet": 47, "number_list": 58, "number_of_paramet": 179, "number_of_patch": 178, "number_of_token": 178, "numbermethod": 90, "numbers_int": 38, "numbers_squar": 38, "numbers_str": 38, "numbers_to_displai": [17, 18, 19, 20], "numel": [167, 179], "numer": [0, 18, 20, 25, 48, 49, 52, 53, 73, 81, 91, 95, 105, 117, 138, 149, 150, 156, 170, 172, 174, 178, 188, 190, 192, 193, 195, 196, 197, 199, 202], "numpi": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 29, 30, 31, 32, 33, 85, 112, 131, 146, 147, 151, 152, 156, 162, 166, 171, 172, 173, 174, 178, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208], "numpy_array_from_list": 150, "numpy_tensor": 170, "nundergrad": 132, "nunderstand": 135, "nunlik": 135, "nurs": 129, "nut": 142, "nutjob": 129, "nutrifi": [174, 176, 179], "nuzleaf": 167, "nvar": 187, "nvidia": [170, 176], "nwa": 132, "nwant": [117, 132], "nwe": [127, 132, 135], "nweekend": 132, "nwhat": [127, 135], "nwhen": 132, "nwhere": 132, "nwhich": 135, "nwhole": 135, "nwill": [117, 135], "nworst": 132, "nx": 135, "ny": [60, 64, 118], "nyc": 199, "nyc_taxi": 199, "nyear": [66, 132], "nyou": 132, "nzip": 48, "o": [23, 25, 36, 40, 48, 50, 53, 54, 55, 56, 57, 58, 70, 74, 92, 93, 94, 95, 101, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 141, 142, 143, 144, 146, 147, 166, 174, 175, 176, 177, 179, 180, 181, 185, 186, 189, 197, 200], "oauthhandl": [139, 143], "ob": 103, "obj": [25, 35, 39, 58, 102, 103, 107, 160, 171, 173, 175, 180, 181], "obj1": 104, "obj2": 104, "object": [1, 4, 25, 29, 30, 35, 36, 37, 38, 39, 48, 52, 53, 54, 55, 56, 57, 61, 63, 65, 66, 70, 71, 72, 73, 75, 78, 79, 80, 81, 82, 85, 90, 91, 93, 94, 95, 96, 97, 104, 105, 107, 117, 118, 126, 127, 129, 130, 132, 134, 136, 137, 138, 139, 141, 142, 143, 149, 150, 152, 153, 157, 158, 163, 164, 165, 167, 171, 173, 176, 178, 188, 189, 190, 191, 193, 194, 197, 200, 201], "object1": 104, "object_nam": 103, "obscur": 129, "observ": [1, 4, 9, 11, 38, 39, 44, 50, 102, 117, 118, 126, 127, 129, 143, 156, 166, 178, 186, 187, 189, 190, 192, 193, 195, 196, 197, 198, 199, 201, 202], "obsolet": 129, "obtain": [53, 81, 129, 177, 178, 190, 197, 201], "obviou": [39, 53, 96, 117, 129, 132, 135, 179], "obvious": [129, 194], "occas": 153, "occasion": [129, 139], "occass": [189, 193], "occup": 129, "occupi": 129, "occur": [40, 49, 50, 53, 69, 71, 72, 73, 77, 86, 94, 129, 132, 139, 153, 170, 173, 179, 195], "occurr": [40, 53, 57, 103, 161, 197], "ocean": [191, 200], "ocean_r": 191, "ocr": 179, "oct": 88, "octadecim": 52, "octal": [52, 53, 92, 95], "octilleri": 167, "octob": 129, "od": 102, "odd": [28, 35, 43, 48, 49, 54, 56, 58, 72, 75, 78, 107, 153], "odd_numb": [38, 58], "odd_squar": 56, "oddish": 167, "ofcours": [197, 199, 201], "ofen": 179, "off": [7, 21, 53, 69, 109, 110, 113, 117, 118, 129, 131, 132, 136, 137, 139, 142, 143, 144, 156, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 186, 197, 199, 206], "offer": [1, 25, 52, 82, 96, 118, 129, 137, 138, 140, 144, 151, 154, 170, 172, 173, 175, 179, 185, 188, 191, 193, 194, 196, 197, 198, 199, 200, 201], "offic": [129, 132, 142, 185], "office_print": 138, "offici": [23, 85, 117, 118, 129, 130, 178, 179, 189, 193, 195, 198, 199], "offlin": [12, 179, 196], "offset": [28, 61, 62, 69, 170, 186, 197], "offspr": 193, "often": [2, 6, 9, 49, 53, 95, 102, 107, 117, 129, 132, 136, 137, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 187, 188, 190, 191, 193, 194, 195, 197, 199, 200, 201], "oh": [167, 174, 197], "ohc": [156, 157, 168], "ohcf": 168, "ohcv": [156, 157, 168], "ohh": 179, "oil": [117, 130], "ok": [53, 90, 118, 129, 131, 132, 135, 139, 140, 143, 178, 179, 185], "okai": [90, 171, 172, 174, 177, 178, 179, 190, 191, 193, 194, 196], "okta": [136, 137], "ol": 128, "old": [40, 45, 72, 85, 102, 107, 117, 118, 128, 129, 131, 132, 133, 139, 154, 156, 163, 176, 177, 187, 190], "old_col": 163, "old_nam": 156, "older": [45, 96, 117, 129, 131, 171], "oldest": [129, 133], "oliv": [117, 130, 188], "olli": 140, "omanyt": 167, "omastar": 167, "omit": [40, 117, 139, 178], "omma": 69, "on_chain_end": [127, 129], "on_chain_error": [127, 129], "on_llm_end": 129, "on_llm_error": 129, "on_tool_end": 127, "on_tool_error": 127, "onc": [0, 5, 6, 25, 36, 40, 48, 50, 53, 55, 56, 57, 60, 69, 72, 75, 76, 78, 81, 88, 91, 93, 99, 117, 118, 129, 131, 132, 142, 159, 160, 163, 170, 171, 172, 173, 174, 175, 177, 178, 179, 185, 186, 188, 191, 194, 195, 196, 197, 198, 199, 200, 201], "one": [0, 1, 5, 6, 8, 9, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 25, 35, 36, 37, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 60, 61, 67, 69, 72, 76, 78, 79, 80, 81, 84, 85, 88, 89, 90, 92, 93, 94, 96, 99, 103, 104, 105, 107, 109, 113, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 142, 143, 144, 150, 151, 152, 153, 156, 157, 158, 160, 161, 163, 165, 166, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203], "one_sent": 144, "onedr": 70, "ones": [6, 53, 81, 117, 129, 131, 132, 133, 134, 139, 143, 149, 150, 152, 153, 154, 163, 165, 172, 173, 174, 175, 176, 177, 178, 179, 193, 195], "ones_lik": 170, "ongo": 199, "onion": [72, 130], "onix": 167, "onli": [0, 8, 14, 23, 28, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 76, 77, 78, 80, 81, 85, 90, 91, 93, 96, 97, 99, 102, 104, 105, 107, 117, 118, 126, 127, 129, 131, 132, 133, 139, 142, 143, 144, 150, 151, 156, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 194, 196, 197, 199, 200, 201], "onlin": [6, 15, 16, 17, 18, 23, 118, 129, 139, 143, 173, 175, 178, 179, 181, 188, 196, 199], "onlinepdfload": 133, "onnx": 179, "ontario": 118, "onto": [128, 129, 130, 132, 143, 171, 178, 179, 190, 198], "onward": [0, 178], "ooo": 53, "oop": [23, 72, 106], "opac": [12, 188], "opaqu": 188, "open": [0, 1, 23, 25, 71, 72, 81, 85, 117, 118, 126, 129, 131, 132, 134, 139, 140, 142, 143, 144, 149, 156, 167, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 208], "open_workbook": 69, "openai": [118, 127, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 170, 208], "openai_api_kei": [117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144], "openai_funct": 117, "openaiembed": [117, 118, 131, 132, 133, 135, 141, 142], "opendoor": 143, "openerp": 25, "openingattribut": 118, "openmeteo": 126, "openstreetmap": 118, "openvino": 179, "oper": [2, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 25, 29, 30, 36, 37, 38, 40, 41, 48, 49, 52, 58, 60, 69, 71, 72, 75, 76, 78, 84, 86, 90, 93, 95, 98, 99, 101, 102, 103, 106, 116, 118, 129, 132, 135, 139, 140, 142, 150, 153, 156, 160, 161, 163, 164, 165, 166, 172, 173, 174, 175, 177, 178, 179, 180, 181, 199], "operand": [52, 53, 54, 71, 72, 94, 96, 105], "operatornam": 178, "opex": 138, "opim": 174, "opinion": [128, 139, 193, 197, 199], "opportun": [1, 50, 129, 136, 137, 139, 142, 143, 172, 173, 174, 177, 178, 179, 187], "oppos": 139, "opposit": [130, 139, 156], "opt": [117, 118, 127, 129, 131, 132, 133, 143], "optim": [1, 4, 5, 6, 12, 13, 14, 15, 16, 17, 18, 50, 56, 93, 99, 129, 131, 139, 140, 142, 143, 160, 174, 175, 176, 177, 179, 180, 181], "optimist": 139, "option": [0, 5, 6, 39, 40, 46, 48, 49, 52, 53, 54, 55, 56, 58, 72, 73, 75, 78, 85, 95, 102, 103, 104, 117, 118, 129, 131, 132, 138, 143, 144, 150, 153, 157, 164, 171, 172, 173, 176, 177, 179, 180, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "orang": [48, 72, 92, 96, 118, 129, 158, 179, 188, 191], "oranges_r": 191, "orbital_period": 196, "orchard": 129, "order": [5, 8, 9, 17, 18, 19, 20, 36, 48, 49, 53, 69, 70, 75, 76, 78, 80, 81, 84, 93, 95, 103, 117, 118, 126, 129, 131, 142, 153, 156, 157, 163, 164, 170, 171, 172, 173, 174, 178, 186, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201], "ordereddict": [164, 171, 173], "ordin": [6, 15, 16, 17, 18, 197], "ordinari": [38, 129], "ordinarili": 129, "ore": [40, 201], "oregon": 129, "org": [25, 117, 118, 146, 152, 171, 172, 173, 176, 177, 178, 179, 192, 199, 203], "organ": [0, 25, 54, 60, 75, 81, 84, 95, 102, 117, 129, 139, 140, 142, 176, 199, 203], "orient": [35, 37, 39, 73, 103, 104, 105, 107, 157, 164, 174, 186, 193, 194, 195, 196, 197, 198, 199], "origin": [9, 10, 11, 18, 20, 37, 38, 40, 70, 99, 105, 107, 118, 129, 132, 151, 153, 156, 157, 160, 161, 162, 164, 166, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 186, 190, 195, 199, 200, 203], "orrd": 191, "orrd_r": 191, "orsanmichel": 129, "orthogonol": 27, "os": 129, "oserror": 71, "oshawott": 167, "ot": [40, 47], "otat": 69, "other": [0, 1, 6, 7, 8, 11, 15, 16, 23, 25, 32, 33, 35, 36, 38, 40, 48, 49, 52, 53, 58, 66, 69, 71, 72, 73, 75, 76, 78, 79, 80, 81, 85, 86, 89, 90, 92, 93, 96, 99, 102, 103, 104, 105, 107, 110, 117, 118, 126, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 143, 144, 149, 150, 152, 153, 156, 157, 161, 162, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208], "other_kei": 129, "other_mag": 105, "otherwis": [50, 53, 69, 72, 78, 99, 103, 104, 127, 129, 132, 152, 157, 162, 163, 170, 171, 172, 174, 176, 178, 179], "othwerwis": 49, "ottawa": 118, "otter": 129, "ou": 199, "ounc": 132, "ouput": [172, 179], "our": [0, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 35, 39, 40, 45, 49, 50, 52, 69, 70, 71, 72, 73, 75, 79, 81, 84, 85, 86, 88, 89, 95, 102, 105, 107, 117, 118, 128, 129, 131, 133, 136, 137, 138, 139, 140, 142, 143, 144, 146, 153, 156, 157, 159, 166, 170, 171, 175, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "our_plot": 191, "ourselv": [69, 86, 128, 129, 138, 172, 173, 174, 178, 179], "out": [0, 15, 25, 26, 36, 37, 39, 40, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 71, 73, 78, 80, 81, 89, 90, 91, 92, 93, 96, 105, 112, 117, 118, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 151, 153, 154, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201], "out_channel": [173, 174, 175, 178, 180, 181], "out_featur": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "out_i": 172, "out_proj": 178, "outbound": 140, "outcom": [43, 75, 139, 143, 178, 189], "outer": [37, 47, 48, 49, 76, 152, 156, 170, 179, 195], "outer_fun": 76, "outer_funct": 97, "outermost": 97, "outisd": 176, "outlandish": 129, "outlet": 129, "outlier": [189, 190, 195, 197, 199, 203], "outlier_prop": 199, "outliers_indic": 9, "outlin": [129, 139, 146, 178, 194], "outnumb": 129, "outout": 91, "outperform": [1, 179], "output": [1, 5, 6, 7, 8, 12, 14, 19, 20, 35, 36, 37, 38, 40, 41, 44, 45, 47, 48, 50, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 72, 73, 75, 76, 77, 78, 80, 81, 88, 94, 96, 99, 102, 103, 104, 105, 110, 118, 126, 127, 128, 129, 131, 132, 134, 136, 137, 139, 140, 143, 144, 150, 152, 156, 159, 163, 164, 170, 171, 174, 175, 177, 180, 181, 186, 199, 206, 208], "output_dict": 118, "output_featur": 172, "output_format": 144, "output_kei": [127, 129], "output_param_nam": [12, 14], "output_pars": [117, 118, 130, 134], "output_s": [176, 177, 178, 179], "output_shap": [173, 174, 175, 176, 180, 181], "output_text": [129, 140, 143], "outrun": 178, "outsid": [44, 47, 48, 50, 54, 55, 76, 77, 102, 103, 117, 118, 129, 132, 139, 142, 144, 151, 170, 171, 174, 177, 178, 190, 199, 201], "outstand": [177, 178, 179], "outwardli": 129, "outweigh": [173, 179], "over": [1, 12, 13, 14, 15, 16, 17, 18, 35, 36, 38, 48, 49, 50, 80, 90, 92, 104, 117, 118, 129, 130, 131, 132, 133, 137, 139, 142, 143, 144, 146, 150, 156, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 192, 194, 197, 199, 200], "overal": [99, 139, 144, 146, 170, 174, 177, 178, 179, 186, 191, 196, 197, 199, 200], "overall_chain": 117, "overcom": [52, 143], "overconfid": 129, "overcorrect": 172, "overcurl": 129, "overfit": [12, 13, 14, 15, 16, 17, 18, 19, 20, 172, 173, 176, 178, 179], "overflow": [79, 154], "overflowerror": [71, 96], "overhead": 174, "overkil": 36, "overlai": [190, 197], "overlap": [129, 133, 141, 193, 194, 199], "overlap_cont": 141, "overlap_count": 141, "overli": 200, "overload": [23, 106, 139, 152], "overlook": 129, "overplot": 200, "overrid": [73, 107, 174], "overridden": [73, 104], "overset": 31, "overst": 117, "overt": 129, "overtim": 179, "overvalu": 129, "overview": [15, 16, 21, 28, 31, 90, 109, 113, 117, 153, 170, 171, 189, 190, 197, 198], "overwhelm": 178, "overwrit": [56, 69, 78, 170, 174, 179, 181], "overwritten": 69, "ow": [40, 129], "own": [35, 71, 72, 73, 80, 81, 84, 85, 86, 95, 97, 107, 129, 131, 132, 135, 139, 142, 143, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 187, 194, 195, 196, 197, 199], "owner": 129, "oxford": [95, 196], "oxlei": 132, "ozzie_osman": 117, "p": [2, 25, 28, 31, 32, 40, 48, 50, 53, 54, 55, 57, 58, 61, 62, 67, 91, 95, 98, 102, 136, 137, 143, 170, 174, 176, 177, 178, 179, 187, 191, 194, 197], "p0": 170, "p1": [98, 102, 105, 107, 202], "p100": [170, 176], "p2": [98, 102, 105, 107], "p3": [105, 107], "p4": 107, "p5": 107, "p6": 107, "p7": 107, "p8": 170, "p_": 32, "p_letter": 58, "p_list": 25, "pa": 185, "pace": 139, "pachirisu": 167, "pacif": 144, "pack": [38, 55, 129, 130, 132, 178], "packag": [23, 69, 81, 87, 90, 117, 118, 127, 128, 129, 131, 132, 133, 138, 139, 143, 144, 156, 160, 163, 164, 165, 170, 171, 173, 174, 175, 176, 177, 178, 179, 185, 188, 192, 194, 196, 198, 199, 200, 201], "packagesin": 84, "packing_person_info": 72, "packym": 139, "pad": [53, 61, 62, 95, 96, 173, 174, 175, 178, 180, 181], "padding_mod": 174, "page": [7, 67, 82, 83, 90, 105, 110, 118, 126, 129, 133, 143, 170, 171, 172, 175, 176, 178, 188, 198, 206], "page_cont": [117, 118, 129, 131, 132, 133, 135, 140, 141, 142, 143, 144], "page_data": 140, "pagerduti": 143, "pai": [129, 132, 142, 143, 174, 178, 179], "paid": 129, "pain": [118, 129, 144, 200], "painfulli": 129, "paint": [118, 129, 139], "painter": 129, "pair": [12, 15, 16, 48, 53, 57, 83, 93, 94, 144, 156, 157, 163, 164, 172, 191, 194, 196, 198, 199, 200], "paired_r": 191, "pairgrid": [187, 191, 192, 201, 204], "pairplot": [187, 191, 200, 201], "pairwis": 192, "pal": [31, 126, 201], "pale": [129, 188, 194], "palett": [177, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204], "palkia": 167, "palm": 137, "palpitoad": 167, "palplot": 188, "pan": [118, 130], "pancetta": 117, "pancham": 167, "panda": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 118, 134, 136, 137, 140, 146, 147, 171, 172, 173, 174, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208], "panel": [198, 200], "pangoro": 167, "panopt": 173, "panpour": 167, "pansag": 167, "pansear": 167, "paper": [1, 117, 118, 129, 135, 142, 144, 170, 174, 176, 179, 184, 186, 188, 189, 199, 208], "paperswithcod": [174, 176, 178], "paprika": 130, "par": [176, 178], "para": 167, "para1": 38, "para2": 38, "para3": 38, "paradigm": [102, 179], "paragraph": [144, 178], "parallel": [79, 118, 129, 144, 201], "param": [9, 10, 127, 129, 138, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 189, 194, 195, 199, 200, 201], "param1": 58, "param2": 58, "param3": 58, "param_1": [6, 10, 16], "param_2": [6, 10, 16], "paramet": [6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 40, 41, 53, 58, 69, 76, 80, 85, 99, 102, 104, 107, 117, 118, 126, 136, 137, 138, 141, 142, 144, 146, 153, 157, 158, 159, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "parameter": 103, "parameter1": [75, 85], "parameter2": 75, "parametr": [103, 199], "paramount": 174, "paranthes": 53, "paranthesi": 55, "parasect": 167, "parch": [195, 197], "parent": [73, 117, 128, 137, 142, 171, 173, 174, 175, 176, 177, 179, 180, 181, 193], "parent_splitt": 132, "parentattr": 104, "parentdocumentretriev": 132, "parenthes": [36, 40, 48, 53, 55, 71, 80, 88, 90, 92, 93, 129, 186], "parenthesi": [36, 71, 76, 153], "parentmethod": 104, "pareto": [82, 197], "paretovari": 82, "pari": [117, 118, 146], "park": [137, 139, 176, 189], "parkpicn": 139, "parmar": [38, 48, 53, 69, 75, 78, 81, 91, 102], "parmesan": 117, "parmet": 129, "parr": 142, "parramet": 201, "parrot": [102, 103], "pars": [66, 69, 71, 99, 118, 134, 136, 137, 142, 143, 156], "parser": [71, 118, 129, 132, 136, 137, 143], "parslei": 117, "part": [2, 38, 40, 48, 49, 50, 52, 53, 81, 83, 92, 93, 96, 97, 117, 129, 131, 132, 135, 137, 138, 140, 142, 144, 146, 149, 151, 161, 164, 170, 171, 172, 173, 176, 177, 178, 179, 182, 183, 185, 195, 199], "parti": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 60, 84, 129, 142, 144], "partial": [8, 176], "partial_vari": [117, 118, 130, 134], "particip": [0, 142], "particuar": [18, 19, 20], "particular": [48, 49, 50, 52, 56, 57, 60, 65, 81, 91, 93, 102, 104, 118, 129, 131, 150, 156, 159, 160, 162, 163, 164, 166, 171, 172, 174, 178, 185, 186, 187, 189, 190, 194, 195, 196, 197, 199, 200, 201], "particularli": [53, 129, 142, 143, 195, 196], "partit": [4, 11, 53], "partli": 129, "partner": [127, 129, 144], "pascal": 129, "pass": [23, 35, 37, 38, 40, 41, 43, 44, 45, 51, 53, 60, 61, 62, 66, 71, 72, 73, 78, 80, 81, 85, 89, 91, 102, 103, 104, 107, 117, 118, 129, 130, 131, 132, 133, 137, 138, 140, 144, 150, 156, 157, 158, 159, 160, 163, 165, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 199, 200, 201], "passag": [129, 131, 139, 199], "passeng": [197, 199, 201, 202], "passenger_count": 199, "passion": [0, 139, 140], "passiv": 139, "passport": 129, "password": [45, 118], "password_check": 45, "past": [117, 129, 131, 135, 142, 143, 144, 147, 171, 173, 174, 175, 176, 177, 178, 179, 181, 186, 191, 194, 195, 196, 199], "pastel1": [191, 196], "pastel1_r": 191, "pastel2": 191, "pastel2_r": 191, "pat": 116, "patch": [179, 193, 197, 200], "patch_and_position_embed": 178, "patch_artist": 146, "patch_embed": 178, "patch_embedded_imag": 178, "patch_embedded_image_with_class_embed": 178, "patch_embedding_class_token": 178, "patch_embedding_lay": 178, "patch_embedding_with_class_token": 178, "patch_height": 178, "patch_siz": 178, "patch_width": 178, "patchcollect": 199, "patched_image_through_mlp_block": 178, "patched_image_through_msa_block": 178, "patchembed": 178, "patcher": 178, "patchifi": 178, "path": [0, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 69, 70, 84, 95, 110, 118, 129, 131, 132, 138, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 206], "path_to_dir": 179, "path_to_model": 179, "pathcollect": [193, 194], "pathlib": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "patienc": 189, "patrat": 167, "patrick": 129, "pattern": [1, 32, 38, 99, 129, 146, 170, 171, 172, 173, 174, 176, 177, 178, 179, 188, 200], "paul": [117, 129, 131, 132, 133, 185], "paul_graham_essai": 131, "paulg": 139, "paulgraham": [117, 129, 141], "paulgrahamessai": [117, 118, 129, 131, 132, 133], "paulgrahamessayslarg": 132, "paulgrahamessaysmal": [131, 135], "paulgrahamessaysmedium": 132, "paulgrahamessayssmal": 132, "paus": 36, "pawniard": 167, "payment": 129, "payoff": 117, "pb": 129, "pc": 179, "pca": 198, "pcie": 170, "pclass": [195, 197], "pctdistanc": 146, "pd": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 118, 134, 136, 137, 140, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 174, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "pd_data": 9, "pd_test_data": [17, 18, 19, 20], "pd_train_data": [17, 18, 19, 20], "pdf": [131, 133, 189, 190, 192, 204], "peach": 197, "peak": [129, 168, 190, 196], "pear": [118, 129], "pearl": 99, "pearsonr": 200, "peculiar": [107, 156], "pedestrian": 8, "peek": [17, 18, 19, 20, 185], "peer": 144, "peggi": [102, 104], "pelipp": 167, "penal": 1, "penetr": 129, "penguin": [102, 104, 140], "penicillin": 48, "peopl": [0, 40, 53, 117, 118, 129, 131, 132, 133, 136, 137, 139, 140, 142, 143, 144, 170, 173, 174, 175, 176, 178, 179, 185, 188, 194, 199], "pep": 85, "pepper": [117, 130], "per": [12, 14, 73, 118, 129, 131, 133, 136, 137, 138, 144, 146, 147, 157, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 185, 186, 188, 189, 195, 196, 197, 199, 201], "peramet": 78, "perceiv": [132, 188], "percent": [38, 177, 179], "percentag": [15, 16, 17, 18, 19, 20, 48, 95, 102, 147, 156, 159, 163, 166, 179, 193, 195, 197, 199], "percentil": [153, 156, 199], "percep": [19, 20], "percept": [129, 196], "perceptron": 8, "perceptron_index": [19, 20], "perenni": 129, "perf": 170, "perfect": [2, 49, 90, 129, 131, 139, 144, 172, 179], "perfectli": [89, 90, 117, 171], "perform": [1, 8, 11, 19, 20, 25, 35, 37, 41, 43, 48, 49, 52, 53, 54, 55, 56, 57, 58, 69, 72, 75, 80, 81, 86, 88, 93, 94, 95, 96, 99, 102, 105, 116, 117, 126, 129, 131, 138, 149, 152, 156, 160, 163, 165, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 197], "performan": 172, "perhap": [129, 174, 176, 177, 178, 179], "perimet": 104, "period": [28, 80, 85, 129, 156, 179, 199], "periodic_function1": 28, "periodic_function2": 28, "perl": 25, "perm": 81, "perman": [69, 179], "permiss": [72, 129], "permit": 197, "permut": [170, 174, 178, 202], "permutebackward0": 178, "persev": 174, "persian": 167, "persist": [139, 170], "person": [0, 1, 48, 69, 75, 78, 85, 91, 102, 103, 104, 117, 118, 121, 127, 129, 131, 132, 136, 137, 139, 144, 145, 172, 174, 177, 178, 179, 194, 197, 199], "person_dct": 69, "person_info": [91, 102, 104], "person_json": 69, "person_schema": 137, "persons_nam": 143, "perspect": [130, 132, 136, 137, 139, 144, 173, 174, 177, 178], "peso": 118, "pet": [129, 144], "petal": [10, 11, 15, 185, 193], "petal_length": [4, 6, 11, 15, 185, 188, 190, 191, 193, 194, 200, 203], "petal_width": [4, 6, 11, 15, 185, 193, 194, 200, 203], "petallengthcm": 146, "petalwidthcm": 146, "petilil": 167, "pg": 117, "pg2148": 117, "pg_work": 117, "ph": 196, "phanpi": 167, "phantump": 167, "phase": [28, 132], "phd": 129, "phenomen": 178, "phenomena": 129, "philosohpi": 172, "philosoph": [131, 179], "philosophi": [129, 131], "philosophia": 131, "phind": 140, "phion": 167, "phone": [41, 95, 98, 129, 133, 139, 144, 179], "phone_num": 98, "phone_numb": 95, "photo": [139, 146, 172, 173, 174, 176, 177, 178, 179], "photograph": [1, 129], "photorealist": 129, "photoshop": 144, "php": [56, 99], "phrase": [118, 131, 136, 137, 139], "physic": [79, 102, 117, 129, 139, 142, 178, 185], "physicist": 0, "pi": [28, 30, 31, 40, 52, 53, 71, 75, 81, 83, 91, 95, 100, 102, 129, 167, 179], "piazza": 129, "picalo": 25, "pichu": 167, "pick": [4, 9, 11, 15, 118, 129, 131, 136, 137, 144, 151, 171, 173, 174, 177, 178, 185, 188, 189, 191, 197, 199], "picki": 133, "pickl": [85, 171], "pickler": 85, "pickletool": 85, "pickup_datetim": 199, "pickup_latitud": 199, "pickup_longitud": 199, "picnic": 129, "pictori": 197, "pictur": [4, 5, 6, 8, 17, 18, 19, 20, 50, 128, 129, 139, 142, 178, 201], "pid": 170, "pidgei": 167, "pidgeot": 167, "pidgeotmega": 167, "pidgeotto": 167, "pidov": 167, "pie": 179, "piec": [39, 117, 118, 128, 129, 131, 132, 133, 137, 139, 140, 142, 143, 144, 151, 170, 171, 173, 174, 175, 177, 178, 179, 181, 197], "piecem": 135, "piechart": 146, "pignit": 167, "pikachu": 167, "pil": [173, 174, 176, 179], "pile": 197, "piloswin": 167, "pilot": [117, 118], "pin": [133, 178], "pin_memori": [175, 178, 181], "pinch": 132, "pine": 129, "pineappl": [118, 197], "pineco": 167, "pinecon": 117, "pinecone_api_env": 133, "pinecone_api_kei": [133, 142], "pinecone_env": 142, "ping": [136, 137], "pink": [48, 130, 188, 191], "pink_r": 191, "pinsir": 167, "pinsirmega": 167, "pinterest": 143, "pioneer": 140, "pip": [25, 69, 81, 117, 126, 131, 132, 133, 135, 138, 143, 172, 173, 174, 176, 177, 178, 179], "pip3": [176, 177, 178, 179], "pipe": [126, 196], "pipelin": [1, 118, 174, 176, 177, 178, 179, 181, 196], "piplein": 174, "piplup": 167, "pirat": [117, 118, 139], "pitti": 129, "pittsbugh": 118, "pivot": [156, 202], "pivot_t": 156, "pixel": [6, 8, 10, 17, 18, 19, 20, 129, 146, 170, 173, 174, 178], "pixel1": [18, 20], "pixel2": [18, 20], "pixel3": [18, 20], "pixel4": [18, 20], "pixel5": [18, 20], "pixel6": [18, 20], "pixel7": [18, 20], "pixel775": [18, 20], "pixel776": [18, 20], "pixel777": [18, 20], "pixel778": [18, 20], "pixel779": [18, 20], "pixel780": [18, 20], "pixel781": [18, 20], "pixel782": [18, 20], "pixel783": [18, 20], "pixel784": [18, 20], "pixel8": [18, 20], "pixel9": [18, 20], "piyg": 191, "piyg_r": 191, "pizel": [18, 19, 20], "pizza": [174, 175, 176, 177, 178, 179, 180, 181], "pizza_steak_sushi": [174, 175, 176, 177, 178, 180, 181], "pizza_steak_sushi_20_perc": [177, 179], "pl": 129, "place": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 38, 39, 52, 53, 54, 55, 56, 57, 60, 69, 72, 73, 78, 79, 81, 84, 90, 93, 95, 104, 107, 117, 129, 131, 132, 135, 137, 139, 142, 170, 171, 173, 174, 175, 176, 177, 178, 179, 185, 197, 201, 202], "placehold": [50, 53, 95, 117, 131, 142], "plagu": 129, "plai": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 90, 97, 104, 118, 129, 131, 132, 133, 139, 142, 143, 144, 156, 170, 172, 179, 186, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201], "plain": [15, 16, 35, 107, 136, 137, 178, 196], "plan": [102, 118, 129, 132, 140, 142, 144, 172, 179, 199], "plane": [12, 16, 27, 117, 134], "planet": 196, "planets_data": 196, "plant": [117, 137, 172], "plant_schema": 137, "plant_typ": 137, "plasma": [191, 196, 199], "plasma_r": 191, "plate": 197, "platform": [23, 25, 69, 99, 126, 140, 144, 170, 199], "platon": 129, "plausibl": 129, "plausibli": 129, "playbook": 0, "player": [48, 49, 102, 104, 146], "playground": [8, 172], "ple": 40, "pleas": [49, 117, 118, 129, 131, 136, 137, 138, 139, 140, 142, 143, 157, 176, 179, 186, 188, 189, 190, 192, 196, 197, 199, 201], "pleasur": [129, 139], "plenti": [71, 129, 156, 171, 172, 174, 176, 177, 178, 179], "plot": [5, 26, 112, 117, 129, 131, 171, 172, 173, 177, 179, 185, 200, 201, 202, 203, 204], "plot_confusion_matrix": [172, 173], "plot_data": 12, "plot_decision_boundari": 172, "plot_figur": 12, "plot_func": 201, "plot_function1": 28, "plot_function2": 28, "plot_index": [17, 18, 19, 20], "plot_joint": 190, "plot_kw": 191, "plot_layout": 12, "plot_loss_curv": [174, 176, 178, 179], "plot_predict": [171, 172], "plot_predictions_trac": 12, "plot_test_trac": 12, "plot_training_trac": 12, "plot_transformed_imag": 174, "plotcontour": 31, "plotdist": 31, "plotli": [12, 190], "plotlin": 147, "plotnonfinit": 194, "plotter": 194, "plottext": 31, "plotting_context": 186, "plt": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 28, 31, 112, 131, 146, 147, 171, 172, 173, 174, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "plu": [96, 129, 136, 137, 139, 142, 144, 170, 174, 198], "plug": [132, 144, 179], "plugin": [117, 118], "plural": 137, "plusl": 167, "pm": [30, 61, 62, 67, 144], "png": [31, 69, 70, 118, 146, 147, 174, 190], "po": [160, 178, 197], "pocoo": 25, "podcast": [118, 142, 143, 144, 171, 176], "podcastnot": 142, "poetri": [25, 129], "pofession": 201, "point": [5, 6, 9, 36, 37, 39, 40, 52, 53, 57, 66, 67, 71, 81, 82, 83, 92, 93, 96, 103, 105, 107, 117, 118, 129, 131, 132, 135, 139, 142, 143, 144, 146, 153, 170, 171, 172, 173, 174, 176, 177, 179, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202], "point_color": 194, "pointer": [0, 69], "pointplot": [193, 197], "poison": 167, "poisson": 193, "pokemon": 167, "pokemon_data": 167, "pol": 118, "poli": [102, 140], "polic": 185, "policekillingsu": 185, "polici": 140, "polio": 48, "polito": 167, "poliwag": 167, "poliwhirl": 167, "poliwrath": 167, "pollut": 39, "polluzion": 129, "poloclub": [173, 174, 175, 180, 181], "poly1d": 187, "polyfit": 187, "polygon": 104, "polynomi": [12, 13, 14, 15, 16, 17, 18, 149, 189], "polynomial_degre": [12, 13, 14, 15, 16, 17, 18], "ponyta": 167, "poochyena": 167, "pool": [129, 173], "pool_timeout": 127, "poor": [129, 170, 171, 172, 174, 176, 179], "poorli": [117, 174, 188], "pop": [43, 56, 57, 131, 146, 191, 195, 200, 203], "popitem": 56, "popul": [58, 82, 118, 130, 176, 177, 199, 201], "popular": [23, 25, 53, 67, 81, 85, 99, 102, 117, 118, 129, 135, 170, 171, 172, 174, 178, 181], "populu": 176, "por": 118, "poriod": 28, "pork": 130, "porn": 129, "porsch": 168, "port": [99, 129, 143], "portabl": [23, 85, 99], "portal": [126, 139, 198], "portfolio": [179, 208], "portion": [53, 54, 72, 76, 97, 118, 129, 173, 174, 176, 177, 178, 185], "portrai": 188, "portrait": 129, "portug": [118, 146], "porygon": 167, "porygon2": 167, "posit": [1, 2, 16, 30, 38, 40, 41, 44, 45, 46, 47, 53, 58, 72, 79, 80, 83, 92, 126, 127, 129, 131, 136, 137, 139, 142, 144, 156, 165, 166, 172, 174, 188, 190, 193, 194, 195, 197, 201], "position_embed": 178, "positional_or_keyword": 163, "positional_ord": 53, "positive_even_numb": 58, "positive_no": 80, "positive_numb": 95, "posixpath": [174, 177, 178, 179, 180, 181], "possess": 189, "possibl": [1, 9, 12, 17, 18, 19, 20, 39, 40, 45, 48, 50, 53, 55, 58, 72, 79, 81, 84, 91, 92, 95, 117, 118, 129, 135, 136, 137, 142, 143, 146, 152, 153, 156, 158, 159, 171, 172, 174, 175, 176, 178, 179, 188, 191, 193, 196, 199, 201, 202], "possibli": [8, 103, 132, 174, 197], "post": [26, 65, 112, 128, 129, 136, 137, 139, 143, 144, 174, 175, 177, 178, 179, 185, 188, 193, 194, 195, 196], "postag": 200, "postal": 173, "postalcod": 118, "postdoc": 129, "poster": 186, "postscript": 129, "pot": [117, 130], "potato": [72, 96, 130, 136, 137, 138], "potenti": [117, 118, 139, 140, 142, 143, 144, 146, 156, 171, 172, 173, 174, 177, 178, 179, 191, 198, 200], "pound": 198, "pour": 117, "poverti": 139, "pow": [71, 81, 83], "pow2": [54, 58], "power": [0, 35, 36, 48, 53, 54, 58, 71, 81, 83, 90, 96, 97, 104, 105, 109, 113, 117, 118, 119, 126, 129, 135, 136, 137, 138, 139, 140, 142, 149, 150, 152, 156, 170, 171, 173, 174, 176, 177, 178, 179, 199, 201], "powtwo": [35, 36], "powtwogen": 36, "pp": 40, "pple": 40, "ppp": 29, "pprint": 171, "practic": [23, 24, 29, 30, 40, 55, 72, 73, 75, 81, 86, 107, 129, 131, 132, 137, 142, 144, 150, 156, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 186, 190, 196, 197, 198, 199, 201, 208], "practical_estimation_of_the_bandwidth": 192, "praction": [176, 177], "practition": [177, 178], "prantsus": 118, "prantsusmaa": 118, "pre": [1, 81, 99, 132, 140, 142, 171, 174, 176, 178, 189, 197, 198, 199, 201], "prebuilt": 25, "prec": 31, "preced": [44, 61, 62, 72, 78, 90, 104, 129, 190], "precis": [2, 52, 96, 129, 132, 161, 166, 170, 172, 186, 189, 193, 199, 201], "precision_histori": 9, "precision_scor": 172, "preciss": [9, 17, 18, 19, 20], "pred": [172, 173, 174, 176, 179, 180, 181], "pred_and_plot": 178, "pred_and_plot_imag": [174, 176, 177, 178, 183], "pred_and_stor": 179, "pred_class": [173, 179], "pred_dict": 179, "pred_label": [173, 179], "pred_labels_and_prob": 179, "pred_list": 179, "pred_logit": [173, 179], "pred_prob": [173, 179], "pred_tim": 179, "predefin": [1, 6, 12, 69, 75, 81, 94, 129, 186], "predetermin": 117, "predicit": [172, 179], "prediciton": 173, "predict": [1, 5, 6, 15, 16, 99, 118, 128, 129, 132, 139, 143, 180, 181, 183, 189, 199], "predict_and_pars": [132, 137], "predict_messag": 138, "predicted_label": [17, 18, 19, 20], "prediction_kei": 118, "predictions_num": [12, 13, 14], "predicton": 173, "predictor": 189, "predomin": 27, "prefer": [36, 37, 52, 104, 117, 131, 142, 146, 157, 171, 172, 173, 174, 175, 179, 186, 193, 196, 197], "prefix": [52, 84, 97, 102, 103, 117, 186, 188], "preidction": 176, "prematur": 129, "premis": [173, 174, 176, 178, 179], "premium": 142, "prep_output": [127, 129], "prep_prompt": 129, "prepar": [131, 133, 142, 143, 175, 176, 177, 179, 180, 181, 183, 185, 200, 208], "prepare_request": 127, "prepend": [95, 152, 178], "preprend": 178, "preprocess": [174, 176, 178, 179], "prescript": 129, "presenc": [7, 52, 96, 110, 129, 144, 178, 190, 206], "present": [46, 48, 50, 53, 56, 57, 70, 72, 80, 85, 96, 129, 131, 139, 142, 144, 156, 159, 160, 163, 170, 173, 174, 177, 178, 179, 181, 186, 187, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201], "preserv": [52, 129, 139, 179], "preset": 186, "presid": [129, 139], "press": [49, 90, 129, 140, 177, 188], "pression": 40, "pressur": 199, "prestig": 129, "prestigi": 129, "presum": 129, "pretend": 143, "preternatur": 129, "pretrain": [172, 173, 174, 179], "pretrained_effnetb2_food101_model_s": 179, "pretrained_effnetb2_model_s": 179, "pretrained_vit": 178, "pretrained_vit_model_s": [178, 179], "pretrained_vit_result": 178, "pretrained_vit_transform": 178, "pretrained_vit_weight": 178, "pretti": [15, 16, 25, 38, 65, 129, 131, 132, 139, 144, 156, 171, 172, 174, 176, 177, 179, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "prevent": [12, 13, 14, 15, 16, 17, 18, 19, 20, 84, 91, 102, 104, 132, 139, 173, 174, 176, 178, 179], "preview": [117, 118, 129, 131, 136, 137, 140, 144, 185, 187, 189, 190, 191, 195, 196, 197, 199, 201], "previou": [8, 39, 45, 52, 69, 76, 81, 97, 107, 142, 151, 170, 171, 172, 173, 175, 176, 177, 178, 179, 186, 190, 191, 193, 194, 195, 196, 198, 199, 201], "previous": [72, 81, 140, 142, 174, 175, 176, 177, 178, 179, 190, 191, 194, 196, 199, 200, 201], "prgn": 191, "prgn_r": 191, "price": [1, 5, 6, 102, 103, 129, 132, 136, 137, 140, 144, 146, 156, 157, 158, 167, 178, 199], "price_df": 158, "price_list": 158, "pricedf": 168, "primari": [129, 174, 178, 188, 199], "primarili": [48, 49, 139], "prime": [48, 49, 178], "primeap": 167, "primit": 129, "princeton": 199, "princip": 198, "principl": [102, 118, 129, 174, 177, 178, 199], "prinplup": 167, "print": [7, 9, 11, 12, 13, 14, 15, 16, 19, 20, 25, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 90, 91, 92, 93, 94, 96, 97, 98, 102, 103, 104, 105, 107, 110, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 193, 199, 206], "print_data": 76, "print_financial_forecast": 138, "print_full_nam": 38, "print_fullnam": [75, 78], "print_hello": 67, "print_hello_three_tim": 67, "print_hi": 67, "print_hi_three_tim": 67, "print_msg": 37, "print_this_to_screen": 89, "print_train_tim": 173, "printer": [37, 38, 129, 138], "printer_nam": 138, "printf": 53, "printhello": 97, "printinfo": 78, "printnam": 102, "printoutput": [136, 137], "printstudentdata": 103, "prior": [8, 129, 171, 173, 174, 176, 199], "priori": 1, "priorit": [118, 133, 142], "prioriti": [142, 144], "prism": [191, 200], "prism_r": 191, "privaci": [140, 179, 208], "privat": [39, 81, 102, 103, 129, 143, 179], "privatenam": 90, "privileg": 200, "priyav": 142, "pro": [170, 174, 177, 179], "proactiv": 142, "prob": [172, 174, 176, 179, 180, 181], "probabl": [2, 6, 9, 12, 13, 14, 24, 52, 117, 129, 132, 144, 146, 150, 171, 173, 174, 176, 177, 178, 179, 180, 181, 188, 190, 195, 196, 202, 208], "problem": [1, 13, 25, 30, 37, 39, 41, 53, 72, 79, 102, 117, 118, 126, 129, 131, 132, 139, 142, 171, 173, 174, 176, 177, 178, 179, 188, 196, 200, 201], "probopass": 167, "proce": [8, 50, 95, 191], "procedur": [103, 199], "process": [0, 1, 8, 12, 14, 15, 16, 18, 19, 20, 25, 29, 30, 32, 36, 49, 50, 55, 58, 67, 72, 79, 94, 99, 102, 103, 104, 107, 118, 129, 131, 132, 133, 135, 140, 142, 143, 144, 156, 158, 162, 170, 173, 174, 176, 178, 179, 189, 200, 201, 208], "processor": [99, 129, 173], "procrastin": [129, 132], "prod": [29, 81], "prod_": 29, "prod_i": 29, "prod_j": 29, "produc": [10, 16, 36, 40, 45, 72, 88, 104, 117, 129, 146, 147, 152, 160, 163, 170, 171, 172, 173, 177, 178, 179, 186, 208], "product": [12, 24, 27, 79, 81, 85, 99, 105, 117, 118, 129, 131, 132, 136, 137, 139, 140, 142, 143, 144, 149, 152, 170, 173, 174, 175, 178, 188, 189, 190, 191, 201, 208], "production": 144, "profession": [129, 146, 186, 187, 188, 193, 194, 196], "professor": [118, 129], "profici": 189, "profil": [129, 142, 143, 177, 179], "profit": [118, 129, 142, 143], "profit_rang": 147, "profitlist": 147, "program": [1, 8, 19, 20, 25, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 58, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 73, 75, 76, 77, 80, 81, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 97, 103, 104, 105, 107, 117, 118, 129, 130, 135, 140, 144, 174, 175, 177, 179, 189, 199, 208], "programdata": [62, 81, 160, 163, 164, 165, 185, 188, 192, 194], "programm": [1, 39, 52, 58, 72, 75, 85, 102, 107, 129, 191], "programmar": 86, "programmat": [171, 177], "progress": [25, 131, 139, 140, 142, 171, 172, 173, 174, 177], "project": [0, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 60, 84, 86, 117, 118, 129, 132, 136, 137, 139, 140, 142, 143, 171, 172, 174, 175, 177, 178, 179, 181, 189, 191, 198, 201, 208], "promin": 193, "promis": [107, 117, 132, 143, 174, 178, 185, 191, 199], "promontori": 129, "promopt": [131, 143], "promot": [96, 132], "prompt": [75, 81, 95, 118, 128, 129, 132, 134, 136, 137, 138, 139, 143, 149, 179], "prompt_templ": [117, 132], "prompt_token": [136, 137], "prompttempl": [117, 118, 128, 130, 131, 132, 139, 140, 143], "promptvalu": 117, "prone": [174, 178], "pronoun": 102, "pronounc": [178, 200], "prop": [171, 179, 194, 197], "prop_cycl": [26, 112], "proper": [71, 102, 118, 129, 144, 161, 179], "properli": [69, 70, 71, 103, 144, 195, 196, 201], "properti": [23, 42, 81, 102, 104, 117, 132, 136, 138, 142, 159, 194, 199], "propon": 176, "proport": [1, 5, 6, 12, 14, 17, 18, 19, 20, 33, 129, 172, 179, 195, 197, 199], "proportion": 129, "propos": [107, 130, 131, 139], "prospect": [1, 129, 132, 140, 144], "protect": [55, 72, 93, 102, 103, 142, 144], "protein": [130, 170, 171], "protocol": [25, 35], "prototaxit": 118, "prototyp": [4, 11, 103, 129], "proud": 177, "prove": [117, 129, 139], "proven": 176, "provid": [1, 23, 25, 37, 39, 43, 48, 50, 52, 53, 54, 56, 67, 70, 72, 73, 78, 81, 85, 95, 102, 103, 104, 117, 118, 126, 127, 129, 131, 132, 139, 140, 142, 147, 149, 152, 154, 156, 157, 158, 160, 163, 168, 173, 175, 178, 179, 188, 190, 193, 195, 199, 200, 201], "provinc": 118, "proxi": [71, 104, 127, 179], "prudent": [129, 142], "prune": [133, 187], "prwrxu49dd": 139, "pry": 132, "pseudo": [72, 82, 118], "pseudocod": 178, "pseudocolor": 188, "pseudorandom": 170, "psychic": 167, "psyduck": 167, "pt": [171, 175, 180, 181], "pth": [171, 173, 175, 177, 178, 179, 180, 181], "ptp": 193, "pubic": 179, "public": [85, 102, 134, 139, 177, 178, 179], "publicli": [129, 177], "publish": [129, 135, 176, 178, 179, 199], "pubu": 191, "pubu_r": 191, "pubugn": 191, "pubugn_r": 191, "pull": [118, 129, 132, 136, 137, 138, 139, 142, 144, 151, 178, 188, 197, 198, 201], "pull_from_greenhous": [136, 137], "pull_from_websit": 143, "pullov": [18, 20, 173], "puls": [129, 198], "pump": 132, "pumpkabooaverag": 167, "pumpkaboolarg": 167, "pumpkaboosmal": 167, "pumpkaboosup": 167, "punch": 129, "punctuat": 81, "puor": 191, "puor_r": 191, "pupitar": 167, "purchas": [1, 144, 172, 174, 179], "purd": 191, "purd_r": 191, "pure": [171, 177, 179], "puri": 142, "purpl": [188, 191, 193], "purples_r": 191, "purpos": [8, 25, 43, 69, 73, 80, 81, 82, 90, 102, 103, 104, 105, 109, 113, 129, 158, 170, 171, 172, 174, 177, 178, 181, 187, 188, 189, 194, 195, 198, 199, 201], "purposefulli": 118, "purrloin": 167, "pursuit": 129, "purugli": 167, "push": [129, 179], "put": [0, 39, 40, 44, 45, 50, 53, 72, 88, 97, 117, 118, 129, 131, 132, 133, 136, 137, 139, 142, 143, 144, 154, 173, 175, 176, 177, 179, 180, 181], "puzzl": [129, 173, 178, 179], "pvalu": 187, "pwr": 170, "py": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 53, 62, 73, 77, 81, 84, 85, 88, 91, 95, 117, 118, 127, 129, 131, 132, 133, 160, 163, 164, 165, 170, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 185, 188, 192, 194], "py3": 81, "py_list": 54, "py_tupl": 55, "pybrain": 25, "pyc": 179, "pycharm": [25, 186], "pycodestyl": 118, "pydant": 117, "pydantic_schema": 136, "pydantic_v1": [117, 136], "pydata": [185, 199, 203], "pygam": 25, "pykyra": 25, "pynb": 81, "pypdf": 133, "pypdfload": [131, 133], "pyplot": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 28, 112, 131, 146, 147, 171, 172, 173, 174, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "pyqt": 25, "pyramid": [25, 48], "pyroar": 167, "pyscript": 81, "pyth0ndatatyp": 53, "pythagora": 131, "pythagorean": 129, "pytho": 53, "python": [0, 98, 99, 117, 118, 126, 127, 131, 135, 140, 146, 151, 152, 159, 160, 163, 166, 170, 171, 173, 174, 176, 177, 178, 180, 182, 183, 187, 189, 191, 194, 196, 199, 200, 208], "python3": [56, 72, 117, 118, 127, 129, 131, 132, 133, 173, 174, 179], "python32": 53, "python38": 81, "python4datasci": 81, "python99": [45, 69], "python_datatyp": 53, "python_learn": 70, "python_repl": 126, "python_studi": 70, "pythonblogsoftwar": 25, "pythondatatyp": 53, "pythonpath": 81, "pythonregex": 40, "pythonthi": 90, "pythonwikiengin": 25, "pythonwin": 81, "pytorch": [180, 183, 208], "pytorch_project": 181, "pytz": [60, 64], "pyweek": 25, "q": [32, 91, 121, 145, 170, 173, 176, 177, 178, 179, 191, 195], "q9trqo4yau": 143, "qa": [118, 135, 142], "qaevalchain": 118, "qkv": 178, "qspeci": 118, "quad": [28, 32, 33], "quagsir": 167, "qualit": [176, 177, 188], "qualiti": [118, 129, 131, 132, 133, 139, 140, 142, 146, 147, 173, 174, 176], "quantil": [146, 195], "quantit": [176, 195, 197, 200], "quantiti": [133, 137, 197], "quantiz": 188, "quarter": 199, "quarterli": 201, "quartet": 191, "quartil": [146, 195, 196, 197], "queen": 194, "queenstown": 195, "queer": 129, "queri": [126, 129, 135, 136, 138, 139, 142, 156, 178, 189, 199], "query_constructor": 132, "question": [49, 117, 121, 126, 129, 131, 132, 142, 143, 144, 145, 168, 170, 172, 173, 174, 175, 176, 177, 178, 179, 181, 200], "question_answ": [118, 129, 133], "question_kei": 118, "questoin": 143, "quetion": 143, "quick": [85, 117, 118, 131, 132, 142, 154, 174, 175, 178, 179, 187, 194, 200], "quicker": [176, 177, 179], "quickest": [129, 179], "quickli": [0, 117, 118, 129, 132, 140, 142, 153, 174, 175, 176, 177, 178, 186, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201], "quiet": 132, "quietli": 129, "quilava": 167, "quilladin": 167, "quintero": 185, "quit": [8, 12, 14, 48, 55, 71, 72, 129, 132, 151, 153, 170, 171, 174, 176, 177, 178, 179, 187, 189, 190, 191, 192, 193, 194, 198, 199, 201, 202], "quo": 131, "quot": [53, 69, 75, 85, 90, 92, 93, 129, 136, 137, 139, 143, 171, 178, 186, 188], "quotat": [85, 88, 117], "quoted_statu": [139, 143], "quux": 54, "quz": 54, "qwilfish": 167, "qxzw7gfumi": 139, "r": [5, 12, 13, 14, 31, 32, 33, 48, 49, 50, 53, 54, 55, 56, 57, 62, 67, 69, 70, 72, 75, 91, 92, 102, 103, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 151, 156, 164, 167, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "r1": 150, "race": [129, 185, 193], "rachel": [118, 137], "ractangular": 32, "rad": [33, 146], "rad2deg": 33, "radian": [81, 83], "radio": [129, 144], "radiu": [102, 129], "rag": 129, "rage": [118, 142], "raichu": 167, "raikou": 167, "rail": 129, "railroad": 129, "railwai": 128, "rain": [6, 129], "rainbow": [188, 191, 194, 196, 197, 199], "rainbow_r": 191, "rais": [9, 35, 36, 39, 50, 53, 54, 55, 56, 57, 62, 69, 71, 73, 81, 83, 85, 89, 96, 105, 107, 127, 129, 132, 139, 160, 165, 174, 194], "raise_for_statu": 127, "raise_from": 127, "raison": 129, "raleigh": 142, "ralph": 129, "ralt": 167, "ram": 69, "rambl": 129, "ramen": 179, "ramp": [118, 143, 188], "rampardo": 167, "ran": [48, 71, 72, 102, 103, 129, 170], "rana": 150, "rand": [81, 156, 170, 191, 193, 199, 200, 202], "randaug": 174, "randint": [81, 82, 173, 191, 200], "randn": [26, 112, 171, 173, 177, 178, 192, 195, 199], "random": [2, 4, 9, 12, 14, 17, 18, 19, 20, 23, 26, 52, 57, 69, 87, 112, 131, 133, 149, 156, 171, 172, 176, 177, 178, 179, 180, 181, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "random_idx": 173, "random_image_path": [174, 179], "random_image_size_tensor": 170, "random_image_tensor": 178, "random_index": 178, "random_input_imag": 178, "random_input_image_error": 178, "random_numb": 81, "random_sampl": 150, "random_samples_idx": 174, "random_se": [170, 172], "random_split": 179, "random_split_1": 179, "random_split_2": 179, "random_st": [131, 172, 200], "random_tensor": [170, 173], "random_tensor_a": 170, "random_tensor_b": 170, "random_tensor_c": 170, "random_tensor_d": 170, "randomhorizontalflip": 174, "randomli": [4, 171, 172, 174, 176, 177, 179, 187, 199], "randomlist": 72, "randomst": 189, "randon": 200, "randrang": [52, 81, 82], "rang": [5, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 28, 29, 30, 36, 40, 49, 50, 53, 54, 55, 56, 58, 67, 71, 72, 73, 75, 81, 82, 90, 93, 104, 112, 129, 131, 137, 149, 150, 151, 152, 156, 157, 158, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "rangeindex": [19, 20, 156, 166], "rank": [10, 12, 14, 149, 150, 151, 152], "rank_bm25": 132, "ranska": 118, "ranskan": 118, "rant": 129, "rapid": [23, 129, 143], "rapidash": 167, "rapidli": [23, 129, 179], "rapidroad": 140, "rare": [9, 72, 107, 129, 137, 170], "rarer": 129, "raspberri": 179, "rate": [5, 6, 12, 13, 14, 129, 137, 139, 142, 146, 171, 172, 173, 174, 175, 177, 178, 179, 181, 190, 193, 194, 198], "ratelimiterror": 139, "rather": [0, 6, 8, 19, 20, 60, 67, 81, 85, 90, 104, 117, 129, 131, 132, 136, 138, 139, 142, 143, 156, 157, 159, 163, 165, 166, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 186, 195, 197, 199], "ratic": 167, "ratio": [1, 6, 15, 16, 17, 18, 83, 133, 142, 143, 179, 201], "ration": [52, 131], "rational": 179, "rattata": 167, "raw": [40, 92, 118, 132, 136, 137, 139, 143, 173, 174, 175, 176, 177, 178, 179, 180, 181, 199], "raw__payload__headers__deliv": 127, "raw_str": 92, "rayquaza": 167, "rayquazamega": 167, "rb": 69, "rbg": 203, "rbodi": 129, "rc": [186, 188, 197], "rcode": 129, "rcparam": [26, 28, 112, 197, 199, 200], "rdbm": 201, "rdbu": [172, 191], "rdbu_r": 191, "rdgy": 191, "rdgy_r": 191, "rdpu": 191, "rdpu_r": 191, "rdwtg8e7gpws62or6": 118, "rdylbu": [172, 191], "rdylbu_r": 191, "rdylgn": 191, "rdylgn_r": 191, "re": [1, 8, 12, 25, 49, 53, 54, 75, 81, 117, 118, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144, 156, 165, 166, 167, 180, 182, 185, 186, 187, 189, 190, 191, 193, 194, 195, 196, 197, 199, 201], "rea": 48, "reacal": 9, "reach": [0, 2, 12, 13, 14, 15, 16, 17, 18, 19, 20, 35, 39, 48, 50, 69, 116, 118, 129, 136, 137, 142, 174], "react": [53, 69, 117, 118, 126, 127, 131], "reaction": 132, "reactor": 129, "read": [0, 23, 36, 37, 40, 41, 67, 71, 72, 75, 76, 77, 85, 90, 97, 99, 103, 117, 118, 127, 128, 129, 131, 132, 136, 137, 139, 140, 142, 144, 150, 151, 152, 156, 164, 170, 171, 172, 173, 174, 176, 177, 178, 179, 185, 189, 190, 200, 208], "read_clipboard": [140, 156], "read_csv": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 134, 146, 147, 156, 157, 164, 167, 168, 185, 190, 196, 197], "read_excel": [156, 167], "read_html": 156, "read_imag": 174, "read_json": 156, "read_sql": 156, "read_sql_queri": 118, "read_tabl": 156, "read_timeout": 127, "readabl": [23, 29, 30, 43, 58, 69, 80, 81, 90, 99, 107, 157], "reader": [69, 117, 129, 131, 139], "readi": [0, 72, 102, 104, 117, 118, 129, 135, 136, 137, 142, 143, 170, 171, 173, 174, 176, 177, 178, 179], "readili": [86, 95], "readinto": 127, "readlin": [69, 127, 179], "readm": 69, "readthedoc": 172, "real": [2, 4, 5, 8, 9, 11, 24, 25, 32, 52, 91, 92, 93, 102, 103, 118, 129, 132, 134, 139, 140, 142, 144, 156, 171, 172, 174, 175, 176, 177, 179, 181, 189, 194, 195, 196, 199, 200, 208], "realist": 129, "realiti": [0, 91, 126, 129, 178], "realiz": [0, 129, 132, 133, 196], "realli": [17, 18, 19, 20, 40, 102, 117, 118, 129, 130, 132, 133, 135, 137, 139, 140, 142, 143, 144, 170, 171, 173, 174, 176, 177, 178, 179, 185, 187, 189, 190, 193, 194, 195, 196, 199, 200, 201, 202], "rear": 137, "rearrang": [170, 174, 177, 178], "reason": [5, 13, 36, 37, 38, 39, 52, 80, 97, 103, 107, 117, 118, 126, 127, 129, 131, 132, 135, 142, 143, 153, 162, 170, 173, 178, 179, 185, 187, 194, 196, 201], "reassign": [38, 53, 55, 91, 162, 163, 170, 174], "rebel": 129, "rebelli": 0, "rebind": 97, "recal": [2, 129, 172, 173, 177, 178], "recalcul": [171, 172], "recall_histori": 9, "recall_scor": 172, "recap": [142, 172], "receiv": [8, 44, 45, 58, 78, 107, 117, 127, 129, 136, 178, 179], "recent": [35, 36, 37, 38, 39, 41, 49, 53, 54, 55, 56, 57, 62, 67, 69, 71, 72, 73, 76, 77, 78, 79, 81, 92, 93, 94, 95, 96, 102, 103, 104, 105, 107, 127, 129, 139, 151, 160, 163, 165, 170, 173, 174, 176, 194, 199], "reciev": 25, "recip": [117, 132, 135, 171, 175, 179], "reciproc": 72, "recogn": [1, 6, 8, 17, 18, 19, 20, 39, 81, 174, 176, 177], "recognit": [1, 8, 17, 18, 132, 178, 179], "recollect": 191, "recomend": 91, "recommend": [1, 25, 39, 40, 41, 61, 62, 67, 69, 84, 103, 117, 129, 131, 132, 142, 143, 144, 149, 150, 170, 171, 174, 176, 178, 179, 181, 189, 191, 193, 194, 195, 197, 200, 208], "record": [98, 117, 129, 144, 164, 170, 185, 199, 201], "recount": [129, 142], "recours": 118, "recov": 174, "recreat": [134, 173, 174, 176, 178, 179, 180, 181], "recruit": [129, 174], "rect": [102, 193], "rectangl": [48, 102, 193, 195, 197, 201], "rectangular": [197, 201, 202], "rectifi": [45, 172], "rectifier_": 172, "recur": 107, "recurr": 208, "recurs": [23, 32, 87, 104, 179], "recursionerror": 79, "recursivecharactertextsplitt": [117, 118, 129, 131, 132, 133, 135, 140, 141, 142, 143, 144], "recursor": 79, "recv_into": 127, "red": [5, 9, 17, 18, 19, 20, 48, 90, 103, 118, 129, 137, 146, 147, 170, 171, 173, 177, 188, 191, 192, 194], "reddit": 129, "redeclar": 91, "redefin": [104, 199], "redirect": 127, "rediu": 102, "redownload": [176, 179], "reds_r": 191, "reduc": [5, 6, 12, 13, 14, 19, 20, 38, 48, 49, 75, 79, 117, 130, 136, 137, 139, 142, 143, 144, 154, 156, 171, 172, 174, 178, 179, 190, 196, 198, 199], "reduce_chain": 131, "reduceat": 154, "reduced_data_tsn": 131, "reduct": [1, 27, 131, 139, 208], "redund": [107, 156, 160], "refactor": [39, 171], "refect": 189, "refer": [23, 25, 37, 38, 50, 53, 54, 55, 69, 71, 81, 84, 85, 86, 91, 92, 96, 97, 102, 104, 107, 113, 117, 118, 126, 129, 131, 132, 138, 139, 152, 153, 154, 156, 170, 171, 172, 173, 174, 176, 178, 179, 180, 181, 183, 185, 186, 188, 189, 191, 194, 195, 197, 198, 199, 200, 201, 205], "referec": 199, "referenc": [76, 77, 170, 174, 178, 185, 194, 195], "reference_vari": 102, "referenceerror": 71, "referr": 144, "refil": 142, "refin": [139, 189], "refinedocumentschain": 129, "reflect": [79, 129, 132, 139, 171, 178, 179, 189, 193, 195, 197, 199, 201], "reform": 201, "reformat": [53, 117], "refresh": [24, 129, 171, 179, 186], "refus": 129, "reg": [40, 188, 190, 191, 192, 199, 204], "regard": [129, 140, 187, 194, 199], "regardless": [44, 170, 171, 179], "regex": [23, 42, 118, 167], "regex101": 40, "regex_pattern": 40, "regic": 167, "regigiga": 167, "regim": [177, 178], "region": [118, 129, 139], "regirock": 167, "regist": [85, 174], "registeel": 167, "reglot": 189, "regplot": [187, 191, 193, 200], "regress": [3, 8, 10, 171, 172, 186, 187, 189, 190, 193, 199, 200, 204, 208], "regret": 133, "regular": [21, 40, 48, 53, 58, 109, 113, 132, 142, 143, 156, 172, 173, 174, 176, 177, 178, 179, 180, 195, 199], "regularization_param": [12, 13, 14, 15, 16, 17, 18, 19, 20], "regularli": [0, 102, 129], "reheat": 130, "reign": 174, "reilli": 129, "reindex": 160, "reindex_axi": 197, "reinforc": 208, "reinvent": 199, "reiter": 172, "reject": 50, "rejoic": 129, "rel": [99, 117, 133, 173, 176, 186, 193, 197, 199], "relat": [5, 24, 60, 66, 67, 69, 71, 72, 78, 105, 117, 118, 132, 133, 136, 137, 172, 174, 178, 179, 185, 187, 194, 195, 198, 199, 200, 201, 202], "relationa": 156, "relationship": [1, 5, 6, 12, 13, 14, 15, 16, 17, 18, 33, 129, 171, 174, 187, 188, 189, 190, 191, 192, 197, 201], "releas": [72, 75, 117, 129, 132, 146, 170, 176, 178, 179], "release_conn": 127, "relentlessli": 133, "relev": [118, 128, 132, 136, 137, 139, 142, 144, 156, 173, 186, 190, 194, 198, 201, 202], "reli": [53, 69, 129, 179], "reliabl": [118, 136, 137], "relicanth": 167, "relief": 129, "reliev": 129, "reload": [9, 171, 198], "reload_ext": 9, "relplot": 199, "relu": [172, 173, 174, 175, 180, 181], "rem": 78, "remain": [10, 17, 18, 19, 20, 55, 69, 96, 129, 132, 172, 173, 174, 176, 178, 179, 185, 186, 189, 190, 191, 193, 198, 199, 200], "remaind": [49, 50, 78, 81, 83, 96, 105, 146], "remark": [129, 135, 139], "remean": 50, "rememb": [0, 17, 18, 19, 20, 36, 37, 48, 50, 70, 75, 76, 92, 96, 104, 107, 117, 129, 150, 170, 171, 172, 173, 174, 176, 177, 178, 193, 194, 195, 196, 197, 199], "remind": [129, 133, 139, 171, 172, 177, 179, 188], "reminisc": 128, "remoraid": 167, "remot": [72, 140, 142, 170, 177, 178], "remov": [1, 28, 37, 40, 48, 52, 53, 55, 69, 71, 81, 103, 117, 118, 127, 130, 131, 132, 136, 139, 142, 143, 160, 161, 162, 166, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 186, 189, 192, 194, 195, 196, 199, 200], "remove_sourc": 177, "renam": [16, 25, 129, 138, 149, 166, 197, 201], "rename_axi": 163, "render": [12, 14, 25, 70, 109, 113], "renown": 129, "rent": [129, 178], "reorgan": 129, "rep": [140, 144], "repeat": [1, 48, 49, 53, 54, 55, 56, 75, 79, 86, 88, 102, 104, 132, 144, 150, 153, 170, 171, 173, 178, 179, 199, 201], "repeatedli": [43, 48, 49, 50], "repel": 129, "repetit": [40, 48], "rephras": [144, 195], "repl": 126, "replac": [10, 18, 20, 36, 39, 40, 50, 53, 58, 91, 103, 104, 129, 131, 139, 140, 151, 156, 163, 165, 168, 179, 186, 188, 190, 192, 194, 196, 199], "repli": [121, 127, 129, 138, 143, 145], "replic": [171, 173, 175, 179, 180, 181, 184, 199], "repo": [118, 132, 142, 172, 173, 179], "repons": [118, 138], "report": [12, 14, 118, 129, 136, 137, 142, 144, 172], "repositori": [10, 53, 170, 175, 178, 179, 181], "repr": 25, "repres": [2, 9, 17, 18, 19, 20, 29, 30, 32, 52, 53, 61, 62, 63, 65, 66, 71, 72, 78, 85, 89, 92, 93, 99, 102, 103, 107, 117, 129, 131, 139, 160, 163, 165, 166, 170, 171, 172, 173, 178, 185, 186, 188, 189, 190, 193, 195, 196, 197, 199, 201, 202], "represent": [1, 25, 52, 53, 61, 62, 85, 102, 129, 156, 171, 174, 176, 177, 178, 179, 185, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "reprint": 129, "reproduc": [26, 112, 170, 172, 174, 175, 177, 178, 179, 196], "reproducbl": 170, "repubblica": 118, "republ": 118, "republiek": 118, "republik": 118, "republika": 118, "republiken": 118, "rep\u00fablica": 118, "request": [25, 118, 126, 127, 129, 136, 137, 138, 139, 143, 144, 151, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "request_id": 129, "request_timeout": [129, 131, 142], "requestor": 129, "requir": [0, 1, 5, 12, 13, 14, 25, 27, 35, 36, 39, 43, 48, 49, 52, 58, 71, 72, 73, 75, 78, 80, 84, 90, 91, 92, 94, 99, 102, 103, 104, 107, 116, 117, 118, 129, 131, 136, 138, 142, 156, 160, 162, 163, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201], "required_datatyp": 94, "requires_cons": [136, 137], "requires_grad": [170, 171, 172, 176, 177, 178, 179], "requires_processing_cons": [136, 137], "requires_retention_cons": [136, 137], "requis": 194, "requset": 143, "reread": 129, "rerun": 171, "resampl": 199, "resarch": 53, "rescan": 129, "rescu": [36, 39], "research": [0, 53, 118, 121, 129, 131, 140, 142, 145, 170, 172, 173, 174, 176, 179, 184, 188, 189, 194, 195, 197, 198, 201, 208], "resembl": [139, 199, 201], "reserv": [89, 91], "reset": [170, 171, 173, 174, 186], "reset_index": [156, 157, 167, 197], "resghap": 9, "reshap": [1, 9, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 137, 149, 152, 154, 174, 176, 178, 202], "reshiram": 167, "resid": [81, 192], "residplot": 200, "residu": [12, 14, 178, 191], "resiz": [69, 129, 146, 149, 174, 175, 176, 177, 178, 180, 181], "resize_s": [176, 177, 178, 179], "resnet": [176, 178], "resnet18": 176, "resnet50": 176, "resolut": [139, 146, 178], "resolv": [139, 158, 178, 179, 200], "reson": 199, "resound": 129, "resourc": [0, 35, 69, 72, 140, 143, 170, 171, 176, 178, 188, 190, 191, 196, 197, 198, 199], "resp": [127, 129, 130], "respecitv": 174, "respect": [53, 60, 67, 78, 93, 94, 95, 103, 129, 157, 159, 163, 164, 170, 171, 172, 173, 178, 179, 181, 187, 188, 189, 190, 197, 198, 199, 200, 201], "respectivv": 197, "respond": [117, 118, 128, 129, 138, 139, 142, 143, 144], "respons": [0, 105, 117, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 142, 143, 179, 194, 198, 208], "response_kw": 127, "response_schema": [117, 118, 134], "responseschema": [117, 118, 134], "rest": [7, 48, 50, 53, 54, 69, 72, 75, 85, 110, 129, 138, 144, 160, 163, 173, 174, 178, 179, 186, 189, 191, 193, 194, 195, 197, 198, 199, 200, 206], "restart": [36, 48, 81, 173, 177, 178, 179, 186], "restaur": [129, 142, 189, 193, 194, 196], "restcountri": 118, "restor": [82, 137], "restrict": [39, 102, 107, 129, 137, 196], "restructur": 85, "result": [0, 4, 8, 12, 13, 14, 28, 29, 30, 32, 33, 35, 36, 37, 38, 40, 41, 45, 48, 49, 50, 52, 53, 54, 55, 66, 67, 71, 72, 75, 76, 78, 79, 81, 86, 89, 90, 95, 96, 104, 105, 117, 118, 127, 129, 132, 134, 135, 137, 139, 140, 141, 142, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 175, 176, 178, 180, 181, 182, 186, 188, 189, 190, 191, 197, 198, 199, 200, 201], "resum": 129, "resurc": 198, "ret": 194, "retail": [129, 134], "retain": [173, 178], "retention_period": [136, 137], "rethink": 176, "retir": 129, "retool": 143, "retrac": 135, "retri": [127, 129, 136, 137, 139], "retriev": [39, 53, 56, 78, 85, 93, 118, 121, 133, 135, 141, 142, 144, 165, 170, 176], "retrievalqa": [118, 135, 142], "retrieved_doc": 132, "retriever_from_llm": 132, "retriever_mmr": 141, "retriever_vanilla": 141, "retro": 143, "retrospect": 129, "retry_decor": 129, "retry_object": 129, "retry_st": 129, "retry_with": 129, "retrycallst": 129, "return": [9, 12, 14, 17, 18, 19, 20, 25, 31, 35, 36, 38, 39, 40, 48, 49, 53, 57, 58, 60, 61, 62, 63, 65, 66, 69, 70, 71, 72, 73, 76, 78, 79, 80, 81, 82, 83, 85, 86, 89, 90, 95, 96, 102, 103, 104, 105, 107, 117, 118, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 150, 151, 152, 153, 156, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 186, 187, 188, 193, 194, 196, 199, 200, 201], "return_direct": 127, "return_full_docu": 132, "return_intermediate_step": [117, 118, 129], "return_only_output": [127, 129], "return_source_docu": 135, "return_split_parent_docu": 132, "retweet": [139, 143], "retweeted_statu": [139, 143], "reuniclu": 167, "reus": [25, 39, 102, 129, 151, 174, 175, 177, 178, 180, 181], "reusabl": [41, 75, 81, 102, 104, 175, 178, 181, 182], "rev": 146, "rev_str": 36, "reveal": [107, 174, 178, 179, 188, 200], "reveng": 142, "revenu": [136, 144, 188], "revers": [36, 38, 53, 55, 56, 129, 139, 143, 149, 170, 188], "review": [117, 118, 136, 144, 149, 174, 178, 179, 193, 194], "revis": [0, 196, 197], "revisit": [142, 190, 191], "reviv": 129, "revolut": 146, "revolution": [1, 143], "revolv": 144, "reward": [1, 40, 53, 118, 144], "rewrit": [45, 75, 175, 181], "rewritten": 58, "rf": [176, 177, 178, 179], "rfind": 53, "rfloor": 96, "rgb": [12, 173, 174, 176, 180, 181, 188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "rgba": [188, 190], "rheader": 129, "rhydon": 167, "rhyhorn": 167, "rhyperior": 167, "ribbon": 129, "ricasoli": 129, "rich": [129, 132, 142, 195, 199, 200], "richard": [0, 177], "rid": [129, 132, 172, 186, 192, 194, 196], "ride": [129, 139], "rideau": 118, "ridg": 129, "right": [28, 29, 31, 33, 43, 53, 73, 78, 85, 90, 95, 96, 104, 105, 117, 118, 128, 129, 132, 133, 139, 142, 144, 146, 147, 151, 156, 170, 171, 172, 173, 174, 176, 177, 178, 179, 186, 187, 189, 190, 193, 194, 195, 196, 197, 198, 201], "rightarrow": [28, 29, 30, 32, 33], "rigid": 132, "rigor": [129, 199], "rim": 129, "riolu": 167, "rippl": 143, "risd": 129, "rise": 178, "risk": [117, 132, 139, 144, 199, 200], "riski": 117, "river": [118, 129], "rjust": [31, 53, 95], "rm": [176, 177, 178, 179], "rmdir": 81, "rmtree": [70, 179], "road": 176, "roam": 81, "robert": [129, 132, 171, 188], "robocal": 142, "robot": 1, "robust": [99, 137, 142, 153, 174, 189, 203], "rock": 167, "rocket": [0, 25, 129, 191, 193, 194, 196, 197, 198, 199, 200, 201], "rocket_r": 191, "rocki": 129, "rococo": 129, "rodriguez": 185, "roduct": 29, "roger": 146, "roggenrola": 167, "rohan": [6, 140], "roi": [129, 199], "role": [0, 21, 90, 104, 130, 138, 139, 140, 142, 143, 144, 156, 208], "roll": [129, 154, 165, 171, 178], "roman": 129, "rome": 117, "romero": [156, 157, 168], "ron": 129, "ronald": [11, 15], "ronaldo": [48, 49, 146], "roof": [129, 137], "room": [5, 129, 132, 139, 142], "roommat": 129, "root": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 69, 72, 81, 83, 118, 129, 149, 152, 173, 174, 179, 180, 181], "root_dir": 118, "rootsoflisp": 135, "rose": [137, 159], "roselia": 167, "roserad": 167, "rosini": 129, "ross": 173, "rot": [129, 188], "rotat": [174, 178, 179, 188], "rotom": 167, "rotomfan": 167, "rotomfrost": 167, "rotomheat": 167, "rotommow": 167, "rotomwash": 167, "rough": [143, 199], "roughli": [117, 129, 178, 179, 190, 201], "round": [32, 36, 44, 53, 58, 81, 94, 96, 132, 143, 172, 179], "rout": [132, 179], "routin": [88, 152, 197, 199], "row": [9, 10, 13, 16, 17, 18, 19, 20, 32, 48, 49, 58, 69, 118, 129, 146, 149, 150, 151, 152, 153, 156, 160, 161, 163, 165, 166, 167, 170, 173, 176, 178, 179, 187, 189, 190, 191, 193, 197, 198, 200, 201, 202, 203], "row1": 162, "row2": 162, "row_color": 203, "row_index": 164, "row_index1": 158, "row_index2": 158, "row_labl": 156, "row_ord": [189, 198, 201], "row_posit": 156, "row_r1": 151, "row_r2": 151, "row_set": [176, 177, 178, 179], "royalti": 129, "rpm": 168, "rss": 129, "rstrip": 53, "rt": 69, "rtm": 129, "rtol": 173, "rtx": [170, 176], "ru": 118, "rubi": 99, "rufflet": 167, "rug": [129, 187, 192], "rule": [1, 8, 19, 20, 32, 33, 53, 75, 99, 104, 152, 156, 170, 171, 172, 179, 194, 197, 201], "run": [0, 7, 23, 24, 25, 35, 36, 37, 38, 48, 49, 50, 52, 58, 60, 61, 62, 63, 64, 65, 66, 67, 71, 72, 75, 76, 77, 78, 81, 97, 99, 102, 104, 110, 117, 118, 126, 127, 129, 131, 133, 135, 136, 137, 138, 139, 140, 143, 144, 171, 172, 173, 174, 175, 176, 178, 181, 182, 186, 188, 196, 198, 199, 206], "run_as_str": 127, "runawai": 129, "runnabl": 99, "runner": 129, "runtim": [71, 72, 81, 104, 135, 171, 173, 174, 176, 177, 178, 179, 181, 185], "runtimeerror": [71, 72, 170, 173, 174], "runtimewarn": 152, "rupert": 142, "russel": 129, "rusti": 129, "rvalu": 187, "rvert_": 28, "rw": 171, "rwightman": 176, "r\u00e9publiqu": 118, "s1": [60, 102, 165, 166], "s2": [60, 102, 165, 166], "s2023": 140, "s3": [165, 166, 173], "s4": 166, "s_car": 104, "saa": 140, "sabley": 167, "sableyemega": 167, "sach": 129, "sacrific": [170, 173, 179], "sad": 37, "safe": [55, 69, 102, 129, 132, 136, 137, 140, 188, 192], "safer": [69, 70, 139], "safeti": 134, "sagemak": 179, "sai": [2, 5, 6, 8, 38, 40, 49, 78, 81, 103, 104, 117, 118, 127, 128, 129, 130, 132, 133, 138, 142, 143, 144, 156, 170, 172, 173, 174, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201], "said": [2, 9, 53, 104, 129, 130, 131, 132, 135, 142, 152, 172, 174, 178, 186, 188, 189, 190], "saint": 146, "sake": [129, 157, 185], "salad": [117, 130, 136], "salam": 167, "salamencemega": 167, "salari": [73, 102, 104, 132, 146, 160], "salary_rang": 137, "salarynotinrangeerror": 73, "sale": [118, 129, 136, 137, 140, 144, 199], "sales_data_of_bathingsoap": 147, "sales_rep": 140, "sales_rep_compani": 144, "sales_rep_nam": 144, "salesdata": 147, "salesforc": 136, "salk": 48, "salli": 117, "salmon": 197, "salt": 117, "salvag": 129, "sam": [117, 129, 131, 140, 142, 157, 159, 160, 161, 162, 163, 166], "same": [8, 10, 18, 20, 21, 29, 30, 32, 33, 35, 36, 38, 41, 44, 45, 48, 50, 53, 57, 72, 75, 76, 77, 78, 80, 81, 82, 84, 85, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 109, 113, 118, 127, 129, 131, 132, 136, 137, 138, 139, 142, 143, 147, 149, 150, 151, 152, 153, 156, 159, 160, 161, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201], "sampl": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 26, 35, 69, 82, 92, 102, 104, 112, 117, 133, 136, 137, 139, 143, 150, 153, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 190, 191, 193, 194, 195, 196, 199, 200, 201], "sample_1": 195, "sample_2": 195, "sample_3": 195, "sample_cmap": 188, "sample_color": 188, "sample_combo": 195, "sample_decscription_str": 139, "sample_descript": 139, "sample_melt": [193, 201], "samsara": 143, "samsung": 78, "samurott": 167, "san": [117, 118, 129, 138, 140, 142, 144, 146, 185], "san_francisco_tre": 118, "sandal": [8, 18, 20, 173], "sandil": 167, "sandshrew": 167, "sandslash": 167, "sandwich": 139, "sandwichlov": 139, "sanit": 139, "sanitize_sequ": 194, "santa": 129, "sapp": 185, "sarah": 142, "sarban": 132, "sarcasm": 128, "sassi": 128, "sat": [170, 194, 195, 196, 197], "satisfi": [0, 32, 38, 43, 49, 50, 58, 104, 129, 151, 178], "satur": [188, 195, 196, 197, 199], "sauerkraut": 130, "saunter": 129, "sausag": 130, "saut\u00e9": 130, "save": [25, 31, 35, 36, 81, 88, 99, 117, 129, 132, 134, 137, 139, 140, 142, 146, 170, 172, 174, 176, 177], "save_filepath": 177, "save_model": [175, 177, 178, 179, 180, 181], "saved_model": 181, "saved_model_01": 171, "savefig": [31, 146, 147, 179], "savor": [133, 139], "saw": [25, 129, 138, 142, 172, 176, 177, 178, 179], "sawk": 167, "sawsbuck": 167, "scalabl": [131, 179, 201], "scalar": [27, 152, 153, 156, 157, 172, 177, 196, 197], "scale": [1, 129, 142, 143, 144, 146, 153, 172, 173, 175, 176, 177, 178, 179, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "scale_hu": 196, "scan": [99, 129, 174, 200], "scandir": 174, "scar": 129, "scarc": 129, "scare": 129, "scari": 129, "scatter": [0, 9, 11, 12, 13, 14, 15, 16, 131, 158, 171, 172, 179, 187, 189, 191, 192, 193, 194, 198, 200, 201, 204], "scatter3d": 12, "scatter_kw": [189, 190, 191, 193, 200], "scatterbug": 167, "scatterplot": [189, 190, 191, 193, 194, 201], "scc": 190, "scenario": [1, 5, 77, 104, 138, 142, 174, 178, 179, 186, 189, 190, 194, 195, 196, 199], "scene": [12, 170, 171, 173, 177], "sceneri": 117, "sceptil": 167, "sceptilemega": 167, "schedul": [0, 144, 171, 178], "schema": [130, 131, 134, 136, 137, 138, 142, 144], "scheme": [129, 132, 178, 188], "schnitzel": 130, "school": [24, 52, 117, 118, 128, 129, 132, 139, 140, 157, 170, 196, 197], "schtick": 129, "scienc": [1, 2, 9, 23, 25, 56, 69, 75, 81, 117, 118, 126, 129, 131, 133, 136, 137, 139, 142, 156, 159, 169, 171, 172, 178, 181, 187, 189, 198, 199, 201], "scientif": [25, 149, 178, 188, 196], "scientist": [117, 118, 128, 172, 177], "scikit": [142, 149, 172, 200, 208], "scipi": [25, 152, 187, 192, 199, 200], "scizor": 167, "scizormega": 167, "scoliped": 167, "scope": [23, 37, 71, 76, 77, 81, 90, 95, 101, 128, 132, 143, 172, 194, 195, 201], "score": [2, 5, 9, 10, 12, 14, 118, 129, 134, 157, 172, 195, 197], "scorebook": 197, "scorecard": [197, 201], "scott": [139, 196], "scrafti": 167, "scraggi": 167, "scrap": 129, "scrape": [0, 143, 144], "scratch": [35, 102, 104, 131, 170, 175, 176, 177, 178, 179], "scream": 129, "screen": [0, 53, 60, 88, 95, 139, 189, 198], "screen_nam": [139, 143], "screw": 129, "script": [0, 25, 72, 81, 99, 128, 129, 142, 143, 172, 173, 174, 176, 177, 178, 182], "scroll": 171, "scrub": 142, "scrum": 140, "scrumptiou": 139, "sculptur": 129, "scyther": 167, "sd": [153, 197, 199], "sdk": 179, "se": [129, 142], "sea": 129, "seaborn": [190, 191, 192, 197, 198, 199, 200, 201, 202, 203], "seadra": 167, "seagreen": 201, "seak": 167, "seal": 129, "sealeo": 167, "search": [39, 53, 56, 84, 97, 104, 117, 118, 126, 127, 131, 132, 136, 137, 168, 173, 177, 178, 179, 198], "search_kwarg": [132, 141], "search_str": 127, "search_term": 127, "search_typ": 141, "searchabl": 117, "season": 129, "seat": 129, "sec": 144, "second": [8, 32, 35, 36, 38, 47, 48, 53, 54, 55, 58, 61, 62, 64, 65, 66, 67, 71, 72, 76, 78, 81, 86, 91, 95, 96, 103, 104, 107, 129, 130, 138, 139, 140, 141, 144, 151, 159, 160, 163, 165, 168, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 186, 194, 195, 196, 197, 199, 201], "second_last": 53, "second_lett": 53, "second_numb": 95, "second_respons": 138, "secondari": 47, "secondli": [136, 137, 170, 189, 199], "secret": 178, "section": [0, 3, 8, 37, 52, 53, 58, 69, 90, 95, 116, 117, 118, 131, 139, 140, 144, 156, 157, 158, 159, 160, 161, 164, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 193, 196, 198, 199], "sector": [15, 16, 143], "secur": [102, 118, 132, 136, 137, 140, 144, 171, 173], "sedan": [156, 157, 168], "sediment": 129, "see": [5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 35, 36, 37, 38, 39, 40, 41, 45, 48, 49, 50, 52, 53, 56, 58, 67, 69, 71, 72, 75, 76, 77, 78, 80, 81, 82, 85, 89, 90, 93, 94, 95, 96, 99, 102, 104, 105, 107, 109, 110, 112, 113, 117, 118, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 149, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 205, 206], "seed": [26, 82, 112, 129, 132, 171, 173, 174, 176, 178, 179, 180, 181, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "seedot": 167, "seek": [69, 170], "seek_set": 69, "seekabl": 69, "seeker": [129, 136, 137], "seel": 167, "seem": [52, 84, 107, 117, 118, 129, 131, 132, 133, 135, 172, 173, 177, 178, 179, 187, 195, 196, 198, 199, 200, 201], "seen": [37, 39, 69, 107, 129, 132, 139, 156, 157, 165, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 191, 192, 193, 194, 195, 200, 201], "segment": [1, 86, 118, 142, 173, 186, 187, 189, 193, 198], "segreg": [186, 193, 196, 197, 199, 201], "seismic": 191, "seismic_r": 191, "seismitoad": 167, "seiz": 142, "selct": 0, "seldom": 129, "select": [1, 5, 6, 25, 53, 117, 118, 129, 131, 142, 143, 144, 146, 149, 151, 157, 160, 163, 168, 176, 177, 179, 188, 196, 199, 200, 201], "select_difficulti": 84, "select_threshold": 9, "selectbackward0": [172, 178], "selected_doc": 131, "selected_indic": 131, "selenium": 0, "self": [0, 1, 35, 36, 39, 58, 72, 73, 85, 102, 104, 105, 118, 127, 129, 137, 160, 163, 165, 170, 171, 172, 173, 174, 175, 176, 179, 180, 181, 185, 194], "self_attn": 178, "self_mag": 105, "self_queri": 132, "selfattent": 178, "selfqueryretriev": 132, "sell": [102, 129, 131, 132, 140, 142], "seller": 132, "semant": [117, 131, 132, 134, 135], "semanticsimilarityexampleselector": 117, "semest": 171, "semi": [25, 104, 176], "send": [127, 136, 137, 138, 142, 144, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 199], "senior": 137, "sens": [1, 5, 12, 13, 14, 38, 48, 89, 91, 129, 133, 135, 139, 152, 156, 171, 172, 173, 175, 178, 181, 185], "sensat": 178, "sensibl": 105, "sensit": [50, 89, 91, 96, 177, 188, 199], "sent": [8, 118, 129, 130, 137, 138, 142, 144, 179], "sentenc": [40, 48, 53, 95, 117, 118, 128, 129, 133, 139, 140, 142, 144, 178], "sentiment": 144, "sentinel": 35, "sentret": 167, "sep": [61, 62, 85, 88, 153, 167], "sepal": [10, 11, 15, 146, 185, 193], "sepal_length": [11, 15, 185, 191, 193, 194, 200, 203], "sepal_width": [11, 15, 185, 190, 191, 193, 194, 200, 203], "sepallength": 146, "sepallengthcm": 146, "sepalwidthcm": 146, "separ": [0, 8, 19, 20, 45, 48, 52, 53, 54, 55, 56, 57, 58, 69, 70, 72, 73, 75, 89, 91, 93, 95, 96, 97, 102, 104, 117, 118, 129, 131, 132, 139, 142, 144, 147, 158, 164, 171, 172, 173, 174, 186, 187, 189, 191, 193, 195, 196, 199, 200, 201], "separatelli": 16, "seper": 174, "septemb": [129, 136], "seq": [29, 30, 82], "sequenc": [29, 30, 35, 36, 48, 50, 54, 55, 56, 69, 70, 71, 75, 79, 80, 81, 82, 88, 90, 92, 93, 94, 96, 97, 117, 136, 151, 153, 165, 166, 170, 176, 178, 189, 190, 199, 200], "sequencemethod": 90, "sequenti": [1, 165, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "sequoia": 137, "seren": 185, "serena": 131, "seri": [30, 36, 47, 48, 49, 65, 81, 99, 117, 118, 131, 132, 134, 139, 140, 142, 168, 171, 173, 174, 175, 176, 178, 179, 189, 192, 193, 196, 198, 201, 208], "serial": [85, 171], "serie_function1": 28, "serie_function2": 28, "serif": [197, 199], "seriou": [128, 129], "serp_api_kei": 117, "serpapi": [117, 126], "serpapi_api_kei": [117, 126], "serperior": 167, "serv": [4, 10, 11, 18, 20, 73, 85, 109, 113, 117, 129, 130, 138, 143, 171, 178, 198], "server": [2, 9, 129, 132, 139, 177, 179, 199], "servic": [117, 129, 134, 138, 140, 143, 173, 175, 177, 179], "servin": 167, "session": [81, 127, 144, 174, 177], "set": [0, 1, 2, 4, 5, 10, 11, 13, 14, 15, 16, 23, 25, 35, 39, 40, 49, 53, 54, 59, 69, 75, 81, 92, 94, 96, 103, 104, 117, 118, 127, 129, 130, 131, 132, 133, 138, 139, 140, 143, 144, 146, 150, 151, 153, 156, 157, 158, 160, 161, 162, 163, 170, 172, 173, 175, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "set1": [189, 191, 194, 197, 201], "set1_cont": 141, "set1_r": 191, "set2": [191, 195, 196, 197, 200], "set2_cont": 141, "set2_r": 191, "set3": [191, 195, 196], "set3_r": 191, "set_": 194, "set_1": 103, "set_access_token": [139, 143], "set_axis_label": [198, 201], "set_context": 186, "set_except": 129, "set_fonts": 197, "set_hatch": 146, "set_index": [156, 164, 173, 179, 197], "set_opt": 156, "set_printopt": 154, "set_se": [177, 178, 179], "set_styl": [186, 188, 190, 196, 197], "set_temperatur": 39, "set_titl": [147, 174, 179, 198, 201], "set_transform": 194, "set_vis": 200, "set_xlabel": [178, 179, 196, 197, 199], "set_xtick": [178, 197], "set_xticklabel": [196, 198], "set_ylabel": [178, 179, 196, 197, 199], "set_ytick": [178, 197], "setattr": [103, 104], "setenec": 140, "seterr": 154, "setlevel": 132, "setmaxpric": 102, "setosa": [10, 11, 15, 146, 185, 193, 203], "setstat": 82, "settabl": 52, "setter": 102, "settl": [0, 129, 142], "settler": 129, "setup": [15, 16, 19, 20, 170, 171, 174, 175, 180, 181], "seven": [129, 140, 143, 144], "sever": [5, 6, 10, 11, 15, 25, 36, 40, 46, 54, 66, 67, 72, 81, 95, 129, 132, 151, 170, 172, 174, 175, 176, 177, 178, 179, 181, 196], "severli": 178, "sevip": 167, "sewaddl": 167, "sex": [172, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201], "sex_tim": 196, "sfdc": 136, "sfp": 129, "sftree": 118, "sgd": [171, 172, 173, 178], "sgml": 129, "shaan": 142, "shaanvp": 139, "shade": [129, 188, 190], "shadow": [129, 189], "shake": [129, 172], "shakespear": 131, "shall": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "shame": 129, "shampoo": 147, "shampoosalesdata": 147, "shape": [1, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 31, 102, 129, 143, 149, 150, 151, 152, 153, 156, 160, 171, 175, 176, 177, 179, 180, 181, 185, 189, 193, 196], "sharabl": 102, "share": [0, 10, 18, 20, 81, 103, 107, 117, 127, 129, 131, 133, 139, 140, 142, 143, 144, 156, 170, 175, 176, 177, 178, 179, 187, 188, 194, 199, 201], "shareabl": [177, 179], "sharei": [31, 178, 187, 189, 198, 201], "sharex": [31, 147, 178, 187, 189, 196, 198, 201], "sharpedo": 167, "sharpedomega": 167, "sharpli": 174, "shayminland": 167, "shayminski": 167, "she": [73, 102, 117, 129, 139, 142, 144], "shear": 129, "shedinja": 167, "sheet": [129, 148, 155, 156, 169, 171], "sheet_nam": 69, "shelfwar": 144, "shelgon": 167, "shell": [36, 37, 38, 67, 88, 126, 170, 179, 189], "shellder": 167, "shello": 167, "shelmet": 167, "shelter": 129, "shelton": 185, "shepherd": 144, "shibbi": 118, "shieldon": 167, "shift": [25, 45, 48, 49, 50, 90, 96, 105, 129, 136, 170, 177, 200], "shiftri": 167, "shimmer": 129, "shine": [129, 178, 191, 193, 196], "shinx": 167, "ship": [117, 118, 139], "shirt": [18, 20, 129, 173], "shoe": 129, "shoot": [129, 185], "shop": [129, 132], "shopifi": 118, "shopper": 129, "shore": 129, "short": [46, 48, 58, 75, 80, 85, 90, 117, 128, 129, 131, 133, 139, 144, 164, 170, 173, 174, 175, 177, 178, 179, 181, 198], "short_list": [139, 143], "shortcut": [23, 32, 170], "shorten": 72, "shorter": 132, "shortest": 129, "shorthand": 146, "shortli": [178, 179, 189, 196, 200], "shot": [117, 118, 126, 127, 129, 131, 185, 197, 199], "should": [5, 6, 7, 9, 12, 13, 14, 15, 16, 17, 18, 36, 37, 38, 40, 41, 44, 45, 48, 52, 58, 69, 70, 72, 75, 85, 90, 91, 95, 99, 103, 107, 110, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 142, 143, 144, 146, 147, 151, 152, 156, 157, 160, 161, 164, 165, 166, 170, 171, 172, 175, 178, 179, 180, 181, 187, 188, 189, 190, 194, 195, 199, 201, 206, 208], "shouldn": [173, 174, 177, 194, 199], "shout": 178, "shovel": 129, "show": [5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 35, 49, 50, 53, 61, 62, 66, 76, 78, 79, 80, 81, 92, 99, 102, 103, 105, 109, 110, 113, 117, 118, 129, 131, 133, 135, 140, 142, 143, 146, 156, 157, 159, 162, 163, 164, 166, 170, 171, 173, 174, 176, 178, 179, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 206], "show_config": 154, "show_progress": 132, "showcap": 193, "showcas": [139, 170, 176, 178, 179], "showflier": [193, 195], "shown": [4, 35, 38, 39, 45, 48, 50, 53, 54, 71, 84, 99, 102, 137, 156, 157, 158, 160, 161, 162, 163, 164, 175, 186, 195, 197, 202], "showroom": 156, "shrdlu": 129, "shrimp": 130, "shroomish": 167, "shuckl": 167, "shuffl": [52, 82, 129, 173, 174, 175, 179, 180, 181], "shuppet": 167, "shutil": [70, 179], "si": 117, "sibl": 8, "sibsp": [195, 197], "side": [104, 118, 129, 130, 144, 156, 170, 173, 174, 175, 180, 181, 186, 193, 195, 201], "sierra": 129, "sig": 194, "sight": [35, 129], "sigilyph": 167, "sigma": [9, 29, 82], "sigma_squar": 9, "sigmoid": [6, 8, 172], "sigmoidbackward0": 172, "sign": [26, 30, 78, 83, 90, 112, 118, 129, 136, 137, 144, 179, 189, 194], "signal": [1, 8, 133, 136, 137, 139, 142, 143, 179, 199], "signatur": [107, 129], "signer": 144, "signific": [24, 52, 91, 144, 156, 173, 178, 185, 188, 189], "significantli": [9, 12, 13, 14, 129], "signs_of_mental_il": 185, "silcoon": 167, "silenc": 164, "silent": 129, "silicon": [128, 129, 139], "siliconoracl": 128, "siliconvallei": 132, "silu": 176, "silver": 174, "silverman": 196, "simiar": 93, "similar": [0, 1, 5, 8, 9, 12, 14, 34, 36, 38, 40, 41, 48, 49, 53, 55, 58, 75, 81, 84, 90, 97, 103, 109, 113, 117, 118, 129, 131, 132, 134, 139, 141, 142, 151, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 186, 189, 190, 192, 193, 194, 196, 198, 199, 201, 202, 203], "similar_prompt": 117, "similari": 96, "similarity_": 31, "similarity_search": [132, 133], "similarli": [32, 33, 39, 40, 52, 53, 57, 69, 70, 76, 77, 84, 92, 93, 97, 102, 103, 104, 105, 107, 129, 159, 166, 173, 178, 185, 187, 188], "similiar": [172, 173, 177, 178], "simipour": 167, "simisag": 167, "simisear": 167, "simmer": 130, "simmon": 188, "simpl": [0, 8, 19, 20, 21, 23, 25, 35, 36, 37, 38, 39, 49, 53, 56, 60, 69, 72, 73, 81, 88, 92, 96, 98, 99, 103, 107, 109, 113, 129, 131, 133, 135, 140, 143, 144, 158, 160, 163, 164, 166, 171, 172, 174, 177, 179, 180, 181, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 208], "simple_transform": [174, 177], "simplefilt": 131, "simpler": [25, 79, 117, 172, 189, 190, 196, 200], "simplesequentialchain": 117, "simplest": [44, 48, 53, 81, 126, 150, 152, 173, 178, 179, 189, 195, 197], "simpli": [35, 36, 38, 39, 49, 53, 75, 84, 90, 95, 96, 97, 103, 104, 118, 129, 132, 139, 142, 144, 152, 160, 178, 198], "simplier": [12, 13, 14, 15, 16, 17, 18, 19, 20], "simplif": 178, "simplifi": [6, 8, 38, 118, 160, 174, 178], "simul": [105, 117, 129], "simultan": [5, 6, 78, 190, 191, 196, 199], "sin": [12, 13, 14, 15, 16, 17, 18, 28, 81, 83, 149, 152, 186, 199, 201], "sinc": [8, 9, 11, 12, 13, 14, 36, 38, 40, 45, 48, 50, 54, 55, 56, 57, 66, 67, 69, 72, 75, 78, 81, 82, 93, 102, 103, 104, 105, 107, 118, 128, 129, 132, 133, 139, 142, 143, 144, 151, 153, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 191, 192, 193], "sine": [28, 81, 83, 149, 186, 199], "sing": [95, 102, 129, 170], "singer": 117, "singl": [5, 12, 14, 27, 38, 40, 48, 53, 54, 57, 67, 72, 77, 80, 92, 93, 99, 102, 107, 129, 131, 132, 136, 137, 139, 140, 141, 142, 143, 150, 151, 156, 158, 165, 170, 172, 173, 175, 177, 179, 180, 181, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203], "single_feature_map": 178, "single_flattened_feature_map": 178, "singular": [32, 137, 152], "sinh": [52, 81, 83], "sink": 129, "sinlg": 179, "sinplot": 186, "sinusoid": [5, 12, 13, 14, 15, 16, 17, 18, 201], "sinusoid_degre": [12, 13, 14, 15, 16, 17, 18], "sister": [129, 137], "sit": [118, 129], "sitcom": 132, "site": [81, 117, 118, 126, 127, 129, 131, 132, 133, 144, 160, 163, 164, 165, 174, 185, 188, 192, 194], "sitter": 129, "situat": [0, 36, 47, 55, 72, 75, 78, 94, 129, 139, 186], "six": [107, 127, 129, 156, 157, 168, 188], "sixteen": 129, "size": [5, 6, 9, 10, 12, 13, 14, 17, 18, 19, 20, 48, 49, 50, 53, 69, 84, 102, 117, 129, 131, 132, 140, 142, 144, 149, 150, 152, 153, 156, 157, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203], "size_func": 200, "skarmori": 167, "sketch": [102, 103, 129], "skew": [179, 199], "skewer": 130, "skiddo": 167, "skiff": 129, "skill": [1, 48, 69, 91, 102, 104, 129, 137, 146, 176, 178, 179, 199, 200], "skillet": [117, 130], "skim": 129, "skinnier": 196, "skip": [44, 45, 48, 49, 50, 53, 72, 78, 129, 133, 143, 172, 173, 174, 176, 177, 178, 179, 181], "skiploom": 167, "skitti": 167, "sklearn": [131, 172, 173, 200], "skorupi": 167, "skrelp": 167, "skuntank": 167, "sky": [129, 188], "slack": [118, 127, 144], "slake": 167, "slakoth": 167, "slash": [53, 70, 196], "slashdot": 129, "sled": 129, "sleep": [23, 68, 81, 88, 129], "sleev": 133, "slice": [57, 90, 93, 130, 151, 156, 200], "slice_a": 151, "slicebackward0": [172, 178], "slick": 129, "slide": 129, "slidingtackl": 146, "sliggoo": 167, "slight": [21, 55, 109, 113, 173, 179, 201], "slightli": [67, 129, 132, 170, 171, 174, 176, 177, 178, 179, 185, 194], "slip": [129, 132], "slk": 118, "slope": [129, 187, 197], "sloppi": [118, 131], "slot": 151, "slow": [129, 132, 152, 160, 179], "slowbro": 167, "slowbromega": 167, "slower": [99, 179], "slowk": 167, "slowli": [129, 174, 177, 178, 179, 193, 194, 195, 199], "slowpok": 167, "slugma": 167, "slurpuff": 167, "sm_doc": 129, "sm_loader": 129, "small": [8, 12, 13, 14, 21, 50, 58, 73, 81, 86, 99, 109, 113, 117, 118, 129, 131, 132, 133, 140, 142, 144, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 189, 191, 193, 197, 199, 200, 201], "smaller": [0, 47, 75, 94, 118, 129, 131, 132, 142, 149, 152, 159, 170, 171, 173, 174, 176, 177, 178, 179, 191, 193, 200], "smallest": [57, 83, 131, 178], "smallpox": 48, "smart": [91, 117, 128, 129, 142, 178, 179], "smart_divid": 38, "smarter": 140, "smartest": 142, "smartphon": [173, 178, 179], "smash": 176, "smeargl": 167, "smi": 170, "smile": 129, "smim": 157, "smith": [117, 142, 157], "smoke": [129, 172, 199, 201], "smoker": [189, 192, 193, 194, 195, 196, 197, 198, 199, 201], "smoochum": 167, "smoot": 199, "smooth": [135, 179, 196, 199], "smoother": 189, "smoothli": 78, "sn": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "snail": 139, "snake": 91, "snake_cas": 91, "sname": 163, "snapshot": [136, 137], "sne": 131, "sneak": [129, 185], "sneaker": [18, 20, 142, 173], "sneaki": 178, "sneasel": 167, "snippet": [117, 118, 134], "snivi": 167, "snore": 132, "snorlax": 167, "snorunt": 167, "snover": 167, "snow": [6, 129], "snowfal": 129, "snowflak": 129, "snowi": 129, "snowsho": 129, "snubbul": 167, "so": [0, 2, 4, 7, 8, 15, 16, 18, 19, 20, 23, 28, 32, 33, 35, 36, 37, 38, 39, 45, 46, 47, 48, 49, 50, 53, 54, 55, 57, 69, 71, 72, 75, 76, 78, 80, 81, 82, 86, 89, 90, 91, 94, 96, 97, 99, 102, 103, 104, 105, 107, 110, 117, 118, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 149, 151, 152, 156, 157, 160, 162, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206], "soak": 139, "soar": 198, "soccer": [146, 201], "social": [2, 9, 129, 144], "societi": [126, 129, 132, 139], "socket": [25, 127], "socketerror": 127, "sockettimeout": 127, "sofifa": 146, "soften": [129, 130], "softmax": [170, 172, 173, 174, 175, 176, 179, 180, 181], "softwar": [0, 25, 129, 132, 134, 137, 140, 144, 176, 178, 179, 189], "solar": 139, "sold": [118, 129, 136, 137, 142, 147], "sole": [187, 188, 199], "solemn": 129, "solid": [129, 139, 143, 179, 186], "solo": 117, "solosi": 167, "solrock": 167, "solut": [1, 37, 39, 41, 71, 77, 94, 131, 132, 139, 140, 143, 147, 152, 168, 179, 196, 199, 201], "solv": [32, 58, 77, 102, 126, 129, 131, 139, 158, 178, 188, 189], "som": 143, "some": [0, 2, 6, 8, 21, 22, 24, 25, 26, 29, 30, 35, 36, 37, 38, 39, 40, 43, 48, 49, 52, 53, 54, 55, 56, 57, 58, 69, 71, 72, 75, 77, 79, 81, 85, 88, 93, 95, 96, 99, 102, 104, 107, 109, 111, 112, 113, 114, 117, 118, 121, 129, 130, 131, 132, 133, 138, 139, 140, 142, 143, 144, 145, 151, 152, 153, 156, 157, 160, 162, 163, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 199, 200, 201, 205], "some_tensor": 170, "some_transform": [175, 181], "somebodi": 144, "somedai": 199, "somehow": [189, 197], "someon": [86, 118, 129, 131, 135, 136, 137, 143, 144, 170, 172, 175, 178, 179, 199], "somersault": 129, "someth": [0, 18, 19, 20, 35, 36, 45, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 79, 81, 90, 95, 118, 127, 129, 131, 132, 133, 135, 139, 140, 142, 144, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201], "sometim": [48, 50, 53, 72, 73, 75, 78, 79, 88, 95, 102, 129, 132, 136, 137, 150, 156, 163, 164, 170, 171, 172, 173, 174, 175, 178, 179, 180, 181, 186, 194, 196, 200], "somewher": [50, 54, 129, 139, 171, 173, 188, 195], "son": [129, 133], "song": [84, 102, 118, 170, 171, 174, 179], "songwrit": 117, "soon": [48, 71, 102, 103, 117, 118, 126, 127, 129, 132, 133, 140, 172, 173, 178, 189, 191], "sophiaamoruso": 139, "sophist": [118, 170], "sophomor": 129, "sorri": [128, 129, 139], "sort": [0, 48, 57, 81, 129, 131, 132, 139, 142, 143, 144, 166, 171, 173, 174, 177, 179, 193, 194, 196, 201], "sort_kei": [136, 137], "sort_valu": [156, 167, 168, 196, 197, 201], "sorted_tweet": [139, 143], "sota": 174, "sought": 1, "sound": [29, 30, 129, 132, 139, 144, 174, 179, 187, 197], "soup": [92, 130, 136, 137, 143], "sourc": [0, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 85, 88, 90, 99, 117, 118, 126, 129, 131, 132, 133, 136, 138, 143, 149, 151, 153, 156, 161, 164, 167, 168, 170, 171, 174, 175, 176, 177, 178, 179, 185, 208], "source_docu": 135, "source_path": 138, "south": [118, 146], "southampton": [195, 197], "southern": 118, "sox": 118, "sp": [164, 167], "spa": 118, "space": [27, 40, 43, 48, 50, 53, 71, 75, 78, 85, 88, 90, 95, 116, 118, 129, 131, 132, 139, 142, 143, 149, 153, 156, 172, 173, 174, 176, 178, 188, 190, 192, 196, 199, 201], "spaghetti": 117, "spain": [118, 146], "spam": [5, 6, 15, 16, 17, 18, 129, 142], "span": [109, 113, 118, 136, 137, 193, 201], "spanish": 118, "spare": 129, "spatial": [178, 197, 199], "speak": [35, 36, 107, 139, 144, 170, 197, 201], "speaker": [129, 132, 142, 186], "spearow": 167, "spec": 129, "speci": [10, 11, 15, 102, 103, 118, 129, 146, 185, 188, 191, 193, 194, 200, 203], "special": [0, 5, 13, 35, 38, 41, 89, 90, 91, 103, 107, 109, 113, 129, 131, 136, 137, 143, 156, 174, 178, 181, 185, 186, 198, 200, 201], "specialattribut": 90, "specialidentifi": 90, "specialist": 129, "specialmethod": 90, "specialti": 129, "specif": [0, 1, 5, 8, 12, 14, 17, 18, 19, 20, 41, 48, 49, 53, 69, 75, 81, 85, 86, 94, 95, 99, 102, 104, 109, 113, 117, 118, 126, 127, 128, 129, 132, 138, 139, 140, 142, 143, 144, 147, 151, 156, 160, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 186, 187, 188, 189, 190, 194, 195, 196, 198, 199, 200, 201, 202], "specifi": [1, 38, 39, 48, 50, 53, 67, 69, 70, 72, 80, 82, 90, 91, 92, 104, 105, 117, 118, 127, 137, 138, 141, 144, 146, 149, 150, 151, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 170, 176, 177, 178, 179, 181, 188, 190, 191, 199, 201], "specifici": [172, 174], "specimen": 129, "spectacular": 129, "spectacularli": 129, "spectral": 191, "spectral_r": 191, "speed": [104, 117, 118, 129, 139, 156, 167, 170, 174, 176, 177, 178, 201], "speed_of_light": 91, "speedup": [172, 178], "spell": 117, "spelt": 172, "spend": [129, 132, 133, 139, 171, 172, 173, 174, 176, 178], "spent": [117, 129, 139, 174, 179], "spewpa": 167, "spheal": 167, "sphere": 25, "sphinx": [21, 85, 109, 113], "spike": 199, "spinach": 117, "spinarak": 167, "spinda": 167, "spine": [129, 186, 190, 195, 196], "spirit": [174, 177, 199], "spiritomb": 167, "spiritu": 129, "split": [4, 10, 11, 16, 25, 31, 38, 48, 53, 95, 117, 118, 129, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 149, 156, 164, 173, 176, 177, 179, 186, 193, 194, 196, 200], "split_dataset": 179, "split_docu": [117, 118, 129, 132, 133, 135, 140, 141], "split_siz": 179, "split_string_decor": 38, "splitlin": 69, "splitted_str": 38, "splitter": [118, 131, 132, 135, 142, 143], "splunk": 137, "spoiler": [136, 137], "spoink": 167, "spoke": [144, 186], "spontan": 129, "spook": 132, "sporad": 174, "sport": [104, 129], "sports_car_info": 104, "sportscar": 104, "spot": 137, "spotifi": 117, "spread": [139, 179, 189, 195, 196, 199, 201], "spreadsheet": [69, 156, 171, 173], "spring": [107, 129, 137, 191, 195, 197], "spring_r": 191, "sprinkl": [130, 178], "sprint": 140, "sprintf": 53, "spritze": 167, "sprung": 129, "spur": 129, "spyder": 186, "sp\u00e4tzle": 130, "sqaur": [17, 18, 19, 20], "sql": [118, 137, 140, 156, 164], "sql_databas": 118, "sqldatabas": 118, "sqldatabasechain": 118, "sqlite": 118, "sqlite3": 118, "sqlite_db_path": 118, "sqlqueri": 118, "sqlresult": 118, "sqr": 80, "sqrt": [17, 18, 19, 20, 31, 33, 81, 83, 149, 152, 154], "squar": [4, 5, 17, 18, 19, 20, 32, 36, 37, 38, 44, 48, 49, 50, 53, 54, 55, 56, 58, 80, 81, 83, 85, 102, 107, 129, 143, 149, 150, 152, 170, 172, 173, 174, 180, 187, 190, 191, 200, 201, 202], "square_numb": [75, 78], "squash": 129, "squeez": [54, 172, 173, 174, 178], "squeezebackward0": 172, "squeezebackward1": 173, "squirrel": 129, "squirtl": 167, "sr": 163, "src": 179, "srp": 118, "ssh": 170, "ssl": 127, "sss": 30, "st": 56, "st_size": [177, 178, 179], "stabil": [129, 198], "stabl": [171, 172], "stack": [54, 79, 80, 129, 136, 137, 144, 152, 153, 154, 157, 173, 178, 185, 197, 198, 199, 201], "stackexchang": 6, "stackoverflow": 170, "stackplot": 147, "staff": [129, 137], "stage": [129, 132, 133, 143, 174, 177, 178, 187, 199], "stai": [129, 131, 132, 140, 144, 157, 160, 170, 173, 178, 179, 187], "staid": 129, "stair": 178, "stakehold": 200, "stamp": [199, 200], "stanc": 139, "stand": [21, 69, 109, 113, 129, 132, 171, 172, 173, 174, 177, 178, 179, 195], "standard": [0, 25, 32, 72, 73, 81, 83, 85, 91, 95, 117, 121, 126, 129, 134, 136, 137, 149, 150, 153, 156, 159, 166, 171, 172, 173, 174, 175, 176, 177, 178, 187, 188, 189, 195, 197, 203], "standard_scal": 203, "standardized_industri": 134, "standardtransform": [174, 180, 181], "standarized_industri": 134, "standingtackl": 146, "standpoint": 177, "standup": 135, "stanford": [0, 140], "stantler": 167, "stanza": 139, "star": [38, 48, 98, 176], "staraptor": 167, "starat": 167, "staravia": 167, "stare": 133, "starli": 167, "starmi": 167, "start": [0, 1, 7, 8, 21, 23, 35, 36, 38, 43, 44, 48, 49, 53, 54, 55, 67, 69, 72, 75, 82, 84, 89, 90, 91, 93, 95, 97, 109, 110, 113, 116, 117, 118, 129, 130, 131, 132, 136, 137, 138, 139, 140, 142, 143, 144, 149, 151, 153, 156, 157, 158, 159, 160, 162, 163, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 193, 194, 195, 196, 197, 199, 201, 206], "start_color": 127, "start_dim": [173, 174, 178, 180, 181], "start_index": 25, "start_tim": [174, 176, 179, 180, 181], "startindex": 151, "startofweek": 118, "startswith": 53, "startup": [117, 118, 129, 131, 132, 140, 143], "startupidea": 131, "startuplesson": 132, "staryu": 167, "stat": [153, 177, 178, 185, 187, 190, 192, 196, 197, 199, 200], "stat_meth": 107, "state": [1, 26, 36, 82, 102, 112, 117, 118, 129, 130, 132, 138, 144, 146, 150, 171, 172, 173, 174, 175, 176, 178, 179, 185, 190, 194, 195], "state_dict": [173, 175, 177, 179, 180, 181], "statement": [23, 36, 51, 54, 56, 60, 67, 69, 71, 73, 80, 95, 96, 99, 101, 102, 103, 117, 133, 139, 151, 201], "static": [107, 117, 129], "staticmethod": 107, "station": 129, "statist": [2, 5, 9, 13, 52, 129, 168, 179, 185, 187, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 204, 208], "statistician": 200, "statsmodel": [191, 196], "statu": [118, 127, 131, 139, 143, 172, 185], "status_cod": [129, 136, 137], "std": [103, 149, 153, 154, 156, 176, 177, 178, 179, 185, 190, 192, 197, 201], "std1": 103, "std2": 103, "std3": 103, "stderr": 187, "stdev": 81, "stdout": 85, "steadi": 193, "steak": [174, 175, 176, 177, 178, 179, 180, 181], "steak_sushi": 178, "steam": 129, "steamboat": 129, "steel": [28, 167, 185], "steelix": 167, "steelixmega": 167, "steep": [129, 132], "steer": [0, 137], "stem": [174, 179], "steno": 142, "step": [1, 5, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 28, 38, 48, 53, 54, 55, 69, 79, 82, 95, 97, 103, 118, 129, 131, 132, 135, 139, 143, 144, 149, 153, 156, 166, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 200], "step3": 95, "step_siz": 48, "steph": 142, "stephen": 200, "stephsmithio": 139, "stepsiz": 151, "stern": 129, "stetement": 46, "steve": [129, 131], "stick": [132, 170, 172, 173, 176, 177, 178, 179, 196, 197, 199], "still": [0, 29, 30, 37, 53, 85, 90, 102, 103, 107, 117, 118, 129, 131, 132, 133, 136, 137, 157, 159, 160, 163, 166, 170, 171, 172, 173, 174, 176, 178, 179, 186, 187, 189, 197, 198, 199, 200], "sting": 69, "stipend": 129, "stir": [117, 130], "stochast": [171, 172, 178, 199], "stock": [0, 129, 137, 191, 196, 197], "stockprice_data": 156, "stockx": 142, "stoke": 201, "stone": [129, 172, 173], "stop": [0, 40, 48, 49, 50, 53, 54, 55, 69, 72, 75, 79, 82, 127, 129, 132, 133, 149, 153, 156, 166, 174, 177, 179, 199], "stopiter": [35, 36, 50, 71], "storag": [102, 132, 170, 174, 178, 179], "store": [25, 35, 36, 37, 39, 48, 50, 52, 53, 54, 61, 65, 69, 73, 77, 84, 91, 94, 95, 97, 99, 102, 104, 117, 118, 129, 131, 132, 136, 137, 139, 142, 143, 152, 156, 157, 158, 164, 170, 171, 173, 174, 175, 176, 177, 178, 180, 186, 191, 199], "store_and_fwd_flag": 199, "storefront": 129, "stori": [0, 117, 126, 129, 131, 139, 142, 143, 173, 179, 198], "storm": 129, "stoutland": 167, "stove": 129, "str": [11, 16, 25, 40, 50, 53, 54, 62, 69, 71, 75, 85, 93, 94, 95, 103, 104, 105, 117, 118, 127, 129, 136, 138, 141, 146, 163, 167, 173, 174, 175, 176, 177, 179, 180, 181, 196, 197], "str1": 53, "str2": 53, "str3": 53, "str4": 53, "straight": [5, 71, 117, 129, 170, 171, 173, 178, 179, 181, 190, 202], "straightforward": [117, 118, 139, 188], "strang": [129, 131, 135, 178], "stranger": 129, "stranieri": 129, "strat": 53, "strateg": [136, 137], "strategi": [117, 131, 132, 142, 143, 156], "strawberri": [92, 103], "streak": 129, "stream": [69, 85, 127, 129], "stream_error": 129, "streaming_stdout": 130, "streamingstdoutcallbackhandl": 130, "streamlin": 182, "streamlit": [143, 179], "street": [48, 117, 129], "strength": 8, "stress": [129, 189], "stretch": 129, "strftime": [23, 62, 63, 64, 65, 67, 68, 136, 137, 177], "strict": [129, 170], "strictli": [129, 187], "stride": [173, 174, 175, 178, 180, 181], "stride_trick": 154, "strike": 132, "string": [23, 35, 36, 37, 39, 44, 50, 52, 55, 57, 59, 63, 64, 65, 66, 69, 70, 71, 72, 75, 80, 90, 91, 94, 96, 102, 103, 105, 118, 126, 129, 130, 131, 132, 134, 136, 137, 138, 139, 142, 143, 156, 157, 163, 165, 174, 177, 179, 188, 189, 201], "string1": 53, "string2": 53, "string_process": 118, "stringifi": [69, 127], "stringmethod": 90, "stringprocessingtest": 118, "stringprocessor": 118, "strip": [53, 118, 129, 131, 134, 146, 163, 179, 185, 188, 193, 195, 198, 199, 204], "strip_data": 194, "stripe": 143, "stripplot": [185, 188, 193, 194, 195, 199], "strive": 152, "strlist": 196, "stroke": [129, 168], "stroll": 139, "strong": [28, 129, 136, 137, 139], "stronger": 190, "strongest": 129, "strongli": 178, "strptime": [23, 61, 68], "struck": 129, "structur": [1, 10, 18, 20, 21, 25, 38, 43, 48, 54, 69, 71, 84, 85, 102, 109, 113, 118, 121, 129, 132, 134, 135, 138, 139, 143, 145, 146, 147, 156, 157, 158, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 178, 181, 182, 185, 193, 201, 208], "structured_data": 134, "structuredoutputpars": [117, 118, 134], "struggl": [139, 194], "strung": [117, 118], "stuck": [129, 132, 178, 196], "stud": 102, "stud1": 157, "stud2": 157, "stud3": 157, "stud_ag": 163, "stud_mark": 163, "stud_nam": 163, "student": [48, 95, 102, 103, 117, 129, 131, 139, 142, 156, 157, 159, 160, 164, 165, 166, 193, 194, 197, 201], "student_count": 103, "student_data": 164, "student_df": [156, 157, 159, 160, 161, 162, 163, 165, 166], "student_dict": [156, 157, 159, 160, 161, 162, 163, 165, 166], "student_id": 197, "student_nam": 48, "studentdf": 164, "studentdict": 164, "students_enrol": 196, "studentstud": 103, "studi": [24, 27, 36, 88, 102, 118, 129, 131, 142, 153, 171, 176, 190, 199, 201, 202, 208], "studio": [129, 142], "studnet": 103, "stuff": [104, 118, 131, 132, 133, 135, 142], "stuffdocumentschain": [129, 144], "stumbl": 129, "stunfisk": 167, "stunki": 167, "style": [90, 118, 129, 130, 136, 137, 139, 142, 144, 146, 153, 156, 157, 160, 163, 167, 168, 171, 173, 175, 176, 180, 181, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "sub": [37, 55, 70, 75, 79, 84, 85, 149, 197, 199, 201], "sub_doc": 132, "subalpin": 129, "subarrai": 151, "subcategori": 197, "subclass": [72, 85, 104, 171, 172, 173, 174, 178], "subdirectori": [70, 84, 174], "subdiretori": 174, "subdivid": 199, "subgroup": 40, "subject": [117, 127, 129, 137, 139, 170, 187, 199], "sublim": 129, "submit": 129, "subplot": [9, 11, 17, 18, 19, 20, 26, 31, 112, 172, 173, 174, 178, 179, 186, 187, 196, 198, 200, 201], "subplot_kw": 201, "subplots_adjust": [17, 18, 19, 20], "subprocess": [174, 180, 181], "subregion": 118, "subscript": [90, 93], "subsect": [180, 181], "subsequ": [1, 35, 54, 173, 174, 178, 181], "subset": [1, 12, 17, 18, 19, 20, 67, 129, 131, 139, 142, 156, 161, 162, 174, 176, 177, 189, 200, 201, 208], "subsistut": 118, "substack": 170, "substanti": 142, "substitut": [40, 104], "substr": [40, 53], "substract": [96, 149, 170], "subtli": 129, "subtract": [27, 52, 75, 96, 105, 138, 149, 152, 170], "succe": [118, 140, 143], "success": [1, 36, 40, 117, 118, 129, 132, 136, 137, 142, 143, 144, 172, 174, 179, 199], "successful": [15, 16, 25], "successful_request": [136, 137], "successfulli": [39, 72, 143, 171, 177, 179, 194, 196], "succinct": 131, "sudden": [72, 143], "suddenli": [129, 176], "sudowoodo": 167, "suffic": 129, "suffici": [129, 131], "suffix": [117, 118], "sugar": [38, 130], "suggest": [60, 71, 117, 118, 129, 131, 132, 136, 137, 139, 140, 142, 171, 177, 178, 189, 195, 201], "suhail": 139, "suhsi": 177, "suicun": 167, "suit": [99, 102, 117, 133, 140, 156, 172, 174, 175, 177, 178, 179, 188, 193, 194, 199], "suitabl": [36, 53, 189, 197], "sulli": 178, "sum": [4, 8, 15, 16, 17, 18, 19, 20, 28, 29, 30, 31, 32, 33, 36, 37, 41, 48, 49, 52, 57, 60, 75, 78, 81, 83, 85, 86, 90, 94, 105, 118, 129, 147, 149, 152, 153, 167, 168, 172, 174, 175, 179, 180, 181, 192, 195, 197], "sum1": 95, "sum_": [28, 30, 31], "sum_1": 32, "sum_al": 72, "sum_all_num": 78, "sum_i": [30, 33], "sum_j": 30, "sum_numb": 37, "sum_of_five_num": 72, "sum_of_kd": 192, "sum_of_numb": 75, "sum_two_numb": 75, "sumbackward0": 172, "summar": [37, 85, 121, 127, 136, 137, 140, 142, 144, 145, 157, 172, 178, 185, 194], "summari": [85, 117, 127, 129, 131, 140, 142, 143, 144, 146, 174, 177, 179, 195, 196, 197, 200], "summaris": [170, 174], "summary_chain": 131, "summary_list": 131, "summary_output_opt": 144, "summary_prompt": 131, "summaryif": 129, "summat": [29, 37, 152], "summer": [129, 191], "summer_r": 191, "summit": 129, "sun": [40, 61, 62, 129, 189, 192, 194, 195, 196, 197, 201], "sundai": [61, 62], "sunflora": 167, "sung": 179, "sunkern": 167, "sunni": [6, 129, 138], "sunroof": 103, "sunshin": 139, "super": [73, 102, 107, 117, 118, 127, 129, 142, 153, 160, 163, 171, 172, 173, 174, 175, 178, 180, 181, 201], "superclass": 104, "superhead": 201, "superintellig": 139, "superior": 1, "supervis": [8, 19, 20, 172, 208], "suppli": [70, 72, 118, 129, 163], "support": [0, 7, 16, 25, 48, 50, 52, 54, 55, 57, 69, 75, 83, 91, 92, 93, 95, 99, 104, 110, 117, 118, 126, 127, 129, 130, 131, 132, 139, 140, 142, 144, 152, 175, 176, 177, 188, 189, 192, 197, 199, 201, 206], "suppos": [36, 39, 41, 43, 50, 58, 60, 81, 84, 85, 102, 105, 107, 117, 129, 152, 157, 158, 162, 163, 164, 165, 166, 199], "suppport": [11, 15], "supress": 160, "suptitl": [31, 174, 178, 192, 196, 201], "sure": [5, 25, 26, 40, 41, 72, 77, 112, 117, 118, 126, 128, 129, 131, 132, 136, 137, 138, 139, 140, 144, 149, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 186, 189, 193, 195, 196, 197, 199], "surfac": [75, 129, 170, 179], "surfaceaxi": 12, "surnam": [78, 85, 159, 166], "surpass": 129, "surplu": 129, "surpris": [129, 132, 179], "surreptiti": 129, "surround": [1, 36, 90, 92, 129, 142], "surskit": 167, "survei": 188, "surviv": [129, 195, 197], "suryansh": [5, 6], "susan": 117, "sushi": [174, 175, 176, 177, 178, 179, 180, 181], "susmelj": 175, "suspect": 195, "suspend": [66, 67], "suspens": [67, 139], "suspicion": [9, 129], "sustain": [0, 139], "sutton": 177, "suv": 129, "svd": [27, 154], "svg": 118, "sw": 72, "swablu": 167, "swadloon": 167, "swalot": 167, "swampert": 167, "swampertmega": 167, "swampi": 135, "swanna": 167, "swap": [53, 75, 117, 118, 134, 139, 142, 143, 170, 178], "swapcas": 53, "swarm": [185, 195, 198], "swarmplot": [185, 188, 193, 194, 195], "swartz": 129, "swe": 118, "sweatystartup": 139, "sweden": [12, 14, 72], "sweep": 129, "sweet": [50, 131, 144], "swellow": 167, "swelter": 129, "swim": [102, 104, 129], "swing": 139, "swinub": 167, "swirlix": 167, "swiss": 129, "switch": [129, 131, 133, 136, 137, 142, 144, 170, 186, 190, 199], "switzerland": [12, 14, 118, 190], "swoobat": 167, "sx": 53, "sy": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 60, 71, 72, 84, 85, 95, 129, 170, 177], "syantax": 54, "sylveon": 167, "symbol": [29, 30, 38, 40, 41, 53, 81, 85, 89, 90, 91, 96, 105, 118, 139, 170, 178], "symmetr": 48, "symmetri": 8, "symmetric_differ": 57, "symmetric_difference_upd": 57, "synaps": 8, "sync": 149, "syntact": [38, 75], "syntax": [21, 23, 36, 38, 39, 40, 53, 54, 55, 56, 57, 70, 72, 75, 80, 85, 89, 94, 95, 99, 102, 103, 104, 109, 113, 139, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 186, 198, 199, 201], "syntaxerror": [53, 71, 78, 89, 91], "syntaxwarn": 96, "synthet": [132, 201], "syslog": 137, "system": [8, 19, 20, 25, 32, 35, 50, 52, 66, 69, 71, 81, 90, 105, 117, 118, 129, 130, 139, 142, 144, 171, 174, 179, 208], "system_message_prompt": [128, 130, 144], "system_message_prompt_combin": 144, "system_message_prompt_map": [142, 144], "system_templ": [128, 142], "systemat": 131, "systemerror": 71, "systemexit": [71, 127], "systemmessag": [117, 130, 136, 144], "systemmessageprompttempl": [128, 130, 142, 144], "t": [0, 8, 11, 12, 18, 19, 20, 26, 28, 32, 33, 39, 48, 49, 50, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 69, 72, 75, 77, 78, 81, 84, 88, 91, 92, 93, 95, 99, 102, 103, 104, 105, 107, 112, 117, 118, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 149, 152, 153, 154, 156, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "t1": [55, 60, 64, 66, 67], "t10": 188, "t10k": 173, "t2": [55, 60, 64, 67], "t3": [55, 60, 64], "t4": [55, 60], "t5": 60, "t6": 60, "t_i": 28, "tab": [43, 53, 71, 90, 92, 131, 179, 188], "tab10": 191, "tab10_r": 191, "tab20": 191, "tab20_r": 191, "tab20b": 191, "tab20b_r": 191, "tab20c": 191, "tab20c_r": 191, "taberror": 71, "tabl": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 48, 50, 52, 61, 62, 81, 96, 105, 117, 118, 129, 142, 156, 157, 164, 170, 171, 172, 173, 177, 193, 202], "table_nam": 156, "tableau": [188, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "tableau_20": [190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "tablespoon": 117, "tablet": 139, "tabul": [54, 56, 105], "tabular": [69, 156, 165, 166, 172, 179], "tacit": 129, "tackl": [1, 136, 189], "taco": 179, "tag": [6, 25, 69, 117, 137, 142], "tag_scalar_dict": 177, "taggar": 129, "taho": 129, "tail": [8, 156, 167, 168, 199], "taillow": 167, "take": [0, 5, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 35, 36, 37, 38, 40, 41, 44, 48, 49, 52, 53, 54, 57, 58, 60, 61, 62, 63, 64, 66, 67, 69, 70, 72, 75, 76, 77, 78, 79, 80, 81, 85, 91, 95, 99, 102, 103, 104, 107, 117, 118, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144, 152, 156, 157, 159, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 193, 194, 196, 197, 198, 199, 200, 201, 202], "taken": [69, 129, 135, 142, 171, 179, 198, 199], "talk": [66, 67, 117, 118, 129, 131, 132, 138, 139, 140, 142, 143, 144, 170, 172, 173, 178, 179, 186, 191, 195, 201], "tall": 118, "talli": 201, "talonflam": 167, "tamper": [91, 102], "tan": [81, 83], "tangela": 167, "tangent": [81, 83], "tangrowth": 167, "tanh": [81, 83], "tap": 200, "tar": 81, "targ_dir": 174, "targ_imag": 174, "targ_image_adjust": 174, "targ_label": 174, "targ_sampl": 174, "target": [1, 6, 15, 16, 17, 18, 67, 99, 136, 137, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 188], "target_dir": [175, 177, 178, 179, 180, 181], "target_dir_path": [175, 180, 181], "target_directori": 174, "target_fil": 177, "target_imag": 174, "target_image_pr": [174, 176], "target_image_pred_label": [174, 176], "target_image_pred_prob": [174, 176], "target_transform": [173, 174, 180, 181], "tasavalta": 118, "taser": 185, "task": [0, 1, 8, 19, 20, 25, 48, 49, 54, 56, 57, 63, 66, 67, 72, 75, 79, 81, 86, 88, 96, 99, 105, 117, 118, 128, 131, 138, 139, 140, 142, 172, 173, 174, 176, 178, 188, 198, 199, 208], "tast": [117, 132, 144], "tau": 81, "taught": [0, 129], "tauro": 167, "tax": 129, "taxi": [129, 199], "tbd": 118, "tchapter": 53, "tchp": 53, "tdatatyp": 53, "te": 40, "tea": 132, "teach": [1, 38, 40, 53, 129, 154, 173, 182], "teacher": [40, 53, 69, 129], "teal": 188, "team": [0, 78, 117, 118, 136, 137, 140, 144, 146, 174, 175, 177, 178, 179, 199, 201], "teas": 178, "tech": [0, 128, 129, 136, 137, 143], "techcrunch": 140, "technic": [0, 35, 107, 118, 129, 132, 140, 178], "technician": 137, "techniqu": [0, 1, 8, 19, 20, 37, 81, 128, 142, 143, 172, 174, 176, 177, 178, 179, 193, 194, 199, 200, 208], "technolog": 139, "technologi": [0, 1, 118, 126, 129, 132, 136, 137, 139, 143, 144, 170, 173], "teddiursa": 167, "tediou": [129, 174], "tell": [44, 45, 50, 69, 72, 88, 95, 117, 118, 129, 131, 132, 137, 138, 139, 144, 151, 170, 171, 172, 173, 174, 177, 178, 179, 187], "temp": [75, 91, 134, 170], "temp_convert": 72, "temperatur": [39, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144], "templ": 142, "templat": [118, 132, 134, 139, 142, 143, 144], "template_format": 130, "tempor": 199, "temporari": [104, 129, 196], "temporarili": 186, "tempt": [129, 179], "ten": [37, 48, 75, 129, 147, 179], "ten_zero": 170, "tenac": 129, "tend": [28, 104, 117, 129, 135], "tendenc": [185, 189, 193, 195, 196, 197], "tender": 130, "tension": 139, "tensor": [27, 171, 173, 174, 175, 177, 178, 180, 181], "tensor_a": 170, "tensor_b": 170, "tensor_back_on_cpu": 170, "tensor_c": 170, "tensor_d": 170, "tensor_float16": 170, "tensor_int8": 170, "tensor_on_gpu": 170, "tensordot": 154, "tensorflow": [8, 149, 172, 177, 208], "tentacool": 167, "tentacruel": 167, "tepig": 167, "terabyt": 201, "term": [5, 6, 30, 36, 38, 79, 86, 117, 118, 129, 131, 135, 140, 144, 170, 172, 173, 176, 178, 179, 186, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201], "termin": [35, 36, 48, 49, 50, 71, 72, 126, 129, 149, 175, 179], "terminologi": 142, "terrain": 191, "terrain_r": 191, "terrakion": 167, "terri": 129, "terribli": 129, "terrif": 179, "terrifi": 177, "territori": [129, 190], "tesla": [170, 179], "test": [0, 13, 15, 16, 25, 40, 44, 45, 49, 50, 69, 70, 71, 72, 77, 81, 88, 96, 103, 118, 129, 132, 133, 138, 139, 167, 170, 175, 177, 178, 180, 181, 197, 199], "test1": 81, "test_1": [69, 70], "test_2": [69, 70], "test_acc": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "test_accuraci": [174, 175, 180, 181], "test_cost": [12, 14], "test_data": [12, 14, 17, 18, 19, 20, 171, 172, 173, 174, 175, 179, 180, 181], "test_data_custom": 174, "test_data_food101_20_perc": 179, "test_data_path": 179, "test_data_simpl": 174, "test_dataload": [173, 174, 175, 176, 177, 178, 179, 180, 181], "test_dataloader_custom": 174, "test_dataloader_effnetb2": 179, "test_dataloader_food101_20_perc": 179, "test_dataloader_pretrain": 178, "test_dataloader_simpl": 174, "test_dataloader_vit": 179, "test_dir": [174, 175, 176, 177, 178, 179, 180, 181], "test_express": 49, "test_imag": 173, "test_image01": 175, "test_image02": 175, "test_image_01": 181, "test_image_02": 181, "test_image_path_list": [176, 177], "test_image_path_sampl": [176, 177], "test_image_through_conv": 173, "test_image_through_conv_and_max_pool": 173, "test_label": [171, 172, 173], "test_logit": 172, "test_loss": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "test_loss_valu": 171, "test_modul": 81, "test_pr": [171, 172, 173], "test_precis": [17, 18, 19, 20], "test_pred_dict": 179, "test_pred_label": [174, 175, 180, 181], "test_pred_logit": [174, 175, 180, 181], "test_predict": [12, 14], "test_predictions_t": [12, 14], "test_replace_non_letters_non_numbers_with_whitespac": 118, "test_sampl": 173, "test_siz": 172, "test_step": [173, 177], "test_str": 40, "test_transform": 174, "testcas": 118, "tester": 40, "testfil": [70, 72], "tex": [26, 112], "text": [7, 21, 22, 28, 33, 40, 45, 53, 69, 75, 85, 109, 110, 111, 113, 114, 126, 127, 128, 129, 130, 133, 135, 139, 140, 143, 144, 156, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 190, 192, 196, 197, 199, 201, 205, 206, 208], "text_1": 69, "text_embed": 117, "text_splitt": [117, 118, 129, 131, 132, 133, 135, 140, 141, 142, 143, 144], "textbook": [129, 178], "textcoord": 197, "textil": 129, "textiobas": 69, "textiowrapp": 69, "textload": [117, 118, 133], "textrequestswrapp": 118, "textual": [53, 63], "textwrap": 53, "th": [2, 5, 6, 13, 40, 53], "than": [0, 5, 9, 11, 12, 17, 18, 19, 20, 23, 25, 36, 37, 40, 41, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 58, 60, 61, 67, 73, 79, 80, 81, 83, 91, 92, 93, 95, 96, 97, 99, 103, 104, 105, 107, 117, 118, 129, 131, 132, 136, 139, 142, 144, 149, 151, 152, 156, 157, 159, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 188, 191, 193, 195, 196, 197, 198, 199, 201], "thank": [95, 129, 136, 137, 140, 144, 171, 172, 173, 176, 177, 178, 179, 189], "that_particular_class": 197, "that_particular_class_men": 197, "thaw": 129, "thefuzz": 118, "thei": [0, 1, 8, 9, 12, 14, 19, 20, 35, 36, 38, 39, 43, 45, 47, 50, 52, 53, 54, 55, 56, 57, 69, 71, 73, 75, 76, 77, 79, 80, 81, 82, 83, 85, 86, 89, 90, 92, 93, 95, 96, 97, 99, 102, 103, 107, 109, 113, 117, 118, 127, 128, 129, 131, 132, 133, 136, 137, 140, 142, 143, 144, 150, 152, 156, 161, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 192, 194, 195, 196, 197, 198, 199, 200, 201], "theirs": [14, 36, 129], "them": [0, 9, 15, 16, 17, 18, 19, 20, 25, 33, 35, 37, 52, 53, 54, 55, 56, 57, 67, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 83, 91, 95, 96, 97, 102, 103, 104, 105, 116, 118, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 153, 156, 158, 170, 171, 172, 173, 174, 176, 177, 178, 185, 186, 188, 190, 191, 193, 194, 196, 199, 201, 202], "theme": [139, 142, 186, 188], "themselv": [40, 129, 131, 132, 178, 208], "theologi": 117, "theorem": [1, 129], "theoret": [0, 29, 30, 35, 129], "theori": [36, 117, 129, 131, 133, 195, 198], "therefor": [39, 40, 53, 99, 102, 174, 179], "thermodynam": 39, "thesi": 129, "theta": [5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 28, 33], "theta_index": 16, "theta_t": [12, 13, 14], "thi": [1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 58, 60, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 109, 110, 111, 112, 113, 114, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 146, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206], "thick": [186, 196, 197], "thicken": 186, "thimbl": [127, 144], "thimbleai": [127, 144], "thin": [129, 130, 131, 196], "thing": [0, 7, 25, 28, 36, 38, 43, 48, 50, 53, 58, 70, 81, 90, 97, 103, 104, 107, 110, 117, 118, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 144, 150, 153, 156, 170, 171, 173, 174, 176, 177, 178, 179, 187, 188, 189, 195, 201, 206], "think": [65, 91, 102, 103, 117, 118, 127, 129, 131, 132, 134, 136, 137, 139, 142, 143, 144, 150, 170, 171, 172, 173, 174, 176, 178, 179, 186, 189, 195, 197, 198], "thinker": 129, "thinnest": 129, "third": [25, 53, 60, 81, 84, 93, 95, 104, 117, 129, 138, 139, 146, 153, 156, 159, 170, 171, 179, 189, 195, 197], "third_respons": 138, "thirti": [53, 129], "this_is_a_long_vari": 89, "thise": [131, 194], "thorn": 129, "thorugh": 173, "those": [0, 25, 43, 67, 76, 80, 81, 82, 86, 103, 109, 113, 117, 118, 128, 129, 131, 132, 139, 142, 143, 144, 154, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 186, 188, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201], "though": [19, 20, 53, 72, 76, 85, 104, 117, 118, 129, 132, 152, 156, 157, 161, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 188, 194, 196, 197, 198, 199, 200, 201], "thought": [43, 117, 118, 127, 129, 131, 132, 136, 137, 139, 173, 179, 188, 194, 195, 196, 197], "thousand": [39, 129, 137, 139, 170, 173], "thread": [0, 66, 67, 81, 118, 129, 130, 131, 179], "threat": 185, "threat_level": 185, "threaten": 185, "three": [4, 8, 10, 11, 15, 16, 19, 20, 39, 40, 41, 43, 48, 49, 53, 58, 60, 69, 77, 78, 91, 94, 95, 97, 103, 104, 107, 117, 118, 129, 131, 132, 138, 142, 143, 156, 159, 162, 163, 164, 170, 171, 172, 173, 174, 176, 178, 179, 185, 189, 193, 194, 195, 199, 200, 201, 202], "thresh": [156, 162], "threshold": [2, 8], "thrice": 195, "throguh": 178, "throh": 167, "through": [0, 1, 9, 17, 18, 19, 20, 36, 48, 49, 50, 52, 58, 72, 78, 79, 105, 117, 118, 129, 130, 131, 133, 136, 137, 138, 143, 144, 170, 171, 172, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 201, 202, 208], "throughout": [118, 131, 170, 174, 175, 177, 178, 179, 180, 181, 187, 189, 193, 200], "throughput": [9, 10], "throughput_from": 9, "throughput_grid": 9, "throughput_rang": 9, "throughput_to": 9, "throw": [25, 72, 76, 99, 157, 159, 160, 163, 165, 177, 179], "thu": [11, 28, 39, 48, 49, 53, 66, 72, 90, 99, 102, 107, 129, 176, 178, 179, 188, 189, 190, 195, 196, 197, 199, 200, 201, 202], "thumb": [171, 172, 174, 176, 178, 194, 197], "thump": 132, "thundurusincarn": 167, "thundurustherian": 167, "thur": [194, 197], "thursdai": [117, 129, 195], "ti": [69, 139, 189], "tick": [178, 179, 186, 191, 192, 198, 200, 201], "tick_param": [17, 18, 19, 20, 179], "ticket": 197, "ticklabel_format": 196, "tickmark": 146, "tide": 129, "tidi": [189, 193, 194, 198], "tier": [139, 178], "tight": [31, 129, 177], "tightli": [118, 129, 190], "tile": 152, "till": [48, 49, 50, 69, 93, 129, 157, 160, 163, 166, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201], "tim": 185, "timberlin": 129, "timburr": 167, "time": [0, 1, 6, 8, 25, 31, 32, 35, 36, 38, 47, 48, 49, 50, 52, 53, 55, 62, 76, 79, 80, 81, 89, 90, 91, 97, 99, 103, 104, 105, 107, 117, 118, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 144, 146, 152, 156, 160, 161, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 208], "time_for_pr": 179, "time_left_for_newyear": 64, "time_per_pred_cpu": 179, "time_str": 66, "timedelta": 64, "timedelta64": 154, "timeit": [173, 174, 176, 179, 180, 181], "timeout": [127, 129, 131, 170], "timeout_valu": 127, "timepoint": 199, "timer": [173, 174, 176, 179, 180, 181], "times2": 32, "times3": 37, "times5": 37, "timescal": 179, "timeseri": 204, "timestamp": [23, 68, 177], "timezon": 118, "timm": [173, 176, 178], "timplay": 25, "tine": 176, "ting": 40, "tini": [129, 196], "tinker": [118, 143], "tinyvgg": [173, 175, 176, 183], "tip": [40, 139, 176, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201], "tire": [129, 193], "tirtouga": 167, "titan": [170, 176, 185, 187, 195, 199, 201], "titl": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 53, 131, 132, 136, 137, 138, 146, 147, 171, 172, 173, 174, 176, 178, 179, 189, 192, 201, 202], "title_text": 173, "tk": 25, "tkinter": 81, "tl": 117, "tlc": 199, "tld": 118, "tldr": 118, "tm_hour": 66, "tm_isdst": 66, "tm_mdai": 66, "tm_min": 66, "tm_mon": 66, "tm_sec": 66, "tm_wdai": 66, "tm_ydai": 66, "tm_year": 66, "tmdb": 126, "tmp": 170, "to__email": 127, "to_csv": [156, 167, 168], "to_dict": 156, "to_excel": [156, 167], "to_fahreheit": 39, "to_fahrenheit": 39, "to_json": 156, "to_messag": [118, 128, 130, 134], "to_sql": 156, "to_str": 137, "to_usernam": 127, "todai": [1, 64, 65, 117, 118, 129, 131, 132, 133, 136, 137, 139, 142, 143, 144, 187, 190, 194, 195, 196, 197, 198, 199, 200], "togekiss": 167, "togepi": 167, "toget": 167, "togeth": [8, 9, 19, 20, 36, 53, 91, 99, 105, 117, 118, 129, 132, 134, 139, 140, 142, 143, 152, 175, 177, 179, 181, 190, 193, 195, 199], "toi": [142, 172, 173, 185], "toilet": 142, "toiletri": 132, "token": [118, 129, 131, 136, 137, 139, 140, 142, 143, 144], "told": [50, 129, 132, 138, 139, 190], "toler": 173, "tolist": [146, 147, 196], "tom": 129, "tomato": [72, 96, 117], "tomb": 129, "tomorrow": 117, "ton": [53, 81, 117, 118, 131, 139, 143], "tone": [121, 128, 145], "tone_sampl": 139, "too": [0, 5, 6, 38, 71, 73, 96, 97, 117, 118, 129, 130, 131, 132, 139, 142, 144, 170, 171, 172, 173, 174, 176, 177, 178, 179, 194], "took": [0, 38, 117, 129, 139, 173, 174, 176, 179, 180, 181], "tool": [0, 40, 85, 109, 113, 118, 127, 131, 136, 137, 138, 140, 142, 144, 146, 147, 149, 156, 167, 168, 172, 177, 178, 179, 190, 199, 200, 201, 208], "tool_input": 127, "tool_nam": 126, "toolchain": 140, "toolkit": [25, 118, 127, 131, 170], "tooth": 147, "toothpastesalesdata": 147, "top": [7, 9, 17, 18, 19, 20, 91, 110, 117, 126, 130, 131, 139, 140, 143, 144, 149, 151, 152, 156, 170, 172, 173, 175, 178, 179, 181, 186, 188, 189, 190, 195, 196, 197, 199, 201, 206], "topbar": 197, "topic": [0, 53, 78, 118, 129, 131, 132, 139, 143, 145, 147, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 187, 188, 191, 193, 195, 196, 197, 199, 200, 201], "topic_nam": 142, "topic_timestamp": 142, "topics_found": 142, "topics_structur": 142, "toprow": 159, "torch": [170, 172, 173, 174, 175, 176, 177, 179, 180, 181], "torch_transformer_encoder_lay": 178, "torchaudio": [174, 176, 177, 178, 179], "torchdata": 174, "torchic": 167, "torchinfo": [177, 178, 179], "torchmetr": [172, 173], "torchmetrics_accuraci": 172, "torchrec": [174, 176], "torchscript": 179, "torchserv": 179, "torchtext": [174, 176], "torchvis": [173, 175, 177, 179, 180, 181], "torkoal": 167, "tornadusincarn": 167, "tornadustherian": 167, "toronto": 118, "torterra": 167, "toss": 130, "total": [8, 11, 15, 48, 49, 52, 60, 75, 78, 80, 93, 103, 105, 118, 127, 131, 132, 136, 137, 141, 150, 156, 167, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 189, 190, 193, 194, 195, 196, 197, 198, 199, 201], "total_bil": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "total_cost": [136, 137], "total_list1": 141, "total_list2": 141, "total_profit": 147, "total_second": 60, "total_stud": 196, "total_tim": 173, "total_token": [136, 137], "total_train_time_model_0": 173, "total_train_time_model_1": 173, "total_train_time_model_2": 173, "total_women_per_class": 197, "totensor": [173, 174, 175, 176, 177, 178, 180, 181], "totodil": 167, "touch": [118, 129, 153, 190, 201], "tough": [118, 178], "tourist": 129, "toward": [117, 129, 131, 135, 139, 171, 174, 178, 179], "town": [117, 142, 195, 197], "toxicroak": 167, "toyotadf": 168, "tp": 2, "tpg": 118, "tpuv3": 178, "tpython": 53, "tqdm": [133, 173, 174, 175, 177, 179, 180, 181], "tqdmexperimentalwarn": 133, "tr": 129, "trace": [129, 152, 177, 189, 199], "traceback": [35, 36, 37, 38, 39, 41, 49, 53, 54, 55, 56, 57, 62, 67, 69, 71, 72, 73, 76, 77, 78, 79, 81, 90, 92, 93, 94, 95, 96, 102, 103, 104, 105, 107, 127, 129, 151, 160, 163, 165, 170, 173, 174, 194, 199], "track": [36, 117, 129, 138, 139, 140, 144, 170, 171, 174, 176, 178, 179, 184, 195, 197, 199], "tracker": 177, "tractor": 170, "tradeoff": [174, 176], "tradit": [1, 116, 129, 130, 175, 180, 181], "tradition": 138, "trail": [52, 53, 55, 117, 118, 144], "train": [1, 2, 4, 5, 8, 10, 116, 117, 129, 142, 143, 170, 182, 183], "train_acc": [173, 174, 175, 176, 177, 178, 179, 180, 181], "train_accuraci": [174, 175, 180, 181], "train_cost": [12, 14], "train_data": [12, 14, 17, 18, 19, 20, 171, 172, 173, 174, 175, 179, 180, 181], "train_data_aug": 174, "train_data_custom": 174, "train_data_food101_20_perc": 179, "train_data_simpl": 174, "train_dataload": [173, 174, 175, 176, 177, 178, 179, 180, 181], "train_dataloader_10_perc": 177, "train_dataloader_20_perc": 177, "train_dataloader_aug": 174, "train_dataloader_custom": 174, "train_dataloader_effnetb2": 179, "train_dataloader_food101_20_perc": 179, "train_dataloader_pretrain": 178, "train_dataloader_simpl": 174, "train_dataloader_vit": 179, "train_dir": [174, 175, 176, 177, 178, 179, 180, 181], "train_dir_10_perc": 177, "train_dir_20_perc": 177, "train_features_batch": 173, "train_image01": 175, "train_image_01": 181, "train_image_02": 181, "train_label": [171, 172], "train_labels_batch": 173, "train_loss": [173, 174, 175, 176, 177, 178, 179, 180, 181], "train_loss_valu": 171, "train_precis": [17, 18, 19, 20], "train_split": [171, 172], "train_step": [173, 177], "train_test_split": 172, "train_time_end_model_2": 173, "train_time_end_on_cpu": 173, "train_time_end_on_gpu": 173, "train_time_start_model_2": 173, "train_time_start_on_cpu": 173, "train_time_start_on_gpu": 173, "train_transform": 174, "train_transform_trivial_aug": 174, "trainabl": [174, 176, 177, 178, 179], "trainbl": 179, "traingin": 13, "training_tim": 173, "traininggggggg": 179, "trainint": [13, 14], "trajectori": 129, "tranform": [53, 174], "tranquil": 167, "transact": [6, 15, 16, 17, 18, 172, 179], "transax": 200, "transcript": [118, 121, 142, 143, 145], "transcript_path": 142, "transcript_subsection_charact": 142, "transfer": [36, 48, 49, 50, 129, 172, 173, 174, 177, 178, 179, 183, 184, 208], "transform": [8, 27, 32, 99, 129, 136, 137, 138, 139, 170, 173, 175, 180, 181, 188, 208], "transformed_imag": [174, 176, 179], "transformer_encod": 178, "transformer_encoder_block": 178, "transformerencod": 178, "transformerencoderblock": 178, "transformerencoderlay": 178, "transit": [137, 139, 144], "translat": [71, 99, 103, 118, 129, 135, 188], "transluc": 199, "transmit": 8, "transpar": [144, 188, 190, 194], "transport": 134, "transpos": [27, 28, 58, 149, 152, 157, 158, 164, 170, 193], "transposed_row": 58, "transposit": 32, "trap": 129, "trapinch": 167, "trapper": 129, "travel": [8, 95, 117, 134, 139, 175, 178, 197], "travers": [8, 48, 174], "treasur": [129, 178], "treat": [7, 37, 40, 71, 76, 77, 102, 110, 129, 132, 138, 152, 179, 206], "tree": [1, 11, 15, 69, 117, 118, 129, 137], "treecko": 167, "trekhleb": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "trelli": [200, 201], "trend": [127, 142, 176, 177, 178, 179, 189, 193, 195, 199], "treven": 167, "trevi": 117, "trevor": [129, 132], "tri": [38, 71, 102, 105, 129, 132, 135, 142, 150, 163, 170, 172, 174, 176, 178, 179, 187, 190, 195, 196, 199], "trial": [1, 136, 137], "triangl": [48, 104, 200], "triangular": 82, "triband": 118, "tribe": 129, "tribut": 139, "tributari": 129, "trick": [0, 129, 131, 132, 144, 149, 151, 170, 172, 174, 187, 194], "trickeri": 129, "tricki": 55, "trigger": 50, "trignometr": 199, "trigonometri": 52, "trio": 142, "trip": [129, 132, 139, 199], "trip_dur": 199, "tripl": [53, 75, 85, 90, 92, 93, 131, 178], "triple_quot": 137, "triu_indices_from": 200, "trivial": 174, "trivialaug": 174, "trivialaugmentwid": [174, 179], "trophi": 129, "tropiu": 167, "troubl": [175, 176], "troubleshoot": [137, 172], "trouser": [18, 20, 173], "trout": 129, "trubbish": 167, "truck": [8, 104], "truck_info": 104, "trucke": 129, "true": [2, 13, 17, 18, 19, 20, 31, 35, 36, 38, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 57, 67, 69, 71, 73, 75, 80, 81, 83, 89, 90, 91, 92, 93, 95, 96, 103, 104, 105, 117, 118, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 142, 143, 144, 146, 147, 150, 151, 153, 156, 160, 161, 162, 163, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "true_divid": 152, "truecal": 142, "truli": [129, 139, 177, 179], "trunc": [81, 83, 154], "truncat": [52, 69, 83, 93, 94, 96, 189], "trust": [12, 14, 139, 171], "trusti": 177, "trustworthi": 199, "truth": [117, 118, 129, 171, 172, 173, 174, 179], "truth_label": 173, "truthvalu": 90, "try": [1, 5, 9, 11, 15, 16, 18, 19, 20, 35, 37, 40, 44, 45, 46, 50, 53, 54, 55, 56, 58, 60, 69, 71, 73, 75, 76, 78, 89, 90, 93, 94, 97, 102, 103, 105, 117, 118, 127, 129, 131, 132, 133, 135, 136, 137, 139, 143, 144, 152, 157, 160, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "tryagain": 129, "tryton": 25, "tsne": 131, "tsplot": 199, "tsv": 156, "tt": 62, "ttopic": 53, "tue": 61, "tuesdai": [117, 129], "tuft": [129, 200], "tug": 129, "tukei": 199, "tumor": [6, 15, 16, 17, 18], "tune": [117, 139, 142, 160, 171, 176, 178, 179, 199], "tunnel": 129, "tupl": [23, 25, 35, 36, 37, 38, 40, 41, 53, 57, 58, 59, 66, 75, 78, 81, 90, 92, 94, 95, 96, 103, 104, 149, 150, 153, 157, 158, 168, 173, 174, 175, 176, 179, 180, 181, 188, 190], "tuple1": 93, "tuple_1": 103, "tupleliter": 90, "tuppl": 150, "tur": 118, "turbo": [117, 118, 128, 131, 136, 137, 138, 139, 142, 144], "ture": 129, "turn": [0, 35, 52, 69, 72, 96, 99, 105, 117, 118, 129, 135, 138, 139, 143, 170, 171, 173, 175, 176, 177, 180, 181, 182, 193, 195, 196, 199, 200, 201], "turtwig": 167, "tutori": [23, 35, 38, 45, 53, 69, 91, 104, 105, 117, 118, 133, 142, 143, 144, 149, 168, 174, 177, 179, 187, 199], "twa": 129, "tweak": [174, 176, 178, 186, 188, 193, 198, 201], "tweepi": [139, 143], "tweepy_result": [139, 143], "tweet": [118, 127, 128, 136, 137, 142, 143, 144, 171, 179], "tweet_exampl": 139, "tweet_mod": [139, 143], "tweets_to_pul": [139, 143], "tweets_to_return": [139, 143], "twelv": 40, "twenti": [129, 132], "twice": [104, 118, 129, 132, 177], "twilight": 188, "twist": 130, "twitch": [129, 142, 178], "twitter": [117, 118, 121, 127, 129, 131, 134, 136, 137, 142, 144, 145, 174, 178], "twitter_access_token": [139, 143], "twitter_access_token_secret": [139, 143], "twitter_api_kei": [139, 143], "twitter_api_key_secret": 139, "twitter_api_secret": 143, "twittertwitt": 140, "two": [7, 9, 11, 15, 16, 25, 32, 33, 35, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 52, 54, 55, 56, 57, 58, 62, 67, 69, 71, 72, 73, 76, 78, 79, 81, 84, 85, 86, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 107, 109, 110, 113, 117, 118, 128, 129, 131, 132, 135, 138, 140, 141, 142, 143, 144, 150, 151, 152, 156, 158, 159, 160, 163, 164, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 185, 186, 187, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 201, 206], "two_power_of_f": 58, "twofold": 117, "tworld": 88, "txt": [0, 40, 70, 71, 72, 117, 118, 129, 131, 132, 133, 135, 142, 144, 153, 167], "ty": 53, "tympol": 167, "tynamo": 167, "typ": 56, "type": [0, 5, 6, 8, 11, 15, 18, 20, 25, 35, 37, 40, 41, 43, 48, 49, 50, 53, 57, 58, 60, 62, 64, 65, 71, 72, 76, 78, 79, 81, 88, 89, 90, 91, 96, 97, 99, 101, 102, 105, 107, 117, 118, 121, 129, 131, 132, 134, 135, 136, 137, 138, 142, 144, 146, 149, 151, 152, 153, 156, 163, 164, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "type1": 167, "typecast": 94, "typeerror": [41, 53, 54, 57, 72, 78, 81, 93, 94, 105, 127, 170], "typeobject": 90, "typescript": [117, 118, 137], "typeset": 129, "typewrit": 129, "typhlos": 167, "typic": [8, 50, 105, 129, 130, 132, 152, 156, 171, 172, 173, 176, 178, 179, 196, 199], "typo": 71, "tyranitar": 167, "tyranitarmega": 167, "tyrantrum": 167, "tyrogu": 167, "tyrunt": 167, "tz_london": [60, 64], "tz_ny": [60, 64], "tzinfo": 60, "tzname": 62, "u": [1, 15, 16, 33, 35, 37, 38, 39, 40, 41, 43, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 61, 62, 69, 70, 71, 72, 75, 78, 81, 86, 88, 92, 95, 97, 99, 102, 103, 104, 105, 107, 117, 118, 127, 128, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 152, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "u00dc": 92, "u00dcnic": 92, "u00f6": 92, "u00f6d": 92, "u_": 33, "u_1": 33, "u_2": 33, "u_i": 33, "u_n": 33, "ubyt": 173, "uc": 140, "uci": 10, "ud83c": 118, "udde8": 118, "uddeb": 118, "uddf4": 118, "uddf7": 118, "uesd": 118, "uganda": 139, "uhd": 140, "ui": [25, 118, 129], "uint8": 174, "uk": 60, "ukool": 53, "ular": 40, "ulivi": 129, "ultim": [129, 144, 178, 198], "um": 30, "umbreon": 167, "umpteen": 194, "unari": [90, 96], "unarm": 185, "unauthor": 102, "unavail": 201, "unawar": 199, "unbound": 167, "unboundlocalerror": [71, 76, 77], "unbridg": 129, "uncertainti": [139, 199], "unchang": [57, 92, 170, 173], "unchart": 190, "unclear": 156, "uncom": [57, 172, 173, 176, 177, 178, 179], "uncommon": 195, "uncorr": 170, "uncov": 131, "und": 40, "undefin": 103, "under": [1, 32, 48, 50, 52, 60, 71, 83, 86, 93, 118, 128, 129, 137, 139, 144, 146, 166, 171, 177, 179, 195, 196, 199, 200], "underestim": 117, "underfit": [172, 176, 178], "undergrad": 129, "undergradu": 129, "underli": [69, 83, 97, 99, 117, 132, 149, 156, 163, 171, 176, 188, 190, 193, 194, 196, 197, 198, 199, 201, 202], "undermin": 200, "underneath": [118, 129], "underpaint": 129, "underscor": [1, 39, 81, 89, 91, 102, 103, 104, 105], "underset": 31, "understand": [1, 7, 12, 13, 14, 15, 16, 17, 18, 23, 24, 27, 37, 38, 40, 43, 48, 49, 50, 52, 58, 85, 86, 90, 97, 99, 102, 107, 110, 116, 117, 129, 131, 135, 138, 139, 144, 146, 147, 156, 157, 170, 171, 172, 173, 174, 175, 176, 178, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 206, 208], "understat": 129, "understood": [28, 99, 118, 129], "undervalu": 118, "undestand": [28, 118], "undetermin": 185, "undoubtedli": 186, "uneasi": [117, 129], "unequ": 178, "uner": [117, 129], "unexpect": [50, 72], "unfamiliar": [171, 188], "unfez": 167, "unfold": 139, "unfortun": [129, 132], "unfrozen": 177, "unhandl": 71, "unhash": 57, "unhelp": [117, 118], "unicod": [40, 53, 71, 90, 91, 93], "unicodedecodeerror": 71, "unicodeencodeerror": 71, "unicodeerror": 71, "unicodetranslateerror": 71, "unifi": 92, "uniform": [53, 81, 82, 150, 153, 154, 199, 200], "uniform_data": 202, "unifrom": [17, 18], "unimport": 129, "unind": 44, "unint": 147, "uninterruptedli": 129, "union": [48, 93, 118, 132], "uniqu": [48, 56, 57, 75, 82, 93, 97, 107, 129, 130, 136, 137, 139, 141, 156, 158, 165, 174, 199, 203], "unique_doc": 132, "unique_label": [15, 16, 17, 18], "unique_to_list1": 141, "unique_to_list1_cont": 141, "unique_to_list1_count": 141, "unique_to_list2": 141, "unique_to_list2_cont": 141, "unique_to_list2_count": 141, "unit": [19, 20, 117, 118, 136, 137, 138, 146, 147, 170, 172, 173, 174, 175, 176, 177, 178, 180, 181, 185, 189, 190, 196, 197, 198, 199, 201], "unittest": 118, "univari": [3, 5, 192, 194, 195, 198, 200, 201], "univers": [1, 8, 95, 196, 197], "university_nam": 196, "unix": [60, 65, 66, 129], "unknown": [5, 11, 12, 13, 14, 17, 18, 19, 20, 71, 117, 160, 163, 165, 185, 195, 199], "unknowncol": 163, "unlabel": 1, "unless": [40, 47, 75, 90, 129, 132, 170, 172, 173, 176, 186, 189, 199], "unlik": [36, 54, 55, 69, 150, 152, 156, 159, 172, 178, 181, 189, 199], "unlimit": [72, 140, 172, 176, 179], "unlock": 140, "unmemb": 118, "unmodifi": 172, "unnam": [146, 168, 198], "unnatur": 129, "unnecessari": [39, 132, 178], "unnot": 129, "unobserv": 198, "unoffici": 174, "unord": [48, 56, 57, 93, 156], "unorderd": 57, "unown": 167, "unpack": [53, 55], "unpackbit": 154, "unpacking_person_info": 72, "unpickl": [85, 171], "unpredict": 118, "unprestigi": 129, "unravel": 1, "unravel_index": 154, "unreferenc": [69, 103], "unriv": 129, "unruffl": 196, "unseen": [171, 174, 178], "unsolicit": 129, "unsqueez": [171, 172, 173, 174, 176, 178, 179, 180, 181], "unstructur": [118, 133, 135, 136, 173], "unstructured_fil": 135, "unstructuredfileload": 129, "unstructuredpdfload": 133, "unstructuredurlload": [117, 140], "unsuccess": 40, "unsuervis": 11, "unsupervis": [11, 208], "unsuperwis": 11, "unsupport": [71, 94, 105], "unsur": [40, 41, 178], "until": [5, 35, 48, 49, 50, 69, 72, 73, 79, 117, 127, 129, 130, 152, 165, 178, 179], "untrain": [176, 177, 178], "untrained_pr": 172, "unusu": [37, 52, 135], "unzip": [117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 174, 175, 176, 177, 179, 180, 181], "uolp": 53, "up": [0, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 35, 39, 43, 48, 49, 50, 52, 69, 72, 75, 76, 78, 79, 86, 90, 93, 94, 99, 117, 118, 127, 128, 129, 131, 135, 136, 137, 138, 139, 143, 144, 149, 156, 167, 170, 171, 172, 173, 175, 179, 180, 187, 188, 189, 190, 192, 195, 197, 200, 201], "upcom": [140, 176, 179, 185, 187, 193, 201], "updat": [5, 6, 39, 49, 54, 57, 77, 117, 129, 131, 132, 136, 137, 138, 156, 159, 160, 161, 162, 163, 165, 166, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 185, 187, 191, 194, 200], "updated_at": [136, 137], "upfront": [99, 170], "upgrad": [133, 138, 173, 174, 178, 179], "upload": [133, 174, 177], "upon": [1, 35, 50, 73, 104, 105, 107, 129, 173, 177, 178, 185, 194, 199, 200, 201], "upper": [29, 30, 38, 40, 53, 95, 129, 147, 163, 170, 187, 195, 196, 199, 200], "uppercas": [40, 53, 81, 89, 91, 96, 170], "uppercase_decor": 38, "upscal": 173, "uptil": 93, "upto": [194, 199, 201], "upvot": 129, "upward": [176, 198], "urd": 118, "urg": 191, "urgent": [129, 131], "url": [117, 118, 126, 127, 129, 136, 137, 140, 143, 156, 173, 176, 177, 178, 179, 192], "urllib3": 127, "urlopen": 127, "ursar": 167, "us": [0, 1, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 29, 30, 32, 35, 38, 41, 43, 44, 45, 46, 47, 50, 53, 56, 57, 58, 62, 63, 65, 66, 67, 69, 70, 71, 73, 75, 76, 78, 79, 82, 83, 84, 86, 88, 89, 90, 92, 93, 94, 96, 97, 98, 99, 103, 104, 105, 110, 121, 126, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 141, 144, 145, 146, 150, 151, 152, 153, 156, 161, 162, 166, 167, 172, 175, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208], "usa": [118, 130, 146], "usabl": [39, 85, 170, 174, 178, 179], "usag": [19, 20, 24, 39, 80, 99, 156, 157, 170, 172, 175, 177, 180, 181, 188, 189, 196, 201], "usd": [118, 136, 137, 146, 178, 196, 201], "useabl": 25, "useless": 8, "user": [0, 23, 25, 35, 38, 43, 45, 46, 48, 49, 52, 56, 58, 70, 71, 72, 74, 75, 78, 81, 87, 90, 94, 105, 117, 118, 126, 127, 128, 129, 130, 131, 132, 134, 138, 142, 143, 144, 154, 160, 163, 168, 170, 177], "user_check": 46, "user_industri": 134, "user_inform": 143, "user_input": [117, 134], "user_loc": [117, 138], "user_m": 117, "user_prompt": 118, "user_queri": 138, "user_request": 138, "user_screen_nam": 139, "user_screenname_str": 139, "user_select": 144, "user_timelin": [139, 143], "user_tweet": 143, "user_unit": 138, "usernam": 118, "users_tweet": [139, 143], "userwarn": [117, 118, 131, 132, 170, 176, 185], "usless": 1, "usr": [170, 173], "usual": [1, 28, 38, 49, 50, 58, 72, 75, 84, 91, 93, 99, 104, 117, 129, 131, 132, 137, 143, 144, 150, 156, 162, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 189, 195], "utc": [60, 61, 62, 65, 66, 118], "utf": [69, 72, 118, 129], "uti": 179, "util": [8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 58, 117, 118, 127, 129, 131, 132, 163, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 183, 197, 201], "utmost": [188, 195, 199, 200], "uuaoqyxbtl": 139, "uv": 33, "uxi": 167, "v": [8, 25, 27, 33, 48, 53, 56, 69, 72, 91, 101, 118, 129, 132, 142, 143, 152, 172, 173, 174, 176, 177, 189, 191, 193, 194, 198, 204], "v0": [176, 177, 178, 179, 186], "v1": [105, 127, 136, 137, 153, 201], "v2": [105, 153, 201], "v3": [25, 118], "v_": 33, "v_1": [33, 201], "v_2": [33, 201], "v_i": 33, "v_n": 33, "va": [187, 197], "vabariik": 118, "vacanc": 142, "vacant": 129, "vacat": 129, "vaccin": 48, "vagu": [8, 19, 20, 189], "vairabl": 95, "val": [39, 48, 50], "valid": [0, 6, 12, 14, 16, 17, 18, 19, 20, 53, 55, 89, 90, 97, 107, 118, 126, 156, 171, 173, 174, 179, 180, 188], "validate_templ": 130, "vallei": [128, 129, 132], "valu": [2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 33, 35, 36, 39, 40, 41, 44, 45, 47, 48, 49, 52, 53, 57, 58, 60, 66, 69, 71, 72, 73, 76, 77, 78, 80, 81, 82, 83, 85, 90, 92, 93, 94, 96, 97, 103, 117, 118, 127, 129, 131, 132, 134, 137, 139, 140, 142, 144, 146, 149, 150, 151, 152, 153, 156, 158, 160, 161, 163, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202], "valuabl": [1, 18, 19, 20, 129, 132, 143, 144], "value1": 54, "value2": 54, "value3": 54, "value_count": [146, 156, 168, 172, 179], "value_var": 201, "valueerror": [39, 72, 94, 95, 107, 127, 129, 151, 157, 165, 193], "valuen": 54, "valuetoolargeerror": 73, "valuetoosmallerror": 73, "vancouv": 118, "vanilla": [144, 178], "vanilla_relevant_doc": 141, "vanillish": 167, "vanillit": 167, "vanillux": 167, "vanish": 129, "vanishingli": 129, "vaporeon": 167, "var": [72, 78, 127, 129, 146, 191, 200], "var_1": 89, "var_nam": [176, 177, 178, 179, 193, 194, 195], "var_scope_test": 76, "vari": [9, 12, 14, 72, 102, 129, 131, 137, 142, 156, 172, 174, 176, 177, 178, 179, 186, 188, 193, 201], "variabel": 202, "variabl": [2, 6, 8, 9, 12, 13, 14, 15, 16, 17, 18, 23, 25, 29, 30, 36, 39, 40, 41, 44, 45, 46, 48, 49, 50, 52, 53, 58, 60, 61, 63, 65, 71, 72, 75, 80, 81, 84, 85, 89, 92, 93, 94, 95, 96, 101, 103, 104, 107, 117, 118, 133, 136, 137, 138, 139, 143, 144, 160, 162, 163, 165, 166, 170, 171, 173, 178, 179, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201], "variable1": 89, "varianc": [2, 4, 150, 153, 189], "variant": [176, 178], "variat": [2, 21, 45, 46, 48, 109, 113, 188, 190, 193, 194, 195, 196, 197, 198, 199, 201], "varieti": [25, 53, 136, 137, 143, 174, 193, 197, 200, 201], "variou": [0, 1, 3, 25, 38, 40, 48, 49, 52, 53, 54, 55, 56, 58, 69, 81, 85, 92, 96, 97, 118, 129, 132, 139, 142, 143, 149, 156, 161, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 186, 187, 190, 191, 197, 200, 201, 202], "variti": 193, "vartupl": 78, "vast": [1, 149, 156, 159, 178, 179], "vaswani": 178, "vatican": 117, "vb": 133, "vc": [127, 129, 132, 142], "vcsqueez": 132, "vdot": [32, 33], "ve": [17, 18, 19, 20, 40, 72, 117, 118, 129, 132, 133, 134, 139, 143, 144, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201], "vec": 33, "vector": [4, 5, 12, 17, 18, 19, 20, 27, 31, 32, 34, 105, 117, 118, 132, 133, 142, 152, 153, 172, 173, 176, 177, 178, 193, 197, 199], "vectordb": [132, 141], "vectorestor": 118, "vectorestoreretriev": 117, "vectorstor": [118, 131, 132, 133, 135, 141, 142], "vectorstoreretriev": 117, "veg": 72, "vega": 142, "veget": [72, 118, 130], "vehicl": [104, 137, 139, 156, 199], "vehicle_info": 104, "ven": 118, "vendor": [144, 175, 179, 199], "vendor_id": 199, "veniped": 167, "venomoth": 167, "venonat": 167, "ventur": [127, 129, 132, 142], "venusaur": 167, "venusaurmega": 167, "venv": [25, 179], "verb": 129, "verbos": [117, 118, 126, 127, 129, 130, 131, 132, 140, 142, 143, 144, 176, 177], "verdana": 197, "verfi": 179, "veri": [0, 1, 2, 5, 6, 9, 23, 25, 28, 29, 30, 36, 43, 49, 53, 56, 57, 58, 69, 80, 88, 93, 99, 107, 116, 117, 129, 131, 132, 139, 144, 149, 152, 153, 156, 157, 159, 160, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201], "veriabl": 76, "verifi": [104, 127, 170, 177, 178, 179], "verify_integr": 165, "verison": 173, "versa": [32, 171], "versatil": [53, 200], "versicolor": [10, 11, 15, 185, 193], "version": [0, 25, 67, 69, 80, 81, 82, 95, 96, 117, 127, 129, 131, 132, 133, 138, 142, 143, 152, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 188, 192, 200], "versor": 33, "versu": [143, 171, 173, 178, 179], "vert": 194, "vertex": 179, "vertiac": 196, "vertic": [40, 53, 107, 118, 131, 152, 153, 193, 194, 195, 196, 197, 198, 201], "verticalalign": 178, "vespiquen": 167, "vest": [129, 132], "vet": 140, "vgg": 176, "vgg16": 176, "via": [39, 50, 104, 117, 118, 129, 132, 133, 142, 143, 171, 173, 174, 175, 176, 177, 178, 179, 181, 199], "viabl": 178, "viaweb": 129, "vibrava": 167, "vice": [32, 171], "victini": 167, "victreebel": 167, "video": [25, 117, 118, 121, 131, 139, 142, 143, 145, 170, 171, 172, 173, 174, 178, 179, 201], "video_edit": 117, "video_text": 143, "video_url": 143, "videos_text": 143, "view": [71, 104, 129, 131, 132, 137, 139, 140, 142, 151, 154, 159, 170, 172, 173, 176, 178, 179, 185, 187, 189, 197, 198, 202], "viewabl": 177, "viewer": 188, "vigoroth": 167, "vijai": 103, "vileplum": 167, "villain": 129, "vinegar": 130, "violin": [188, 195, 197, 198, 199, 204], "violinplot": [193, 194, 196], "viral": [128, 143], "virginica": [10, 11, 15, 185, 193], "viridi": [188, 191, 197], "viridian": 188, "viridis_r": 191, "virizion": 167, "virtual": 195, "virtualenv": 25, "virtuou": 132, "visibl": [76, 81, 95, 103, 129, 140, 144, 189, 196, 199, 200, 201], "visibli": 187, "vision": [0, 129, 140, 143, 170, 172, 174, 175, 176, 178, 179, 184], "visiontransform": 176, "visit": [23, 35, 39, 40, 53, 60, 66, 67, 71, 73, 75, 76, 82, 83, 85, 90, 104, 105, 117, 129, 139, 156, 189], "visual": [1, 12, 13, 14, 28, 53, 54, 104, 116, 129, 140, 146, 147, 170, 171, 172, 175, 176, 177, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 208], "visuali": 189, "visualizaion": 201, "visualstudio": 25, "vit": 176, "vit_average_time_per_pr": 179, "vit_b_16": [176, 178, 179], "vit_b_16_weight": [178, 179], "vit_b_32": 176, "vit_result": 179, "vit_stat": 179, "vit_test_pred_df": 179, "vit_test_pred_dict": 179, "vit_total_param": 179, "vit_transform": 179, "vivid": 139, "vividli": [129, 199], "vivillon": 167, "vlag": 191, "vlag_r": 191, "vmax": [19, 20, 194, 202], "vmin": [19, 20, 194, 202], "vocabulari": 129, "vodka": 132, "voic": [128, 139], "voil": 126, "volatil": [69, 170], "volbeat": 167, "volcanion": 167, "volcarona": 167, "volkswagen": [156, 157, 168], "voltorb": 167, "volvo": [156, 157, 168], "vonmis": 82, "vonmisesvari": 82, "vound": 142, "vowel": [54, 55, 91, 92], "vpython": 25, "vscode": [25, 170, 177], "vstack": 149, "vullabi": 167, "vulpix": 167, "vv": 152, "vw": 129, "vx0qtjbfxt": 139, "vysxuyy7rje0xreyvcvzxa": 177, "w": [1, 48, 49, 50, 53, 54, 55, 57, 61, 62, 69, 72, 117, 118, 128, 131, 132, 133, 138, 152, 170, 173, 174, 176, 178, 179, 185, 188, 200, 201], "w320": 118, "w_i": 31, "wa": [0, 1, 15, 16, 35, 36, 37, 38, 39, 40, 45, 48, 50, 53, 58, 69, 71, 72, 76, 81, 91, 104, 105, 107, 117, 118, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 144, 151, 152, 157, 170, 171, 172, 173, 174, 176, 177, 178, 179, 183, 185, 186, 187, 189, 195, 197, 199, 200, 201], "wage": 199, "wagon": [156, 157, 168], "wai": [0, 1, 23, 25, 35, 36, 38, 39, 43, 47, 48, 49, 52, 53, 55, 56, 57, 58, 60, 63, 64, 69, 72, 73, 78, 81, 84, 86, 90, 93, 95, 96, 97, 105, 107, 117, 118, 129, 130, 131, 132, 133, 135, 137, 139, 140, 141, 144, 146, 150, 151, 156, 157, 158, 159, 160, 164, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 200, 202], "wailmer": 167, "wailord": 167, "wait": [0, 45, 67, 129, 132, 133, 139, 173, 174, 177, 178, 179], "walk": [118, 129, 132, 174, 178, 198], "walk_through_dir": 174, "walker": 129, "walkthrough": 178, "wall": [129, 142, 143, 170, 177], "walli": 29, "wallow": 129, "walrein": 167, "wandb": 177, "wang": 178, "wanna": [131, 139, 144], "want": [0, 5, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 26, 36, 38, 39, 40, 43, 45, 47, 48, 49, 50, 52, 53, 54, 69, 70, 72, 76, 81, 84, 88, 90, 91, 95, 97, 102, 104, 105, 107, 112, 117, 118, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 185, 186, 187, 188, 189, 191, 194, 195, 196, 199, 200, 201], "warm": [104, 129, 188], "warmest": 129, "warmup": 178, "warn": [99, 117, 118, 131, 132, 143, 152, 164, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "wartortl": 167, "wash": 147, "washington": 185, "wasn": [117, 129, 132, 142, 177, 179], "wast": [117, 129, 132, 133], "wat": 191, "watch": [0, 48, 129, 133, 139, 143, 144, 171, 172, 173], "watchog": 167, "water": [117, 129, 167], "watev": 53, "watson": 48, "wave": [129, 131, 186, 201], "wayve_ai": 139, "wb": [69, 172, 173, 174, 175, 176, 177, 178, 180, 181], "we": [0, 1, 2, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 27, 28, 32, 33, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 116, 117, 118, 127, 128, 129, 131, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "we6ptjwdnp": 139, "weak": [71, 85], "wealth": 141, "weapon": [185, 199], "wear": 185, "weather": [6, 117, 126, 129, 138], "weather_info": 138, "weaviat": 117, "weavil": 167, "web": [0, 23, 25, 99, 129, 132, 143, 179, 188], "web_tech": 53, "webbaseload": 141, "weber": 129, "webinar": 118, "webpag": [0, 117, 118, 173], "websit": [25, 91, 117, 118, 140, 141, 170, 171, 172, 173, 174, 175, 180, 181, 188], "website_data": 143, "wed": [127, 170], "wednesdai": [117, 144], "weedl": 167, "week": [0, 60, 61, 62, 64, 75, 129, 140, 144, 178, 194, 196, 197], "weekdai": [61, 62], "weekend": [132, 133, 144, 195, 197], "weekli": 146, "weep": 104, "weepinbel": 167, "weez": 167, "weibul": 82, "weibullvari": 82, "weight": [8, 75, 132, 137, 146, 160, 170, 171, 172, 173, 174, 176, 177, 178, 179, 187, 191, 197, 199], "weight_decai": 178, "weight_of_object": 75, "weird": [129, 156], "weirder": 38, "welcom": [38, 53, 69, 75, 81, 102, 117, 143, 177, 179, 189, 194, 195, 196, 198, 199, 200, 201], "well": [0, 5, 6, 12, 13, 14, 17, 18, 19, 20, 25, 26, 37, 45, 46, 48, 49, 50, 52, 53, 64, 70, 72, 80, 84, 90, 91, 96, 97, 102, 103, 104, 105, 112, 117, 129, 131, 132, 134, 137, 139, 140, 142, 144, 156, 158, 159, 160, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201], "went": [72, 117, 129, 132, 133, 137, 138, 143, 172, 173, 176, 177], "were": [0, 10, 11, 15, 28, 41, 50, 69, 71, 72, 78, 96, 104, 107, 117, 118, 129, 131, 132, 136, 137, 139, 140, 142, 143, 144, 152, 170, 171, 174, 176, 177, 178, 179, 183, 185, 193, 198], "weren": [129, 142, 178], "west": [118, 129], "western": 118, "wget": 179, "what": [0, 5, 6, 8, 12, 14, 15, 16, 17, 18, 19, 20, 23, 28, 36, 37, 38, 39, 40, 41, 44, 50, 52, 58, 65, 72, 76, 82, 85, 89, 96, 103, 105, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 168, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 199, 200, 201, 208], "whatev": [88, 103, 105, 117, 129, 133, 134, 170, 171, 173, 174, 175, 181, 189], "whatsoev": 201, "wheel": [129, 137, 156, 157, 167, 168, 178, 199], "when": [5, 6, 7, 11, 15, 16, 17, 18, 28, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 50, 53, 55, 58, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 89, 91, 92, 93, 94, 95, 97, 99, 102, 103, 104, 105, 107, 109, 110, 113, 117, 118, 126, 127, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 142, 143, 146, 147, 150, 152, 153, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 206], "whenev": [39, 49, 71, 85, 103, 107, 118, 131, 160, 163, 165, 166, 170, 177, 196, 197], "where": [1, 2, 4, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 28, 29, 30, 35, 37, 39, 47, 49, 50, 52, 53, 54, 55, 58, 66, 69, 71, 72, 75, 76, 77, 81, 93, 95, 97, 99, 103, 104, 117, 118, 129, 131, 132, 135, 136, 139, 142, 143, 151, 152, 154, 156, 158, 159, 160, 161, 163, 164, 165, 166, 170, 171, 172, 174, 177, 180, 181, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "wherea": [40, 48, 52, 55, 60, 61, 76, 99, 102, 107, 109, 113, 129, 139, 157, 164, 165, 166, 174, 186, 190, 199, 200], "wherebi": 129, "whereupon": [129, 132], "wherev": [132, 142, 176, 179], "whether": [1, 6, 15, 16, 17, 18, 19, 20, 21, 43, 44, 45, 50, 69, 72, 73, 77, 85, 96, 104, 109, 113, 132, 136, 138, 151, 156, 160, 161, 162, 163, 165, 166, 171, 172, 173, 174, 176, 177, 178, 179, 189, 190, 191, 198, 199], "whi": [194, 195], "which": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 13, 16, 17, 18, 19, 20, 24, 25, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 48, 50, 52, 53, 55, 56, 57, 58, 63, 65, 67, 69, 70, 72, 73, 75, 76, 80, 81, 86, 90, 91, 92, 93, 94, 95, 97, 99, 102, 103, 104, 105, 107, 110, 117, 118, 126, 129, 131, 132, 133, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 163, 164, 165, 166, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206], "whichev": [190, 196], "while": [0, 23, 35, 36, 39, 41, 43, 51, 52, 53, 56, 57, 67, 69, 71, 73, 75, 78, 80, 81, 84, 89, 90, 94, 96, 97, 99, 102, 103, 104, 107, 118, 127, 129, 131, 132, 133, 137, 139, 140, 151, 157, 158, 162, 164, 165, 171, 173, 174, 176, 177, 178, 179, 185, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201], "whilst": [172, 173, 175, 178, 179, 200], "whimsicott": 167, "whirl": 129, "whirliped": 167, "whiscash": 167, "whisk": 117, "whisker": [8, 12, 14, 194, 195, 197, 199], "whiskerprop": 193, "whismur": 167, "whisper": 143, "white": [8, 43, 50, 53, 118, 129, 131, 137, 144, 185, 186, 196, 197], "whitegrid": [186, 188, 189, 190, 191, 194, 196, 197, 199, 201], "whitespac": [48, 53, 118], "whitish": 132, "whl": [176, 177, 178, 179], "who": [0, 45, 53, 118, 126, 129, 131, 135, 136, 137, 139, 142, 143, 144, 154, 179, 185, 195, 197, 199], "whoisthi": [102, 104], "whole": [25, 50, 53, 67, 81, 96, 129, 131, 132, 135, 143, 144, 156, 157, 159, 171, 173, 174, 175, 176, 177, 178, 179], "wholesal": 132, "wholist": 131, "wholli": 129, "whoop": [38, 136, 137, 143], "whose": [2, 9, 76, 80, 91, 103, 117, 129, 160, 163, 178], "why": [36, 38, 39, 45, 52, 53, 71, 72, 85, 90, 129, 132, 135, 136, 137, 139, 142, 143, 144, 152, 171, 172, 173, 174, 180, 181, 185, 193, 194, 195, 197], "wichita": 185, "wickham": 189, "wide": [25, 95, 117, 129, 153, 156, 163, 170, 173, 174, 176, 177, 178, 179, 193, 194, 197], "wide_to_long": 193, "widen": 201, "wider": [118, 142, 144, 172, 196, 199], "widespread": [157, 177], "width": [10, 11, 12, 15, 53, 102, 118, 142, 144, 147, 170, 173, 174, 176, 177, 178, 179, 180, 181, 185, 190, 191, 193, 195, 196, 197, 199, 201], "width_ratio": 201, "wife": 142, "wifi": 134, "wigglytuff": 167, "wightman": 173, "wiki": [131, 172, 192], "wikipedia": [2, 4, 5, 6, 8, 131, 170, 171, 172, 176, 192], "wikipediaapiwrapp": 131, "wild": [117, 118, 129, 139, 172, 179], "wildcard": 142, "wilder": 199, "wildli": 129, "william": [131, 142], "willing": [117, 129, 131], "wimpi": 129, "win": 201, "win32": [25, 81], "wind": [129, 170], "windi": 138, "window": [25, 69, 70, 103, 129, 137, 185, 188, 199], "windshield": 137, "wine": 144, "winerror": [69, 81], "wing": 139, "wingul": 167, "winograd": 129, "winter": [129, 191], "winter_r": [191, 200], "wirh": 167, "wisdom": [117, 131], "wise": [128, 147, 149, 156, 164, 167, 170, 178, 188, 191, 199], "wish": [39, 40, 50, 53, 75, 95, 132, 179, 188, 190, 195, 197, 199, 200, 201], "wistia": 191, "wistia_r": 191, "wit": [128, 129], "within": [0, 1, 4, 25, 35, 40, 49, 50, 55, 69, 70, 75, 77, 84, 93, 102, 104, 118, 129, 131, 132, 139, 153, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 185, 186, 187, 191, 193, 194, 195, 196, 197, 199, 201, 203], "without": [0, 1, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 35, 38, 44, 50, 53, 55, 57, 58, 61, 62, 69, 72, 77, 78, 80, 81, 84, 96, 97, 99, 102, 103, 104, 105, 117, 118, 129, 131, 132, 133, 134, 140, 144, 152, 153, 160, 162, 165, 167, 170, 171, 173, 177, 178, 179, 185, 186, 187, 188, 193, 195, 196, 197, 199, 200, 201, 208], "withpoli": 140, "witti": 128, "woah": [171, 176, 178, 179], "wobbuffet": 167, "wolfpaulu": 133, "wolfram_alpha_appid": 126, "wolframalpha": 126, "wolpert": 1, "woman": [40, 129, 195, 197], "women": 139, "won": [75, 104, 118, 129, 130, 131, 132, 133, 138, 142, 143, 144, 153, 156, 170, 171, 172, 173, 174, 176, 178, 179, 185, 186, 189, 193, 199, 201], "wonder": [60, 75, 117, 118, 126, 129, 133, 135, 139, 172, 173, 174, 176, 177, 178, 179, 199], "wonderfulli": 129, "wont": [103, 170], "woo": [102, 118], "woobat": 167, "wood": 129, "woof": 131, "woohoo": [171, 174, 175, 178, 179], "wooper": 167, "wor": 53, "word": [1, 6, 8, 29, 30, 33, 48, 50, 53, 58, 69, 81, 89, 91, 96, 102, 103, 104, 117, 126, 129, 130, 131, 133, 139, 142, 144, 170, 172, 173, 174, 176, 177, 178, 179, 189, 190, 197, 200], "work": [0, 1, 5, 6, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 26, 36, 37, 38, 40, 41, 48, 49, 50, 52, 54, 56, 58, 60, 69, 70, 72, 76, 79, 81, 86, 93, 95, 96, 99, 102, 103, 104, 105, 112, 118, 128, 129, 131, 132, 133, 134, 136, 139, 140, 142, 143, 144, 149, 151, 152, 156, 159, 163, 170, 171, 172, 173, 174, 176, 177, 178, 179, 185, 186, 188, 189, 190, 191, 194, 196, 199, 200, 201], "workaround": [118, 143], "workbook": 199, "worker": [174, 175, 181], "workflow": [118, 140, 172, 173, 174, 177, 179, 184, 201], "workforc": [136, 137], "workload": [86, 178], "workplac": 191, "works_for_al": 38, "world": [5, 11, 12, 14, 23, 24, 25, 45, 48, 53, 71, 79, 81, 85, 91, 93, 96, 97, 101, 102, 103, 118, 127, 129, 132, 139, 142, 156, 170, 171, 172, 173, 174, 176, 177, 178, 179, 181, 186, 189, 194, 195, 199, 208], "world66": 53, "worldli": 129, "worm": [129, 143], "wormadampl": 167, "wormadamsandi": 167, "wormadamtrash": 167, "worn": 129, "worri": [91, 118, 129, 142, 144, 177, 178, 192, 201], "wors": [129, 172, 173, 178], "worst": [2, 129, 172], "worth": [129, 135, 144, 177, 178, 179, 193, 194, 198], "would": [0, 1, 7, 8, 24, 25, 35, 37, 38, 39, 41, 43, 48, 50, 58, 69, 70, 71, 72, 78, 79, 81, 84, 86, 89, 90, 95, 103, 104, 107, 110, 116, 117, 118, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 140, 142, 143, 144, 170, 171, 172, 173, 174, 176, 177, 178, 179, 185, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 206], "wouldn": [129, 131, 132, 142, 178, 179, 189, 197, 200], "wow": [129, 131, 139], "wozniak": 131, "wp": 133, "wqzg1bdotc": 139, "wrangl": [169, 191, 199], "wrap": [78, 102, 129, 130, 134, 137, 163, 178], "wrapped_f": 129, "wrappedfn": 129, "wrapper": [38, 126, 127, 163, 189, 194, 200], "wrapper___slow_conv2d_forward": 174, "wrapper_accepting_paramet": 38, "wrapper_addmm": 173, "wrapper_cuda_addmm": 173, "wreckag": 129, "wrestl": 129, "writabl": 69, "write": [0, 6, 7, 21, 23, 25, 40, 46, 48, 49, 50, 53, 55, 58, 71, 75, 76, 77, 81, 85, 86, 88, 90, 92, 93, 95, 99, 102, 104, 107, 109, 110, 113, 117, 118, 129, 131, 132, 139, 142, 144, 150, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 196, 205, 206], "writeabl": 154, "writefil": [175, 179, 181], "writelin": 69, "writer": [117, 129, 132, 139], "written": [7, 25, 44, 52, 53, 58, 69, 72, 75, 85, 86, 89, 91, 92, 93, 99, 109, 110, 113, 129, 135, 139, 174, 175, 176, 177, 178, 179, 181, 206], "wrong": [45, 46, 72, 73, 117, 129, 170, 171, 172, 173, 174, 177, 179], "wrote": [69, 117, 118, 129, 135, 172, 175, 176, 177, 178], "wspace": [17, 18, 19, 20], "wt": 193, "wtxmut": 193, "wurmpl": 167, "www": [25, 117, 118, 136, 137, 140, 141, 143], "wxwidget": 25, "wynaut": 167, "wysiwyg": 129, "x": [2, 4, 5, 6, 9, 11, 12, 13, 14, 15, 16, 17, 18, 25, 29, 30, 31, 32, 36, 37, 38, 41, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 58, 61, 62, 69, 75, 76, 77, 78, 80, 81, 83, 85, 90, 91, 92, 93, 95, 96, 103, 104, 105, 107, 117, 118, 131, 139, 143, 146, 147, 149, 150, 151, 152, 153, 156, 157, 163, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "x1": [12, 13, 14, 15, 16, 17, 18, 76, 96, 172, 190], "x11": 188, "x2": [12, 13, 14, 15, 16, 17, 18, 96, 146, 172, 190], "x3": 96, "x45": 53, "x48": 53, "x58": 53, "x61": 53, "x97": 135, "x_": [29, 30], "x_1": [29, 30], "x_2": [29, 30], "x_3": [29, 30], "x_4": [29, 30], "x_5": [29, 30], "x_axi": [11, 12, 15, 16, 192], "x_bin": 189, "x_blob": 172, "x_blob_test": 172, "x_blob_train": 172, "x_ci": 189, "x_data": 193, "x_estim": 189, "x_flatten": 178, "x_i": [29, 30, 31, 172], "x_index": [12, 15, 16], "x_input": 178, "x_jitter": 189, "x_m": [29, 30], "x_max": [12, 15, 16, 192], "x_med": 194, "x_min": [12, 15, 16, 192], "x_origin": 170, "x_output_mlp_block": 178, "x_output_msa_block": 178, "x_partial": 189, "x_patch": 178, "x_permut": 170, "x_predict": [12, 13, 14], "x_regress": 172, "x_reshap": 170, "x_sampl": 172, "x_squeez": 170, "x_stack": 170, "x_sum": 49, "x_test": [12, 14, 17, 18, 19, 20, 171, 172], "x_test_regress": 172, "x_train": [11, 12, 14, 15, 16, 17, 18, 19, 20, 171, 172], "x_train_regress": 172, "x_unsqueez": 170, "x_valu": 12, "x_var": [191, 200], "x_y_index": 12, "xatu": 167, "xavier": 196, "xaxi": [12, 197], "xeon": 179, "xernea": 167, "xerox": 129, "xgboost": 173, "xhh": 53, "xkcd": 188, "xkcd_palett": 188, "xkcd_rgb": [188, 194], "xl": 69, "xlabel": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 131, 146, 147, 171, 173, 174, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199], "xlim": [187, 201], "xlist": 196, "xlrd": 69, "xlsx": 167, "xmax": 193, "xmin": 193, "xml": 25, "xml_exampl": 69, "xmpmcoyqhi": 139, "xor": [96, 105], "xorg": 170, "xtick": [146, 147, 178, 197], "xticklabel": [178, 201], "xy": [179, 197, 200], "xycoord": [187, 200], "xytext": 197, "xyz": [48, 55, 70, 72, 95, 140, 170], "xyzvalu": 95, "xz": 40, "y": [5, 6, 9, 12, 13, 14, 15, 16, 29, 30, 31, 36, 40, 41, 46, 47, 48, 52, 53, 54, 55, 58, 60, 61, 62, 63, 65, 66, 75, 76, 78, 80, 81, 83, 91, 92, 93, 95, 96, 103, 104, 105, 107, 117, 118, 129, 131, 135, 136, 137, 140, 146, 147, 149, 150, 152, 153, 156, 167, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "y1": [96, 190], "y134sdnnjb2rllxjlbw90zq": 170, "y2": [96, 190], "y3": 96, "y312sdnnjb2rllxjlbw90zq": 170, "y_axi": [11, 12, 15, 16], "y_blob": 172, "y_blob_test": 172, "y_blob_train": 172, "y_combinator_url": 140, "y_data": 193, "y_i": [29, 30, 31], "y_index": [12, 15, 16], "y_jitter": 189, "y_logit": [172, 173], "y_max": [12, 15, 16], "y_med": 194, "y_min": [12, 15, 16], "y_partial": 189, "y_pred": [171, 172, 173, 174, 175, 180, 181], "y_pred_class": [174, 175, 180, 181], "y_pred_label": 172, "y_pred_prob": 172, "y_pred_tensor": 173, "y_predict": [12, 13, 14], "y_regress": 172, "y_sampl": 172, "y_test": [12, 14, 17, 18, 19, 20, 171, 172], "y_test_predict": [17, 18, 19, 20], "y_test_regress": 172, "y_train": [12, 14, 15, 16, 17, 18, 19, 20, 171, 172], "y_train_predict": [15, 16, 17, 18, 19, 20], "y_train_regress": 172, "y_true": [172, 173], "y_valu": 12, "y_var": [191, 200], "ya": 31, "yahoo": [129, 132], "yale": 129, "yamask": 167, "yanke": 118, "yanma": 167, "yanmega": 167, "yannic": 178, "yaxi": [12, 197], "yb": 31, "yc": [129, 140], "ycombin": [117, 118, 140], "ye": [36, 38, 50, 56, 71, 118, 129, 144, 157, 160, 163, 172, 173, 174, 176, 178, 181, 189, 195, 197, 200, 201], "yeah": [142, 144, 179], "year": [0, 45, 48, 53, 61, 62, 63, 64, 65, 66, 72, 85, 98, 102, 107, 117, 118, 129, 131, 132, 133, 135, 136, 137, 138, 139, 142, 143, 146, 178, 197, 201, 202], "year2021": 91, "year_2021": 91, "year_born": 72, "yellow": [118, 129, 199], "yesmail": 41, "yet": [0, 25, 50, 117, 129, 132, 136, 137, 171, 173, 174, 176, 177, 178, 179, 197], "yg1di2srj": 139, "yield": [35, 36, 89, 135, 151, 152, 186], "yield_kei": 132, "yj": [52, 93], "ylabel": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 131, 146, 147, 171, 173, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 199], "ylgn": 191, "ylgn_r": 191, "ylgnbu": 191, "ylgnbu_r": 191, "ylim": [187, 192, 200, 201], "ylist": 196, "ylorbr": 191, "ylorbr_r": 191, "ylorrd": 191, "ylorrd_r": 191, "ymax": 193, "ymin": 193, "yo": 187, "yoga": 142, "york": [117, 118, 129], "yorker": 129, "yorkvil": [118, 129], "yosemit": 129, "you": [0, 1, 4, 5, 6, 7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 50, 53, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 97, 99, 102, 103, 104, 105, 107, 109, 110, 112, 113, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 143, 144, 147, 149, 150, 151, 152, 153, 156, 157, 158, 160, 163, 164, 165, 166, 168, 171, 172, 173, 174, 179, 180, 181, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206], "young": [118, 131, 140], "younger": [129, 132], "your": [7, 21, 24, 26, 35, 37, 40, 43, 44, 45, 50, 53, 64, 69, 70, 72, 73, 75, 83, 84, 88, 89, 90, 95, 99, 102, 103, 109, 110, 112, 113, 116, 118, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 141, 143, 144, 146, 149, 152, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 206], "your_ag": 45, "your_api_kei": 137, "your_space_nam": 179, "your_usernam": 179, "yourapikei": [117, 127, 131, 132, 133, 135, 136, 141], "yourapikeyifnotset": [118, 130, 138, 139, 142, 143], "yourkei": 128, "yourself": [0, 58, 60, 75, 95, 102, 129, 132, 137, 170, 172, 177, 199], "youtub": [139, 142, 171, 177, 178, 179], "youtubeload": 143, "youtubesearchtool": 138, "youtubeyoutub": 140, "yt": [31, 143], "ytho": 53, "ython": 40, "ytick": [146, 147, 178, 192, 200], "yticklabel": 178, "yummi": 139, "yurtsev": 137, "yveltal": 167, "yy": [60, 63], "yyyi": [60, 62, 177], "z": [8, 12, 15, 16, 41, 48, 53, 54, 55, 61, 62, 78, 89, 91, 96, 104, 150, 156, 167, 170, 172, 178, 200], "z2d5xgsemj": 139, "z_predict": 12, "z_score": 203, "z_setosa": 15, "z_versicolor": 15, "z_virginica": 15, "za": 53, "zalando": [10, 18, 20, 173], "zangoos": 167, "zapdo": 167, "zapier_nla_api_kei": 127, "zapiernlawrapp": 127, "zapiertoolkit": [121, 127, 145], "zaxi": 12, "zealand": [12, 14], "zebstrika": 167, "zekrom": 167, "zen": 107, "zero": [8, 12, 15, 16, 28, 35, 38, 39, 44, 45, 46, 47, 49, 50, 52, 53, 61, 62, 71, 72, 92, 94, 96, 103, 107, 117, 118, 126, 127, 129, 131, 140, 149, 150, 152, 153, 160, 163, 167, 171, 172, 173, 174, 175, 178, 179, 180, 181, 197, 200], "zero_grad": [171, 172, 173, 174, 175, 180, 181], "zero_to_ten": 170, "zero_to_ten_deprec": 170, "zerodivisionerror": [38, 71, 72], "zeros_lik": 170, "zfill": 53, "zho": 118, "zigzagoon": 167, "zip": [31, 48, 81, 93, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 158, 164, 174, 175, 176, 177, 178, 179, 180, 181, 194, 197, 200, 203], "zip_ref": [117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 174, 175, 176, 177, 180, 181], "zipcod": 48, "zipfil": [117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 174, 175, 176, 177, 180, 181], "zone": [61, 62, 64, 140], "zoom": [129, 144], "zoroark": 167, "zorua": 167, "zp7xfripv9": 139, "zubat": 167, "zurich": 160, "zweilou": 167, "zygarde50": 167, "\u00b5": 170, "\u00bd": 117, "\u00e2": 129, "\u00f6": 92, "\u00fb": 33, "\u00fc": 92, "\u00fcnic\u00f6d": 92, "\u03b8": 33, "\u03c6\u03b9\u03bb\u03bf\u03c3\u03bf\u03c6\u03af\u03b1": 131, "\u043a\u043e\u043b\u0443\u043c\u0431\u0438\u044f": 118, "\u043a\u043e\u043b\u0443\u043c\u0431\u0438\u0458\u0430": 118, "\u0440\u0435\u043f\u0443\u0431\u043b\u0438\u043a\u0430": 118, "\u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430": 118, "\u0444\u0440\u0430\u043d\u0446\u0438\u044f": 118, "\u0444\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0430\u044f": 118, "\u0444\u0440\u0430\u043d\u0446\u0443\u0441\u043a\u0430": 118, "\u0627\u0644\u062c\u0645\u0647\u0648\u0631\u064a\u0629": 118, "\u0627\u0644\u0641\u0631\u0646\u0633\u064a\u0629": 118, "\u062c\u0645\u0647\u0648\u0631\u064a\u0629": 118, "\u062c\u0645\u0647\u0648\u0631\u06cc": 118, "\u062c\u0645\u06c1\u0648\u0631\u06cc\u06c1": 118, "\u0641\u0631\u0627\u0646\u0633": 118, "\u0641\u0631\u0627\u0646\u0633\u0647": 118, "\u0641\u0631\u0646\u0633\u0627": 118, "\u0643\u0648\u0644\u0648\u0645\u0628\u064a\u0627": 118, "\u06a9\u0644\u0645\u0628\u06cc\u0627": 118, "\u06a9\u0648\u0644\u0645\u0628\u06cc\u0627": 118, "\u30b3\u30ed\u30f3\u30d3\u30a2": 118, "\u30b3\u30ed\u30f3\u30d3\u30a2\u5171\u548c\u56fd": 118, "\u30d5\u30e9\u30f3\u30b9": 118, "\u30d5\u30e9\u30f3\u30b9\u5171\u548c\u56fd": 118, "\u54e5\u4f26\u6bd4\u4e9a": 118, "\u54e5\u4f26\u6bd4\u4e9a\u5171\u548c\u56fd": 118, "\u6cd5\u5170\u897f\u5171\u548c\u56fd": 118, "\u6cd5\u56fd": 118, "\uacf5\ud654\uad6d": 118, "\ucf5c\ub86c\ube44\uc544": 118, "\ud504\ub791\uc2a4": 118}, "titles": ["My Journey", "Introduction to Machine Learning! \ud83d\ude80", "Anomaly Detection Using Gaussian Distribution", "Concepts at glance", "K-Means Algorithm", "Linear Regression", "Logistic Regression", "Notebooks with MyST Markdown", "Neural Network", "Anomaly Detection Using Gaussian Distribution", "Datasets", "K-Means Algorithm Demo", "Multivariate Linear Regression Demo", "Non-linear Regression Demo", "Univariate Linear Regression Demo", "Logistic Regression With Linear Boundary Demo", "Logistic Regression With Non-Linear Boundary Demo", "Multivariate Logistic Regression Demo", "Multivariate Logistic Regression Demo", "Neural Network (Multilayer Perceptron) Demo", "Neural Network (Multilayer Perceptron) Demo", "Markdown Files", "Here\u2019s my sample title", "Python Introduction", "Mathematics for Machine Learning", "Getting Started with Python", "Content with notebooks", "Linear Algebra", "Calculus - Fourier Series", "Capital-pi notation", "Capital-sigma notation", "Dissimilarity Measure", "Linear Algebra - Matrices", "Linear Algebra - Vectors", "Mathematics essentials", "Python Iterators", "Python Python Generators", "Python Closures", "Python Decorators", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator", "Python RegEx", "Python <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code></strong>", "Python Advanced Topics", "Python Flow-Control (Decision-Making) Statements", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-else</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-elif-else</span></code> statement", "Python Nested <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Loops in Python", "Loops in Python", "Control Statements in Python", "Python Flow Control", "Python Numbers, Type Conversion and Mathematics", "Python Strings", "Python List", "Python Tuple", "Python Dictionary", "Python Sets", "Python List Comprehension", "Python Data Types", "Python datetime", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strftime()</span></code>", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strptime()</span></code>", "How to get current date and time in Python?", "Python Get Current time", "Python timestamp to datetime and vice-versa", "Python time Module", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">sleep()</span></code>", "Python Date &amp; Time Module", "Python File I/O", "Python Directory and Files Management", "Python Errors and Built-in Exceptions", "Python Exceptions Handling Using <code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">except</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">finally</span></code> statement", "Python Custom Exceptions", "Python Files", "Python Functions", "Python Global, Local and Nonlocal variables", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code> Keyword", "Function Argument and Parameter", "Python Recursion", "Python Anonymous/<strong><code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span></code></strong> Function", "Python Modules", "Python Random Module", "Python Mathematical Functions", "Python Package", "Python Docstrings", "Python User-defined Functions", "Python Functions", "Python Hello, World", "Python Keywords and Identifiers", "Python Statement, Indentation and Comments", "Python Variables and Constants", "Python Literals", "Python Data Types", "Python Type Conversion and Type Casting", "Python Input, Output and Import", "Python Operators", "Python Namespace and Scope", "Data structures and algorithms", "Differences Between Interpreter and Compiler", "&lt;no title&gt;", "Python Introduction", "Python OOPs Concepts", "Python  Classes and Objects", "Python Inheritance", "Python Operator Overloading", "Python Object Class", "self in Python, demystified", "Work in progress", "Markdown Files", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "Content with notebooks", "Markdown Files", "Here\u2019s my sample title", "Introduction to HuggingFace", "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80", "LangChain Cookbook \ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73", "LangChain Cookbook Part 2: Use Cases\ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73", "Table of Contents", "Langchain modules", "Langchain", "LangGraphs", "LangServe", "LangSmith", "Langchain expression language", "Agents - Make OpenAI Do Things For you", "Zapier Natural Language Actions API", "Twitter Reply Bot", "Load Documents", "0. Simple Input/Output Still works", "5 Levels Of Summarization: Novice to Expert", "Advanced Retrieval With LangChain", "Top-K Similarity Search - Ask A Book A Question", "To Do", "Sources", "Extract Structured Data From Text: Expert Mode (Using Function Calling)", "Extract Structured Data From Text: Expert Mode (Using Kor)", "Function Calling with OpenAI\u2019s GPT Models: An Interactive Tutorial", "Instructing LLMs To Match Tone", "Personalized email generation", "&lt;no title&gt;", "Topic Modeling With Language Models", "Using LLMs To Summarize Personal Research", "Extract Data From Calls &amp; Video Transcripts/Interviews", "Langchain projects gallery", "Matplotlib", "Python Matplotlib", "Python Matplotlib", "Python NumPy", "Python NumPy Array:", "Array indexing", "Array math", "Arrays reorganizing", "Python NumPy Exercises", "Python Numpy Module", "Python Pandas", "Create Pandas DataFrame from Python Dictionary", "Create Pandas DataFrame from Python List", "Pandas DataFrame head, tail, at, iat", "Drop columns in pandas DataFrame", "Drop duplicates in pandas DataFrame", "Drop columns with NA in pandas DataFrame", "Rename columns in Pandas DataFrame", "Convert Pandas DataFrame to Python dictionary", "Set index in pandas DataFrame", "Reset index in pandas DataFrame", "Python Pandas", "Python Pandas", "Python Pandas Module", "PyTorch Fundamentals", "PyTorch Workflow Fundamentals", "PyTorch Neural Network Classification", "PyTorch Computer Vision", "PyTorch Custom Datasets", "PyTorch Going Modular", "PyTorch Transfer Learning", "PyTorch Experiment Tracking", "PyTorch Paper Replicating", "PyTorch Model Deployment", "Going Modular: Part 1 (cell mode)", "Going Modular: Part 2 (script mode)", "05. PyTorch Going Modular", "Going Modular Scripts", "Pytorch", "Loading Datasets in Seaborn", "Controlling Aesthetics of Seaborn Plots", "Matplotlib vs. Seaborn Plotting Code", "Seaborn Color Palettes", "LM Plot and Reg Plot", "Scatter Plot and Joint Plot", "Additional Regression Plots", "What is Distribution Plots?", "Seaborn: Categorical Data Plots", "Seaborn: Strip Plot", "Seaborn: Box Plot", "Seaborn: Violin Plot", "Bar Plot, Point Plot and Count plot", "Factor Plot", "Time Series &amp; LV Plot", "PairGrid", "FacetGrid", "What is heat map?", "What is cluster map?", "Python Seaborn", "Here\u2019s my sample title", "Notebooks with MyST Markdown", "Tools required to work with neural networks", "AI/ML Learning Path", "Welcome"], "titleterms": {"": [22, 40, 54, 56, 60, 61, 63, 88, 111, 114, 118, 138, 154, 168, 171, 174, 177, 178, 179, 180, 181, 192, 205], "0": [40, 130, 154, 166, 173, 174], "05": 182, "1": [1, 28, 36, 40, 47, 50, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 85, 90, 91, 96, 117, 130, 131, 133, 139, 142, 146, 147, 154, 160, 163, 166, 168, 170, 173, 174, 178, 179, 180, 181, 192, 194, 197, 200], "10": [40, 60, 147, 154, 168, 179], "100": 154, "100th": 154, "10x10": 154, "10x3": 154, "11": [40, 60, 154, 179], "12": [60, 154], "13": [60, 154], "14": [60, 154], "15": [60, 154], "16": [60, 154], "16x16": 154, "17": 154, "18": 154, "19": 154, "1d": [151, 154], "2": [1, 36, 40, 47, 50, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 67, 85, 90, 91, 96, 117, 118, 126, 131, 133, 139, 142, 146, 147, 154, 168, 170, 173, 174, 178, 179, 180, 181, 192, 197], "20": 154, "2016": 154, "2017": 10, "21": 154, "22": 154, "23": 154, "24": 154, "25": 154, "26": 154, "27": 154, "28": 154, "29": 154, "2d": [151, 154], "2x2x2": 154, "3": [1, 36, 40, 53, 54, 55, 60, 61, 63, 64, 67, 85, 90, 91, 126, 131, 139, 146, 147, 154, 168, 170, 173, 178, 179, 192, 197], "30": 154, "31": 154, "32": 154, "33": 154, "34": 154, "35": 154, "36": 154, "37": 154, "38": 154, "39": 154, "3x3": 154, "3x4": 154, "4": [1, 36, 40, 60, 64, 67, 85, 131, 139, 147, 154, 168, 170, 178, 179, 192], "40": 154, "41": 154, "42": 154, "43": 154, "44": 154, "45": 154, "46": 154, "47": 154, "48": 154, "49": 154, "4x4": 154, "5": [40, 60, 64, 85, 131, 147, 154, 168, 179, 192], "50": 154, "51": 154, "52": 154, "53": 154, "54": 154, "55": 154, "56": 154, "57": 154, "58": 154, "59": 154, "5x2": 154, "6": [40, 60, 64, 147, 154, 168, 179], "60": 154, "61": 154, "62": 154, "63": 154, "64": 154, "65": 154, "66": 154, "67": 154, "68": 154, "69": 154, "6x3": 154, "6x6": 154, "7": [40, 60, 147, 154, 168, 179], "70": 154, "71": 154, "72": 154, "73": 154, "74": 154, "75": 154, "76": 154, "77": 154, "78": 154, "79": 154, "8": [40, 60, 147, 154, 168, 179], "80": 154, "81": 154, "82": 154, "83": 154, "84": 154, "85": 154, "86": 154, "87": 154, "88": 154, "89": 154, "8x8": 154, "9": [40, 60, 147, 154, 168, 174], "90": 154, "91": 154, "92": 154, "93": 154, "94": 154, "95": 154, "96": 154, "97": 154, "98": 154, "99": 154, "9_": 40, "9x9": 154, "A": [40, 118, 129, 133, 136, 137, 154], "As": [118, 136, 137], "Be": [107, 151], "By": 40, "For": [58, 126, 138], "If": [54, 56], "In": [25, 54, 81, 103], "Into": [12, 14, 17, 18, 19, 20], "No": 72, "Of": [104, 118, 131, 139], "One": [6, 40, 45, 170], "The": [4, 39, 44, 45, 53, 54, 55, 56, 69, 72, 81, 117, 142, 157, 160, 161, 162, 163, 164, 165, 166, 172, 174, 178], "These": 192, "To": [107, 134, 139, 143, 156], "With": [15, 16, 130, 132, 137, 142], "_": 40, "__doc__": 85, "__init__": 107, "__new__": 107, "about": 23, "accept": 95, "access": [48, 53, 54, 55, 56, 95, 103], "account": 139, "accumul": 154, "across": [77, 179], "action": 127, "activ": 172, "ad": [56, 138, 149, 163], "add": [7, 54, 56, 110, 154, 206], "addit": [32, 33, 191], "adjust": [172, 177], "advanc": [23, 42, 53, 132, 153, 208], "advantag": [55, 79, 81, 86], "aesthet": 186, "agent": [117, 118, 126, 127, 131], "aggreg": [167, 170], "agnost": [173, 174], "ai": [117, 139, 208], "algebra": [27, 32, 33], "algorithm": [2, 4, 8, 11, 98], "align": 95, "all": [6, 53, 54, 56, 81, 147, 154, 160, 161, 162, 163, 168, 170, 171, 178], "allow": 192, "alpha": 126, "alphabet": 40, "alphanumer": 40, "alreadi": 56, "also": [40, 150], "altern": 40, "amount": [131, 167], "an": [7, 35, 40, 54, 56, 57, 72, 103, 110, 127, 131, 138, 154, 171, 174, 178, 179, 206], "analyz": [12, 13, 14, 15, 16, 17, 18], "anatomi": [195, 196], "angl": 33, "ani": [40, 54, 56, 75, 154], "anomali": [2, 9], "anonym": 80, "anoth": 78, "answer": [118, 133], "anyth": 56, "api": [118, 126, 127], "app": 179, "appart": 53, "appear": 54, "append": 54, "appl": 170, "appli": 156, "applic": 25, "appropri": 61, "ar": [40, 54, 56, 57, 80, 81, 84, 86, 154, 157, 162, 177, 192], "arang": 153, "arbitrari": [78, 154], "architectur": 172, "area": [25, 154], "arg": 41, "argmax": 150, "argmin": 150, "argument": [54, 72, 75, 78, 95], "arithmat": 96, "arithmet": 96, "around": 154, "arrai": [149, 150, 151, 152, 153, 154], "artifici": 10, "asarrai": 153, "ascend": [54, 55, 56], "asctim": 66, "ask": [133, 139], "assign": [91, 96], "assist": 139, "attent": 178, "attribut": [69, 85, 103, 136, 137, 150, 154, 156], "attributeerror": 71, "augment": 174, "auto": 176, "automat": 177, "avail": 56, "averag": [154, 168], "avoid": 107, "awai": 154, "axi": [154, 160, 163, 192], "b": [40, 48, 49, 154], "back": [38, 133, 170], "background": 193, "backpropag": 8, "backslash": 40, "backward": 48, "balanc": 174, "bar": [146, 147, 197], "base": [154, 176, 177], "baselin": 173, "basic": [53, 78, 131, 146, 149, 150, 170], "batch": [5, 6, 130, 173], "bath": 147, "becom": [154, 174], "befor": 40, "begin": 40, "beginn": [3, 208], "below": 154, "best": [9, 131, 173, 177], "better": [57, 173], "between": [33, 36, 60, 64, 99, 154, 174, 180, 181], "big": 179, "binari": 154, "bincount": 154, "bit": [57, 154], "bitwis": 96, "blank": 88, "block": [26, 112, 154, 178], "blue": 172, "bolt": 117, "bonu": 142, "book": [131, 133], "boolean": [75, 92, 96, 151, 153, 154], "bootstrap": 154, "border": 154, "bot": 128, "both": [95, 99, 154], "bottom": 159, "boundari": [15, 16], "box": [146, 194, 195], "boxplot": 197, "brace": 40, "bracket": 40, "brain": 117, "break": [48, 49, 50, 53, 88], "breath": 25, "bring": 179, "broadcast": [152, 153], "build": [35, 154, 171, 172, 173, 174, 177, 179, 188], "built": [38, 53, 54, 55, 56, 57, 71, 81, 103], "busi": [136, 137], "byte": 154, "c": [48, 49, 154], "calcul": [15, 16, 17, 18, 19, 20, 25, 147, 178], "calculu": 28, "call": [75, 117, 136, 138, 144], "can": [58, 107, 117, 154, 170, 172, 175, 176, 178], "canberra": 31, "capit": [29, 30], "car": 168, "care": [151, 154], "caret": 40, "cart": 40, "cartesian": 154, "case": [118, 142], "cast": 94, "catch": [50, 72], "categor": [193, 194], "cauchi": 154, "cell": [7, 110, 175, 180, 181, 206], "center": 154, "chain": [38, 117], "chang": [53, 54, 55, 56, 69, 70, 91, 144, 154, 157, 158, 166, 167, 170, 176, 177], "chapter": 142, "charact": [40, 53, 92], "chart": [146, 147], "chat": [117, 130], "chatbot": 118, "chdir": 70, "chebyshev": 31, "check": [25, 149, 154, 171, 178, 179], "checkerboard": 154, "choic": 25, "chroma": [133, 142], "chunk": 133, "cij": 154, "circl": 172, "class": [6, 8, 23, 39, 45, 60, 65, 66, 73, 85, 102, 103, 104, 106, 154, 172, 174, 178, 179], "class_nam": 179, "classif": [6, 8, 172], "classifi": 177, "claus": 72, "clean": [156, 168], "clear": [54, 56], "clock": 67, "close": 69, "closest": 154, "closur": 37, "cloud": 133, "cluster": [11, 203], "cnn": 173, "code": [25, 26, 61, 62, 88, 99, 112, 118, 173, 174, 177, 178, 187], "collect": [92, 179], "color": [154, 188, 202], "column": [154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "combin": [58, 139, 149, 154, 156, 174, 175, 178, 180, 181], "comma": 91, "command": 154, "comment": [85, 90], "common": [53, 147, 154, 170], "compani": [140, 168], "compar": [154, 160, 173, 174, 179], "comparis": [81, 99], "comparison": [96, 105, 149], "compil": [54, 99], "complier": 55, "compon": [88, 117], "compos": 154, "comprehens": [54, 56, 58], "compress": 132, "comput": [8, 154, 170, 173], "con": 175, "concaten": [53, 168], "concept": [3, 25, 102], "condit": [43, 58, 156, 167, 168], "confid": 154, "configur": 154, "confus": 173, "consecut": 154, "consid": [40, 154], "constant": [81, 91], "construct": [154, 174], "constructor": [102, 103, 107, 156, 157, 158], "consum": 154, "contain": [40, 154], "content": [26, 112, 119, 171], "context": 118, "contextu": 132, "contigu": 154, "continu": [48, 49, 50], "control": [23, 43, 48, 49, 50, 51, 186], "conv2d": [173, 178], "convent": 91, "convers": [52, 92, 94, 156], "convert": [55, 154, 164], "convolut": 173, "cookbook": [117, 118], "coordin": 154, "copi": [54, 56, 149, 151, 154], "correspond": 154, "cosin": 31, "cost": [4, 5, 6, 8], "count": [54, 168, 197], "coupl": 131, "cover": [154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "cpu": 170, "cream": 147, "creat": [7, 36, 53, 54, 55, 56, 57, 58, 61, 67, 73, 81, 103, 110, 133, 142, 150, 154, 156, 157, 158, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 188, 206], "creation": [156, 176], "credit": 139, "csv": [69, 156, 168], "ctime": 66, "cubehelix": 188, "current": [60, 63, 64, 70], "curriculum": 176, "curv": [174, 176, 178, 179], "custom": [35, 73, 140, 142, 144, 156, 158, 174, 176, 177, 178], "d": [40, 154], "dai": 60, "data": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 23, 52, 59, 93, 98, 103, 118, 133, 136, 137, 142, 143, 144, 146, 147, 153, 156, 157, 158, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 192, 193, 202, 208], "data_setup": 175, "datafram": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166], "dataload": [173, 174, 175, 176, 177, 178, 179, 180, 181], "dataset": [10, 17, 18, 19, 20, 168, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 192, 197, 200], "datatyp": [25, 57, 150, 170], "date": [23, 60, 61, 63, 65, 68, 154], "datetim": [60, 61, 62, 64, 65], "deal": 174, "decim": [40, 52, 81], "decis": [15, 16, 43], "declar": 91, "decor": [38, 39], "deep": [1, 25, 170], "default": [45, 56, 65, 78, 102], "defin": [37, 73, 75, 86, 103, 107, 157, 161, 162, 163], "definit": [4, 5, 6, 8], "degre": 154, "del": 160, "delet": [53, 54, 55, 69, 103, 160], "demo": [2, 4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 179], "demystifi": 107, "densiti": 2, "depend": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "deploi": 179, "deploy": 179, "descend": [54, 55, 56], "descent": [5, 6, 12, 13, 14, 15, 16, 17, 18], "describ": [139, 154, 167], "descript": [4, 139, 142], "desir": 167, "detail": 168, "detect": [2, 9], "determin": [32, 152], "devic": [173, 174], "diagon": 154, "dict": [54, 55, 56, 156, 157, 164], "dict2": 56, "dictionari": [48, 56, 69, 72, 93, 157, 164], "differ": [1, 36, 44, 45, 57, 60, 63, 64, 88, 99, 154, 177, 179, 180, 181], "digit": [10, 40, 67], "dimens": 154, "dimension": 154, "dir": 81, "direct": [109, 113], "directori": [70, 179], "disadvantag": 79, "discuss": 192, "disk": 147, "displai": [95, 147, 156, 174], "dissimilar": 31, "distanc": [31, 154], "distort": 4, "distplot": 192, "distribut": [2, 9, 154, 192], "dive": 25, "do": [37, 126, 134, 181], "doc": 133, "docstr": [75, 85, 90], "document": [117, 118, 129, 132, 133, 153, 154], "doe": [56, 173], "dollar": 40, "dot": [33, 154], "down": 88, "download": [177, 179], "draw": [15, 16, 154, 194, 200], "drop": [156, 160, 161, 162], "drop_dupl": 161, "dropna": 162, "dtype": 154, "duplic": [161, 162, 165], "durat": 60, "e": 154, "each": [147, 154, 168, 200], "easi": 36, "edit": 138, "editor": 25, "effici": 36, "effnetb2": 179, "einsum": 154, "either": [54, 55, 56], "eleg": 54, "element": [54, 55, 56, 57, 149, 154], "elif": 46, "els": [45, 46, 48, 49, 50, 72], "email": 140, "embed": [117, 118, 133, 178], "empti": 57, "encapsul": 102, "encod": 178, "end": [40, 54], "ensembl": 132, "entir": 131, "enumer": [72, 154], "environ": 25, "equal": [56, 154], "equat": [5, 178], "equidist": 154, "equival": [40, 154], "error": [54, 71, 160, 163, 170], "escap": [40, 53], "essenti": [34, 171], "estim": 2, "etc": [54, 170], "euclidian": 31, "evalu": [2, 118, 172, 173, 174, 175, 176, 180, 181], "even": 28, "everi": 154, "everytim": 107, "exampl": [7, 8, 28, 29, 30, 40, 47, 48, 49, 50, 60, 61, 62, 63, 64, 65, 67, 73, 77, 81, 88, 91, 96, 104, 110, 117, 118, 136, 137, 138, 139, 146, 164, 178, 179, 206], "except": [50, 71, 72, 73, 159], "exclud": 154, "exercis": [45, 65, 147, 154, 168], "exist": 154, "expand": 142, "expens": 168, "experi": [173, 177, 179], "expert": [131, 136, 137, 208], "explicit": 94, "explicitli": 107, "explor": 178, "export": [156, 167], "express": [36, 125, 154, 163], "extend": 54, "extens": 69, "extra": [139, 171, 172, 173, 174, 175, 176, 177, 178, 179], "extract": [118, 136, 137, 142, 144, 154], "extractor": [177, 178, 179], "f": [40, 154], "face": [147, 179], "facetgrid": 201, "facewash": 147, "factor": 198, "fals": [54, 56], "faq": [49, 50], "fashion": 10, "faster": [154, 170, 179], "featur": [5, 177, 178, 179], "feedback": [136, 137], "feedforward": 8, "field": 137, "fifa": 146, "figur": 178, "file": [21, 23, 69, 70, 74, 109, 113, 153, 154, 168, 178, 179], "fill": 154, "filter": [38, 80, 156, 167], "final": 72, "financi": 138, "find": [9, 154, 168, 170, 176, 178], "findal": 40, "fing": 9, "first": [22, 54, 111, 114, 142, 154, 159, 160, 161, 168, 205], "fit": [9, 142, 172], "five": 168, "fix": 154, "flatten": [153, 178], "float": [52, 95, 154], "flow": [23, 43, 51], "flower": 10, "folder": [179, 181], "follow": [147, 154, 168], "food101": 179, "foodvis": 179, "forecast": 138, "form": [28, 174], "format": [53, 60, 61, 62, 63, 85, 95, 167, 202], "forward": [8, 174], "found": 142, "four": [154, 178], "fourier": 28, "fraction": 52, "frame": 168, "freez": [176, 177], "frequent": 154, "from": [54, 55, 56, 57, 60, 61, 81, 84, 95, 136, 137, 140, 143, 144, 153, 154, 156, 157, 158, 159, 160, 161, 162, 166, 168, 170, 172, 176, 178], "from_dict": 157, "fromkei": 56, "frozenset": 57, "fuction": 117, "function": [4, 5, 6, 8, 23, 28, 36, 37, 38, 48, 53, 54, 55, 56, 57, 58, 75, 77, 78, 79, 80, 81, 83, 85, 86, 87, 95, 104, 105, 117, 136, 138, 150, 152, 154, 157, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181], "fundament": [170, 171], "further": 173, "fusion": 139, "g": 154, "galleri": [121, 145], "game": 154, "gaussian": [2, 9, 154], "gener": [28, 36, 58, 117, 140, 153, 154, 188], "get": [25, 38, 54, 56, 60, 63, 64, 70, 95, 116, 133, 139, 142, 147, 154, 156, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "getcwd": 70, "getter": 39, "give": 56, "given": [54, 55, 56, 154, 168], "glanc": 3, "global": [76, 77], "gmtime": 66, "go": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183], "got": 181, "gpt": 138, "gpu": [170, 173], "gradient": [5, 6, 8, 12, 13, 14, 15, 16, 17, 18], "gradio": 179, "graph": 146, "group": [40, 194], "groupbi": [156, 167], "h": 154, "ha": [154, 181], "ham": 31, "hand": [44, 45, 178], "handl": [60, 72], "handwritten": 10, "happen": 107, "happi": 10, "hard": 147, "have": 37, "head": [159, 177, 178], "header": 164, "heat": 202, "heatmap": 202, "hello": [72, 88, 136, 137], "help": [85, 90, 139, 175, 176], "helper": [174, 177], "here": [22, 53, 107, 111, 114, 205], "hidden": [18, 19, 20], "hide": 103, "hierarch": [104, 158], "higesht": 168, "high": 99, "higher": [37, 38], "histogram": [146, 147], "histori": 117, "hoc": 138, "hold": 25, "hour": 60, "how": [23, 53, 54, 57, 61, 62, 63, 75, 81, 149, 154, 159, 174, 179], "hstack": 153, "html": 140, "hug": 179, "huggingfac": [115, 179], "hybrid": 104, "hypothesi": [5, 6], "i": [1, 21, 32, 33, 40, 48, 49, 53, 54, 55, 56, 57, 69, 75, 77, 79, 83, 97, 99, 107, 109, 113, 117, 118, 153, 154, 156, 162, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 192, 202, 203], "iat": 159, "idea": [136, 137, 174], "ideal": 174, "ident": [32, 96, 154], "identifi": 89, "ignor": [53, 154], "illustr": [18, 19, 20], "iloc": 160, "imag": [154, 174, 176, 177, 178, 179], "imagefold": 174, "immut": 154, "implement": [8, 36, 154, 192], "implicit": 94, "import": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 81, 84, 95, 119, 149, 154, 156, 170, 174], "improv": 172, "includ": 177, "indent": 90, "index": [48, 54, 55, 117, 151, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 170], "indexerror": 71, "indic": 154, "infer": 171, "inference_mod": 171, "infinit": [35, 36], "info": 156, "inform": [25, 170], "inherit": [102, 104], "init": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20], "initi": 8, "inlin": 90, "inner": 154, "inplac": 154, "input": [95, 130, 172, 173, 178, 179], "insert": [54, 156], "insid": [25, 48, 49, 60, 154], "inspect": [53, 156, 179], "instal": [25, 119, 149], "instanc": [58, 102, 103, 177], "instead": 52, "instruct": [117, 139], "int": 154, "integ": [95, 151, 154], "interact": [118, 138, 188], "interest": [136, 137], "interfac": [117, 179], "interleav": 154, "intermedi": [139, 208], "intern": 107, "interpret": [99, 154], "intersect": 57, "interv": 154, "interview": 144, "introduct": [1, 23, 25, 41, 101, 115, 119, 170], "invers": 32, "investor": [136, 137], "iri": [10, 200], "issubclass": 104, "item": [54, 55, 56, 154], "iter": [35, 43, 48, 49, 53, 54, 55, 56, 57, 154, 156], "itm": 56, "its": 95, "j": 154, "januari": 154, "java": 99, "job": [136, 137], "join": 156, "joint": 190, "jointplot": 192, "journei": [0, 25], "json": 69, "jupyt": [2, 4, 5, 6, 8, 25], "just": 154, "justif": 95, "k": [4, 11, 133], "kdeplot": 192, "keep": [161, 165], "kei": [56, 58, 75, 94, 99, 102, 157, 164], "keyerror": 71, "keyword": [77, 78, 89, 104], "kind": 177, "kor": 137, "kwarg": 41, "label": [45, 65, 159, 172], "lambda": [58, 80, 163], "langchain": [117, 118, 119, 120, 121, 125, 132, 138, 140, 145], "langgraph": 122, "langserv": 123, "langsmith": 124, "languag": [99, 117, 125, 127, 142], "larg": [117, 154, 167], "largest": 154, "last": [147, 154, 159, 160, 161, 168], "launch": 116, "layer": [18, 19, 20, 176, 177, 178], "layernorm": 178, "lead": 163, "learn": [1, 23, 24, 38, 170, 171, 176, 177, 178, 179, 208], "least": 162, "len": [54, 55, 56], "length": [56, 78, 154, 157], "let": [88, 91, 192], "letter": 199, "level": [65, 99, 131, 139, 163, 166, 208], "librari": [146, 150, 173], "life": [154, 179], "like": [139, 154, 170, 174], "line": [44, 45, 48, 85, 88, 90, 91, 95, 146, 147, 154, 172], "linear": [5, 10, 12, 13, 14, 15, 16, 27, 32, 33, 171, 172, 173], "linspac": 153, "list": [25, 45, 48, 49, 53, 54, 55, 56, 58, 61, 62, 70, 72, 75, 81, 93, 126, 137, 154, 157, 158, 163, 164, 165, 179], "listdir": 70, "liter": 92, "llm": [117, 129, 139, 142, 143], "lm": 189, "lmplot": 189, "ln": 178, "load": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 129, 132, 133, 140, 146, 150, 153, 167, 171, 173, 174, 177, 179, 185], "loader": 117, "loc": 160, "local": [61, 76, 133, 179], "localtim": 66, "logic": [46, 71, 96], "logist": [6, 8, 11, 15, 16, 17, 18], "logit": 172, "logspac": 153, "longer": 118, "look": 174, "loop": [35, 36, 48, 49, 50, 58, 139, 140, 171, 172, 173, 174], "loss": [171, 172, 173, 174, 176, 178, 179], "lv": 199, "machin": [1, 24, 99, 177, 178, 179, 208], "made": 178, "magic": 140, "main": [118, 174, 176, 177, 178, 179], "make": [43, 70, 126, 154, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "manag": [25, 70], "manhattan": 31, "mani": [139, 150], "manipul": [149, 170], "manual": [176, 177], "map": [38, 80, 129, 131, 179, 202, 203], "mark": 40, "markdown": [7, 21, 26, 109, 110, 112, 113, 206], "mask": 153, "match": [40, 54, 139], "math": [81, 83, 152], "mathemat": [24, 34, 52, 83, 149, 152], "matplotlib": [23, 146, 147, 148, 187], "matric": [32, 151, 154, 170], "matrix": [32, 152, 154, 170, 173], "max": [54, 55, 150, 170], "maximum": [54, 55, 154], "maxpool2d": 173, "mean": [4, 11, 154, 170], "measur": 31, "member": 104, "membership": [53, 54, 55, 56, 57, 96], "memori": [36, 117, 154], "merg": 168, "messag": [117, 130], "metacharact": 40, "metadata": [7, 110, 156, 206], "method": [40, 53, 54, 55, 56, 57, 69, 102, 104, 117, 139, 150, 154], "metric": [172, 173], "microchip": 10, "microsecond": 60, "mileag": 168, "mimic": 139, "min": [54, 55, 150, 170], "mini": 179, "minimum": [55, 154], "minkowski": 31, "minut": 60, "miscellan": 153, "miss": [162, 172, 178], "mkdir": 70, "mktime": 66, "ml": [1, 208], "mlp": [19, 20, 178], "mnist": 10, "mode": [136, 137, 175, 180, 181], "model": [6, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 117, 136, 138, 142, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "model_1": 172, "model_2": 173, "model_build": 175, "modif": 156, "modifi": [57, 102, 103], "modul": [23, 64, 66, 68, 77, 81, 82, 83, 84, 85, 120, 155, 169, 170, 178], "modular": [175, 180, 181, 182, 183], "modulenotfounderror": 71, "month": [60, 147, 154], "more": [40, 53, 149, 172], "most": [147, 154, 168, 170], "move": [170, 179], "msa": 178, "mul": 154, "mulitpli": 154, "multi": [6, 8, 85, 90, 159, 160, 163, 165, 166, 172, 178], "multidimension": [29, 30], "multilay": [19, 20, 178], "multilevel": 104, "multilin": [95, 147], "multinomi": 154, "multipl": [32, 33, 72, 75, 81, 91, 95, 104, 131, 136, 137, 139, 152, 158, 160, 163, 165, 170], "multipli": 154, "multiqueri": 132, "multithread": 67, "multivari": [12, 17, 18], "mutli": 172, "my": [0, 22, 111, 114, 175, 178, 205], "myst": [7, 21, 26, 109, 110, 112, 113, 206], "n": [40, 154, 159, 160], "na": 162, "name": [81, 91, 95, 97, 154, 158, 166, 168, 174, 179], "nameerror": 71, "namespac": 97, "natur": 127, "nearest": 154, "necessari": [146, 154], "need": [102, 170, 176], "neg": [54, 55, 60], "negat": 154, "nest": [37, 47, 48, 49, 50, 58, 77, 157], "network": [8, 19, 20, 172, 173, 207], "neural": [8, 19, 20, 172, 173, 207], "neuron": 8, "new": [54, 56, 70, 154, 166], "nn": [173, 178], "non": [10, 13, 16, 40, 154, 172, 173], "nonloc": [37, 76], "normal": [2, 5, 36, 154], "notat": [29, 30], "note": 175, "notebook": [7, 25, 26, 110, 112, 175, 180, 181, 206], "novic": 131, "np": 154, "nth": 154, "null": 154, "number": [49, 52, 54, 55, 56, 58, 92, 93, 95, 150, 153, 154, 162, 165, 166], "numer": [92, 154], "numpi": [23, 149, 150, 153, 154, 155, 170], "nut": 117, "o": [69, 81], "object": [23, 40, 60, 62, 64, 69, 99, 102, 103, 106, 156], "observ": 194, "old": [53, 165], "onc": 154, "one": [40, 44, 48, 91, 95, 154, 162, 164, 173, 174], "ones": 170, "onli": [95, 154, 157], "oop": 102, "open": [69, 136, 137], "openai": [117, 126, 138], "oper": [10, 32, 33, 46, 53, 54, 55, 56, 57, 81, 96, 105, 149, 152, 170], "opposit": 40, "optim": [171, 172, 173, 178], "option": [133, 142, 156, 174], "order": [37, 38, 54, 55, 56, 104, 154], "orient": 102, "orthogon": 33, "other": [54, 55, 56, 57, 121, 166, 174], "otherwis": [54, 55], "our": [132, 167, 172, 173, 174, 176, 177, 178, 179], "outer": [50, 154], "outlier": 9, "outlin": 179, "output": [26, 95, 112, 117, 130, 142, 154, 172, 173, 176, 178, 179], "over": [55, 154], "overfit": [5, 6, 174], "overload": 105, "overrid": [102, 104], "overview": [178, 179], "p": 154, "p0": 154, "p1": 154, "pack": 72, "packag": [25, 84, 85, 119, 154], "pad": 154, "page": [131, 140], "pair": 56, "pairgrid": 200, "pairplot": 192, "pairwis": 200, "palett": 188, "panda": [23, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "paper": 178, "paragraph": 131, "parallel": 33, "paramet": [2, 5, 10, 37, 38, 75, 78, 103, 156, 164, 177], "parent": [102, 104, 132], "pars": 117, "parser": 117, "part": [118, 154, 175, 180, 181, 197, 200], "pass": [48, 49, 50, 54, 56, 75, 139, 142, 174], "patch": 178, "path": [81, 154, 208], "pattern": [40, 48, 49, 154], "per": [142, 168], "percentil": 154, "perceptron": [18, 19, 20, 178], "perform": [173, 179], "period": 40, "person": [140, 143], "persona": [136, 137], "perspect": 172, "pi": 29, "pie": [146, 147], "piec": 172, "pinecon": [133, 142], "pipelin": 36, "place": [154, 160, 161, 162, 163, 165, 166], "placehold": 149, "plot": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 146, 147, 174, 176, 178, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "plu": 40, "point": [58, 64, 94, 95, 102, 154, 197], "polar": 154, "polymorph": 102, "polynomi": 5, "pop": [54, 160], "posit": [69, 78, 95, 154, 159, 160, 163, 170, 178], "power": 154, "practic": 95, "precis": [9, 15, 16, 17, 18, 19, 20], "predict": [12, 13, 14, 17, 18, 19, 20, 171, 172, 173, 174, 176, 177, 178, 179], "prefix": [40, 163], "prepar": [16, 171, 172, 173, 174, 178], "prepara": [11, 15], "prerequisit": 38, "pretrain": [176, 177, 178], "price": 168, "print": [17, 18, 48, 49, 60, 88, 95, 154, 156, 168], "printabl": 56, "privat": 104, "pro": 175, "probabl": 172, "problem": [5, 6, 95, 172], "process": [53, 139], "produc": [56, 154], "product": [29, 33, 147, 154], "profit": 147, "program": [23, 67, 72, 88, 99, 102, 154], "progress": [9, 12, 13, 14, 15, 16, 17, 18, 108], "project": [121, 145], "prompt": [117, 130, 131, 140, 142, 144], "promptless": 144, "propag": 8, "properti": [29, 30, 32, 39, 103, 147], "provid": 150, "pull": 143, "put": [170, 171, 172, 174, 178], "py": [175, 179], "pydant": 136, "python": [23, 25, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 101, 102, 103, 104, 105, 106, 107, 147, 148, 149, 150, 154, 155, 156, 157, 158, 164, 165, 167, 168, 169, 175, 179, 181, 204], "python3": 54, "pytorch": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184], "q": [118, 129], "quantifi": 40, "queri": [118, 132, 133], "question": [40, 118, 133, 147], "quickli": [7, 110, 206], "quiz": 151, "r": [40, 154], "rais": [72, 163], "rand": 150, "randint": 150, "randn": 150, "random": [8, 81, 82, 150, 153, 154, 170, 173, 174], "randomli": 154, "rang": [48, 147, 154, 160, 165, 166, 170], "rank": [129, 154], "raw": [53, 172], "re": [40, 129, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "read": [69, 147, 154, 167], "readi": [133, 172], "real": [136, 137, 146, 154], "recal": 9, "recommend": 154, "record": 154, "recreat": 172, "recurs": 79, "red": 172, "reduc": [80, 129, 131], "refer": [2, 4, 5, 6, 8], "refin": 129, "reg": 189, "regardless": 154, "regex": 40, "regplot": 189, "regress": [5, 6, 11, 12, 13, 14, 15, 16, 17, 18, 191], "regular": [5, 6, 154], "reinforc": 1, "relat": [53, 96], "relationship": 200, "reload": 81, "rememb": [41, 58, 94, 102], "remov": [54, 56, 57, 70, 149, 163], "renam": [70, 81, 156, 163], "reorgan": 153, "repeat": [140, 154], "replac": 154, "repli": 128, "replic": [53, 172, 174, 178], "report": 10, "repres": [36, 60, 64, 154], "represent": [56, 131, 154], "requir": [157, 179, 207], "resampl": 154, "research": [143, 178], "reset": [161, 162, 166], "reset_index": 166, "reshap": [153, 170], "residplot": 191, "resolut": 104, "resourc": [23, 148, 155, 169, 172, 173, 174, 175, 177, 179, 184, 204], "respons": 118, "result": [11, 17, 18, 136, 154, 173, 174, 177, 179], "retriev": [117, 132], "return": [37, 54, 55, 56, 75], "revers": [48, 49, 54, 154], "rins": 140, "rmdir": 70, "role": [109, 113], "round": 154, "row": [154, 157, 158, 159, 162, 164, 168], "rsourc": 178, "rugplot": 192, "rule": [77, 89, 91], "run": [88, 142, 170, 177, 179, 180], "salari": 137, "sale": 147, "same": [54, 55, 154, 178], "sampl": [22, 109, 111, 113, 114, 154, 205], "save": [69, 147, 167, 171, 173, 175, 178, 179, 180, 181], "scalar": [32, 33, 154, 170], "scale": 5, "scatter": [147, 190], "scatterplot": 200, "schema": [117, 118], "scienc": 208, "scope": 97, "script": [85, 154, 175, 179, 180, 181, 183], "seaborn": [185, 186, 187, 188, 189, 193, 194, 195, 196, 204], "search": [40, 81, 133], "second": [60, 154], "section": [22, 111, 114, 205], "see": [91, 147, 172], "seed": [170, 177], "segment": 154, "select": [9, 154, 156, 159, 170], "selector": 117, "self": [103, 107, 132, 178], "semant": 133, "semicolon": 91, "sentenc": 131, "separ": 98, "seq": [55, 56], "sequenc": [40, 53, 98], "sequenti": [117, 188], "seri": [28, 156, 164, 165, 177, 199], "serp": 126, "server": 10, "servic": [136, 137], "set": [6, 8, 12, 17, 18, 19, 20, 48, 56, 57, 93, 142, 154, 159, 165, 171, 174, 176, 177, 178], "set_axi": 163, "set_index": 165, "setdefault": 56, "setter": 39, "setup": [172, 173, 176, 177, 178, 179], "shallow": [54, 56], "shape": [154, 170, 172, 173, 174, 178], "share": [77, 154], "shift": 154, "short": [44, 45, 118, 142], "shortcut": [44, 45], "should": [54, 55, 154, 173, 174, 176, 177], "show": 147, "sigma": 30, "sign": [95, 154], "signific": 170, "silicon": 170, "similar": [56, 99, 133], "simpl": [117, 118, 130, 139], "singl": [75, 85, 90, 104, 157, 160, 163, 174, 178], "sixth": 154, "size": [154, 178, 179], "sleep": [66, 67], "slice": [53, 54, 55, 149], "slide": 154, "small": 154, "smaller": 133, "soap": 147, "solut": [5, 6], "some": 192, "sort": [54, 55, 56, 149, 154, 156, 167, 168], "sourc": 135, "space": [163, 179], "span": [40, 45, 65], "special": [40, 92, 96, 105], "specif": [25, 54, 55, 56, 72, 159, 178], "specifi": [40, 54, 95, 139], "speed": [173, 179], "split": [12, 14, 17, 18, 19, 20, 40, 171, 172, 178], "splitter": 117, "spread": 72, "squar": 40, "squeez": 170, "stack": [147, 170], "stai": 107, "star": 40, "start": [25, 40, 166], "stat": 179, "state_dict": 171, "statement": [43, 44, 45, 46, 47, 48, 49, 50, 58, 72, 75, 81, 90], "statist": [81, 149, 153, 156, 167], "step": [99, 142, 173], "still": 130, "store": [179, 181], "str": 56, "straight": 172, "stream": [36, 130], "strftime": [60, 61, 66], "string": [25, 40, 48, 49, 53, 54, 56, 58, 60, 61, 62, 81, 85, 92, 93, 95, 117], "strip": 194, "strptime": [60, 62, 66], "struct_tim": 66, "structur": [98, 117, 136, 137, 142, 154, 179], "stuff": 129, "style": [53, 147], "sub": 40, "subclass": 154, "subn": 40, "subpart": 154, "subplot": 147, "subsequ": 154, "subset": [14, 149, 154, 179], "subtract": [32, 33, 154], "suffix": 163, "suit": 176, "sum": [154, 170], "summar": [117, 118, 129, 131, 143], "summari": [40, 53, 54, 55, 56, 57, 118, 151, 156, 176, 178], "summarywrit": 177, "summat": 30, "super": 104, "supervis": 1, "support": [53, 138], "suppress": 160, "swap": 154, "swarm": [193, 194], "sy": 81, "symmetr": 57, "syntax": [44, 45, 46, 47, 48, 49, 58, 71], "system": 1, "t": 40, "tabl": [119, 178], "tabular": 118, "tail": 159, "takeawai": [174, 176, 177, 178, 179], "techniqu": 139, "tell": 154, "templat": [117, 130, 131, 140], "tensor": [170, 172], "tensorboard": 177, "terminologi": 178, "test": [10, 12, 14, 17, 18, 19, 20, 54, 55, 56, 57, 156, 171, 172, 173, 174, 176, 179], "test_step": [174, 175, 180, 181], "text": [95, 117, 118, 131, 132, 136, 137, 142], "than": [57, 154], "thei": 154, "them": [117, 154, 175, 179, 180, 181], "thi": [0, 54, 56, 139, 147, 170, 180, 181], "thing": [41, 126, 172, 175], "those": 133, "threshold": 9, "through": [35, 53, 54, 55, 56, 57, 139, 140, 142, 173, 174], "throw": [54, 55], "tile": 154, "time": [23, 40, 54, 60, 61, 63, 64, 65, 66, 67, 68, 151, 154, 173, 179, 199], "timedelata": 64, "timedelta": 60, "timestamp": [60, 61, 65, 142], "timezon": [60, 64], "tinyvgg": [174, 180, 181], "tip": [197, 200], "titan": 197, "titl": [22, 111, 114, 142, 205], "to_dict": 164, "todai": [60, 63, 154], "togeth": [171, 172, 174, 178], "token": 178, "tomorrow": 154, "tone": 139, "tool": [116, 117, 126, 207], "toolkit": 117, "toothpast": 147, "top": [133, 159, 194], "topic": [23, 42, 90, 121, 142, 208], "torch": [171, 178], "torchinfo": [174, 176], "torchvis": [174, 176, 178], "total": [56, 147, 154, 168], "toward": 175, "toyota": 168, "track": 177, "tradeoff": [173, 179], "trail": 163, "train": [6, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181], "train_step": [174, 175, 180, 181], "transcript": 144, "transfer": [43, 176], "transform": [174, 176, 177, 178, 179], "transpos": 32, "triangl": 154, "tricki": 57, "triplet": 154, "true": [54, 56, 154], "try": [72, 174], "tupl": [48, 54, 55, 56, 72, 93], "turn": [142, 172, 174, 178, 179], "tutori": [25, 138], "tweet": 139, "twitter": [128, 139, 143], "two": [53, 60, 64, 75, 154, 165, 168, 175], "txt": [69, 179], "type": [1, 23, 52, 54, 55, 56, 59, 69, 75, 92, 93, 94, 95, 103, 104, 150, 154, 157, 158, 179], "typeerror": [55, 71], "typic": 1, "u": [91, 192], "ubyt": 154, "under": 154, "underfit": 174, "underscor": 40, "understand": 118, "unequ": 154, "unicod": 92, "union": 57, "uniqu": 154, "unit": [8, 33], "univari": 14, "univers": 152, "unknown": 131, "unpack": [72, 98], "unsqueez": 170, "unsupervis": 1, "untidi": 202, "up": [81, 132, 133, 140, 142, 174, 176, 177, 178], "upcom": 25, "updat": [56, 168, 177], "upload": 179, "us": [2, 9, 25, 36, 37, 39, 40, 48, 49, 52, 54, 55, 60, 61, 64, 72, 77, 80, 81, 85, 91, 95, 102, 107, 117, 118, 119, 127, 136, 137, 142, 143, 147, 149, 154, 157, 158, 159, 160, 163, 164, 165, 168, 170, 171, 173, 174, 176, 177, 178, 179], "user": [73, 86, 95, 136, 137, 139, 157], "util": 175, "v": [6, 40, 58, 85, 99, 157, 160, 175, 179, 187], "valid": 91, "valu": [37, 54, 55, 56, 75, 91, 95, 102, 154, 157, 159, 162, 164, 199], "valueerror": [62, 71], "vanilla": [118, 138], "variabl": [5, 37, 56, 76, 77, 78, 91, 97, 98, 102, 157, 194], "variou": 95, "vector": [8, 33, 131, 154, 170], "vectorstor": 117, "versa": 65, "version": [149, 154], "vertic": [154, 192], "vice": 65, "video": 144, "view": [156, 177], "violin": [194, 196], "violinplot": 197, "virtual": 25, "vision": 173, "visual": [9, 173, 174, 178, 179, 192], "vit": [178, 179], "vstack": 153, "w": [40, 154], "wai": [40, 54, 177, 179], "want": [58, 175], "warn": 154, "we": [25, 37, 55, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181], "websit": [0, 143], "welcom": 209, "what": [1, 21, 32, 33, 48, 49, 53, 54, 55, 56, 57, 60, 75, 77, 79, 80, 81, 83, 84, 86, 97, 99, 107, 109, 113, 117, 118, 153, 154, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 192, 202, 203], "when": [37, 49, 52, 54, 56, 151, 154], "where": [40, 157, 162, 173, 175, 176, 178, 179], "which": [54, 154, 176], "while": [48, 49, 50, 95, 156, 163], "whisker": 146, "whitespac": 40, "who": 170, "whose": 154, "why": [0, 1, 23, 48, 49, 55, 104, 107, 117, 118, 149, 170, 175, 176, 177, 178, 179], "wich": 154, "wide": 202, "widget": 188, "width": 95, "wild": [175, 181], "window": 154, "without": [39, 75, 154, 164, 166, 174], "wolfram": 126, "word": 40, "work": [35, 53, 61, 62, 108, 117, 130, 137, 167, 175, 207], "workflow": [1, 171, 175, 178], "world": [10, 72, 88, 136, 137, 146], "would": [56, 139, 175], "wrap": 81, "write": [69, 72, 89, 140, 154], "writer": 177, "x": [10, 154], "xi": 154, "xlsx": 69, "xml": 69, "y": [10, 154], "yaml": [7, 110, 206], "year": [60, 147], "yesterdai": 154, "yj": 154, "you": [58, 126, 139, 142, 170, 175, 176, 177, 178], "your": [25, 117, 129, 133, 139, 140, 142, 147], "youtub": 143, "z": [40, 154], "z0": 40, "za": 40, "zapier": 127, "zero": [40, 154, 170], "zip": 72}})