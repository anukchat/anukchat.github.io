Search.setIndex({"alltitles": {"1 distplot()": [[145, "distplot"]], "1. Arithmatic Operators": [[87, "arithmatic-operators"]], "1. Bar Plot": [[150, "bar-plot"]], "1. Basic Operators for concatenation of two or more strings": [[44, "basic-operators-for-concatenation-of-two-or-more-strings"]], "1. Changing a Tuple": [[46, "changing-a-tuple"]], "1. Dictionary Membership Test": [[47, "dictionary-membership-test"]], "1. Docstrings for Python Modules": [[76, "docstrings-for-python-modules"]], "1. Easy to Implement": [[27, "easy-to-implement"]], "1. Identity operators": [[87, "identity-operators"]], "1. Implicit Type Conversion": [[85, "implicit-type-conversion"]], "1. Import the numpy package under the name np and print the numpy version and the configuration (\u2605\u2606\u2606)": [[122, "import-the-numpy-package-under-the-name-np-and-print-the-numpy-version-and-the-configuration"]], "1. Indexing": [[46, "indexing"]], "1. List Membership Test": [[45, "list-membership-test"]], "1. Numeric Literals": [[83, "numeric-literals"]], "1. Opening Files in Python": [[60, "opening-files-in-python"]], "1. Python Keywords": [[80, "python-keywords"]], "1. Python Numbers": [[84, "python-numbers"]], "1. Python Output Using print() function": [[86, "python-output-using-print-function"]], "1. Python Statement": [[81, "python-statement"]], "1. Python Syntax Errors": [[62, "python-syntax-errors"]], "1. Python Variables": [[82, "python-variables"]], "1. Python break statement": [[41, "python-break-statement"]], "1. Set Membership Test": [[48, "set-membership-test"]], "1. Single lined comment:": [[81, "single-lined-comment"]], "1. Strip Plot": [[147, "strip-plot"]], "1. Tuple Membership Test": [[46, "tuple-membership-test"]], "1. [] - Square brackets": [[31, "square-brackets"]], "1. break Statement in Nested Loop": [[41, "break-statement-in-nested-loop"]], "1. continue Statement in Nested Loop": [[41, "continue-statement-in-nested-loop"]], "1. match.group()": [[31, "match-group"]], "1. re.findall()": [[31, "re-findall"]], "10. () - Group": [[31, "group"]], "10. Find indices of non-zero elements from [3,7,0,0,9,0] (\u2605\u2606\u2606)": [[122, "find-indices-of-non-zero-elements-from-3-7-0-0-9-0"]], "100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (\u2605\u2605\u2605)": [[122, "compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1d-array-x-i-e-resample-the-elements-of-an-array-with-replacement-n-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means"]], "11. Create a 4x4 identity matrix (\u2605\u2606\u2606)": [[122, "create-a-4x4-identity-matrix"]], "11. \\ - Backslash": [[31, "backslash"]], "12. Create a 2x2x2 array with random values (\u2605\u2606\u2606)": [[122, "create-a-2x2x2-array-with-random-values"]], "13. Create a 9x9 array with random values and find the minimum and maximum values (\u2605\u2606\u2606)": [[122, "create-a-9x9-array-with-random-values-and-find-the-minimum-and-maximum-values"]], "15. Create a 2d array with 1 on the border and 0 inside (\u2605\u2606\u2606)": [[122, "create-a-2d-array-with-1-on-the-border-and-0-inside"]], "16. How to add a border (filled with 0\u2019s) around an existing array? (\u2605\u2606\u2606)": [[122, "how-to-add-a-border-filled-with-0s-around-an-existing-array"]], "17. What is the result of the following expression? (\u2605\u2606\u2606)": [[122, "what-is-the-result-of-the-following-expression"]], "18. Create a 6x6 matrix with values 1,2,3,4 just below the diagonal (\u2605\u2606\u2606)": [[122, "create-a-6x6-matrix-with-values-1-2-3-4-just-below-the-diagonal"]], "19. Create a 6x6 matrix and fill it with a checkerboard pattern (\u2605\u2606\u2606)": [[122, "create-a-6x6-matrix-and-fill-it-with-a-checkerboard-pattern"]], "2 jointplot()": [[145, "jointplot"]], "2. . - Period": [[31, "period"]], "2. Closing Files in Python": [[60, "closing-files-in-python"]], "2. Comparison/Relational operators": [[87, "comparison-relational-operators"]], "2. Constants": [[82, "constants"]], "2. Convert a list of numeric value into a one-dimensional NumPy array (\u2605\u2606\u2606)": [[122, "convert-a-list-of-numeric-value-into-a-one-dimensional-numpy-array"]], "2. Deleting a Tuple": [[46, "deleting-a-tuple"]], "2. Docstrings for Python Functions": [[76, "docstrings-for-python-functions"]], "2. Explicit Type Conversion": [[85, "explicit-type-conversion"]], "2. Inline comments": [[81, "inline-comments"]], "2. Iterating Through a Dictionary": [[47, "iterating-through-a-dictionary"]], "2. Iterating Through a List": [[45, "iterating-through-a-list"]], "2. Iterating Through a Set": [[48, "iterating-through-a-set"]], "2. Iterating Through a Tuple": [[46, "iterating-through-a-tuple"]], "2. Membership operators": [[87, "membership-operators"]], "2. Memory Efficient": [[27, "memory-efficient"]], "2. Negative Indexing": [[46, "negative-indexing"]], "2. Point Plot": [[150, "point-plot"]], "2. Python Identifiers": [[80, "python-identifiers"]], "2. Python Indentation": [[81, "python-indentation"]], "2. Python Input Using input() function": [[86, "python-input-using-input-function"]], "2. Python List []": [[84, "python-list"]], "2. Python Logical Errors (Exceptions)": [[62, "python-logical-errors-exceptions"]], "2. Python String Membership Operators": [[44, "python-string-membership-operators"]], "2. Python continue statement": [[41, "python-continue-statement"]], "2. String literals (unicode character strings)": [[83, "string-literals-unicode-character-strings"]], "2. break Statement in Outer Loop": [[41, "break-statement-in-outer-loop"]], "2. continue Statement in Outer Loop": [[41, "continue-statement-in-outer-loop"]], "2. match.start(), match.end() and match.span()": [[31, "match-start-match-end-and-match-span"]], "2. re.split()": [[31, "re-split"]], "20. Consider a (8,9,10) shape array, what is the index (x,y,z) of the 100th element? (\u2605\u2606\u2606)": [[122, "consider-a-8-9-10-shape-array-what-is-the-index-x-y-z-of-the-100th-element"]], "21. Create a checkerboard 8x8 matrix using the tile function (\u2605\u2606\u2606)": [[122, "create-a-checkerboard-8x8-matrix-using-the-tile-function"]], "22. Normalize a 6x6 random matrix (\u2605\u2606\u2606)": [[122, "normalize-a-6x6-random-matrix"]], "23. find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements. (\u2605\u2606\u2606)": [[122, "find-the-number-of-elements-of-an-array-length-of-one-array-element-in-bytes-and-total-bytes-consumed-by-the-elements"]], "24. Multiply a 6x3 matrix by a 3x4 matrix (real matrix product) (\u2605\u2606\u2606)": [[122, "multiply-a-6x3-matrix-by-a-3x4-matrix-real-matrix-product"]], "25. Given a 1D array, negate all elements which are between 3 and 8, in place. (\u2605\u2606\u2606)": [[122, "given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place"]], "26. What is the output of the following script? (\u2605\u2606\u2606)": [[122, "what-is-the-output-of-the-following-script"]], "27. Write a Python program compare two arrays using numpy (\u2605\u2606\u2606)": [[122, "write-a-python-program-compare-two-arrays-using-numpy"]], "28. What are the result of the following expressions? (\u2605\u2606\u2606)": [[122, "what-are-the-result-of-the-following-expressions"]], "29. How to round away from zero a float array ? (\u2605\u2606\u2606)": [[122, "how-to-round-away-from-zero-a-float-array"]], "3 pairplot()": [[145, "pairplot"]], "3. Boolean literals": [[83, "boolean-literals"]], "3. Count Plot": [[150, "count-plot"]], "3. Create a null vector of size 9 (\u2605\u2606\u2606)": [[122, "create-a-null-vector-of-size-9"]], "3. Docstrings for Python Classes": [[76, "docstrings-for-python-classes"]], "3. Logical/Boolean operators": [[87, "logical-boolean-operators"]], "3. Multi lined comment:": [[81, "multi-lined-comment"]], "3. Other List Operations in Python": [[45, "id1"]], "3. Python Comments": [[81, "python-comments"]], "3. Python Import function": [[86, "python-import-function"]], "3. Python NameError": [[62, "python-nameerror"]], "3. Python Relational Operators": [[44, "python-relational-operators"]], "3. Python Tuple ()": [[84, "python-tuple"]], "3. Python pass statement": [[41, "python-pass-statement"]], "3. Represent Infinite Stream": [[27, "represent-infinite-stream"]], "3. Slicing": [[46, "slicing"]], "3. Writing to Files in Python": [[60, "writing-to-files-in-python"]], "3. ^ - Caret": [[31, "caret"]], "3. match.re and match.string": [[31, "match-re-and-match-string"]], "3. re.sub()": [[31, "re-sub"]], "30. How to find common values between two arrays? (\u2605\u2606\u2606)": [[122, "how-to-find-common-values-between-two-arrays"]], "31. How to ignore all numpy warnings (not recommended)? (\u2605\u2606\u2606)": [[122, "how-to-ignore-all-numpy-warnings-not-recommended"]], "32. Is the following expressions true? (\u2605\u2606\u2606)": [[122, "is-the-following-expressions-true"]], "33. How to get the dates of yesterday, today and tomorrow? (\u2605\u2606\u2606)": [[122, "how-to-get-the-dates-of-yesterday-today-and-tomorrow"]], "34. How to get all the dates corresponding to the month of January 2016? (\u2605\u2605\u2606)": [[122, "how-to-get-all-the-dates-corresponding-to-the-month-of-january-2016"]], "35. How to compute ((A+B)*(-A/2)) in place (without copy)? (\u2605\u2605\u2606)": [[122, "how-to-compute-a-b-a-2-in-place-without-copy"]], "36. Extract the integer part of a random array of positive numbers using 4 different methods (\u2605\u2605\u2606)": [[122, "extract-the-integer-part-of-a-random-array-of-positive-numbers-using-4-different-methods"]], "37. Create a 3x3 matrix with row values ranging from 0 to 2 (\u2605\u2605\u2606)": [[122, "create-a-3x3-matrix-with-row-values-ranging-from-0-to-2"]], "38. Consider a generator function that generates 9 integers and use it to build an array (\u2605\u2606\u2606)": [[122, "consider-a-generator-function-that-generates-9-integers-and-use-it-to-build-an-array"]], "39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (\u2605\u2605\u2606)": [[122, "create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded"]], "4 rugplot()": [[145, "rugplot"]], "4. $ - Dollar": [[31, "dollar"]], "4. Bitwise operators": [[87, "bitwise-operators"]], "4. Docstrings for Python Scripts": [[76, "docstrings-for-python-scripts"]], "4. Docstrings in Python": [[81, "docstrings-in-python"]], "4. How to find the memory size of any array (\u2605\u2606\u2606)": [[122, "how-to-find-the-memory-size-of-any-array"]], "4. Pipelining Generators": [[27, "pipelining-generators"]], "4. Python IndexError": [[62, "python-indexerror"]], "4. Python Strings": [[84, "python-strings"]], "4. Reading Files in Python": [[60, "reading-files-in-python"]], "4. re.subn()": [[31, "re-subn"]], "40. Create a random vector of size 10 and sort it (\u2605\u2605\u2606)": [[122, "create-a-random-vector-of-size-10-and-sort-it"]], "41. How to sum a small array faster than np.sum? (\u2605\u2605\u2606)": [[122, "how-to-sum-a-small-array-faster-than-np-sum"]], "42. Consider two random array A and B, check if they are equal (\u2605\u2605\u2606)": [[122, "consider-two-random-array-a-and-b-check-if-they-are-equal"]], "43. Make an array immutable (read-only) (\u2605\u2605\u2606)": [[122, "make-an-array-immutable-read-only"]], "44. Consider a random 5x2 matrix representing cartesian coordinates, convert them to polar coordinates (\u2605\u2605\u2606)": [[122, "consider-a-random-5x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates"]], "45. Create random vector of size 5 and replace the maximum value by 0 (\u2605\u2605\u2606)": [[122, "create-random-vector-of-size-5-and-replace-the-maximum-value-by-0"]], "46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (\u2605\u2605\u2606)": [[122, "create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area"]], "47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj)) (\u2605\u2605\u2606)": [[122, "given-two-arrays-x-and-y-construct-the-cauchy-matrix-c-cij-1-xi-yj"]], "48. Print the minimum and maximum representable value for each numpy scalar type (\u2605\u2605\u2606)": [[122, "print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type"]], "49. How to print all the values of an array? (\u2605\u2605\u2606)": [[122, "how-to-print-all-the-values-of-an-array"]], "5 kdeplot()": [[145, "kdeplot"]], "5. * - Star": [[31, "star"]], "5. Assignment operators": [[87, "assignment-operators"]], "5. Docstrings for Python Packages": [[76, "docstrings-for-python-packages"]], "5. How to get the documentation of the numpy add function from the command line? (\u2605\u2606\u2606)": [[122, "how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line"]], "5. Python ModuleNotFoundError": [[62, "python-modulenotfounderror"]], "5. Python Set {}": [[84, "python-set"]], "5. re.search()": [[31, "re-search"]], "50. How to find the closest value (to a given scalar) in a vector? (\u2605\u2605\u2606)": [[122, "how-to-find-the-closest-value-to-a-given-scalar-in-a-vector"]], "51. Create a structured array representing a position (x,y) and a color (r,g,b) (\u2605\u2605\u2606)": [[122, "create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b"]], "52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (\u2605\u2605\u2606)": [[122, "consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances"]], "53. How to convert a float (32 bits) array into an integer (32 bits) in place?": [[122, "how-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"]], "54. How to read the following file? (\u2605\u2605\u2606)": [[122, "how-to-read-the-following-file"]], "55. What is the equivalent of enumerate for numpy arrays? (\u2605\u2605\u2606)": [[122, "what-is-the-equivalent-of-enumerate-for-numpy-arrays"]], "56. Generate a generic 2D Gaussian-like array (\u2605\u2605\u2606)": [[122, "generate-a-generic-2d-gaussian-like-array"]], "57. How to randomly place e elements in a 2D array? (\u2605\u2605\u2606)": [[122, "how-to-randomly-place-e-elements-in-a-2d-array"]], "58. Subtract the mean of each row of a matrix (\u2605\u2605\u2606)": [[122, "subtract-the-mean-of-each-row-of-a-matrix"]], "59. How to sort an array by the nth column? (\u2605\u2605\u2606)": [[122, "how-to-sort-an-array-by-the-nth-column"]], "6# 6# 14. Create a random vector of size 20 and find the mean value (\u2605\u2606\u2606)": [[122, "create-a-random-vector-of-size-20-and-find-the-mean-value"]], "6. + - Plus": [[31, "plus"]], "6. Create a null vector of size 12 but the sixth value which is 1 (\u2605\u2606\u2606)": [[122, "create-a-null-vector-of-size-12-but-the-sixth-value-which-is-1"]], "6. Python AttributeError": [[62, "python-attributeerror"]], "6. Python Dictionary {}": [[84, "python-dictionary"]], "6. Special operators": [[87, "special-operators"]], "60. How to tell if a given 2D array has null columns? (\u2605\u2605\u2606)": [[122, "how-to-tell-if-a-given-2d-array-has-null-columns"]], "61. Find the nearest value from a given value in an array (\u2605\u2605\u2606)": [[122, "find-the-nearest-value-from-a-given-value-in-an-array"]], "62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (\u2605\u2605\u2606)": [[122, "considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator"]], "63. Create an array class that has a name attribute (\u2605\u2605\u2606)": [[122, "create-an-array-class-that-has-a-name-attribute"]], "64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (\u2605\u2605\u2605)": [[122, "consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices"]], "65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (\u2605\u2605\u2605)": [[122, "how-to-accumulate-elements-of-a-vector-x-to-an-array-f-based-on-an-index-list-i"]], "66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (\u2605\u2605\u2606)": [[122, "considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors"]], "67. Considering a four dimensions array, how to get sum over the last two axis at once? (\u2605\u2605\u2605)": [[122, "considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once"]], "68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (\u2605\u2605\u2605)": [[122, "considering-a-one-dimensional-vector-d-how-to-compute-means-of-subsets-of-d-using-a-vector-s-of-same-size-describing-subset-indices"]], "69. How to get the diagonal of a dot product? (\u2605\u2605\u2605)": [[122, "how-to-get-the-diagonal-of-a-dot-product"]], "7. ? - Question Mark": [[31, "question-mark"]], "7. Create a vector with values ranging from 20 to 59 (\u2605\u2606\u2606)": [[122, "create-a-vector-with-values-ranging-from-20-to-59"]], "7. Python KeyError": [[62, "python-keyerror"]], "70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (\u2605\u2605\u2605)": [[122, "consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value"]], "71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (\u2605\u2605\u2605)": [[122, "consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5"]], "72. How to swap two rows of an array? (\u2605\u2605\u2605)": [[122, "how-to-swap-two-rows-of-an-array"]], "73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (\u2605\u2605\u2605)": [[122, "consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles"]], "74. Given a sorted array C that corresponds to a bincount, how to produce an array A such that np.bincount(A) == C? (\u2605\u2605\u2605)": [[122, "given-a-sorted-array-c-that-corresponds-to-a-bincount-how-to-produce-an-array-a-such-that-np-bincount-a-c"]], "75. How to compute averages using a sliding window over an array? (\u2605\u2605\u2605)": [[122, "how-to-compute-averages-using-a-sliding-window-over-an-array"]], "76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (\u2605\u2605\u2605)": [[122, "consider-a-one-dimensional-array-z-build-a-two-dimensional-array-whose-first-row-is-z-0-z-1-z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-z-3-z-2-z-1"]], "77. How to negate a boolean, or to change the sign of a float inplace? (\u2605\u2605\u2605)": [[122, "how-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace"]], "78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[122, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-p0-i-p1-i"]], "79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[122, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-set-of-points-p-how-to-compute-distance-from-each-point-j-p-j-to-each-line-i-p0-i-p1-i"]], "8. Python TypeError": [[62, "python-typeerror"]], "8. Reverse a vector (first element becomes last) (\u2605\u2606\u2606)": [[122, "reverse-a-vector-first-element-becomes-last"]], "8. {} - Braces": [[31, "braces"]], "80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (\u2605\u2605\u2605)": [[122, "consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary"]], "81. Consider an array a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], \u2026, [11,12,13,14]]? (\u2605\u2605\u2605)": [[122, "consider-an-array-a-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-b-1-2-3-4-2-3-4-5-3-4-5-6-11-12-13-14"]], "82. Compute a matrix rank (\u2605\u2605\u2605)": [[122, "compute-a-matrix-rank"]], "83. How to find the most frequent value in an array?": [[122, "how-to-find-the-most-frequent-value-in-an-array"]], "84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (\u2605\u2605\u2605)": [[122, "extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix"]], "85. Create a 2D array subclass such that a[i,j] == a[j,i] (\u2605\u2605\u2605)": [[122, "create-a-2d-array-subclass-such-that-a-i-j-a-j-i"]], "86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (\u2605\u2605\u2605)": [[122, "consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-how-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1"]], "87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (\u2605\u2605\u2605)": [[122, "consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4"]], "88. How to implement the Game of Life using numpy arrays? (\u2605\u2605\u2605)": [[122, "how-to-implement-the-game-of-life-using-numpy-arrays"]], "89. How to get the n largest values of an array (\u2605\u2605\u2605)": [[122, "how-to-get-the-n-largest-values-of-an-array"]], "9. Create a 3x3 matrix with values ranging from 12 to 20 (\u2605\u2606\u2606)": [[122, "create-a-3x3-matrix-with-values-ranging-from-12-to-20"]], "9. Python ValueError": [[62, "python-valueerror"]], "9. | - Alternation": [[31, "alternation"]], "90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (\u2605\u2605\u2605)": [[122, "given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item"]], "91. How to create a record array from a regular array? (\u2605\u2605\u2605)": [[122, "how-to-create-a-record-array-from-a-regular-array"]], "92. Consider a large vector A, compute A to the power of 3 using 3 different methods (\u2605\u2605\u2605)": [[122, "consider-a-large-vector-a-compute-a-to-the-power-of-3-using-3-different-methods"]], "93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (\u2605\u2605\u2605)": [[122, "consider-two-arrays-a-and-b-of-shape-8-3-and-2-2-how-to-find-rows-of-a-that-contain-elements-of-each-row-of-b-regardless-of-the-order-of-the-elements-in-b"]], "94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (\u2605\u2605\u2605)": [[122, "considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3"]], "95. Convert a vector of ints into a matrix binary representation (\u2605\u2605\u2605)": [[122, "convert-a-vector-of-ints-into-a-matrix-binary-representation"]], "96. Given a two dimensional array, how to extract unique rows? (\u2605\u2605\u2605)": [[122, "given-a-two-dimensional-array-how-to-extract-unique-rows"]], "97. Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (\u2605\u2605\u2605)": [[122, "considering-2-vectors-a-b-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function"]], "98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (\u2605\u2605\u2605)?": [[122, "considering-a-path-described-by-two-vectors-x-y-how-to-sample-it-using-equidistant-samples"]], "99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (\u2605\u2605\u2605)": [[122, "given-an-integer-n-and-a-2d-array-x-select-from-x-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n"]], "AI/ML Learning Path": [[161, "ai-ml-learning-path"]], "About Python Programming": [[21, "about-python-programming"]], "Accept float input from User": [[86, "accept-float-input-from-user"]], "Accept multiline input from a user": [[86, "accept-multiline-input-from-a-user"]], "Accepting User Inputs (as both integer and string)": [[86, "accepting-user-inputs-as-both-integer-and-string"]], "Accepting User Inputs (only as integer)": [[86, "accepting-user-inputs-only-as-integer"]], "Access Tuple Elements": [[46, "access-tuple-elements"]], "Access elements from a list": [[45, "access-elements-from-a-list"]], "Accessing Attributes with self Parameter": [[94, "accessing-attributes-with-self-parameter"]], "Accessing Elements from Dictionary": [[47, "accessing-elements-from-dictionary"]], "Accessing output string arguments by name": [[86, "accessing-output-string-arguments-by-name"]], "Accessing the index in for loop": [[39, "accessing-the-index-in-for-loop"]], "Add/Change List Elements": [[45, "add-change-list-elements"]], "Adding or Removing Elements": [[117, "adding-or-removing-elements"]], "Additional Regression Plots": [[144, "additional-regression-plots"]], "Advanced Level": [[161, "advanced-level"]], "Advanced string processing": [[44, "advanced-string-processing"]], "Advantage": [[72, "advantage"]], "Advantages of Recursion": [[70, "advantages-of-recursion"]], "Advantages of Tuple over List": [[46, "advantages-of-tuple-over-list"]], "Advantages of user-defined functions": [[77, "advantages-of-user-defined-functions"]], "Aggregate Statistics (Groupby)": [[135, "aggregate-statistics-groupby"]], "Algorithm Evaluation": [[0, "algorithm-evaluation"]], "An example cell": [[5, "an-example-cell"], [101, "an-example-cell"], [159, "an-example-cell"]], "Analyze Gradient Descent Progress": [[10, "analyze-gradient-descent-progress"], [11, "analyze-gradient-descent-progress"], [12, "analyze-gradient-descent-progress"], [13, "analyze-gradient-descent-progress"], [14, "analyze-gradient-descent-progress"], [15, "analyze-gradient-descent-progress"], [16, "analyze-gradient-descent-progress"]], "Anatomy of Box Plot": [[148, "anatomy-of-box-plot"]], "Anatomy of Violin Plot": [[149, "anatomy-of-violin-plot"]], "Anomaly Detection Algorithm": [[0, "anomaly-detection-algorithm"]], "Anomaly Detection Using Gaussian Distribution": [[0, "anomaly-detection-using-gaussian-distribution"], [7, "anomaly-detection-using-gaussian-distribution"]], "Apply condition": [[124, "apply-condition"]], "Argument of an Exception": [[63, "argument-of-an-exception"]], "Array": [[117, "array"]], "Array Attributes and Methods": [[118, "array-attributes-and-methods"]], "Array Manipulation": [[117, "array-manipulation"]], "Array datatypes": [[118, "array-datatypes"]], "Array indexing": [[119, "array-indexing"]], "Array math": [[120, "array-math"]], "Arrays reorganizing": [[121, "arrays-reorganizing"]], "Assigning value to constant in Python": [[82, "assigning-value-to-constant-in-python"]], "Assigning values to Variables in Python": [[82, "assigning-values-to-variables-in-python"]], "Backpropagation": [[6, "backpropagation"]], "Backpropagation Algorithm": [[6, "backpropagation-algorithm"]], "Backward Iteration using the reversed() function": [[39, "backward-iteration-using-the-reversed-function"]], "Bar Chart": [[114, "bar-chart"]], "Bar Plot, Point Plot and Count plot": [[150, "bar-plot-point-plot-and-count-plot"]], "Basic Graph": [[114, "basic-graph"]], "Basic Statistics": [[117, "basic-statistics"]], "Batch Gradient Descent": [[3, "batch-gradient-descent"], [4, "batch-gradient-descent"]], "Be careful when copying arrays!!!": [[119, "be-careful-when-copying-arrays"]], "Beginner": [[1, "beginner"]], "Beginner Level": [[161, "beginner-level"]], "Boolean Masking and Advanced Indexing": [[121, "boolean-masking-and-advanced-indexing"]], "Boolean array indexing": [[119, "boolean-array-indexing"]], "Box and Whiskers Chart": [[114, "box-and-whiskers-chart"]], "Box plot #1": [[114, "box-plot-1"]], "Box plot #2": [[114, "box-plot-2"]], "Breaking appart strings": [[44, "breaking-appart-strings"]], "Broadcasting": [[120, "broadcasting"]], "Broadcasting with array reorganizing": [[121, "broadcasting-with-array-reorganizing"]], "Building Custom Iterators": [[26, "building-custom-iterators"]], "Building color palettes:": [[141, "building-color-palettes"]], "Built-In Class Attributes": [[94, "built-in-class-attributes"]], "Built-in Functions with Set": [[48, "built-in-functions-with-set"]], "Built-in Higher Order Functions": [[29, "built-in-higher-order-functions"]], "Built-in functions to Work with Python": [[44, "built-in-functions-to-work-with-python"]], "Calculate Model Training Precision": [[13, "calculate-model-training-precision"], [14, "calculate-model-training-precision"], [15, "calculate-model-training-precision"], [16, "calculate-model-training-precision"], [17, "calculate-model-training-precision"], [18, "calculate-model-training-precision"]], "Cart ^": [[31, "cart"]], "Catching Exceptions in Python": [[63, "catching-exceptions-in-python"]], "Catching Specific Exceptions in Python": [[63, "catching-specific-exceptions-in-python"]], "Catching exceptions with continue statement": [[41, "catching-exceptions-with-continue-statement"]], "Categorical Data Background": [[146, "categorical-data-background"]], "Chaining Decorators in Python": [[29, "chaining-decorators-in-python"]], "Changing Dictionary to JSON": [[60, "changing-dictionary-to-json"]], "Changing Directory chdir() -": [[61, "changing-directory-chdir"]], "Changing JSON to Dictionary": [[60, "changing-json-to-dictionary"]], "Changing and Adding Dictionary elements": [[47, "changing-and-adding-dictionary-elements"]], "Check python datatypes": [[23, "check-python-datatypes"]], "Class": [[93, "class"]], "Class Constructor": [[93, "class-constructor"]], "Class Without Getters and Setters": [[30, "class-without-getters-and-setters"]], "Code blocks and outputs": [[24, "code-blocks-and-outputs"], [99, "code-blocks-and-outputs"], [103, "code-blocks-and-outputs"]], "Combining Arrays": [[117, "combining-arrays"]], "Common Python String Methods": [[44, "common-python-string-methods"]], "Compare DataFrame drop() vs. pop() vs. del": [[128, "compare-dataframe-drop-vs-pop-vs-del"]], "Comparision operators in Python": [[72, "comparision-operators-in-python"]], "Comparison": [[117, "comparison"]], "Concepts": [[162, "concepts"]], "Concepts at glance": [[1, "concepts-at-glance"]], "Conclusion": [[108, "conclusion"]], "Conditional Changes": [[135, "conditional-changes"]], "Conditional statements": [[34, "conditional-statements"]], "Conditionals in List Comprehension": [[49, "conditionals-in-list-comprehension"]], "Constants  -": [[72, "constants"]], "Constructors in Python": [[94, "constructors-in-python"]], "Content with notebooks": [[24, "content-with-notebooks"], [99, "content-with-notebooks"], [103, "content-with-notebooks"]], "Control Flow Statements": [[34, "control-flow-statements"]], "Control Statements in Python": [[41, "control-statements-in-python"]], "Control Statements in Python FAQs": [[41, "control-statements-in-python-faqs"]], "Controlling Aesthetics of Seaborn Plots": [[139, "controlling-aesthetics-of-seaborn-plots"]], "Convert Pandas DataFrame to Python dictionary": [[132, "convert-pandas-dataframe-to-python-dictionary"]], "Copying/Sorting": [[117, "copying-sorting"]], "Core engineering": [[162, "core-engineering"]], "Cost Function": [[3, "cost-function"], [4, "cost-function"], [6, "cost-function"]], "Cost Function (Distortion)": [[2, "cost-function-distortion"]], "Course Structure": [[162, "course-structure"]], "Create DataFrame from Hierarchical lists as columns": [[126, "create-dataframe-from-hierarchical-lists-as-columns"]], "Create DataFrame from dict using constructor": [[125, "create-dataframe-from-dict-using-constructor"]], "Create DataFrame from hierarchical lists as rows": [[126, "create-dataframe-from-hierarchical-lists-as-rows"]], "Create DataFrame from list by changing data type": [[126, "create-dataframe-from-list-by-changing-data-type"]], "Create DataFrame from list of dict": [[125, "create-dataframe-from-list-of-dict"]], "Create DataFrame from list using constructor": [[126, "create-dataframe-from-list-using-constructor"]], "Create DataFrame from list with a customized column name": [[126, "create-dataframe-from-list-with-a-customized-column-name"]], "Create DataFrame from list with a customized index": [[126, "create-dataframe-from-list-with-a-customized-index"]], "Create DataFrame from multiple lists": [[126, "create-dataframe-from-multiple-lists"]], "Create Generators in Python": [[27, "create-generators-in-python"]], "Create Pandas DataFrame from Python Dictionary": [[125, "create-pandas-dataframe-from-python-dictionary"]], "Create Pandas DataFrame from Python List": [[126, "create-pandas-dataframe-from-python-list"]], "Create Test Objects": [[124, "create-test-objects"]], "Create a NumPy Array": [[118, "create-a-numpy-array"]], "Create a notebook with MyST Markdown": [[5, "create-a-notebook-with-myst-markdown"], [101, "create-a-notebook-with-myst-markdown"], [159, "create-a-notebook-with-myst-markdown"]], "Creating Custom Exceptions": [[64, "creating-custom-exceptions"]], "Creating Instance Objects": [[94, "creating-instance-objects"]], "Creating Python Dictionary": [[47, "creating-python-dictionary"]], "Creating Python List": [[45, "creating-python-list"]], "Creating Python Sets": [[48, "creating-python-sets"]], "Creating Python Tuple": [[46, "creating-python-tuple"]], "Creating a Lambda Function": [[49, "creating-a-lambda-function"]], "Creating a module in Python": [[72, "creating-a-module-in-python"]], "Creating an Object in Python": [[94, "creating-an-object-in-python"]], "Creating an empty set is a bit tricky.": [[48, "creating-an-empty-set-is-a-bit-tricky"]], "Customizing Exception Classes": [[64, "customizing-exception-classes"]], "Data": [[145, "data"]], "Data Cleaning": [[124, "data-cleaning"]], "Data Hiding": [[94, "data-hiding"]], "Data structures and algorithms": [[89, "data-structures-and-algorithms"]], "DataFrame Attributes": [[124, "dataframe-attributes"]], "DataFrame GroupBy": [[124, "dataframe-groupby"]], "DataFrame Iteration": [[124, "dataframe-iteration"]], "DataFrame Join": [[124, "dataframe-join"]], "DataFrame Options": [[124, "dataframe-options"]], "DataFrame Sorting": [[124, "dataframe-sorting"]], "DataFrame constructor": [[124, "dataframe-constructor"]], "DataFrame constructor vs from_dict()": [[125, "dataframe-constructor-vs-from-dict"]], "DataFrame conversion": [[124, "dataframe-conversion"]], "DataFrame creation": [[124, "dataframe-creation"]], "DataFrame filter columns": [[124, "dataframe-filter-columns"]], "DataFrame from dict by changing the column data type": [[125, "dataframe-from-dict-by-changing-the-column-data-type"]], "DataFrame from dict nested dict": [[125, "dataframe-from-dict-nested-dict"]], "DataFrame from dict where values are variable-length lists": [[125, "dataframe-from-dict-where-values-are-variable-length-lists"]], "DataFrame from dict with a single value": [[125, "dataframe-from-dict-with-a-single-value"]], "DataFrame from dict with dict keys as a row": [[125, "dataframe-from-dict-with-dict-keys-as-a-row"]], "DataFrame from dict with key and value as a column": [[125, "dataframe-from-dict-with-key-and-value-as-a-column"]], "DataFrame from dict with required columns only": [[125, "dataframe-from-dict-with-required-columns-only"]], "DataFrame from dict with user-defined indexes": [[125, "dataframe-from-dict-with-user-defined-indexes"]], "DataFrame metadata": [[124, "dataframe-metadata"]], "DataFrame modification": [[124, "dataframe-modification"]], "DataFrame rename columns": [[124, "dataframe-rename-columns"]], "DataFrame selection": [[124, "dataframe-selection"]], "DataFrame to dict by row": [[132, "dataframe-to-dict-by-row"]], "DataFrame to dict by row index": [[132, "dataframe-to-dict-by-row-index"]], "DataFrame to dict using into parameter": [[132, "dataframe-to-dict-using-into-parameter"]], "DataFrame to dict with a list of values": [[132, "dataframe-to-dict-with-a-list-of-values"]], "DataFrame to dict with one column as the key": [[132, "dataframe-to-dict-with-one-column-as-the-key"]], "DataFrame to dict with pandas series of values": [[132, "dataframe-to-dict-with-pandas-series-of-values"]], "DataFrame to dict without header and index": [[132, "dataframe-to-dict-without-header-and-index"]], "Dataframe from CSV": [[124, "dataframe-from-csv"]], "Dataframe from dict": [[124, "dataframe-from-dict"]], "Datasets": [[8, "datasets"]], "Decorating Functions with Parameters": [[29, "decorating-functions-with-parameters"]], "Decorators in Python": [[29, "decorators-in-python"]], "Defining a Class in Python": [[94, "defining-a-class-in-python"]], "Defining a Closure Function": [[28, "defining-a-closure-function"]], "Defining a Function": [[66, "defining-a-function"]], "Defining a function with parameters": [[66, "defining-a-function-with-parameters"]], "Defining a function with parameters and return value": [[66, "defining-a-function-with-parameters-and-return-value"]], "Defining a function without any parameters": [[66, "defining-a-function-without-any-parameters"]], "Defining a function without parameters and return value": [[66, "defining-a-function-without-parameters-and-return-value"]], "Definition": [[2, "definition"], [3, "definition"], [4, "definition"], [6, "definition"]], "Delete Objects": [[94, "delete-objects"]], "Delete object properties": [[94, "delete-object-properties"]], "Delete/Remove List Elements": [[45, "delete-remove-list-elements"]], "Deleting Files": [[60, "deleting-files"]], "Density Estimation": [[0, "density-estimation"]], "Description": [[2, "description"]], "Determinant": [[120, "determinant"]], "Dictionary Built-in Dictionary Functions": [[47, "dictionary-built-in-dictionary-functions"]], "Differences Between Interpreter and Compiler": [[90, "differences-between-interpreter-and-compiler"]], "Differences between Generator function and Normal function": [[27, "differences-between-generator-function-and-normal-function"]], "Disadvantages of Recursion": [[70, "disadvantages-of-recursion"]], "Display numbers in floating-point format": [[86, "display-numbers-in-floating-point-format"]], "Display output Number in various type format": [[86, "display-output-number-in-various-type-format"]], "Docstring Formats": [[76, "docstring-formats"]], "Docstrings": [[66, "docstrings"]], "Draw Decision Boundaries": [[13, "draw-decision-boundaries"], [14, "draw-decision-boundaries"]], "Draw a scatterplot for each pairwise relationship": [[153, "draw-a-scatterplot-for-each-pairwise-relationship"]], "Draw strips of observations on top of a box plot": [[147, "draw-strips-of-observations-on-top-of-a-box-plot"]], "Draw strips of observations on top of a violin plot": [[147, "draw-strips-of-observations-on-top-of-a-violin-plot"]], "Draw swarm observations on top of a violin plot": [[147, "draw-swarm-observations-on-top-of-a-violin-plot"]], "Drop NA from defined rows": [[130, "drop-na-from-defined-rows"]], "Drop all duplicates": [[129, "drop-all-duplicates"]], "Drop all the columns using loc": [[128, "drop-all-the-columns-using-loc"]], "Drop column by index position": [[128, "drop-column-by-index-position"]], "Drop column by suppressing errors": [[128, "drop-column-by-suppressing-errors"]], "Drop column from multi-index DataFrame": [[128, "drop-column-from-multi-index-dataframe"]], "Drop column in place": [[128, "drop-column-in-place"]], "Drop column using a function": [[128, "drop-column-using-a-function"]], "Drop column using pandas DataFrame delete": [[128, "drop-column-using-pandas-dataframe-delete"]], "Drop column using pandas DataFrame.pop() function": [[128, "drop-column-using-pandas-dataframe-pop-function"]], "Drop column where all values are missing": [[130, "drop-column-where-all-values-are-missing"]], "Drop column where at least one value is missing": [[130, "drop-column-where-at-least-one-value-is-missing"]], "Drop column with missing values in place": [[130, "drop-column-with-missing-values-in-place"]], "Drop column with the number of NA": [[130, "drop-column-with-the-number-of-na"]], "Drop columns": [[124, "drop-columns"]], "Drop columns in pandas DataFrame": [[128, "drop-columns-in-pandas-dataframe"]], "Drop columns with NA in pandas DataFrame": [[130, "drop-columns-with-na-in-pandas-dataframe"]], "Drop duplicates and reset the index": [[129, "drop-duplicates-and-reset-the-index"], [130, "drop-duplicates-and-reset-the-index"]], "Drop duplicates but keep first": [[129, "drop-duplicates-but-keep-first"]], "Drop duplicates but keep last": [[129, "drop-duplicates-but-keep-last"]], "Drop duplicates from defined columns": [[129, "drop-duplicates-from-defined-columns"]], "Drop duplicates in pandas DataFrame": [[129, "drop-duplicates-in-pandas-dataframe"]], "Drop duplicates in place": [[129, "drop-duplicates-in-place"]], "Drop first n columns": [[128, "drop-first-n-columns"]], "Drop multiple columns": [[128, "drop-multiple-columns"]], "Drop range of columns using iloc": [[128, "drop-range-of-columns-using-iloc"]], "Drop single column": [[128, "drop-single-column"]], "Drop the last column": [[128, "drop-the-last-column"]], "Encapsulation": [[93, "encapsulation"]], "Enjoy Learning \ud83d\ude03": [[162, "enjoy-learning"]], "Enumerate": [[63, "enumerate"]], "Error Handling": [[108, "error-handling"]], "Escape Sequence": [[44, "escape-sequence"]], "Escape character \\": [[31, "escape-character"]], "Essentials": [[162, "essentials"]], "Estimating Parameters for a Gaussian": [[0, "estimating-parameters-for-a-gaussian"]], "Example 10: Print year, month, hour, minute and timestamp": [[51, "example-10-print-year-month-hour-minute-and-timestamp"]], "Example 11: Difference between two dates and times": [[51, "example-11-difference-between-two-dates-and-times"]], "Example 12: Difference between two timedelta objects": [[51, "example-12-difference-between-two-timedelta-objects"]], "Example 13: Printing negative timedelta object": [[51, "example-13-printing-negative-timedelta-object"]], "Example 14: Time duration in seconds": [[51, "example-14-time-duration-in-seconds"]], "Example 15: Format date using strftime()": [[51, "example-15-format-date-using-strftime"]], "Example 16: strptime()": [[51, "example-16-strptime"]], "Example 1:": [[38, "example-1"], [79, "example-1"]], "Example 1: Current time using datetime object": [[55, "example-1-current-time-using-datetime-object"]], "Example 1: Declaring and assigning value to a constant": [[82, "example-1-declaring-and-assigning-value-to-a-constant"]], "Example 1: Declaring and assigning value to a variable": [[82, "example-1-declaring-and-assigning-value-to-a-variable"]], "Example 1: Get Current Date and Time": [[51, "example-1-get-current-date-and-time"]], "Example 1: Python get today\u2019s date": [[54, "example-1-python-get-todays-date"]], "Example 1: Python sleep()": [[58, "example-1-python-sleep"]], "Example 1: Python timestamp to datetime": [[56, "example-1-python-timestamp-to-datetime"]], "Example 1: datetime to string using strftime()": [[52, "example-1-datetime-to-string-using-strftime"]], "Example 1: string to datetime object": [[53, "example-1-string-to-datetime-object"]], "Example 2:": [[38, "example-2"], [79, "example-2"]], "Example 2: Creating string from a timestamp": [[52, "example-2-creating-string-from-a-timestamp"]], "Example 2: Current date in different formats": [[54, "example-2-current-date-in-different-formats"]], "Example 2: Current time using time module": [[55, "example-2-current-time-using-time-module"]], "Example 2: Declaring multiple variables in one line** using comma  ,  and semicolon ;": [[82, "example-2-declaring-multiple-variables-in-one-line-using-comma-and-semicolon"]], "Example 2: Get Current Date": [[51, "example-2-get-current-date"]], "Example 2: Python create a digital clock": [[58, "example-2-python-create-a-digital-clock"]], "Example 2: Python datetime to timestamp": [[56, "example-2-python-datetime-to-timestamp"]], "Example 2: string to datetime object": [[53, "example-2-string-to-datetime-object"]], "Example 3: Changing the value of a variable": [[82, "example-3-changing-the-value-of-a-variable"]], "Example 3: Current time of a timezone": [[55, "example-3-current-time-of-a-timezone"]], "Example 3: Date object to represent a date": [[51, "example-3-date-object-to-represent-a-date"]], "Example 3: Get the current date and time": [[54, "example-3-get-the-current-date-and-time"]], "Example 3: Locale\u2019s appropriate date and time": [[52, "example-3-locales-appropriate-date-and-time"]], "Example 3: Python multithreading": [[58, "example-3-python-multithreading"]], "Example 4: Get current date": [[51, "example-4-get-current-date"]], "Example 4: Time Objects to Represent Time": [[55, "example-4-time-objects-to-represent-time"]], "Example 4: sleep() in a multithreaded program": [[58, "example-4-sleep-in-a-multithreaded-program"]], "Example 5: Difference Between Two Points in Time Using": [[55, "example-5-difference-between-two-points-in-time-using"]], "Example 5: Get date from a timestamp": [[51, "example-5-get-date-from-a-timestamp"]], "Example 6: Difference Between Two Points in Time Using timedelata": [[55, "example-6-difference-between-two-points-in-time-using-timedelata"]], "Example 6: Print today\u2019s year, month and day": [[51, "example-6-print-todays-year-month-and-day"]], "Example 7: Time object to represent time": [[51, "example-7-time-object-to-represent-time"]], "Example 8: Print hour, minute, second and microsecond": [[51, "example-8-print-hour-minute-second-and-microsecond"]], "Example 9: Python datetime object": [[51, "example-9-python-datetime-object"]], "Example : Arithmetic operators in Python": [[87, "example-arithmetic-operators-in-python"]], "Example : Comparison operators in Python": [[87, "example-comparison-operators-in-python"]], "Example : Identity operators in Python": [[87, "example-identity-operators-in-python"]], "Example : Logical operators in Python": [[87, "example-logical-operators-in-python"]], "Example : Membership operators in Python": [[87, "example-membership-operators-in-python"]], "Example : Share a global Variable Across Python Modules": [[68, "example-share-a-global-variable-across-python-modules"]], "Example Using decimal Module": [[72, "example-using-decimal-module"]], "Example Using math Module": [[72, "example-using-math-module"]], "Example Using operator Module": [[72, "example-using-operator-module"]], "Example Using os Module": [[72, "example-using-os-module"]], "Example Using random Module": [[72, "example-using-random-module"]], "Example Using statistics Module": [[72, "example-using-statistics-module"]], "Example Using string Module": [[72, "example-using-string-module"]], "Example Using sys Module": [[72, "example-using-sys-module"]], "Example of Inheritance in Python": [[95, "example-of-inheritance-in-python"]], "Example of Method Overriding in Python": [[95, "example-of-method-overriding-in-python"]], "Example of RegEx with Metacharacters": [[31, "example-of-regex-with-metacharacters"]], "Example to convert pandas DataFrame to dict": [[132, "example-to-convert-pandas-dataframe-to-dict"]], "Example:": [[41, "example"], [79, "example"]], "Example: Nested for loop": [[39, "example-nested-for-loop"]], "Example: Nested for loop to print pattern": [[39, "example-nested-for-loop-to-print-pattern"]], "Example: Nested while loop": [[40, "example-nested-while-loop"]], "Example: Nested while loop to print the pattern": [[40, "example-nested-while-loop-to-print-the-pattern"]], "Example: User-Defined Exception in Python": [[64, "example-user-defined-exception-in-python"]], "Exceptions in Python": [[63, "exceptions-in-python"]], "Exercise 10: Merge two data frames using the following condition": [[136, "exercise-10-merge-two-data-frames-using-the-following-condition"]], "Exercise 1: From the given dataset print the first and last five rows": [[136, "exercise-1-from-the-given-dataset-print-the-first-and-last-five-rows"]], "Exercise 1: Read Total profit of all months and show it using a line plot": [[115, "exercise-1-read-total-profit-of-all-months-and-show-it-using-a-line-plot"]], "Exercise 2: Clean the dataset and update the CSV file": [[136, "exercise-2-clean-the-dataset-and-update-the-csv-file"]], "Exercise 2: Get total profit of all months and show line plot with the following Style properties": [[115, "exercise-2-get-total-profit-of-all-months-and-show-line-plot-with-the-following-style-properties"]], "Exercise 3: Find the most expensive car company name": [[136, "exercise-3-find-the-most-expensive-car-company-name"]], "Exercise 3: Read all product sales data and show it  using a multiline plot": [[115, "exercise-3-read-all-product-sales-data-and-show-it-using-a-multiline-plot"]], "Exercise 4: Print All Toyota Cars details": [[136, "exercise-4-print-all-toyota-cars-details"]], "Exercise 4: Read toothpaste sales data of each month and show it using a scatter plot": [[115, "exercise-4-read-toothpaste-sales-data-of-each-month-and-show-it-using-a-scatter-plot"]], "Exercise 5: Count total cars per company": [[136, "exercise-5-count-total-cars-per-company"]], "Exercise 5: Read face cream and facewash product sales data and show it using the bar chart": [[115, "exercise-5-read-face-cream-and-facewash-product-sales-data-and-show-it-using-the-bar-chart"]], "Exercise 6: Find each company\u2019s Higesht price car": [[136, "exercise-6-find-each-companys-higesht-price-car"]], "Exercise 6: Read sales data of bathing soap of all months and show it using a bar chart. Save this plot to your hard disk": [[115, "exercise-6-read-sales-data-of-bathing-soap-of-all-months-and-show-it-using-a-bar-chart-save-this-plot-to-your-hard-disk"]], "Exercise 7: Find the average mileage of each car making company": [[136, "exercise-7-find-the-average-mileage-of-each-car-making-company"]], "Exercise 7: Read the total profit of each month and show it using the histogram to see the most common profit ranges": [[115, "exercise-7-read-the-total-profit-of-each-month-and-show-it-using-the-histogram-to-see-the-most-common-profit-ranges"]], "Exercise 8: Calculate total sale data for last year for each product and show it using a Pie chart": [[115, "exercise-8-calculate-total-sale-data-for-last-year-for-each-product-and-show-it-using-a-pie-chart"]], "Exercise 8: Sort all cars by Price column": [[136, "exercise-8-sort-all-cars-by-price-column"]], "Exercise 9: Concatenate two data frames using the following conditions": [[136, "exercise-9-concatenate-two-data-frames-using-the-following-conditions"]], "Exercise 9: Read Bathing soap facewash of all months and display it using the Subplot": [[115, "exercise-9-read-bathing-soap-facewash-of-all-months-and-display-it-using-the-subplot"]], "Exercise Question 10: Read all product sales data and show it using the stack plot": [[115, "exercise-question-10-read-all-product-sales-data-and-show-it-using-the-stack-plot"]], "Exercises \u279e <span class='label label-default'>Level 1</span>": [[29, "exercises-level-1"], [31, "exercises-level-1"], [37, "exercises-level-1"], [39, "exercises-level-1"], [45, "exercises-level-1"], [46, "exercises-level-1"], [48, "exercises-level-1"], [56, "exercises-level-1"], [60, "exercises-level-1"], [63, "exercises-level-1"], [66, "exercises-level-1"], [72, "exercises-level-1"], [82, "exercises-level-1"], [93, "exercises-level-1"]], "Exercises \u279e <span class='label label-default'>Level 2</span>": [[29, "exercises-level-2"], [31, "exercises-level-2"], [37, "exercises-level-2"], [39, "exercises-level-2"], [45, "exercises-level-2"], [46, "exercises-level-2"], [48, "exercises-level-2"], [60, "exercises-level-2"], [66, "exercises-level-2"], [72, "exercises-level-2"], [82, "exercises-level-2"], [93, "exercises-level-2"]], "Exercises \u279e <span class='label label-default'>Level 3</span>": [[29, "exercises-level-3"], [31, "exercises-level-3"], [37, "exercises-level-3"], [39, "exercises-level-3"], [48, "exercises-level-3"], [66, "exercises-level-3"], [72, "exercises-level-3"]], "Expert Level": [[161, "expert-level"]], "Exporting Data": [[124, "exporting-data"]], "FacetGrid": [[154, "facetgrid"], [154, "id1"]], "Factor Plot": [[151, "factor-plot"]], "Fashion MNIST": [[8, "fashion-mnist"]], "Feature 1": [[108, "feature-1"]], "Feature 2": [[108, "feature-2"]], "Feature 3": [[108, "feature-3"]], "Feature Scaling": [[3, "feature-scaling"]], "Features (variables)": [[3, "features-variables"]], "File Positions": [[60, "file-positions"]], "File Types": [[60, "file-types"]], "File with csv Extension": [[60, "file-with-csv-extension"]], "File with json Extension": [[60, "file-with-json-extension"]], "File with txt Extension": [[60, "file-with-txt-extension"]], "File with xlsx Extension": [[60, "file-with-xlsx-extension"]], "File with xml Extension": [[60, "file-with-xml-extension"]], "Files": [[60, "files"]], "Filter, Sort, and Groupby": [[124, "filter-sort-and-groupby"]], "Filtering Data": [[135, "filtering-data"]], "Find Anomalies Using Gaussian Distribution": [[7, "find-anomalies-using-gaussian-distribution"]], "Fing Outliers": [[7, "fing-outliers"]], "Flatten Data": [[121, "flatten-data"]], "For instance if you want to generate a list of numbers": [[49, "for-instance-if-you-want-to-generate-a-list-of-numbers"]], "Format Code List": [[52, "format-code-list"], [53, "format-code-list"]], "Format output strings by its positions": [[86, "format-output-strings-by-its-positions"]], "Forward (or Feedforward) Propagation": [[6, "forward-or-feedforward-propagation"]], "Forward Propagation Example": [[6, "forward-propagation-example"]], "Frozenset methods": [[48, "frozenset-methods"]], "Function Argument and Parameter": [[69, "function-argument-and-parameter"]], "Function as a Parameter": [[28, "function-as-a-parameter"]], "Function as a Parameter of Another Function": [[69, "function-as-a-parameter-of-another-function"]], "Function as a Return Value": [[28, "function-as-a-return-value"]], "Function pass Statement": [[66, "function-pass-statement"]], "Function return Statement": [[66, "function-return-statement"]], "Functions in Python Math Module": [[74, "functions-in-python-math-module"]], "Gaussian (Normal) Distribution": [[0, "gaussian-normal-distribution"]], "Generate Random Numbers": [[121, "generate-random-numbers"]], "Generators in Python": [[27, "generators-in-python"]], "Generic Seaborn Plots:": [[141, "generic-seaborn-plots"]], "Get Current Directory getcwd() -": [[61, "get-current-directory-getcwd"]], "Get multiple input values from a user in one line": [[86, "get-multiple-input-values-from-a-user-in-one-line"]], "Get the statistics of DataFrame": [[124, "get-the-statistics-of-dataframe"]], "Getting Started with Python": [[23, "getting-started-with-python"]], "Getting back to Decorators": [[29, "getting-back-to-decorators"]], "Global Variables": [[67, "global-variables"]], "Global Variables Across Python Modules": [[68, "global-variables-across-python-modules"]], "Global and local variables": [[67, "global-and-local-variables"]], "Global in Nested Functions": [[68, "global-in-nested-functions"]], "Good news is \ud83d\ude0d": [[162, "good-news-is"]], "Gradient Computation": [[6, "gradient-computation"]], "Group the strips by a categorical variable": [[147, "group-the-strips-by-a-categorical-variable"]], "HIGH-LEVEL LANGUAGES": [[90, "high-level-languages"]], "Handling timezone in Python": [[51, "handling-timezone-in-python"]], "Help topics": [[81, "help-topics"]], "Here is a list of all the escape sequences supported by Python.": [[44, "here-is-a-list-of-all-the-escape-sequences-supported-by-python"]], "Here\u2019s my first section": [[20, "heres-my-first-section"], [102, "heres-my-first-section"], [105, "heres-my-first-section"], [158, "heres-my-first-section"], [160, "heres-my-first-section"]], "Here\u2019s my sample title": [[20, "heres-my-sample-title"], [102, "heres-my-sample-title"], [105, "heres-my-sample-title"], [158, "heres-my-sample-title"], [160, "heres-my-sample-title"]], "Hierarchical Inheritance": [[95, "hierarchical-inheritance"]], "Higher Order Functions": [[28, "higher-order-functions"]], "Histogram": [[114, "histogram"]], "How Are Sets Better Than Other DataTypes?": [[48, "how-are-sets-better-than-other-datatypes"]], "How strftime() works?": [[52, "how-strftime-works"]], "How strptime() works?": [[53, "how-strptime-works"]], "How to Install NumPy?": [[117, "how-to-install-numpy"]], "How to access characters in a string?": [[44, "how-to-access-characters-in-a-string"]], "How to call a function in python?": [[66, "how-to-call-a-function-in-python"]], "How to change or delete a string?": [[44, "how-to-change-or-delete-a-string"]], "How to create a string in Python?": [[44, "how-to-create-a-string-in-python"]], "How to get current date and time in Python?": [[54, "how-to-get-current-date-and-time-in-python"]], "How to import modules in Python?": [[72, "how-to-import-modules-in-python"]], "How to learn Python?": [[21, "how-to-learn-python"]], "How to print blank lines": [[79, "how-to-print-blank-lines"]], "How to slice a string in Python?": [[44, "how-to-slice-a-string-in-python"]], "How to slice lists in Python?": [[45, "how-to-slice-lists-in-python"]], "How to use DataFrame.head() function": [[127, "how-to-use-dataframe-head-function"]], "How to use DataFrame.tail() function": [[127, "how-to-use-dataframe-tail-function"]], "Hybrid Inheritance": [[95, "hybrid-inheritance"]], "Hypothesis": [[3, "hypothesis"]], "Hypothesis (the Model)": [[4, "hypothesis-the-model"]], "Illustrate Hidden Layers Perceptrons": [[16, "illustrate-hidden-layers-perceptrons"], [17, "illustrate-hidden-layers-perceptrons"], [18, "illustrate-hidden-layers-perceptrons"]], "Import Dependencies": [[7, "import-dependencies"], [9, "import-dependencies"], [10, "import-dependencies"], [11, "import-dependencies"], [12, "import-dependencies"], [13, "import-dependencies"], [14, "import-dependencies"], [15, "import-dependencies"], [16, "import-dependencies"], [17, "import-dependencies"], [18, "import-dependencies"]], "Import NumPy and Check Version": [[117, "import-numpy-and-check-version"]], "Importing Data": [[124, "importing-data"]], "Importing module from a package": [[75, "importing-module-from-a-package"]], "Importing the Package": [[108, "importing-the-package"]], "In the upcoming tutorials, we will deep dive into specific concepts of Python, hold on your breath and start your journey": [[23, "in-the-upcoming-tutorials-we-will-deep-dive-into-specific-concepts-of-python-hold-on-your-breath-and-start-your-journey"]], "Index": [[124, "index"]], "Indexing": [[124, "indexing"]], "Indexing a 1D array": [[119, "indexing-a-1d-array"]], "Indexing a 2D array (matrices)": [[119, "indexing-a-2d-array-matrices"]], "Informal introduction to python: using python as calculator": [[23, "informal-introduction-to-python-using-python-as-calculator"]], "Inheritance": [[93, "inheritance"]], "Inheritance in Python": [[95, "inheritance-in-python"]], "Init and Train Linear Regression Model": [[10, "init-and-train-linear-regression-model"], [11, "init-and-train-linear-regression-model"], [12, "init-and-train-linear-regression-model"]], "Init and Train Logistic Regression Model": [[9, "init-and-train-logistic-regression-model"], [13, "init-and-train-logistic-regression-model"], [14, "init-and-train-logistic-regression-model"], [15, "init-and-train-logistic-regression-model"], [16, "init-and-train-logistic-regression-model"]], "Init and Train MLP Model": [[17, "init-and-train-mlp-model"], [18, "init-and-train-mlp-model"]], "Initializing the Langchain": [[108, "initializing-the-langchain"]], "Insert columns": [[124, "insert-columns"]], "Inspecting Strings": [[44, "inspecting-strings"]], "Installation": [[108, "installation"]], "Instance Variables and Methods": [[93, "instance-variables-and-methods"]], "Integer array indexing": [[119, "integer-array-indexing"]], "Interactive widget to create a sequential cubehelix palette:": [[141, "interactive-widget-to-create-a-sequential-cubehelix-palette"]], "Intermediate Level": [[161, "intermediate-level"]], "Interpreter Vs Compiler": [[90, "interpreter-vs-compiler"]], "Introduction": [[108, "introduction"]], "Introduction to *args and **kwargs in Python": [[32, "introduction-to-args-and-kwargs-in-python"]], "Introduction to HuggingFace": [[106, "introduction-to-huggingface"]], "Iris Flowers": [[8, "iris-flowers"]], "Iterate Dictionary using for loop": [[39, "iterate-dictionary-using-for-loop"]], "Iterate List using for loop": [[39, "iterate-list-using-for-loop"]], "Iterate List using while loop": [[40, "iterate-list-using-while-loop"]], "Iterate Numbers using while loop": [[40, "iterate-numbers-using-while-loop"]], "Iterate Set using for loop": [[39, "iterate-set-using-for-loop"]], "Iterate String using for loop": [[39, "iterate-string-using-for-loop"]], "Iterate String using while loop": [[40, "iterate-string-using-while-loop"]], "Iterate Tuple using for loop": [[39, "iterate-tuple-using-for-loop"]], "Iterating Through a string": [[44, "iterating-through-a-string"]], "Iterating Through an Iterator": [[26, "iterating-through-an-iterator"]], "Iterative statements": [[34, "iterative-statements"]], "Iterators in Python": [[26, "iterators-in-python"]], "Java is both Compiled and Interpreted.": [[90, "java-is-both-compiled-and-interpreted"]], "Join/Combine": [[124, "join-combine"]], "Jupyter Demos": [[0, "jupyter-demos"], [2, "jupyter-demos"], [3, "jupyter-demos"], [4, "jupyter-demos"], [6, "jupyter-demos"]], "K-Means Algorithm": [[2, "k-means-algorithm"]], "K-Means Algorithm Demo": [[9, "k-means-algorithm-demo"]], "KEY DIFFERENCE": [[90, "key-difference"]], "KEY SIMILARITIES": [[90, "key-similarities"]], "Key Points to Remember": [[49, "key-points-to-remember"], [85, "key-points-to-remember"]], "Key Points to Remember:": [[93, "key-points-to-remember"]], "LM Plot and Reg Plot": [[142, "lm-plot-and-reg-plot"]], "Lambda Function": [[49, "lambda-function"]], "LangGraphs": [[110, "langgraphs"]], "LangServe": [[111, "langserve"]], "LangSmith": [[112, "langsmith"]], "Langchain expression language": [[113, "langchain-expression-language"]], "Langchain modules": [[109, "langchain-modules"]], "Learn Python Programming": [[21, "learn-python-programming"]], "Let us see valid variable names": [[82, "let-us-see-valid-variable-names"]], "Letter Value (LV) Plot": [[152, "letter-value-lv-plot"]], "Let\u2019s break down the different components of the code.": [[79, "lets-break-down-the-different-components-of-the-code"]], "Let\u2019s discuss some plots that allow us to visualize the distribution of a dataset. These plots are:": [[145, "lets-discuss-some-plots-that-allow-us-to-visualize-the-distribution-of-a-dataset-these-plots-are"]], "Let\u2019s implement with dataset": [[145, "lets-implement-with-dataset"]], "Line Graph": [[114, "line-graph"]], "Linear Algebra": [[25, "linear-algebra"]], "Linear Regression": [[3, "linear-regression"]], "Linspace": [[121, "linspace"]], "List Comprehension vs String vs For Loop in Python": [[49, "list-comprehension-vs-string-vs-for-loop-in-python"]], "List Comprehension: Elegant way to create new List": [[45, "list-comprehension-elegant-way-to-create-new-list"]], "List Comprehensions vs Lambda functions": [[49, "list-comprehensions-vs-lambda-functions"]], "List Directories and Files listdir() -": [[61, "list-directories-and-files-listdir"]], "List Index": [[45, "list-index"]], "List comprehension can be combined with if statement": [[49, "list-comprehension-can-be-combined-with-if-statement"]], "Literal Collections": [[83, "literal-collections"]], "Load Data from File": [[121, "load-data-from-file"]], "Load Fifa Data": [[114, "load-fifa-data"]], "Load Necessary Libraries": [[114, "load-necessary-libraries"]], "Load in NumPy Library": [[118, "load-in-numpy-library"]], "Load the Data": [[7, "load-the-data"], [9, "load-the-data"], [10, "load-the-data"], [11, "load-the-data"], [12, "load-the-data"], [13, "load-the-data"], [14, "load-the-data"], [15, "load-the-data"], [16, "load-the-data"], [17, "load-the-data"], [18, "load-the-data"]], "Loading Datasets in Seaborn": [[138, "loading-datasets-in-seaborn"]], "Loading data into Pandas": [[135, "loading-data-into-pandas"]], "Local Variables": [[67, "local-variables"]], "LogSpace": [[121, "logspace"]], "Logistic Regression": [[4, "logistic-regression"]], "Logistic Regression With Linear Boundary Demo": [[13, "logistic-regression-with-linear-boundary-demo"]], "Logistic Regression With Non-Linear Boundary Demo": [[14, "logistic-regression-with-non-linear-boundary-demo"]], "Loops in Python": [[39, "loops-in-python"], [40, "loops-in-python"]], "MACHINE CODE": [[90, "machine-code"]], "MNIST (Handwritten Digits)": [[8, "mnist-handwritten-digits"]], "Making a New Directory mkdir() -": [[61, "making-a-new-directory-mkdir"]], "Making changes to the data": [[135, "making-changes-to-the-data"]], "Markdown + notebooks": [[24, "markdown-notebooks"], [99, "markdown-notebooks"], [103, "markdown-notebooks"]], "Markdown Files": [[19, "markdown-files"], [100, "markdown-files"], [104, "markdown-files"]], "Match object": [[31, "match-object"]], "Mathematics": [[117, "mathematics"]], "Mathematics for Machine Learning": [[22, "mathematics-for-machine-learning"]], "Matplotlib": [[114, "matplotlib"]], "Matplotlib vs. Seaborn Plotting Code": [[140, "matplotlib-vs-seaborn-plotting-code"]], "Matrix Multiplication": [[120, "matrix-multiplication"]], "MetaCharacters": [[31, "metacharacters"]], "Metadata info of DataFrame": [[124, "metadata-info-of-dataframe"]], "Method Overriding": [[95, "method-overriding"]], "Method Resolution Order in Python": [[95, "method-resolution-order-in-python"]], "Method to Modify Class Default Values": [[93, "method-to-modify-class-default-values"]], "Microchips Tests (Artificial)": [[8, "microchips-tests-artificial"]], "Miscellaneous": [[121, "miscellaneous"]], "Modify Object Properties": [[94, "modify-object-properties"]], "Modifying a set in Python": [[48, "modifying-a-set-in-python"]], "More": [[117, "more"], [117, "id2"]], "Multi-class Classification": [[6, "multi-class-classification"]], "Multi-class Classification (One-vs-All)": [[4, "multi-class-classification-one-vs-all"]], "Multi-line Docstrings in Python": [[76, "multi-line-docstrings-in-python"]], "Multi-line statement": [[81, "multi-line-statement"]], "Multithreading in Python": [[58, "multithreading-in-python"]], "Multivariate Linear Regression Demo": [[10, "multivariate-linear-regression-demo"]], "Multivariate Logistic Regression Demo": [[15, "multivariate-logistic-regression-demo"], [16, "multivariate-logistic-regression-demo"]], "MyST markdown": [[24, "myst-markdown"], [99, "myst-markdown"], [103, "myst-markdown"]], "Need of Encapsulation": [[93, "need-of-encapsulation"]], "Negative indexing": [[45, "negative-indexing"]], "Nested Loops in List Comprehension": [[49, "nested-loops-in-list-comprehension"]], "Nested break loops": [[41, "nested-break-loops"]], "Nested continue loops": [[41, "nested-continue-loops"]], "Nested for loops": [[39, "nested-for-loops"]], "Nested while loops": [[40, "nested-while-loops"]], "Network Model (Set of Neurons)": [[6, "network-model-set-of-neurons"]], "Neural Network": [[6, "neural-network"]], "Neural Network (Multilayer Perceptron) Demo": [[17, "neural-network-multilayer-perceptron-demo"], [18, "neural-network-multilayer-perceptron-demo"]], "Neuron Model (Logistic Unit)": [[6, "neuron-model-logistic-unit"]], "Non-Linear Y(X) Dependency (Artificial)": [[8, "non-linear-y-x-dependency-artificial"]], "Non-linear Regression Demo": [[11, "non-linear-regression-demo"]], "Nonlocal Variables": [[67, "nonlocal-variables"]], "Nonlocal variable in a nested function": [[28, "nonlocal-variable-in-a-nested-function"]], "Normal Equation": [[3, "normal-equation"]], "Notebooks with MyST Markdown": [[5, "notebooks-with-myst-markdown"], [101, "notebooks-with-myst-markdown"], [159, "notebooks-with-myst-markdown"]], "NumPy Array Types:": [[118, "numpy-array-types"]], "NumPy Basics": [[117, "numpy-basics"], [117, "id1"]], "Number Data Type in Python": [[43, "number-data-type-in-python"]], "Numpy Array basics": [[118, "numpy-array-basics"]], "Numpy Documentation": [[121, "numpy-documentation"]], "Numpy also provides many functions to create arrays:": [[118, "numpy-also-provides-many-functions-to-create-arrays"]], "OBJECT CODE": [[90, "object-code"]], "Object": [[93, "object"]], "Object Default Methods": [[93, "object-default-methods"]], "Object Method": [[93, "object-method"]], "Object Oriented Programming": [[93, "object-oriented-programming"]], "Object Properties": [[94, "object-properties"]], "Old style formatting": [[44, "old-style-formatting"]], "One or more times +": [[31, "one-or-more-times"]], "Operations": [[117, "operations"]], "Other Dictionary Operations": [[47, "other-dictionary-operations"]], "Other Frozenset methods": [[48, "other-frozenset-methods"]], "Other List Operations in Python": [[45, "other-list-operations-in-python"]], "Other Python Set Methods": [[48, "other-python-set-methods"]], "Other Set Operations": [[48, "other-set-operations"]], "Other Tuple Operations": [[46, "other-tuple-operations"]], "Output String justification": [[86, "output-string-justification"]], "Output formatting": [[86, "output-formatting"]], "Output text alignment specifying a width": [[86, "output-text-alignment-specifying-a-width"]], "Overfitting Problem": [[3, "overfitting-problem"], [4, "overfitting-problem"]], "Overloading Comparison Operators": [[96, "overloading-comparison-operators"]], "Overloading the + Operator": [[96, "overloading-the-operator"]], "Overriding parent method": [[93, "overriding-parent-method"]], "Package manager and virtual environment": [[23, "package-manager-and-virtual-environment"]], "Packing": [[63, "packing"]], "Packing Dictionaries": [[63, "packing-dictionaries"]], "Packing Lists": [[63, "packing-lists"]], "Packing and Unpacking Arguments in Python": [[63, "packing-and-unpacking-arguments-in-python"]], "PairGrid": [[153, "pairgrid"]], "Pandas DataFrame head, tail, at, iat": [[127, "pandas-dataframe-head-tail-at-iat"]], "Parameters": [[3, "parameters"]], "Parameters:": [[124, "parameters"]], "Part 1: with Iris dataset": [[153, "part-1-with-iris-dataset"]], "Part 1: with Tips dataset": [[153, "part-1-with-tips-dataset"]], "Part 1: with Titanic dataset": [[150, "part-1-with-titanic-dataset"]], "Part 2: with Tips dataset": [[150, "part-2-with-tips-dataset"]], "Passing Arguments with Key and Value": [[66, "passing-arguments-with-key-and-value"]], "Period .": [[31, "id3"]], "Pie Chart": [[114, "pie-chart"]], "Pie Chart #1": [[114, "pie-chart-1"]], "Pie Chart #2": [[114, "pie-chart-2"]], "Pie Chart #3": [[114, "pie-chart-3"]], "Placeholders": [[117, "placeholders"]], "Plot Precision/Recall Progress": [[7, "plot-precision-recall-progress"]], "Plot Test Dataset Predictions": [[15, "plot-test-dataset-predictions"], [16, "plot-test-dataset-predictions"], [17, "plot-test-dataset-predictions"], [18, "plot-test-dataset-predictions"]], "Plot the Clustering Results": [[9, "plot-the-clustering-results"]], "Plot the Data": [[7, "plot-the-data"], [9, "plot-the-data"], [11, "plot-the-data"], [13, "plot-the-data"], [14, "plot-the-data"], [15, "plot-the-data"], [16, "plot-the-data"], [17, "plot-the-data"], [18, "plot-the-data"]], "Plot the Model Predictions": [[10, "plot-the-model-predictions"], [11, "plot-the-model-predictions"], [12, "plot-the-model-predictions"]], "Plot the distribution on the vertical axis:": [[145, "plot-the-distribution-on-the-vertical-axis"]], "Polymorphism": [[93, "polymorphism"]], "Polynomial Regression": [[3, "polynomial-regression"]], "Positional Arguments (Basic)": [[69, "positional-arguments-basic"]], "Practice Problem": [[86, "practice-problem"]], "Prepara the Data for Training": [[9, "prepara-the-data-for-training"], [13, "prepara-the-data-for-training"]], "Prepare the Data for Training": [[14, "prepare-the-data-for-training"]], "Prerequisites for learning decorators": [[29, "prerequisites-for-learning-decorators"]], "Print Training Results": [[15, "print-training-results"], [16, "print-training-results"]], "Print end command": [[79, "print-end-command"]], "Private members of parent class": [[95, "private-members-of-parent-class"]], "Programming Steps Comparision:": [[90, "programming-steps-comparision"]], "Python  Classes and Objects": [[94, "python-classes-and-objects"]], "Python **kwargs": [[32, "python-kwargs"]], "Python *args": [[32, "python-args"]], "Python *args and **kwargs": [[32, "python-args-and-kwargs"]], "Python - filter Function": [[29, "python-filter-function"]], "Python - map Function": [[29, "python-map-function"]], "Python @property decorator": [[30, "python-property-decorator"]], "Python Advanced Topics": [[21, "python-advanced-topics"], [33, "python-advanced-topics"]], "Python Anonymous/lambda Function": [[71, "python-anonymous-lambda-function"]], "Python Applications Area": [[23, "python-applications-area"]], "Python Arbitrary/Variable-length Arguments": [[69, "python-arbitrary-variable-length-arguments"]], "Python Built-In Modules Examples": [[72, "python-built-in-modules-examples"]], "Python Built-in Exceptions": [[62, "python-built-in-exceptions"]], "Python Built-in List Functions": [[45, "python-built-in-list-functions"]], "Python Built-in Tuple Functions": [[46, "python-built-in-tuple-functions"]], "Python Classes and Objects": [[94, "id1"]], "Python Closures": [[28, "python-closures"]], "Python Comments": [[76, "python-comments"]], "Python Comments Using Strings": [[76, "python-comments-using-strings"]], "Python Comments vs Docstrings": [[76, "python-comments-vs-docstrings"]], "Python Custom Exceptions": [[64, "python-custom-exceptions"]], "Python Data Types": [[21, "python-data-types"], [50, "python-data-types"], [84, "python-data-types"]], "Python DataFrame": [[124, "python-dataframe"]], "Python Date & Time Module": [[21, "python-date-time-module"], [59, "python-date-time-module"]], "Python Decimal": [[43, "python-decimal"]], "Python Decorators": [[29, "python-decorators"]], "Python Default Arguments": [[69, "python-default-arguments"]], "Python Dictionary": [[47, "python-dictionary"]], "Python Dictionary Comprehension": [[47, "python-dictionary-comprehension"]], "Python Dictionary Methods": [[47, "python-dictionary-methods"]], "Python Directory": [[61, "python-directory"]], "Python Directory and Files Management": [[61, "python-directory-and-files-management"]], "Python Docstrings": [[76, "python-docstrings"]], "Python Errors and Built-in Exceptions": [[62, "python-errors-and-built-in-exceptions"]], "Python Exceptions Handling Using try, except and finally statement": [[63, "python-exceptions-handling-using-try-except-and-finally-statement"]], "Python File I/O": [[60, "python-file-i-o"]], "Python File Methods": [[60, "python-file-methods"]], "Python Files": [[21, "python-files"], [65, "python-files"]], "Python Flow Control": [[21, "python-flow-control"], [42, "python-flow-control"]], "Python Flow-Control (Decision-Making) Statements": [[34, "python-flow-control-decision-making-statements"]], "Python Fractions": [[43, "python-fractions"]], "Python Frozenset": [[48, "python-frozenset"]], "Python Function Arguments": [[69, "python-function-arguments"]], "Python Functions": [[21, "python-functions"], [66, "python-functions"], [78, "python-functions"]], "Python Generator Expression": [[27, "python-generator-expression"]], "Python Generators with a Loop": [[27, "python-generators-with-a-loop"]], "Python Get Current time": [[55, "python-get-current-time"]], "Python Global, Local and Nonlocal variables": [[67, "python-global-local-and-nonlocal-variables"]], "Python Hello, World": [[79, "python-hello-world"]], "Python Infinite Iterators": [[26, "python-infinite-iterators"]], "Python Inheritance": [[95, "python-inheritance"]], "Python Input, Output and Import": [[86, "python-input-output-and-import"]], "Python Installation": [[23, "python-installation"]], "Python Introduction": [[21, "python-introduction"], [92, "python-introduction"]], "Python Iterators": [[26, "python-iterators"]], "Python Keyword Arguments": [[69, "python-keyword-arguments"]], "Python Keywords and Identifiers": [[80, "python-keywords-and-identifiers"]], "Python List": [[45, "python-list"]], "Python List Comprehension": [[49, "python-list-comprehension"]], "Python List Methods": [[45, "python-list-methods"]], "Python List Operations": [[45, "python-list-operations"]], "Python Literals": [[83, "python-literals"]], "Python Mathematical Functions": [[74, "python-mathematical-functions"]], "Python Mathematics": [[43, "python-mathematics"]], "Python Matplotlib": [[115, "python-matplotlib"], [116, "python-matplotlib"]], "Python Matplotlib Module": [[21, "python-matplotlib-module"]], "Python Module Search Path": [[72, "python-module-search-path"]], "Python Modules": [[72, "python-modules"]], "Python Modules List": [[72, "python-modules-list"]], "Python Multilevel Inheritance": [[95, "python-multilevel-inheritance"]], "Python Multiple Inheritance": [[95, "python-multiple-inheritance"]], "Python Namespace and Scope": [[88, "python-namespace-and-scope"]], "Python Nested if statement": [[38, "python-nested-if-statement"]], "Python NumPy": [[117, "python-numpy"]], "Python NumPy Array:": [[117, "python-numpy-array"], [118, "python-numpy-array"]], "Python NumPy Exercises": [[122, "python-numpy-exercises"]], "Python Numbers, Type Conversion and Mathematics": [[43, "python-numbers-type-conversion-and-mathematics"]], "Python Numpy Module": [[21, "python-numpy-module"], [123, "python-numpy-module"]], "Python OOPs Concepts": [[93, "python-oops-concepts"]], "Python Object Class": [[21, "python-object-class"], [97, "python-object-class"]], "Python Operator Overloading": [[96, "python-operator-overloading"], [96, "id1"]], "Python Operators": [[87, "python-operators"]], "Python Package": [[75, "python-package"]], "Python Pandas": [[124, "python-pandas"], [135, "python-pandas"], [136, "python-pandas"]], "Python Pandas Module": [[21, "python-pandas-module"], [137, "python-pandas-module"]], "Python Python Generators": [[27, "python-python-generators"]], "Python Random Module": [[73, "python-random-module"]], "Python Recursion": [[70, "python-recursion"]], "Python Recursive Function": [[70, "python-recursive-function"]], "Python RegEx": [[31, "python-regex"]], "Python RegEx Methods": [[31, "python-regex-methods"]], "Python Resources": [[21, "python-resources"]], "Python Seaborn": [[157, "python-seaborn"]], "Python Set Operations": [[48, "python-set-operations"]], "Python Sets": [[48, "python-sets"]], "Python Single Inheritance": [[95, "python-single-inheritance"]], "Python Special Functions": [[96, "python-special-functions"]], "Python Statement, Indentation and Comments": [[81, "python-statement-indentation-and-comments"]], "Python String Formatting": [[44, "python-string-formatting"]], "Python String Replication Operator (*)": [[44, "python-string-replication-operator"]], "Python Strings": [[23, "python-strings"], [44, "python-strings"]], "Python Strings Operations": [[44, "python-strings-operations"]], "Python Tuple": [[46, "python-tuple"]], "Python Type Conversion and Type Casting": [[85, "python-type-conversion-and-type-casting"]], "Python User-defined Functions": [[77, "python-user-defined-functions"]], "Python Variable Scope": [[88, "python-variable-scope"]], "Python Variables and Constants": [[82, "python-variables-and-constants"]], "Python __doc__ attribute": [[76, "python-doc-attribute"]], "Python datetime": [[51, "python-datetime"]], "Python docstrings": [[76, "id1"]], "Python for Loop": [[39, "python-for-loop"]], "Python format datetime": [[51, "python-format-datetime"]], "Python from-import statement": [[72, "python-from-import-statement"]], "Python global Keyword": [[68, "python-global-keyword"]], "Python if statement": [[35, "python-if-statement"]], "Python if-elif-else statement": [[37, "python-if-elif-else-statement"]], "Python if-else statement": [[36, "python-if-else-statement"]], "Python import statement": [[72, "python-import-statement"]], "Python lists": [[23, "python-lists"]], "Python sleep()": [[58, "python-sleep"]], "Python strftime()": [[52, "python-strftime"]], "Python strftime() - datetime object to string": [[51, "python-strftime-datetime-object-to-string"]], "Python strptime()": [[53, "python-strptime"]], "Python strptime() - string to datetime": [[51, "python-strptime-string-to-datetime"]], "Python super() function": [[95, "python-super-function"]], "Python time Module": [[57, "python-time-module"]], "Python time.asctime()": [[57, "python-time-asctime"]], "Python time.ctime()": [[57, "python-time-ctime"]], "Python time.gmtime()": [[57, "python-time-gmtime"]], "Python time.localtime()": [[57, "python-time-localtime"]], "Python time.mktime()": [[57, "python-time-mktime"]], "Python time.sleep()": [[57, "python-time-sleep"]], "Python time.strftime()": [[57, "python-time-strftime"]], "Python time.strptime()": [[57, "python-time-strptime"]], "Python time.time()": [[57, "python-time-time"]], "Python timestamp to datetime and vice-versa": [[56, "python-timestamp-to-datetime-and-vice-versa"]], "Python try with else clause": [[63, "python-try-with-else-clause"]], "Python try-finally Clause": [[63, "python-try-finally-clause"]], "Python while Loop": [[40, "python-while-loop"]], "Quantifier {}": [[31, "quantifier"]], "Quickly add YAML metadata for MyST Notebooks": [[5, "quickly-add-yaml-metadata-for-myst-notebooks"], [101, "quickly-add-yaml-metadata-for-myst-notebooks"], [159, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Quiz time": [[119, "quiz-time"]], "Raise error while renaming a column": [[131, "raise-error-while-renaming-a-column"]], "Raising Exceptions in Python": [[63, "raising-exceptions-in-python"]], "Raising an Exception": [[63, "raising-an-exception"]], "Random Initialization": [[6, "random-initialization"]], "Random number": [[118, "random-number"]], "Raw String to ignore escape sequence": [[44, "raw-string-to-ignore-escape-sequence"]], "Reading Data in Pandas": [[135, "reading-data-in-pandas"]], "Real World Examples": [[114, "real-world-examples"]], "Real world use cases": [[162, "real-world-use-cases"]], "References": [[0, "references"], [2, "references"], [3, "references"], [4, "references"], [6, "references"]], "Regularization": [[3, "regularization"], [4, "regularization"]], "Reloading a module": [[72, "reloading-a-module"]], "Removing a Directory or a File remove() and rmdir() -": [[61, "removing-a-directory-or-a-file-remove-and-rmdir"]], "Removing elements from Dictionary": [[47, "removing-elements-from-dictionary"]], "Removing elements from a set": [[48, "removing-elements-from-a-set"]], "Rename a single column": [[131, "rename-a-single-column"]], "Rename all columns with a list": [[131, "rename-all-columns-with-a-list"]], "Rename column by adding prefix/suffix": [[131, "rename-column-by-adding-prefix-suffix"]], "Rename column by index position": [[131, "rename-column-by-index-position"]], "Rename column in multi-index DataFrame": [[131, "rename-column-in-multi-index-dataframe"]], "Rename column using DataFrame.set_axis()": [[131, "rename-column-using-dataframe-set-axis"]], "Rename column using a function": [[131, "rename-column-using-a-function"]], "Rename columns by removing leading and trailing spaces": [[131, "rename-columns-by-removing-leading-and-trailing-spaces"]], "Rename columns in Pandas DataFrame": [[131, "rename-columns-in-pandas-dataframe"]], "Rename columns in all levels": [[131, "rename-columns-in-all-levels"]], "Rename columns in defined level": [[131, "rename-columns-in-defined-level"]], "Rename columns in place": [[131, "rename-columns-in-place"]], "Rename multiple columns": [[131, "rename-multiple-columns"]], "Renaming a Directory or a File rename() -": [[61, "renaming-a-directory-or-a-file-rename"]], "Reset index and change column name": [[134, "reset-index-and-change-column-name"]], "Reset index and creates new column in level": [[134, "reset-index-and-creates-new-column-in-level"]], "Reset index and name other level": [[134, "reset-index-and-name-other-level"]], "Reset index by level": [[134, "reset-index-by-level"]], "Reset index in pandas DataFrame": [[134, "reset-index-in-pandas-dataframe"]], "Reset index in place": [[134, "reset-index-in-place"]], "Reset index starts from 1": [[134, "reset-index-starts-from-1"]], "Reset index to starts at 0": [[134, "reset-index-to-starts-at-0"]], "Reset index to the range of numbers": [[134, "reset-index-to-the-range-of-numbers"]], "Reset index without new column": [[134, "reset-index-without-new-column"]], "Reset multi-level index": [[134, "reset-multi-level-index"]], "Reshape Data": [[121, "reshape-data"]], "Residplot()": [[144, "residplot"]], "Resources": [[116, "resources"], [123, "resources"], [137, "resources"], [157, "resources"]], "Return Boolean Values": [[66, "return-boolean-values"]], "Return Multiple Values": [[66, "return-multiple-values"]], "Return Single Value": [[66, "return-single-value"]], "Return a List": [[66, "return-a-list"]], "Reverse for loop": [[39, "reverse-for-loop"]], "Reverse for loop using range()": [[39, "reverse-for-loop-using-range"]], "Reverse while loop": [[40, "reverse-while-loop"]], "Rules and Naming Convention for Variables and constants": [[82, "rules-and-naming-convention-for-variables-and-constants"]], "Rules for writing identifiers": [[80, "rules-for-writing-identifiers"]], "Rules of global Keyword": [[68, "rules-of-global-keyword"]], "Running the \u201cHello, World!\u201d Program": [[79, "running-the-hello-world-program"]], "Sample Roles and Directives": [[100, "sample-roles-and-directives"], [104, "sample-roles-and-directives"]], "Saving as JSON File": [[60, "saving-as-json-file"]], "Saving our Data (Exporting into Desired Format)": [[135, "saving-our-data-exporting-into-desired-format"]], "Scatter Plot and Joint Plot": [[143, "scatter-plot-and-joint-plot"]], "Seaborn Color Palettes": [[141, "seaborn-color-palettes"]], "Seaborn Lmplots:": [[142, "seaborn-lmplots"]], "Seaborn Regplots:": [[142, "seaborn-regplots"]], "Seaborn: Box Plot": [[148, "seaborn-box-plot"]], "Seaborn: Categorical Data Plots": [[146, "seaborn-categorical-data-plots"]], "Seaborn: Strip Plot": [[147, "seaborn-strip-plot"]], "Seaborn: Violin Plot": [[149, "seaborn-violin-plot"]], "Select best threshold": [[7, "select-best-threshold"]], "Select bottom n rows in pandas DataFrame": [[127, "select-bottom-n-rows-in-pandas-dataframe"]], "Select bottom rows except for first n rows": [[127, "select-bottom-rows-except-for-first-n-rows"]], "Select bottom rows from the multi index DataFrame": [[127, "select-bottom-rows-from-the-multi-index-dataframe"]], "Select top n rows in pandas DataFrame": [[127, "select-top-n-rows-in-pandas-dataframe"]], "Select top rows except for last n rows": [[127, "select-top-rows-except-for-last-n-rows"]], "Select top rows from multi-index DataFrames": [[127, "select-top-rows-from-multi-index-dataframes"]], "Select value using row and column labels using DataFrame.at": [[127, "select-value-using-row-and-column-labels-using-dataframe-at"]], "Select value using row and column position using DataFrame.iat": [[127, "select-value-using-row-and-column-position-using-dataframe-iat"]], "Selection": [[124, "selection"]], "Self Can Be Avoided": [[98, "self-can-be-avoided"]], "Self Is Here To Stay": [[98, "self-is-here-to-stay"]], "Series": [[124, "series"]], "Server Operational Parameters": [[8, "server-operational-parameters"]], "Set Difference": [[48, "set-difference"]], "Set Intersection": [[48, "set-intersection"]], "Set Symmetric Difference": [[48, "set-symmetric-difference"]], "Set Union": [[48, "set-union"]], "Set index but keep column": [[133, "set-index-but-keep-column"]], "Set index by column number": [[133, "set-index-by-column-number"]], "Set index by keeping old index": [[133, "set-index-by-keeping-old-index"]], "Set index in pandas DataFrame": [[133, "set-index-in-pandas-dataframe"]], "Set index in place": [[133, "set-index-in-place"]], "Set index using a Python range": [[133, "set-index-using-a-python-range"]], "Set index using a column": [[133, "set-index-using-a-column"]], "Set index using a column with duplicates": [[133, "set-index-using-a-column-with-duplicates"]], "Set index using a list": [[133, "set-index-using-a-list"]], "Set index using multiple columns": [[133, "set-index-using-multiple-columns"]], "Set multi-index using a list and column": [[133, "set-multi-index-using-a-list-and-column"]], "Set multi-index using two Python series": [[133, "set-multi-index-using-two-python-series"]], "Set specific value in pandas DataFrame": [[127, "set-specific-value-in-pandas-dataframe"], [127, "id1"]], "Shortcut for if statement (Short-hand if or one-line if)": [[35, "shortcut-for-if-statement-short-hand-if-or-one-line-if"]], "Shortcut of if else (Short Hand if \u2026 else or One line if else)": [[36, "shortcut-of-if-else-short-hand-if-else-or-one-line-if-else"]], "Single Parameter:": [[66, "single-parameter"]], "Single-line docstrings in Python": [[76, "single-line-docstrings-in-python"]], "Slicing and Subsetting": [[117, "slicing-and-subsetting"]], "Solution to Overfitting": [[3, "solution-to-overfitting"], [4, "solution-to-overfitting"]], "Sorting/Describing Data": [[135, "sorting-describing-data"]], "Special Sequences": [[31, "special-sequences"]], "Special literals": [[83, "special-literals"]], "Specify Pattern Using RegEx": [[31, "specify-pattern-using-regex"]], "Specifying a sign while displaying output numbers": [[86, "specifying-a-sign-while-displaying-output-numbers"]], "Split the Data Into Training and Test Sets": [[10, "split-the-data-into-training-and-test-sets"], [15, "split-the-data-into-training-and-test-sets"], [16, "split-the-data-into-training-and-test-sets"], [17, "split-the-data-into-training-and-test-sets"], [18, "split-the-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Subsets": [[12, "split-the-data-into-training-and-test-subsets"]], "Spreading in Python": [[63, "spreading-in-python"]], "Square Brackets []": [[31, "id2"]], "Statistics": [[121, "statistics"], [124, "statistics"]], "String Concatenation Operator (+)": [[44, "string-concatenation-operator"]], "Summary": [[44, "summary"], [45, "summary"], [46, "summary"], [47, "summary"], [48, "summary"], [124, "summary"]], "Summary - MetaCharacters": [[31, "summary-metacharacters"]], "Summary:": [[119, "summary"], [124, "id1"]], "Swarm Plot": [[146, "swarm-plot"], [147, "swarm-plot"]], "Syntax :": [[36, "syntax"], [39, "syntax"]], "Syntax of List Comprehension": [[49, "syntax-of-list-comprehension"]], "Syntax:": [[35, "syntax"], [37, "syntax"], [38, "syntax"], [40, "syntax"]], "Table of Contents": [[108, "table-of-contents"]], "Target Audience \ud83e\uddd0": [[162, "target-audience"]], "The @property Decorator": [[30, "the-property-decorator"]], "The Algorithm": [[2, "the-algorithm"]], "The DataFrame.drop() function": [[128, "the-dataframe-drop-function"]], "The DataFrame.drop_duplicates() function": [[129, "the-dataframe-drop-duplicates-function"]], "The DataFrame.dropna() function": [[130, "the-dataframe-dropna-function"]], "The DataFrame.rename() function": [[131, "the-dataframe-rename-function"]], "The DataFrame.reset_index() function": [[134, "the-dataframe-reset-index-function"]], "The DataFrame.set_index() function": [[133, "the-dataframe-set-index-function"]], "The DataFrame.to_dict() function": [[132, "the-dataframe-to-dict-function"]], "The Difference\u2026": [[35, "the-difference"]], "The difference\u2026": [[36, "the-difference"]], "The dir() built-in function": [[72, "the-dir-built-in-function"]], "The except Clause with Multiple Exceptions": [[63, "the-except-clause-with-multiple-exceptions"]], "The except Clause with No Exceptions": [[63, "the-except-clause-with-no-exceptions"]], "The file Object Attributes": [[60, "the-file-object-attributes"]], "The format() Method for Formatting Strings": [[44, "the-format-method-for-formatting-strings"]], "The from_dict() function": [[125, "the-from-dict-function"]], "The property Class": [[30, "the-property-class"]], "Things to Remember": [[80, "things-to-remember"]], "Things to Remember:": [[32, "things-to-remember"]], "Time Series & LV Plot": [[152, "time-series-lv-plot"]], "Time-Series Plot": [[152, "time-series-plot"]], "To customize the display of DataFrame while printing": [[124, "to-customize-the-display-of-dataframe-while-printing"]], "Toolbox": [[162, "toolbox"]], "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80": [[107, "tools-to-get-a-launch"]], "Topics on Learning Data Science and Machine Learning": [[161, "topics-on-learning-data-science-and-machine-learning"]], "Training Set": [[4, "training-set"]], "Transfer statements": [[34, "transfer-statements"]], "Tuple Methods": [[46, "tuple-methods"]], "Tuple Operations": [[46, "tuple-operations"]], "Two Parameter:": [[66, "two-parameter"]], "Type Conversion": [[43, "type-conversion"]], "Type Conversion of Numbers in Python": [[83, "type-conversion-of-numbers-in-python"]], "Types Of Inheritance": [[95, "types-of-inheritance"]], "Types of Constructors": [[94, "types-of-constructors"]], "Types of Functions": [[66, "types-of-functions"]], "Univariate Linear Regression Demo": [[12, "univariate-linear-regression-demo"]], "Universal  Array Functions (Mathematical operations)": [[120, "universal-array-functions-mathematical-operations"]], "Unpacking": [[63, "unpacking"]], "Unpacking Dictionaries": [[63, "unpacking-dictionaries"]], "Unpacking List or a Tuple": [[63, "unpacking-list-or-a-tuple"]], "Unpacking Lists": [[63, "unpacking-lists"]], "Unpacking a sequence into separate variables": [[89, "unpacking-a-sequence-into-separate-variables"]], "Use __new__ or __init__?": [[98, "use-new-or-init"]], "Use lambda expressions to rename": [[131, "use-lambda-expressions-to-rename"]], "Use of Python Generators": [[27, "use-of-python-generators"]], "Use of global Keyword": [[68, "use-of-global-keyword"]], "Use of inheritance": [[93, "use-of-inheritance"]], "Use of lambda Function in python": [[71, "use-of-lambda-function-in-python"]], "Using Control Statement in for loops in Python": [[39, "using-control-statement-in-for-loops-in-python"]], "Using Control Statement in while loops in Python": [[40, "using-control-statement-in-while-loops-in-python"]], "Using Getters and Setters": [[30, "using-getters-and-setters"]], "Using Langchain": [[108, "using-langchain"]], "Using Python inside Jupyter notebook": [[23, "using-python-inside-jupyter-notebook"]], "Using a code editor of your choice": [[23, "using-a-code-editor-of-your-choice"]], "Using drop with axis='columns' or axis=1": [[128, "using-drop-with-axis-columns-or-axis-1"]], "Using python in a jupyter notebook": [[23, "using-python-in-a-jupyter-notebook"]], "Using r prefix before RegEx": [[31, "using-r-prefix-before-regex"]], "Using rename with axis='columns' or axis=1": [[131, "using-rename-with-axis-columns-or-axis-1"]], "Using the help() Function for Docstrings": [[76, "using-the-help-function-for-docstrings"]], "Utilizing Langchain Features": [[108, "utilizing-langchain-features"]], "ValueError in strptime()": [[53, "valueerror-in-strptime"]], "Variable Function Arguments": [[69, "variable-function-arguments"]], "Vectorized Implementation of Forward Propagation": [[6, "vectorized-implementation-of-forward-propagation"]], "Viewing/Inspecting Data": [[124, "viewing-inspecting-data"]], "Visualize the Fit": [[7, "visualize-the-fit"]], "Welcome to my technical diary \ud83e\udd2f": [[162, "welcome-to-my-technical-diary"]], "What Happens Internally?": [[98, "what-happens-internally"]], "What are lambda functions in Python?": [[71, "what-are-lambda-functions-in-python"]], "What are modules in Python?": [[72, "what-are-modules-in-python"]], "What are packages?": [[75, "what-are-packages"]], "What are user-defined functions in Python?": [[77, "what-are-user-defined-functions-in-python"]], "What is Compiler?": [[90, "what-is-compiler"]], "What is DataFrame in Pandas": [[124, "what-is-dataframe-in-pandas"]], "What is Dictionary in Python?": [[47, "what-is-dictionary-in-python"]], "What is Distribution Plots?": [[145, "what-is-distribution-plots"]], "What is Interpreter?": [[90, "what-is-interpreter"]], "What is List in Python?": [[45, "what-is-list-in-python"]], "What is MyST?": [[19, "what-is-myst"], [100, "what-is-myst"], [104, "what-is-myst"]], "What is Name in Python?": [[88, "what-is-name-in-python"]], "What is Set in Python?": [[48, "what-is-set-in-python"]], "What is String in Python?": [[44, "what-is-string-in-python"]], "What is Tuple in Python?": [[46, "what-is-tuple-in-python"]], "What is a Namespace in Python?": [[88, "what-is-a-namespace-in-python"]], "What is a function in Python?": [[66, "what-is-a-function-in-python"]], "What is cluster map?": [[156, "what-is-cluster-map"]], "What is for loop in Python?": [[39, "what-is-for-loop-in-python"]], "What is global keyword?": [[68, "what-is-global-keyword"]], "What is heat map?": [[155, "what-is-heat-map"]], "What is hstack?": [[121, "what-is-hstack"]], "What is math module in Python?": [[74, "what-is-math-module-in-python"]], "What is recursion?": [[70, "what-is-recursion"]], "What is self in Python?": [[98, "what-is-self-in-python"]], "What is vstack?": [[121, "what-is-vstack"]], "What is while loop in Python?": [[40, "what-is-while-loop-in-python"]], "What\u2019s inside datetime?": [[51, "whats-inside-datetime"]], "When do we have closures?": [[28, "when-do-we-have-closures"]], "When to use Decimal instead of float?": [[43, "when-to-use-decimal-instead-of-float"]], "When to use closures?": [[28, "when-to-use-closures"]], "While loop in Python FAQs": [[40, "while-loop-in-python-faqs"]], "Why Learn Python?": [[21, "why-learn-python"]], "Why and When to use while loop in Python": [[40, "why-and-when-to-use-while-loop-in-python"]], "Why is self explicitly defined everytime?": [[98, "why-is-self-explicitly-defined-everytime"]], "Why should we use Tuple? (Advantages of Tuple)": [[46, "why-should-we-use-tuple-advantages-of-tuple"]], "Why super() keyword": [[95, "why-super-keyword"]], "Why use NumPy?": [[117, "why-use-numpy"]], "Why use for loop?": [[39, "why-use-for-loop"]], "Wide format (untidy)": [[155, "wide-format-untidy"]], "Working of for loop for Iterators": [[26, "working-of-for-loop-for-iterators"]], "Working with large amounts of data": [[135, "working-with-large-amounts-of-data"]], "World Happiness Report 2017": [[8, "world-happiness-report-2017"]], "Wrap up": [[72, "wrap-up"]], "Writing the \u201cHello, World!\u201d Program": [[63, "writing-the-hello-world-program"], [79, "writing-the-hello-world-program"]], "Zero or more times *": [[31, "zero-or-more-times"]], "Zero or one time ?": [[31, "zero-or-one-time"]], "Zip": [[63, "zip"]], "[] . ^ $ * + ? {} () \\ |": [[31, "id1"]], "\\A - Matches if the specified characters are at the start of a string.": [[31, "a-matches-if-the-specified-characters-are-at-the-start-of-a-string"]], "\\B - Opposite of \\b. Matches if the specified characters are not at the beginning or end of a word.": [[31, "b-opposite-of-b-matches-if-the-specified-characters-are-not-at-the-beginning-or-end-of-a-word"]], "\\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \\t\\n\\r\\f\\v].": [[31, "s-matches-where-a-string-contains-any-non-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\W - Matches any non-alphanumeric character. Equivalent to [^a-zA-Z0-9_].": [[31, "w-matches-any-non-alphanumeric-character-equivalent-to-a-za-z0-9"]], "\\Z - Matches if the specified characters are at the end of a string.": [[31, "z-matches-if-the-specified-characters-are-at-the-end-of-a-string"]], "\\b - Matches if the specified characters are at the beginning or end of a word.": [[31, "b-matches-if-the-specified-characters-are-at-the-beginning-or-end-of-a-word"]], "\\d - Matches any non-decimal digit. Equivalent to [^0-9]": [[31, "d-matches-any-non-decimal-digit-equivalent-to-0-9"]], "\\s - Matches where a string contains any whitespace character. Equivalent to [ \\t\\n\\r\\f\\v].": [[31, "s-matches-where-a-string-contains-any-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.": [[31, "w-matches-any-alphanumeric-character-digits-and-alphabets-equivalent-to-a-za-z0-9-by-the-way-underscore-is-also-considered-an-alphanumeric-character"]], "__init__() is not a constructor": [[98, "init-is-not-a-constructor"]], "a) break in for loop": [[39, "a-break-in-for-loop"]], "a) break in while loop": [[40, "a-break-in-while-loop"]], "all(dict) - The all() function returns True when all elements in the given iterable are true. If not, it returns False.": [[47, "all-dict-the-all-function-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "all(list) - The method all() method returns True when all elements in the given iterable are true. If not, it returns False.": [[45, "all-list-the-method-all-method-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "any(dict) - The any() function returns True if any element of an iterable is True. If not, any() returns False.": [[47, "any-dict-the-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "any(list) - any() function returns True if any element of an iterable is True. If not, any() returns False.": [[45, "any-list-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "append() - The append() method adds an item to the end of the list.": [[45, "append-the-append-method-adds-an-item-to-the-end-of-the-list"]], "arange()": [[121, "arange"]], "asarray()": [[121, "asarray"]], "b) continue in for loop": [[39, "b-continue-in-for-loop"]], "b) continue in while loop": [[40, "b-continue-in-while-loop"]], "boxplot() and violinplot()": [[150, "boxplot-and-violinplot"]], "c) pass in for loop": [[39, "c-pass-in-for-loop"]], "c) pass in while loop": [[40, "c-pass-in-while-loop"]], "clear() - The clear() method removes all items from the list.": [[45, "clear-the-clear-method-removes-all-items-from-the-list"]], "clear() - The method clear() removes all items from the dictionary.": [[47, "clear-the-method-clear-removes-all-items-from-the-dictionary"]], "continue statement in while loop": [[41, "continue-statement-in-while-loop"]], "continue statement with else statements": [[41, "continue-statement-with-else-statements"]], "copy()  - The copy() method returns a shallow copy of the list.": [[45, "copy-the-copy-method-returns-a-shallow-copy-of-the-list"]], "copy() - The method copy() returns a shallow copy of the dictionary.": [[47, "copy-the-method-copy-returns-a-shallow-copy-of-the-dictionary"]], "count() - The count() method returns the number of times the specified element appears in the list.": [[45, "count-the-count-method-returns-the-number-of-times-the-specified-element-appears-in-the-list"]], "datetime.date Class": [[51, "datetime-date-class"]], "datetime.datetime": [[51, "datetime-datetime"]], "datetime.time": [[51, "datetime-time"]], "datetime.timedelta": [[51, "datetime-timedelta"]], "extend() - The extend() method adds all the elements of an iterable (list, tuple, string etc.) to the end of the list.": [[45, "extend-the-extend-method-adds-all-the-elements-of-an-iterable-list-tuple-string-etc-to-the-end-of-the-list"]], "for  loop in one line": [[39, "for-loop-in-one-line"]], "for loop inside for loop": [[39, "for-loop-inside-for-loop"]], "for loop inside while loop": [[40, "for-loop-inside-while-loop"]], "for loop with else": [[39, "for-loop-with-else"]], "for loop with if-else": [[39, "for-loop-with-if-else"]], "for loop with range() function": [[39, "for-loop-with-range-function"]], "fromkeys() - The method fromkeys() creates a new dictionary with keys from seq and values set to value.": [[47, "fromkeys-the-method-fromkeys-creates-a-new-dictionary-with-keys-from-seq-and-values-set-to-value"]], "heatmap": [[155, "heatmap"]], "heatmap colors": [[155, "heatmap-colors"]], "heatmap data": [[155, "heatmap-data"]], "if-elif-else statements and Logical Operator": [[37, "if-elif-else-statements-and-logical-operator"]], "if-elif-else statements or Logical Operator": [[37, "if-elif-else-statements-or-logical-operator"]], "if-elif-else statements with logical operators": [[37, "if-elif-else-statements-with-logical-operators"]], "import all names": [[72, "import-all-names"]], "import multiple modules": [[72, "import-multiple-modules"]], "import with renaming": [[72, "import-with-renaming"]], "index() - The index() method returns the index of the specified element in the list.": [[45, "index-the-index-method-returns-the-index-of-the-specified-element-in-the-list"]], "insert() - The insert() method inserts an element to the list at the specified index.": [[45, "insert-the-insert-method-inserts-an-element-to-the-list-at-the-specified-index"]], "issubclass()": [[95, "issubclass"]], "itmes() - The method items() returns a list of dict\u2019s (key, value) tuple pairs.": [[47, "itmes-the-method-items-returns-a-list-of-dicts-key-value-tuple-pairs"]], "keys() - The method keys() returns a list of all the available keys in the dictionary.": [[47, "keys-the-method-keys-returns-a-list-of-all-the-available-keys-in-the-dictionary"]], "lambda function use with filter()": [[71, "lambda-function-use-with-filter"]], "lambda function with map()": [[71, "lambda-function-with-map"]], "lambda function with reduce()": [[71, "lambda-function-with-reduce"]], "len(dict) - The len() function gives the total length of the dictionary. This would be equal to the number of items in the dictionary.": [[47, "len-dict-the-len-function-gives-the-total-length-of-the-dictionary-this-would-be-equal-to-the-number-of-items-in-the-dictionary"]], "len(list) - The len() method returns the number of elements in the list.": [[45, "len-list-the-len-method-returns-the-number-of-elements-in-the-list"]], "len(tuple) - The len() method returns the number of elements in the tuple.": [[46, "len-tuple-the-len-method-returns-the-number-of-elements-in-the-tuple"]], "math module Functions:": [[72, "math-module-functions"]], "max(list) - The max() method returns the elements from the list with maximum value.": [[45, "max-list-the-max-method-returns-the-elements-from-the-list-with-maximum-value"]], "max(tuple) - The max() method returns the elements from the tuple with maximum value. Type of element should be same otherwise complier throw TypeError.": [[46, "max-tuple-the-max-method-returns-the-elements-from-the-tuple-with-maximum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "max, min, argmax, argmin": [[118, "max-min-argmax-argmin"]], "min(list) - this method is used to get min value from the list. In Python3 lists element\u2019s type should be same otherwise compiler throw type Error.": [[45, "min-list-this-method-is-used-to-get-min-value-from-the-list-in-python3-lists-elements-type-should-be-same-otherwise-compiler-throw-type-error"]], "min(tuple) - The min() method returns the elements from the tuple with minimum value. Type of element should be same otherwise complier throw TypeError.": [[46, "min-tuple-the-min-method-returns-the-elements-from-the-tuple-with-minimum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "pop() - The pop() method removes the item at the given index from the list and returns the removed item.": [[45, "pop-the-pop-method-removes-the-item-at-the-given-index-from-the-list-and-returns-the-removed-item"]], "rand": [[118, "rand"]], "randint": [[118, "randint"]], "randn": [[118, "randn"]], "remove() - The remove() method removes the first matching element (which is passed as an argument) from the list.": [[45, "remove-the-remove-method-removes-the-first-matching-element-which-is-passed-as-an-argument-from-the-list"]], "reverse()  - The reverse() method reverses the elements of the list.": [[45, "reverse-the-reverse-method-reverses-the-elements-of-the-list"]], "self in Python, Demystified": [[98, "self-in-python-demystified"]], "setdefault() - The method setdefault() is similar to get but will set dict[key] = default if key is not already in dict.": [[47, "setdefault-the-method-setdefault-is-similar-to-get-but-will-set-dict-key-default-if-key-is-not-already-in-dict"]], "sort()  - The sort() method sorts the elements of a given list in a specific ascending or descending order.": [[45, "sort-the-sort-method-sorts-the-elements-of-a-given-list-in-a-specific-ascending-or-descending-order"]], "sorted(dict) - The sorted() function sorts the elements of a given iterable in a specific order (either ascending or descending) and returns the sorted iterable as a list.": [[45, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [46, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [47, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"]], "str(dict) - The str() function produces a printable string representation of a dictionary.": [[47, "str-dict-the-str-function-produces-a-printable-string-representation-of-a-dictionary"]], "time.sleep() in multithreaded programs": [[58, "time-sleep-in-multithreaded-programs"]], "time.struct_time Class": [[57, "time-struct-time-class"]], "tuple(seq) - The tuple() method converts a list of items into tuples.": [[46, "tuple-seq-the-tuple-method-converts-a-list-of-items-into-tuples"]], "type() - The type() function returns the type of the passed variable. If passed variable is dictionary then it would return a dictionary type.": [[47, "type-the-type-function-returns-the-type-of-the-passed-variable-if-passed-variable-is-dictionary-then-it-would-return-a-dictionary-type"]], "update() - The method update() adds dictionary dict2\u2019s key-values pairs in to dict. This function does not return anything.": [[47, "update-the-method-update-adds-dictionary-dict2s-key-values-pairs-in-to-dict-this-function-does-not-return-anything"]], "value() - The method values() returns a list of all the values available in a given dictionary.": [[47, "value-the-method-values-returns-a-list-of-all-the-values-available-in-a-given-dictionary"]], "while loop inside for loop": [[39, "while-loop-inside-for-loop"]], "while loop inside while loop": [[40, "while-loop-inside-while-loop"]], "while loop with else": [[40, "while-loop-with-else"]], "while loop with if-else": [[40, "while-loop-with-if-else"]], "you output should look like this:": [[93, "you-output-should-look-like-this"]], "\ud83d\udcbb Exercises  \u279e <span class='label label-default'>List</span>": [[36, "exercises-list"], [45, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Date and Time</span>": [[56, "exercises-date-and-time"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Dictionary</span>": [[47, "exercises-dictionary"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Exceptions Handling</span>": [[63, "exercises-exceptions-handling"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Files</span>": [[60, "exercises-files"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Functions</span>": [[66, "exercises-functions"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Higher order functions, Closure and Decorators</span>": [[29, "exercises-higher-order-functions-closure-and-decorators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List Comprehension</span>": [[49, "exercises-list-comprehension"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List</span>": [[37, "exercises-list"], [39, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Module</span>": [[72, "exercises-module"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Objects and Classes</span>": [[93, "exercises-objects-and-classes"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Operators</span>": [[87, "exercises-operators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Python Errors</span>": [[62, "exercises-python-errors"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>RegEx</span>": [[31, "exercises-regex"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Sets</span>": [[48, "exercises-sets"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>String</span>": [[44, "exercises-string"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Tuple</span>": [[46, "exercises-tuple"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Variables</span>": [[82, "exercises-variables"]]}, "docnames": ["content/concepts/anomaly-detection", "content/concepts/concepts", "content/concepts/k-means", "content/concepts/linear-regression", "content/concepts/logistic-regression", "content/concepts/markdown-notebooks", "content/concepts/neural-networks", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo", "content/concepts/notebooks/data/README", "content/concepts/notebooks/k_means/k_means_demo", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo", "content/concepts/notebooks/linear_regression/non_linear_regression_demo", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo", "content/core/markdown", "content/core/mymarkdown", "content/essentials/000_Intro_to_Python", "content/essentials/intro_mathematics", "content/essentials/intro_python", "content/essentials/intro_statistics", "content/essentials/mathematics/1_linear_algebra", "content/essentials/python/advanced/001_Python_Iterators", "content/essentials/python/advanced/002_Python_Generators", "content/essentials/python/advanced/003_Python_Closure", "content/essentials/python/advanced/004_Python_Decorators", "content/essentials/python/advanced/005_Python_Property", "content/essentials/python/advanced/006_Python_RegEx", "content/essentials/python/advanced/Python_args_and_kwargs", "content/essentials/python/advanced/advanced_toc", "content/essentials/python/controlflow/000_Python_Flow_Control_statement", "content/essentials/python/controlflow/001_Python_if_statement", "content/essentials/python/controlflow/002_Python_if_else_statement", "content/essentials/python/controlflow/003_Python_if_elif_else_statement", "content/essentials/python/controlflow/004_Python_Nested_if_statement", "content/essentials/python/controlflow/005_Python_for_Loop", "content/essentials/python/controlflow/006_Python_while_Loop", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements", "content/essentials/python/controlflow/controlflow_toc", "content/essentials/python/datatypes/001_Python_Numbers", "content/essentials/python/datatypes/002_Python_String", "content/essentials/python/datatypes/003_Python_List", "content/essentials/python/datatypes/004_Python_Tuple", "content/essentials/python/datatypes/005_Python_Dictionary", "content/essentials/python/datatypes/006_Python_Sets", "content/essentials/python/datatypes/Python_List_Comprehension", "content/essentials/python/datatypes/datatypes_toc", "content/essentials/python/datetime/001_Python_datetime_Module", "content/essentials/python/datetime/002_Python_strftime", "content/essentials/python/datetime/003_Python_strptime", "content/essentials/python/datetime/004_Python_current_date_and_time", "content/essentials/python/datetime/005_Python_get_current_time", "content/essentials/python/datetime/006_Python_timestamp_to_datetime", "content/essentials/python/datetime/007_Python_time_Module", "content/essentials/python/datetime/008_Python_sleep", "content/essentials/python/datetime/datetime_toc", "content/essentials/python/files/001_Python_File_Input_Output", "content/essentials/python/files/002_Python_File_Directory", "content/essentials/python/files/003_Python_File_Exception", "content/essentials/python/files/004_Python_Exceptions_Handling", "content/essentials/python/files/005_Python_User_defined_Exceptions", "content/essentials/python/files/files_toc", "content/essentials/python/functions/001_Python_Functions", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal", "content/essentials/python/functions/003_Python_Function_global_Keywords", "content/essentials/python/functions/004_Python_Function_Arguments", "content/essentials/python/functions/005_Python_Function_Recursion", "content/essentials/python/functions/006_Python_Function_Anonymous", "content/essentials/python/functions/007_Python_Function_Module", "content/essentials/python/functions/008_Python_Function_random_Module", "content/essentials/python/functions/009_Python_Function_math_Module", "content/essentials/python/functions/010_Python_Function_Package", "content/essentials/python/functions/Python_Docstrings", "content/essentials/python/functions/Python_User_defined_Functions", "content/essentials/python/functions/functions_toc", "content/essentials/python/introduction/002_Hello_World", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments", "content/essentials/python/introduction/005_Python_Variables_&_Constants", "content/essentials/python/introduction/006_Python_Literals", "content/essentials/python/introduction/007_Python_Data_Types", "content/essentials/python/introduction/008_Python_Type_Conversion", "content/essentials/python/introduction/009_Python_Input_Output_Import", "content/essentials/python/introduction/010_Python_Operators", "content/essentials/python/introduction/011_Python_Namespace_and_Scope", "content/essentials/python/introduction/1_data_structures_and_agorithms", "content/essentials/python/introduction/Interpreter_Vs_Compiler", "content/essentials/python/introduction/constant", "content/essentials/python/introduction/intro_toc", "content/essentials/python/objects/001_Python_OOPs_Concepts", "content/essentials/python/objects/002_Python_Classes_and_Objects", "content/essentials/python/objects/003_Python_Inheritance", "content/essentials/python/objects/004_Python_Operator_Overloading", "content/essentials/python/objects/objects_toc", "content/essentials/python/objects/self_in_Python_Demystified", "content/essentials/statistics/statistics", "content/markdown", "content/markdown-notebooks", "content/mymarkdown", "content/notebooks", "content/real-world/markdown", "content/real-world/mymarkdown", "content/tools/hf/intro", "content/tools/intro_tools", "content/tools/langchain/intro", "content/tools/langchain/langchain-modules", "content/tools/langchain/langgraph", "content/tools/langchain/langserve", "content/tools/langchain/langsmith", "content/tools/langchain/lcel", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2", "content/tools/matplotlib/matplotlib_toc", "content/tools/numpy/001_Python_NumPy", "content/tools/numpy/002_Python_NumPy_Array_Part1", "content/tools/numpy/003_Python_NumPy_Array_Part2", "content/tools/numpy/004_Python_NumPy_Array_Part3", "content/tools/numpy/005_Python_NumPy_Array_Part4", "content/tools/numpy/Python_Numpy_Exercises_with_hints", "content/tools/numpy/numpy_toc", "content/tools/pandas/001_Python_Pandas_DataFrame", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index", "content/tools/pandas/002_Python_Pandas_Exercise_1", "content/tools/pandas/003_Python_Pandas_Exercise_2", "content/tools/pandas/pandas_toc", "content/tools/seaborn/001_Seaborn_Loading_Dataset", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics", "content/tools/seaborn/003_Matplotlib_vs_Seaborn", "content/tools/seaborn/004_Seaborn_Color_Palettes", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots", "content/tools/seaborn/008_Seaborn_Distribution_Plots", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot", "content/tools/seaborn/016_Seaborn_PairGrid_Plot", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot", "content/tools/seaborn/018_Seaborn_Heat_Map", "content/tools/seaborn/019_Seaborn_Cluster_Map", "content/tools/seaborn/seaborn_toc", "content/tools/tools-for-llms", "content/tools/tools-for-ml", "content/tools/tools-for-nn", "curriculum", "intro"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["content/concepts/anomaly-detection.md", "content/concepts/concepts.md", "content/concepts/k-means.md", "content/concepts/linear-regression.md", "content/concepts/logistic-regression.md", "content/concepts/markdown-notebooks.md", "content/concepts/neural-networks.md", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo.ipynb", "content/concepts/notebooks/data/README.md", "content/concepts/notebooks/k_means/k_means_demo.ipynb", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/non_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo.ipynb", "content/core/markdown.md", "content/core/mymarkdown.md", "content/essentials/000_Intro_to_Python.ipynb", "content/essentials/intro_mathematics.ipynb", "content/essentials/intro_python.ipynb", "content/essentials/intro_statistics.ipynb", "content/essentials/mathematics/1_linear_algebra.ipynb", "content/essentials/python/advanced/001_Python_Iterators.ipynb", "content/essentials/python/advanced/002_Python_Generators.ipynb", "content/essentials/python/advanced/003_Python_Closure.ipynb", "content/essentials/python/advanced/004_Python_Decorators.ipynb", "content/essentials/python/advanced/005_Python_Property.ipynb", "content/essentials/python/advanced/006_Python_RegEx.ipynb", "content/essentials/python/advanced/Python_args_and_kwargs.ipynb", "content/essentials/python/advanced/advanced_toc.md", "content/essentials/python/controlflow/000_Python_Flow_Control_statement.ipynb", "content/essentials/python/controlflow/001_Python_if_statement.ipynb", "content/essentials/python/controlflow/002_Python_if_else_statement.ipynb", "content/essentials/python/controlflow/003_Python_if_elif_else_statement.ipynb", "content/essentials/python/controlflow/004_Python_Nested_if_statement.ipynb", "content/essentials/python/controlflow/005_Python_for_Loop.ipynb", "content/essentials/python/controlflow/006_Python_while_Loop.ipynb", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements.ipynb", "content/essentials/python/controlflow/controlflow_toc.md", "content/essentials/python/datatypes/001_Python_Numbers.ipynb", "content/essentials/python/datatypes/002_Python_String.ipynb", "content/essentials/python/datatypes/003_Python_List.ipynb", "content/essentials/python/datatypes/004_Python_Tuple.ipynb", "content/essentials/python/datatypes/005_Python_Dictionary.ipynb", "content/essentials/python/datatypes/006_Python_Sets.ipynb", "content/essentials/python/datatypes/Python_List_Comprehension.ipynb", "content/essentials/python/datatypes/datatypes_toc.md", "content/essentials/python/datetime/001_Python_datetime_Module.ipynb", "content/essentials/python/datetime/002_Python_strftime.ipynb", "content/essentials/python/datetime/003_Python_strptime.ipynb", "content/essentials/python/datetime/004_Python_current_date_and_time.ipynb", "content/essentials/python/datetime/005_Python_get_current_time.ipynb", "content/essentials/python/datetime/006_Python_timestamp_to_datetime.ipynb", "content/essentials/python/datetime/007_Python_time_Module.ipynb", "content/essentials/python/datetime/008_Python_sleep.ipynb", "content/essentials/python/datetime/datetime_toc.md", "content/essentials/python/files/001_Python_File_Input_Output.ipynb", "content/essentials/python/files/002_Python_File_Directory.ipynb", "content/essentials/python/files/003_Python_File_Exception.ipynb", "content/essentials/python/files/004_Python_Exceptions_Handling.ipynb", "content/essentials/python/files/005_Python_User_defined_Exceptions.ipynb", "content/essentials/python/files/files_toc.md", "content/essentials/python/functions/001_Python_Functions.ipynb", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal.ipynb", "content/essentials/python/functions/003_Python_Function_global_Keywords.ipynb", "content/essentials/python/functions/004_Python_Function_Arguments.ipynb", "content/essentials/python/functions/005_Python_Function_Recursion.ipynb", "content/essentials/python/functions/006_Python_Function_Anonymous.ipynb", "content/essentials/python/functions/007_Python_Function_Module.ipynb", "content/essentials/python/functions/008_Python_Function_random_Module.ipynb", "content/essentials/python/functions/009_Python_Function_math_Module.ipynb", "content/essentials/python/functions/010_Python_Function_Package.ipynb", "content/essentials/python/functions/Python_Docstrings.ipynb", "content/essentials/python/functions/Python_User_defined_Functions.ipynb", "content/essentials/python/functions/functions_toc.md", "content/essentials/python/introduction/002_Hello_World.ipynb", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers.ipynb", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments.ipynb", "content/essentials/python/introduction/005_Python_Variables_&_Constants.ipynb", "content/essentials/python/introduction/006_Python_Literals.ipynb", "content/essentials/python/introduction/007_Python_Data_Types.ipynb", "content/essentials/python/introduction/008_Python_Type_Conversion.ipynb", "content/essentials/python/introduction/009_Python_Input_Output_Import.ipynb", "content/essentials/python/introduction/010_Python_Operators.ipynb", "content/essentials/python/introduction/011_Python_Namespace_and_Scope.ipynb", "content/essentials/python/introduction/1_data_structures_and_agorithms.ipynb", "content/essentials/python/introduction/Interpreter_Vs_Compiler.ipynb", "content/essentials/python/introduction/constant.ipynb", "content/essentials/python/introduction/intro_toc.md", "content/essentials/python/objects/001_Python_OOPs_Concepts.ipynb", "content/essentials/python/objects/002_Python_Classes_and_Objects.ipynb", "content/essentials/python/objects/003_Python_Inheritance.ipynb", "content/essentials/python/objects/004_Python_Operator_Overloading.ipynb", "content/essentials/python/objects/objects_toc.md", "content/essentials/python/objects/self_in_Python_Demystified.ipynb", "content/essentials/statistics/statistics.ipynb", "content/markdown.md", "content/markdown-notebooks.md", "content/mymarkdown.md", "content/notebooks.ipynb", "content/real-world/markdown.md", "content/real-world/mymarkdown.md", "content/tools/hf/intro.md", "content/tools/intro_tools.ipynb", "content/tools/langchain/intro.md", "content/tools/langchain/langchain-modules.md", "content/tools/langchain/langgraph.md", "content/tools/langchain/langserve.md", "content/tools/langchain/langsmith.md", "content/tools/langchain/lcel.md", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1.ipynb", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2.ipynb", "content/tools/matplotlib/matplotlib_toc.md", "content/tools/numpy/001_Python_NumPy.ipynb", "content/tools/numpy/002_Python_NumPy_Array_Part1.ipynb", "content/tools/numpy/003_Python_NumPy_Array_Part2.ipynb", "content/tools/numpy/004_Python_NumPy_Array_Part3.ipynb", "content/tools/numpy/005_Python_NumPy_Array_Part4.ipynb", "content/tools/numpy/Python_Numpy_Exercises_with_hints.ipynb", "content/tools/numpy/numpy_toc.md", "content/tools/pandas/001_Python_Pandas_DataFrame.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index.ipynb", "content/tools/pandas/002_Python_Pandas_Exercise_1.ipynb", "content/tools/pandas/003_Python_Pandas_Exercise_2.ipynb", "content/tools/pandas/pandas_toc.md", "content/tools/seaborn/001_Seaborn_Loading_Dataset.ipynb", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics.ipynb", "content/tools/seaborn/003_Matplotlib_vs_Seaborn.ipynb", "content/tools/seaborn/004_Seaborn_Color_Palettes.ipynb", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot.ipynb", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot.ipynb", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots.ipynb", "content/tools/seaborn/008_Seaborn_Distribution_Plots.ipynb", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot.ipynb", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot.ipynb", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot.ipynb", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot.ipynb", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot.ipynb", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot.ipynb", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot.ipynb", "content/tools/seaborn/016_Seaborn_PairGrid_Plot.ipynb", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot.ipynb", "content/tools/seaborn/018_Seaborn_Heat_Map.ipynb", "content/tools/seaborn/019_Seaborn_Cluster_Map.ipynb", "content/tools/seaborn/seaborn_toc.md", "content/tools/tools-for-llms.md", "content/tools/tools-for-ml.md", "content/tools/tools-for-nn.md", "curriculum.md", "intro.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 26, 27, 28, 29, 30, 34, 35, 38, 39, 40, 41, 43, 44, 46, 49, 53, 55, 56, 57, 58, 60, 62, 63, 66, 67, 68, 70, 71, 72, 74, 76, 77, 81, 83, 84, 85, 86, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 118, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159, 162], "0": [0, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 27, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 57, 58, 60, 62, 63, 64, 66, 68, 69, 71, 72, 73, 74, 80, 82, 83, 84, 85, 86, 87, 90, 93, 94, 95, 96, 98, 99, 103, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "00": [51, 52, 53, 55, 57, 58, 86, 124, 125, 127, 142, 143, 149, 152], "000": [43, 143, 148], "0000": [13, 57, 87], "00000": 124, "000000": [44, 52, 53, 86, 124, 135, 136, 138, 143, 154], "0000003": 44, "000007": 15, "000013": 16, "000032": 15, "000036": 16, "000066": 15, "000079": 15, "0000a3": 150, "0001": [43, 51, 57], "000110011001100110011": 43, "000112": 15, "000126": 15, "000155": 15, "000174": 16, "000191": 15, "000214": 15, "000216": 15, "000238": 16, "000269": 16, "000285": 16, "000301": 16, "000325": 16, "000367": 16, "000385": 15, "000410": 16, "000456": 16, "000465": 16, "000550": 16, "000683": 10, "000743": 16, "000917": 15, "000a": 43, "001": [52, 53], "0010": 87, "0011": 87, "001100": 16, "001139": 16, "001178": 16, "00121062e": 152, "001232": 16, "001262": 16, "001270": 15, "001354": 16, "00140327e": 152, "001619": 16, "001665": 16, "001835": 15, "001868": 154, "001873": 15, "001899": 16, "001_python_file_input_output": 61, "002": [52, 53], "002108": 16, "002177": 16, "002200": 16, "002327879593869": 121, "00232788": 121, "002464": 16, "002513": 16, "002841": 16, "002895": 16, "002940": 16, "002_python_file_directori": 61, "003": 12, "003029": 16, "003152": 16, "003456": 15, "003478": 16, "00357518e": 152, "003780": 16, "003845": 16, "003_python_file_except": 61, "004079": 15, "004274": 16, "004291": 16, "004785": 12, "004838": 15, "004_python_exceptions_handl": 61, "005": 152, "005294": 16, "005308": 16, "005356": 154, "005408": 16, "005436": 15, "005742": 16, "005743": 15, "005837": 15, "005978": 16, "005_python_user_defined_except": 61, "00616708": 118, "006191": 150, "006201": 16, "006730": 15, "007": [86, 152], "007120": 15, "007234": 154, "007320": 16, "007525": 15, "00778181e": 152, "007860": 16, "00786338": 121, "007995": 15, "007_python_function_modul": 60, "00826323e": 152, "00856914e": 152, "008831": 16, "009": 44, "009066": 16, "009417": 15, "009509": 16, "009529": 16, "00960206e": 152, "009757": 16, "01": [10, 12, 44, 51, 52, 53, 55, 57, 58, 86, 138, 142, 145, 147, 148, 149, 150, 152, 154], "010": [44, 152], "0100": 87, "010000": 124, "0101": 87, "010289": 16, "010311": 15, "01032310e": 152, "01051775e": 152, "010527": 16, "010755": 16, "011255": 15, "011523": 150, "011630": 16, "011743": 16, "01183409e": 152, "012098": 16, "012345": 44, "0123456789": 72, "012986": 16, "013148": 16, "013316": 16, "013350": 16, "01345985e": 152, "013474": 16, "013555": 16, "013763": 16, "013853": 16, "014127": 16, "014374": 15, "014745": 16, "015672": 15, "015862": 16, "015877": 16, "016288": 16, "016705": 14, "01710843e": 152, "017837": 16, "019028": 15, "01919923e": 152, "019404": 16, "019542": 16, "019561": 15, "019608": 124, "019675": 16, "019745": 16, "019922": 11, "01_learn_python4data": [61, 72, 136], "01x345": 44, "02": [11, 51, 52, 53, 57, 58, 138, 152], "020391": 15, "020408": 135, "021069": 150, "021708": 14, "021838": 16, "021854": 15, "02210": [37, 39], "022326": 15, "022727": 135, "022960": 16, "02319487": 121, "023622": 16, "024045": 16, "024052": 14, "024253": 16, "025000": 143, "025347": 16, "025388": 16, "02539500e": 152, "025531": 16, "025549": 15, "025678": 16, "026005": 16, "026023": 16, "026366": 16, "026648": 16, "02683718e": 152, "027404": 16, "027513": 16, "028090": 16, "028452": 14, "028944": 16, "028969": 16, "02919730e": 152, "02928161e": 152, "029371": 16, "029398": 16, "02989209e": 152, "03": [23, 44, 58, 138, 152], "030114": 150, "03068156e": 152, "030774": 138, "030971": 16, "030e2eec799d": 29, "031250": 135, "03145352": 121, "032258": 135, "032475": 15, "03247675": 121, "032878": 15, "033011": 16, "033088": 16, "033175": 15, "033192": 16, "033395": 16, "03348578e": 152, "03387531e": 152, "033911": 16, "034357": 14, "03461004": 121, "035009": 16, "03505598723366": 72, "035149": 15, "035714": 135, "036166": 16, "036300": 16, "037224": 15, "037445": 16, "037732": 16, "037747": 16, "038202": 16, "038580": 15, "039631": 150, "039698": 16, "039919": 16, "03ed55": 72, "03pm": 52, "04": [51, 57, 58, 138, 142], "040000": 124, "040986": 16, "041750": 16, "042011": 15, "042190": 14, "042849": 7, "042857": 135, "042991": 16, "043293": 16, "044382": 16, "045016": 16, "045985": 16, "04617067e": 152, "046456": [10, 12], "046484": 16, "046815": 7, "04702762e": 152, "047295": 15, "047347": 16, "04763428": 118, "048227": 16, "048779": 16, "048819": 11, "049796": 16, "04_python_funct": [60, 72], "05": [7, 52, 53, 58, 138], "0500": [148, 150], "05017144e": 152, "050218": 16, "050755": 16, "05082974": 118, "051020": 135, "051179": 16, "051267": 14, "051891": 16, "05233094e": 152, "052387": 11, "053816": 16, "05473060e": 152, "055217": 16, "055903": 16, "056380": 15, "05655136772680869": 73, "05669558e": 152, "057333": 138, "058497": 15, "058710": 16, "058824": 135, "058849": 16, "05908a030c74": 94, "059554": 16, "05_python_fil": 61, "06": [51, 52, 53, 54, 55, 57, 58, 138, 140], "061065": 16, "06161913e": 152, "061689": 16, "061915": 16, "062439": 16, "062500": 135, "063577": 154, "064516": 135, "065211": [10, 12], "065444": 16, "06563599e": 152, "065897": 16, "065937": 16, "06663512e": 152, "066667": 124, "068044": 11, "068645": 14, "06947804e": 152, "069723": 11, "07": [52, 53, 55, 58], "070254": 16, "070279": 16, "070574": 16, "0708": 148, "072182": 14, "073129": 10, "073160": 15, "073595": 16, "073709": 152, "073953": 16, "074074": 135, "07450952e": 152, "0750": 148, "07659773e": 152, "076923": 135, "077036": 150, "078020": 16, "079365": 16, "08": [51, 55, 57, 58], "080169": 152, "08143941": 118, "08309749e": 152, "083132": 14, "083174": 16, "083261": 16, "08333022e": 152, "083333": [124, 135], "084423": 16, "08553692": 120, "085536923187668": 72, "086334": 16, "086505": 16, "086688": 11, "086780": 15, "087": 10, "087328": 16, "087777": 16, "089286": 135, "09": [52, 53, 58], "090909": 135, "09090909090909": 72, "091695": 16, "091864": 10, "092742": 14, "093484": 16, "096154": 135, "096220": 16, "096812": 16, "09708521e": 152, "097538": [10, 12], "09790012e": 152, "098": 10, "098383": 16, "098661": 16, "098811": 16, "099350157876355": 121, "09935016": 121, "0_": 44, "0a4959e7a13b": 45, "0b": 43, "0b0001": 43, "0b10": [43, 87], "0b1010": 83, "0b1101011": 43, "0d17a834dca2": 69, "0ef33cc3a94d": 62, "0f0f0f": 141, "0f0f0f0f": 141, "0f73a35e8ce2": 80, "0j": [83, 87], "0o": 43, "0o12": 43, "0o15": 43, "0o310": 83, "0x": 43, "0x0000012c87c0af70": 28, "0x000001d284b3b430": 27, "0x000001d8aec3ac10": 94, "0x000001d8aec44eb0": 94, "0x000001d8aec7e1f0": 94, "0x000001d8aec7e4c0": 94, "0x000001d8aec7e5e0": 94, "0x00000218ffc65220": 96, "0x0000021e45765b20": 93, "0x0000021e45765dc0": 93, "0x00007ffad7cb2770": 28, "0x000a": 43, "0x12c": 83, "0x12c4cb88d90": 153, "0x12c4df5c1c0": 153, "0x12c4e273c70": 153, "0x12c50e26c10": 153, "0x12c53a52d60": 153, "0x12c53affc10": 153, "0x163ca247070": 156, "0x163cdf926d0": 156, "0x163ce3245e0": 156, "0x163cfcc79d0": 156, "0x163d0288250": 156, "0x163d05bfa60": 156, "0x163d0f2ae20": 156, "0x1662f00ac70": 144, "0x16633986eb0": 144, "0x166339f84c0": 144, "0x16635a26b80": 144, "0x16635a63550": 144, "0x170b84f24a0": 30, "0x1a11b1a6e80": 147, "0x1a11b2e7a00": 147, "0x1a11b349eb0": 147, "0x1a2186f5940": 154, "0x1a21896cac0": 154, "0x1a218c77d30": 154, "0x1a218d2d6a0": 154, "0x1a218de36a0": 154, "0x1a21a1a7310": 154, "0x1a21a449490": 154, "0x1a21a492c70": 154, "0x1a21b6eba00": 154, "0x1be276a14a8": 156, "0x1bfbd546670": 145, "0x1bfbe8c42b0": 145, "0x1bfbe8d2640": 145, "0x1bfbeacc8b0": 145, "0x1bfbf65d610": 145, "0x1ce07cb24f0": 150, "0x1ce07cc58e0": 150, "0x1da1f804700": 151, "0x1da1f8bf520": 151, "0x1da209c66d0": 151, "0x1da20f86b20": 151, "0x1da20fa4c10": 151, "0x1da214a06d0": 151, "0x1edcdfafd30": 152, "0x219288a7220": 143, "0x2192d5bb3a0": 143, "0x2192de12c70": 143, "0x2192dfa48b0": 143, "0x2192e06b910": 143, "0x2192e0be9d0": 143, "0x2192e328640": 143, "0x22c3a5e3ac0": 149, "0x22c3a722fd0": 149, "0x22c3b278670": 149, "0x22c3c78df40": 149, "0x22c3c8f1040": 149, "0x263397171f0": 141, "0x264e0145a90": 140, "0x26bc28689d0": 142, "0x26bc65bb8b0": 142, "0x26bc7611700": 142, "0x26bc7dd6cd0": 142, "0x26bc7eaf0a0": 142, "0x26bc8131250": 142, "0x26bc81b38b0": 142, "0x26bc81e5730": 142, "0x29872f94b20": 148, "0xfb": 43, "1": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 26, 28, 30, 32, 35, 36, 40, 43, 49, 57, 64, 67, 68, 69, 70, 71, 73, 74, 77, 88, 90, 94, 95, 96, 98, 99, 103, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 151, 152, 154, 155, 156], "10": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 27, 28, 29, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 52, 55, 58, 60, 62, 63, 64, 66, 67, 68, 69, 71, 72, 74, 80, 81, 82, 83, 84, 85, 86, 87, 89, 93, 94, 96, 98, 99, 103, 114, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "100": [12, 13, 14, 15, 16, 17, 18, 23, 24, 27, 31, 37, 39, 40, 41, 45, 47, 49, 66, 71, 72, 83, 87, 95, 96, 99, 103, 114, 118, 119, 121, 124, 125, 126, 135, 136, 139, 140, 143, 144, 145, 148, 149, 153, 154], "1000": [11, 13, 18, 40, 43, 49, 70, 82, 87, 93, 115, 121, 142, 148, 149, 150, 151, 152], "10000": [8, 15, 16, 17, 49, 115, 121, 124], "100000": [14, 49, 115, 138], "1000000000000000055511151231257827021181583404541015625": 43, "10026431e": 152, "101": [69, 94, 134, 135, 149, 150, 153, 154], "1010": 87, "101803": 12, "102": [69, 94, 124, 125, 134, 135, 136], "1024": 49, "10276143": 118, "103": [94, 134, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "104": [94, 124, 125, 135, 136], "104504": 15, "105": [10, 31, 72, 135], "1050": 44, "1053": 131, "1054": 131, "1055": 131, "1056": 131, "1057": 131, "106": 135, "106628291529549": 72, "106846": 16, "10696289e": 152, "107": [43, 135], "107072": 16, "107221": 13, "107353": 12, "108": 135, "108178": 16, "109": [69, 124, 135], "109299": 150, "1095522857580948": 146, "109553": 16, "1097501": 118, "1099_file": 82, "10_python_pandas_modul": 136, "10ffff_": 44, "11": [11, 14, 16, 27, 30, 36, 39, 41, 43, 44, 45, 47, 49, 53, 57, 58, 67, 71, 81, 83, 84, 87, 89, 93, 94, 114, 118, 119, 120, 121, 124, 128, 133, 135, 136, 138, 140, 148, 153, 154], "110": [135, 136], "1100": 44, "110110": 90, "110560": 16, "111": [87, 124, 125, 135, 136], "1110": 87, "1111": [31, 87], "111111": [86, 135], "11111111": 121, "112": [135, 136], "11222578": 7, "112483": 16, "11289431e": 152, "113": 135, "1134": 147, "1135": 147, "113538": 16, "1136": 147, "1137": 147, "1138": 147, "114": [124, 125, 135, 136], "11421774e": 152, "115": [124, 125, 135, 136], "1151515151515152": 140, "115551": 16, "115799": 10, "1158": 147, "1159": 147, "115971": 16, "116": 135, "1160": 147, "1161": 147, "1162": 147, "117": 135, "11734513e": 152, "117543": 16, "117647": 135, "117668": 16, "118": 135, "11818328e": 152, "119": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "119e50d96cfb": 62, "12": [7, 9, 11, 13, 15, 17, 18, 23, 27, 31, 32, 35, 36, 37, 38, 39, 41, 43, 44, 45, 47, 49, 52, 53, 55, 56, 57, 58, 62, 64, 66, 67, 71, 72, 83, 84, 86, 87, 89, 93, 98, 118, 119, 120, 121, 128, 135, 136, 140, 141, 142, 147, 149, 150, 152, 154, 155], "120": [3, 41, 69, 72, 124, 126, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "1200": 87, "12000": 115, "121": 135, "1212": 89, "121492": 16, "122": [11, 135], "122967": 16, "123": [11, 44, 85, 89, 135], "12336799": 118, "123456789": 44, "1234567890": [32, 83], "1234567890123456789": [43, 84], "12345678901234568": [43, 84], "12345678910": 40, "123774": 10, "124": [11, 85, 135], "124377": 16, "125": [11, 40, 49, 72, 114, 120, 135], "125000": 135, "1252": 138, "12587": 149, "126": [11, 135], "126257": 150, "126960000": 60, "127": [11, 114, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "1278387305019275": 140, "128": [11, 45, 49, 135], "128440": 124, "12872044e": 152, "129": [11, 135], "12940": [124, 125, 136, 143], "12945": 136, "1295210000": 60, "1296": [49, 138], "129861": 10, "13": [7, 11, 14, 27, 30, 40, 43, 44, 45, 47, 49, 52, 53, 55, 58, 62, 67, 69, 71, 72, 83, 85, 87, 93, 114, 119, 120, 121, 128, 135, 138, 143, 150, 152, 154], "130": [11, 124, 135], "131": [11, 135], "131910": 14, "132": [11, 135], "1326244364": 51, "133": [11, 135], "1333": 148, "134": [11, 135], "13409426e": 152, "13415": [124, 125, 136], "1345": 31, "13495": [124, 125, 136], "13499": 136, "135": [11, 135], "135925": 136, "136": [11, 135], "13680419e": 152, "137": [11, 135], "13756537093": 86, "137723281": 11, "1377422166": 60, "138": [11, 114, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "138264": 124, "139": [11, 135], "13914421e": 152, "13915538e": 152, "13950": [124, 125, 136], "13960670e": 152, "14": [7, 11, 12, 14, 16, 18, 23, 30, 31, 39, 41, 44, 45, 46, 47, 49, 54, 56, 58, 62, 66, 67, 82, 83, 84, 87, 91, 93, 94, 98, 114, 119, 120, 121, 135, 136, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "140": [11, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "14003": 143, "140708960741200": 88, "140708960741232": 88, "140708960741424": 88, "141": [11, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "14112001": 120, "1415": 44, "14159": [72, 74], "141592653589793": [43, 72, 86], "14183273e": 152, "142": [11, 135], "14204329": 121, "142705": 16, "142857": 135, "143": [11, 135], "144": [11, 40, 87, 135], "1445": [138, 147], "1446": 147, "1447": 147, "1448": 147, "1449": 147, "145": [11, 135], "1453": 138, "14577043e": 152, "146": [11, 27, 135], "146124": 16, "14613738e": 152, "146599183": 60, "147": [11, 135], "14770535": 118, "147751": 16, "148": [11, 120, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "148148": 135, "14847551e": 152, "149": [11, 135], "149320": 16, "14j": 83, "15": [7, 11, 14, 15, 16, 17, 18, 28, 30, 31, 32, 35, 36, 38, 39, 41, 43, 44, 45, 46, 47, 49, 52, 53, 57, 58, 63, 64, 66, 72, 84, 87, 93, 94, 114, 119, 120, 135, 136, 138, 140, 142, 147, 148, 150, 151, 152], "150": [11, 13, 14, 83, 96, 114, 115, 124, 135, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "1500": [142, 144], "15000": [64, 115], "150000": 115, "15097": 11, "151": [11, 135], "151165": 150, "1511893559": 51, "151786": 135, "152": [11, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "152862": 16, "1528797322": 52, "153": [40, 135], "153319": 10, "153527": [10, 12], "153883": 16, "154": [124, 125, 135, 136], "1545730073": 56, "1545925769": 57, "1545966844": 57, "1549": 132, "155": 135, "15514180e": 152, "156": [23, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "156250": 135, "156586": 15, "1568291": 149, "15687723e": 152, "157": 135, "15750": 136, "158": [135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "158023": 114, "1582568": 149, "159": 135, "159689": 12, "159790": 16, "16": [7, 11, 14, 26, 29, 30, 39, 40, 41, 43, 45, 46, 47, 49, 58, 64, 71, 72, 77, 82, 83, 84, 87, 93, 94, 95, 119, 120, 121, 135, 136, 138, 142, 143, 145, 147, 148, 149, 150, 153, 154], "160": [124, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "161": 135, "161006790": 60, "161290": 135, "161491": 15, "16188": 124, "162": [66, 135], "1624370069": 56, "1624370297": 57, "162875": 7, "163": 135, "163778": 16, "164": 135, "1647": 145, "165": 135, "16500": [124, 125, 136], "166": [16, 18, 135], "167": 135, "167204": 16, "168": [124, 125, 135, 136], "16807": 49, "168321": 52, "169": [135, 136], "16j": 83, "16pt": 150, "17": [11, 14, 30, 39, 40, 43, 45, 47, 49, 57, 58, 63, 64, 84, 93, 94, 95, 119, 127, 135, 136, 138, 146, 150, 154, 155], "170": 135, "1700": 17, "170215": 16, "17041474e": 152, "171": [124, 125, 135, 136], "17137357e": 152, "171588": 16, "171995": 136, "172": [57, 135], "17254901960784313": 143, "173": 135, "173469": 135, "174": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "174260": 7, "17450": [124, 125, 136], "175": [72, 114, 135], "175000": 115, "1752011936438014": 43, "176": [69, 72, 124, 125, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "176471": 135, "177": 135, "178": 135, "179": 135, "179027": 16, "17951135e": 152, "179585": 10, "1796": 39, "17995": 136, "18": [11, 14, 26, 30, 35, 36, 39, 41, 47, 48, 49, 51, 52, 54, 55, 58, 60, 64, 86, 87, 89, 94, 95, 114, 119, 124, 125, 127, 135, 136, 138, 149, 153, 154], "180": [40, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "18000": 115, "18089902e": 152, "181": 135, "18176766975113706": 140, "1819": [66, 69], "182": [135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "1821": 66, "1822565": 149, "183": [72, 135], "18324209e": 152, "18344": 136, "184": [135, 136], "184080": 11, "185": 135, "186": 135, "18644463e": 152, "186988000": 60, "187": [135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "187264": [10, 12], "187500": 135, "188": [124, 125, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "1882615260180538": 146, "188828": 16, "189": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "18920": 136, "19": [11, 14, 26, 30, 32, 39, 40, 44, 45, 48, 49, 57, 58, 64, 66, 67, 69, 83, 87, 94, 114, 119, 120, 124, 125, 127, 129, 130, 131, 133, 134, 135, 136, 140, 143, 146, 149], "190": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "1900": 124, "19000": 95, "190337": 14, "190504": 148, "190871": 114, "191": 135, "19116": 94, "192": 135, "192250": 14, "1926": 63, "1928": 39, "192985": 114, "193": [135, 136], "19305918e": 152, "193080": 114, "1937": 23, "194": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "194125062": 60, "1942": 31, "195": 135, "1953": 39, "19566591e": 152, "195915": 7, "196": [114, 121, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "196526332130161": 121, "1966": 44, "19680801": [24, 99, 103], "19692239e": 152, "197": [135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "1970": [51, 56, 57], "19735756e": 152, "197483": 14, "1977": 152, "19789154e": 152, "198": 135, "199": [135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "199128": 15, "199333": 138, "19a": 62, "1a2": 31, "1ab34": 31, "1b9ae9b69587": 120, "1d": [117, 118], "1e100": 83, "1e8": 149, "1ee33d": 72, "1f": [44, 115, 150], "1first_nam": 31, "1gcsgplmabavqz26": 72, "1j": [83, 122], "1m": 114, "1num": 82, "1p": 85, "1st": [29, 45, 67, 68, 69, 70, 72], "1variabl": 80, "1x1": [15, 17], "1x2": [15, 17], "1x3": [15, 17], "1x4": [15, 17], "1x5": [15, 17], "1x6": [15, 17], "1x7": [15, 17], "1x8": [15, 17], "1x9": [15, 17], "2": [2, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 26, 28, 32, 34, 35, 36, 40, 43, 49, 57, 63, 64, 67, 68, 69, 70, 71, 73, 74, 75, 88, 90, 94, 95, 96, 98, 101, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 159], "20": [10, 11, 12, 14, 15, 16, 17, 18, 26, 28, 30, 32, 38, 39, 40, 41, 43, 44, 45, 48, 49, 51, 55, 58, 63, 64, 66, 67, 69, 71, 72, 84, 87, 93, 94, 114, 117, 119, 120, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 140, 142, 143, 148, 150], "200": [47, 66, 69, 72, 83, 95, 114, 119, 135, 143, 152, 154], "2000": 115, "200000": [115, 124], "200000000000003": 77, "20040757": 121, "200555": 55, "200882": 16, "201": [51, 135], "2011": 114, "2012": [51, 89], "2013": [52, 53], "201300": 150, "2015": [138, 154], "2016": [152, 154], "2017": [10, 12, 51, 140, 154], "2018": [31, 51, 52, 53, 56, 57, 114, 154], "2019": [51, 52, 53, 55, 56, 57, 69], "202": [66, 135], "2020": [55, 124], "2021": [44, 51, 52, 54, 57, 66], "2021pythondatatyp": 44, "2021pythondatayp": 44, "2022": 63, "2023": 23, "20240789e": 152, "202563": 143, "202998": 7, "203": [16, 18, 135], "204": 135, "204451": 16, "20491465": 121, "205": 135, "205306": 14, "2056": 145, "206": 135, "206135893": 60, "207": [135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "20784702e": 152, "208": [135, 136], "20800138e": 152, "20801": 114, "20843398e": 152, "2087a9c41308": 30, "209": 135, "209539": 14, "209800": 14, "20994144e": 152, "20x20": 6, "21": [11, 14, 30, 32, 39, 40, 41, 44, 45, 48, 49, 51, 53, 54, 57, 58, 64, 69, 72, 95, 114, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 142, 145, 147, 148, 149, 150, 154], "210": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "2102": 31, "211": [135, 139], "211349": [10, 12], "211538": 135, "212": [135, 139], "2126": 138, "21260800e": 152, "213": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "21330910940589698": 146, "21355": 11, "213710": 14, "21379529e": 152, "214": [16, 18, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "214286": 135, "214695": 152, "214782": 11, "215": 135, "2154": 121, "216": [40, 49, 72, 135], "217": 135, "21728": 11, "217391": 135, "21741122e": 152, "21748794e": 152, "218": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "21855997e": 152, "2189884": 11, "219": [120, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "21987980e": 152, "22": [11, 14, 23, 44, 45, 48, 49, 51, 52, 54, 55, 57, 58, 64, 69, 71, 72, 87, 119, 120, 121, 125, 135, 138, 148, 150, 154], "220": 135, "220087": 150, "22026": 43, "220657": 16, "221": 135, "222": 135, "222222": 135, "22222222": 121, "22291790e": 152, "223": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "223188": 7, "22357762": 121, "22389": 143, "223905": [10, 12], "22397933e": 152, "224": 135, "22417715e": 152, "224369": 10, "225": 135, "225000": 115, "2251799813685248": 43, "225806": 135, "22592182e": 152, "226": [114, 135], "226677": 12, "22672978": 118, "227": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "22709318e": 152, "22722896e": 152, "228": [114, 135], "228434": 150, "22897": 149, "229": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "22911": 143, "22931538e": 152, "22949": 143, "23": [11, 14, 31, 39, 40, 44, 45, 51, 52, 53, 55, 57, 58, 72, 85, 94, 114, 119, 124, 125, 135, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "230": 135, "2305ca5": 23, "231": 135, "23180804": 118, "232": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "233": [40, 135], "233336": 10, "233423": 51, "23379671": 121, "234": 135, "234566": 51, "234922": 10, "235": 135, "236": 135, "23600": 136, "23606798": 120, "23611012e": 152, "237": 135, "238": 135, "23845": 136, "239": 135, "24": [11, 14, 32, 39, 41, 45, 47, 48, 49, 52, 53, 58, 60, 71, 72, 93, 94, 114, 119, 124, 125, 135, 136, 142, 145, 147, 148, 149, 150, 154], "240": 135, "2401": 49, "241": 135, "242": 135, "24271445e": 152, "24299133e": 152, "242b77ef2a87": 84, "243": [49, 135], "244": [72, 135], "244898": 154, "245": 135, "245426098662": 128, "245483": [10, 12], "245614": 135, "2458": 138, "246": 135, "246154": 124, "24674836e": 152, "24677": 143, "247": [135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "247597": [10, 12], "2476979795053773": 43, "248": 135, "24813498e": 152, "248490": [10, 12], "24865": 149, "249": 135, "25": [11, 15, 16, 17, 18, 23, 29, 32, 39, 40, 41, 43, 45, 47, 48, 49, 52, 56, 58, 60, 63, 72, 83, 84, 86, 87, 93, 94, 114, 115, 119, 120, 124, 135, 138, 140, 142, 143, 145, 149, 150, 154], "250": [96, 135], "2500": [39, 148, 150], "250000": [115, 124, 135, 143], "250fe64180f3": 94, "251": [43, 135], "252": 135, "25231985e": 152, "252785": 12, "253": [43, 135], "2534156": 149, "2535": 138, "254": [93, 135], "25490048e": 152, "255": [8, 10, 15, 16, 17, 18, 72, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "2550": 39, "2557": 145, "2559205": 118, "256": [45, 49, 135], "257": [76, 135], "258": 135, "258364": 14, "258705000": 60, "258745": 149, "259": 135, "259259": 135, "259490": 138, "25th": 124, "26": [11, 44, 45, 46, 48, 49, 55, 58, 72, 93, 114, 119, 124, 125, 135, 136, 138, 142, 148, 150], "260": 135, "261": 135, "261842": 143, "262": 135, "262144": 44, "262680": 15, "263": 135, "263600": 14, "264": 135, "264672": 16, "265": 135, "265008": 11, "26568259e": 152, "26571389e": 152, "266": 135, "267": 135, "268": 135, "269": 135, "27": [11, 28, 32, 39, 40, 41, 48, 49, 55, 57, 60, 69, 71, 86, 87, 93, 114, 119, 120, 124, 125, 135, 136, 148], "270": 135, "271": 135, "271429": 135, "272": 135, "27216990e": 152, "272699": 150, "272727": 135, "273": [30, 135], "274": 135, "275": [135, 147], "27500": 124, "275510": 135, "276": 135, "2761": 10, "276716": [10, 12], "27672348": 118, "277": 135, "277027": [10, 12], "27764243": 118, "278": 135, "278711": 16, "27891384e": 152, "279": 135, "27j": 83, "28": [11, 14, 30, 39, 40, 41, 48, 49, 51, 57, 63, 72, 93, 114, 119, 135, 136, 150], "280": 135, "280702": 135, "281": 135, "281250": 135, "2817": 147, "2818": 147, "2819": 147, "282": 135, "2820": 147, "2821": 147, "2822": 138, "28254475e": 152, "282662": [10, 12], "283": 135, "2833": [148, 150], "28366219": 120, "284": [10, 12, 135], "28418980453852622603883856494709731311218158362293224700445543940796643776911788129508577246309929258069598467896008287596053863082109746801947722280783720032649818198464452375358348619120021135797251857019557032565638659667745421115194468559021541269027438746788486392649581405327516658718317011453858465218779880972140612551504149701082164179367484198570734230003528355826545644223794779911723917115845213739921327820409005460708547942445234906498880588411276755120002108963510955276534630522965966177951626038063994937181228938844252668098515385045718428663547788122173798704717510979319749834083419004355222012043715855123615249682039587844431246269017612728291710718821388840627277407189863509789929339102406655115786899696829902032282666983426897111750208839152830573688512831984602085360572485861376": 87, "285": 135, "286": 135, "28675168e": 152, "287": 135, "287372": [10, 12], "288": 135, "28883356e": 152, "289": 135, "289000": 114, "289474": 143, "28x19": [15, 17], "28x20": [15, 17], "28x21": [15, 17], "28x22": [15, 17], "28x23": [15, 17], "28x24": [15, 17], "28x25": [15, 17], "28x26": [15, 17], "28x27": [15, 17], "28x28": [4, 6, 8, 15, 16, 17, 18], "29": [11, 14, 18, 30, 39, 40, 57, 60, 93, 119, 120, 135, 136, 141, 142, 147, 149, 154], "290": 135, "290549": [10, 12], "291": 135, "291667": 135, "291853": 13, "292": 135, "29235": 11, "293": 135, "293987": 11, "294": 135, "29402596": 121, "29431485e": 152, "2946014910624595": 72, "294804": [10, 12], "294850": 12, "295": 135, "29534113": 121, "295455": 135, "29560668e": 152, "295817": 10, "296": 135, "297": 135, "298": 135, "298226": 10, "299": 135, "29995": 136, "2d": [14, 114, 115, 117, 118, 124, 146, 155], "2d7f5e": 150, "2darrai": [128, 131], "2f": [10, 11, 12, 44, 86, 95, 114, 150, 153], "2f7f4e5fdb49": 58, "2j": [43, 83, 84], "2nd": [29, 44, 45, 46, 67, 68, 70], "2rgxf": 72, "2x": [87, 114], "2x2": [118, 154], "3": [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 28, 30, 32, 35, 36, 38, 40, 43, 47, 49, 53, 57, 63, 64, 67, 68, 69, 70, 71, 74, 77, 79, 80, 85, 88, 90, 91, 93, 94, 95, 96, 98, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156], "30": [13, 16, 18, 28, 29, 30, 36, 39, 40, 41, 44, 45, 49, 51, 52, 53, 55, 57, 63, 66, 67, 68, 69, 72, 82, 84, 87, 88, 93, 114, 119, 124, 135, 140, 143, 145, 147, 148, 151], "300": [17, 30, 45, 82, 83, 114, 135, 141], "3000": [16, 17, 64], "300000": [115, 138], "3000000000000003": 43, "300000e": 86, "301": 135, "301184": [10, 12], "30119580e": 152, "302": 135, "302078": 10, "303": 135, "30378713e": 152, "304": 135, "305": 135, "305880": 14, "306": 135, "306264": 150, "30668723": 118, "307": 135, "308": 135, "308492": 14, "309": 135, "30911403e": 152, "30920635": 118, "31": [30, 39, 40, 51, 52, 53, 57, 72, 93, 114, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "310": [131, 135], "31002414e": 152, "310634": 14, "311": [12, 131, 135], "311099": 15, "312": [131, 135], "3125": 49, "312500": 135, "31287314e": 152, "313": [131, 135], "313125": 13, "313707": [10, 12], "31390556e": 152, "314": [10, 12, 66, 131, 135], "3143": 12, "315": 135, "315317": 10, "3153600000": 87, "31576734e": 152, "315964": [10, 12], "316": [10, 12, 135], "317": 135, "31701798e": 152, "31708111e": 152, "318": 135, "318750": 124, "319": 135, "32": [14, 26, 30, 39, 41, 45, 49, 53, 66, 93, 120, 124, 135, 138, 150, 154], "320": 135, "320879": 12, "321": 135, "321004": 150, "32105794e": 152, "322": 135, "322715": [10, 12], "323": 135, "323947000": 60, "324": 135, "324129": 150, "325": 135, "325394": 10, "326": 135, "326574": [10, 12], "327": 135, "32768": 49, "328": 135, "329": 135, "329871": 10, "33": [12, 14, 39, 44, 51, 58, 69, 72, 85, 86, 93, 95, 114, 121, 135, 136], "330": [41, 135], "33094796e": 152, "331": 135, "33114510e": 152, "331191": 54, "33142653": 118, "332": 135, "33205527e": 152, "333": [44, 51, 87, 135], "333333": 136, "33333333": [43, 120, 121], "333333333333333": 87, "333333333333333481363069950020872056484222412109375": 72, "3333333333333335": 72, "334": 135, "334694": 16, "335": 135, "33516842e": 152, "336": 135, "33662976e": 152, "337": 135, "33768743e": 152, "338": 135, "33856867e": 152, "338695217273813": 121, "339": 135, "34": [31, 40, 51, 58, 72, 87, 93, 119, 121, 135, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "340": [39, 40, 135], "340730": 11, "340909": 135, "341": 135, "342": 135, "34238": 51, "342380": 51, "343": [40, 49, 135], "343280": 10, "343750": 135, "344": [12, 135], "344095": [10, 12], "34435993e": 152, "345": 135, "345081": 14, "3456": 31, "345673": 31, "3456789": 44, "34567890": 86, "3457": 44, "346": [86, 135], "347": [53, 135], "348": [53, 135], "349": [53, 135], "349540": 13, "35": [7, 31, 39, 41, 44, 45, 54, 57, 84, 86, 114, 119, 135, 136, 138, 147, 148, 149, 150], "350": [18, 53, 135], "350000": [115, 138], "351": [53, 135], "352": 135, "35266299": 118, "352682": 10, "353": 135, "354": 135, "354839": 135, "35488217e": 152, "355": 135, "355280": [10, 12], "356": [31, 135], "356651": [10, 12], "357": 135, "357143": 135, "357150": 12, "35731444e": 152, "357765": 10, "358": 135, "359": 135, "35994688e": 152, "36": [27, 39, 40, 41, 44, 49, 66, 80, 86, 114, 135, 138, 141], "360": 135, "36000": 136, "360856": 148, "361": [57, 135], "361467": 10, "362": [57, 135], "362012": [10, 12], "363": 135, "363636": 135, "364": 135, "36492380e": 152, "365": [44, 135], "366": [52, 53, 57, 135], "36699927e": 152, "367": 135, "367007": [10, 12], "36782780e": 152, "368": 135, "3681b3969e27": 64, "36880": 136, "369": 135, "36938945e": 152, "37": [14, 30, 39, 40, 93, 124, 125, 135, 136, 154], "370": 135, "37028": 136, "370370": 135, "371": 135, "37144872e": 152, "37181743e": 152, "372": 135, "373": 135, "37380679e": 152, "374": 135, "375": [60, 135], "375000": [14, 135], "376": 135, "37644": 143, "377": [10, 12, 40, 135], "37796264e": 152, "378": 135, "379": 135, "379273": 10, "379510": [10, 12], "38": [14, 55, 93, 114, 135, 143, 148, 150, 152, 154], "380": 135, "381": 135, "382": 135, "38209653": 118, "38223": 143, "38224839e": 152, "382612": [10, 12], "382817": [10, 12], "383": 135, "38336447": 121, "38385823e": 152, "384": 135, "384232": 14, "38429280e": 152, "384398": 10, "384399": [10, 12], "384403": [10, 12], "385": 135, "385399": [10, 12], "38568225e": 152, "38575866e": 152, "385965": 135, "385970": [10, 12], "386": 135, "387": 135, "387097": 135, "38787858e": 152, "388": 135, "389": 135, "3890561": 120, "389559": 12, "39": [39, 44, 51, 58, 114, 135, 138, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "390": 135, "391": 135, "39119225e": 152, "39169378e": 152, "392": 135, "392857": 135, "393": 135, "393174": 10, "393413": 150, "394": 135, "395": 135, "39594634e": 152, "396": 135, "397": 135, "39764517e": 152, "398": 135, "39801": 31, "398040": 14, "39878883": 118, "399": [45, 135], "39957927e": 152, "3bfaa309574d": 48, "3blue1brown": 6, "3d": [7, 10, 23, 119], "3da34cc7641": 44, "3e859d37287a": 80, "3ec8c6652eef": 70, "3f": [44, 86], "3j": [23, 43, 83, 84, 94], "3rd": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 45, 68, 70, 117, 142], "4": [2, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 57, 63, 66, 67, 68, 69, 70, 71, 72, 74, 79, 80, 82, 85, 86, 90, 93, 94, 95, 98, 99, 103, 114, 117, 118, 119, 120, 121, 123, 124, 125, 127, 129, 131, 133, 135, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "40": [11, 14, 39, 41, 49, 58, 63, 69, 84, 86, 87, 114, 119, 126, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "400": [6, 135, 143], "4000": 115, "400000": [115, 136, 138], "40015831": 118, "400770": [10, 12], "401": 135, "402": 135, "403": [10, 135], "403509": 135, "403846": 135, "404": 135, "404206": 13, "404240": 14, "405": 135, "405706": [10, 12], "406": 135, "40603744": 121, "40636423e": 152, "406469": 7, "407": 135, "408": 135, "408520": 7, "408781": 10, "409": [135, 147], "40904134e": 152, "409091": 135, "4096": 49, "40960": 136, "41": [39, 40, 57, 58, 114, 135, 136, 152], "410": [135, 147], "410458": [10, 12], "41083552e": 152, "411": [135, 147], "411377": 14, "412": [135, 147], "41276190e": 152, "41292267e": 152, "413": [135, 147], "41315": 136, "4131591": 120, "414": 135, "41405704e": 152, "41406033e": 152, "41421356": 120, "414368": 152, "415": 135, "4151": 128, "4152": 128, "4153": 128, "4154": 128, "4155": 128, "416": 135, "41614684": 120, "416667": 135, "417": 135, "418": 135, "4186": 128, "4187": 128, "4188": 128, "4189": 128, "419": 135, "4190": 128, "419745": 12, "42": [39, 41, 47, 51, 58, 95, 121, 135, 144], "420": 135, "421": 135, "422": [10, 135], "423": 135, "423522": 11, "423851": 14, "424": 135, "42477796076938": 72, "42499377e": 152, "425": 135, "42530": 149, "42538101e": 152, "426": 135, "42612988": 121, "426227": [10, 12], "427": 135, "427426": [10, 12], "428": 135, "428571": 135, "42857143": 120, "4286f4": 114, "428939": [10, 12], "429": 135, "43": [16, 18, 39, 40, 58, 120, 135], "430": 135, "430182": [10, 12], "4306": 128, "4307": 128, "4308": 128, "4309": 128, "430905": 12, "431": 135, "4310": 128, "43186c7d3555": 80, "43196619e": 152, "432": 135, "433": 135, "433627": 10, "434": 135, "4340020aef34": 94, "43469003": 121, "435": 135, "435540": [10, 12], "43563027": 118, "435633": 51, "435866": 138, "436": 135, "437": 135, "437500": 135, "438": 135, "439": 135, "439305": 14, "44": [57, 58, 135, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "440": 135, "441": 135, "44120621e": 152, "442": 135, "44225798": 118, "442308": [124, 135], "443": 135, "443572": [10, 12], "443705": 14, "4439": 131, "444": 135, "4440": 131, "4441": 131, "4442": 131, "4443": 131, "444444": 135, "44444444": 121, "445": 135, "446": 135, "44666284e": 152, "447": 135, "44794755e": 152, "448": 135, "449": 135, "449489742783178": 72, "4496": 147, "4497": 147, "4498": 147, "4499": 147, "45": [13, 14, 39, 40, 41, 58, 60, 72, 81, 89, 114, 132, 135, 138, 147, 154], "450": 135, "4500": [15, 147], "45000": 124, "451": 135, "45103300e": 152, "452": 135, "453": 135, "45359369": 118, "454": 135, "45400": 136, "45409876e": 152, "454545": 135, "45468093e": 152, "455": 135, "455357": 135, "456": [44, 85, 135], "456140": 135, "457": 135, "458": 135, "4583": 148, "458333": 135, "458614": 13, "459": 135, "45d582f31548": 94, "46": [14, 32, 58, 66, 114, 135, 136, 147, 154], "460": 135, "46063092e": 152, "46075265e": 152, "461": 135, "462": 135, "462272": [10, 12], "463": 135, "464": 135, "4641": 121, "465": 135, "465640": 14, "465794806718": 43, "466": 135, "466366": 12, "4666666666666668": 140, "466b90e7ef2f": 84, "467": 135, "468": 135, "468750": 135, "469": [10, 12, 135], "469388": 135, "47": [39, 40, 51, 58, 135, 136, 138, 147], "470": 135, "47016730e": 152, "470490": [10, 12], "470689": 12, "471": 135, "472": 135, "473": 135, "473137c03db7": 80, "47320909e": 152, "474": 135, "474232": 16, "475": 135, "475540": [10, 12], "476": 135, "476004": 14, "477": 135, "477273": 135, "477699": [10, 12], "4777": 133, "4778": 133, "4779": 133, "477962": 14, "478": 135, "4780": 133, "4781": 133, "478125": 150, "478162": [10, 12], "479": 135, "479139": 10, "479204": [10, 12], "479556": [10, 12], "48": [39, 41, 44, 51, 58, 87, 95, 125, 127, 134, 135, 136, 147], "480": 135, "48013283e": 152, "48048431": 118, "480633": [10, 12], "481": 135, "48122198e": 152, "481349": [10, 12], "482": 135, "482383": [10, 12], "483": 135, "48383283e": 152, "484": 135, "484415": [10, 12], "485": 135, "486": 135, "487": 135, "48755100e": 152, "488": 135, "488215": 12, "488412": 10, "489": 135, "4895": 27, "489796": 124, "49": [37, 39, 40, 41, 47, 49, 57, 58, 72, 135, 136], "490": 135, "490625": 143, "490946": 10, "491": 135, "491228": 135, "491723": 15, "492": 135, "492727": 10, "492754": 135, "49291": 143, "493": [12, 135], "49332966e": 152, "494": [10, 12, 135], "494387": [10, 12], "495": 135, "49521424": 121, "49529338e": 152, "49574452": 121, "49587": 143, "496": 135, "496714": 124, "49690158e": 152, "497": 135, "49769501e": 152, "49798680e": 152, "498": 135, "49890664e": 152, "499": 135, "4999": 18, "49e421f2057c": 85, "4a9f159cd120": 44, "4b26ab49e29c": 26, "4c669126467b": 44, "4d4a0e714c73": 80, "4ed3868a9a2": 45, "4f": [13, 14, 15, 16, 17, 18, 44], "4m": 114, "4th": [45, 46], "5": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 56, 57, 58, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 81, 82, 83, 85, 86, 88, 90, 93, 94, 95, 96, 98, 99, 103, 114, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 131, 135, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "50": [9, 31, 35, 37, 39, 40, 41, 43, 44, 47, 49, 55, 58, 60, 66, 67, 72, 89, 114, 120, 121, 124, 126, 127, 135, 136, 138, 142, 143, 145, 147, 148, 149, 150, 152, 154], "500": [10, 11, 12, 126, 135, 152], "5000": [8, 16, 18, 64, 152], "50000": [11, 114], "500000": [115, 124, 135, 136, 138], "500005": [10, 12], "501": 135, "502": 135, "502190": 14, "502418": 11, "503": 135, "503945": [10, 12], "504": [10, 12, 135], "505": 135, "5050": [39, 66], "50547116e": 152, "506": 135, "50628105e": 152, "507": 135, "507192": 16, "508": 135, "509": 135, "50b154750974": 80, "50th": 124, "51": [11, 58, 66, 114, 135, 136, 148], "510": 135, "510042": [10, 12], "51026454": 118, "511": 135, "512": [40, 45, 49, 71, 135], "513": 135, "513250": 14, "513433": 152, "513890": 14, "514": 135, "51479": 11, "515": 135, "515941f58fe7": 68, "516": 135, "51601397e": 152, "516129": 135, "51681": 143, "516912": [10, 12], "517": 135, "51782e52f201": 63, "517857": 135, "518": 135, "518519": 135, "519": [87, 135], "52": [58, 114, 124, 125, 135, 136], "520": 135, "52037": 11, "52063": 143, "521": 135, "522": [10, 12, 135], "523": 135, "524": 135, "524770": 14, "525": [12, 135], "52580": 143, "526": 135, "526373": 154, "527": [10, 135], "527393": 51, "527542": [10, 12], "528": 135, "529": 135, "529412": 135, "53": [39, 40, 47, 52, 53, 56, 58, 135, 136, 138, 147, 148, 150], "530": 135, "53037048e": 152, "530624": 12, "531": 135, "531250": 135, "531874": 11, "532": 135, "533": 135, "53341062e": 152, "533524": [10, 12], "53360752e": 152, "534": 135, "5348": 136, "535": 135, "535714": 135, "53590397e": 152, "536": 135, "536747": 10, "536997": 14, "537": [10, 12, 135], "53783010e": 152, "538": 135, "539": 135, "53901780e": 152, "53909609": 118, "54": [39, 40, 41, 51, 58, 71, 82, 93, 114, 120, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 148], "540": 135, "540222": 15, "540247": [10, 12], "54030231": 120, "541": 135, "541667": 135, "5418903291546293": 146, "542": 135, "5425": 149, "542734": 152, "54275813": 118, "543": 135, "54321": 39, "544": 135, "545": 135, "54510477e": 152, "5455131": 149, "546": 135, "546523": 13, "54682": 149, "547": 135, "547083": 152, "547509": 10, "54777888": 118, "548": 135, "548052": 14, "54808": 149, "548195": [10, 12], "549": 135, "54902750e": 152, "55": [39, 40, 51, 58, 66, 72, 121, 126, 128, 131, 135, 146, 154], "550": 135, "551": 135, "551020": 135, "55109787e": 152, "551122": [10, 12], "5513833499989991": 146, "551792": 11, "552": 135, "55283762": 118, "553": 135, "553519": 150, "55360672": 118, "55382448e": 152, "554": 135, "555": [40, 44, 89, 135], "5550161930871431": 121, "555108164c58": 47, "55555556": 121, "555816": 150, "556": 135, "557": 135, "558": 135, "5589": 128, "559": 135, "5590": 128, "5591": 128, "5592": 128, "5593": 128, "55965906e": 152, "56": [23, 38, 39, 41, 47, 51, 55, 58, 72, 124, 125, 127, 134, 135, 136, 154], "560": 135, "56077258e": 152, "561": 135, "561772": [10, 12], "562": 135, "562500": 135, "563": 135, "56348096e": 152, "564": 135, "564980": [10, 12], "565": 135, "56580759e": 152, "566": [53, 135], "56650192e": 152, "567": [53, 135], "56705": 11, "568": [53, 135], "569": [53, 135], "5698": 149, "57": [12, 56, 58, 114, 124, 125, 135, 136], "570": [53, 135], "57057605": 121, "571": 135, "571429": 135, "572": 135, "572094": 12, "57292499e": 152, "573": 135, "57330710e": 152, "57367853e": 152, "574": 135, "575": 135, "576": 135, "576700": 7, "5768efa4a35f": 95, "577": 135, "578": 135, "579": [85, 135], "57953b0b580c": 30, "58": [10, 51, 52, 57, 58, 114, 124, 125, 135, 136, 154], "580": 135, "5808771025513102": 146, "58099293e": 152, "581": 135, "581728": [10, 12], "582": 135, "5828025": 57, "583": 135, "584": 135, "585": 135, "585384": [10, 12], "5854679515581645": 43, "58556641e": 152, "586": 135, "58662330e": 152, "587": 135, "58776": 11, "588": 135, "588235": 135, "588767": 10, "58883361": 121, "58899709e": 152, "589": 135, "58900": 136, "59": [10, 17, 37, 51, 52, 53, 55, 57, 58, 124, 125, 135, 136, 142, 145, 147, 148, 149, 150, 154], "590": 135, "59049": 49, "59068226": 121, "591": 135, "592": 135, "593": 135, "59362951e": 152, "59371929e": 152, "594": 135, "594445": [10, 12], "595": 135, "596": 135, "59621339e": 152, "597": 135, "598": 135, "59815003": 120, "599": 135, "59b7b8cc9b5b": 94, "5aa728677edf": 72, "5b2db8c64782": 44, "5b50fb5d02c4": 69, "5e2": 83, "5f195de51d93": 96, "5m": 114, "5th": [44, 45], "6": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 30, 32, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 57, 58, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 77, 79, 80, 81, 82, 83, 85, 86, 93, 94, 95, 98, 114, 117, 118, 119, 120, 121, 124, 125, 127, 131, 135, 138, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156], "60": [11, 36, 37, 39, 40, 41, 49, 69, 72, 86, 88, 114, 124, 125, 126, 135, 136, 143, 144, 146], "600": [40, 87, 135], "6000": [15, 18, 115], "60000": [8, 15, 16, 17, 18, 93, 114], "600000": 138, "60000000000001": 30, "60059908": 121, "601": 135, "60124": 143, "60154": 143, "601607": [10, 12], "602": 135, "603": 135, "60332219e": 152, "603704": 150, "604": 135, "605": 135, "605370": 138, "606": 135, "60631cbc73b0": 67, "60683359e": 152, "607": 135, "60786967": 118, "608": 135, "60811794e": 152, "60818266e": 152, "609": [10, 135], "609060": 16, "60966": 11, "61": [47, 57, 124, 125, 135, 136, 142, 145, 147, 148, 149, 150, 154], "610": [40, 135], "610574": [10, 12], "611": [12, 135], "611101": [10, 12], "611172": 150, "612": 135, "612924": [10, 12], "613": 135, "614": 135, "614062": [10, 12], "614349": 11, "61440440e": 152, "614655": 14, "615": 135, "61500": 136, "616": 135, "616463": [10, 12], "61670566e": 152, "61675899e": 152, "617": 135, "617722": 11, "61784629": 118, "617951": [10, 12], "618": 135, "619": 135, "6197751905438615": 72, "62": [66, 135, 136, 149], "620": 135, "620071": [10, 12], "621": 135, "621415": 150, "622": 135, "622030": [10, 12], "622167": 150, "62242956e": 152, "623": 135, "62311335e": 152, "624": 135, "625": [49, 135], "62500": 124, "62503489e": 152, "626": 135, "626007": [10, 12], "62636": 143, "627": 135, "627163": [10, 12], "6274509803921569": 143, "62792336e": 152, "628": 135, "629": 135, "629630": 135, "62996541e": 152, "63": [39, 41, 62, 63, 66, 85, 86, 135, 147, 154], "630": 135, "63033250e": 152, "631": 135, "631579": 135, "63158859": 118, "632": 135, "63212579e": 152, "63238643": 121, "633": [69, 135], "6338": 136, "633974": 12, "634": 135, "63465586e": 152, "635": [12, 135], "635423": [10, 12], "635457": 15, "635574": 14, "636": 135, "637": 135, "6377": 136, "638": 135, "639": 135, "64": [15, 16, 17, 18, 23, 39, 40, 41, 45, 49, 71, 120, 135, 154], "640": 135, "64000": 114, "64034418e": 152, "641": 135, "64154651": 149, "642": 135, "643": 135, "64387910e": 152, "644": 135, "645": 135, "645161": 135, "646": 135, "647": 135, "647689": 124, "648": 135, "6488": 136, "649": 135, "65": [35, 36, 37, 44, 85, 125, 127, 134, 135, 154], "650": 135, "65000": 114, "650667": 12, "651": 135, "651253": 154, "652": [12, 135], "65235094": 121, "653": 135, "65364362": 120, "654": 135, "654593": 56, "655": 135, "65575249e": 152, "65596512e": 152, "656": 135, "6561": 49, "65628077": 118, "656404": 150, "657": 135, "6575": 136, "658": 135, "659": 135, "65903086e": 152, "66": [38, 39, 44, 68, 86, 135, 136, 142, 145, 147, 148, 149, 150, 154], "660": 135, "66000": 114, "660125": 14, "661": 135, "6611852": 149, "662": 135, "663": 135, "664": 135, "665": 135, "666": [47, 135], "666451": 7, "66666667": 121, "667": 135, "667565": 150, "668": 135, "669": 135, "67": [40, 44, 120, 135, 136, 154], "670": 135, "670396": 154, "671": 135, "672": 135, "673": 135, "674": 135, "675": 135, "67526014e": 152, "676": 135, "67631096e": 152, "676366": 7, "677": 135, "67761063e": 152, "678": 135, "6785": 136, "678571": 135, "679": 135, "68": [114, 128, 131, 135, 136, 142, 145, 147, 148, 149, 150, 152, 154], "680": 135, "680027": 12, "681": 135, "681159": 135, "682": 135, "682091": 154, "683": 135, "6833": 15, "68334519e": 152, "683673": 135, "684": 135, "684211": 135, "684940": 14, "685": 135, "68572271": 121, "686": 135, "68602648": 118, "68603251e": 152, "68671849e": 152, "687": 135, "68744134": 118, "68747069e": 152, "688": 135, "689": 135, "69": [37, 39, 125, 135, 136, 154], "690": 135, "69001671e": 152, "691": 135, "6918": 136, "692": 135, "692250": 14, "69258130e": 152, "69272794e": 152, "693": 135, "6931471805599453": 72, "69343173": 118, "693597": 12, "69361323e": 152, "694": 135, "695": 135, "696": 135, "697": 135, "69736459e": 152, "69791535": 118, "698": 135, "698874": 14, "699": 135, "69901020e": 152, "699560": 14, "6ab0f28c63a7": 64, "6ac8e81b6f0c": 62, "6f47904706aa": 120, "6f8260f6f5bb": 67, "6j": [43, 84, 94], "6m": 114, "6p": 86, "6th": 44, "6x": 87, "7": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 29, 30, 32, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 55, 57, 58, 60, 63, 66, 67, 68, 69, 71, 72, 81, 82, 83, 84, 85, 86, 87, 94, 95, 96, 98, 114, 118, 119, 120, 121, 124, 125, 131, 135, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156], "70": [35, 37, 39, 41, 49, 69, 114, 125, 127, 132, 134, 135, 136, 142, 143, 154], "700": [135, 153], "700557": 14, "701": 135, "70166723e": 152, "702": 135, "703": 135, "703704": 135, "704": 135, "704545": 135, "705": 135, "705882": 135, "706": 135, "706461": 12, "706585": 10, "707": 135, "707107": 124, "708": 135, "70805473e": 152, "709": 135, "7091468499697177e": 140, "70974533": 7, "71": [135, 136, 142, 148, 149, 150], "710": 135, "711": 135, "712": 135, "713": 135, "714": 135, "71400": 136, "714286": 136, "71432477e": 152, "715": 135, "715070": 148, "716": 135, "71671100e": 152, "717": 135, "71755233e": 152, "718": 135, "71828": [72, 74], "718281828459045": 72, "71828183": 120, "719": 135, "72": [39, 41, 66, 124, 127, 135, 154], "720": [43, 70, 72, 135], "721": 135, "722": 135, "72223991e": 152, "72247358e": 152, "723": 135, "72352380e": 152, "724": 135, "724490": 135, "724638": 135, "725": 135, "726": 135, "72638167e": 152, "727": 135, "72708198e": 152, "727273": 135, "72765023e": 152, "728": 135, "72888392e": 152, "729": [40, 49, 71, 135], "72964213e": 152, "73": [31, 135], "730": 135, "730982": 11, "731": 135, "731755": 138, "732": 135, "73205081": 120, "733": 135, "73370838": 121, "734": 135, "734673": 154, "735": 135, "73524094": 121, "7359b7dba965": 40, "736": 135, "737": 135, "73712819e": 152, "738": 135, "739": 135, "74": 135, "740": 135, "74098031e": 152, "741": 135, "741152": 7, "74149939e": 152, "741935": 135, "742": 135, "743": 135, "74304829e": 152, "74307119e": 152, "74371246e": 152, "744": [93, 135], "74400348e": 152, "744281": 154, "744415": 10, "74486871e": 152, "745": 135, "74509907e": 152, "746": 135, "746011": 154, "747": 135, "748": 135, "749": 135, "75": [58, 114, 121, 124, 125, 135, 138, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "750": 135, "750000": [124, 135, 136, 143, 154], "750615": 148, "75075a70c90": 119, "7507bdc665d5": 29, "751": 135, "751712": 11, "752": 135, "75209323e": 152, "753": 135, "754": 135, "755": 135, "755102": 154, "756": 135, "75665366e": 152, "7568025": 120, "757": 135, "758": 135, "758000": 138, "759": 135, "75th": 124, "76": [31, 121, 135, 149, 154], "760": 135, "76093000e": 152, "761": 135, "761378": 11, "762": 135, "762238": 138, "762329": 154, "76249894": 121, "763": 135, "763270": 7, "76344": 11, "764": 135, "765": 135, "765298": 138, "765539": 10, "766": [121, 135], "766294": 13, "767": 135, "768": [135, 138], "769": 135, "769231": 135, "76a0a5ce1450": 58, "76bf7a927991": 69, "77": [39, 69, 84, 86, 119, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 142, 149], "770": 135, "771": 135, "772": 135, "77237368": 121, "772579": 15, "772900": 16, "773": [89, 135], "774": 135, "775": [15, 16, 135], "775403": 12, "776": [15, 16, 135], "77678046e": 152, "777": [15, 16, 135], "7776": 49, "77777778": 121, "777778": 135, "778": [15, 16, 135], "779": [15, 16, 135], "78": [71, 121, 124, 135, 142, 154], "780": [15, 16, 135], "780573": 11, "781": [15, 16, 135], "781250": 135, "782": [15, 16, 135], "782dbd1412fe": 131, "783": [15, 16, 135], "784": [8, 15, 16, 17, 18, 135], "784433": 14, "785": [8, 15, 16, 17, 18, 135], "785269": 149, "785280": 149, "785714": 135, "786": 135, "78673234e": 152, "787": 135, "788": 135, "78883111e": 152, "789": [44, 135], "7898": 136, "78993856e": 152, "79": [72, 124, 135, 136], "790": 135, "79018354e": 152, "79025614": 121, "791": 135, "792": 135, "792566": [10, 12], "79270929e": 152, "793": 135, "794": [135, 138], "795": 135, "795455": 135, "795521": 14, "796": 135, "796667": [10, 12], "79671774e": 152, "797": 135, "797101": 135, "7975": [124, 125, 136], "798": 135, "79823164": 118, "799": 135, "7995": [124, 125, 136], "79998373e": 152, "7c9145eb11e9": 87, "7e786bcbd078": 64, "7f1fefd4d3f0": 47, "7fce570bf337": 84, "8": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 29, 30, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 57, 58, 60, 63, 64, 66, 67, 68, 69, 71, 72, 79, 81, 82, 84, 85, 86, 87, 91, 93, 94, 96, 98, 114, 118, 119, 120, 121, 124, 125, 127, 128, 131, 133, 135, 138, 139, 140, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155], "80": [10, 12, 15, 16, 17, 18, 37, 39, 41, 49, 72, 114, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 143, 147, 151, 154], "800": [135, 143], "8000": [16, 18, 115], "80000": 124, "800000": [135, 138], "801": 31, "801005": 11, "8036360430009386": 43, "806452": 135, "807018": 135, "809158": [10, 12], "80966303e": 152, "81": [35, 39, 40, 41, 47, 49, 66, 85, 124, 125, 135, 136], "810696": [10, 12], "812500": 135, "8138b0729954": 47, "814809": 152, "816327": 135, "816653826391969": 98, "816760": [10, 12], "81788758": 121, "8189": 136, "81893678": 118, "81945073e": 152, "82": [124, 125, 135, 136], "821429": 135, "822132": 7, "82636160e": 152, "82647438e": 152, "82701252e": 152, "827153": 152, "828066": 138, "82974801e": 152, "83": [16, 66, 124, 125, 135], "830770": 150, "830875": [10, 12], "83098322e": 152, "831415": 10, "83161031e": 152, "83263141": 7, "83288998e": 152, "83319662e": 152, "8333333333333334": 87, "833552": [10, 12], "834558": [10, 12], "83464298e": 152, "835299": 143, "83727878e": 152, "83770503": 118, "83847501e": 152, "84": [95, 124, 135], "840201": 10, "84147098": 120, "84254180e": 152, "843333": 138, "843750": 135, "843887": [10, 12], "846939": 135, "846976": 150, "847": 89, "84915141e": 152, "85": [10, 86, 114, 118, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 143, 144, 151], "850000": 143, "85051737e": 152, "851852": 135, "853181": 7, "85505447": 118, "855366": 12, "857142857142854": 86, "857143": 135, "858131": [10, 12], "858904": 13, "85956433e": 152, "86": [55, 124, 125, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "8625": 148, "86299475e": 152, "863636": 135, "86635ab2cc7": 94, "868809": 14, "869565": 135, "87": [114, 124, 125, 127, 134, 135, 136, 149], "871429": 135, "872": 10, "87236687": 118, "87285499e": 152, "87380356": 121, "875000": 135, "87646883e": 152, "8778": 136, "87786341e": 152, "87853325e": 152, "87970769e": 152, "88": [14, 114, 121, 124, 125, 132, 135, 136, 142, 151], "88165065e": 152, "884058": 135, "88618684": 121, "88888889": 121, "89": [11, 17, 31, 37, 40, 72, 114, 124, 135, 136, 149], "8904402624046048": 146, "891691": 7, "89380846e": 152, "894992": 152, "89632087": 118, "899084": 7, "8b5cab780f33": 67, "8cc0f1bdc5ed": 82, "8f0bbdfdf6e5": 45, "8th": 46, "9": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 32, 35, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 57, 58, 60, 63, 64, 66, 67, 68, 69, 71, 72, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 93, 94, 96, 98, 114, 117, 118, 119, 120, 121, 124, 125, 127, 131, 132, 133, 135, 138, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156], "90": [11, 15, 37, 39, 40, 41, 44, 49, 66, 67, 69, 82, 83, 86, 88, 93, 114, 125, 127, 132, 134, 135, 143, 147, 151], "900": [67, 93], "900000": 138, "900000e": 44, "90093797e": 152, "901514": 14, "90264482e": 152, "90328251e": 152, "903846": 135, "906250": 135, "907975": 10, "90891100e": 152, "909091": 135, "90929743": 120, "909784": 12, "91": [11, 60, 85, 114, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138], "91174698": 121, "91348997e": 152, "914559": 12, "914701": 7, "91703708e": 152, "919264": 15, "91940167": 118, "92": [11, 114, 135, 151], "922403": 7, "922826": 16, "9250": [148, 150], "925579": 12, "925926": 135, "927536": 135, "928539": 12, "928571": 135, "92fab552c144": 72, "93": [16, 18, 39, 114, 135, 151], "93054890e": 152, "93082264e": 152, "93102691": 118, "93143051": 118, "932169": 12, "932537": 12, "932585": 15, "94": [114, 124, 125, 135, 136, 151], "9412": 17, "944681": 10, "946429": 135, "947368": [135, 143], "9478274870593494": 73, "948141": 14, "95": [11, 114, 124, 135, 136, 141, 142, 149, 150, 151, 152], "954": 141, "95501935e": 152, "956": 10, "9560342718892494": 73, "95892427": 120, "95966987": 118, "96": [11, 13, 15, 17, 36, 37, 38, 39, 40, 44, 47, 62, 63, 69, 82, 93, 114, 124, 135, 142], "96052f3c0c69": 44, "96139878e": 152, "9618232": 57, "96238081e": 152, "96248829": 121, "963404": 148, "964286": 135, "965323": 16, "966365e": 44, "96652011": 121, "96671753e": 152, "966907": 14, "97": [11, 44, 60, 124, 125, 135, 136, 151], "97087710e": 152, "971014": 135, "9717076499418887": 140, "97187673e": 152, "97305419e": 152, "976073": 150, "97739775e": 152, "977974": 16, "97964329e": 152, "98": [30, 44, 124, 135, 145, 154], "980769": 135, "981": 66, "98237187e": 152, "9831": 14, "9834262422606419": 146, "98514058e": 152, "98547": 149, "986095083415364e": 7, "986e6d871071": 32, "987": 40, "98749888": 118, "9899925": 120, "98a1ccc168e9": 69, "99": [36, 39, 44, 47, 52, 53, 81, 83, 84, 86, 118, 124, 125, 135, 136, 142, 145, 146, 147, 148, 149, 150, 154], "99262966e": 152, "994": 147, "994177": 55, "994667": 12, "995": 147, "996": 147, "997": 147, "99714633e": 152, "9976563219": 32, "997677": 154, "99771051": 7, "998": 147, "999": [44, 47, 67, 68, 121], "9995": [124, 125, 136], "999703": 154, "9999": [17, 51, 57, 72], "999926": 154, "999999": [52, 53, 86], "999999999999998": 40, "999999999999999": 120, "9b450cb47d30": 45, "9b9247988596": 62, "9df797f83624": 44, "9e95083e441a": 44, "A": [0, 6, 7, 8, 17, 18, 23, 26, 27, 28, 29, 30, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 58, 60, 61, 62, 63, 66, 67, 69, 70, 72, 75, 76, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 98, 114, 117, 118, 119, 121, 124, 125, 127, 128, 131, 132, 134, 135, 138, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155], "AND": 96, "And": [26, 27, 39, 44, 63, 83, 87, 125, 126, 132, 138, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "As": [23, 24, 26, 28, 30, 31, 32, 39, 40, 41, 43, 46, 47, 58, 60, 62, 63, 66, 68, 69, 75, 76, 79, 82, 83, 85, 86, 87, 90, 93, 94, 98, 99, 103, 124, 125, 126, 127, 129, 130, 133, 134, 138, 140, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155], "At": [31, 88, 90, 98, 139, 143, 150, 152, 154], "BUT": [141, 143, 146, 148, 149, 150, 152], "Be": [17, 18, 26], "Being": 48, "But": [3, 4, 6, 9, 24, 27, 28, 29, 34, 37, 40, 41, 43, 44, 46, 48, 49, 63, 69, 71, 72, 77, 81, 82, 84, 86, 87, 93, 94, 96, 99, 103, 124, 125, 126, 129, 130, 131, 133, 134, 140, 141, 142, 143, 149, 150, 151, 152], "By": [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 30, 39, 40, 41, 51, 54, 70, 72, 79, 94, 98, 124, 125, 126, 128, 129, 130, 131, 133, 134, 136, 141, 143, 148, 149, 150, 152], "For": [2, 3, 4, 6, 11, 13, 14, 15, 16, 19, 22, 23, 24, 27, 29, 30, 31, 32, 34, 38, 39, 40, 41, 43, 44, 53, 57, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 80, 81, 82, 86, 87, 88, 90, 93, 94, 95, 96, 99, 100, 103, 104, 118, 119, 120, 121, 124, 125, 126, 127, 129, 130, 133, 134, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "IN": 49, "IT": [86, 94, 125], "If": [0, 3, 4, 5, 23, 26, 27, 29, 31, 34, 35, 36, 37, 39, 40, 41, 44, 46, 48, 49, 51, 53, 54, 55, 57, 60, 61, 62, 63, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 81, 82, 86, 88, 90, 93, 94, 95, 98, 101, 107, 117, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 142, 143, 144, 149, 150, 151, 152, 153, 154, 159, 162], "In": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 95, 96, 98, 107, 108, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "It": [6, 8, 16, 17, 18, 19, 21, 23, 25, 26, 27, 28, 29, 30, 31, 35, 36, 37, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 56, 60, 61, 62, 63, 66, 68, 70, 71, 72, 74, 76, 77, 80, 81, 82, 83, 84, 86, 87, 90, 93, 94, 95, 96, 98, 100, 104, 117, 118, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 141, 144, 145, 146, 149, 151, 152, 153, 154, 155, 161, 162], "Its": [6, 17, 18, 21, 23, 162], "NO": 48, "NOT": [9, 87, 96, 141, 142, 162], "No": [31, 35, 39, 40, 62, 66, 81, 84, 90, 124, 125, 128, 131, 142, 145, 147, 148, 149, 150, 154], "Not": [45, 46, 47, 63, 73, 74, 87, 90, 96, 98, 117, 118, 130, 138, 147], "OR": [31, 87, 96, 138, 149], "On": [3, 7, 15, 16, 17, 18, 26, 28, 40, 47, 48, 60, 67, 69, 72, 90, 94, 117, 143, 150, 154], "One": [6, 27, 30, 44, 51, 58, 72, 75, 81, 82, 93, 98, 119, 139, 140, 141, 142, 148, 150, 152], "Or": [6, 40, 131, 132, 140, 152], "Such": [6, 17, 18, 29, 40, 124, 125, 128, 132], "TO": [29, 135, 152], "That": [5, 23, 28, 34, 37, 44, 46, 60, 63, 96, 101, 140, 147, 149, 150, 151, 153, 154, 155, 159], "The": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 26, 27, 28, 29, 31, 32, 34, 37, 38, 39, 40, 41, 43, 48, 49, 51, 52, 53, 57, 58, 61, 64, 66, 67, 68, 69, 70, 71, 74, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 101, 114, 115, 117, 118, 119, 120, 121, 122, 124, 126, 127, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159], "Their": 146, "Then": [0, 41, 45, 54, 55, 56, 58, 64, 67, 68, 72, 82, 83, 93, 94, 95, 125, 141, 147, 148, 149, 152, 154], "There": [3, 23, 24, 26, 27, 30, 31, 32, 34, 39, 40, 44, 45, 46, 48, 54, 55, 60, 62, 69, 72, 76, 80, 82, 83, 84, 87, 94, 96, 98, 99, 103, 124, 125, 127, 128, 130, 139, 140, 141, 142, 144, 146, 147, 148, 150, 151, 152, 154], "These": [13, 14, 15, 16, 22, 29, 30, 43, 44, 58, 62, 63, 69, 70, 72, 73, 79, 81, 88, 93, 96, 131, 138, 141, 142, 143, 146, 148, 150, 152, 162], "To": [3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 26, 27, 30, 31, 32, 34, 36, 40, 41, 43, 44, 48, 49, 51, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 72, 74, 76, 81, 83, 84, 85, 86, 88, 90, 93, 94, 95, 96, 108, 117, 118, 120, 121, 125, 126, 128, 129, 135, 141, 142, 144, 145, 146, 148, 150, 151, 153, 154], "Will": 69, "With": [4, 5, 23, 35, 46, 49, 63, 96, 101, 121, 139, 140, 141, 142, 144, 145, 146, 147, 148, 150, 152, 153, 154, 159], "_": [27, 30, 72, 80, 82, 89, 93, 94, 95, 131, 147, 149, 153], "__": [93, 94, 96], "__add__": 96, "__and__": 96, "__bases__": 94, "__builtins__": [51, 62, 72], "__cached__": [51, 72], "__call__": 29, "__class__": [63, 93, 94], "__closure__": 28, "__d": 95, "__dict__": [30, 76, 94], "__div__": 96, "__doc__": [51, 66, 72, 81, 94], "__eq__": 96, "__file__": [51, 72], "__floordiv__": 96, "__ge__": 96, "__getitem__": [39, 124], "__gt__": 96, "__iadd__": 96, "__idiv__": 96, "__imod__": 96, "__imul__": 96, "__init__": [26, 27, 30, 64, 75, 76, 93, 94, 95, 96, 147], "__invert__": 96, "__ipow__": 96, "__isub__": 96, "__iter__": [26, 27], "__le__": 96, "__loader__": [51, 72], "__lshift__": 96, "__lt__": 96, "__main__": [76, 93, 94, 95, 96, 98], "__maxpric": 93, "__mod__": 96, "__module__": 94, "__mro__": 95, "__mul__": 96, "__name__": [51, 72, 94, 147], "__ne__": 96, "__next__": [26, 27], "__or__": 96, "__package__": [51, 72], "__peg_parser__": 80, "__pow__": 96, "__rshift__": 96, "__salari": 93, "__secretcount": 94, "__spec__": [51, 72], "__str__": [64, 96], "__sub__": 96, "__truediv__": 96, "__version__": [76, 117, 122], "__weakref__": [76, 94], "__xor__": 96, "_add_numeric_oper": 124, "_age": 82, "_age_": 131, "_ax": 147, "_classname__attrnam": 94, "_decor": [131, 141, 147], "_drop_axi": 128, "_if": 82, "_indentation_": 34, "_init_": 63, "_io": 60, "_justcounter__secretcount": 94, "_m": 79, "_m_m_m_m_m_m_m_m_m": 79, "_marks_": 131, "_name_": 131, "_sinplot_": 139, "_strptime": 53, "_strptime_datetim": 53, "_temperatur": 30, "_transform_index": 131, "_y": 150, "a04242241123": 44, "a1": 146, "a2": 146, "a3": 146, "a3e12f": 72, "a8dfd56d4d8": 62, "a_copi": 119, "a_g_": 82, "aa": 31, "aabbcc": 114, "aabc": 31, "ab": [23, 31, 45, 51, 60, 122, 144, 150, 153], "ab123csd": 31, "abacu": 31, "abbrevi": [44, 52, 53, 54, 132, 141, 147, 148], "abc": [31, 39, 45, 46, 86], "abc12d": 31, "abc12de23f456": 31, "abcdef": 114, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 72, "abil": [44, 93, 95, 147], "abl": [3, 6, 22, 26, 28, 69, 85, 88, 95, 139, 142, 146, 148, 149, 150, 152, 153], "abnorm": 41, "abomasnow": 135, "abomasnowmega": 135, "abort": 41, "about": [5, 6, 7, 9, 19, 23, 24, 26, 28, 29, 30, 31, 32, 34, 39, 43, 44, 45, 46, 47, 48, 49, 51, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 74, 76, 80, 81, 82, 83, 84, 85, 86, 88, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 118, 119, 121, 124, 125, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 159], "abov": [3, 4, 6, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 58, 60, 62, 63, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 81, 82, 83, 85, 88, 93, 94, 95, 96, 98, 117, 119, 124, 126, 127, 128, 129, 131, 132, 133, 134, 138, 139, 140, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "abra": 135, "abruptli": [39, 40], "absenc": 43, "absol": 135, "absolmega": 135, "absolut": [23, 28, 30, 34, 66, 74], "absolute_valu": 66, "abstract": [62, 93, 146, 148, 149, 152], "abus": 28, "abxz": 31, "abyss": 31, "ac": 31, "academ": 125, "acc": 119, "accelgor": 135, "accent": 144, "accent_r": 144, "accept": [44, 64, 94, 100, 104, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "access": [23, 28, 30, 37, 48, 52, 57, 60, 62, 66, 67, 68, 71, 72, 74, 75, 76, 81, 84, 87, 88, 93, 95, 98, 117, 118, 119, 124, 125, 126, 127, 141, 142, 149], "access_level": 37, "accessor": 124, "accident": 93, "acco": 135, "accomplish": [44, 48, 49, 54, 86], "accord": [37, 66, 77, 87, 96, 152, 154, 155], "accordingli": [40, 60, 88, 139, 141, 142, 143, 152], "account": [14, 29, 146, 150], "account_bal": 93, "account_info": 93, "accur": [3, 4, 10, 12, 15, 16, 17, 18, 36, 37, 43, 74, 84, 143], "accuraci": [10, 11, 12, 13, 14, 15, 16, 17, 18], "acd": 31, "acdbea": 31, "ach": 31, "achiev": [41, 93, 96, 132, 139, 140, 143, 144, 149, 152], "achiv": 44, "acm": 89, "aco": [72, 74], "acordingli": 152, "acosh": [72, 74], "acquaint": [142, 143, 151, 152, 153, 154], "acquir": [93, 95], "acronym": 44, "across": [98, 124, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154], "act": [23, 29, 34, 67, 76, 87, 93, 94, 147, 153], "action": [34, 46, 63, 66, 79, 93, 98, 124, 140, 154], "activ": [6, 17, 18, 23, 56, 154, 161], "actual": [9, 13, 14, 15, 16, 17, 18, 26, 27, 29, 30, 44, 58, 60, 64, 69, 82, 84, 94, 95, 96, 98, 115, 120, 124, 132, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162], "ad": [3, 4, 10, 11, 12, 13, 14, 15, 16, 23, 29, 30, 31, 39, 41, 43, 45, 46, 48, 56, 62, 66, 85, 86, 95, 120, 121, 124, 125, 126, 132, 134, 138, 139, 140, 142, 147, 148, 149, 150, 152], "adapt": [145, 149, 152, 153, 154], "add": [3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 28, 29, 31, 32, 36, 37, 39, 40, 46, 48, 49, 62, 63, 66, 68, 69, 71, 72, 77, 81, 82, 83, 85, 86, 87, 93, 94, 95, 96, 114, 115, 117, 120, 121, 124, 125, 126, 131, 134, 139, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 156], "add_": [24, 99, 103], "add_6_and_3": 80, "add_all_num": 66, "add_binari": 76, "add_collect": 147, "add_expens": 93, "add_incom": 93, "add_item": 66, "add_legend": [153, 154], "add_legend_data": 147, "add_patch": 146, "add_prefix": 131, "add_skil": 93, "add_suffix": 131, "add_ten": [28, 66], "add_two_num": 49, "add_two_numb": [66, 69], "adder": 32, "addit": [6, 10, 11, 12, 13, 14, 15, 16, 23, 25, 32, 43, 63, 66, 69, 71, 76, 82, 85, 86, 87, 93, 95, 96, 117, 139, 140, 142, 143, 147, 149, 152, 157], "addition": [22, 93, 143, 150, 152, 153, 154], "address": [3, 4, 37, 39, 47, 60, 82, 150], "adienc": 153, "adjust": [6, 87, 146, 147, 148, 151, 152], "admin": 37, "adopt": 82, "adult_mal": [148, 150], "advanc": [9, 23, 41, 69, 82, 139, 150], "advantag": [9, 26, 90, 139, 149], "advers": 150, "adversari": 161, "advic": 150, "advis": [72, 82, 143, 150], "aegislashblad": 135, "aegislashshield": 135, "aerodactyl": 135, "aerodactylmega": 135, "aesthet": [138, 140, 141, 142, 143, 147, 150, 152, 154, 157], "af0f59439c9b": 28, "affect": [67, 124, 143], "afford": 139, "afmhot": 144, "afmhot_r": 144, "afoo": 31, "afootbal": 31, "afootest": 31, "after": [6, 26, 31, 37, 39, 40, 41, 43, 44, 45, 46, 57, 58, 60, 62, 63, 66, 67, 68, 69, 72, 76, 80, 81, 82, 84, 85, 86, 90, 94, 96, 98, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 140, 144, 149, 154], "ag": [32, 36, 37, 39, 44, 45, 47, 62, 63, 66, 69, 72, 76, 82, 86, 87, 93, 94, 95, 98, 114, 124, 125, 127, 128, 129, 130, 131, 133, 134, 138, 140, 143, 147, 148, 150, 154], "again": [35, 40, 45, 58, 60, 62, 64, 70, 72, 93, 95, 96, 98, 138, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "against": [31, 120, 125, 132, 140, 142, 143, 147, 153, 154], "age_": 82, "agenda": [138, 140, 142, 149, 152], "agg": [124, 136], "aggfunc": 124, "aggreg": [6, 152], "aggron": 135, "aggronmega": 135, "agre": 140, "ahead": [140, 143], "ai": [23, 107, 150, 162], "aid": 153, "aim": [2, 9, 124, 128, 151], "aipom": 135, "airlin": 155, "alakazam": 135, "alakazammega": 135, "alan": [39, 40, 66, 69, 125], "alan99": 41, "alan99whit": 40, "alfa": [124, 125, 136], "algebra": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 117, 143, 161], "algorithm": [1, 3, 4, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 39, 95, 142, 153, 161, 162], "alia": 31, "align": [24, 44, 99, 103, 115, 124, 143], "alina": 114, "aliv": [148, 150], "all": [1, 3, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 30, 31, 37, 38, 39, 40, 41, 43, 46, 48, 51, 52, 53, 58, 60, 61, 62, 63, 64, 66, 69, 70, 71, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 98, 101, 117, 118, 119, 120, 121, 124, 125, 126, 127, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 162], "all_even": 27, "all_kei": 47, "allan": 44, "allclos": 122, "alll": 115, "alloc": [71, 93, 152], "allow": [10, 11, 12, 13, 14, 15, 16, 19, 21, 23, 28, 29, 30, 31, 32, 34, 37, 39, 40, 43, 45, 46, 62, 63, 68, 69, 81, 82, 83, 86, 87, 93, 94, 95, 96, 98, 100, 104, 119, 120, 124, 125, 131, 132, 133, 141, 144, 148, 149, 153, 154], "almost": [23, 142, 151, 152], "aloha": 138, "alomomola": 135, "alon": [146, 148, 150], "along": [7, 9, 10, 13, 14, 29, 39, 62, 63, 66, 69, 71, 72, 76, 94, 95, 98, 117, 118, 120, 139, 142, 144, 146, 147, 149, 151, 152, 162], "alow": 41, "alpha": [7, 17, 18, 73, 82, 141, 143, 144, 145, 146, 147, 149, 154], "alphabet": [40, 41, 44, 68, 72, 83], "alphanumer": 44, "alreadi": [7, 22, 28, 29, 37, 44, 45, 48, 60, 62, 72, 77, 90, 98, 124, 125, 134, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154], "alright": 145, "also": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 27, 28, 29, 30, 34, 35, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 60, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 75, 76, 79, 81, 82, 83, 85, 86, 87, 88, 90, 93, 94, 95, 98, 99, 101, 103, 115, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 162], "altaria": 135, "altariamega": 135, "alter": [29, 34, 84, 124, 139, 142, 144, 146, 147, 149, 150, 151, 152], "altern": [28, 44, 60, 69, 72, 83, 128, 131, 149, 152, 154], "although": [3, 11, 28, 66, 67, 71, 75, 87, 88, 94, 139, 140, 141, 147, 148, 152, 153], "alu": 60, "alwai": [23, 26, 34, 35, 63, 64, 66, 72, 73, 74, 77, 79, 80, 81, 85, 87, 88, 94, 95, 98, 119, 124, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152], "am": [29, 31, 44, 48, 52, 53, 67, 76, 86, 98, 139, 142, 144, 146, 147, 148, 149, 150, 152, 154], "amaura": 135, "amax": [17, 18], "amaz": [43, 154], "amazon": 44, "amber": 141, "ambigu": 77, "ambipom": 135, "amd": 90, "amd64": 23, "amelia": 98, "america": [51, 55, 60], "american": 138, "ami": [32, 39, 94], "amin": [17, 18], "among": [37, 58, 94, 141, 142, 150, 151, 154], "amoonguss": 135, "amount": [34, 36, 64, 81, 84, 90, 117, 143, 147, 148, 149, 154], "ampharo": 135, "ampharosmega": 135, "ampl": 152, "an": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 49, 52, 56, 57, 58, 60, 61, 62, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 96, 98, 104, 117, 118, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "anaconda": [72, 117, 139], "anaconda3": [53, 72, 128, 131, 132, 133, 138, 141, 145, 147], "analog": [75, 124], "analys": [4, 13, 14, 15, 16, 90, 107, 139], "analysi": [2, 3, 4, 11, 13, 14, 15, 16, 56, 90, 124, 125, 128, 135, 136, 138, 139, 141, 142, 146, 147, 148, 150, 151, 152, 154, 155, 161], "analyst": [124, 132, 140], "analyt": [124, 142], "analyz": [6, 63, 90, 114, 115, 124, 125, 126, 129, 130, 132, 135, 136, 146, 154], "anana": 31, "angl": 74, "ani": [3, 5, 6, 17, 18, 21, 23, 26, 27, 29, 30, 38, 39, 40, 41, 43, 44, 46, 48, 49, 56, 62, 63, 67, 68, 69, 70, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 101, 108, 117, 118, 120, 121, 124, 128, 129, 130, 131, 133, 134, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 162], "anim": [6, 17, 18, 95], "ankl": [16, 18], "anlayt": 162, "ann": [6, 17, 18], "anniversari": 31, "annoi": 121, "annot": [140, 149, 150, 153], "annotate_ax": 147, "annual": [23, 125, 143], "anomal": 0, "anomali": [1, 161], "anomaly_detect": 7, "anonym": [21, 27, 49, 78], "anorith": 135, "anoth": [2, 6, 21, 27, 28, 29, 36, 37, 38, 39, 40, 41, 43, 44, 45, 48, 49, 54, 60, 62, 66, 67, 68, 72, 75, 76, 80, 81, 83, 85, 86, 87, 88, 93, 94, 95, 114, 119, 120, 124, 125, 126, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "anscomb": [142, 144], "answer": [43, 152], "antibiot": 39, "anuko": 44, "anukool": [44, 61], "any_fun": 76, "anymor": 153, "anyon": [44, 82], "anyth": [23, 35, 44, 66, 94, 98, 128, 131, 133, 134, 139, 146, 149, 154], "anytim": 140, "anywai": [36, 148, 149, 153], "anywher": [31, 144], "apart": [3, 23, 45, 120, 143, 146, 152], "api": [128, 131], "app": 141, "appart": 41, "appdata": 72, "appeal": [139, 140, 150], "appear": [44, 67, 68, 71, 76, 81, 95, 139, 141, 142, 143, 150, 154], "appen": 121, "append": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 39, 49, 60, 63, 66, 71, 72, 76, 86, 93, 117, 121, 124, 131, 133, 136, 142, 144, 145, 146, 147, 154], "appl": [31, 39, 44, 45, 47, 48, 83, 84, 87, 94, 126, 150], "appli": [23, 29, 30, 62, 71, 127, 128, 130, 131, 132, 134, 141, 142, 146, 149, 151, 152, 153, 154], "applic": [21, 31, 43, 44, 56, 60, 72, 75, 93, 94, 108, 120, 125, 131, 146, 161, 162], "approach": [6, 25, 93, 120, 128, 131, 153, 154], "appropri": [4, 13, 14, 15, 16, 35, 36, 37, 38, 43, 53, 66, 141, 146], "approxim": [3, 4, 43, 151, 152], "apr": 79, "april": [37, 41], "apython": 31, "ar": [0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 73, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 100, 101, 104, 107, 115, 118, 119, 120, 121, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 162], "arab": 60, "arang": [7, 114, 117, 119, 120, 122, 154, 155], "arbitrari": [47, 48, 63, 66, 98, 119, 124, 141], "arbok": 135, "arc": 74, "arcanin": 135, "arceu": 135, "archen": 135, "archeop": 135, "architectur": 6, "arctan2": 122, "arcx": 44, "arcxarcx": 44, "area": [66, 82, 87, 93, 95, 143, 149, 152, 153], "area_of_circl": [66, 82], "aren": [49, 148, 150, 152], "arg": [29, 33, 41, 53, 63, 69, 98, 131, 141, 144, 147, 153], "arg1": [49, 69], "arg2": 49, "arg3": 49, "argentina": 114, "argmax": 122, "argmin": 122, "argpartit": 122, "argsort": 122, "argument": [21, 26, 27, 29, 30, 31, 32, 44, 48, 49, 51, 52, 53, 57, 58, 60, 61, 62, 64, 67, 71, 72, 76, 78, 82, 94, 98, 114, 118, 121, 139, 140, 141, 142, 143, 145, 148, 152, 154], "argument1": 72, "argument2": 72, "argument_list": 71, "argv": 72, "ariado": 135, "aris": [29, 40], "arithmet": [30, 43, 62, 66, 93, 96, 120], "arm": [90, 138], "armaldo": 135, "arnold": 138, "aromatiss": 135, "aron": 135, "around": [44, 69, 76, 84, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154], "arr": [29, 118, 120], "arrai": [13, 14, 17, 18, 21, 23, 24, 39, 44, 47, 49, 60, 66, 72, 99, 103, 123, 124, 142, 143, 144, 146, 152, 153, 154, 155], "arrang": [61, 135, 142, 147, 150, 151], "array_equ": [117, 122], "arriv": [146, 149], "arrow": 62, "arrrai": 124, "arsen": [152, 153, 154], "art": 41, "arthur": [29, 32, 37, 39, 47, 49, 66, 69, 86, 93, 94, 95], "arthurhunt": 32, "articl": [8, 16, 18, 40, 55, 56, 57, 58, 68, 69, 98, 124, 125, 128, 130, 131, 143], "articuno": 135, "artif": 14, "artifici": [6, 11, 14, 17, 18, 150, 161], "artificial_intellig": 150, "artist": 147, "as_cmap": 141, "as_strid": 122, "asabeneh": [23, 60], "ascend": [124, 135, 136], "ascii": [44, 60], "ascii_lett": 72, "ascontiguousarrai": 122, "asian": [46, 138], "asian_countri": 46, "asid": 150, "asin": [72, 74], "asinh": [72, 74], "ask": [23, 27, 34, 43, 64, 86, 152], "aspect": [93, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 151, 152, 153, 154], "assaria": 138, "assert": [62, 63, 80, 81], "assertionerror": 62, "assess": 151, "assign": [2, 6, 16, 18, 28, 29, 30, 39, 44, 45, 46, 47, 48, 49, 54, 62, 67, 68, 69, 71, 76, 81, 83, 84, 85, 88, 89, 93, 96, 98, 124, 125, 128, 131, 133, 134, 139, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154], "assist": [141, 153], "associ": [8, 16, 18, 47, 72, 76, 81, 82, 88, 94, 140, 143, 147, 148, 152, 154], "assum": [0, 3, 6, 10, 12, 30, 87, 128, 141], "assumpt": [143, 152], "assur": [146, 148, 152], "asterisk": [32, 69, 72], "astyp": [117, 121, 122, 124, 149, 154], "async": 80, "atan": [72, 74], "atan2": [72, 74], "atanh": [72, 74], "ath": 31, "atk": 135, "atlanta": 95, "atlanti": 32, "atleast": 144, "atleast_2d": 122, "atmospher": 140, "attach": [28, 30, 41, 82, 93, 124, 140, 141, 142, 143, 144, 147, 149, 151, 152, 154], "attack": [135, 138], "attain": 150, "attempt": [140, 148, 152], "attent": [147, 149, 154], "attr": [94, 95], "attract": [86, 139], "attrib": 60, "attribut": [28, 29, 30, 31, 48, 51, 57, 62, 64, 66, 72, 74, 81, 86, 93, 95, 98, 120, 128, 131, 144, 146, 147, 152], "attributeerror": [48, 93, 94, 95, 147, 152], "attributemethod": 81, "audi": [124, 125, 136], "audienc": 153, "audino": 135, "audinomega": 135, "audio": [23, 154], "aug": 79, "augmentedassign": 81, "august": 37, "auroru": 135, "australia": [10, 12, 114, 143], "auto": [135, 136], "autom": [23, 39, 40], "automat": [6, 26, 27, 30, 43, 72, 82, 85, 93, 94, 98, 124, 139, 140, 143, 145], "automobil": 124, "automobile_data": [124, 125, 136], "automobile_data1": 136, "autopct": [114, 115], "autoregress": 152, "autoreload": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "autumn": [37, 66, 138, 144], "autumn_r": 144, "ava": 60, "avail": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 43, 44, 45, 46, 48, 60, 72, 74, 76, 79, 81, 83, 84, 86, 88, 95, 96, 120, 124, 130, 131, 140, 141, 142, 143, 149, 150, 152, 153, 154], "avalugg": 135, "averag": [0, 3, 39, 45, 66, 115, 124, 125, 143, 148, 152, 154], "avg": 135, "avocado": 87, "avoid": [28, 37, 38, 41, 48, 49, 60, 70, 75, 85, 93, 118, 128, 143, 152], "avov": [143, 144], "awai": [10, 11, 12, 13, 14, 15, 16, 23, 31, 82, 139, 142, 143, 148, 150], "await": [80, 140], "awar": [17, 18, 60, 143, 147], "award": 152, "awesom": [23, 144], "awhil": 82, "awk": 23, "ax": [7, 10, 13, 14, 24, 99, 103, 128, 131, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "ax1": [153, 155], "ax2": 153, "ax4": 153, "ax5": 153, "ax6": 153, "ax_joint": 143, "axarr": 115, "axes_styl": [139, 150], "axessubplot": [138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152, 155], "axew": 135, "axhlin": 154, "axi": [10, 13, 14, 15, 16, 17, 18, 31, 114, 115, 117, 118, 120, 121, 124, 130, 135, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154], "axis_nam": 128, "axisgrid": [140, 142, 143, 144, 145, 148, 151, 152, 153, 154], "axz": 31, "ax\u00b2": 66, "az": 138, "azelf": 135, "azumaril": 135, "azuril": 135, "b": [10, 29, 37, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 57, 60, 61, 63, 66, 67, 68, 69, 72, 73, 74, 76, 82, 83, 84, 86, 87, 88, 94, 95, 96, 98, 114, 117, 118, 119, 120, 124, 125, 127, 128, 129, 130, 131, 134, 138, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "b1": 96, "b2": 96, "b312893cfb9a": 47, "b334ef": 72, "b3ac65e67ae9": 67, "b4c816180ad9": 86, "b72af0bfcd83": 45, "b8ab82a1062c": 69, "b8eab4452d4b": 94, "b942612e6b6a": 45, "b951d4fef2c8": 63, "b977fb738e16": 93, "babydog": 95, "bac": 31, "back": [7, 44, 61, 69, 86, 90, 96, 107, 117, 124, 128, 131, 132, 133, 134, 135, 140, 147, 148, 149, 150, 151, 152], "back_end": 45, "backend": [139, 142, 154], "background": [27, 139, 141, 143, 149, 150, 152], "backlash": 31, "backpropag": [17, 18], "backslash": [44, 61, 81, 83], "backspac": 44, "backward": [30, 40, 44, 61, 84, 98, 149], "bad": [63, 124, 148], "bag": [16, 18, 82], "bagon": 135, "baidu": [69, 82], "ball": [39, 47, 83], "baltoi": 135, "banana": [31, 37, 39, 45, 48, 63, 83, 84, 86, 87, 126], "band": 152, "bandwidth": [145, 149, 152], "banett": 135, "banettemega": 135, "bangladesh": [60, 143], "bank": 147, "bar": [31, 45, 47, 68, 140, 146, 147, 148, 149, 151, 152, 154, 157], "bar1": 150, "bar2": 150, "bar3": 150, "barack": 60, "barbaracl": 135, "barboach": 135, "barcelona": 114, "barchart": 114, "bare": 162, "bark": 95, "barn": 32, "barplot": [139, 146, 150, 151], "basculin": 135, "base": [2, 3, 4, 5, 6, 9, 10, 12, 13, 14, 16, 17, 18, 23, 39, 40, 41, 43, 44, 49, 51, 52, 53, 57, 62, 63, 64, 70, 72, 74, 75, 85, 86, 87, 90, 93, 94, 95, 98, 101, 107, 121, 124, 125, 127, 128, 135, 136, 141, 143, 144, 149, 150, 152, 154, 155, 158, 159, 160], "base1": 95, "base2": 95, "baseclass": [93, 95], "baselin": 150, "baseto": 72, "basi": [23, 44, 45, 142, 144, 145, 146, 148], "basic": [22, 29, 30, 31, 41, 43, 57, 64, 68, 72, 93, 120, 124, 141, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 162], "basicli": 46, "basicmethod": 81, "bastiodon": 135, "bat": 95, "bathingsoap": 115, "bathingsoapsalesdata": 115, "battl": 44, "bayleef": 135, "baz": 45, "bb": 31, "bb99b9cebaa8": 47, "bc9e07fcbe69": 48, "bcaaeab6bf17": 85, "beak": 39, "bear": 36, "beartic": 135, "beauti": [31, 79, 138, 152], "beautifi": 60, "beautifli": 135, "beautifulli": 147, "beautifulsoup": 23, "becasu": 80, "becaus": [6, 23, 27, 29, 39, 40, 41, 44, 52, 62, 63, 66, 67, 68, 69, 71, 79, 80, 81, 82, 83, 84, 85, 87, 93, 94, 95, 98, 125, 127, 128, 129, 130, 131, 133, 134, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "becom": [27, 30, 39, 40, 44, 67, 98, 124, 125, 126, 152], "bee": 146, "beedril": 135, "beedrillmega": 135, "been": [2, 6, 13, 14, 15, 16, 17, 18, 31, 41, 44, 45, 46, 47, 48, 60, 62, 63, 76, 82, 94, 98, 107, 122, 138, 140, 141, 142, 143, 146, 147, 149, 151, 152, 153, 154], "beeswarm": [146, 147], "befor": [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 28, 29, 30, 32, 39, 40, 43, 49, 51, 57, 58, 61, 63, 67, 68, 69, 71, 76, 85, 90, 94, 95, 98, 121, 124, 125, 126, 128, 129, 130, 131, 133, 134, 138, 140, 141, 142, 143, 144, 148, 149, 150, 152, 153, 154, 162], "beforehand": 40, "began": 154, "begin": [24, 30, 39, 44, 45, 46, 57, 60, 72, 76, 81, 82, 94, 96, 98, 99, 103, 133, 134, 135, 138, 139, 140, 142, 143, 144, 146, 147, 148, 150, 151, 152, 154], "beginn": [21, 79, 90, 142, 148, 149, 162], "behav": [60, 83, 96, 98, 120], "behavior": [43, 76, 93, 94, 95, 98, 129, 133, 134, 142], "behaviour": 87, "beheeyem": 135, "behind": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 70, 71, 146, 149, 151, 154], "being": [6, 13, 14, 17, 18, 23, 30, 31, 40, 45, 47, 48, 66, 69, 84, 93, 95, 100, 104, 139, 142, 143, 144, 146, 148, 150, 152, 153], "beldum": 135, "belgium": [114, 143], "believ": [147, 152], "bell": 44, "bella": [39, 93, 94, 98], "bellossom": 135, "bellsprout": 135, "belong": [2, 9, 43, 83, 84, 93, 94], "below": [2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 25, 27, 29, 30, 35, 36, 39, 40, 41, 44, 45, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 66, 69, 70, 72, 75, 76, 79, 80, 82, 83, 84, 86, 87, 93, 95, 96, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 143, 145, 153, 154, 155], "ben": 93, "benchmark": [8, 16, 18], "bend": 142, "benefici": [82, 127], "benefit": [44, 72, 95], "benz": 136, "bergmit": 135, "bert": 161, "besid": 117, "best": [0, 3, 23, 27, 29, 39, 41, 44, 45, 60, 77, 90, 115, 141, 142, 143, 144, 146, 149, 152], "beta": [73, 142], "betavari": 73, "better": [10, 12, 28, 31, 34, 39, 40, 58, 76, 81, 90, 95, 96, 98, 114, 115, 124, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 161], "betw": 10, "between": [3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 18, 29, 31, 39, 40, 41, 43, 44, 45, 46, 48, 56, 60, 70, 72, 73, 76, 86, 87, 94, 98, 120, 121, 124, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155], "beverag": 46, "beyond": [148, 152], "bfc5aa62a0ff": 87, "bfoo": 31, "bia": [6, 161], "bibarel": 135, "bibl": 140, "bidoof": 135, "big": [10, 11, 12, 152, 153, 154, 161, 162], "bigger": [3, 6, 7, 9, 15, 16, 17, 18, 30, 36, 48, 86, 119, 144, 146, 153], "biggest": [118, 139], "bill": [29, 39, 44, 49, 66, 69, 142, 143, 146, 147, 148, 149, 152, 154], "bin": [61, 76, 87, 114, 140, 143, 145, 149, 150, 154], "binacl": 135, "binari": [4, 13, 14, 15, 16, 43, 44, 60, 76, 81, 83, 86, 87, 90, 144], "binary_r": 144, "binary_sum": 76, "bind": [88, 94, 147], "binder": 23, "binomi": 143, "biolog": [6, 17, 18], "bird": [47, 93, 95], "birth": [31, 143], "birth_year": [66, 69, 82], "birthdai": 66, "bisharp": 135, "bit": [3, 4, 7, 9, 15, 16, 17, 18, 23, 46, 73, 87, 90, 140, 144, 155], "bitwis": [81, 96], "bivarait": 143, "bivari": [145, 151, 154], "bject": 60, "black": [6, 9, 138, 146, 147, 150], "blank": 76, "blastois": 135, "blastoisemega": 135, "blaziken": 135, "blazikenmega": 135, "blend": 154, "blind": 141, "blissei": 135, "blitzl": 135, "blob": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 153], "block": [5, 34, 35, 36, 37, 38, 39, 40, 41, 60, 63, 66, 81, 93, 101, 124, 145, 152, 155, 159], "blog": [56, 98], "blood": [95, 152], "blood_pressur": 152, "blu": 93, "blue": [39, 81, 114, 141, 142, 144, 147, 155], "blueprint": [93, 94, 98], "blues_r": 144, "bmv": 136, "bmw": [95, 136], "bob": 82, "bodi": [26, 35, 36, 37, 38, 39, 40, 41, 66, 67, 71, 81, 93, 95, 124, 125, 135, 136, 138], "body_camera": 138, "bokeh": 143, "bold": [114, 149, 150, 152, 154], "bolder": 154, "boldor": 135, "bond": [44, 86], "bone": 144, "bone_r": 144, "bonsli": 135, "bonu": 150, "book": [5, 19, 24, 82, 96, 99, 100, 101, 103, 104, 141, 150, 158, 159, 160], "bookmark": 151, "bool": [94, 95], "bool_a": 119, "bool_idx": 119, "boolean": [15, 16, 17, 18, 29, 37, 44, 72, 81, 94, 117, 118, 124, 128, 129, 130, 131, 133, 134], "boost": 46, "booster": 140, "boot": [16, 18], "boot_trac": 152, "bootstrap": [150, 152], "boottel": 61, "bore": 41, "born": [31, 63], "borrow": 98, "both": [15, 16, 17, 18, 27, 29, 31, 36, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 57, 60, 61, 63, 67, 68, 72, 81, 83, 87, 88, 93, 95, 98, 100, 104, 120, 124, 125, 126, 128, 131, 139, 140, 142, 143, 147, 149, 150, 154], "bother": [140, 142], "bottl": 44, "bottom": [15, 16, 17, 18, 23, 119, 124, 140, 148, 150, 152], "bottom_plot": 150, "bottombar": 150, "bottomrow": 127, "bouffal": 135, "bound": [28, 29, 62, 73, 90, 94, 124, 147], "boundari": [4, 8], "box": [100, 104, 149, 150, 151, 152, 154, 157], "boxen": 152, "boxenplot": 152, "boxplot": [114, 139, 141, 146, 147, 148, 149, 152, 154], "boxprop": [114, 146], "bp": 114, "brace": [44, 47, 48, 81, 84, 86], "bracket": [27, 35, 39, 40, 44, 45, 46, 47, 49, 81, 83, 84, 118, 119], "brain": [6, 17, 18, 153], "braixen": 135, "brand": 154, "braviari": 135, "brazil": [60, 114], "brbg": 144, "brbg_r": 144, "bread": 44, "break": [6, 21, 26, 34, 42, 63, 64, 66, 72, 80, 81, 83, 86, 153, 154], "breakdown": 146, "breed": 47, "breez": 148, "breloom": 135, "breviti": 119, "brew": 141, "brewer": 141, "brg": 144, "brg_r": 144, "brief": [57, 60, 73, 74, 94, 121], "briefli": 141, "bright": 141, "brilliant": 44, "bring": [44, 60, 142, 144, 148, 150, 154], "broader": [147, 152], "broadli": 62, "brock": 138, "broken": [30, 70], "bronzong": 135, "bronzor": 135, "brooklyn": 147, "brother": 93, "brown": [138, 141], "browser": [23, 141], "bruce": 69, "bruyn": 114, "bsd": [124, 135, 136], "btw": 117, "buck": 138, "bucket": 141, "budew": 135, "bue": 155, "buffer": 60, "bug": 135, "bugn": 144, "bugn_d": 150, "bugn_r": 144, "build": [7, 10, 12, 13, 14, 23, 27, 30, 31, 93, 94, 100, 104, 124, 139, 145, 147, 161], "built": [5, 23, 26, 28, 30, 39, 41, 43, 49, 60, 63, 64, 66, 71, 76, 77, 79, 81, 82, 86, 88, 93, 95, 96, 101, 115, 124, 128, 131, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 159], "builtin": [23, 76], "buizel": 135, "bulbasaur": 135, "bulk": 146, "bunch": [44, 140], "buneari": 135, "bunnelbi": 135, "bupu": 144, "bupu_r": 144, "burlington": 138, "burmi": 135, "busi": [23, 124, 142, 147, 150], "bussi": 23, "butter": 44, "butterfre": 135, "bw": [149, 151], "bwmeq": 72, "bwr": [144, 151], "bwr_r": 144, "bx": [66, 143], "bypass": 41, "byte": [60, 61, 124], "c": [7, 9, 21, 23, 29, 30, 31, 37, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 60, 61, 62, 63, 66, 71, 72, 74, 80, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 98, 114, 115, 118, 119, 120, 121, 124, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 143, 145, 146, 147, 148, 150, 155], "c0": [140, 141], "c00e5d7d3c3": 62, "c02acf54079b": 136, "c1": [94, 95, 141], "c2": 141, "c3": 141, "c3f637926d7e": 60, "c4": 141, "c454c1331524": 64, "c5": 141, "c6": 141, "c7": 141, "c761920b81b0": 63, "c8": 141, "c8f749f7a9ca": 136, "c9": 141, "c92d9f2b36de": 84, "c_name": 95, "ca": [31, 138], "cab": [31, 152], "cabbag": 63, "cabxz": 31, "cach": 147, "cacnea": 135, "cacturn": 135, "cad": 23, "calcul": [3, 6, 7, 10, 12, 35, 39, 41, 43, 56, 66, 74, 81, 82, 86, 87, 93, 95, 98, 124, 139, 141, 143, 145, 146, 147, 149, 150, 152], "calcula": 22, "calculate_ag": [66, 69], "calculate_area": 93, "calculate_mean": 66, "calculate_median": 66, "calculate_mod": 66, "calculate_rang": 66, "calculate_slop": 66, "calculate_std": 66, "calculate_vari": 66, "calculu": 161, "calendar": 152, "call": [0, 6, 7, 17, 18, 19, 23, 26, 27, 28, 29, 30, 31, 32, 34, 38, 39, 40, 44, 45, 46, 47, 48, 49, 53, 58, 60, 62, 63, 64, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 100, 104, 119, 126, 127, 128, 131, 133, 134, 139, 141, 147, 149, 150, 152, 153, 154, 155], "callabl": [26, 29, 47, 72, 131, 147, 149], "callablemethod": 81, "callback": 29, "caller": 27, "cambridg": 149, "camelcas": 82, "camera": 138, "camerupt": 135, "cameruptmega": 135, "can": [3, 5, 6, 10, 12, 17, 18, 21, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 99, 101, 103, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 161, 162], "canada": [10, 12, 114], "candi": 94, "canidaefamili": 95, "cannon": 87, "cannot": [27, 29, 30, 32, 39, 41, 43, 44, 46, 47, 48, 53, 60, 62, 63, 67, 68, 69, 71, 72, 80, 82, 83, 84, 85, 86, 87, 90, 93, 98, 121, 125, 128, 130, 138, 144, 150], "canon": 23, "cap": 150, "capabl": [31, 154], "capit": [29, 44, 66, 72, 82], "capita": [10, 12], "capital_c": 82, "capitalis": 44, "capitalize_list_item": 66, "capsiz": 150, "captial": 44, "captur": [63, 73, 87], "capword": [72, 82], "car": [6, 94, 95, 124, 125, 138], "car_horsepow": 136, "car_info": 95, "car_manufactur": 136, "car_pric": 136, "carbink": 135, "care": [26, 60, 120, 124, 142, 143, 152, 155], "carefulli": 41, "carnegi": 6, "carnivin": 135, "carpricedf": 136, "carracosta": 135, "carri": [43, 48, 87, 96, 134], "carriag": 44, "carrot": 63, "carsdf": 136, "carsdf1": 136, "carsdf2": 136, "carshorsepowerdf": 136, "carson": 69, "carter": 93, "cartesian": 10, "carvanha": 135, "cascoon": 135, "case": [2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 28, 29, 31, 34, 35, 36, 39, 41, 43, 44, 47, 48, 58, 62, 63, 72, 80, 81, 82, 83, 86, 87, 88, 90, 93, 95, 98, 108, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 161], "cast": 118, "castform": 135, "cat": [6, 39, 83, 84, 98, 144], "cat1": 98, "cat2": 98, "cat_po": 147, "catch": [34, 64, 149, 154], "cateat": 114, "categor": [4, 13, 14, 15, 16, 72, 124, 125, 138, 141, 142, 145, 148, 149, 150, 151, 152, 153, 154, 157], "categori": [9, 13, 14, 16, 18, 34, 43, 62, 84, 135, 138, 141, 144, 146, 150, 153], "categoricalindex": 124, "categorize_countri": 29, "category_point": [142, 144], "caterpi": 135, "cathi": 39, "catplot": 152, "caught": [26, 41, 63], "caus": [29, 30, 41, 48, 60, 62, 63, 64, 79], "cautiou": 154, "cb8ac02fbcd3": 62, "cbar": 155, "cbook": 147, "cd": 72, "cde": 31, "cdn": 114, "ceil": [15, 16, 17, 18, 72, 74, 122], "celebi": 135, "cell": [15, 16, 17, 18, 23, 28, 67, 139, 155], "cell_cont": 28, "celsiu": 30, "center": [44, 63, 86, 121, 140, 145, 148, 149, 150, 153], "centimet": [8, 9, 13], "centimetr": 138, "centr": 142, "central": [93, 138, 142, 146, 148, 149, 150, 152], "centroid": [2, 9], "centroid_id": 9, "centuri": [52, 53], "certain": [0, 10, 11, 12, 13, 14, 15, 16, 31, 34, 41, 44, 45, 46, 53, 55, 62, 63, 72, 77, 82, 124, 139, 148], "certainli": [82, 140, 143, 146, 149, 150, 152, 153], "ch": [39, 49], "chaang": 135, "chain": [37, 82, 87, 95, 125, 128, 129, 134], "chairman": 152, "challeng": [44, 94, 153], "chandelur": 135, "chandler": 138, "chang": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 29, 35, 39, 40, 43, 48, 49, 56, 62, 63, 66, 67, 68, 69, 72, 84, 85, 86, 90, 93, 94, 95, 96, 114, 118, 119, 121, 124, 127, 128, 129, 130, 131, 133, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "change_to_upp": 29, "chansei": 135, "chapter": 44, "char": [27, 39, 83], "charact": [23, 29, 34, 39, 40, 41, 52, 53, 60, 72, 79, 81, 82, 84, 86, 131, 139], "characterist": [4, 6, 48, 93, 135, 136, 152], "charcter": 44, "charizard": 135, "charizardmega": 135, "charmand": 135, "charmeleon": 135, "chart": [150, 152, 153], "chase": 138, "chatot": 135, "chdir": 72, "che": 31, "cheat": [116, 123, 137], "check": [10, 12, 13, 14, 15, 16, 17, 18, 24, 27, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 60, 63, 66, 68, 72, 82, 84, 87, 93, 94, 95, 99, 103, 121, 124, 129, 133, 139, 141, 143, 144, 147, 152, 154], "check_season": 66, "check_text_similar": 60, "checkbox": 23, "checkpoint": 135, "chelsea": 154, "cher": 31, "cherbourg": [148, 150], "cherrim": 135, "cherubi": 135, "chesnaught": 135, "chespin": 135, "chevrolet": 136, "chikorita": 135, "child": [60, 93, 95, 148], "childmethod": 95, "children": 150, "chimchar": 135, "chimecho": 135, "china": [29, 45, 46, 49, 60], "chinchou": 135, "chines": 60, "ching": 31, "chingl": 135, "chirag": 94, "choic": [37, 43, 72, 73, 122, 141, 142, 143, 145, 146, 147, 148, 152], "choos": [0, 7, 63, 118, 124, 125, 141, 142, 147, 148, 150, 152, 153, 155], "choose_colorbrewer_palett": 141, "choose_cubehelix_palett": 141, "chose": [23, 143], "chosen": [73, 147, 154], "chp": 44, "chracter": 86, "chronometri": 152, "chunk": [66, 135, 141, 142, 148, 152], "chunksiz": 135, "ci": [142, 144, 150, 151, 152], "ci_band": 152, "ci_bar": 152, "cinccino": 135, "cir": 93, "circl": [66, 74, 82, 87, 93, 115], "circum_of_circl": 82, "circumfer": [74, 82, 87], "circumst": [63, 148], "citi": [44, 47, 49, 60, 63, 82, 93, 114, 125, 128, 138, 147], "citizen": 28, "cividi": [141, 144, 147], "cividis_r": 144, "cl": [53, 98], "claim": 138, "clamperl": 135, "clarifi": [31, 63, 88, 139], "clark": [29, 66, 69, 86], "clasess": 14, "class": [8, 9, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 32, 40, 41, 43, 52, 53, 54, 55, 61, 67, 68, 70, 71, 75, 77, 80, 81, 84, 85, 86, 88, 90, 96, 98, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 142, 146, 148, 149, 150, 152, 153, 154, 155], "class1": 95, "class2": 95, "class_suit": 93, "classic": 162, "classif": [9, 153, 161], "classifi": [4, 9, 13, 14, 15, 16, 17, 18, 62, 150], "classinfo": 95, "classmethod": [51, 56], "classnam": 93, "classon": 93, "classtwo": 93, "clauncher": 135, "claus": 114, "clawitz": 135, "claydol": 135, "clayton": 69, "clean": [31, 60, 63, 70, 75, 81, 129, 130, 161, 162], "clean_text": [31, 60], "cleaned_text": 31, "cleaner": [27, 120], "cleans": 152, "clear": [13, 14, 27, 48, 75, 98, 140, 150], "clearer": [64, 81, 140, 154], "clearli": 30, "clefabl": 135, "clefairi": 135, "cleffa": 135, "clich": 31, "click": [23, 162], "client": 153, "clipboard": 124, "cllose": 142, "cloak": 135, "clock": [52, 53, 152], "close": [3, 28, 62, 63, 76, 90, 95, 124, 140, 143, 146, 147, 149, 150, 151, 152, 153], "closer": [26, 85, 98, 143], "closest_centroids_id": 9, "closur": [21, 33], "closure_result": 28, "cloth": [4, 6, 16, 18], "cloud": 152, "cloudi": 4, "cloyster": 135, "club": [114, 154], "cluster": [2, 148, 149, 153, 155, 157, 161], "clustergrid": 156, "clustermap": 156, "cm": [9, 13, 24, 99, 103], "cmap": [15, 16, 17, 18, 24, 99, 103, 141, 144, 147, 153, 155, 156], "cmap_cycl": 144, "cmath": 74, "cmd": 79, "cmp": [45, 46, 47], "cmrmap": 144, "cmrmap_r": 144, "cn": 141, "cnt": 39, "co": [43, 72, 74, 88, 117, 120, 138, 154], "coat": [6, 16, 18], "cobalion": 135, "code": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 49, 51, 57, 60, 61, 63, 66, 67, 69, 70, 71, 72, 75, 76, 77, 80, 81, 82, 83, 86, 87, 93, 95, 98, 101, 117, 120, 138, 139, 141, 142, 144, 145, 146, 147, 149, 150, 151, 152, 154, 159], "codeobject": 81, "coeffici": [117, 140, 142, 153], "coerc": [43, 155], "coercion": 43, "coexist": 143, "cofagrigu": 135, "coffe": 150, "col": [119, 124, 128, 131, 133, 135, 140, 142, 144, 146, 148, 149, 151, 152, 154], "col1": [124, 125, 126, 128, 129, 132], "col2": [124, 125, 126, 128, 129, 132], "col3": 124, "col_clust": 156, "col_fil": 134, "col_l": 146, "col_label": [124, 126, 128], "col_label1": 133, "col_label2": 133, "col_level": 134, "col_nam": [128, 151], "col_ord": [142, 151, 154], "col_posit": 124, "col_r1": 119, "col_r2": 119, "col_var": 151, "col_wrap": [142, 144, 151, 154], "colab": [22, 23, 162], "cold": [24, 44, 99, 103], "coldest_th": 30, "collect": [6, 23, 26, 39, 40, 47, 48, 58, 61, 62, 72, 84, 88, 94, 122, 132, 146, 147, 154], "collector": 60, "colleg": 93, "collid": [75, 88], "colon": [35, 44, 45, 46, 47, 62, 66], "color": [2, 6, 10, 24, 39, 47, 72, 93, 94, 99, 103, 114, 115, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157], "color_cod": [144, 154], "color_map": [15, 16, 17, 18], "color_palett": [141, 150], "colorbrew": 141, "colormap": [141, 150, 156], "colour": [153, 155], "column": [7, 11, 13, 14, 15, 16, 17, 18, 39, 49, 60, 114, 117, 118, 119, 120, 121, 135, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156], "column_1": 154, "column_2": 154, "column_current_nam": 131, "column_label": [124, 132], "column_nam": 124, "column_on": 124, "column_posit": 124, "com": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 32, 66, 69, 82, 89], "comb": 72, "combe": 135, "combin": [3, 7, 9, 10, 12, 13, 44, 45, 46, 63, 80, 82, 87, 95, 118, 126, 133, 145, 146, 149, 151, 152, 154], "combusken": 135, "come": [23, 27, 30, 40, 41, 43, 44, 49, 63, 66, 77, 79, 88, 96, 98, 124, 139, 142, 143, 145, 147, 149, 150, 152, 153, 154], "comfort": [29, 49, 151], "comic": 114, "comma": [44, 45, 46, 47, 48, 66, 84], "command": [5, 23, 40, 63, 71, 72, 76, 90, 94, 101, 117, 139, 142, 159], "commenc": [151, 154], "comment": [21, 30, 66, 82, 92, 117], "commerc": 23, "commerci": 21, "commiss": 152, "common": [0, 6, 7, 29, 45, 48, 51, 56, 60, 62, 72, 93, 94, 98, 119, 124, 126, 139, 141, 142, 146, 148, 150, 152, 153, 154], "commonli": [31, 44, 45, 47, 48, 51, 57, 95, 141, 142, 143, 144, 145, 150, 152], "commonmark": [19, 100, 104], "comonli": 154, "compact": 49, "compani": [44, 45, 47, 69, 95, 115, 124, 125], "companion": [153, 154], "company_grp": 136, "company_info": 95, "company_nam": 95, "company_sales_data": 115, "compar": [9, 21, 27, 36, 43, 44, 45, 46, 47, 48, 82, 87, 90, 96, 139, 140, 143, 145, 146, 149, 150], "comparis": [140, 143], "comparison": [44, 81, 114, 125, 128, 148, 150, 153], "comparit": 146, "compat": [30, 85, 96, 98, 120, 125, 149], "compatible_format": 76, "compens": 147, "compet": [125, 151], "competit": 140, "compil": [21, 23, 29, 31, 81, 92, 144, 152], "complain": 98, "complement": [31, 87, 139, 147], "complementari": 74, "complet": [39, 40, 41, 44, 46, 48, 60, 72, 73, 76, 88, 95, 115, 121, 136, 146, 150, 152], "complex": [6, 17, 18, 23, 39, 40, 43, 70, 74, 81, 83, 84, 87, 94, 95, 107, 114, 115, 124, 125, 135, 136, 140, 142, 153], "complex128": 121, "complex_number1": 83, "complex_number2": 83, "complexnumb": 94, "compli": 90, "complic": [94, 124, 139, 141], "complier": 90, "compon": [10, 11, 12, 13, 14, 15, 16, 66, 93, 141, 142, 151, 152, 154], "compos": 45, "composur": 114, "compound": [23, 45, 87], "comprehend": [148, 153], "comprehens": [26, 27, 39, 143], "compris": 143, "comput": [0, 17, 18, 23, 38, 43, 44, 48, 49, 58, 60, 63, 75, 79, 81, 87, 90, 93, 95, 117, 120, 135, 140, 143, 146, 147, 148, 149, 150, 152, 154], "computation": 142, "concat": [72, 124, 135, 136, 144, 148, 153, 154], "concaten": [45, 46, 49, 72, 86, 93, 96, 117, 124, 148], "conceal": 141, "concentr": 146, "concept": [21, 22, 25, 64, 81, 88, 95, 97, 117, 141, 142, 143, 145, 148, 150, 152, 153, 154, 161], "conceptu": [75, 148, 149, 151, 162], "concern": [140, 148], "concis": [6, 27, 45, 47, 49, 64, 71, 119, 120], "conclud": [28, 150, 152, 154], "conclus": 98, "concret": 152, "concurr": 58, "conda": [23, 117], "condit": [26, 27, 29, 35, 36, 37, 38, 39, 40, 41, 47, 48, 60, 62, 70, 71, 81, 85, 87, 119, 128, 130, 152, 153, 154], "condition_inn": 38, "conditon_out": 38, "conduct": [4, 13, 14, 15, 16, 90], "confid": [142, 144, 146, 148, 149, 150, 152], "config": 68, "configur": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "confin": 135, "confirm": 79, "conflict": 124, "confus": [27, 38, 75, 82, 98, 140, 141, 147, 148, 150, 153], "congratul": [64, 79, 107], "conjuct": 152, "conjunct": [44, 86], "conkeldurr": 135, "connect": [6, 63, 147, 148, 150, 152, 162], "connection_object": 124, "connectionist": [6, 17, 18], "consid": [3, 6, 11, 17, 18, 34, 40, 44, 45, 47, 48, 52, 53, 63, 69, 75, 90, 96, 98, 120, 121, 125, 129, 130, 140, 146, 148, 151, 153, 154], "consider": [9, 13, 23, 49, 142, 148, 152, 161], "consist": [3, 6, 8, 9, 13, 15, 16, 17, 18, 45, 47, 62, 76, 77, 81, 95, 119, 142, 150, 155], "consol": [23, 86, 124], "constant": [3, 4, 21, 31, 74, 83, 92, 118, 120, 151, 152], "constantli": [151, 153], "constitut": [6, 17, 18], "constraint": 30, "construct": [29, 30, 36, 41, 63, 70, 75, 76, 79, 93, 118, 119, 124], "constructor": [51, 64, 76, 95], "consum": 152, "contain": [6, 8, 13, 14, 26, 27, 29, 37, 39, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 57, 60, 61, 63, 71, 72, 75, 76, 82, 83, 85, 86, 88, 93, 94, 115, 121, 124, 125, 129, 130, 132, 133, 134, 135, 136, 149, 150, 152, 155, 162], "content": [5, 19, 23, 31, 60, 61, 63, 72, 100, 101, 104, 124, 138, 159], "contest": 23, "context": [44, 68, 96, 139], "contextmanag": 81, "contigu": [44, 148], "continu": [0, 7, 21, 27, 34, 42, 63, 80, 81, 94, 95, 143, 147, 150, 151, 154], "contour": [7, 13, 14, 141, 143, 144], "contrast": 119, "contribut": [3, 4, 150, 161], "control": [6, 23, 27, 35, 36, 43, 44, 81, 93, 96, 98, 138, 140, 141, 143, 147, 148, 149, 150, 152, 154, 157], "conttinu": 144, "convei": [150, 152], "conveni": [3, 4, 117, 140, 142, 143, 146, 149], "convent": [31, 76, 94, 98, 128, 131, 152], "convention": 94, "converg": [2, 3, 142], "convers": [21, 44, 81, 92, 141, 146, 149], "convert": [5, 6, 15, 16, 17, 18, 30, 43, 44, 45, 48, 49, 51, 52, 53, 56, 60, 62, 66, 74, 83, 85, 86, 87, 90, 101, 117, 118, 121, 124, 125, 126, 136, 141, 146, 150, 159], "convert_celsius_2_fahrenheit": 66, "convert_dictionary_to_python_object": 94, "convient": 124, "convini": [118, 121], "convnet": 121, "convolut": 161, "cook": 86, "cool": [121, 141, 144], "cool_r": 144, "cooler": 27, "coolwarm": [24, 99, 103, 144, 145, 148, 149, 150, 153], "coolwarm_r": 144, "coordin": 96, "cope": 63, "copi": [23, 44, 48, 61, 72, 93, 120, 121, 124, 128, 129, 130, 131, 133, 134, 147], "copper": [144, 150], "copper_r": 144, "copyreg": 76, "copyright": 23, "copysign": [72, 74, 122], "core": [17, 18, 94, 117, 122, 124, 128, 131, 132, 133, 142, 149, 154], "corg": 45, "cori": [39, 44, 66, 69], "cornel": 149, "corner": 119, "corphish": 135, "corr": [124, 155], "corr_func": 153, "corrcoef": 117, "corrctli": [15, 16], "correct": [4, 6, 13, 14, 15, 16, 17, 18, 36, 40, 45, 62, 69, 72, 79, 90, 121, 125, 126, 140, 142, 148, 154], "correctli": [3, 13, 14, 15, 16, 17, 18, 39, 64, 153], "correl": [117, 124, 140, 143, 144, 146, 151, 153, 154, 156], "correspond": [6, 10, 47, 57, 62, 64, 72, 82, 88, 90, 94, 98, 119, 143, 146, 149, 150, 151, 152, 154], "corrupt": [10, 12], "corsola": 135, "cosh": [72, 74], "cosin": [72, 74, 117], "cost": [10, 11, 12, 13, 14, 15, 16, 17, 18], "cost_histori": [10, 11, 12], "cottone": 135, "could": [6, 7, 23, 26, 41, 44, 60, 63, 75, 77, 88, 93, 94, 98, 120, 121, 128, 130, 138, 140, 141, 146, 147, 149, 150, 152], "couldn": [98, 144], "count": [6, 7, 31, 39, 40, 41, 44, 46, 60, 66, 80, 93, 94, 98, 114, 124, 135, 138, 143, 146, 149, 152, 154, 157], "counter": [39, 40, 94], "counterintuit": 27, "counterpart": [27, 44, 74], "counti": 62, "countplot": [146, 149, 150], "countri": [3, 8, 10, 12, 29, 32, 37, 39, 44, 45, 46, 47, 49, 60, 62, 63, 66, 82, 93, 114, 143, 152], "countries_data": 60, "countries_details_data": 29, "countries_to_look_at": 114, "country_lst_on": 63, "country_lst_two": 63, "coupl": [3, 4, 60, 141, 147, 148, 149, 150], "cours": [22, 23, 44, 66, 72, 80, 87, 138, 140, 142, 143, 144, 146, 147, 148, 150, 152], "course_nam": 66, "coursera": [0, 2, 3, 4, 6, 8], "cous": [10, 11, 12], "cov": [142, 153], "covari": 142, "cover": [28, 29, 31, 60, 62, 124, 125, 126, 130, 131, 133, 138, 140, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 161], "coverg": 142, "covert": 90, "cp1252": 60, "cplai": 23, "cradili": 135, "craft": 146, "cram": 153, "cranido": 135, "crash": 63, "crawdaunt": 135, "creat": [7, 10, 16, 18, 21, 23, 24, 26, 28, 29, 30, 31, 39, 40, 43, 51, 53, 54, 55, 56, 60, 61, 62, 63, 66, 67, 68, 70, 76, 77, 79, 80, 82, 83, 84, 88, 90, 93, 95, 96, 98, 99, 103, 117, 119, 120, 121, 127, 128, 129, 130, 131, 132, 133, 136, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162], "creation": [60, 118, 161], "creator": 98, "credit": [23, 139], "cresselia": 135, "cript": 60, "cristiano": 114, "criteria": [28, 29], "critic": [63, 152, 153], "croagunk": 135, "crobat": 135, "croconaw": 135, "cross": [6, 70, 152, 154], "crustl": 135, "cryogon": 135, "css": [44, 45, 93], "css4": 141, "csv": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 114, 115, 125, 132, 133, 134, 135, 138, 143, 149, 150, 152, 154], "csv_exampl": 60, "csv_reader": 60, "ctrl": [23, 40, 62], "cubchoo": 135, "cube": [28, 40, 49, 69, 71, 86], "cubehelix": 144, "cubehelix_palett": 141, "cubehelix_r": 144, "cubic": 3, "cubon": 135, "cum": [44, 48], "cumbersom": 142, "cumsum": [117, 122], "cumul": 117, "cup": 150, "curat": [142, 162], "curiou": 142, "curious": 154, "curli": [31, 44, 47, 48, 86], "current": [2, 3, 4, 10, 11, 12, 17, 18, 21, 28, 39, 40, 41, 52, 56, 57, 58, 59, 60, 63, 68, 72, 73, 76, 79, 88, 93, 94, 95, 133, 134, 140, 141, 142, 144, 146, 154], "current_examples_indic": 9, "current_file_nam": 61, "current_palett": 141, "current_salari": 82, "current_tim": 55, "current_year": [66, 69], "current_year_2021": 82, "curri": [49, 93], "cursor": 60, "curtain": 154, "curv": [10, 11, 12, 13, 14, 15, 16, 143, 149], "custom": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 36, 72, 76, 125, 139, 140, 141, 142, 144, 146, 147, 149, 150, 151, 152, 153, 154], "custom_lin": [24, 99, 103], "customerror": 64, "customiz": [139, 152, 154], "cut": [8, 15, 16, 17, 18, 44, 148, 149, 151], "cyan": 141, "cycl": [141, 144], "cycler": [24, 99, 103], "cylind": [124, 125, 136], "cyndaquil": 135, "cython": 147, "d": [2, 37, 39, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 60, 63, 66, 82, 83, 84, 86, 94, 95, 96, 115, 118, 121, 124, 129, 130, 135, 143, 147, 149, 153, 155], "d1": [54, 95], "d2": 54, "d3": 54, "d4": 54, "d75c9779269a": 64, "da": 150, "daaaat": 31, "daaat": 31, "daat": 31, "dai": [22, 31, 43, 44, 52, 53, 54, 55, 56, 57, 66, 68, 139, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 154], "daili": 142, "danc": 93, "dark": [135, 139, 141, 144, 150], "dark2": 144, "dark2_r": 144, "darkgrid": [139, 146, 148, 149, 152], "darkrai": 135, "darmanitanstandard": 135, "darmanitanzen": 135, "darumaka": 135, "dash": 145, "dashboard": [146, 147], "dat": [31, 61], "data": [3, 4, 6, 8, 23, 24, 26, 27, 28, 29, 31, 32, 39, 40, 44, 45, 46, 47, 48, 53, 60, 61, 63, 66, 69, 72, 76, 82, 83, 85, 86, 87, 90, 93, 95, 99, 103, 107, 117, 119, 120, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 162], "data1": [45, 124, 143], "data2": 143, "data_1": [60, 61], "data_analysi": 150, "data_point": 145, "data_str": 53, "data_typ": 125, "databas": [56, 60, 124], "datafam": 126, "datafram": [10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 114, 118, 135, 136, 137, 138, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "datapoint": [140, 141, 146, 149, 151, 152, 154], "datasci": [44, 67, 87], "dataseri": 124, "dataset": [7, 9, 10, 11, 12, 14, 114, 121, 124, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154, 155, 156, 157], "datatyp": [21, 44, 46, 74, 84, 85, 92, 124, 125, 154], "date": [10, 53, 55, 124, 138, 142, 144, 152, 154], "date_object": [51, 53], "date_rang": 124, "date_str": [51, 53], "date_tim": 52, "date_time1": 52, "date_time2": 52, "dateclass": 51, "datetim": [21, 54, 59, 72, 124], "datetime64": 122, "datetime_capi": 51, "datetime_london": [51, 55], "datetime_ni": [51, 55], "datetime_object": 51, "datetimeindex": 124, "daughter": 93, "dave": 89, "david": [69, 86], "dct": 63, "dd": [51, 53, 54], "dd6f749658a4": 30, "de": [31, 114], "deal": [25, 30, 41, 43, 44, 60, 85, 121, 124, 138, 141, 142, 143, 144, 145, 146, 147, 148, 152, 153, 154], "dealt": [138, 142, 146], "debug": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 62, 70, 77, 81], "dec": [23, 29, 52, 53, 57, 79], "decemb": [37, 56], "decend": 135, "decent": [146, 149, 150], "decept": 148, "decid": [3, 4, 7, 10, 12, 30, 34, 47, 131, 142, 143, 148, 149, 150, 152, 154], "decim": [30, 44, 52, 53, 76, 82, 83, 84, 86, 87, 118], "decis": [8, 38], "deck": [148, 150, 154], "declar": [28, 29, 40, 44, 45, 60, 62, 64, 66, 67, 68, 72, 84, 87, 88, 93, 94, 98, 118, 142, 150, 152, 153, 154], "decod": [44, 62], "decompos": 77, "decomposit": [25, 120], "decor": [21, 28, 33, 98, 152, 154], "decorator_with_paramet": 29, "decreas": [6, 10, 11, 12, 13, 14, 15, 16, 40, 70, 138, 141, 143, 148], "decrement": 96, "dedenn": 135, "dedic": [1, 154], "deduc": [142, 149], "deep": [6, 25, 41, 117, 138, 141, 161], "deepak": [61, 72], "deeper": [51, 138, 142, 144, 149, 151, 152, 154], "deepli": [41, 142], "deerl": 135, "def": [26, 27, 28, 29, 30, 32, 36, 37, 38, 41, 49, 58, 63, 64, 66, 67, 68, 69, 70, 71, 72, 76, 77, 80, 81, 83, 86, 88, 93, 94, 95, 96, 98, 131, 135, 139, 142, 144, 146, 147, 153, 154], "default": [5, 7, 9, 15, 16, 17, 18, 28, 51, 68, 70, 74, 76, 79, 86, 94, 95, 101, 114, 117, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 139, 141, 142, 144, 145, 148, 149, 151, 152, 154, 155, 159], "default_ord": 44, "default_valu": 124, "defens": 135, "defer": 133, "defin": [3, 4, 5, 17, 18, 21, 26, 27, 29, 30, 31, 32, 39, 40, 43, 44, 45, 46, 47, 49, 51, 57, 62, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 86, 88, 93, 95, 96, 101, 121, 124, 128, 132, 139, 140, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159], "definit": [23, 29, 39, 66, 69, 71, 72, 76, 81, 86, 93, 94, 95, 98], "degrad": 98, "degre": [3, 10, 11, 12, 13, 14, 15, 16, 30, 72, 74], "deino": 135, "del": [28, 44, 45, 46, 47, 80, 94], "delai": [57, 58, 140, 146], "delattr": 94, "delcatti": 135, "deleg": 95, "delelop": 23, "delet": [28, 30, 47, 48, 61, 62, 81, 117, 124, 130, 133], "deliber": 62, "delibird": 135, "delimit": [60, 121, 124, 135], "delphox": 135, "delv": [139, 140, 143, 144], "demand": [27, 139], "demo": [7, 8, 144], "demonstr": [26, 45, 81, 95, 126, 143, 146, 153, 154], "deni": 37, "denim": [141, 147], "denmark": [10, 12, 29, 45, 63, 143], "denomin": 43, "denot": [30, 32, 44, 69, 70, 84, 93], "densii": 149, "densiti": [7, 140, 141, 143, 144, 145, 147, 149, 152], "deoxysattack": 135, "deoxysdefens": 135, "deoxysnorm": 135, "deoxysspe": 135, "depart": [94, 152], "depat": 94, "depend": [3, 4, 23, 28, 34, 41, 60, 64, 72, 73, 96, 100, 104, 117, 124, 138, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154], "depict": [141, 146, 148, 152], "deploy": 161, "deprec": [132, 136, 140, 145, 147], "deprecation_addendum": 147, "depth": [70, 82, 95, 138, 142, 143, 146], "deriv": [3, 4, 6, 63, 64, 93, 95, 98, 152], "derived1": 95, "derived2": 95, "derivedclass": [93, 95], "descend": [60, 66, 124], "descent": [6, 17, 18, 162], "describ": [3, 4, 6, 13, 14, 15, 16, 66, 69, 72, 81, 87, 93, 124, 138, 143, 148, 150, 151, 152, 153, 154], "descript": [41, 44, 45, 46, 47, 48, 60, 66, 72, 73, 74, 76, 93, 94, 117, 124, 131, 138, 148, 152], "descriptor": [60, 76], "deserv": 149, "desgin": 83, "design": [23, 29, 124, 142, 150, 151, 162], "desir": [29, 41, 45, 121, 154, 161], "desk": 23, "desktop": [23, 61], "despin": [139, 149, 150, 151, 153, 154], "destroi": [27, 67, 94], "destruct": 94, "destructur": 63, "det": 120, "detach": 60, "detail": [5, 27, 30, 57, 62, 69, 81, 86, 93, 94, 95, 101, 119, 124, 126, 128, 133, 134, 138, 140, 142, 143, 144, 146, 147, 148, 149, 150, 152, 154, 158, 159, 160], "detect": [1, 3, 4, 17, 18, 62, 119, 141, 161], "determin": [44, 48, 129, 130, 134, 142, 143, 144, 146, 148, 150, 152, 153, 154], "determinist": 73, "develop": [9, 13, 21, 23, 31, 37, 64, 75, 82, 90, 93, 98, 108], "deviat": [0, 7, 66, 93, 117, 121, 124, 148, 150], "devic": [86, 90], "dewgong": 135, "dewott": 135, "df": [114, 115, 124, 128, 131, 132, 133, 134, 135, 136, 138, 140, 142, 144, 147, 149, 152, 154, 155], "df1": [124, 143], "df2": [124, 143], "df6ce7ede1dc": 62, "df_xlsx": 135, "dfca0b041b3d": 64, "dhl": 44, "di": [31, 39], "diag": [122, 153], "diag_ax": 153, "diag_indic": 153, "diag_kind": [144, 153], "diag_kw": 144, "diag_sharei": 153, "diagon": [144, 153], "diagram": [88, 127, 131, 134, 145], "dialga": 135, "dialogu": 39, "diamet": 74, "dianci": 135, "dianciemega": 135, "dichotom": [4, 13, 14, 15, 16], "dict": [23, 32, 48, 60, 63, 66, 72, 83, 84, 85, 94, 114, 126, 127, 128, 129, 130, 131, 133, 134, 136, 140, 149, 154, 156], "dict1": [39, 47], "dict2": 39, "dict_1": 94, "dict_item": 47, "dict_kei": 47, "dict_valu": 47, "dictionari": [21, 23, 29, 30, 32, 37, 44, 45, 46, 48, 49, 50, 62, 66, 76, 81, 83, 85, 87, 94, 124, 126, 131, 136, 139, 141, 154], "dictionaryliter": 81, "did": [27, 29, 35, 62, 63, 67, 86, 87, 93, 95, 124, 152], "didn": [44, 93, 96, 139, 148, 149, 154], "die": 154, "diet": [151, 152], "diff": [10, 12, 55], "differ": [6, 7, 10, 17, 18, 28, 29, 31, 32, 34, 39, 40, 41, 43, 44, 45, 46, 47, 52, 56, 57, 58, 60, 61, 62, 63, 66, 67, 69, 71, 72, 75, 77, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 98, 100, 104, 119, 120, 124, 125, 126, 129, 132, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162], "difference_upd": 48, "differenti": 80, "difficult": [90, 139, 146, 147, 148, 149, 150], "dig": [51, 152, 154], "diggersbi": 135, "digit": [4, 6, 15, 16, 17, 18, 39, 44, 53, 72, 76, 80, 82, 87, 93, 121, 152], "digit_label": [15, 16, 17, 18], "digit_pixel": [15, 16, 17, 18], "diglett": 135, "dimens": [117, 118, 119, 120, 124, 142, 153, 154], "dimension": [2, 25, 39, 49, 117, 118, 124, 126, 142, 153, 154, 161], "dinner": [66, 142, 145, 146, 147, 148, 149, 150, 154], "dir": [31, 51, 62], "dir_nam": 61, "direct": [3, 4, 5, 8, 16, 18, 19, 31, 40, 44, 49, 51, 52, 53, 57, 71, 93, 101, 150, 159], "directli": [23, 27, 45, 64, 66, 72, 75, 88, 90, 93, 94, 120, 139, 145, 151, 152, 162], "directori": [21, 60, 62, 65, 72, 75, 86], "directory_nam": 72, "dirichlet": 152, "disadvantag": [90, 149], "disagre": 43, "discard": 48, "disclosur": 154, "disconnect": 63, "discourag": 98, "discours": 154, "discret": [141, 142, 149, 150, 152, 154], "discrimin": [9, 13], "discuss": [31, 36, 43, 44, 46, 72, 77, 81, 86, 95, 124, 125, 126, 127, 128, 133, 134, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162], "disengag": 152, "disjoint": 48, "disk": [60, 90], "dispar": 152, "dispers": [138, 148], "displai": [0, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 36, 37, 38, 39, 40, 41, 44, 51, 61, 63, 64, 76, 79, 83, 87, 90, 94, 95, 101, 114, 121, 127, 139, 141, 143, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159], "displot": 145, "dispos": 152, "dispsid": 95, "disregard": 41, "disrupt": 63, "dist": [72, 157], "distac": 39, "distanc": [31, 39, 87, 98, 148, 149], "distinct": [119, 152], "distinguish": [6, 9, 13, 14, 17, 18, 48, 60, 98, 141], "distort": 152, "distplot": [140, 153], "distribut": [14, 21, 73, 93, 114, 117, 118, 121, 138, 140, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154], "distriut": 148, "ditribut": 143, "ditto": 135, "div0ssutgadkwstr": 72, "dive": [138, 142, 148, 150, 151, 154], "diverg": 141, "divid": [29, 34, 40, 45, 51, 62, 72, 74, 75, 77, 82, 86, 87, 117, 120, 122, 124, 125, 128, 146, 148, 150, 151, 152], "dividend": 69, "divis": [29, 34, 40, 41, 49, 62, 63, 66, 82, 87, 96, 117, 120], "divisor": 69, "django": [23, 44], "dll": 72, "do": [3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 27, 30, 31, 34, 35, 36, 39, 40, 41, 44, 45, 46, 48, 49, 55, 62, 63, 64, 66, 69, 72, 73, 74, 76, 77, 81, 82, 84, 86, 87, 88, 90, 93, 94, 95, 96, 98, 99, 100, 103, 104, 107, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162], "do_someth": 69, "doc": [30, 66, 76, 120], "docstr": [21, 44, 78, 94], "doctor": 31, "document": [5, 24, 60, 61, 66, 76, 81, 93, 94, 99, 101, 103, 104, 118, 119, 120, 139, 142, 148, 158, 159, 160], "dodg": [136, 146, 147, 148, 149, 150, 151, 152], "dodrio": 135, "doduo": 135, "doe": [3, 10, 12, 27, 29, 30, 31, 35, 39, 40, 41, 44, 45, 46, 48, 49, 53, 60, 62, 63, 66, 67, 69, 72, 74, 76, 81, 82, 84, 86, 87, 88, 90, 93, 94, 95, 96, 118, 120, 124, 127, 128, 129, 130, 131, 133, 134, 141, 142, 144, 146, 147, 149, 154], "does_exist": 45, "doesn": [9, 30, 37, 39, 40, 41, 44, 46, 47, 53, 72, 85, 94, 131, 139, 140, 142, 147, 149, 150, 154], "dog": [46, 95], "dohc": [124, 125, 136], "dollar": [24, 99, 103, 114, 115], "domain": [23, 140, 142, 147, 150, 152, 154], "dominantli": 142, "don": [6, 9, 30, 40, 41, 45, 49, 60, 66, 68, 72, 75, 82, 93, 95, 98, 124, 131, 133, 134, 139, 140, 142, 143, 145, 147, 148, 149, 150, 152, 153, 154], "donald": 60, "done": [23, 27, 29, 30, 35, 36, 39, 40, 41, 44, 49, 60, 75, 79, 85, 86, 90, 95, 98, 125, 129, 132, 139, 140, 141, 144, 146, 147, 149, 150, 151, 152, 153, 154], "dong": [3, 4], "donphan": 135, "door": 94, "dot": [22, 25, 72, 75, 93, 94, 114, 115, 117, 120, 143, 146, 147, 148, 149, 150, 152, 162], "doubl": [32, 44, 66, 71, 81, 83, 84, 87, 93, 94, 95, 96, 139], "doublad": 135, "doubt": [143, 146, 147, 148], "down": [3, 4, 30, 41, 70, 72, 87, 138, 139, 141, 143, 153, 154], "download": [23, 72, 114, 115, 121], "downsid": 150, "downtown": 47, "dpi": [114, 115], "dr": [60, 72, 93], "draft": [149, 150, 151, 152, 153, 154], "drag": 146, "dragalg": 135, "dragon": 135, "dragonair": 135, "dragonit": 135, "drapion": 135, "dratini": 135, "draw": [7, 15, 16, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 154], "draw_fram": 150, "draw_stripplot": 147, "drawn": [98, 144, 147, 148, 152, 154], "dress": [6, 16, 18], "drifblim": 135, "drifloon": 135, "drilbur": 135, "drill": [141, 142], "drink": 83, "drive": [36, 162], "driver": [69, 152], "drop": [8, 10, 12, 15, 16, 17, 18, 27, 133, 134, 135, 141, 142, 154], "drop_dupl": [130, 134], "drope": 128, "dropna": [124, 134, 140, 142, 144, 153, 154], "dropoff_datetim": 152, "dropoff_latitud": 152, "dropoff_longitud": 152, "drowze": 135, "druddigon": 135, "dry": [66, 93], "dt_object": 56, "dt_object1": 53, "dt_object2": 53, "dt_string": [53, 54], "dtype": [17, 18, 114, 117, 118, 120, 121, 124, 125, 126, 132, 133, 135, 136, 143, 144, 153], "duc": 31, "ducklett": 135, "due": [30, 32, 41, 43, 45, 60, 63, 88, 90, 120, 146], "dugtrio": 135, "dull": 139, "dummi": [143, 150, 154], "dump": [60, 76], "dumpstack": 61, "dunsparc": 135, "duosion": 135, "duplic": [39, 48, 72, 84, 88, 124, 128, 134], "durant": 135, "durat": 152, "dure": [23, 49, 62, 63, 69, 71, 72, 90, 98, 139, 142, 146, 151], "dusclop": 135, "duski": 141, "dusknoir": 135, "duskul": 135, "dusti": 141, "dustox": 135, "dutch": 60, "duti": 138, "dwebbl": 135, "dynam": [21, 84, 88, 90], "dynamicfeatur": 81, "dystopia": [10, 12], "e": [2, 3, 4, 6, 10, 11, 12, 22, 23, 27, 31, 39, 40, 41, 43, 44, 45, 46, 47, 48, 60, 61, 63, 67, 68, 72, 74, 79, 82, 83, 85, 86, 87, 93, 95, 115, 118, 120, 121, 124, 125, 126, 129, 130, 131, 132, 133, 134, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162], "e0e0e0": 114, "e15e5601926f": 98, "e2e604bf92d": 62, "e32e417070a1": 84, "e8fb9ed4ccdc": 152, "each": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 29, 36, 37, 39, 40, 41, 44, 45, 46, 47, 48, 63, 66, 70, 71, 72, 76, 81, 82, 83, 84, 85, 86, 88, 90, 93, 94, 95, 98, 117, 118, 119, 120, 124, 125, 126, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 155, 161], "earli": 22, "earlier": [138, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "earn": 87, "earth": 66, "easi": [21, 23, 26, 39, 40, 44, 60, 75, 77, 79, 90, 93, 124, 125, 139, 144, 146, 148, 150, 152, 154, 162], "easier": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 26, 30, 31, 49, 70, 75, 80, 86, 90, 98, 126, 146, 151, 153], "easili": [27, 51, 56, 76, 82, 95, 128, 139, 143, 146, 154, 162], "eat": [79, 95], "eaxh": 10, "eb3d2b": 72, "economi": [3, 10, 12], "ecosystem": [19, 100, 104], "ed": 39, "ed7c4dc05b92": 67, "edg": [6, 115, 140, 149, 150, 153], "edgecolor": [140, 146, 147, 150, 153, 154], "editor": [37, 139], "edu": 8, "educ": [31, 146, 152], "educa": 31, "education_level": 149, "edward": 153, "ee": 31, "ee4e8ee8c904": 62, "ee80ca1a52c8": 83, "eelektrik": 135, "eelektross": 135, "eeve": 135, "effect": [44, 60, 68, 72, 93, 141, 143, 146, 150], "effici": [30, 39, 40, 43, 60, 66, 72, 75, 88, 90, 93, 117, 124, 126, 140, 147, 152], "effort": 153, "eg": [29, 31, 82, 90], "egg": 72, "eh": 73, "eigenvalu": [25, 120], "eigenvector": 25, "eight": 136, "eighti": 31, "einstein": 31, "either": [31, 34, 35, 37, 57, 63, 64, 76, 81, 87, 90, 95, 124, 125, 131, 138, 139, 141, 142, 145, 146, 148, 149, 150, 152, 153, 154], "ekan": 135, "el": 44, "elabor": 76, "electabuzz": 135, "electivir": 135, "electr": 135, "electrik": 135, "electrod": 135, "eleg": [21, 26, 27, 28, 47, 49, 70], "elegantli": 26, "elekid": 135, "element": [26, 39, 40, 43, 44, 57, 61, 66, 71, 72, 73, 79, 84, 85, 86, 87, 89, 94, 118, 119, 120, 121, 124, 126, 127, 139, 150, 152, 154], "elementari": 148, "elementtre": 60, "elementwis": [120, 121], "elemnet": [47, 84], "elemtnt": 84, "elgyem": 135, "elif": [13, 21, 28, 34, 38, 41, 42, 64, 80], "elimin": [41, 84, 98], "elliot": 138, "ellipsi": 81, "ello": 44, "els": [15, 16, 17, 18, 21, 26, 28, 31, 34, 35, 38, 42, 44, 45, 47, 49, 60, 66, 69, 70, 72, 77, 80, 83, 86, 93, 94, 114, 125, 128, 130, 131, 139, 140, 142, 144, 147, 150, 152, 153], "elucid": 150, "email": [4, 13, 14, 15, 16, 23, 31, 32, 60, 89], "email_exchanges_big": 60, "emath": 122, "emb": [24, 99, 103], "embark": [148, 150], "embark_town": [148, 150], "embed": [43, 76], "emboar": 135, "emili": 93, "emolga": 135, "emp": [31, 94, 95], "emp_data": 69, "emp_id": [47, 69], "emp_nam": 47, "emphasi": [94, 151, 154], "employe": [93, 94, 95, 152], "employee_info": 95, "empoleon": 135, "empow": [31, 44, 141], "empoye": 69, "empti": [10, 30, 31, 39, 40, 41, 44, 45, 46, 47, 60, 61, 66, 68, 73, 75, 93, 94, 117, 120, 124, 125, 130, 132, 145], "empty_lik": 120, "en": 145, "enabl": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 95, 153, 161], "encapsul": 28, "enclos": [28, 39, 40, 44, 46, 62, 79, 84, 147], "encod": [44, 60, 62, 63, 138, 154, 155], "encount": [62, 63, 120, 152], "encourag": 149, "encrypt": 73, "end": [24, 26, 27, 35, 39, 40, 41, 44, 46, 53, 58, 60, 62, 63, 66, 70, 76, 81, 84, 86, 90, 99, 103, 117, 121, 124, 125, 139, 141, 142, 143, 144, 147, 150, 152, 153, 154, 162], "end_index": 23, "endindex": 119, "endless": 149, "endpoint": 121, "endswith": 44, "enforc": [81, 85], "engag": 152, "engin": [23, 31, 94, 124, 125, 135, 136, 152], "engine_rotation_spe": 82, "england": [60, 62, 63, 93, 114], "english": [44, 47, 60, 83, 90, 139], "enhanc": [140, 146, 147, 154], "enjoi": [44, 72, 144, 149], "enlarg": 139, "enough": [36, 45, 46, 82, 138, 140, 146, 148, 149, 150, 151, 152, 153], "enrol": 150, "ensembl": [161, 162], "ensur": [49, 60, 81, 95, 141, 144, 146, 150, 152, 153], "ensure_ascii": 60, "entei": 135, "enter": [35, 36, 37, 38, 40, 41, 63, 64, 66, 77, 81, 86, 87, 95, 152, 154], "enterpris": 23, "entir": [26, 27, 44, 45, 46, 47, 60, 90, 95, 127, 145, 149, 150, 152, 154], "entireti": 154, "entiti": [80, 93], "entri": [17, 18, 37, 39, 47, 63, 124, 125, 132], "enuemer": 39, "enumer": [9, 10, 13, 14, 15, 16, 39, 44, 48, 147, 150], "env": 23, "environ": [22, 72, 90, 142, 154], "eof": 60, "eoferror": 62, "ep": 122, "epar": 60, "epitom": 153, "epoch": 57, "epsilon": [7, 17, 18], "eq": 72, "equal": [26, 35, 36, 37, 38, 39, 40, 41, 43, 45, 69, 70, 72, 74, 79, 82, 83, 87, 96, 115, 117, 120, 124, 131, 145, 148, 150, 152], "equal1": 72, "equat": [4, 6, 11, 66, 140], "equip": [121, 143], "equival": [27, 29, 30, 39, 41, 44, 45, 47, 49, 51, 52, 53, 60, 71, 83, 87, 94, 95, 98, 119, 120], "er": 31, "era": 154, "eras": 60, "erf": [72, 74], "erfc": [72, 74], "eric": 69, "erp": 23, "err_kw": 152, "err_palett": 152, "err_styl": 152, "errcolor": 150, "errno": 62, "error": [6, 23, 26, 29, 30, 41, 43, 44, 47, 48, 60, 63, 64, 66, 67, 69, 74, 80, 81, 84, 85, 86, 90, 93, 94, 95, 96, 120, 125, 133, 140, 141, 150, 151], "errstat": 122, "errwidth": 150, "escap": [24, 61, 99, 103], "escavali": 135, "especi": [25, 90, 98, 117], "espeon": 135, "espurr": 135, "essenti": [22, 95, 117, 121, 150], "essesnti": 107, "establish": [144, 152], "estim": [3, 7, 11, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152], "estonia": 63, "et": 60, "etc": [3, 6, 15, 16, 17, 18, 23, 24, 26, 27, 39, 40, 41, 43, 44, 46, 47, 48, 51, 52, 53, 57, 66, 71, 72, 80, 81, 82, 85, 87, 88, 90, 93, 94, 99, 103, 117, 119, 120, 121, 124, 132, 135, 136, 138, 143, 144, 147, 151, 152, 162], "ethan": [49, 66, 69, 86], "ethic": 161, "etre": 60, "euclidean": [74, 87], "europ": [51, 55], "eval": [23, 66, 86], "evalu": [34, 35, 36, 37, 40, 41, 60, 71, 86, 87, 90], "evan": 138, "even": [21, 23, 27, 28, 29, 30, 34, 36, 37, 39, 40, 41, 43, 44, 45, 49, 60, 63, 66, 67, 69, 70, 71, 76, 81, 82, 85, 86, 87, 90, 94, 95, 98, 120, 121, 125, 126, 129, 130, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "even_list": 71, "even_no": 71, "even_num": 66, "even_numb": [29, 39, 49, 71], "even_odd": 66, "evenli": [117, 121], "evenodd": 69, "evens_and_odd": 66, "event": [7, 63], "eventu": [151, 153], "ever": [31, 39, 44, 88, 144, 147, 154], "everi": [4, 6, 7, 9, 13, 14, 15, 16, 17, 18, 23, 36, 39, 41, 43, 44, 48, 49, 53, 63, 70, 72, 84, 88, 90, 93, 94, 95, 96, 98, 118, 124, 138, 141, 142, 143, 145, 147, 148, 152, 153, 154], "everybodi": 44, "everyon": [69, 143], "everyth": [29, 45, 46, 47, 48, 64, 72, 84, 88, 93, 94, 147, 150, 151], "everytim": 147, "everywher": 26, "evid": [82, 140, 142, 146], "evok": 141, "ew": 44, "eward": 31, "ex": [31, 90], "exact": [3, 43, 139, 146, 148], "exactli": [29, 31, 41, 44, 63, 98, 139, 146], "examin": 142, "exampl": [0, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 43, 44, 45, 46, 47, 48, 49, 57, 60, 62, 63, 66, 67, 69, 70, 71, 73, 74, 75, 76, 77, 80, 81, 83, 84, 85, 86, 88, 89, 93, 94, 96, 98, 99, 103, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 139, 140, 141, 143, 144, 145, 146, 150, 151, 152, 154, 155, 162], "exaplan": [62, 93], "exc_info": 63, "excadril": 135, "exceed": 70, "excel": [21, 27, 60, 124], "excel_book": 60, "except": [6, 17, 18, 21, 23, 26, 29, 31, 44, 45, 60, 65, 72, 76, 80, 81, 94, 129, 139, 141, 142, 146, 148, 150], "exception": 143, "exception1": 63, "exception2": 63, "exceptioni": 63, "exceptionii": 63, "exceptionn": 63, "excercis": 123, "exceric": 162, "exclud": [32, 48, 138, 152, 153], "exclus": [60, 72, 118, 124, 128], "excus": 154, "execut": [5, 23, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 49, 57, 58, 60, 63, 66, 67, 72, 77, 79, 81, 86, 88, 90, 93, 94, 101, 128, 131, 133, 134, 154, 159, 162], "exeggcut": 135, "exeggutor": 135, "exercis": [21, 67, 68, 135, 137, 138, 151, 152], "exhaust": [26, 39, 90, 142], "exist": [3, 29, 30, 31, 37, 44, 45, 46, 47, 48, 49, 60, 62, 72, 88, 93, 94, 95, 98, 124, 127, 128, 129, 130, 131, 133, 134, 142, 150, 154, 155], "exit": [39, 40, 41, 60, 62, 72, 79], "exmpl": 44, "exp": [43, 72, 74, 82, 120, 122], "expand": [71, 76, 121, 151], "expandtab": 44, "expect": [6, 10, 12, 31, 63, 87, 124, 132, 146, 148, 149, 152, 154], "expens": [70, 93], "experi": [23, 139, 142, 143, 146, 147, 148, 150, 154, 161], "experiment": [23, 162], "expert": 149, "explain": [4, 13, 14, 15, 16, 29, 48, 70, 81, 88, 98, 121, 129, 132, 138, 139, 141, 142, 143, 147, 152], "explan": [32, 35, 36, 37, 39, 40, 41, 44, 49, 51, 54, 56, 58, 63, 64, 67, 68, 69, 71, 73, 74, 77, 85, 87, 93, 94, 95, 96, 98, 108, 120, 121, 147], "explanatori": 140, "explicit": [81, 98, 120, 141, 147, 149, 150], "explicitli": [28, 43, 49, 60, 66, 82, 118, 139, 150], "explod": 114, "exploit": 90, "explor": [31, 57, 107, 139, 142, 144, 147, 149], "exploratori": 139, "exploud": 135, "expm1": [72, 74], "expon": [26, 39, 44, 74, 86], "exponenti": [44, 72, 73, 83, 87, 120, 149, 152], "export": 76, "expovari": 73, "express": [30, 31, 35, 36, 37, 40, 41, 44, 45, 47, 49, 66, 69, 71, 81, 83, 85, 86, 87, 89, 96, 124, 152], "expression1": 38, "expression2": 38, "expression3": 38, "expression4": 38, "extempor": 151, "extend": [30, 44, 66, 81, 93, 95, 133, 141, 148, 149, 150], "extens": [7, 19, 23, 28, 72, 76, 79, 81, 86, 100, 104, 114, 115, 143, 152], "extent": [147, 152], "extern": [41, 63], "extra": [30, 61, 62, 81, 131, 147, 148, 151], "extrac": [15, 16], "extract": [7, 9, 13, 14, 15, 16, 17, 18, 31, 60, 84, 124, 147, 155], "extrapol": 143, "extrem": [124, 139, 140, 141, 142, 147, 149, 152, 154], "ey": [118, 122, 150], "f": [28, 37, 38, 43, 44, 52, 53, 60, 63, 64, 66, 69, 72, 76, 86, 89, 93, 94, 98, 115, 120, 121, 128, 131, 133, 138, 144, 147, 149, 152], "f09af94986b4": 46, "f1": [0, 7], "f1_histori": 7, "f2db54e8947c": 147, "f3f4b74da706": 46, "f45": 31, "f49307ce4aaa": 48, "f6b2789c4214": 133, "f7b055f5764d": 27, "f7d40ce0c112": 30, "f7ffd6347533": 62, "fab": [72, 74], "fab2e1af2c65": 98, "fabric": 154, "fabul": 146, "face": [6, 70, 138, 153], "facebook": 44, "facecolor": [114, 146, 150], "facecream": 115, "facecremsalesdata": 115, "faceprep": 41, "facet": [139, 142, 151, 153, 154], "facet_kw": 151, "facetgrid": [142, 143, 144, 148, 151, 152, 153, 157], "facewashsalesdata": 115, "facil": 72, "facilit": [148, 150], "fact": [26, 29, 45, 46, 82, 117, 142, 149, 151, 152], "factor": [25, 41, 140, 144, 148, 149, 150, 152, 157], "factori": [43, 66, 70, 72, 74, 76], "factorplot": [146, 148, 149, 151, 152], "fade": [141, 148], "fahrenheit": 30, "fail": [3, 4, 36, 37, 40, 60, 62, 124, 141], "fair": [144, 152], "fairi": 135, "fairli": 27, "fake": 152, "falcon": 44, "fall": [35, 43, 62, 77, 84, 146, 152], "fallback": 118, "fals": [0, 7, 10, 12, 15, 16, 17, 18, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48, 60, 66, 72, 76, 80, 82, 83, 86, 87, 95, 96, 118, 119, 121, 122, 124, 128, 129, 130, 131, 133, 134, 135, 136, 138, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156], "falsi": 87, "famili": [4, 10, 12, 76, 143, 150, 152], "familiar": [30, 44, 46, 94, 115, 136, 144, 147, 149, 150, 151], "fan": [147, 154], "fanci": [119, 124], "fandango": 23, "far": [31, 37, 82, 98, 121, 135, 139, 140, 141, 142], "fare": [148, 150, 152], "farfetch": 135, "fasewash": 115, "fashion": [4, 6, 16, 18, 95], "fast": [60, 117, 124, 128, 152], "faster": [43, 46, 49, 84, 90, 93, 95, 120], "fastest": 162, "fat": 151, "fatal": 138, "fatorplot": 146, "favorit": 46, "fbf7cddd4b2a": 62, "fc": [114, 150], "fdel": 30, "fearow": 135, "feasibl": 133, "featur": [0, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 29, 93, 95, 96, 128, 138, 140, 141, 142, 143, 144, 146, 148, 149, 152, 153, 154, 162], "feb": [52, 53, 79], "februari": [37, 52, 53], "feder": 60, "feeba": 135, "feed": [36, 149, 161], "feedback": [36, 66], "feedforward": [17, 18], "feedpars": 23, "feel": [37, 138, 142, 143, 144, 146, 147, 148], "femal": [60, 93, 135, 138, 142, 145, 147, 148, 149, 150, 154], "female_dinn": 149, "female_lunch": 149, "fenc": 148, "fennekin": 135, "feraligatr": 135, "ferrose": 135, "ferrothorn": 135, "fetch": [11, 72, 124, 139, 142, 143, 146, 148, 150, 152, 153, 154], "few": [28, 29, 30, 39, 40, 43, 44, 47, 51, 107, 121, 124, 127, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "fewer": [21, 152, 153], "fffbe51149a7": 53, "fget": 30, "fh": 63, "fi": 49, "fib": 72, "fibo": 72, "fibo1": 72, "fibonacci": [27, 40, 72], "fibonacci_numb": 27, "fiction": 150, "fiddl": 151, "field": [10, 12, 44, 60, 83, 124, 127, 141, 152], "fifa_data": 114, "fig": [24, 45, 48, 99, 103, 140, 145, 149], "fight": [10, 11, 12, 13, 14, 15, 16, 17, 18, 135], "fighth": [15, 16, 17, 18], "figsiz": [7, 9, 10, 12, 15, 16, 17, 18, 24, 99, 103, 114, 141, 149, 150, 152, 156], "figur": [7, 9, 10, 15, 16, 17, 18, 38, 64, 75, 80, 81, 87, 95, 114, 115, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 156], "file": [5, 23, 26, 27, 29, 44, 62, 63, 64, 68, 69, 72, 75, 76, 79, 80, 82, 86, 90, 101, 115, 124, 132, 133, 134, 135, 154, 159], "file_data": 60, "file_nam": 124, "filedata": 121, "fileexistserror": 72, "filenam": [60, 72, 86, 124, 143], "fileno": 60, "filenotfounderror": [60, 62], "fill": [114, 117, 118, 121, 143, 162], "fillna": 124, "filter": [45, 47, 49, 134], "filter_cond": 124, "filterwarn": [140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "fin": 63, "final": [6, 27, 29, 39, 40, 41, 44, 45, 60, 62, 67, 68, 80, 82, 86, 88, 98, 120, 134, 141, 144, 148, 149, 150, 152, 153, 154], "finali": 121, "finaltext": 86, "financ": 117, "financi": 43, "find": [0, 2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 29, 31, 39, 40, 44, 45, 48, 49, 51, 55, 60, 63, 66, 70, 72, 77, 82, 84, 87, 93, 95, 98, 119, 120, 121, 124, 128, 130, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 162], "find_even_numb": 66, "find_most_common_word": 60, "find_most_frequent_word": 60, "findarea": 95, "fine": [80, 86, 152], "finer": 139, "finfo": 122, "finish": [28, 39, 81, 142, 145], "finit": [26, 43], "finland": [10, 12, 29, 37, 39, 44, 45, 46, 49, 60, 63, 82, 93], "finneon": 135, "fintech": 147, "fir": 140, "fire": 135, "firm": 148, "firmer": 153, "first": [6, 7, 8, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 34, 35, 36, 38, 39, 40, 41, 44, 46, 49, 51, 52, 53, 57, 60, 61, 62, 63, 66, 67, 69, 72, 76, 77, 79, 81, 82, 86, 88, 90, 93, 94, 95, 96, 98, 114, 119, 120, 124, 131, 133, 134, 139, 141, 142, 144, 146, 148, 149, 150, 151, 152, 153, 154, 162], "first_lett": 44, "first_nam": [29, 31, 37, 39, 44, 47, 66, 82, 85], "first_name_to_list": 85, "first_nm": 69, "first_numb": 86, "firstnam": [31, 32, 66, 69, 82, 86, 93], "fisher": [9, 13], "fit": [0, 3, 4, 10, 11, 12, 76, 140, 142, 143, 144, 145, 148, 149, 152], "fit_fn": 140, "fit_reg": 142, "five": [31, 39, 63, 95, 114, 124, 125, 127], "fix": [24, 39, 62, 69, 90, 99, 103, 124, 142, 152], "flaaffi": 135, "flab\u00e9b\u00e9": 135, "flag": [11, 15, 16, 17, 18, 31, 114, 122, 128, 129, 130, 131, 133, 134, 135, 138, 144, 152], "flag_r": 144, "flamer": 135, "flaot": 43, "flareon": 135, "flase": 87, "flask": [23, 44], "flat": 122, "flat_latency_grid": 7, "flat_prob": 7, "flat_throughput_grid": 7, "flatten": [7, 9, 10, 11, 12, 13, 14, 49, 117, 146], "flattened_list": 49, "flavor": [19, 100, 104], "flee": 138, "fleme": 39, "fletchind": 135, "fletchl": 135, "flexibl": [23, 32, 84, 86, 124, 140, 142, 145, 146, 147], "flexibli": 145, "flierprop": 148, "fliersiz": 148, "flight": [138, 155, 156], "fligth": 155, "flip": 139, "float": [23, 30, 38, 41, 44, 45, 46, 48, 51, 58, 62, 63, 72, 73, 74, 77, 81, 83, 84, 85, 87, 95, 118, 124, 141, 146, 147, 149, 150], "float64": [114, 118, 120, 124, 125, 126, 132], "float64index": 124, "float_1": 83, "float_2": 83, "float_numb": 86, "floatingpointerror": 62, "floatzel": 135, "floett": 135, "floor": [72, 74, 82, 87, 94, 96, 122, 146], "floor_divis": 82, "florg": 135, "flow": [9, 39, 40, 41, 44, 60, 63, 153], "flower": [2, 4, 9, 13, 14, 39, 138, 146], "floyd": 39, "fluctuat": 152, "flush": [40, 58, 60, 76, 86], "fly": [27, 93, 94, 95, 135], "flygon": 135, "flying_test": 93, "fmod": [72, 74], "fmri": 152, "fmt": 114, "fn": 0, "fo": 31, "focu": [140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154], "focus": [86, 93], "foe": 72, "folder": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 29, 61, 72, 124, 135, 136, 141, 143, 144, 149, 150, 152], "follow": [0, 2, 3, 4, 5, 6, 16, 18, 21, 26, 27, 28, 29, 30, 31, 34, 36, 37, 39, 41, 43, 44, 45, 46, 47, 48, 49, 60, 62, 63, 64, 66, 69, 70, 72, 73, 75, 76, 77, 79, 81, 82, 83, 86, 87, 88, 90, 93, 94, 95, 96, 98, 101, 107, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 139, 141, 152, 153, 154, 155, 159], "fom": 40, "font": [114, 139, 147, 150, 152], "font_scal": [139, 149], "fontdict": 114, "fontnam": 114, "fontsiz": [114, 149, 154], "fontweight": [114, 149, 150, 154], "foo": [31, 45, 47], "food": [83, 84], "food_list": 46, "food_staff": 66, "food_tupl": 46, "foongu": 135, "foot": 114, "footbal": [31, 154], "football_plot": 154, "forc": [64, 118, 125, 138], "force_edgecolor": 153, "forcibli": 76, "ford": [95, 136], "forev": 40, "forget": [6, 81], "forgot": 62, "forgotten": 40, "form": [3, 6, 7, 9, 11, 13, 28, 35, 39, 43, 44, 47, 49, 52, 53, 60, 61, 69, 71, 72, 77, 81, 84, 90, 93, 117, 118, 120, 124, 128, 129, 132, 135, 146, 147, 148, 149, 150, 151, 152, 153, 154], "formal": [69, 98], "format": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 29, 32, 37, 39, 46, 47, 56, 57, 60, 72, 81, 93, 94, 96, 124, 125, 132, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "format_regex": 53, "format_vers": 76, "former": [81, 95], "formfe": 44, "formul": 39, "formula": [0, 3, 4, 31, 66], "forretress": 135, "fortan": 121, "forth": 72, "fortun": [21, 43], "forum": [146, 147, 148, 150], "forward": [39, 44, 61, 62, 84, 152, 155], "found": [28, 31, 39, 41, 44, 47, 53, 62, 63, 72, 87, 90, 95, 118, 128, 131, 141, 148, 150, 152, 155], "foundat": 151, "four": [8, 9, 13, 31, 34, 39, 53, 66, 81, 83, 86, 95, 98, 121, 124, 125, 136, 138, 139, 148, 154], "fourth": [31, 40, 86, 128], "fp": 0, "frac": [10, 12, 15, 16, 17, 18, 87], "fraction": [53, 74, 140], "frame": [14, 15, 16, 17, 18, 70, 81, 124, 128, 131, 132, 133, 148, 153, 154], "frameobject": 81, "framework": [6, 17, 18, 23, 108, 154], "francisco": 138, "frank": 69, "fraudul": [4, 13, 14, 15, 16], "fraxur": 135, "free": [21, 37, 60, 143, 144, 146, 147, 148, 150, 152, 162], "freed": 60, "freedom": [3, 10, 12, 153], "freeli": [21, 152], "french": 60, "freq_dist": 93, "frequenc": [93, 124, 148, 149], "frequent": [31, 41, 45, 60, 72, 119, 120, 124, 148, 151], "fresher": 154, "frexp": [72, 74], "fri": [57, 147, 149, 150], "friend": 4, "friendli": [27, 49], "frillish": 135, "froaki": 135, "frogadi": 135, "from": [3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 26, 27, 28, 29, 30, 31, 37, 39, 40, 41, 43, 44, 49, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 73, 74, 76, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 93, 94, 95, 96, 98, 99, 103, 107, 114, 115, 117, 118, 119, 120, 131, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "from_arrai": [128, 131], "from_dict": [124, 136], "from_tupl": [127, 134], "fromarrai": 122, "fromit": 122, "fromtimestamp": [51, 52, 56], "fron": [10, 12], "front": [31, 44, 150], "front_end": 45, "frontend": 139, "froslass": 135, "frown": 98, "fruit": [31, 37, 39, 45, 46, 48, 63, 81, 83, 94, 126, 150], "fruit1": 126, "fruit2": 126, "fruit3": 126, "fruit4": 126, "fruits1": 83, "fruits2": 83, "fruits3": 83, "fruits4": 83, "fruits_and_veg": 63, "fruits_df": 126, "fruits_dict": 126, "fruits_list": 126, "fruits_veget": 46, "fset": 30, "fsum": [72, 74], "fucntion": [67, 68], "fulfil": 142, "full": [8, 15, 16, 17, 18, 23, 51, 52, 53, 60, 61, 66, 72, 75, 82, 87, 118, 120, 149], "full_data": 60, "full_lik": 118, "full_nam": [66, 69, 82], "full_stack": 45, "fulli": 150, "fun": [31, 66, 67, 68, 69, 72, 82, 87, 141, 153], "fun1": [67, 68, 95], "fun2": [67, 68, 95], "fun3": [68, 95], "func": [29, 131, 147], "func1": 93, "func2": 93, "function": [1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 26, 30, 31, 32, 34, 40, 41, 43, 51, 57, 58, 60, 61, 62, 63, 67, 73, 75, 79, 80, 81, 82, 83, 84, 85, 88, 93, 94, 98, 100, 104, 115, 117, 121, 124, 126, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154], "function_nam": 66, "functionnam": 63, "functool": 71, "fundament": [93, 124, 141], "fungi": 66, "fur": 6, "furfrou": 135, "furret": 135, "further": [2, 10, 11, 12, 13, 14, 15, 16, 27, 44, 60, 62, 64, 66, 86, 88, 90, 124, 125, 133, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162], "furthermor": [27, 29, 30, 45, 66, 72, 88, 93, 98, 139], "furthest": 31, "futur": [39, 41, 60, 82, 98, 132, 141, 145, 151, 152, 154, 162], "futurewarn": [132, 136, 141, 145], "g": [3, 4, 6, 10, 12, 22, 29, 41, 45, 46, 60, 82, 114, 115, 118, 120, 121, 124, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156], "ga": 114, "gabit": 135, "gain": [142, 143, 151, 152], "gallad": 135, "gallademega": 135, "galvantula": 135, "gam": 152, "game": [23, 75], "gamma": [72, 73, 74, 152], "gammavari": 73, "gap": 80, "garbag": [60, 62, 94, 129], "garbodor": 135, "garchomp": 135, "garchompmega": 135, "gardevoir": 135, "gardevoirmega": 135, "gari": 69, "gas_pric": 114, "gas_price_figur": 114, "gastli": 135, "gastrodon": 135, "gate": 49, "gather": [124, 125, 129, 147], "gaug": [146, 147], "gauss": 73, "gaussian": [73, 121, 142, 143, 145, 152], "gaussian_anomali": 7, "gaussian_anomaly_detect": 7, "gaussiananomalydetect": 7, "gaussiankd": 149, "gave": 60, "gca": [147, 153, 154], "gcd": 72, "gdp": [3, 10, 12, 152], "gea": 114, "geeksforgeek": [3, 4], "gender": [47, 60, 93, 138, 142, 146, 147, 149, 150, 154], "gender_domin": 149, "gener": [3, 4, 6, 10, 13, 14, 17, 18, 21, 23, 26, 29, 33, 34, 39, 40, 43, 44, 46, 62, 63, 64, 66, 70, 71, 72, 73, 75, 76, 81, 84, 87, 90, 93, 94, 95, 98, 107, 115, 118, 119, 128, 131, 134, 135, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162], "generate_color": 72, "generate_full_nam": 66, "generate_group": 69, "generatig": 140, "generatingdata": [142, 144], "generatorexit": 62, "generos": [10, 12], "genesect": 135, "genexpr": 27, "genfromtxt": [121, 122], "gengar": 135, "gengarmega": 135, "genotyp": 146, "gentleman": 152, "geodud": 135, "geograph": 152, "gereet": 66, "germain": 114, "german": 60, "germancar": 136, "germani": 136, "get": [3, 4, 5, 9, 10, 11, 12, 13, 14, 15, 16, 19, 21, 26, 27, 28, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 48, 49, 53, 56, 57, 58, 59, 60, 62, 63, 64, 66, 67, 69, 71, 72, 81, 82, 87, 88, 93, 94, 95, 96, 98, 100, 101, 104, 118, 119, 121, 125, 127, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 162], "get_cost": [10, 12], "get_data": 94, "get_first_ten_countri": 29, "get_group": 136, "get_height": 150, "get_last_ten_countri": 29, "get_offset": 146, "get_string_list": 29, "get_temperatur": 30, "get_width": 150, "get_x": 150, "get_xlim": 147, "get_xticklabel": 150, "get_yticklabel": 150, "getattr": [94, 95, 147], "getcwd": 72, "getcwdb": 61, "getdata": 94, "getdatalim": 146, "getrandbit": 73, "getroot": 60, "getstat": 73, "ggplot": 114, "ghost": 135, "gibl": 135, "gift": 29, "gigabyt": 154, "gigalith": 135, "girafarig": 135, "giratinaalt": 135, "giratinaorigin": 135, "gist": 143, "gist_earth": 144, "gist_earth_r": 144, "gist_grai": 144, "gist_gray_r": 144, "gist_heat": 144, "gist_heat_r": 144, "gist_ncar": 144, "gist_ncar_r": 144, "gist_rainbow": 144, "gist_rainbow_r": 144, "gist_stern": 144, "gist_stern_r": 144, "gist_yarg": 144, "gist_yarg_r": 144, "github": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 82, 114, 115], "give": [13, 14, 23, 26, 29, 31, 35, 36, 37, 39, 41, 43, 44, 63, 66, 72, 74, 80, 82, 87, 93, 94, 107, 117, 118, 120, 121, 124, 125, 126, 132, 133, 134, 135, 136, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154], "giveawai": 144, "given": [0, 2, 3, 27, 29, 32, 34, 35, 39, 40, 41, 44, 48, 51, 53, 57, 58, 62, 63, 66, 69, 72, 76, 79, 80, 83, 86, 88, 95, 98, 117, 118, 121, 125, 142, 146, 147, 149, 152, 154], "gkdive": 114, "gkhandl": 114, "gkkick": 114, "gkposit": 114, "gkreflex": 114, "glaceon": 135, "glali": 135, "glaliemega": 135, "glameow": 135, "glanc": 82, "gligar": 135, "glimps": 149, "gliscor": 135, "global": [21, 28, 62, 71, 78, 80, 88], "global_lang": 67, "global_var": [67, 68], "globalglob": 67, "gloom": 135, "glu": 140, "gmtoff": 53, "gmtoff_fract": 53, "gnbu": 144, "gnbu_r": 144, "gnuplot": 144, "gnuplot2": 144, "gnuplot2_r": 144, "gnuplot_r": 144, "go": [3, 4, 6, 7, 10, 15, 16, 17, 18, 23, 29, 30, 38, 39, 41, 43, 63, 66, 70, 81, 87, 88, 90, 93, 96, 98, 117, 135, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162], "goal": [122, 139, 142, 143, 151, 162], "god": 47, "goe": [10, 11, 12, 13, 14, 15, 16, 28, 58, 62, 63, 64, 72, 93, 98, 128, 131, 143, 149], "gogh": 23, "gogoat": 135, "golbat": 135, "goldeen": 135, "golduck": 135, "golem": 135, "golett": 135, "golurk": 135, "gone": [142, 146, 152], "gonna": 152, "good": [15, 16, 17, 18, 28, 39, 44, 46, 60, 63, 64, 66, 69, 72, 77, 81, 86, 114, 115, 124, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154], "goodra": 135, "googl": [23, 44, 76, 95, 152], "googol": 83, "goomi": 135, "gorebyss": 135, "got": [29, 32, 68, 72, 84, 85, 96, 124, 148, 149, 162], "gothita": 135, "gothitel": 135, "gothorita": 135, "gourgeistaverag": 135, "gourgeistlarg": 135, "gourgeistsmal": 135, "gourgeistsup": 135, "govern": [10, 12, 146, 152], "gpt": 161, "grab": 150, "gracefulli": [41, 133], "grade": [35, 36, 37, 114, 125, 146], "gradient": [17, 18, 162], "graduat": 149, "grai": [141, 144, 146, 147, 154], "granbul": 135, "grandpar": 95, "grant": 37, "grape": 39, "graph": [3, 115, 143, 146, 150, 152], "graph_obj": 10, "graphic": [23, 63, 147, 149, 153, 155], "grass": 135, "gravel": 135, "graviti": [66, 82, 85, 91], "gray_r": 144, "grayscal": [8, 16, 18, 141], "great": [34, 88, 96, 140, 146, 147, 152, 153, 154, 155], "greater": [35, 37, 38, 40, 41, 64, 72, 74, 82, 87, 96, 117, 120, 124], "greek": 93, "green": [15, 16, 17, 18, 39, 81, 141, 144, 145, 147], "greens_r": 144, "greet": [29, 66, 69, 86, 94], "greet_modul": 72, "grei": [15, 16, 17, 18, 139, 141, 144, 145, 150], "greninja": 135, "gretta": 69, "greyish": 141, "greys_r": 144, "grid": [7, 10, 12, 115, 117, 118, 139, 144, 149, 151, 152, 153, 154], "grid_kw": 144, "gridlin": 115, "gridsiz": 149, "gridspec": 154, "gridspec_kw": [149, 154], "grimer": 135, "grip": [148, 153], "grotl": 135, "groudon": 135, "groudonprim": 135, "ground": [93, 135], "group": [23, 124, 136, 139, 142, 146, 148, 149, 150, 152], "groupbi": [136, 147, 149], "grouper": 149, "grovyl": 135, "grow": [21, 66, 75, 86], "growlith": 135, "growth": [10, 11, 12, 152], "grumpig": 135, "gt": 72, "guarante": [46, 60, 63, 154], "guava": [39, 45, 48, 150], "guess": [13, 14, 30, 64, 118, 124, 138, 147, 148, 150, 151], "guest": 37, "gui": [23, 63, 140, 144, 146, 150, 152], "guid": [21, 24, 99, 103, 140, 141, 143], "guidanc": 141, "gulpin": 135, "gun": 138, "gunmet": 141, "gurdurr": 135, "guthri": 138, "gyarado": 135, "gyaradosmega": 135, "gz": 72, "h": [27, 31, 39, 40, 41, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 85, 87, 120, 138, 148, 150], "h1": 121, "h2": 121, "ha": [2, 6, 10, 12, 15, 16, 17, 18, 21, 23, 26, 28, 29, 30, 31, 32, 34, 36, 37, 39, 41, 43, 44, 47, 48, 49, 51, 57, 58, 60, 61, 62, 63, 64, 66, 68, 69, 71, 72, 75, 79, 81, 82, 83, 84, 85, 87, 88, 90, 93, 94, 95, 98, 114, 119, 120, 121, 124, 125, 126, 127, 130, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154], "habit": 152, "hack": 149, "hacker_new": 60, "had": [28, 29, 62, 66, 69, 72, 120, 139, 143, 144, 147, 148, 149, 150, 151, 152, 154], "hadlei": [142, 152], "half": [45, 141, 151], "halt": 63, "hamper": 72, "hand": [39, 47, 48, 60, 67, 69, 90, 93, 94, 139, 142, 143, 144, 147, 150, 152, 154], "handel": [21, 65], "handi": [23, 114, 115, 124, 135, 136, 142, 143, 146, 147, 149, 152, 153, 154], "handl": [4, 23, 26, 27, 28, 41, 44, 57, 58, 60, 61, 62, 64, 69, 117, 119, 125, 133, 143, 150, 152], "handler": 41, "handwritten": [4, 6, 15, 17], "hank": 69, "happen": [26, 27, 28, 32, 39, 40, 88, 90, 95, 96, 130, 140], "happi": [3, 10, 12, 41, 44, 45, 66, 79, 86, 93, 143, 148, 152], "happin": 12, "happind": [10, 12], "happini": 135, "hard": [21, 31, 60, 70, 81, 86, 154], "hardtop": 136, "hardwar": [17, 18, 43, 90], "hariyama": 135, "harmless": 140, "harmon": 0, "harper": 69, "harri": [94, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134], "harvard": 149, "has_w2": 82, "hasattr": 94, "hash": [44, 76, 81], "hashabl": 48, "hatch": 114, "hatchback": [124, 125, 136], "haunter": 135, "have": [0, 3, 4, 5, 6, 7, 9, 13, 14, 15, 16, 17, 18, 22, 26, 27, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 54, 55, 56, 58, 60, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 95, 96, 98, 101, 107, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 162], "haven": [51, 144, 146, 147, 152], "hawk": 31, "hawlucha": 135, "haxoru": 135, "hazi": 154, "he": [31, 37, 44, 60, 63, 64, 93, 153], "head": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 114, 124, 135, 136, 138, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 154, 156], "header": [66, 69, 127, 128, 131, 133, 134, 135, 149, 154], "health": [10, 12], "heart": 25, "heat": [154, 157], "heatmap": [154, 156], "heatmor": 135, "heatran": 135, "heavi": [114, 149, 152], "heavili": [144, 145], "hei": [31, 46], "height": [45, 87, 140, 143, 144, 150], "height_ratio": 149, "held": 152, "heliolisk": 135, "helioptil": 135, "hello": [21, 23, 27, 28, 29, 31, 35, 36, 39, 44, 45, 46, 48, 58, 62, 66, 69, 72, 76, 81, 82, 84, 85, 86, 87, 88, 92, 94, 95, 146], "hello009": 44, "hello99": 44, "hello99world66": 44, "hellohellohello": 44, "helloworld": [39, 40, 41, 44, 45, 46, 48], "help": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 31, 34, 39, 40, 41, 45, 51, 52, 53, 56, 57, 63, 64, 66, 70, 72, 77, 80, 82, 88, 93, 98, 100, 104, 114, 115, 117, 124, 125, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 153, 154, 162], "helper": 39, "helsinki": 60, "henc": [34, 35, 39, 40, 41, 43, 44, 45, 46, 49, 51, 60, 67, 71, 72, 84, 86, 87, 88, 90, 93, 96, 119, 138, 139, 142, 143, 150, 151, 152, 154], "her": [86, 151], "heracross": 135, "heracrossmega": 135, "herdier": 135, "here": [3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 26, 27, 28, 29, 30, 31, 37, 39, 40, 41, 43, 45, 47, 48, 49, 51, 52, 53, 54, 56, 57, 58, 60, 62, 63, 64, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 86, 87, 88, 93, 94, 95, 96, 99, 100, 103, 104, 107, 119, 120, 121, 125, 126, 133, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162], "hereon": 154, "heterogen": [46, 124, 126, 132], "hex": [43, 44, 141, 143, 145], "hexa": 72, "hexadecim": [43, 44, 72, 83, 86], "hexagon": 143, "hexpoint": 98, "hh": 44, "hhmm": [52, 53], "hi": [31, 47, 58, 63, 86, 151, 152], "hiberfil": 61, "hidden": [6, 26, 93], "hide": [28, 30, 93, 141, 149], "hierarch": [124, 125, 127, 134, 156], "hierarchi": 75, "high": [10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 73, 114, 115, 117, 118, 124, 139, 143, 148, 149, 150, 151, 153], "higher": [10, 11, 12, 13, 14, 15, 16, 17, 18, 36, 71, 85, 90, 142, 143, 149, 151], "higher_order_funct": 28, "highest": [7, 72, 124, 138, 143, 146, 148, 150], "highli": [60, 94, 98, 117, 139, 143, 144, 146, 147, 148, 149, 150, 153], "highlight": [140, 142, 154, 156], "hill": [3, 4], "himself": 98, "hint": [64, 122, 136, 150], "hippopota": 135, "hippowdon": 135, "hispan": 138, "hist": [7, 10, 12, 114, 115, 144, 145, 153, 154], "hist_kw": 140, "histogram": [7, 10, 12, 140, 143, 144, 145, 147, 150, 153], "histohram": [7, 10, 12], "histori": 7, "histplot": 145, "histtyp": 153, "hit": 62, "hitmonchan": 135, "hitmonle": 135, "hitmontop": 135, "hl": 141, "hls_palett": 141, "hmm": [149, 153], "hmmm": 151, "ho": [44, 135], "hobbi": 125, "hoffman": 138, "hold": [15, 16, 17, 18, 45, 68, 69, 82, 98, 118, 146, 149, 151, 154], "home": 93, "homemad": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "homework": [143, 144, 147, 150, 152], "homogen": [46, 118], "hon": 23, "honchkrow": 135, "honda": 136, "honedg": 135, "honei": 41, "honest": 146, "honestli": [144, 148, 149, 152], "honk": 88, "honor": 152, "hood": [148, 149], "hoopahoopa": 135, "hoorai": 35, "hoothoot": 135, "hope": [39, 44, 66, 87, 138, 142, 144, 150, 152, 153], "hoppip": 135, "horitzont": 121, "horizon": 151, "horizont": [31, 44, 117, 121, 139, 146, 147, 148, 149, 150, 152, 154], "horrai": 35, "horsea": 135, "horsepow": [124, 125, 135, 136], "hostnam": 63, "hot": [24, 99, 103, 144], "hot_r": 144, "houndoom": 135, "houndoommega": 135, "houndour": 135, "hour": [52, 53, 55, 56, 57, 87, 95, 114, 151, 162], "hous": [94, 152], "how": [3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 30, 31, 34, 36, 39, 40, 41, 43, 46, 47, 49, 51, 57, 60, 62, 63, 64, 67, 68, 69, 71, 73, 74, 76, 85, 86, 87, 90, 93, 94, 95, 96, 101, 124, 125, 126, 128, 130, 131, 132, 133, 134, 138, 139, 140, 142, 143, 147, 149, 150, 151, 152, 153, 154, 159, 162], "howdi": 31, "howev": [30, 31, 35, 36, 39, 46, 48, 49, 58, 63, 64, 68, 81, 82, 84, 85, 88, 90, 93, 94, 95, 96, 98, 118, 119, 120, 155], "hp": 135, "hspace": [15, 16, 17, 18, 149], "hstack": [7, 10, 117, 153], "hsv": [142, 144, 147, 148, 150, 151], "hsv_r": [144, 147], "html": [23, 24, 44, 45, 60, 93, 99, 103, 120, 124, 141, 152, 156], "http": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 114, 120, 145, 152, 156], "hu": 41, "hue": [141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "hue_kw": [153, 154], "hue_ord": [142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "huge": [84, 134, 141, 146, 149, 152, 154], "human": [30, 31, 49, 81, 90, 153, 161], "hundr": [30, 87, 154], "hungari": 143, "hungri": 36, "hunt": [32, 49, 66, 86], "huntail": 135, "husl": [141, 150], "hybrid": 149, "hydreigon": 135, "hyperbol": 74, "hyperparamat": 162, "hypno": 135, "hypot": [72, 74], "hypothesi": 6, "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 34, 35, 36, 37, 38, 41, 43, 49, 51, 52, 53, 54, 56, 57, 58, 61, 62, 63, 64, 65, 67, 69, 71, 72, 73, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 99, 101, 102, 103, 105, 108, 114, 115, 117, 118, 119, 120, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161], "i_num": 64, "ia": [29, 138], "iat": 124, "ibm": 44, "ic": [8, 135], "icefir": [144, 146, 147, 148, 149, 152, 153, 154], "icefire_r": 144, "iceland": [10, 12, 63], "icon": [23, 162], "id": [35, 66, 69, 72, 88, 94, 114, 134, 138, 139, 150, 151, 152], "id_var": [148, 154], "idea": [26, 27, 77, 81, 86, 88, 98, 144, 146, 147, 148, 152, 153, 154], "ideal": [40, 138, 139, 141, 146, 149, 150, 152, 153], "ident": [117, 118, 120, 124, 134, 143, 150, 151, 153], "identif": 7, "identifi": [6, 21, 29, 31, 44, 49, 63, 66, 71, 72, 75, 81, 82, 87, 88, 92, 93, 124, 125, 126, 129, 131, 133, 150, 152], "identitytransform": 147, "ifetch": 148, "igglybuff": 135, "ignor": [39, 40, 41, 76, 81, 128, 131, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156], "ignore_index": [129, 130], "ii": [24, 99, 103, 142], "iii": 138, "iinfo": 122, "ill": 82, "illeg": [62, 81], "illumin": 141, "illumis": 135, "illustr": [2, 3, 4, 9, 10, 11, 12, 13, 14, 15, 27, 39, 40, 48, 63, 64, 77, 86, 98, 138, 139, 140, 147, 149, 153, 154], "iloc": [124, 135], "imag": [3, 4, 6, 8, 15, 16, 17, 18, 23, 24, 60, 70, 83, 94, 99, 103, 139, 141, 143, 152, 153, 154], "image_s": [15, 16, 17, 18], "imagin": [31, 88, 124], "imaginari": [43, 48, 62, 83, 84, 122, 142], "imbal": 140, "imdisk": 61, "img": [61, 143], "imgseek": 23, "imit": 11, "immedi": [27, 36, 39, 40, 57, 58, 63, 66, 79, 98, 138, 162], "immens": 140, "immut": [39, 44, 45, 46, 47, 48, 66, 83, 84, 121], "imp": 72, "impact": [142, 147], "imperfect": 43, "implement": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 28, 29, 30, 41, 43, 45, 46, 64, 66, 72, 81, 90, 93, 95, 96, 98, 120, 142, 143, 144, 154, 161, 162], "impli": [44, 45, 60, 61, 81, 87], "implic": 147, "implicit": [44, 98], "implicitli": [43, 81, 98, 136], "import": [0, 21, 23, 24, 29, 31, 34, 40, 43, 46, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 68, 71, 73, 74, 76, 80, 81, 82, 84, 88, 90, 92, 93, 98, 99, 103, 114, 115, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "import_ipynb": 72, "importerror": 62, "importlib": 72, "imposs": [86, 149], "improp": 62, "improv": [10, 11, 12, 13, 14, 15, 16, 17, 18, 66, 124, 133, 161], "imshow": [15, 16, 17, 18], "inan": 149, "inbuilt": [83, 121, 128], "inc": 29, "inch": 114, "incid": [138, 150], "includ": [5, 23, 24, 26, 31, 36, 39, 40, 41, 44, 45, 60, 63, 72, 76, 77, 79, 84, 90, 94, 98, 99, 101, 103, 115, 118, 121, 124, 125, 136, 138, 139, 144, 148, 154, 155, 159, 162], "inclus": [72, 73, 118, 124, 141], "incom": [60, 69, 93, 143], "incomplet": 81, "inconsist": 62, "incorpor": 139, "incorrect": [36, 40, 62, 81, 90], "increas": [6, 10, 11, 12, 13, 14, 15, 16, 40, 41, 45, 81, 141, 143, 147, 148, 151, 152, 154], "increment": [39, 40, 41, 68, 96], "ind": 45, "inde": [147, 148, 149, 150, 154], "indefinit": 40, "indent": [21, 35, 36, 38, 39, 41, 60, 62, 66, 68, 92], "indentationerror": [62, 81], "independ": [3, 4, 11, 13, 14, 15, 16, 90, 139, 142, 150, 151], "index": [2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 27, 31, 40, 44, 47, 48, 57, 62, 63, 72, 84, 86, 117, 118, 135, 136, 143, 150, 152, 153, 154], "index1": 125, "index2": 125, "index_on": 124, "indexerror": [44, 45, 46], "india": [29, 45, 46, 49, 60], "indianr": 145, "indic": [0, 7, 11, 15, 16, 17, 18, 35, 44, 45, 46, 57, 60, 62, 81, 119, 128, 129, 132, 138, 142, 144, 146, 148, 149, 150, 152], "indirect": 95, "indirectli": 64, "individu": [44, 47, 60, 72, 119, 140, 144, 146, 148, 149, 150, 151, 152, 153, 155], "indivis": 152, "indonesia": [46, 60], "industri": [125, 126], "ineffici": [39, 70], "inf": [26, 72, 120, 122, 147], "infer": [82, 121, 124, 125, 138, 143, 147, 149, 151, 152, 153, 154], "infernap": 135, "inferno": 144, "inferno_r": 144, "infin": [74, 120, 122], "infinit": [40, 43, 58, 70, 87], "infit": 26, "info": [17, 18, 76, 94, 95, 98, 122, 145], "inform": [5, 7, 24, 37, 51, 60, 61, 63, 68, 82, 98, 99, 101, 103, 124, 125, 146, 148, 150, 151, 152, 153, 154, 159], "ing": 31, "inher": 141, "inherit": [21, 63, 64, 97, 98], "inhomogen": 119, "init": [5, 7, 98, 101, 159], "init_notebook_mod": 10, "initi": [2, 10, 11, 12, 17, 18, 26, 27, 39, 40, 41, 44, 45, 48, 60, 67, 73, 75, 82, 88, 93, 94, 95, 98, 117, 118, 130, 142, 145, 153, 154], "inkai": 135, "inlin": [10, 71, 104, 114, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "inner": [1, 6, 28, 29, 39, 40, 41, 67, 120, 124, 147, 148, 149], "inner_arg": 147, "inner_f": 147, "inner_fun": 67, "inner_func": 88, "inner_funct": 88, "inner_kwarg": 147, "innermost": [40, 41], "inplac": [124, 128, 129, 130, 131, 133, 134, 135, 150], "input": [3, 4, 6, 10, 12, 16, 17, 18, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 53, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 72, 77, 80, 82, 83, 84, 85, 87, 90, 93, 94, 95, 96, 98, 100, 104, 119, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 142, 146, 147, 148, 152, 153, 154, 155], "input_param_nam": 12, "input_param_name_1": 10, "input_param_name_2": 10, "inputsid": 95, "insert": [44, 47, 48, 76, 94, 117, 125, 134], "insid": [26, 28, 29, 30, 31, 32, 35, 36, 38, 41, 44, 45, 46, 47, 48, 49, 58, 60, 61, 63, 66, 67, 68, 69, 72, 76, 77, 79, 81, 82, 83, 84, 85, 86, 88, 93, 94, 95, 96, 98, 124, 143, 148, 149, 150, 151, 154], "insight": [143, 147, 148, 150], "inspect": [98, 131], "inspir": [6, 17, 18, 48], "insrantli": 23, "inst_creat": 98, "insta": 119, "instal": [60, 72, 79, 140], "instanc": [7, 9, 10, 11, 12, 13, 14, 15, 16, 29, 39, 43, 45, 53, 60, 62, 63, 72, 76, 81, 82, 84, 88, 95, 98, 120, 121, 124, 131, 132, 146, 149, 154, 155], "instant": 71, "instanti": [43, 51, 93, 94, 98], "instantli": 41, "instead": [6, 8, 15, 16, 17, 18, 23, 27, 28, 30, 32, 36, 40, 62, 72, 82, 90, 93, 94, 95, 96, 120, 124, 126, 136, 138, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 154], "instruct": [5, 35, 58, 63, 81, 101, 139, 158, 159, 160], "int": [15, 16, 17, 18, 23, 26, 28, 29, 39, 40, 43, 44, 45, 46, 62, 63, 64, 76, 83, 84, 85, 86, 87, 94, 95, 114, 130, 131], "int32": [118, 120, 121], "int64": [17, 18, 118, 121, 124, 125, 135, 136], "int_1": 83, "int_2": 83, "intact": 142, "integ": [35, 37, 39, 41, 43, 44, 45, 46, 47, 48, 49, 51, 60, 63, 66, 70, 72, 73, 74, 76, 81, 83, 84, 85, 87, 117, 118, 124, 125, 126], "intel": 90, "intellig": [142, 150, 161], "intellij": 139, "intend": [8, 16, 18, 143, 154], "intens": 142, "intent": [76, 142, 150], "inter": [148, 150, 151], "interact": [6, 10, 22, 23, 24, 27, 60, 72, 79, 86, 94, 99, 103, 124, 139], "intercept": [49, 87, 140], "intercept_stderr": 140, "interchang": [124, 147], "interest": [27, 29, 31, 63, 88, 94, 130, 139, 140, 141, 149, 150, 151, 152, 153], "interfac": [23, 30, 63, 93, 139, 141], "interg": 85, "intermedi": 90, "intermediari": 90, "intern": [26, 27, 30, 41, 44, 45, 60, 62, 69, 73, 93, 94, 96, 125, 141], "internet": [23, 144], "interp": 122, "interpol": [143, 152], "interpret": [21, 23, 27, 31, 35, 39, 40, 41, 44, 62, 63, 66, 69, 70, 72, 76, 79, 80, 81, 85, 86, 87, 88, 92, 142, 150, 151, 152, 153], "interquartil": 149, "interrelationship": 154, "interrupt": 62, "intersect": [39, 84], "intersect1d": 122, "intersection_upd": 48, "interv": [4, 13, 14, 15, 16, 114, 117, 121, 139, 142, 144, 146, 148, 149, 150, 151, 152], "intervent": 161, "interview": [152, 161], "intiuit": 23, "intrigu": 138, "intrins": [138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "intro": [32, 158, 160], "introduc": [6, 30, 44, 79, 148, 149, 153, 154], "introduct": [44, 161], "introductori": 143, "intuit": [7, 22, 30, 124, 146], "inv": 117, "invalid": [14, 38, 44, 62, 63, 72, 80, 82, 85, 86, 120], "inventor": 39, "invers": [25, 41, 57, 74, 117, 120], "invert": 31, "invest": 150, "invis": 149, "invoc": [71, 142], "invok": [29, 49, 94, 96], "involv": [43, 85, 87, 95, 138, 143, 146, 148, 152, 161], "ioerror": 63, "ion": [24, 99, 103], "iot": 162, "ip": 152, "iplot": 10, "ipynb": [19, 23, 61, 72, 100, 104], "ipynb_checkpoint": 61, "ipython": [23, 26, 27, 28, 29, 30, 32, 40, 44, 45, 46, 47, 48, 53, 58, 60, 62, 63, 64, 67, 68, 69, 70, 72, 80, 82, 83, 84, 85, 86, 87, 93, 94, 95, 96, 98, 119, 120, 128, 131, 133, 136, 139, 141, 143, 147, 152], "iqr": 148, "ireland": 143, "iri": [2, 4, 9, 13, 114, 138, 141, 143, 144, 146, 147, 148, 156], "iris_data": [114, 156], "iris_typ": [9, 13], "iron": 26, "irrespect": 41, "is_cal": 29, "is_empti": 66, "is_even": [29, 66], "is_light_on": 82, "is_mar": [37, 39], "is_marri": 82, "is_name_long": 29, "is_odd": 29, "is_prim": 66, "is_return": 29, "is_uniqu": 133, "is_valid_vari": 31, "isalnum": 44, "isalpha": [40, 44], "isatti": 60, "isclos": 72, "isdecim": [40, 44], "isdigit": 44, "isdisjoint": 48, "isfinit": [72, 74], "isidentifi": 44, "isin": [148, 150], "isinf": [72, 74], "isinst": [43, 84, 94, 95], "island": 29, "islow": 44, "isn": [6, 17, 18, 124, 131, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "isnan": [72, 74], "isnul": 124, "isnumer": 44, "isol": [23, 88], "isprint": 44, "isqrt": 72, "isspac": [41, 44], "issu": [4, 43, 49, 68, 115, 141, 149, 153], "issubset": 48, "issuperset": 48, "istitl": 44, "isupp": 44, "isuzu": 136, "item": [7, 10, 12, 15, 16, 17, 18, 26, 27, 29, 31, 32, 39, 40, 44, 48, 49, 62, 63, 66, 71, 72, 76, 84, 94, 117, 125, 128, 150], "items": [118, 121, 122], "iter": [3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 27, 29, 33, 41, 49, 62, 70, 72, 74, 86, 89, 125, 139, 150, 152, 154], "iter_obj": 26, "iterrow": [124, 135], "itertool": 144, "its": [0, 3, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 27, 28, 29, 39, 40, 43, 44, 45, 46, 47, 48, 51, 52, 53, 60, 66, 67, 69, 72, 76, 84, 87, 88, 90, 93, 94, 95, 98, 124, 125, 126, 127, 128, 130, 132, 134, 139, 143, 147, 148, 149, 154, 155, 156], "itself": [6, 17, 18, 26, 28, 30, 39, 44, 46, 47, 48, 60, 64, 66, 70, 90, 93, 94, 95, 98, 142, 149, 150, 153, 161], "iv": 31, "ivan": 69, "ivysaur": 135, "j": [3, 4, 6, 29, 39, 40, 41, 44, 45, 52, 53, 60, 82, 83, 94, 117, 118, 125, 140, 153], "jack": 127, "jaguar": 136, "jam": 44, "jan": [52, 53, 79, 138], "jane": [94, 127], "januari": [31, 37, 41, 51, 52, 53, 56, 57], "japan": [60, 136], "japanesecar": 136, "jargon": 87, "jason": 85, "java": [21, 39, 40, 44, 45, 47, 60, 81, 93, 98], "javascrip": 60, "javascript": [31, 44, 49, 60, 63, 90, 93], "jellic": 135, "jenner": 39, "jet": [141, 144], "jet_r": 144, "jetbrain": 139, "jigglypuff": 135, "jill": 127, "jirachi": 135, "jitter": [147, 152], "jlufe": 47, "jo": [7, 31], "job": [31, 44, 90, 141, 142, 146, 149, 153], "joe": [124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 138], "john": [46, 69, 114, 138, 152], "join": [44, 45, 46, 48, 60, 86, 149], "joined_df": 124, "joint": [142, 151, 157], "jointgrid": [143, 145], "jointplot": [143, 144], "jolteon": 135, "joltik": 135, "jose": 127, "journal": 142, "journei": [142, 154, 162], "jr": [114, 135], "json": [23, 72, 124], "json_exampl": 60, "json_str": 124, "jude": 31, "juic": 83, "jul": 79, "juli": 37, "jumbl": 142, "jump": [41, 44, 142, 148, 150, 154], "jumpluff": 135, "jun": [52, 54, 79], "june": [37, 41, 51, 52, 53, 54, 57, 140], "jupyt": [5, 8, 19, 21, 24, 62, 86, 99, 100, 101, 103, 104, 139, 141, 158, 159, 160, 161, 162], "jupytext": [5, 101, 159], "just": [4, 8, 15, 16, 17, 18, 26, 27, 29, 41, 44, 71, 75, 76, 79, 81, 84, 86, 98, 124, 126, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "justcount": 94, "justifi": [44, 86], "juventu": 114, "jvm": 90, "jynx": 135, "k": [1, 39, 40, 44, 73, 114, 115, 138, 140, 141, 146, 147], "k_depth": 152, "k_mean": 9, "kabuto": 135, "kabutop": 135, "kadabra": 135, "kaggl": [8, 151], "kakuna": 135, "kangaskhan": 135, "kangaskhanmega": 135, "kappa": 73, "kapur": 4, "karen": 152, "karrablast": 135, "kate": 46, "kb": 72, "kcsy2": 72, "kde": [140, 143, 145, 149, 153], "kdeplot": [141, 143, 144, 153, 154], "kecleon": 135, "keen": [29, 151], "keep": [3, 4, 24, 27, 31, 40, 69, 75, 94, 99, 103, 125, 130, 138, 140, 141, 142, 143, 149, 150, 151, 152, 153, 154], "keepdim": 122, "kei": [29, 32, 34, 37, 39, 45, 46, 48, 62, 63, 81, 83, 84, 87, 124, 126, 131, 133, 136, 144, 153], "keldeoordinari": 135, "keldeoresolut": 135, "kenel": 145, "kenneth": [138, 141], "kept": [75, 141], "kera": 161, "kernel": [5, 23, 101, 139, 141, 144, 145, 149, 152, 159], "kernel_density_estim": 145, "kernel_list": 145, "keyboard": 21, "keyboardinterrupt": [40, 58, 62, 63], "keyerror": [47, 48, 127, 128, 131, 133], "keyword": [21, 28, 29, 32, 35, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 63, 66, 67, 71, 72, 76, 78, 82, 86, 88, 92, 93, 94, 98, 114, 141, 143, 152, 154], "keyword_ord": 44, "kg": 43, "kid": 140, "kill": 154, "kind": [6, 26, 27, 63, 66, 69, 81, 100, 104, 114, 124, 131, 132, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154], "kindli": 154, "kingdra": 135, "kingler": 135, "kirlia": 135, "kivi": 23, "kiwi": [39, 48], "klang": 135, "klefki": 135, "klink": 135, "klinklang": 135, "km": 95, "kmean": 9, "know": [9, 22, 27, 28, 29, 30, 37, 39, 40, 41, 43, 63, 66, 69, 70, 72, 79, 82, 84, 86, 90, 95, 96, 98, 117, 119, 121, 127, 128, 131, 133, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162], "knowledg": [6, 64, 152, 153], "known": [0, 7, 9, 10, 12, 23, 28, 39, 40, 43, 46, 47, 67, 71, 82, 85, 90, 93, 94, 96, 120, 138, 142, 144, 146, 147, 148, 150, 152, 153, 154], "knoxvil": 138, "kof": 135, "kool": 44, "korea": 114, "krabbi": 135, "kricketot": 135, "kricketun": 135, "krokorok": 135, "krookodil": 135, "kw": [147, 153, 154], "kwarg": [29, 33, 63, 98, 131, 144, 147, 153, 154], "kyogr": 135, "kyogreprim": 135, "kyurem": 135, "kyuremblack": 135, "kyuremwhit": 135, "l": [6, 10, 27, 31, 39, 40, 41, 44, 45, 46, 47, 48, 63, 71, 85, 114, 150], "la_": [24, 99, 103], "label": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 102, 114, 115, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 142, 149, 150, 152, 153, 154, 156, 158, 160], "label_dist": 145, "label_map": [16, 18], "labelbottom": [15, 16, 17, 18], "labelleft": [15, 16, 17, 18], "labl": 124, "labour": 143, "laet": [16, 18], "lairon": 135, "lam": 146, "lambd": 73, "lambda": [27, 29, 80, 124, 149], "lampent": 135, "land": [29, 107], "landorusincarn": 135, "landorustherian": 135, "langchain": 161, "languag": [21, 23, 29, 30, 31, 39, 40, 41, 44, 45, 47, 49, 60, 62, 66, 79, 80, 81, 82, 86, 87, 93, 94, 98, 100, 104, 153, 161], "lanturn": 135, "laod": 156, "lapra": 135, "larg": [23, 27, 45, 61, 62, 64, 72, 77, 87, 90, 114, 115, 118, 120, 124, 127, 134, 136, 139, 140, 147, 148, 152], "larger": [23, 28, 66, 75, 85, 90, 120, 152], "largest": [48, 72, 74], "larvesta": 135, "larvitar": 135, "last": [6, 23, 26, 27, 28, 29, 30, 32, 39, 40, 41, 44, 45, 46, 47, 48, 53, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 72, 76, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 98, 119, 120, 121, 124, 131, 133, 134, 139, 143, 144, 147, 149, 150, 152, 154], "last_index": [44, 128], "last_lett": 44, "last_nam": [29, 37, 39, 44, 47, 66, 82], "last_nm": 69, "lastli": [60, 148, 150, 154], "lastnam": [32, 66, 69, 82, 86, 93], "late": [138, 140], "latenc": [0, 7, 8], "latency_from": 7, "latency_grid": 7, "latency_rang": 7, "latency_to": 7, "latent": 151, "later": [27, 30, 41, 64, 76, 81, 82, 86, 87, 94, 124, 138, 142, 144, 146, 147, 148, 151, 154], "latest": [23, 140, 152], "latia": 135, "latiasmega": 135, "latio": 135, "latiosmega": 135, "latitud": 152, "latter": 95, "lattic": 153, "latvia": 143, "launch": 23, "layer": [6, 93], "layer_numb": [17, 18], "layout": [10, 154], "lazi": [27, 39], "lb": 114, "ldexp": [72, 74], "ldot": 44, "lead": [44, 62, 72], "leafeon": 135, "leap": 151, "learn": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 25, 26, 27, 28, 30, 31, 32, 36, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 88, 90, 93, 94, 95, 96, 107, 115, 117, 124, 126, 127, 129, 131, 132, 133, 134, 136, 138, 142, 143, 144, 148, 150, 151, 152, 153, 154, 155], "learning_r": [10, 11, 12], "learnt": [17, 18, 146, 147, 148, 152, 154], "least": [6, 17, 18, 23, 27, 31, 45, 47, 58, 81, 88, 94, 98, 120, 140, 143, 144, 146, 147, 148, 150, 152], "leav": [40, 48, 144, 146, 147, 149, 150, 152, 154], "leavanni": 135, "lectur": [44, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "ledft": 140, "ledian": 135, "ledyba": 135, "lee": [114, 138], "left": [15, 16, 17, 18, 26, 31, 39, 44, 52, 53, 55, 75, 86, 87, 95, 96, 114, 115, 119, 124, 139, 140, 143, 147, 149, 150, 151], "leg": [47, 95], "legandari": 135, "legend": [7, 9, 12, 13, 14, 15, 16, 24, 99, 103, 114, 115, 142, 144, 147, 149, 150, 151, 152, 153, 154], "legend_": 147, "legend_out": [142, 151, 154], "legendari": 135, "lembk": 138, "lemon": [39, 63], "len": [13, 14, 15, 16, 17, 18, 27, 29, 39, 40, 41, 44, 48, 49, 53, 82, 87, 117, 128, 131, 134, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "length": [8, 9, 13, 27, 31, 32, 39, 43, 44, 45, 48, 73, 82, 84, 87, 93, 95, 114, 117, 120, 124, 131, 133, 135, 136, 138, 140, 142, 143, 146, 150, 154], "lengthi": [27, 75, 149], "lesli": 138, "less": [7, 10, 12, 27, 35, 36, 37, 40, 41, 49, 58, 64, 74, 87, 90, 96, 124, 142, 153], "lesser": [36, 124], "lesson": 124, "let": [0, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 43, 44, 46, 48, 49, 51, 57, 58, 60, 62, 63, 66, 67, 68, 70, 71, 72, 76, 85, 86, 87, 88, 93, 94, 95, 96, 98, 101, 118, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160], "letter": [29, 31, 39, 40, 41, 44, 48, 49, 62, 72, 80, 82], "lettervalu": [151, 157], "level": [4, 7, 13, 14, 15, 16, 21, 23, 38, 43, 75, 107, 114, 124, 125, 127, 128, 133, 138, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "level_0": 125, "level_index": 128, "leverag": 152, "lewi": 138, "lfloor": 87, "lgamma": [72, 74], "li": 25, "lib": [44, 53, 72, 122, 128, 131, 132, 133, 138, 141, 145, 147], "librari": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 44, 74, 77, 81, 115, 117, 124, 125, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162], "licens": [23, 124, 135, 136], "lickilicki": 135, "lickitung": 135, "lie": 98, "liepard": 135, "life": [10, 12, 22, 67, 153, 162], "light": [114, 141], "light_medium": 114, "lightblu": 140, "lighter": 154, "like": [0, 2, 3, 4, 5, 6, 13, 14, 15, 16, 21, 23, 26, 27, 29, 30, 31, 36, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 66, 69, 71, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 95, 96, 98, 100, 101, 104, 114, 115, 117, 120, 121, 124, 125, 126, 127, 128, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 162], "likelihood": 145, "likewis": [132, 134], "lileep": 135, "lillig": 135, "lillipup": 135, "lime": 63, "limit": [39, 43, 64, 67, 70, 84, 96, 138, 140, 146, 149, 152, 153, 154, 156], "limitless": 142, "limousin": 152, "linalg": [117, 120, 122], "line": [3, 5, 10, 11, 12, 13, 14, 15, 16, 21, 23, 24, 25, 28, 30, 31, 34, 40, 41, 44, 48, 49, 60, 62, 63, 66, 67, 69, 71, 72, 80, 83, 84, 87, 88, 90, 94, 99, 100, 101, 103, 104, 120, 121, 138, 139, 140, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154, 159], "line2d": [24, 99, 103], "line_count": 60, "line_kw": [142, 143], "linear": [1, 4, 6, 7, 9, 15, 16, 17, 18, 22, 49, 66, 95, 117, 140, 141, 142, 143, 144, 146, 148, 151, 152, 154, 161], "linear_regress": [10, 11, 12], "linearli": [6, 17, 18, 142, 152], "linearregress": [10, 11, 12], "linearsegmentedcolormap": 141, "linecollect": 147, "linefe": 44, "lineplot": 152, "liner": 4, "linestyl": [114, 115, 150], "linewidth": [114, 115, 139, 140, 146, 147, 148, 149, 152, 153, 154, 155], "link": [23, 90, 141, 142, 143, 151, 152, 154], "linoon": 135, "linregress": 140, "linregressresult": 140, "linspac": [10, 11, 12, 13, 14, 24, 99, 103, 117, 122, 139, 145, 152, 154], "linux": 60, "list": [8, 9, 13, 21, 26, 27, 29, 31, 32, 43, 48, 50, 51, 60, 62, 71, 73, 74, 75, 76, 80, 81, 83, 85, 86, 87, 93, 94, 95, 96, 98, 117, 118, 119, 120, 121, 124, 128, 130, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154], "list1": [39, 45, 66, 71, 72, 84, 126], "list2": [45, 71, 126], "list3": 45, "list_": 27, "list_1": 94, "list_enumer": 44, "list_nam": 45, "list_of_cmap": 153, "list_of_hexa_color": 72, "list_of_list": [39, 49], "list_of_rgb_color": 72, "list_siz": 39, "listedcolormap": 150, "listliter": 81, "liter": [21, 44, 52, 53, 62, 63, 69, 76, 81, 82, 85, 86, 87, 92], "lithuania": 143, "litleo": 135, "littl": [7, 9, 15, 16, 17, 18, 88, 95, 119, 140, 142, 146, 147, 149, 150, 151, 153, 154], "litwick": 135, "live": [29, 37, 44, 60, 63, 87, 93], "liverpool": 154, "ljust": [44, 86], "ll": [19, 27, 28, 39, 41, 43, 45, 46, 47, 48, 60, 61, 63, 66, 67, 68, 71, 75, 79, 93, 94, 100, 104, 124, 140, 155], "llm": 161, "lm": [141, 152, 157], "lmplot": [143, 144], "lo": 31, "load": [60, 72, 76, 90, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157], "load_dataset": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "load_ext": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "loc": [114, 115, 121, 124, 135, 147, 149, 150], "loc_var": 67, "local": [3, 4, 21, 23, 27, 28, 51, 53, 54, 55, 56, 57, 58, 62, 68, 71, 78, 88, 94, 95, 98, 124, 144], "local_lang": 67, "local_tim": 57, "localtim": [55, 58], "locat": [29, 31, 44, 45, 60, 62, 72, 75, 82, 86, 87, 95, 115, 135, 147, 148, 149, 152], "locator_param": 140, "locket": 72, "log": [61, 72, 73, 74, 117, 121], "log10": [43, 72, 74], "log1p": [72, 74], "log2": [72, 74], "logarithm": [43, 72, 74], "logic": [34, 36, 70, 96, 98, 124, 128, 131, 162], "logical_and": 122, "logical_not": 122, "logist": [1, 142, 143], "logistic_regress": [7, 9, 13, 14, 15, 16], "logisticregress": [13, 14, 15, 16], "lognormvari": 73, "logo": [60, 61], "logo1": 61, "logspac": [24, 99, 103], "logx": 142, "lombr": 135, "london": [29, 51, 55, 60, 63, 93, 128], "long": [29, 34, 40, 41, 43, 44, 49, 80, 81, 83, 88, 98, 121, 140, 146, 147, 162], "long_nam": 29, "longer": [10, 11, 12, 13, 14, 15, 16, 17, 18, 30, 44, 72, 93, 145], "longitud": 152, "look": [2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 28, 29, 30, 31, 34, 41, 43, 60, 62, 67, 70, 72, 75, 76, 80, 81, 85, 86, 88, 95, 96, 98, 114, 115, 135, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "lookuna": 44, "lookup": 124, "loop": [3, 21, 29, 32, 34, 42, 44, 45, 46, 47, 48, 58, 60, 63, 66, 69, 81, 86, 120, 124, 150], "loos": 6, "lopunni": 135, "lopunnymega": 135, "lose": 60, "loss": [85, 154], "lost": 44, "lot": [3, 4, 21, 24, 27, 39, 40, 44, 70, 72, 75, 90, 99, 103, 119, 140, 142, 150, 152], "lotad": 135, "loudr": 135, "love": [23, 29, 31, 48, 86], "low": [10, 11, 12, 13, 14, 15, 16, 17, 18, 73, 115, 118, 143, 148, 151], "lower": [31, 44, 85, 115, 119, 120, 140, 148, 149, 151, 152, 153], "lowercas": [31, 44, 72, 80, 82], "lowess": [142, 144], "lowest": [72, 124, 148, 150], "lsr": [140, 143], "lst": [28, 49, 63], "lst_one": 63, "lst_two": 63, "lstrip": 44, "lucario": 135, "lucariomega": 135, "lucia": 94, "ludicolo": 135, "lugia": 135, "luke": 149, "lumineon": 135, "lump": 148, "lunaton": 135, "lunch": [142, 146, 147, 149, 154], "lut": 156, "luvdisc": 135, "luxembourg": 143, "luxio": 135, "luxrai": 135, "lvplot": 152, "lw": [24, 99, 103, 146, 147, 150, 152, 154], "m": [2, 3, 4, 7, 31, 39, 41, 45, 46, 51, 52, 53, 54, 55, 56, 57, 58, 72, 74, 79, 80, 82, 85, 86, 87, 95, 114, 115, 138, 141, 146, 148, 150, 154], "ma": 31, "maaan": 31, "machamp": 135, "machin": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 25, 37, 95, 107, 142, 150, 151, 153, 154, 162], "machine_learn": 150, "machineri": 124, "machok": 135, "machop": 135, "maco": 61, "macro_cas": 82, "made": [31, 62, 64, 72, 88, 90, 94, 152], "madrid": 114, "magbi": 135, "magcargo": 135, "magic": [29, 96, 139], "magikarp": 135, "magma": [141, 142, 144], "magma_r": 144, "magmar": 135, "magmortar": 135, "magnemit": 135, "magnet": 152, "magneton": 135, "magnezon": 135, "magnitud": [3, 4, 95, 96, 142, 150], "mai": [0, 2, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 27, 31, 37, 41, 43, 44, 45, 46, 48, 51, 52, 58, 60, 63, 64, 66, 68, 69, 75, 79, 85, 88, 90, 93, 94, 95, 98, 119, 124, 125, 126, 128, 129, 133, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "mail": [31, 122], "mailbox": 72, "main": [31, 43, 46, 67, 68, 72, 76, 82, 93, 94, 95, 98, 146, 150, 152, 155], "main1": 68, "mainli": 39, "maintain": [77, 142], "mainten": 161, "major": [7, 27, 86, 146, 147, 150, 151], "majorli": [124, 125, 142, 146, 147, 151, 152, 154], "make": [3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 24, 27, 28, 29, 30, 31, 32, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 60, 62, 63, 64, 66, 67, 68, 70, 72, 75, 77, 80, 81, 82, 85, 86, 87, 88, 90, 93, 95, 96, 98, 99, 103, 117, 119, 120, 124, 125, 126, 128, 129, 131, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162], "make_blob": 153, "make_kd": 144, "make_multiplier_of": 28, "make_pretti": 29, "make_sound": 98, "make_uppercas": 29, "mako": [144, 152, 156], "mako_r": 144, "makuhita": 135, "malamar": 135, "male": [60, 93, 135, 138, 142, 145, 147, 148, 149, 150, 154], "male_dinn": 149, "male_lunch": 149, "malign": [4, 13, 14, 15, 16], "mammal": 95, "mammalnam": 95, "mamoswin": 135, "man": [30, 31, 148, 150], "manadatori": 142, "manag": [31, 66, 72, 75, 152], "manaphi": 135, "manchest": [93, 114], "mandatori": [46, 51, 66, 69, 81, 94, 98, 142, 146, 147, 154], "mandibuzz": 135, "manectr": 135, "manectricmega": 135, "mango": [37, 39, 45, 48, 63, 66, 83, 86, 126, 150], "manhattan": 147, "mani": [3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 22, 23, 31, 39, 40, 41, 44, 46, 48, 60, 61, 63, 64, 72, 76, 82, 87, 93, 94, 98, 100, 101, 104, 114, 120, 121, 124, 129, 138, 140, 141, 147, 152, 153, 155, 159, 162], "manipul": [30, 44, 51, 72, 94, 120, 124, 134, 154], "mankei": 135, "manner": [29, 34, 39, 40, 95, 146, 152], "manner_of_death": 138, "mantin": 135, "mantissa": 74, "mantyk": 135, "manual": [3, 4, 6, 26, 63, 64, 121], "manufactur": 94, "map": [6, 16, 18, 25, 49, 81, 88, 124, 131, 141, 143, 144, 147, 149, 153, 154, 157], "map_datafram": 154, "map_diag": [144, 153], "map_low": [144, 153], "map_offdiag": 153, "map_upp": [144, 153], "mapper": 131, "mappingmethod": 81, "maptplotlib": 154, "mar": 79, "maractu": 135, "march": [31, 37, 41], "mareep": 135, "margin": [10, 143, 146], "margin_titl": [151, 154], "maril": 135, "marit": 45, "marital_statu": 47, "mariya": 39, "mark": [34, 35, 39, 47, 66, 76, 79, 81, 86, 94, 114, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 145, 147, 150], "markdown": [23, 158, 160], "markdownfil": [5, 101, 159], "markedli": [19, 100, 104], "marker": [9, 10, 61, 114, 115, 138, 142, 143, 144, 147, 148, 150, 152, 153, 154], "markeredgecolor": 114, "markerfacecolor": 115, "markers": 114, "market": 93, "marks_df": 124, "marks_dict": 124, "markup": [100, 104], "marowak": 135, "marri": [37, 82], "marshtomp": 135, "mask": [128, 154], "masquerain": 135, "mass": [66, 82, 124], "massiv": [124, 127], "master": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "masterstudentclass": 94, "mat": 119, "match": [53, 69, 128, 131, 133, 143, 145, 148, 149, 154], "match_replac": 31, "materi": 6, "math": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 24, 43, 47, 62, 78, 86, 99, 103], "mathemat": [23, 39, 48, 49, 72, 82, 87, 96, 124, 140, 143, 148, 150, 152, 161, 162], "mathemet": 107, "mathew": 114, "matlab": [37, 39, 60, 82, 90, 93, 119, 120], "matmul": 120, "matplotlib": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 99, 103, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "matric": [25, 120], "matrix": [6, 7, 15, 16, 17, 18, 25, 49, 117, 118, 119, 121, 124, 153, 154, 155, 156], "matruc": 120, "matter": [29, 41, 63, 66, 69, 82, 146], "matthew": 138, "mawil": 135, "mawilemega": 135, "max": [3, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 48, 93, 95, 117, 120, 121, 122, 124, 136, 138, 143, 145, 146, 154], "max_inst": 98, "max_iter": [9, 13, 14, 15, 16, 17, 18], "max_row": 124, "max_spe": 95, "maximum": [9, 13, 14, 15, 16, 17, 18, 31, 40, 70, 93, 114, 117, 120, 121, 124, 145, 148, 149], "maxsiz": 72, "maxsplit": 31, "maxyear": 51, "mayb": [39, 152], "mazda": 136, "mb": [7, 17, 18], "mbox": [24, 99, 103], "md": [5, 19, 100, 101, 104, 159], "me": [36, 44, 86, 139, 140, 141, 142, 143, 144, 146, 147, 149, 150, 152, 153, 154], "mean": [0, 1, 3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 28, 30, 31, 35, 36, 39, 40, 41, 44, 45, 46, 48, 51, 52, 53, 57, 62, 67, 69, 72, 80, 81, 82, 83, 84, 85, 86, 87, 93, 94, 96, 98, 99, 103, 117, 118, 121, 124, 135, 136, 138, 140, 142, 143, 146, 147, 148, 150, 151, 152, 153, 154], "meaning": [126, 154], "meant": 138, "meanwhil": [143, 147, 150, 152, 154], "measur": [8, 9, 13, 93, 138, 140, 143, 146, 147, 148, 151, 152], "mechan": [22, 76, 120, 142, 152, 155], "median": [45, 72, 93, 114, 117, 121, 124, 147, 148, 149, 150, 152], "medianprop": 114, "medicham": 135, "medichammega": 135, "meditit": 135, "medium": [24, 27, 99, 103, 114, 141], "medium_heavi": 114, "meet": [35, 147, 148], "mega": 135, "meganium": 135, "melina": 60, "mellon": 6, "meloettaaria": 135, "meloettapirouett": 135, "melt": [146, 147, 148, 154], "melt_df": 148, "member": [30, 48, 93, 94, 143, 149], "memor": 142, "memori": [17, 18, 26, 39, 43, 44, 45, 60, 62, 70, 82, 84, 87, 88, 90, 93, 94, 117, 121, 124, 139, 152], "memoryerror": [62, 63], "men": 141, "mennen": 39, "mention": [6, 27, 44, 63, 76, 124, 139, 143, 147, 150, 151, 152, 154], "menu": [83, 141], "meow": 98, "meowsticfemal": 135, "meowsticmal": 135, "meowth": 135, "merced": 136, "mere": 98, "merg": [96, 124, 149], "meshgrid": [7, 122], "mesprit": 135, "mess": 135, "messag": [3, 4, 28, 35, 36, 37, 38, 62, 63, 64, 66, 69, 76], "messi": [39, 40, 114], "met": [28, 36, 40, 130], "meta": 31, "metagross": 135, "metagrossmega": 135, "metang": 135, "metapod": 135, "metaprogram": 29, "meter": [82, 152], "meth": 98, "method": [23, 26, 27, 28, 29, 30, 39, 40, 49, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 69, 72, 75, 76, 81, 86, 90, 94, 96, 98, 120, 124, 125, 128, 131, 133, 134, 138, 142, 143, 148, 149, 150, 151, 152, 153, 154, 156, 162], "metric": 156, "mew": 135, "mewtwo": 135, "mewtwomega": 135, "michael": 138, "michel": 60, "microchip": [4, 14], "microsecond": [52, 53, 55], "microsoft": 44, "mid": 87, "middl": [37, 45, 46, 63, 119, 146, 148, 149, 150], "mienfoo": 135, "mienshao": 135, "might": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 28, 34, 40, 41, 43, 58, 63, 81, 86, 98, 118, 140, 142, 146, 147, 148, 149, 150, 151, 153, 154], "mightyena": 135, "milaan": [29, 37, 39, 44, 47, 49, 60, 62, 63, 66, 69, 72, 82, 85, 87, 93, 95, 136], "milan": [44, 60, 94], "mile": 150, "mileag": [124, 125, 135, 144, 146], "mileagedf": 136, "milk": 66, "milot": 135, "miltank": 135, "mime": 135, "min": [3, 10, 11, 12, 13, 14, 48, 93, 117, 120, 121, 122, 124, 138, 143, 145, 146, 151, 154], "min_row": 124, "minccino": 135, "mind": [34, 49, 69], "mini": 149, "minim": [2, 6, 71, 138], "minimum": [3, 4, 10, 11, 12, 13, 14, 15, 16, 17, 18, 45, 114, 117, 121, 124, 140, 148, 149, 162], "minu": [87, 148], "minun": 135, "minut": [17, 18, 52, 53, 55, 56, 57, 146, 147, 151], "minyear": 51, "mirror": [70, 153], "misc": 76, "misdreavu": 135, "misinterpret": 141, "mislead": 143, "mismagiu": 135, "mismatch": 98, "miss": [10, 11, 12, 13, 14, 15, 16, 36, 62, 63, 69, 118, 125, 134, 150, 152], "missing_label": 131, "mission": 86, "mistak": [45, 62, 90, 148], "mit": 149, "mitsubishi": 136, "mix": [45, 46, 47, 48, 69, 118, 119, 146, 147, 148, 152], "mix_fruit": [39, 45, 48], "mkdir": 72, "ml": [22, 150, 162], "mlc": 147, "mlp": 6, "mm": [51, 53, 54], "mn": 31, "mnemon": 82, "mnist": [4, 6, 15, 16, 17, 18], "mo": 31, "mod": [72, 122], "modal": 149, "mode": [10, 23, 60, 63, 72, 73, 93, 94, 135, 147, 148], "model": [3, 7, 90, 93, 94, 107, 140, 142, 144, 151, 152, 153, 161, 162], "model_": 153, "modf": [72, 74], "modif": [30, 93, 95, 121, 128, 131, 133, 134, 147, 150, 151, 152, 154], "modifi": [28, 29, 30, 37, 39, 40, 44, 45, 46, 47, 49, 58, 60, 67, 68, 72, 84, 86, 87, 119, 124, 129, 135, 147, 149, 151, 152, 161], "modul": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 30, 31, 32, 40, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 56, 58, 60, 61, 62, 63, 64, 67, 69, 70, 71, 78, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 98, 119, 120, 128, 131, 133, 142, 147, 152, 154], "modula": 98, "modular": 66, "modulo": [62, 96], "modulu": [82, 87, 96], "moistur": [115, 147], "moisturizersalesdata": 115, "moltr": 135, "moment": [88, 147, 154], "mon": [41, 52, 53], "mondai": [52, 53, 57], "monei": [146, 147], "monferno": 135, "mongodb": 45, "monitor": 161, "monkei": 149, "monoton": 95, "month": [41, 52, 53, 54, 55, 56, 57, 66, 81, 150, 152, 155], "month_numb": 115, "monthlist": 115, "moon": 66, "moral": 140, "mordern": 21, "more": [3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 26, 27, 28, 29, 30, 32, 34, 36, 37, 39, 41, 43, 45, 46, 47, 48, 49, 51, 52, 57, 58, 60, 61, 62, 63, 64, 66, 67, 69, 71, 72, 73, 76, 80, 81, 82, 83, 88, 90, 93, 94, 95, 96, 98, 99, 100, 101, 103, 104, 115, 118, 119, 120, 121, 124, 125, 130, 133, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 162], "moreland": 141, "moreov": 60, "morn": [66, 69, 86], "morphism": 93, "most": [21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 40, 43, 44, 45, 46, 47, 48, 53, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 72, 81, 83, 84, 85, 86, 87, 90, 93, 94, 95, 96, 98, 100, 104, 119, 120, 124, 126, 128, 131, 133, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155], "most_frequent_word": 31, "most_populated_countri": [60, 66], "most_spoken_languag": [60, 66], "mostli": [40, 44, 141, 154], "mothim": 135, "motiv": 31, "motorcycl": 6, "mous": [45, 46], "move": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 35, 39, 41, 60, 88, 131, 139, 140, 143, 146, 147, 148, 150, 152, 153, 154], "movi": 153, "mpimg": [15, 16, 17, 18], "mpl": 150, "mr": 135, "mri": 152, "mro": 95, "msc": 23, "msg": [28, 29, 66, 69, 138, 145], "mtransform": 147, "mu": [7, 73], "mu_param": 7, "much": [3, 6, 10, 11, 12, 21, 23, 27, 30, 47, 72, 121, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154], "mudkip": 135, "muk": 135, "mul": 72, "multi": [83, 84, 93, 125, 126, 149, 153, 154], "multideriv": 95, "multidimension": [117, 119, 124], "multiindex": [124, 127, 128, 131, 134], "multilay": 6, "multilayer_perceptron": [17, 18], "multilayerperceptron": [17, 18], "multilevel": 150, "multilin": [31, 44, 71, 81, 83, 84], "multiline_str": [44, 83], "multimedia": 23, "multip": 25, "multipl": [3, 6, 11, 17, 18, 23, 27, 29, 37, 39, 41, 44, 45, 48, 49, 60, 67, 69, 71, 80, 81, 83, 87, 90, 93, 94, 96, 98, 117, 118, 124, 125, 127, 129, 130, 134, 136, 140, 141, 142, 146, 147, 148, 149, 152, 153, 154], "multiple_vari": 49, "multipli": [10, 11, 12, 13, 14, 15, 16, 28, 39, 40, 46, 51, 66, 70, 76, 77, 82, 86, 87, 117, 120], "multitouch": 23, "multivari": [3, 4, 7, 154], "multivariate_gaussian": 7, "multivariate_norm": [141, 142, 143, 153], "mumbai": 49, "munchlax": 135, "munna": 135, "murkrow": 135, "musharna": 135, "mushroom": 46, "music": 75, "must": [26, 28, 29, 38, 39, 43, 44, 45, 46, 47, 48, 60, 61, 63, 66, 67, 69, 70, 72, 73, 75, 76, 80, 81, 82, 84, 85, 88, 90, 94, 95, 98, 115, 119, 125, 129, 130, 139, 140, 147, 154], "mut": 146, "mutabl": [39, 45, 46, 47, 48, 84, 124], "mutat": 119, "mute": 149, "my": [4, 40, 43, 44, 60, 63, 67, 68, 76, 82, 84, 94, 98, 114, 115, 141, 146, 148, 149, 150, 152], "my_addit": 77, "my_ag": 36, "my_data": 61, "my_dict": 47, "my_dict1": 47, "my_dict2": 47, "my_dict3": 47, "my_func": 67, "my_gen": 27, "my_info": 45, "my_it": 26, "my_list": [26, 27, 45, 71, 118, 124], "my_list1": [45, 118], "my_list2": [45, 118], "my_list3": 45, "my_list4": 45, "my_list5": 45, "my_matrix": 118, "my_modul": 72, "my_nam": 82, "my_set": [39, 48], "my_str": [27, 44], "my_tupl": 46, "my_tuple1": 46, "my_tuple2": 46, "my_tuple3": 46, "my_tuple4": 46, "my_vaccin": 39, "myclass": 80, "mygraph": 114, "mymethod": 95, "mynewclass": 94, "myst": [158, 160], "mysteri": 88, "n": [2, 3, 4, 7, 9, 11, 24, 26, 27, 28, 32, 35, 36, 39, 40, 41, 44, 45, 46, 49, 60, 63, 64, 66, 69, 70, 71, 72, 76, 79, 81, 82, 83, 85, 86, 89, 93, 94, 95, 99, 103, 117, 118, 121, 124, 125, 126, 129, 130, 131, 132, 133, 134, 136, 138, 146, 148, 149, 150, 152, 153], "n0": 39, "n1": 39, "n10": 39, "n21": 39, "n28": 39, "n3": 39, "n36": 39, "n45": 39, "n6": 39, "n_boot": [142, 150, 151, 152], "n_color": 141, "n_featur": 153, "n_list": 45, "n_sampl": 153, "n_tupl": 46, "na": [124, 128, 129, 134], "na_valu": 136, "nafter": [128, 129, 130, 133, 134], "nail": 138, "naiv": 98, "name": [10, 16, 18, 23, 27, 28, 29, 30, 31, 32, 39, 40, 41, 43, 44, 45, 46, 47, 49, 51, 52, 53, 57, 58, 60, 61, 62, 63, 66, 67, 69, 71, 75, 76, 77, 80, 81, 83, 84, 85, 87, 89, 93, 94, 95, 96, 98, 114, 115, 124, 125, 127, 128, 129, 130, 131, 132, 133, 135, 138, 141, 142, 143, 145, 146, 150, 152, 154], "named_tupl": 57, "nameerror": [28, 30, 44, 45, 46, 47, 63, 67, 83, 84, 94], "nameless": 71, "names_upper_cas": 29, "namespac": [21, 28, 30, 71, 72, 75, 81, 92, 94, 98, 117], "nan": [72, 74, 118, 120, 122, 125, 130, 134, 135, 136, 138, 142, 148, 150], "napr": 79, "narrow": 149, "nat": [124, 125, 127, 128, 129, 130, 131, 132, 133, 134], "nation": 114, "nativ": [87, 138, 139], "natu": 135, "natur": [0, 7, 23, 29, 40, 72, 74, 88, 117, 152, 161], "naug": 79, "nayron": [17, 18], "nbagg": 139, "nbin": 140, "nbyte": 118, "ncol": [140, 149, 150], "ncolumn": 131, "ncongratul": 64, "ncontain": 60, "ndarrai": [117, 118, 121, 124, 125, 126, 155], "ndata": 32, "ndatafram": 134, "ndec": 79, "ndenumer": [122, 140], "ndframe": 124, "ndim": [117, 118], "ndindex": 122, "ndo": 44, "ne": 114, "nearest": [2, 9], "nearli": [44, 71, 87, 117], "neat": 81, "neatli": 142, "necessari": [23, 26, 38, 40, 76, 133, 139, 144], "necessarili": [124, 138, 142, 147, 148, 154], "need": [3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 27, 30, 31, 34, 36, 39, 40, 43, 44, 45, 46, 49, 51, 53, 54, 55, 57, 60, 61, 63, 64, 66, 67, 68, 69, 71, 72, 77, 79, 82, 84, 85, 86, 90, 94, 95, 96, 98, 101, 107, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 155, 159, 162], "neg": [0, 3, 4, 14, 31, 35, 36, 37, 38, 44, 49, 60, 74, 83, 86, 122, 127, 143, 149], "negat": [31, 87], "negative_numb": 86, "neither": [38, 44, 67, 74, 149], "nenter": 64, "nenuemer": 39, "nescessarili": 120, "nest": [21, 29, 34, 36, 37, 42, 45, 46, 47, 67, 70, 88, 117, 118, 126, 147, 149, 150], "netherland": [10, 12], "network": [1, 63, 107, 121, 161, 162], "networkerror": 63, "neural": [1, 107, 121, 161, 162], "neural_network": [17, 18], "neuron": [17, 18], "never": [26, 40, 41, 43, 63, 82, 87, 90, 124, 139, 141, 146], "new": [0, 3, 4, 10, 11, 12, 15, 16, 17, 18, 22, 23, 29, 30, 31, 34, 40, 44, 46, 48, 49, 52, 53, 55, 56, 60, 64, 68, 71, 79, 82, 86, 88, 93, 94, 95, 96, 98, 114, 119, 121, 124, 125, 128, 129, 130, 131, 133, 136, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154], "new_": 124, "new_ag": 131, "new_axi": 128, "new_col": 131, "new_col_nam": 124, "new_df": 135, "new_dict": 47, "new_file_nam": 61, "new_head": 134, "new_index": 131, "new_list": 71, "new_mark": 131, "new_nam": 131, "new_sig": 147, "new_str": 31, "new_valu": 124, "new_year": 55, "new_york": [51, 55], "newaxi": 153, "newdir": 61, "newli": [98, 134], "newlin": [31, 44, 60, 76, 79, 81, 83, 86], "newshap": 121, "newton": 66, "next": [6, 26, 27, 35, 37, 39, 40, 41, 44, 60, 62, 63, 72, 73, 81, 90, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "neymar": [39, 40, 114], "nf": 124, "nfeb": 79, "nfor": 39, "ng": 31, "ngood": 44, "nhow": 86, "ni": 39, "nice": [139, 141, 146, 147, 152], "nicer": [44, 150], "nichol": 138, "nidok": 135, "nidoqueen": 135, "nidoran": 135, "nidorina": 135, "nidorino": 135, "nigeria": 60, "night": [69, 149], "nikla": [3, 4], "nin": 44, "nincada": 135, "nine": 31, "ninetal": 135, "nineti": 44, "ninjask": 135, "nipy_spectr": 144, "nipy_spectral_r": [144, 146], "nissan": 136, "njul": 79, "njun": 79, "nlist": 132, "nmai": 79, "nmar": 79, "nmulti": 81, "nn": 149, "nnov": 79, "no_of_nonna_valu": 130, "no_of_sid": 95, "nob": 140, "noct": 79, "noctowl": 135, "node": [6, 17, 18, 45], "nohtyp": 44, "noibat": 135, "nois": [142, 147], "noisier": 149, "noivern": 135, "nomin": [4, 13, 14, 15, 16], "non": [3, 4, 6, 9, 17, 18, 28, 32, 35, 40, 44, 60, 61, 69, 73, 94, 124, 130, 138, 139, 142, 144, 146, 152], "none": [29, 30, 31, 35, 39, 40, 47, 57, 60, 63, 66, 69, 73, 76, 80, 81, 83, 94, 121, 122, 124, 125, 128, 129, 130, 131, 133, 134, 138, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "nonlinear": [3, 6, 11, 17, 18, 142], "nonloc": [21, 68, 78, 80, 88], "nonlov": 67, "nonmarinemamm": 95, "nonneg": [117, 118], "nonparametr": [142, 144], "nonwingedmamm": 95, "nonzero": 122, "nor": [38, 44, 63, 67, 74, 149], "nordic_countri": 63, "norm": [30, 74, 120, 140, 145, 147], "normal": [7, 11, 15, 16, 17, 18, 28, 29, 31, 40, 41, 44, 49, 63, 64, 67, 71, 72, 73, 94, 118, 121, 127, 135, 140, 142, 143, 144, 145, 148, 149, 156], "normal_arrai": 121, "normalis": 155, "normalize_data": [11, 15, 16, 17, 18], "normalvari": 73, "north": 150, "norwai": [10, 12, 45, 63], "nosepass": 135, "notaion": 119, "notat": [3, 4, 48, 86, 114, 119, 149], "notation3": 86, "notch": 148, "note": [3, 4, 26, 27, 28, 30, 34, 40, 41, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 66, 67, 69, 72, 76, 81, 82, 83, 86, 87, 88, 93, 94, 95, 100, 104, 115, 118, 119, 120, 124, 125, 127, 128, 131, 132, 133, 134, 138, 139, 141, 142, 143, 144, 147, 148, 149, 150, 152, 153, 154, 162], "notebook": [8, 10, 19, 25, 62, 86, 100, 104, 139, 141, 142, 143, 144, 151, 152, 154, 158, 160, 161, 162], "notepad": 79, "noth": [31, 35, 39, 40, 41, 48, 66, 82, 93, 120, 147, 148, 149, 155], "notic": [29, 41, 43, 47, 49, 51, 62, 84, 86, 94, 95, 124, 139, 140, 142, 144, 146, 147, 148, 149, 150, 152, 153], "notif": [6, 23], "notimplementederror": 62, "notion": [43, 96], "notnul": 124, "notpad": 79, "noutput": 36, "nov": 79, "novemb": 37, "now": [4, 6, 7, 9, 10, 11, 12, 13, 14, 21, 27, 28, 29, 30, 31, 34, 35, 36, 39, 40, 49, 51, 52, 54, 55, 56, 60, 62, 63, 66, 67, 68, 69, 71, 72, 75, 76, 79, 81, 83, 85, 86, 88, 93, 94, 95, 96, 98, 120, 131, 134, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162], "nowher": 124, "np": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 99, 103, 114, 117, 118, 119, 120, 121, 124, 130, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "nperfect": 81, "nresult": 132, "nrow": [140, 149], "nsep": 79, "nsheet": 60, "nthi": [60, 64], "null": [39, 40, 48, 124, 130, 142, 154], "num": [26, 27, 28, 29, 32, 35, 36, 37, 38, 39, 40, 44, 48, 63, 66, 69, 70, 71, 81, 82, 86, 94, 121, 124, 125, 136, 145], "num1": [35, 36, 37, 38, 66, 69, 77, 82, 86, 94], "num2": [35, 36, 37, 38, 66, 69, 77, 82, 86, 94], "num3": 86, "num4": 86, "num_1": [37, 82], "num_2": [37, 82], "num_cel": [15, 16, 17, 18], "num_clust": 9, "num_exampl": [7, 9, 13, 14], "num_flo": 85, "num_float": 85, "num_int": 85, "num_iter": [10, 11, 12], "num_list": [49, 71], "num_new": 85, "num_on": 66, "num_perceptron": [17, 18], "num_point": [142, 144], "num_str": 85, "num_sum": 85, "num_training_exampl": [15, 16, 17, 18], "num_two": 66, "numb": 10, "number": [0, 3, 4, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 26, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 41, 44, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 85, 87, 89, 94, 95, 96, 98, 114, 115, 117, 124, 125, 126, 127, 131, 138, 139, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "number33": 86, "number_arithmet": 38, "number_list": 49, "numbermethod": 81, "numbers_int": 29, "numbers_squar": 29, "numbers_str": 29, "numbers_to_displai": [15, 16, 17, 18], "numel": 135, "numer": [16, 18, 23, 39, 40, 43, 44, 64, 72, 82, 86, 96, 117, 118, 124, 141, 143, 145, 146, 148, 149, 150, 152, 155], "numpi": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 39, 76, 99, 103, 114, 115, 119, 120, 124, 130, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161], "numpy_array_from_list": 118, "nuzleaf": 135, "nvar": 140, "ny": [51, 55], "nyc": 152, "nyc_taxi": 152, "nyear": 57, "nzip": 39, "o": [21, 23, 27, 31, 39, 41, 44, 45, 46, 47, 48, 49, 61, 65, 83, 84, 85, 86, 92, 114, 115, 134, 138, 139, 142, 150, 153], "ob": 94, "obama": 60, "obj": [23, 26, 30, 49, 93, 94, 98, 128], "obj1": 95, "obj2": 95, "object": [2, 23, 26, 27, 28, 29, 30, 39, 43, 44, 45, 46, 47, 48, 52, 54, 56, 57, 61, 62, 63, 64, 66, 69, 70, 71, 72, 73, 76, 81, 82, 84, 85, 86, 87, 88, 95, 96, 98, 117, 118, 120, 121, 125, 126, 131, 132, 133, 135, 141, 142, 143, 144, 146, 147, 150, 153, 154], "object1": 95, "object_nam": 94, "observ": [2, 7, 9, 29, 30, 35, 41, 93, 124, 134, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 154, 155], "obtain": [44, 72, 143, 150, 154], "obviou": [30, 44, 87], "obvious": 147, "occas": 121, "occass": [142, 146], "occur": [31, 40, 41, 44, 60, 62, 63, 64, 68, 77, 85, 121, 148], "occurr": [31, 44, 48, 94, 129, 150], "ocean": [144, 153], "ocean_r": 144, "oct": 79, "octadecim": 43, "octal": [43, 44, 83, 86], "octilleri": 135, "octob": 37, "od": 93, "odd": [26, 34, 39, 40, 45, 47, 49, 63, 66, 69, 98, 121], "odd_numb": [29, 49], "odd_squar": 47, "oddish": 135, "ofcours": [150, 152, 154], "off": [5, 19, 44, 60, 100, 101, 104, 124, 139, 150, 152, 159], "offer": [23, 43, 45, 73, 87, 119, 122, 138, 141, 144, 146, 147, 149, 150, 151, 152, 153, 154], "offic": 138, "offici": [21, 76, 142, 146, 148, 151, 152], "offlin": [10, 149], "offset": [52, 53, 60, 139, 150], "offspr": 146, "often": [0, 4, 7, 40, 44, 45, 79, 86, 93, 98, 140, 141, 143, 144, 146, 147, 148, 150, 152, 153, 154], "oh": [135, 150], "ohc": [124, 125, 136], "ohcf": 136, "ohcv": [124, 125, 136], "ok": [44, 81, 138], "okai": [81, 143, 144, 146, 147, 149], "old": [31, 36, 63, 76, 86, 93, 98, 122, 124, 131, 140, 143], "old_col": 131, "old_nam": 124, "older": [36, 87], "oliv": 141, "omanyt": 135, "omastar": 135, "omit": 31, "omma": 60, "onc": [3, 4, 23, 27, 31, 39, 41, 44, 46, 47, 48, 51, 60, 63, 66, 67, 69, 72, 79, 82, 84, 90, 127, 128, 131, 138, 139, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 162], "one": [3, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 21, 23, 26, 27, 28, 36, 37, 38, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 52, 58, 60, 63, 67, 69, 70, 71, 72, 75, 76, 79, 80, 81, 83, 84, 85, 87, 88, 90, 94, 95, 96, 98, 100, 104, 107, 118, 119, 120, 121, 124, 125, 126, 128, 129, 131, 133, 134, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156], "onedr": 61, "onedrivetemp": 61, "ones": [4, 44, 72, 117, 118, 120, 121, 122, 131, 133, 146, 148], "ongo": 152, "onion": 63, "onix": 135, "onli": [6, 12, 21, 27, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 51, 60, 61, 62, 63, 64, 67, 68, 69, 71, 72, 76, 79, 81, 82, 84, 87, 88, 90, 93, 94, 95, 96, 98, 118, 119, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 147, 149, 150, 152, 153, 154], "onlin": [4, 13, 14, 15, 16, 21, 141, 149, 152], "onto": [143, 151], "ooo": 44, "oop": [21, 63, 97], "opac": [10, 141], "opaqu": 141, "open": [21, 23, 62, 63, 72, 76, 81, 117, 124, 135, 136, 161], "open_workbook": 60, "openai": 161, "openerp": 23, "oper": [0, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 23, 27, 28, 29, 31, 32, 39, 40, 43, 49, 51, 60, 62, 63, 66, 67, 69, 75, 77, 81, 82, 84, 86, 89, 90, 92, 93, 94, 97, 107, 118, 121, 124, 128, 129, 131, 132, 133, 134, 152, 162], "operand": [43, 44, 45, 62, 63, 85, 87, 96], "opinion": [146, 150, 152], "opportun": [41, 140], "opposit": [71, 124], "optim": [2, 3, 4, 10, 11, 12, 13, 14, 15, 16, 41, 47, 84, 90, 128, 162], "option": [3, 4, 30, 31, 37, 39, 40, 43, 44, 45, 46, 47, 49, 63, 64, 66, 69, 76, 86, 93, 94, 95, 118, 121, 125, 132, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "oracl": 44, "orang": [37, 39, 45, 48, 63, 83, 87, 126, 141, 144], "oranges_r": 144, "orbital_period": 149, "order": [3, 6, 7, 15, 16, 17, 18, 27, 39, 40, 44, 60, 61, 66, 67, 69, 71, 72, 75, 84, 86, 94, 121, 124, 125, 131, 132, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154], "ordereddict": 132, "ordin": [4, 13, 14, 15, 16, 150], "ordinari": 29, "ore": [31, 154], "org": [23, 114, 120, 145, 152, 156], "organ": [23, 45, 51, 66, 72, 75, 86, 93, 152, 156], "orient": [26, 28, 30, 64, 94, 95, 96, 98, 125, 132, 139, 146, 147, 148, 149, 150, 151, 152], "origin": [7, 8, 9, 16, 18, 28, 29, 31, 61, 90, 96, 98, 119, 121, 124, 125, 128, 129, 130, 132, 134, 139, 143, 148, 152, 153, 156], "orrd": 144, "orrd_r": 144, "orthogonol": 25, "oserror": 62, "oshawott": 135, "ot": [31, 38], "otat": 60, "other": [4, 5, 6, 9, 13, 14, 21, 23, 26, 27, 29, 31, 39, 40, 43, 44, 49, 57, 60, 62, 63, 64, 66, 67, 69, 70, 71, 72, 76, 77, 79, 80, 81, 82, 83, 84, 87, 90, 93, 94, 95, 96, 98, 101, 117, 118, 120, 121, 124, 125, 129, 130, 132, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 161], "other_mag": 96, "otherwis": [41, 44, 60, 63, 69, 90, 94, 95, 120, 125, 130, 131], "othwerwis": 40, "ou": 152, "our": [3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 30, 31, 36, 40, 41, 43, 60, 61, 62, 63, 64, 66, 70, 72, 75, 76, 77, 79, 80, 86, 93, 96, 98, 114, 121, 124, 125, 127, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "our_plot": 144, "ourselv": [60, 77, 79], "out": [13, 23, 24, 27, 28, 29, 30, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 46, 47, 48, 49, 60, 62, 64, 66, 69, 71, 72, 79, 80, 81, 82, 83, 84, 87, 96, 99, 103, 119, 121, 122, 124, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154], "outcom": [34, 66, 142], "outer": [28, 38, 39, 40, 67, 120, 124, 148], "outer_fun": 67, "outer_funct": 88, "outermost": 88, "outlier": [142, 143, 148, 150, 152, 156], "outlier_prop": 152, "outliers_indic": 7, "outlin": [114, 147], "outout": 82, "output": [3, 4, 5, 6, 10, 12, 17, 18, 26, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 41, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 63, 64, 66, 67, 68, 69, 71, 72, 79, 85, 87, 90, 94, 95, 96, 101, 118, 120, 124, 127, 131, 132, 139, 152, 159, 161], "output_param_nam": [10, 12], "outsid": [35, 38, 39, 41, 45, 46, 67, 68, 93, 94, 119, 143, 152, 154], "over": [10, 11, 12, 13, 14, 15, 16, 26, 27, 29, 39, 40, 41, 71, 80, 81, 83, 95, 114, 118, 124, 125, 139, 140, 142, 145, 147, 150, 152, 153], "overal": [90, 114, 139, 144, 149, 150, 152, 153], "overcom": 43, "overfit": [10, 11, 12, 13, 14, 15, 16, 17, 18], "overflow": [70, 122], "overflowerror": [62, 87], "overkil": 27, "overlai": [143, 150], "overlap": [146, 147, 152], "overli": 153, "overload": [21, 97, 120], "overplot": 153, "overrid": [64, 98], "overridden": [64, 95], "overview": [13, 14, 19, 81, 100, 104, 121, 142, 143, 150, 151], "overwrit": [47, 60, 69], "overwritten": 60, "ow": 31, "own": [26, 62, 63, 64, 71, 72, 75, 76, 77, 79, 86, 88, 98, 140, 147, 148, 149, 150, 152], "oxford": [86, 149], "p": [0, 23, 31, 39, 41, 44, 45, 46, 48, 49, 52, 53, 58, 82, 86, 89, 93, 140, 144, 147, 150], "p1": [89, 93, 96, 98, 155], "p2": [89, 93, 96, 98], "p3": [96, 98], "p4": 98, "p5": 98, "p6": 98, "p7": 98, "p_letter": 49, "p_list": 23, "pa": 138, "pachirisu": 135, "pack": [29, 46], "packag": [21, 60, 72, 78, 81, 124, 128, 131, 132, 133, 138, 141, 145, 147, 149, 151, 152, 153, 154], "packagesin": 75, "packing_person_info": 63, "pad": [44, 52, 53, 86, 87], "page": [5, 58, 73, 74, 81, 96, 101, 141, 151, 159], "pagefil": 61, "pai": 87, "pain": 153, "pair": [10, 13, 14, 39, 44, 48, 74, 84, 85, 124, 125, 131, 132, 144, 147, 149, 151, 152, 153], "paired_r": 144, "pairgrid": [140, 144, 145, 154, 157], "pairplot": [140, 144, 153, 154], "pairwis": 145, "pakistan": 60, "pal": 154, "pale": [141, 147], "palett": [140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "palkia": 135, "palpitoad": 135, "palplot": 141, "pancham": 135, "panda": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 39, 114, 115, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161], "panel": [151, 153], "pangoro": 135, "panpour": 135, "pansag": 135, "pansear": 135, "paper": [139, 141, 142, 152, 161], "para": 135, "para1": 29, "para2": 29, "para3": 29, "paradigm": 93, "paragraph": 31, "parallel": [70, 154], "param": [7, 8, 142, 147, 148, 152, 153, 154], "param1": 49, "param2": 49, "param3": 49, "param_1": [4, 8, 14], "param_2": [4, 8, 14], "paramet": [4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 31, 32, 44, 49, 60, 67, 71, 72, 76, 79, 83, 90, 93, 95, 98, 114, 121, 125, 126, 127, 128, 129, 130, 131, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "parameter": 94, "parameter1": [66, 76], "parameter2": 66, "parametr": [94, 152], "paranthes": 44, "paranthesi": [46, 81], "parasect": 135, "parch": [148, 150], "parent": [64, 146], "parentattr": 95, "parenthes": [27, 31, 39, 44, 46, 62, 71, 79, 81, 83, 84, 139], "parenthesi": [27, 62, 67, 121], "parentmethod": 95, "pareto": [73, 150], "paretovari": 73, "pari": 114, "park": 142, "parmar": [29, 37, 39, 44, 49, 60, 66, 69, 72, 82, 93], "parramet": 154, "parrot": [93, 94], "pars": [57, 60, 62, 90, 124], "parser": 62, "part": [0, 29, 31, 39, 40, 41, 43, 44, 72, 74, 83, 84, 87, 88, 114, 117, 119, 129, 132, 138, 148, 152], "parti": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 51, 75], "partial": 6, "particl": 31, "particuar": [16, 17, 18], "particular": [34, 39, 40, 41, 43, 47, 48, 51, 56, 72, 82, 84, 93, 95, 118, 124, 127, 128, 130, 131, 132, 134, 138, 139, 140, 142, 143, 147, 148, 149, 150, 152, 153, 154], "particularli": [44, 148, 149], "partit": [2, 9, 44], "pass": [21, 26, 28, 29, 31, 32, 34, 35, 36, 42, 44, 51, 52, 53, 57, 62, 63, 64, 69, 71, 72, 76, 80, 82, 93, 94, 95, 98, 118, 124, 125, 126, 127, 128, 131, 133, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 152, 153, 154], "passag": 152, "passeng": [150, 152, 154, 155], "passenger_count": 152, "password": 36, "password_check": 36, "past": [115, 139, 144, 147, 148, 149, 152], "pastel1": [144, 149], "pastel1_r": 144, "pastel2": 144, "pastel2_r": 144, "pat": 107, "patch": [146, 150, 153], "patch_artist": 114, "patchcollect": 152, "path": [5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 60, 61, 75, 86, 101, 159], "pathcollect": [146, 147], "patienc": 142, "patrat": 135, "pattern": [29, 90, 114, 141, 153], "paul": 138, "paus": 27, "pawniard": 135, "pca": 151, "pclass": [148, 150], "pctdistanc": 114, "pd": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 114, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "pd_data": 7, "pd_test_data": [15, 16, 17, 18], "pd_train_data": [15, 16, 17, 18], "pdf": [142, 143, 145, 157], "peach": 150, "peak": [136, 143, 149], "pear": [37, 45, 48], "pearl": 90, "pearsonr": 153, "peculiar": [98, 124], "pedestrian": 6, "peek": [15, 16, 17, 18, 138], "peggi": [93, 95], "pelipp": 135, "penguin": [93, 95], "penicillin": 39, "peo": 31, "peopl": [31, 44, 48, 138, 141, 147, 152], "pep": 76, "per": [10, 12, 64, 87, 114, 115, 125, 138, 139, 141, 142, 148, 149, 150, 152, 154], "peramet": 69, "perceiv": 141, "percent": 29, "percentag": [13, 14, 15, 16, 17, 18, 39, 86, 93, 115, 124, 127, 131, 134, 146, 148, 150, 152], "percentil": [93, 121, 124, 152], "percep": [17, 18], "percept": 149, "perceptron": 6, "perceptron_index": [17, 18], "perfect": [0, 40, 81], "perfectli": [80, 81], "perflog": 61, "perform": [6, 9, 17, 18, 23, 26, 28, 32, 34, 39, 40, 43, 44, 45, 46, 47, 48, 49, 60, 63, 66, 71, 72, 77, 79, 84, 85, 86, 87, 90, 93, 96, 107, 117, 120, 124, 128, 131, 133, 134, 150, 162], "perimet": [66, 87, 95], "perimeter_of_circl": 66, "period": [71, 76, 124, 152], "perl": 23, "perm": 72, "perman": 60, "permiss": 63, "permit": 150, "permut": 155, "persian": 135, "person": [37, 39, 60, 66, 69, 76, 81, 82, 87, 93, 94, 95, 147, 150, 152], "person_dct": 60, "person_info": [82, 93, 95], "person_json": 60, "personaccount": 93, "petal": [8, 9, 13, 138, 146], "petal_length": [2, 4, 9, 13, 138, 141, 143, 144, 146, 147, 153, 156], "petal_width": [2, 4, 9, 13, 138, 146, 147, 153, 156], "petallengthcm": 114, "petalwidthcm": 114, "petilil": 135, "ph": 149, "phanpi": 135, "phantump": 135, "phion": 135, "phone": [32, 86, 89], "phone_num": 89, "phone_numb": 86, "photo": 114, "php": [47, 90], "phrase": 44, "physic": [70, 93, 138], "pi": [31, 43, 44, 62, 66, 72, 74, 82, 86, 87, 91, 93, 135], "picalo": 23, "pichu": 135, "pick": [2, 7, 9, 13, 119, 138, 141, 142, 144, 150, 152], "pickl": 76, "pickler": 76, "pickletool": 76, "pickup_datetim": 152, "pickup_latitud": 152, "pickup_longitud": 152, "pictori": 150, "pictur": [2, 3, 4, 6, 15, 16, 17, 18, 41, 154], "pidgei": 135, "pidgeot": 135, "pidgeotmega": 135, "pidgeotto": 135, "pidov": 135, "piec": [30, 119, 150], "piechart": 114, "pignit": 135, "pikachu": 135, "pile": 150, "piloswin": 135, "pineappl": 150, "pineco": 135, "pink": [39, 141, 144], "pink_r": 144, "pinsir": 135, "pinsirmega": 135, "pip": [23, 60, 72], "pipe": 149, "pipelin": 149, "piplup": 135, "pivot": [124, 155], "pivot_t": 124, "pixel": [4, 6, 8, 15, 16, 17, 18, 114], "pixel1": [16, 18], "pixel2": [16, 18], "pixel3": [16, 18], "pixel4": [16, 18], "pixel5": [16, 18], "pixel6": [16, 18], "pixel7": [16, 18], "pixel775": [16, 18], "pixel776": [16, 18], "pixel777": [16, 18], "pixel778": [16, 18], "pixel779": [16, 18], "pixel780": [16, 18], "pixel781": [16, 18], "pixel782": [16, 18], "pixel783": [16, 18], "pixel784": [16, 18], "pixel8": [16, 18], "pixel9": [16, 18], "piyg": 144, "piyg_r": 144, "pizel": [16, 17, 18], "place": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 29, 30, 43, 44, 45, 46, 47, 48, 51, 60, 63, 64, 69, 70, 72, 75, 81, 82, 84, 86, 95, 98, 138, 150, 154, 155], "placehold": [41, 44, 86], "plai": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 81, 88, 95, 124, 139, 141, 142, 144, 146, 147, 148, 150, 151, 152, 153, 154], "plain": [13, 14, 26, 98, 149], "plan": [93, 152], "plane": [10, 14, 25], "planet": 149, "planets_data": 149, "plasma": [144, 149, 152], "plasma_r": 144, "plate": 150, "platform": [21, 23, 60, 90, 152], "player": [39, 40, 93, 95, 114], "playground": 6, "ple": 31, "pleas": [40, 125, 139, 141, 142, 143, 145, 149, 150, 152, 154], "plenti": [62, 124], "plot": [3, 24, 99, 103, 138, 153, 154, 155, 156, 157], "plot_data": 10, "plot_figur": 10, "plot_func": 154, "plot_index": [15, 16, 17, 18], "plot_joint": 143, "plot_kw": 144, "plot_layout": 10, "plot_predictions_trac": 10, "plot_test_trac": 10, "plot_training_trac": 10, "plotli": [10, 143], "plotlin": 115, "plotnonfinit": 147, "plotter": 147, "plotting_context": 139, "plt": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 99, 103, 114, 115, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "plu": [87, 151], "plusl": 135, "pm": [52, 53, 58], "png": [60, 61, 114, 115, 143], "po": [128, 150], "pocoo": 23, "poetri": 23, "pofession": 154, "point": [3, 4, 7, 27, 28, 30, 31, 43, 44, 48, 57, 58, 62, 72, 73, 74, 83, 84, 87, 94, 96, 98, 114, 121, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155], "point_color": 147, "pointer": 60, "pointplot": [146, 150], "poison": 135, "poisson": 146, "pokemon": 135, "pokemon_data": 135, "poli": 93, "polic": 138, "policekillingsu": 138, "polio": 39, "polito": 135, "poliwag": 135, "poliwhirl": 135, "poliwrath": 135, "pollut": 30, "poly1d": 140, "polyfit": 140, "polygon": 95, "polynomi": [10, 11, 12, 13, 14, 15, 16, 117, 142], "polynomial_degre": [10, 11, 12, 13, 14, 15, 16], "ponyta": 135, "poochyena": 135, "poorli": 141, "pop": [34, 47, 48, 114, 144, 148, 153, 156], "popitem": 47, "popul": [29, 49, 60, 66, 73, 152, 154], "popular": [21, 23, 44, 58, 72, 76, 90, 93], "porsch": 136, "port": 90, "portabl": [21, 76, 90], "portal": 151, "portfolio": 161, "portion": [44, 45, 63, 67, 88, 138], "portrai": 141, "portug": 114, "portugues": 60, "porygon": 135, "porygon2": 135, "posit": [0, 14, 29, 31, 32, 35, 36, 37, 38, 44, 49, 63, 66, 70, 71, 74, 83, 124, 133, 134, 141, 143, 146, 147, 148, 150, 154], "positional_or_keyword": 131, "positional_ord": 44, "positive_even_numb": 49, "positive_no": 71, "positive_numb": 86, "possess": 142, "possibl": [7, 10, 15, 16, 17, 18, 30, 31, 36, 39, 41, 44, 46, 49, 63, 70, 72, 75, 82, 83, 86, 114, 120, 121, 124, 126, 127, 141, 144, 146, 149, 152, 154, 155, 162], "possibli": [6, 94, 150], "post": [24, 56, 99, 103, 138, 141, 146, 147, 148, 149], "postag": 153, "poster": 139, "potato": [63, 66, 87], "potenti": [114, 124, 144, 151, 153], "pound": 151, "pow": [62, 72, 74], "pow2": [45, 49], "power": [26, 27, 39, 44, 45, 49, 62, 72, 74, 81, 82, 87, 88, 95, 96, 100, 104, 108, 117, 118, 120, 124, 152, 154], "powtwo": [26, 27], "powtwogen": 27, "pp": 31, "pple": 31, "practic": [21, 22, 31, 46, 63, 64, 66, 72, 77, 98, 118, 124, 136, 139, 143, 149, 150, 151, 152, 154, 161], "practical_estimation_of_the_bandwidth": 145, "pre": [72, 90, 142, 150, 151, 152, 154], "prebuilt": 23, "preced": [35, 52, 53, 63, 69, 81, 95, 143], "precis": [0, 43, 87, 129, 134, 139, 142, 146, 152, 154], "precision_histori": 7, "preciss": [7, 15, 16, 17, 18], "predefin": [4, 10, 60, 66, 72, 85, 139], "predict": [3, 4, 13, 14, 90, 142, 152], "predicted_label": [15, 16, 17, 18], "predictions_num": [10, 11, 12], "predictor": 142, "predomin": 25, "prefer": [27, 28, 43, 81, 95, 114, 125, 139, 146, 149, 150], "prefix": [43, 75, 88, 93, 94, 139, 141], "prepar": [138, 153, 161], "prepend": 120, "presenc": [5, 43, 87, 101, 143, 159], "present": [37, 39, 41, 44, 47, 48, 61, 63, 71, 76, 87, 124, 127, 128, 131, 139, 140, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 162], "preserv": 43, "preset": 139, "press": [40, 81, 141], "pression": 31, "pressur": 152, "pretti": [13, 14, 23, 29, 56, 79, 84, 124, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "prevent": [10, 11, 12, 13, 14, 15, 16, 17, 18, 75, 82, 93, 95], "preview": [138, 140, 142, 143, 144, 148, 149, 150, 152, 154], "previou": [6, 30, 36, 43, 60, 67, 72, 88, 98, 119, 139, 143, 144, 146, 147, 148, 149, 151, 152, 154], "previous": [63, 72, 143, 144, 147, 149, 152, 153, 154], "prgn": 144, "prgn_r": 144, "price": [3, 4, 93, 94, 114, 124, 125, 126, 135, 152], "price_df": 126, "price_list": 126, "pricedf": 136, "primari": [141, 152], "primarili": [39, 40], "prime": [39, 40, 66], "primeap": 135, "princeton": 152, "princip": 151, "principl": [93, 152], "prinplup": 135, "print": [5, 7, 9, 10, 11, 12, 13, 14, 17, 18, 23, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 41, 43, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 81, 82, 83, 84, 85, 87, 88, 89, 93, 94, 95, 96, 98, 101, 114, 117, 118, 119, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 146, 152, 159], "print_data": 67, "print_full_nam": 29, "print_fullnam": [66, 69], "print_hello": 58, "print_hello_three_tim": 58, "print_hi": 58, "print_hi_three_tim": 58, "print_list": 66, "print_msg": 28, "print_this_to_screen": 80, "printer": [28, 29], "printf": 44, "printhello": 88, "printinfo": 69, "printnam": 93, "printstudentdata": 94, "prior": [6, 152], "prism": [144, 153], "prism_r": 144, "privaci": 161, "privat": [30, 72, 93, 94], "privatenam": 81, "privileg": 153, "probabl": [0, 4, 7, 10, 11, 12, 22, 43, 82, 114, 118, 141, 143, 148, 149, 155, 161], "problem": [11, 23, 28, 30, 32, 44, 63, 70, 93, 141, 149, 153, 154, 162], "probopass": 135, "proce": [6, 41, 86, 144], "procedur": [94, 152], "process": [6, 10, 12, 13, 14, 16, 17, 18, 23, 27, 40, 41, 46, 49, 58, 63, 70, 85, 90, 93, 94, 95, 98, 124, 126, 130, 142, 153, 154, 161], "processor": 90, "prod": 72, "produc": [8, 14, 27, 31, 36, 63, 79, 95, 114, 115, 120, 128, 131, 139, 161], "product": [10, 22, 25, 70, 72, 76, 82, 90, 96, 117, 120, 141, 142, 143, 144, 154, 161], "profession": [114, 139, 140, 141, 146, 147, 149], "profici": 142, "profit_rang": 115, "profitlist": 115, "program": [6, 17, 18, 23, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 64, 66, 67, 68, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 88, 94, 95, 96, 98, 142, 152, 161], "programdata": [53, 61, 72, 128, 131, 132, 133, 138, 141, 145, 147], "programm": [30, 43, 49, 63, 66, 76, 81, 83, 93, 98, 144], "programmar": 77, "progress": 23, "project": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 51, 75, 77, 142, 144, 151, 154, 161], "promin": 146, "promis": [98, 138, 144, 152], "promot": [85, 87], "prompt": [37, 66, 72, 86, 87, 117], "pronoun": 93, "pronounc": 153, "prop": [147, 150], "prop_cycl": [24, 99, 103], "proper": [62, 93, 129], "properli": [60, 61, 62, 79, 94, 148, 149, 154], "properti": [21, 33, 72, 93, 95, 127, 147, 152], "proport": [3, 4, 10, 12, 15, 16, 17, 18, 148, 150, 152], "propos": 98, "protect": [46, 63, 84, 93, 94], "protocol": [23, 26], "prototyp": [2, 9, 21, 94], "provid": [21, 23, 28, 30, 34, 39, 41, 43, 44, 45, 47, 58, 61, 63, 64, 66, 69, 72, 76, 86, 93, 94, 95, 115, 117, 120, 122, 124, 125, 126, 128, 131, 136, 141, 143, 146, 148, 152, 153, 154, 162], "proxi": [62, 95], "prune": 140, "pseudo": [63, 73], "pseudocolor": 141, "psychic": 135, "psyduck": 135, "ptp": 146, "public": [76, 93], "publish": 152, "pubu": 144, "pubu_r": 144, "pubugn": 144, "pubugn_r": 144, "pull": [119, 141, 150, 151, 154], "pullov": [16, 18], "puls": 151, "pumpkabooaverag": 135, "pumpkaboolarg": 135, "pumpkaboosmal": 135, "pumpkaboosup": 135, "punctuat": 72, "puor": 144, "puor_r": 144, "pupitar": 135, "purd": 144, "purd_r": 144, "purpl": [141, 144, 146], "purples_r": 144, "purpos": [6, 21, 23, 34, 60, 64, 71, 72, 73, 81, 82, 93, 94, 95, 96, 100, 104, 126, 140, 141, 142, 147, 148, 151, 152, 154], "purrloin": 135, "purugli": 135, "put": [30, 31, 35, 36, 41, 44, 45, 63, 79, 86, 88, 122], "pvalu": 140, "py": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 29, 44, 53, 64, 68, 72, 75, 76, 79, 82, 86, 128, 131, 132, 133, 138, 141, 145, 147], "py3": 72, "py_list": 45, "py_tupl": 46, "pybrain": 23, "pycharm": [23, 139], "pydata": [138, 152, 156], "pygam": 23, "pykyra": 23, "pynb": 72, "pyplot": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 24, 99, 103, 114, 115, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "pyqt": 23, "pyramid": [23, 39, 44], "pyroar": 135, "pyscript": 72, "pyth0ndatatyp": 44, "pytho": 44, "python": [89, 90, 114, 119, 120, 127, 128, 131, 134, 140, 142, 144, 147, 149, 152, 153, 161, 162], "python3": [47, 63], "python32": 44, "python38": 72, "python4datasci": 72, "python99": [36, 60, 61], "python_datatyp": 44, "python_dataypes_2021": 44, "python_learn": 61, "python_studi": 61, "pythonblogsoftwar": 23, "pythondatatyp": 44, "pythonpath": 72, "pythonregex": 31, "pythonthi": 81, "pythonwikiengin": 23, "pythonwin": 72, "pytorch": [39, 161], "pytz": [51, 55], "pyweek": 23, "q": [82, 144, 148], "quadrat": 66, "quagsir": 135, "qualit": 141, "qualiti": [114, 115], "quantil": [114, 148], "quantit": [148, 150, 153], "quantiti": 150, "quantiz": 141, "quarter": 152, "quarterli": 154, "quartet": 144, "quartil": [114, 148, 149, 150], "queen": 147, "queenstown": 148, "queri": [124, 142, 152], "question": [40, 45, 136, 153], "quick": [76, 122, 140, 147, 153], "quickli": [121, 139, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154], "quilava": 135, "quilladin": 135, "quintero": 138, "quit": [6, 10, 12, 39, 46, 62, 63, 119, 121, 140, 142, 143, 144, 145, 146, 147, 151, 152, 154, 155], "quot": [44, 60, 66, 76, 81, 83, 84, 139, 141], "quotat": [76, 79], "quux": 45, "quz": 45, "qwilfish": 135, "r": [3, 10, 11, 12, 37, 39, 40, 41, 44, 45, 46, 47, 48, 53, 58, 60, 61, 63, 66, 82, 83, 87, 93, 94, 114, 115, 119, 124, 132, 135, 136, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "r1": 118, "race": [138, 146], "rad": 114, "radian": [72, 74], "radiu": [82, 87, 93], "raichu": 135, "raikou": 135, "rain": 4, "rainbow": [141, 144, 147, 149, 150, 152], "rainbow_r": 144, "rais": [7, 26, 27, 30, 41, 44, 45, 46, 47, 48, 53, 60, 62, 64, 72, 74, 76, 80, 87, 96, 98, 128, 133, 147], "ralt": 135, "ram": 60, "ramp": 141, "rampardo": 135, "ran": [39, 62, 63, 79, 93, 94], "rana": 118, "rand": [72, 124, 144, 146, 152, 153, 155], "randint": [72, 73, 144, 153], "randn": [24, 99, 103, 145, 148, 152], "random": [0, 2, 7, 10, 12, 15, 16, 17, 18, 21, 24, 43, 48, 60, 78, 99, 103, 117, 124, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "random_numb": 72, "random_sampl": 118, "random_st": 153, "random_user_id": 72, "randomli": [2, 140, 152], "randomlist": 63, "randomst": 142, "randon": 153, "randrang": [43, 72, 73], "rang": [3, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 27, 31, 40, 41, 44, 45, 46, 47, 49, 58, 62, 63, 64, 66, 72, 73, 81, 84, 93, 95, 99, 103, 117, 118, 119, 120, 124, 125, 126, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "rangeindex": [17, 18, 124, 134], "rank": [8, 10, 12, 117, 118, 119, 120], "rapid": 21, "rapidash": 135, "rapidli": 21, "rare": [7, 63, 98], "rate": [3, 4, 10, 11, 12, 87, 114, 143, 146, 147, 151], "rather": [4, 6, 17, 18, 51, 58, 72, 76, 81, 95, 124, 125, 127, 131, 133, 134, 139, 148, 150, 152], "ratic": 135, "ratio": [4, 13, 14, 15, 16, 74, 154], "ration": 43, "rattata": 135, "raw": [31, 83, 152], "raw_str": 83, "rayquaza": 135, "rayquazamega": 135, "rb": 60, "rbg": 156, "rc": [139, 141, 150], "rcparam": [24, 99, 103, 150, 152, 153], "rdbm": 154, "rdbu": 144, "rdbu_r": 144, "rdgy": 144, "rdgy_r": 144, "rdpu": 144, "rdpu_r": 144, "rdylbu": 144, "rdylbu_r": 144, "rdylgn": 144, "rdylgn_r": 144, "re": [6, 10, 23, 40, 44, 45, 66, 72, 124, 133, 134, 135, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 152, 154], "rea": 39, "reacal": 7, "reach": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 30, 39, 41, 60, 107], "react": [44, 45, 60], "read": [21, 27, 28, 31, 32, 58, 62, 63, 66, 67, 68, 76, 81, 82, 88, 90, 94, 118, 119, 120, 124, 132, 138, 142, 143, 153, 161], "read_clipboard": 124, "read_csv": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 114, 115, 124, 125, 132, 135, 136, 138, 143, 149, 150], "read_excel": [124, 135], "read_html": 124, "read_json": 124, "read_sql": 124, "read_tabl": 124, "readabl": [21, 34, 49, 60, 71, 72, 81, 90, 98, 125], "reader": 60, "readi": [63, 93, 95, 162], "readili": [77, 86], "readlin": 60, "readm": 60, "real": [0, 2, 3, 6, 7, 9, 22, 23, 43, 82, 83, 84, 93, 94, 124, 142, 147, 148, 149, 152, 153, 161], "realiti": 82, "realiz": 149, "realli": [15, 16, 17, 18, 31, 93, 94, 138, 140, 142, 143, 146, 147, 148, 149, 152, 153, 154, 155], "reason": [3, 11, 27, 28, 29, 30, 43, 66, 71, 88, 94, 98, 121, 130, 138, 140, 147, 149, 154], "reassign": [29, 44, 46, 82, 130, 131], "rebind": 88, "recal": 0, "recall_histori": 7, "receiv": [6, 35, 36, 49, 69, 98], "recent": [26, 27, 28, 29, 30, 32, 40, 44, 45, 46, 47, 48, 53, 58, 60, 62, 63, 64, 67, 68, 69, 70, 72, 83, 84, 85, 86, 87, 93, 94, 95, 96, 98, 119, 128, 131, 133, 147, 152], "reciev": 23, "reciproc": 63, "recogn": [4, 6, 15, 16, 17, 18, 30, 72], "recognit": [6, 15, 16], "recollect": 144, "recomend": 82, "recommend": [23, 30, 31, 32, 52, 53, 58, 60, 75, 81, 82, 94, 117, 118, 142, 144, 146, 147, 148, 150, 153, 161], "record": [89, 132, 138, 152, 154], "recoveri": 61, "rect": [93, 146], "rectangl": [39, 87, 93, 146, 148, 150, 154], "rectangular": [150, 154, 155], "rectifi": 36, "recur": 98, "recurr": 161, "recurs": [21, 78, 95], "recursionerror": 70, "recursor": 70, "recycl": 61, "red": [3, 7, 15, 16, 17, 18, 39, 81, 94, 114, 115, 141, 144, 145, 147], "redeclar": 82, "redefin": [95, 152], "rediu": 93, "reds_r": 144, "reduc": [3, 4, 10, 11, 12, 17, 18, 29, 39, 40, 66, 70, 122, 124, 143, 149, 151, 152], "reduceat": 122, "reduct": [25, 161], "redund": [98, 124, 128], "redux": 45, "refactor": 30, "refect": 142, "refer": [21, 23, 28, 29, 41, 44, 45, 46, 60, 62, 72, 75, 76, 77, 82, 83, 87, 88, 93, 95, 98, 104, 120, 121, 122, 124, 138, 139, 141, 142, 144, 147, 148, 150, 151, 152, 153, 154, 158, 160], "referec": 152, "referenc": [67, 68, 138, 147, 148], "reference_vari": 93, "referenceerror": 62, "refin": 142, "reflect": [70, 142, 146, 148, 150, 152, 154], "reform": 154, "reformat": 44, "refresh": [22, 139], "reg": [31, 141, 143, 144, 145, 152, 157], "regard": [140, 147, 152], "regardless": 35, "regex": [21, 33, 135], "regex101": 31, "regex_pattern": 31, "regic": 135, "regigiga": 135, "regirock": 135, "regist": 76, "registeel": 135, "reglot": 142, "regplot": [140, 144, 146, 153], "regress": [1, 6, 8, 139, 140, 142, 143, 146, 152, 153, 157, 161], "regular": [19, 31, 39, 44, 49, 100, 104, 124, 148, 152], "regularization_param": [10, 11, 12, 13, 14, 15, 16, 17, 18], "regularli": 93, "reindex": 128, "reindex_axi": 150, "reinforc": 161, "reinvent": 152, "reject": 41, "rel": [90, 139, 146, 150, 152], "relat": [3, 22, 51, 57, 58, 60, 62, 63, 69, 96, 138, 140, 147, 148, 151, 152, 153, 154, 155], "relationa": 124, "relationship": [3, 4, 10, 11, 12, 13, 14, 15, 16, 140, 141, 142, 143, 144, 145, 150, 154], "releas": [63, 66, 114], "relev": [124, 139, 143, 147, 151, 154, 155], "reli": [44, 60], "relicanth": 135, "reload": [7, 151], "reload_ext": 7, "relplot": 152, "rem": 69, "remain": [8, 15, 16, 17, 18, 46, 60, 87, 138, 139, 142, 143, 144, 146, 151, 152, 153], "remaind": [40, 41, 69, 72, 74, 82, 87, 96, 114], "remean": 41, "rememb": [15, 16, 17, 18, 27, 28, 39, 41, 61, 66, 67, 82, 83, 87, 95, 98, 118, 146, 147, 148, 149, 150, 152, 162], "remind": 141, "remoraid": 135, "remot": 63, "remov": [28, 31, 39, 43, 44, 46, 60, 62, 66, 72, 94, 128, 129, 130, 134, 139, 142, 145, 147, 148, 149, 152, 153], "remove_item": 66, "remove_support_word": 60, "renam": [14, 23, 117, 134, 150, 154], "rename_axi": 131, "render": [10, 12, 23, 61, 100, 104], "repeat": [39, 40, 44, 45, 46, 47, 60, 66, 70, 77, 79, 93, 95, 118, 121, 152, 154], "repeatedli": [34, 39, 40, 41], "repetit": [31, 39], "rephras": 148, "replac": [8, 16, 18, 27, 30, 31, 41, 44, 49, 82, 94, 95, 119, 124, 131, 133, 136, 139, 141, 143, 145, 147, 149, 152], "replic": 152, "report": [10, 12], "repositori": [8, 29, 44], "repr": 23, "repres": [0, 7, 15, 16, 17, 18, 43, 44, 52, 53, 54, 56, 57, 62, 63, 69, 76, 80, 83, 84, 90, 93, 94, 98, 128, 131, 133, 134, 138, 139, 141, 142, 143, 146, 148, 149, 150, 152, 154, 155], "represent": [23, 43, 44, 52, 53, 76, 93, 124, 138, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "reproduc": [24, 99, 103, 149], "request": [23, 119], "requir": [3, 10, 11, 12, 23, 25, 26, 27, 30, 34, 39, 40, 43, 49, 62, 63, 64, 66, 69, 71, 75, 81, 82, 83, 85, 90, 93, 94, 95, 98, 107, 124, 128, 130, 131, 134, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 162], "required_datatyp": 85, "requis": 147, "resampl": 152, "resarch": 44, "rescu": [27, 30], "research": [44, 48, 141, 142, 147, 148, 150, 151, 154, 161], "resembl": [152, 154], "reserv": [80, 82], "reset": 139, "reset_index": [124, 125, 135, 150], "resghap": 7, "reshap": [7, 9, 11, 12, 13, 14, 15, 16, 17, 18, 117, 120, 122, 155], "reshiram": 135, "resid": [72, 145], "residplot": 153, "residu": [10, 12, 144], "resiz": [60, 114, 117], "resolut": 114, "resolv": [126, 153], "reson": 152, "resourc": [26, 60, 63, 141, 143, 144, 149, 150, 151, 152], "respect": [44, 51, 58, 63, 69, 84, 85, 86, 94, 125, 127, 131, 132, 140, 141, 142, 143, 150, 151, 152, 153, 154], "respectivv": 150, "respons": [96, 147, 151, 161], "rest": [5, 39, 41, 44, 45, 60, 63, 66, 76, 101, 128, 131, 139, 142, 144, 146, 147, 148, 150, 151, 152, 153, 159], "restart": [27, 39, 72, 139], "restaur": [142, 146, 147, 149], "restor": 73, "restrict": [30, 93, 98, 149], "restructur": 76, "result": [2, 6, 10, 11, 12, 26, 27, 28, 29, 31, 32, 36, 37, 39, 40, 41, 43, 44, 45, 46, 57, 58, 62, 63, 66, 67, 69, 70, 72, 77, 80, 81, 86, 87, 95, 96, 119, 120, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 144, 150, 151, 152, 153, 154], "resurc": 151, "ret": 147, "retriev": [30, 44, 47, 69, 76, 84, 133], "return": [7, 10, 12, 15, 16, 17, 18, 23, 26, 27, 29, 30, 31, 37, 39, 40, 44, 48, 49, 51, 52, 53, 54, 56, 57, 60, 61, 62, 63, 64, 67, 69, 70, 71, 72, 73, 74, 76, 77, 79, 80, 81, 86, 87, 93, 94, 95, 96, 98, 118, 119, 120, 121, 124, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 146, 147, 149, 152, 153, 154], "reuniclu": 135, "reus": [23, 30, 93, 119], "reusabl": [32, 66, 72, 93, 95], "rev": 114, "rev_str": 27, "reveal": [98, 141, 153, 162], "revenu": 141, "revers": [27, 29, 44, 46, 47, 66, 117, 141], "reverse_list": 66, "reverse_list1": 66, "review": [117, 146, 147], "revis": [149, 150], "revisit": [143, 144], "revolut": 114, "reward": [31, 44], "rewrit": [36, 66], "rewritten": 49, "rfind": 44, "rfloor": 87, "rgb": [10, 72, 141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "rgb_color_gen": 72, "rgba": [141, 143], "rhydon": 135, "rhyhorn": 135, "rhyperior": 135, "rich": [148, 152, 153], "rid": [139, 145, 147, 149], "right": [34, 44, 64, 69, 76, 81, 86, 87, 94, 95, 96, 114, 115, 119, 124, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 154], "rigor": 152, "rindex": 44, "riolu": 135, "risk": [152, 153], "rjust": [44, 86], "rmdir": 72, "rmtree": 61, "roam": 72, "robert": 141, "robust": [21, 90, 121, 142, 156], "rock": 135, "rocket": [23, 144, 146, 147, 149, 150, 151, 152, 153, 154], "rocket_r": 144, "rodriguez": 138, "roger": 114, "roggenrola": 135, "rohan": 4, "roi": 152, "role": [19, 81, 95, 124, 161], "roll": [122, 133], "romeo_and_juliet": 60, "romero": [124, 125, 136], "ronald": [9, 13], "ronaldo": [39, 40, 114], "room": 3, "root": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 60, 63, 72, 74, 117, 120], "rose": 127, "roselia": 135, "roserad": 135, "rot": 141, "rotat": 141, "rotom": 135, "rotomfan": 135, "rotomfrost": 135, "rotomheat": 135, "rotommow": 135, "rotomwash": 135, "rough": 152, "roughli": [143, 154], "round": [27, 35, 44, 49, 72, 85, 87], "routin": [79, 120, 150, 152], "row": [7, 8, 11, 14, 15, 16, 17, 18, 39, 40, 49, 60, 114, 117, 118, 119, 120, 121, 124, 128, 129, 131, 133, 134, 135, 140, 142, 143, 144, 146, 150, 151, 153, 154, 155, 156], "row1": 130, "row2": 130, "row_color": 156, "row_index": 132, "row_index1": 126, "row_index2": 126, "row_labl": 124, "row_ord": [142, 151, 154], "row_posit": 124, "row_r1": 119, "row_r2": 119, "rpm": 136, "rstrip": 44, "rt": 60, "ru": 63, "rubi": 90, "rufflet": 135, "rug": [140, 145], "rule": [6, 17, 18, 44, 66, 90, 95, 120, 124, 147, 150, 154], "run": [5, 21, 22, 23, 26, 27, 28, 29, 39, 40, 41, 43, 49, 51, 52, 53, 54, 55, 56, 57, 58, 62, 63, 66, 67, 68, 69, 72, 81, 82, 88, 90, 93, 95, 101, 139, 141, 149, 151, 152, 159], "runnabl": 90, "runtim": [62, 63, 72, 95, 138], "runtimeerror": [62, 63], "runtimewarn": 120, "russia": [29, 45, 63], "russian": 60, "rvalu": 140, "s1": [51, 93, 133, 134], "s2": [51, 93, 133, 134], "s3": [133, 134], "s4": 134, "s_car": 95, "sabley": 135, "sableyemega": 135, "sad": 28, "safe": [46, 60, 93, 141, 145], "safer": [60, 61], "sai": [0, 3, 4, 6, 29, 31, 40, 69, 72, 82, 94, 95, 124, 139, 140, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 154], "said": [0, 7, 44, 95, 120, 139, 141, 142, 143], "saint": 114, "sake": [125, 138], "salam": 135, "salamencemega": 135, "salari": [64, 93, 95, 114, 128], "salarynotinrangeerror": 64, "sale": 152, "sales_data_of_bathingsoap": 115, "salesdata": 115, "salk": 39, "salmon": 150, "sam": [125, 127, 128, 129, 130, 131, 134], "same": [6, 8, 16, 18, 19, 26, 27, 29, 32, 35, 36, 39, 41, 44, 48, 63, 66, 67, 68, 69, 71, 72, 73, 75, 76, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 100, 104, 115, 117, 118, 119, 120, 121, 124, 127, 128, 129, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154], "sampl": [8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 24, 26, 60, 73, 83, 93, 95, 99, 103, 118, 121, 138, 143, 144, 146, 147, 148, 149, 152, 153, 154], "sample_1": 148, "sample_2": 148, "sample_3": 148, "sample_cmap": 141, "sample_color": 141, "sample_combo": 148, "sample_melt": [146, 154], "samsung": 69, "samurott": 135, "san": [114, 138], "sandal": [6, 16, 18], "sandil": 135, "sandshrew": 135, "sandslash": 135, "sanitize_sequ": 147, "sapp": 138, "sat": [147, 148, 149, 150], "satisfi": [29, 34, 40, 41, 49, 95, 119], "satur": [141, 148, 149, 150, 152], "save": [23, 26, 27, 72, 79, 90, 114], "savefig": [114, 115], "saw": [23, 94], "sawk": 135, "sawsbuck": 135, "scalabl": 154, "scalar": [25, 120, 121, 124, 125, 149, 150], "scale": [114, 121, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "scale_hu": 149, "scan": [90, 153], "scandic": 45, "scatter": [7, 9, 10, 11, 12, 13, 14, 126, 140, 142, 144, 145, 146, 147, 151, 153, 154, 157], "scatter3d": 10, "scatter_kw": [142, 143, 144, 146, 153], "scatterbug": 135, "scatterplot": [142, 143, 144, 146, 147, 154], "scc": 143, "scenario": [3, 68, 95, 139, 142, 143, 147, 148, 149, 152, 162], "scene": 10, "sceptil": 135, "sceptilemega": 135, "scheme": 141, "school": [22, 43, 125, 149, 150], "scienc": [0, 7, 21, 23, 44, 47, 60, 66, 72, 124, 127, 137, 140, 142, 151, 152, 154, 162], "scientif": [23, 117, 141, 149], "scikit": [39, 117, 153, 161], "scipi": [23, 120, 140, 145, 152, 153], "scizor": 135, "scizormega": 135, "scoliped": 135, "scope": [21, 28, 62, 67, 68, 72, 81, 86, 92, 147, 148, 154], "score": [0, 3, 7, 8, 10, 12, 37, 125, 148, 150], "scorebook": 150, "scorecard": [150, 154], "scott": 149, "scrafti": 135, "scraggi": 135, "scratch": [26, 93, 95], "screen": [44, 51, 79, 86, 142, 151], "script": [23, 63, 72, 87, 90], "scyther": 135, "sd": [121, 150, 152], "seaborn": [143, 144, 145, 150, 151, 152, 153, 154, 155, 156], "seadra": 135, "seagreen": 154, "seak": 135, "sealeo": 135, "search": [30, 44, 47, 75, 88, 95, 136, 151], "season": [37, 66], "second": [6, 26, 27, 29, 38, 39, 44, 45, 46, 49, 52, 53, 55, 56, 57, 58, 62, 63, 67, 69, 72, 77, 82, 86, 87, 94, 95, 98, 119, 127, 128, 131, 133, 136, 139, 147, 148, 149, 150, 152, 154], "second_last": 44, "second_lett": 44, "second_numb": 86, "secondari": 38, "secondli": [142, 152], "secret": 162, "section": [1, 6, 28, 43, 44, 49, 60, 62, 81, 86, 107, 124, 125, 126, 127, 128, 129, 132, 134, 146, 149, 151, 152, 162], "sector": [13, 14], "secur": 93, "sedan": [124, 125, 136], "see": [3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 27, 28, 29, 30, 31, 32, 36, 39, 40, 41, 43, 44, 47, 49, 58, 60, 62, 63, 66, 67, 68, 69, 71, 72, 73, 76, 79, 80, 81, 84, 85, 86, 87, 90, 93, 95, 96, 98, 99, 100, 101, 103, 104, 117, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 158, 159, 160], "seed": [24, 73, 99, 103, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "seedot": 135, "seek": 60, "seek_set": 60, "seekabl": 60, "seel": 135, "seem": [43, 75, 98, 140, 148, 149, 151, 152, 153, 154], "seen": [28, 30, 60, 82, 98, 124, 125, 133, 134, 144, 145, 146, 147, 148, 153, 154], "segment": [77, 139, 140, 142, 146, 151], "segreg": [139, 146, 149, 150, 152, 154], "seismic": 144, "seismic_r": 144, "seismitoad": 135, "select": [3, 4, 23, 44, 114, 117, 119, 125, 128, 131, 136, 141, 149, 152, 153, 154], "select_difficulti": 75, "select_threshold": 7, "self": [26, 27, 30, 49, 63, 64, 76, 93, 95, 96, 128, 131, 133, 138, 147], "self_mag": 96, "sell": 93, "semi": [23, 95], "send": 152, "sens": [3, 10, 11, 12, 29, 39, 80, 82, 120, 124, 138], "sensibl": 96, "sensit": [41, 80, 82, 87, 141, 152], "sent": 6, "sentenc": [31, 39, 44, 48, 86, 87], "sentinel": 26, "sentret": 135, "sep": [52, 53, 76, 79, 86, 121, 135], "sepal": [8, 9, 13, 114, 138, 146], "sepal_length": [9, 13, 138, 144, 146, 147, 153, 156], "sepal_width": [9, 13, 138, 143, 144, 146, 147, 153, 156], "sepallength": 114, "sepallengthcm": 114, "sepalwidthcm": 114, "separ": [6, 17, 18, 36, 39, 43, 44, 45, 46, 47, 48, 49, 60, 61, 63, 64, 66, 80, 81, 82, 84, 86, 87, 88, 93, 95, 115, 126, 132, 139, 140, 142, 144, 146, 148, 149, 152, 153, 154], "separatelli": 14, "septemb": 37, "seq": 73, "sequenc": [26, 27, 39, 41, 45, 46, 47, 60, 61, 62, 66, 70, 71, 72, 73, 79, 81, 83, 84, 85, 87, 88, 119, 121, 133, 134, 142, 143, 152, 153], "sequencemethod": 81, "sequenti": 133, "serbian": 60, "seren": 138, "seri": [27, 38, 39, 40, 56, 72, 90, 136, 142, 145, 146, 149, 151, 154, 161], "serial": 76, "serif": [150, 152], "serperior": 135, "serv": [2, 8, 9, 16, 18, 64, 76, 100, 104, 151], "server": [0, 7, 152], "servin": 135, "session": 72, "set": [0, 2, 3, 8, 9, 11, 12, 13, 14, 21, 23, 26, 30, 31, 40, 44, 45, 50, 60, 61, 66, 72, 83, 85, 87, 93, 94, 95, 114, 118, 119, 121, 124, 125, 126, 128, 129, 130, 131, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162], "set1": [142, 144, 147, 150, 154], "set1_r": 144, "set2": [144, 148, 149, 150, 153], "set2_r": 144, "set3": [144, 148, 149], "set3_r": 144, "set_": 147, "set_1": 94, "set_axis_label": [151, 154], "set_context": 139, "set_fonts": 150, "set_hatch": 114, "set_index": [124, 132, 150], "set_opt": 124, "set_printopt": 122, "set_styl": [139, 141, 143, 149, 150], "set_temperatur": 30, "set_titl": [115, 151, 154], "set_transform": 147, "set_vis": 153, "set_xlabel": [149, 150, 152], "set_xtick": 150, "set_xticklabel": [149, 151], "set_ylabel": [149, 150, 152], "set_ytick": 150, "setattr": [94, 95], "seterr": 122, "setmaxpric": 93, "setosa": [8, 9, 13, 114, 138, 146, 156], "setstat": 73, "settabl": 43, "setter": 93, "setup": [13, 14, 17, 18], "seven": [39, 72], "sever": [3, 4, 8, 9, 13, 23, 27, 31, 37, 45, 57, 58, 63, 72, 86, 119, 149], "sevip": 135, "sewaddl": 135, "sex": [142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154], "sex_tim": 149, "sh": 93, "shade": [141, 143], "shadow": 142, "shall": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "shampoo": 115, "shampoosalesdata": 115, "shanghai": 49, "shape": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 93, 117, 118, 119, 120, 121, 124, 128, 138, 142, 146, 149], "sharabl": 93, "share": [8, 16, 18, 72, 94, 98, 124, 140, 141, 147, 152, 154], "sharei": [140, 142, 151, 154], "sharex": [115, 140, 142, 149, 151, 154], "sharpedo": 135, "sharpedomega": 135, "shayminland": 135, "shayminski": 135, "she": [64, 93], "shedinja": 135, "sheet": [116, 123, 124, 137], "sheet_nam": 60, "shelgon": 135, "shell": [27, 28, 29, 58, 79, 82, 142], "shellder": 135, "shello": 135, "shelmet": 135, "shelton": 138, "shieldon": 135, "shift": [23, 36, 39, 40, 41, 81, 87, 96, 153], "shiftri": 135, "shine": [144, 146, 149], "shinx": 135, "shirt": [16, 18], "shoot": 138, "short": [37, 39, 49, 66, 71, 76, 81, 82, 132, 151], "shortcut": 21, "shorten": 63, "shorthand": 114, "shortli": [142, 149, 153], "shot": [138, 150, 152], "should": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 27, 28, 29, 31, 32, 35, 36, 39, 43, 47, 49, 60, 61, 63, 66, 72, 76, 81, 82, 86, 90, 94, 98, 101, 114, 115, 119, 120, 124, 125, 128, 129, 132, 133, 134, 140, 141, 142, 143, 147, 148, 152, 154, 159, 161], "shouldn": [147, 152], "show": [3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 40, 41, 44, 52, 53, 57, 67, 69, 70, 71, 72, 83, 90, 93, 94, 96, 100, 101, 104, 114, 124, 125, 127, 130, 131, 132, 134, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159], "show_config": 122, "showcap": 146, "showflier": [146, 148], "shown": [2, 26, 29, 30, 36, 39, 41, 44, 45, 62, 75, 90, 93, 124, 125, 126, 128, 129, 130, 131, 132, 139, 148, 150, 155], "showroom": 124, "shroomish": 135, "shuckl": 135, "shuffl": [43, 72, 73], "shuffle_list": 72, "shuppet": 135, "shutil": 61, "sibl": 6, "sibsp": [148, 150], "side": [87, 95, 124, 139, 146, 148, 154], "sig": 147, "sight": 26, "sigilyph": 135, "sigma": [7, 73], "sigma_squar": 7, "sigmoid": [4, 6], "sign": [24, 69, 74, 81, 82, 99, 103, 142, 147], "signal": [6, 152], "signatur": 98, "signific": [22, 43, 82, 124, 138, 141, 142], "significantli": [7, 10, 11, 12], "signs_of_mental_il": 138, "silcoon": 135, "silenc": 132, "silverman": 149, "simiar": 84, "similar": [3, 6, 7, 10, 12, 27, 29, 31, 32, 39, 40, 44, 46, 49, 60, 66, 72, 75, 81, 88, 94, 100, 104, 119, 124, 139, 142, 143, 145, 146, 147, 149, 151, 152, 154, 155, 156], "similari": 87, "similarli": [30, 31, 43, 44, 48, 60, 61, 67, 68, 75, 83, 84, 88, 93, 94, 95, 96, 98, 127, 134, 138, 140, 141], "simipour": 135, "simisag": 135, "simisear": 135, "simmon": 141, "simpl": [6, 17, 18, 19, 21, 23, 26, 27, 28, 29, 30, 40, 44, 47, 51, 60, 63, 64, 72, 79, 83, 87, 89, 90, 94, 98, 100, 104, 126, 128, 131, 132, 134, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 161], "simpler": [23, 70, 142, 143, 149, 153], "simplest": [35, 39, 44, 72, 118, 120, 142, 148, 150], "simpli": [26, 27, 29, 30, 40, 44, 66, 75, 81, 87, 88, 94, 95, 120, 128, 151], "simplier": [10, 11, 12, 13, 14, 15, 16, 17, 18], "simplifi": [4, 6, 29, 128], "simul": 96, "simultan": [3, 4, 69, 143, 144, 149, 152], "sin": [10, 11, 12, 13, 14, 15, 16, 72, 74, 117, 120, 139, 152, 154], "sinc": [6, 7, 9, 10, 11, 12, 27, 29, 31, 36, 39, 41, 45, 46, 47, 48, 57, 58, 60, 63, 66, 69, 72, 73, 79, 84, 93, 94, 95, 96, 98, 119, 121, 138, 144, 145, 146], "sine": [72, 74, 117, 139, 152], "sing": [86, 93], "singapor": 46, "singl": [3, 10, 12, 25, 29, 31, 39, 44, 45, 48, 58, 63, 68, 71, 83, 84, 86, 90, 93, 98, 118, 119, 124, 126, 133, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156], "singular": 120, "sinh": [43, 72, 74], "sinplot": 139, "sinusoid": [3, 10, 11, 12, 13, 14, 15, 16, 154], "sinusoid_degre": [10, 11, 12, 13, 14, 15, 16], "site": [72, 128, 131, 132, 133, 138, 141, 145, 147], "situat": [27, 38, 46, 63, 66, 69, 85, 139], "six": [29, 72, 98, 124, 125, 136, 141], "size": [3, 4, 7, 8, 10, 11, 12, 15, 16, 17, 18, 39, 40, 41, 44, 60, 75, 93, 117, 118, 120, 121, 124, 125, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156], "size_func": 153, "skarmori": 135, "sketch": [93, 94], "skew": 152, "skiddo": 135, "skill": [37, 39, 47, 60, 82, 93, 95, 114, 152, 153], "skinnier": 149, "skip": [35, 36, 39, 40, 41, 44, 63, 69], "skiploom": 135, "skitti": 135, "sklearn": 153, "skorupi": 135, "skrelp": 135, "skuntank": 135, "sky": 141, "slake": 135, "slakoth": 135, "slash": [44, 61, 149], "sleep": [21, 59, 72, 79], "slice": [48, 81, 84, 119, 124, 153], "slice_a": 119, "slidingtackl": 114, "sliggoo": 135, "slight": [19, 46, 100, 104, 154], "slightli": [58, 80, 138, 147], "slope": [49, 66, 87, 140, 150], "slot": 119, "slow": [120, 128], "slowbro": 135, "slowbromega": 135, "slower": 90, "slowk": 135, "slowli": [146, 147, 148, 152], "slowpok": 135, "slugma": 135, "slurpuff": 135, "small": [6, 10, 11, 12, 19, 41, 49, 64, 72, 77, 90, 100, 104, 142, 144, 146, 150, 152, 153, 154], "smaller": [37, 38, 66, 85, 117, 120, 127, 144, 146, 153], "smallest": [48, 74], "smallpox": 39, "smart": 82, "smart_divid": 29, "smeargl": 135, "smfyb": 72, "smim": 125, "smith": 125, "smoke": [152, 154], "smoker": [142, 145, 146, 147, 148, 149, 150, 151, 152, 154], "smoochum": 135, "smoot": 152, "smooth": [149, 152], "smoother": 142, "smoothli": 69, "sn": [138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "snake": 82, "snake_cas": 82, "sname": 131, "sneak": 138, "sneaker": [16, 18], "sneasel": 135, "snivi": 135, "snorlax": 135, "snorunt": 135, "snover": 135, "snow": 4, "snubbul": 135, "so": [0, 2, 5, 6, 13, 14, 16, 17, 18, 21, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 44, 45, 46, 48, 60, 62, 63, 66, 67, 69, 71, 72, 73, 77, 80, 81, 82, 83, 85, 87, 88, 90, 93, 94, 95, 96, 98, 101, 114, 117, 119, 120, 124, 125, 128, 130, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159], "soar": 151, "soccer": [114, 154], "social": [0, 7], "socket": 23, "sofifa": 114, "softwar": [21, 23, 37, 142], "sold": 115, "sole": [140, 141, 152], "solid": 139, "solosi": 135, "solrock": 135, "solut": [28, 30, 32, 62, 66, 68, 85, 115, 120, 136, 149, 152, 154], "solv": [49, 68, 93, 126, 141, 142, 162], "solve_quadratic_eqn": 66, "some": [0, 4, 6, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 34, 37, 39, 40, 43, 44, 45, 46, 47, 48, 49, 60, 62, 63, 66, 68, 70, 72, 76, 79, 82, 84, 86, 87, 90, 93, 95, 98, 99, 100, 102, 103, 104, 105, 119, 120, 121, 124, 125, 128, 130, 131, 132, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 152, 153, 154, 158, 160, 162], "somedai": 152, "somehow": [142, 150], "someon": [77, 152], "someth": [16, 17, 18, 26, 27, 31, 36, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 70, 72, 81, 86, 124, 138, 139, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154], "sometim": [39, 41, 44, 63, 64, 66, 69, 70, 79, 86, 93, 118, 124, 131, 132, 139, 147, 149, 153], "somewher": [41, 45, 141, 148], "song": [75, 93], "soon": [39, 62, 93, 94, 142, 144], "sort": [29, 39, 48, 72, 134, 146, 147, 149, 154], "sort_valu": [124, 135, 136, 149, 150, 154], "sorted_point": 31, "sound": [140, 150], "soup": 83, "sourc": [2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 76, 79, 81, 86, 90, 117, 119, 121, 124, 129, 132, 135, 136, 138, 161], "south": 114, "southampton": [148, 150], "sp": [132, 135], "space": [25, 31, 34, 37, 39, 41, 44, 62, 66, 69, 76, 79, 81, 86, 107, 117, 121, 124, 141, 143, 145, 149, 152, 154], "spain": 114, "spam": [3, 4, 13, 14, 15, 16], "span": [100, 104, 146, 154], "spanish": 60, "spatial": [150, 152], "speak": [26, 27, 98, 150, 154], "speaker": 139, "spearow": 135, "speci": [8, 9, 13, 93, 94, 114, 138, 141, 144, 146, 147, 153, 156], "special": [3, 11, 26, 29, 32, 80, 81, 82, 94, 98, 100, 104, 124, 138, 139, 151, 153, 154], "specialattribut": 81, "specialidentifi": 81, "specialmethod": 81, "specif": [3, 6, 10, 12, 15, 16, 17, 18, 32, 39, 40, 44, 60, 66, 72, 76, 77, 85, 86, 90, 93, 95, 100, 104, 115, 119, 124, 128, 131, 133, 134, 135, 136, 139, 140, 141, 142, 143, 147, 148, 149, 151, 152, 153, 154, 155], "specifi": [29, 30, 39, 41, 44, 58, 60, 61, 63, 71, 73, 81, 82, 83, 95, 96, 114, 117, 118, 119, 121, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 141, 143, 144, 152, 154], "spectral": 144, "spectral_r": 144, "speech": 60, "speech_barack_obama": 60, "speech_donald_trump": 60, "speech_melina_trump": 60, "speech_michelle_obama": 60, "speed": [95, 124, 135, 154], "speed_of_light": 82, "spewpa": 135, "spheal": 135, "sphere": 23, "sphinx": [19, 76, 100, 104], "spike": 152, "spinarak": 135, "spinda": 135, "spine": [139, 143, 148, 149], "spirit": 152, "spiritomb": 135, "split": [2, 8, 9, 14, 23, 29, 39, 44, 48, 86, 117, 124, 132, 139, 146, 147, 149, 153], "split_string_decor": 29, "splitlin": 60, "splitted_str": 29, "spoink": 135, "spoke": 139, "spoken": [29, 60, 66], "sport": 95, "sports_car_info": 95, "sportscar": 95, "spread": [142, 148, 149, 152, 154], "spreadsheet": [60, 124], "spring": [37, 66, 98, 144, 148, 150], "spring_r": 144, "sprintf": [44, 86], "spritze": 135, "spyder": 139, "sqaur": [15, 16, 17, 18], "sql": [45, 124, 132], "sqr": 71, "sqrt": [15, 16, 17, 18, 72, 74, 117, 120, 122], "squar": [2, 3, 15, 16, 17, 18, 27, 28, 29, 35, 39, 40, 41, 44, 45, 46, 47, 49, 71, 72, 74, 76, 93, 98, 117, 118, 120, 140, 143, 144, 153, 154, 155], "square_numb": [66, 69], "squeez": 45, "squirtl": 135, "sr": 131, "st": 47, "stabil": 151, "stack": [45, 70, 71, 120, 121, 122, 125, 138, 150, 151, 152, 154], "stackexchang": 4, "stackplot": 115, "stage": [140, 152], "stai": [125, 128, 140], "stakehold": 153, "stamp": [152, 153], "stan": 29, "stand": [19, 29, 60, 100, 104, 148], "standard": [23, 63, 64, 66, 72, 74, 76, 82, 86, 93, 117, 118, 121, 124, 127, 134, 140, 141, 142, 148, 150, 156], "standard_scal": 156, "standingtackl": 114, "stantler": 135, "star": [29, 39, 89], "staraptor": 135, "starat": 135, "staravia": 135, "starli": 135, "starmi": 135, "start": [5, 6, 19, 21, 26, 27, 29, 34, 35, 39, 40, 44, 45, 46, 58, 60, 63, 66, 73, 75, 80, 81, 82, 84, 88, 100, 101, 104, 107, 117, 119, 121, 124, 125, 126, 127, 128, 130, 131, 133, 135, 139, 140, 141, 142, 146, 147, 148, 149, 150, 152, 154, 159, 162], "start_index": 23, "startindex": 119, "startswith": 44, "staryu": 135, "stat": [121, 138, 140, 143, 145, 149, 150, 152, 153], "stat_meth": 98, "state": [24, 27, 60, 73, 88, 93, 99, 103, 114, 118, 138, 143, 147, 148], "statement": [21, 27, 42, 45, 47, 51, 58, 60, 62, 64, 71, 79, 86, 87, 90, 92, 93, 94, 119, 154], "static": [86, 98], "staticmethod": 98, "statist": [0, 3, 7, 11, 37, 43, 93, 136, 138, 140, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 157, 161, 162], "statistician": 153, "statsmodel": [144, 149], "statu": [45, 138], "std": [93, 94, 117, 121, 122, 124, 138, 143, 145, 150, 154], "std1": 94, "std2": 94, "std3": 94, "stderr": 140, "stdev": 72, "stdout": [76, 86], "steadi": 146, "steel": [135, 138], "steelix": 135, "steelixmega": 135, "step": [3, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 29, 39, 44, 45, 46, 60, 70, 73, 86, 88, 94, 117, 121, 124, 134, 153], "step3": 86, "step_siz": 39, "stephen": 153, "stepsiz": 119, "stetement": 37, "stick": [149, 150, 152], "still": [28, 44, 76, 81, 93, 94, 98, 125, 127, 128, 131, 134, 139, 140, 142, 150, 151, 152, 153], "sting": 60, "stochast": 152, "stock": [144, 149, 150], "stockprice_data": 124, "stoke": 154, "stop": [31, 39, 40, 41, 44, 45, 46, 60, 63, 66, 70, 73, 82, 117, 121, 124, 134, 152], "stopiter": [26, 27, 41, 62], "storag": 93, "store": [23, 26, 27, 28, 30, 39, 41, 43, 44, 45, 52, 56, 60, 63, 64, 68, 75, 82, 85, 86, 87, 88, 90, 93, 95, 120, 124, 125, 126, 132, 139, 144, 152], "store_and_fwd_flag": 152, "stori": 151, "stoutland": 135, "str": [9, 14, 23, 31, 41, 44, 45, 53, 60, 62, 66, 76, 84, 85, 86, 94, 95, 96, 114, 131, 135, 149, 150], "str1": 44, "str2": 44, "str3": 44, "str4": 44, "straight": [3, 62, 84, 143, 155], "straightforward": 141, "strat": 44, "strategi": 124, "strawberri": [83, 94], "stream": [60, 76], "street": [37, 39], "strength": 6, "stress": [94, 142], "strftime": [21, 53, 54, 55, 56, 58, 59], "strictli": 140, "stride_trick": 122, "string": [21, 26, 27, 28, 29, 30, 35, 41, 43, 46, 48, 50, 54, 55, 56, 57, 60, 61, 62, 63, 66, 71, 79, 81, 82, 85, 87, 93, 94, 96, 124, 125, 131, 133, 141, 142, 154], "string1": 44, "string2": 44, "stringifi": 60, "stringmethod": 81, "strip": [44, 114, 131, 138, 141, 146, 148, 151, 152, 157], "strip_data": 147, "stripplot": [138, 141, 146, 147, 148, 152], "strive": 120, "strlist": 149, "stroke": 136, "stronger": 143, "strptime": [21, 52, 59], "structur": [8, 16, 18, 19, 23, 29, 34, 39, 45, 60, 62, 75, 76, 80, 93, 100, 104, 114, 115, 124, 125, 126, 132, 133, 134, 135, 136, 138, 146, 154, 161], "struggl": 147, "stuck": 149, "stud": 93, "stud1": 125, "stud2": 125, "stud3": 125, "stud_ag": 131, "stud_mark": 131, "stud_nam": 131, "student": [37, 39, 45, 47, 86, 93, 94, 124, 125, 127, 128, 132, 133, 134, 146, 147, 150, 154], "student_count": 94, "student_data": 132, "student_df": [124, 125, 127, 128, 129, 130, 131, 133, 134], "student_dict": [124, 125, 127, 128, 129, 130, 131, 133, 134], "student_id": 150, "student_nam": 39, "studentdf": 132, "studentdict": 132, "students_enrol": 149, "studentstud": 94, "studi": [22, 25, 27, 79, 93, 121, 143, 152, 154, 155, 161, 162], "studnet": 94, "stuff": 95, "stunfisk": 135, "stunki": 135, "style": [81, 82, 86, 114, 121, 124, 125, 128, 131, 135, 136, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "sub": [28, 46, 61, 66, 70, 75, 76, 117, 150, 152, 154], "subarrai": 119, "subcategori": 150, "subclass": [63, 76, 95], "subdirectori": [61, 75], "subdivid": 152, "subgroup": 31, "subject": [140, 152], "subplot": [7, 9, 15, 16, 17, 18, 24, 99, 103, 139, 140, 149, 151, 153, 154], "subplot_kw": 154, "subplots_adjust": [15, 16, 17, 18], "subscript": [81, 84], "subsequ": [26, 45], "subset": [10, 15, 16, 17, 18, 48, 58, 124, 129, 130, 142, 153, 154, 161], "substitut": [31, 95], "substr": [31, 44], "substract": [87, 117], "subtract": [25, 43, 66, 82, 87, 96, 117, 120], "success": [27, 31, 152], "successful": [13, 14, 23], "successfulli": [30, 63, 147, 149], "sudden": 63, "sudowoodo": 135, "sugar": 29, "suggest": [51, 62, 142, 148, 154], "suicun": 135, "suit": [90, 93, 124, 141, 146, 147, 152], "suitabl": [27, 44, 142, 150], "sum": [2, 6, 13, 14, 15, 16, 17, 18, 27, 28, 32, 39, 40, 43, 45, 48, 51, 66, 69, 72, 74, 76, 77, 81, 85, 93, 96, 115, 117, 120, 121, 135, 136, 145, 148, 150], "sum1": 86, "sum_al": 63, "sum_all_num": 69, "sum_all_numb": 66, "sum_numb": 28, "sum_of_even": 66, "sum_of_five_num": 63, "sum_of_kd": 145, "sum_of_numb": 66, "sum_of_odd": 66, "sum_two_numb": 66, "summar": [28, 76, 125, 138, 147], "summari": [76, 114, 148, 149, 150, 153], "summat": [28, 120], "summer": [37, 66, 144], "summer_r": 144, "sun": [31, 52, 53, 142, 145, 147, 148, 149, 150, 154], "sundai": [52, 53], "sunflora": 135, "sunkern": 135, "sunni": 4, "sunroof": 94, "super": [64, 93, 98, 121, 128, 131, 154], "superclass": 95, "superhead": 154, "supervis": [6, 17, 18, 161, 162], "suppli": [61, 63, 131], "support": [5, 14, 23, 39, 41, 43, 45, 46, 48, 60, 66, 74, 82, 83, 84, 90, 93, 95, 101, 120, 141, 142, 145, 150, 152, 154, 159], "support_word": 60, "suppos": [27, 30, 32, 34, 41, 49, 51, 72, 75, 76, 93, 96, 98, 120, 125, 126, 130, 131, 132, 133, 134, 152], "suppport": [9, 13], "supress": 128, "suptitl": [145, 149, 154], "sure": [3, 23, 24, 31, 32, 63, 68, 99, 103, 117, 139, 142, 146, 148, 149, 150, 152], "surfac": 66, "surfaceaxi": 10, "surnam": [69, 76, 127, 134], "surround": [27, 81, 83], "surskit": 135, "survei": 141, "surviv": [148, 150], "suryansh": [3, 4], "suspect": 148, "suspend": [57, 58], "suspens": 58, "suspicion": 7, "svd": [25, 122], "sw": 63, "swablu": 135, "swadloon": 135, "swahili": 60, "swalot": 135, "swampert": 135, "swampertmega": 135, "swanna": 135, "swap": [44, 66], "swapcas": 44, "swapfil": 61, "swarm": [138, 148, 151], "swarmplot": [138, 141, 146, 147, 148], "sweden": [10, 12, 45, 63], "sweet": 41, "swellow": 135, "swim": [93, 95], "swinub": 135, "swirlix": 135, "switch": [139, 143, 152], "switzerland": [10, 12, 143], "swoobat": 135, "sx": 44, "sy": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 51, 61, 62, 63, 75, 76, 86], "syantax": 45, "sylveon": 135, "symbol": [29, 31, 32, 44, 72, 76, 80, 81, 82, 87, 96], "symmetr": 39, "symmetri": 6, "symmetric_differ": 48, "symmetric_difference_upd": 48, "synaps": 6, "sync": 117, "syntact": [29, 66, 79], "syntax": [19, 21, 27, 29, 30, 31, 44, 45, 46, 47, 48, 61, 63, 66, 71, 76, 80, 85, 86, 90, 93, 94, 95, 100, 104, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 139, 151, 152, 154], "syntaxerror": [44, 62, 69, 80, 82], "syntaxwarn": 87, "synthet": 154, "system": [6, 17, 18, 23, 26, 41, 43, 57, 60, 61, 62, 72, 81, 96, 161], "systemerror": 62, "systemexit": 62, "t": [6, 9, 10, 16, 17, 18, 24, 30, 37, 39, 40, 41, 44, 45, 46, 47, 48, 49, 51, 53, 55, 57, 60, 63, 66, 68, 72, 75, 79, 82, 83, 84, 85, 86, 90, 93, 94, 95, 96, 98, 99, 103, 117, 120, 121, 122, 124, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "t1": [46, 51, 55, 57, 58], "t10": 141, "t2": [46, 51, 55, 58], "t3": [46, 51, 55], "t4": [46, 51], "t5": 51, "t6": 51, "tab": [34, 44, 62, 81, 83, 141], "tab10": 144, "tab10_r": 144, "tab20": 144, "tab20_r": 144, "tab20b": 144, "tab20b_r": 144, "tab20c": 144, "tab20c_r": 144, "taberror": 62, "tabl": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 39, 41, 43, 52, 53, 72, 87, 96, 124, 125, 132, 146, 155], "table_nam": 124, "tableau": [141, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "tableau_20": [143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "tabul": [45, 47, 96], "tabular": [60, 124, 133, 134], "tackl": 142, "tag": [4, 23, 60], "tail": [6, 124, 135, 136, 152], "taillow": 135, "take": [3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 26, 27, 28, 29, 31, 32, 35, 39, 40, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 57, 58, 60, 61, 63, 66, 67, 68, 69, 70, 71, 72, 76, 81, 82, 86, 90, 93, 94, 95, 98, 120, 124, 125, 127, 128, 129, 130, 131, 133, 134, 138, 139, 140, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 154, 155], "taken": [60, 151, 152], "talk": [57, 58, 139, 144, 148, 154], "talli": 154, "talonflam": 135, "tamper": [44, 49, 82, 93], "tan": [72, 74], "tangela": 135, "tangent": [72, 74], "tangrowth": 135, "tanh": [72, 74], "tap": 153, "tar": 72, "target": [4, 13, 14, 15, 16, 58, 90, 132, 141], "taser": 138, "task": [6, 17, 18, 23, 29, 39, 40, 45, 47, 48, 54, 57, 58, 63, 66, 70, 72, 77, 79, 86, 87, 90, 96, 141, 151, 152, 161], "tau": 72, "tauro": 135, "taxi": 152, "tchapter": 44, "tchp": 44, "tdatatyp": 44, "te": 31, "tea": 31, "teach": [29, 31, 44, 48, 122], "teacher": [31, 44, 48, 60], "teal": 141, "team": [69, 114, 152, 154], "tech": 162, "technic": [26, 98], "techniqu": [6, 17, 18, 28, 72, 146, 147, 152, 153, 161, 162], "teddiursa": 135, "tell": [35, 36, 41, 60, 63, 79, 86, 119, 140], "temp": [66, 82], "temp_convert": 63, "temperatur": [30, 66], "tempor": 152, "temporari": [95, 149], "temporarili": 139, "ten": [28, 29, 39, 60, 66, 115], "tend": 95, "tendenc": [93, 138, 142, 146, 148, 149, 150], "tensor": 25, "tensordot": 122, "tensorflow": [6, 117, 161], "tentacool": 135, "tentacruel": 135, "tepig": 135, "terabyt": 154, "term": [3, 4, 27, 29, 70, 77, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154], "termin": [26, 27, 39, 40, 41, 62, 63, 79, 117], "terrain": 144, "terrain_r": 144, "terrakion": 135, "territori": 143, "ters": 82, "test": [11, 13, 14, 23, 31, 35, 36, 40, 41, 60, 61, 62, 63, 68, 72, 79, 87, 94, 135, 150, 152], "test1": 72, "test_1": [60, 61], "test_2": [60, 61], "test_cost": [10, 12], "test_data": [10, 12, 15, 16, 17, 18], "test_express": 40, "test_modul": 72, "test_precis": [15, 16, 17, 18], "test_predict": [10, 12], "test_predictions_t": [10, 12], "test_str": 31, "tester": 31, "testfil": [61, 63], "tex": [24, 99, 103], "text": [5, 19, 20, 31, 36, 44, 60, 66, 76, 87, 100, 101, 102, 104, 105, 124, 143, 145, 149, 150, 152, 154, 158, 159, 160, 161], "text_1": 60, "textcoord": 150, "textiobas": 60, "textiowrapp": 60, "textual": [44, 54], "textwrap": 44, "th": [0, 3, 4, 11, 31, 44], "tha": 31, "thailand": 46, "than": [3, 7, 9, 10, 15, 16, 17, 18, 21, 23, 27, 28, 31, 32, 35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 49, 51, 52, 58, 64, 70, 71, 72, 74, 82, 83, 84, 86, 87, 88, 90, 94, 95, 96, 98, 117, 119, 120, 124, 125, 127, 131, 133, 134, 139, 141, 144, 146, 148, 149, 150, 151, 152, 154], "thank": [86, 142], "that_particular_class": 150, "that_particular_class_men": 150, "thei": [6, 7, 10, 12, 17, 18, 26, 27, 29, 30, 34, 36, 38, 41, 43, 44, 45, 46, 47, 48, 60, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 76, 77, 80, 81, 82, 83, 84, 86, 87, 88, 90, 93, 94, 98, 100, 104, 118, 120, 124, 129, 133, 138, 139, 141, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154], "theirs": [12, 27, 37], "them": [7, 13, 14, 15, 16, 17, 18, 23, 26, 28, 43, 44, 45, 46, 47, 48, 58, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 74, 82, 86, 87, 88, 93, 94, 95, 96, 107, 121, 124, 126, 138, 139, 141, 143, 144, 146, 147, 149, 152, 154, 155, 162], "theme": [139, 141], "themselv": [31, 161], "theoret": 26, "theori": [27, 148, 151], "therefor": [30, 31, 44, 90, 93], "thermodynam": 30, "theta": [3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18], "theta_index": 14, "theta_t": [10, 11, 12], "thi": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 107, 114, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 162], "thick": [139, 149, 150], "thicken": 139, "thin": 149, "thing": [5, 23, 27, 29, 34, 39, 41, 44, 49, 61, 72, 81, 88, 94, 95, 98, 101, 118, 121, 124, 140, 141, 142, 148, 154, 159, 162], "think": [56, 82, 93, 94, 118, 139, 142, 148, 150, 151], "third": [23, 44, 51, 72, 75, 84, 86, 95, 114, 121, 124, 127, 142, 148, 150], "thirti": 44, "this_is_a_long_vari": 80, "thise": 147, "those": [23, 34, 58, 67, 71, 72, 73, 77, 88, 93, 94, 100, 104, 122, 139, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154], "though": [17, 18, 44, 63, 67, 76, 95, 120, 124, 125, 129, 138, 139, 140, 141, 147, 149, 150, 151, 152, 153, 154], "thought": [34, 141, 147, 148, 149, 150], "thousand": 30, "thread": [57, 58, 72], "threat": 138, "threat_level": 138, "threaten": 138, "three": [2, 6, 8, 9, 13, 14, 17, 18, 30, 31, 32, 34, 39, 40, 44, 45, 46, 49, 51, 60, 68, 69, 82, 85, 86, 88, 94, 95, 98, 124, 127, 130, 131, 132, 138, 142, 146, 147, 148, 152, 153, 154, 155], "thresh": [124, 130], "threshold": [0, 6], "thrice": 148, "throh": 135, "through": [7, 15, 16, 17, 18, 27, 39, 40, 41, 43, 49, 63, 69, 70, 79, 96, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154, 155, 161, 162], "throughout": [81, 140, 142, 146, 153], "throughput": [7, 8], "throughput_from": 7, "throughput_grid": 7, "throughput_rang": 7, "throughput_to": 7, "throw": [23, 63, 67, 90, 125, 127, 128, 131, 133], "thu": [9, 30, 39, 40, 44, 57, 63, 81, 90, 93, 98, 141, 142, 143, 148, 149, 150, 152, 153, 154, 155], "thumb": [147, 150], "thundurusincarn": 135, "thundurustherian": 135, "thur": [147, 150], "thursdai": 148, "ti": [60, 142], "tick": [139, 144, 145, 151, 153, 154], "tick_param": [15, 16, 17, 18], "ticket": 150, "ticklabel_format": 149, "tickmark": 114, "tidi": [142, 146, 147, 151], "tight": 162, "tightli": 143, "tile": 120, "till": [39, 40, 41, 60, 84, 125, 128, 131, 134, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154], "tim": 138, "timburr": 135, "time": [4, 6, 23, 26, 27, 29, 34, 38, 39, 40, 41, 43, 44, 46, 53, 67, 70, 71, 72, 80, 81, 82, 88, 90, 94, 95, 96, 98, 114, 120, 124, 128, 129, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 161, 162], "time_left_for_newyear": 55, "time_str": 57, "timedelta": 55, "timedelta64": 122, "timepoint": 152, "times3": 28, "times5": 28, "timeseri": 157, "timestamp": [21, 59], "timplay": 23, "ting": 31, "tini": 149, "tip": [31, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 154], "tire": 146, "tirtouga": 135, "titan": [138, 140, 148, 152, 154], "titl": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 37, 44, 114, 115, 142, 145, 154, 155], "tivat": 31, "tk": 23, "tkinter": 72, "tlc": 152, "tm_hour": 57, "tm_isdst": 57, "tm_mdai": 57, "tm_min": 57, "tm_mon": 57, "tm_sec": 57, "tm_wdai": 57, "tm_ydai": 57, "tm_year": 57, "tmp": 61, "to_csv": [124, 135, 136], "to_dict": 124, "to_excel": [124, 135], "to_fahreheit": 30, "to_fahrenheit": 30, "to_json": 124, "to_sql": 124, "todai": [55, 56, 140, 143, 147, 148, 149, 150, 151, 152, 153], "togekiss": 135, "togepi": 135, "toget": 135, "togeth": [6, 7, 17, 18, 27, 44, 82, 90, 96, 120, 143, 146, 148, 152], "toi": 138, "told": [41, 143], "tolist": [114, 115, 149], "tomato": [63, 66, 87], "ton": [44, 72], "too": [3, 4, 29, 62, 64, 87, 88, 147], "took": 29, "tool": [31, 76, 100, 104, 114, 115, 117, 124, 135, 136, 143, 152, 153, 154, 161, 162], "toolkit": 23, "tooth": 115, "toothpastesalesdata": 115, "top": [5, 7, 15, 16, 17, 18, 82, 101, 117, 119, 120, 124, 139, 141, 142, 143, 148, 149, 150, 152, 154, 159], "topbar": 150, "topic": [44, 69, 115, 136, 140, 141, 144, 146, 148, 149, 150, 152, 153, 154, 162], "toprow": 127, "torchic": 135, "torkoal": 135, "tornadusincarn": 135, "tornadustherian": 135, "torterra": 135, "total": [6, 9, 13, 39, 40, 43, 51, 66, 69, 71, 82, 84, 94, 96, 118, 124, 135, 142, 143, 146, 147, 148, 149, 150, 151, 152, 154], "total_bil": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "total_expens": 93, "total_incom": 93, "total_profit": 115, "total_second": 51, "total_stud": 149, "total_women_per_class": 150, "totodil": 135, "touch": [121, 143, 154, 162], "toward": 162, "town": [148, 150], "toxicroak": 135, "toyotadf": 136, "tp": 0, "tpython": 44, "trace": [120, 142, 152], "traceback": [26, 27, 28, 29, 30, 32, 40, 44, 45, 46, 47, 48, 53, 58, 60, 62, 63, 64, 67, 68, 69, 70, 72, 81, 83, 84, 85, 86, 87, 93, 94, 95, 96, 98, 119, 128, 131, 133, 147, 152], "track": [27, 148, 150, 152], "tradit": 107, "trail": [43, 44, 46], "train": [0, 2, 3, 6, 8, 107], "train_cost": [10, 12], "train_data": [10, 12, 15, 16, 17, 18], "train_precis": [15, 16, 17, 18], "traingin": 11, "trainint": [11, 12], "tranform": 44, "tranquil": 135, "transact": [4, 13, 14, 15, 16], "transax": 153, "transcript": 60, "transfer": [27, 39, 40, 41, 161], "transform": [6, 25, 90, 141, 161], "translat": [62, 90, 94, 141], "transluc": 152, "transmit": 6, "transpar": [141, 143, 147], "transpos": [25, 49, 117, 120, 125, 126, 132, 146], "transposed_row": 49, "trapinch": 135, "travel": [6, 86, 150], "travers": [6, 39], "treat": [5, 28, 31, 62, 67, 68, 93, 101, 120, 159], "tree": [9, 13, 60], "treecko": 135, "trekhleb": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "trelli": [153, 154], "trend": [142, 146, 148, 152], "treven": 135, "tri": [29, 62, 86, 93, 96, 118, 131, 140, 143, 148, 149, 152], "triangl": [39, 87, 95, 153], "triangular": 73, "trick": [117, 119, 140, 147], "tricki": 46, "trigger": 41, "trignometr": 152, "trigonometri": 43, "trip": 152, "trip_dur": 152, "tripl": [44, 66, 76, 81, 83, 84], "triu_indices_from": 153, "tropiu": 135, "trouser": [16, 18], "trubbish": 135, "truck": [6, 95], "truck_info": 95, "true": [0, 11, 15, 16, 17, 18, 26, 27, 29, 31, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 46, 48, 58, 60, 62, 64, 66, 71, 72, 74, 80, 81, 82, 83, 84, 86, 87, 94, 95, 96, 114, 115, 118, 119, 121, 124, 128, 129, 130, 131, 133, 134, 135, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "true_divid": 120, "trump": 60, "trunc": [72, 74, 122], "truncat": [43, 60, 74, 84, 85, 87, 142], "trust": [10, 12], "trustworthi": 152, "truth": 87, "truthvalu": 81, "try": [3, 7, 9, 13, 14, 16, 17, 18, 26, 28, 31, 35, 36, 37, 41, 44, 45, 46, 47, 49, 51, 60, 62, 64, 66, 67, 69, 80, 81, 82, 84, 85, 87, 88, 93, 94, 96, 98, 120, 125, 128, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "tryton": 23, "tsplot": 152, "tsv": 124, "tt": 53, "ttopic": 44, "tue": 52, "tuft": 153, "tukei": 152, "tumor": [4, 13, 14, 15, 16], "tune": [128, 152, 162], "tupl": [21, 23, 26, 27, 28, 29, 31, 32, 44, 48, 49, 50, 57, 60, 66, 69, 72, 81, 83, 85, 86, 87, 94, 95, 117, 118, 121, 125, 126, 136, 141, 143], "tuple1": 84, "tuple_1": 94, "tupleliter": 81, "tuppl": 118, "turn": [26, 43, 60, 63, 87, 90, 96, 146, 148, 149, 152, 153, 154], "turtwig": 135, "tutori": [21, 26, 29, 36, 44, 60, 82, 88, 95, 96, 117, 136, 140, 152], "tweak": [139, 141, 146, 151, 154], "twelv": 31, "twice": 95, "twilight": 141, "two": [5, 7, 9, 13, 14, 23, 26, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 45, 46, 47, 48, 49, 53, 58, 60, 62, 63, 64, 67, 69, 70, 72, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 93, 94, 95, 96, 98, 100, 101, 104, 118, 119, 120, 124, 126, 127, 128, 131, 132, 134, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 154, 159], "two_power_of_f": 49, "tworld": 79, "txt": [31, 61, 62, 63, 121, 135], "ty": 44, "tympol": 135, "tynamo": 135, "typ": 47, "type": [3, 4, 6, 9, 13, 16, 18, 23, 26, 28, 31, 32, 34, 39, 40, 41, 44, 48, 49, 51, 53, 55, 56, 62, 63, 67, 69, 70, 72, 79, 80, 81, 82, 87, 88, 90, 92, 93, 96, 98, 114, 117, 119, 120, 121, 124, 131, 132, 135, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "type1": 135, "typecast": 85, "typeerror": [32, 44, 45, 47, 48, 63, 69, 72, 84, 85, 96], "typeobject": 81, "typhlos": 135, "typic": [6, 41, 96, 120, 124, 149, 152], "typo": 62, "tyranitar": 135, "tyranitarmega": 135, "tyrantrum": 135, "tyrogu": 135, "tyrunt": 135, "tz_london": [51, 55], "tz_ny": [51, 55], "tzinfo": 51, "tzname": 53, "u": [13, 14, 26, 28, 29, 30, 31, 32, 34, 36, 37, 39, 40, 41, 43, 44, 45, 46, 47, 48, 51, 52, 53, 60, 61, 62, 63, 66, 69, 72, 77, 79, 83, 86, 88, 90, 93, 94, 95, 96, 98, 114, 115, 120, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "u00dc": 83, "u00dcnic": 83, "u00f6": 83, "u00f6d": 83, "ubgxofi7uxswaykn": 72, "uci": 8, "ui": 23, "uk": 51, "ukool": 44, "ular": 31, "ultim": 151, "umbreon": 135, "umpteen": 147, "unari": [81, 87], "unarm": 138, "unauthor": 93, "unavail": 154, "unawar": 152, "unbound": 135, "unboundlocalerror": [62, 67, 68], "uncertainti": 152, "unchang": [48, 83], "unchart": 143, "unclear": 124, "uncom": 48, "uncommon": 148, "und": 31, "undefin": 94, "under": [39, 41, 43, 51, 62, 74, 77, 84, 114, 134, 148, 149, 152, 153], "underli": [60, 74, 88, 90, 117, 124, 131, 141, 143, 146, 147, 149, 150, 151, 152, 154, 155], "undermin": 153, "underscor": [30, 72, 80, 82, 93, 94, 95, 96], "understand": [5, 10, 11, 12, 13, 14, 15, 16, 21, 22, 25, 28, 29, 31, 34, 39, 40, 41, 43, 49, 76, 77, 81, 88, 90, 93, 98, 101, 107, 114, 115, 124, 125, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 159, 161, 162], "understood": 90, "undetermin": 138, "undoubtedli": 139, "unexpect": [41, 63], "unfamiliar": 141, "unfez": 135, "unhandl": 62, "unhash": 48, "unicod": [31, 44, 62, 81, 82, 84], "unicodedecodeerror": 62, "unicodeencodeerror": 62, "unicodeerror": 62, "unicodetranslateerror": 62, "unifi": 83, "uniform": [44, 72, 73, 118, 121, 122, 152, 153], "uniform_data": 155, "unifrom": [15, 16], "unind": [35, 81], "unint": 115, "union": [39, 84], "uniqu": [39, 47, 48, 66, 72, 73, 84, 88, 98, 124, 126, 133, 152, 156], "unique_label": [13, 14, 15, 16], "unit": [17, 18, 60, 114, 115, 138, 142, 143, 149, 150, 151, 152, 154], "univari": [3, 145, 147, 148, 151, 153, 154], "univers": [6, 86, 149, 150], "university_nam": 149, "unix": [51, 56, 57], "unknowingli": 94, "unknown": [3, 9, 10, 11, 12, 15, 16, 17, 18, 37, 62, 128, 131, 133, 138, 148, 152], "unknowncol": 131, "unless": [31, 38, 66, 81, 139, 142, 152], "unlik": [27, 45, 46, 60, 94, 118, 120, 124, 127, 142, 152], "unlimit": 63, "unnam": [114, 136, 151], "unnecessari": 30, "unobserv": 151, "unord": [39, 47, 48, 84, 124], "unorderd": 48, "unown": 135, "unpack": [44, 45, 46], "unpackbit": 122, "unpacking_person_info": 63, "unpickl": 76, "unravel_index": 122, "unreferenc": [60, 94], "unruffl": 149, "unsuccess": 31, "unsuervis": 9, "unsupervis": [9, 161, 162], "unsuperwis": 9, "unsupport": [62, 85, 96], "unsur": [31, 32], "until": [3, 26, 39, 40, 41, 60, 63, 64, 69, 70, 86, 120, 133], "unusu": [28, 43], "uolp": 44, "up": [10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 30, 34, 39, 40, 41, 43, 60, 63, 66, 67, 69, 70, 77, 79, 81, 84, 85, 86, 90, 117, 124, 135, 140, 141, 142, 143, 145, 148, 150, 153, 154, 162], "upcom": [138, 140, 146, 154], "updat": [3, 4, 30, 40, 45, 48, 68, 124, 127, 128, 129, 130, 131, 133, 134, 138, 140, 144, 147, 153], "upfront": 90, "upon": [26, 41, 64, 95, 96, 98, 138, 147, 152, 153, 154, 162], "upper": [29, 31, 44, 86, 115, 131, 140, 148, 149, 152, 153], "uppercas": [29, 31, 44, 45, 72, 80, 82, 87], "uppercase_decor": 29, "uptil": 84, "upto": [147, 152, 154], "upward": 151, "urg": 144, "url": [124, 145], "ursar": 135, "us": [3, 4, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 26, 29, 32, 34, 35, 36, 37, 38, 41, 44, 47, 48, 49, 53, 54, 56, 57, 58, 60, 61, 62, 64, 66, 67, 69, 70, 73, 74, 75, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 94, 95, 96, 101, 114, 118, 119, 120, 121, 124, 129, 130, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 159, 160, 161], "usa": [29, 114], "usabl": [30, 76], "usag": [17, 18, 22, 30, 71, 90, 124, 125, 141, 142, 149, 154], "usd": [114, 149, 154], "useabl": 23, "useless": 6, "user": [21, 23, 26, 29, 34, 36, 37, 39, 40, 43, 47, 49, 61, 62, 63, 65, 66, 69, 72, 78, 81, 82, 85, 87, 96, 122, 128, 131, 136], "user_check": 37, "user_id_gen_by_us": 72, "userwarn": 138, "usual": [29, 40, 41, 49, 63, 66, 75, 82, 84, 90, 95, 118, 124, 130, 142, 148], "utc": [51, 52, 53, 56, 57], "utf": [60, 63], "util": [6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 49, 131, 150, 154], "utmost": [141, 148, 152, 153], "uxi": 135, "v": [6, 23, 25, 39, 44, 47, 60, 63, 82, 92, 120, 142, 144, 146, 147, 151, 157], "v0": 139, "v1": [96, 121, 154], "v2": [96, 121, 154], "v3": 23, "v_1": 154, "v_2": 154, "va": [140, 150], "vaccin": 39, "vagu": [6, 17, 18, 142], "vairabl": 86, "val": [30, 39, 41], "valid": [4, 10, 12, 14, 15, 16, 17, 18, 31, 44, 46, 66, 80, 81, 88, 98, 124, 141], "valu": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 25, 26, 27, 29, 30, 31, 32, 35, 36, 38, 39, 40, 43, 44, 48, 49, 51, 57, 60, 62, 63, 64, 67, 68, 69, 71, 72, 73, 74, 76, 79, 81, 83, 84, 85, 87, 88, 94, 114, 117, 118, 119, 120, 121, 124, 126, 128, 129, 131, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155], "valuabl": [16, 17, 18], "value1": 45, "value2": 45, "value3": 45, "value_count": [114, 124, 136], "value_var": 154, "valueerror": [30, 63, 85, 86, 98, 119, 125, 133, 146], "valuen": 45, "valuetoolargeerror": 64, "valuetoosmallerror": 64, "vanillish": 135, "vanillit": 135, "vanillux": 135, "vaporeon": 135, "var": [63, 69, 93, 114, 144, 153], "var_1": 80, "var_nam": [146, 147, 148], "var_scope_test": 67, "vari": [7, 10, 12, 63, 80, 93, 124, 139, 141, 146, 154], "variabel": 155, "variabl": [0, 4, 6, 7, 10, 11, 12, 13, 14, 15, 16, 21, 23, 27, 30, 31, 32, 35, 36, 37, 39, 40, 41, 43, 44, 45, 49, 51, 52, 54, 56, 62, 63, 66, 71, 72, 75, 76, 80, 83, 84, 85, 86, 87, 92, 94, 95, 98, 128, 130, 131, 133, 134, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154], "variable1": 80, "varianc": [0, 2, 93, 118, 121, 142], "variat": [0, 19, 36, 37, 39, 100, 104, 141, 143, 146, 147, 148, 149, 150, 151, 152, 154], "varieti": [23, 44, 146, 150, 153, 154], "variou": [1, 23, 29, 31, 39, 40, 43, 44, 45, 46, 47, 49, 60, 72, 76, 83, 84, 87, 88, 117, 124, 129, 132, 139, 140, 143, 144, 150, 153, 154, 155, 162], "variti": 146, "vartupl": 69, "vast": [117, 124, 127], "ve": [15, 16, 17, 18, 31, 63, 124, 138, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154], "vector": [2, 3, 10, 15, 16, 17, 18, 25, 96, 120, 121, 146, 150, 152], "veg": 63, "veget": [46, 63], "vehicl": [95, 124, 152], "vehicle_info": 95, "vendor": 152, "vendor_id": 152, "veniped": 135, "venomoth": 135, "venonat": 135, "venusaur": 135, "venusaurmega": 135, "venv": 23, "verbos": 82, "verdana": 150, "veri": [0, 3, 4, 7, 21, 23, 27, 34, 40, 44, 45, 47, 48, 49, 60, 71, 79, 81, 84, 90, 98, 107, 117, 120, 121, 124, 125, 127, 128, 130, 138, 140, 141, 142, 144, 145, 146, 148, 149, 150, 152, 153, 154], "veriabl": 67, "verifi": 95, "verify_integr": 133, "versatil": [44, 45, 153], "versicolor": [8, 9, 13, 138, 146], "version": [23, 58, 60, 71, 72, 73, 87, 120, 132, 140, 141, 145, 153], "vert": 147, "vertiac": 149, "vertic": [31, 44, 98, 120, 121, 146, 147, 148, 149, 150, 151, 154], "vespiquen": 135, "via": [30, 41, 95, 152], "vibrava": 135, "victini": 135, "victreebel": 135, "video": [23, 154, 162], "view": [62, 95, 119, 122, 127, 138, 140, 142, 150, 151, 155], "viewer": 141, "vigoroth": 135, "vijai": 94, "vileplum": 135, "violin": [141, 148, 150, 151, 152, 157], "violinplot": [146, 147, 149], "virginica": [8, 9, 13, 138, 146], "viridi": [141, 144, 150], "viridian": 141, "viridis_r": 144, "virizion": 135, "virtual": 148, "virtualenv": 23, "visibl": [67, 72, 86, 94, 142, 149, 152, 153, 154], "visibli": 140, "visit": [21, 26, 30, 31, 44, 51, 57, 58, 62, 64, 66, 67, 73, 74, 76, 81, 95, 96, 124, 142], "visual": [10, 11, 12, 44, 45, 95, 107, 114, 115, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162], "visuali": 142, "visualizaion": 154, "visualstudio": 23, "vividli": 152, "vivillon": 135, "vlag": 144, "vlag_r": 144, "vmax": [17, 18, 147, 155], "vmin": [17, 18, 147, 155], "volatil": 60, "volbeat": 135, "volcanion": 135, "volcarona": 135, "volkswagen": [124, 125, 136], "voltorb": 135, "volum": 61, "volvo": [124, 125, 136], "vonmis": 73, "vonmisesvari": 73, "vowel": [45, 46, 82, 83], "vpython": 23, "vscode": 23, "vstack": 117, "vullabi": 135, "vulpix": 135, "vv": 120, "w": [39, 40, 41, 44, 45, 46, 48, 52, 53, 60, 63, 120, 138, 141, 153, 154], "wa": [13, 14, 26, 27, 28, 29, 30, 31, 36, 39, 41, 44, 49, 60, 62, 63, 67, 72, 79, 82, 86, 95, 96, 98, 119, 120, 125, 138, 139, 140, 142, 148, 150, 152, 153, 154], "wage": 152, "wagon": [124, 125, 136], "wai": [21, 23, 26, 27, 29, 30, 34, 38, 39, 40, 43, 44, 46, 47, 48, 49, 51, 54, 55, 60, 63, 64, 69, 72, 75, 77, 81, 84, 86, 87, 88, 96, 98, 114, 118, 119, 124, 125, 126, 127, 128, 132, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 152, 153, 155, 162], "wailmer": 135, "wailord": 135, "wait": [36, 58], "walk": 151, "walrein": 135, "want": [3, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 24, 27, 29, 30, 31, 34, 36, 38, 39, 40, 41, 43, 44, 45, 60, 61, 63, 67, 72, 75, 79, 81, 82, 86, 88, 93, 94, 95, 96, 98, 99, 103, 114, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 138, 139, 140, 141, 142, 144, 147, 148, 149, 152, 153, 154, 162], "warm": [95, 141], "warn": [90, 120, 132, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "wartortl": 135, "wash": 115, "washington": 138, "wast": 162, "wat": 144, "watch": [39, 162], "watchog": 135, "water": 135, "watev": 44, "watson": 39, "wave": [139, 154], "wb": 60, "we": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 25, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 93, 94, 95, 96, 98, 107, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162], "weak": [62, 76], "weapon": [138, 152], "wear": 138, "weather": 4, "weavil": 135, "web": [21, 23, 90, 141], "web_tech": 44, "websit": [23, 82, 141], "weedl": 135, "week": [51, 52, 53, 55, 66, 147, 149, 150], "weekdai": [52, 53], "weekend": [148, 150], "weekli": [87, 114], "weep": 95, "weepinbel": 135, "weez": 135, "weibul": 73, "weibullvari": 73, "weight": [6, 66, 114, 128, 140, 144, 150, 152], "weight_of_object": 66, "weird": 124, "weirder": 29, "welcom": [29, 44, 60, 66, 72, 79, 93, 142, 147, 148, 149, 151, 152, 153, 154], "well": [3, 4, 10, 11, 12, 15, 16, 17, 18, 23, 24, 28, 34, 36, 37, 39, 40, 41, 43, 44, 55, 61, 63, 71, 75, 81, 82, 87, 88, 93, 94, 95, 96, 99, 103, 124, 126, 127, 128, 131, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154], "went": 63, "were": [8, 9, 13, 31, 32, 41, 60, 62, 63, 69, 86, 87, 95, 98, 120, 138, 146, 151], "what": [3, 4, 6, 10, 12, 13, 14, 15, 16, 17, 18, 21, 27, 28, 29, 30, 31, 32, 35, 41, 43, 49, 56, 63, 67, 73, 76, 80, 81, 87, 94, 96, 115, 136, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 161], "whatev": [79, 94, 96, 142], "whatsoev": 154, "wheel": [124, 125, 135, 136, 152], "when": [3, 4, 5, 9, 13, 14, 15, 16, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 41, 44, 46, 49, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 74, 76, 77, 80, 81, 82, 83, 84, 85, 86, 88, 90, 93, 94, 95, 96, 98, 100, 101, 104, 114, 115, 118, 120, 121, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 159], "whenev": [30, 40, 62, 76, 94, 98, 128, 131, 133, 134, 149, 150], "where": [0, 2, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 26, 28, 29, 30, 38, 40, 41, 43, 44, 45, 46, 49, 57, 60, 62, 63, 66, 67, 68, 72, 84, 85, 86, 87, 88, 90, 94, 95, 98, 119, 120, 122, 124, 126, 127, 128, 129, 131, 132, 133, 134, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "wherea": [31, 39, 43, 46, 51, 52, 67, 90, 93, 98, 100, 104, 125, 132, 133, 134, 139, 143, 152, 153], "whether": [4, 13, 14, 15, 16, 17, 18, 19, 34, 35, 36, 41, 60, 63, 64, 68, 76, 87, 95, 100, 104, 119, 124, 128, 129, 130, 131, 133, 134, 142, 143, 144, 151, 152], "whi": [147, 148], "which": [2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 15, 16, 17, 18, 22, 23, 26, 27, 28, 29, 30, 31, 32, 37, 39, 41, 43, 44, 46, 47, 48, 49, 54, 56, 58, 60, 61, 63, 64, 66, 67, 71, 72, 77, 81, 82, 83, 84, 85, 86, 88, 90, 93, 94, 95, 96, 98, 101, 114, 115, 117, 118, 119, 120, 121, 124, 125, 126, 128, 129, 131, 132, 133, 134, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 162], "whichev": [143, 149], "while": [21, 26, 27, 30, 32, 34, 42, 43, 44, 47, 48, 58, 60, 62, 64, 66, 69, 71, 72, 75, 80, 81, 85, 87, 88, 90, 93, 94, 95, 98, 119, 125, 126, 130, 132, 133, 138, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154], "whilst": 153, "whimsicott": 135, "whirliped": 135, "whiscash": 135, "whisker": [6, 10, 12, 147, 148, 150, 152], "whiskerprop": 146, "whismur": 135, "white": [6, 34, 41, 44, 138, 139, 149, 150], "whitegrid": [139, 141, 142, 143, 144, 147, 149, 150, 152, 154], "whitespac": [39, 44, 81], "who": [36, 44, 122, 138, 148, 150, 152, 162], "whoisthi": [93, 95], "whole": [23, 31, 41, 44, 58, 66, 72, 87, 124, 125, 127], "whoop": 29, "whose": [0, 7, 67, 71, 82, 94, 128, 131], "why": [27, 29, 30, 36, 43, 44, 62, 63, 76, 81, 120, 138, 146, 147, 148, 150], "wichita": 138, "wickham": 142, "wide": [23, 86, 121, 124, 131, 146, 147, 150], "wide_to_long": 146, "widen": 154, "wider": [149, 152], "widespread": 125, "width": [8, 9, 10, 13, 44, 87, 93, 115, 138, 143, 144, 146, 148, 149, 150, 152, 154], "width_ratio": 154, "wigglytuff": 135, "wiki": 145, "wikipedia": [0, 2, 3, 4, 6, 145], "wilder": 152, "win": 154, "win32": [23, 72], "window": [23, 60, 61, 79, 94, 138, 141, 152], "winerror": [60, 72], "wingul": 135, "winre_backup_partit": 61, "winreag": 61, "winter": [37, 66, 144], "winter_r": [144, 153], "wirh": 135, "wise": [115, 117, 124, 132, 135, 141, 144, 152], "wish": [30, 31, 41, 44, 66, 86, 141, 143, 148, 150, 152, 153, 154], "wistia": 144, "wistia_r": 144, "within": [2, 23, 26, 31, 40, 41, 46, 60, 61, 66, 68, 75, 84, 93, 95, 121, 124, 138, 139, 140, 144, 146, 147, 148, 149, 150, 152, 154, 156], "without": [6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 26, 29, 35, 41, 44, 46, 48, 49, 52, 53, 60, 63, 68, 69, 71, 72, 75, 87, 88, 90, 93, 94, 95, 96, 120, 121, 128, 130, 133, 135, 138, 139, 140, 141, 146, 148, 149, 150, 152, 153, 154, 161], "wobbuffet": 135, "woman": [31, 148, 150], "won": [66, 95, 121, 124, 138, 139, 142, 146, 152, 154], "wonder": [51, 66, 152], "wont": 94, "woo": 93, "woobat": 135, "wooper": 135, "wor": 44, "word": [4, 6, 39, 41, 44, 48, 49, 60, 72, 80, 82, 87, 93, 94, 95, 142, 143, 150, 153], "work": [3, 4, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 23, 24, 27, 28, 29, 31, 32, 39, 40, 41, 43, 45, 47, 49, 51, 60, 61, 63, 67, 70, 72, 77, 84, 86, 87, 90, 93, 94, 95, 96, 99, 103, 117, 119, 120, 124, 127, 131, 138, 139, 141, 142, 143, 144, 147, 149, 152, 153, 154, 162], "workabl": 162, "workbook": 152, "workflow": 154, "workload": 77, "workplac": 144, "works_for_al": 29, "world": [3, 9, 10, 12, 21, 22, 23, 36, 39, 44, 62, 66, 70, 72, 76, 82, 84, 87, 88, 92, 93, 94, 124, 139, 142, 147, 148, 152, 161], "world66": 44, "wormadampl": 135, "wormadamsandi": 135, "wormadamtrash": 135, "worri": [82, 145, 154], "worst": 0, "worth": [146, 147, 151], "would": [5, 6, 22, 23, 26, 28, 29, 30, 32, 34, 39, 41, 49, 60, 61, 62, 63, 69, 70, 72, 75, 77, 80, 81, 82, 86, 94, 95, 98, 101, 107, 138, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 162], "wouldn": [142, 150, 153], "wrangl": [137, 144, 152], "wrap": [69, 93, 131], "wrapper": [29, 131, 142, 147, 153], "wrapper_accepting_paramet": 29, "writ": 72, "writabl": 60, "write": [4, 5, 19, 21, 23, 31, 37, 39, 40, 41, 44, 46, 49, 62, 66, 67, 68, 72, 76, 77, 81, 82, 83, 84, 86, 87, 90, 93, 95, 98, 100, 101, 104, 118, 124, 139, 140, 149, 158, 159, 160], "writeabl": 122, "writelin": 60, "written": [5, 23, 35, 43, 44, 49, 60, 63, 66, 72, 76, 77, 79, 80, 82, 83, 84, 90, 100, 101, 104, 159], "wrong": [36, 37, 63, 64], "wrote": [60, 79, 81], "wspace": [15, 16, 17, 18], "wt": 146, "wtxmut": 146, "wurmpl": 135, "www": 23, "wxwidget": 23, "wynaut": 135, "x": [0, 2, 3, 4, 7, 9, 10, 11, 12, 13, 14, 15, 16, 23, 27, 28, 29, 31, 32, 35, 36, 37, 38, 39, 43, 44, 45, 46, 47, 49, 52, 53, 60, 66, 67, 68, 69, 71, 72, 74, 76, 81, 82, 83, 84, 86, 87, 94, 95, 96, 98, 114, 115, 117, 118, 119, 120, 121, 124, 125, 131, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "x1": [10, 11, 12, 13, 14, 15, 16, 67, 87, 143], "x11": 141, "x2": [10, 11, 12, 13, 14, 15, 16, 87, 114, 143], "x3": 87, "x45": 44, "x48": 44, "x58": 44, "x61": 44, "x86": 61, "x_axi": [9, 10, 13, 14, 145], "x_bin": 142, "x_ci": 142, "x_data": 146, "x_estim": 142, "x_index": [10, 13, 14], "x_jitter": 142, "x_max": [10, 13, 14, 145], "x_med": 147, "x_min": [10, 13, 14, 145], "x_partial": 142, "x_predict": [10, 11, 12], "x_sum": 40, "x_test": [10, 12, 15, 16, 17, 18], "x_train": [9, 10, 12, 13, 14, 15, 16, 17, 18], "x_valu": 10, "x_var": [144, 153], "x_y_index": 10, "xatu": 135, "xavier": 149, "xaxi": [10, 150], "xernea": 135, "xhh": 44, "xkcd": 141, "xkcd_palett": 141, "xkcd_rgb": [141, 147], "xl": 60, "xlabel": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 114, 115, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152], "xlim": [140, 154], "xlist": 149, "xlrd": 60, "xlsx": 135, "xmax": 146, "xmin": 146, "xml": 23, "xml_exampl": 60, "xor": [87, 96], "xtick": [114, 115, 150], "xticklabel": 154, "xy": [150, 153], "xycoord": [140, 153], "xytext": 150, "xyz": [39, 46, 61, 63, 86], "xyzvalu": 86, "xz": 31, "y": [3, 4, 7, 10, 11, 12, 13, 14, 27, 31, 32, 37, 38, 39, 43, 44, 45, 46, 49, 51, 52, 53, 54, 56, 57, 66, 67, 69, 71, 72, 74, 82, 83, 84, 86, 87, 94, 95, 96, 98, 114, 115, 117, 118, 120, 121, 124, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154], "y1": [87, 143], "y2": [87, 143], "y3": 87, "y_axi": [9, 10, 13, 14], "y_data": 146, "y_index": [10, 13, 14], "y_jitter": 142, "y_max": [10, 13, 14], "y_med": 147, "y_min": [10, 13, 14], "y_partial": 142, "y_predict": [10, 11, 12], "y_test": [10, 12, 15, 16, 17, 18], "y_test_predict": [15, 16, 17, 18], "y_train": [10, 12, 13, 14, 15, 16, 17, 18], "y_train_predict": [13, 14, 15, 16, 17, 18], "y_valu": 10, "y_var": [144, 153], "yamask": 135, "yanma": 135, "yanmega": 135, "yaxi": [10, 150], "ycarc5yrrupyg00": 72, "yd7efwnqkns7qxat": 72, "ye": [27, 29, 41, 47, 62, 125, 128, 131, 142, 148, 150, 153, 154], "year": [36, 39, 44, 52, 53, 54, 55, 56, 57, 63, 76, 87, 89, 93, 98, 114, 150, 154, 155], "year2021": 82, "year_2021": 82, "year_born": 63, "yellow": 152, "yesmail": 32, "yet": [23, 41, 150], "yield": [26, 27, 80, 119, 120, 139], "yj": [43, 84], "ylabel": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 114, 115, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 152], "ylgn": 144, "ylgn_r": 144, "ylgnbu": 144, "ylgnbu_r": 144, "ylim": [140, 145, 153, 154], "ylist": 149, "ylorbr": 144, "ylorbr_r": 144, "ylorrd": 144, "ylorrd_r": 144, "ymax": 146, "ymin": 146, "yo": [31, 140], "you": [2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 39, 40, 41, 43, 44, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 95, 96, 98, 99, 100, 101, 103, 104, 107, 115, 117, 118, 119, 120, 121, 124, 125, 126, 128, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 162], "your": [5, 19, 22, 24, 26, 28, 31, 34, 35, 36, 41, 44, 45, 46, 55, 60, 61, 63, 64, 66, 72, 74, 75, 79, 80, 81, 82, 86, 87, 90, 93, 94, 99, 100, 101, 103, 104, 107, 114, 117, 120, 124, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159, 162], "your_ag": 36, "yourself": [49, 51, 66, 82, 86, 93, 152], "ytho": 44, "ython": 31, "ytick": [114, 115, 145, 153], "yveltal": 135, "yy": [51, 54], "yyyi": [51, 53], "z": [6, 10, 13, 14, 32, 39, 44, 45, 46, 52, 53, 69, 80, 82, 87, 95, 118, 124, 135, 153], "z_predict": 10, "z_score": 156, "z_setosa": 13, "z_versicolor": 13, "z_virginica": 13, "za": 44, "zalando": [8, 16, 18], "zangoos": 135, "zapdo": 135, "zaxi": 10, "zealand": [10, 12], "zebstrika": 135, "zekrom": 135, "zen": [88, 98], "zero": [6, 10, 13, 14, 26, 29, 30, 35, 36, 37, 38, 40, 41, 43, 44, 49, 52, 53, 62, 63, 83, 85, 87, 94, 98, 117, 118, 120, 121, 128, 131, 135, 150, 153], "zerodivisionerror": [29, 62, 63], "zfill": 44, "zigzagoon": 135, "zip": [39, 72, 84, 118, 126, 132, 147, 150, 153, 156], "zipcod": [37, 39], "zone": [52, 53, 55], "zoroark": 135, "zorua": 135, "zubat": 135, "zurich": 128, "zweilou": 135, "zxoyh": 72, "zygarde50": 135, "\u00f6": 83, "\u00fc": 83, "\u00fcnic\u00f6d": 83, "\u03c0": 66}, "titles": ["Anomaly Detection Using Gaussian Distribution", "Concepts at glance", "K-Means Algorithm", "Linear Regression", "Logistic Regression", "Notebooks with MyST Markdown", "Neural Network", "Anomaly Detection Using Gaussian Distribution", "Datasets", "K-Means Algorithm Demo", "Multivariate Linear Regression Demo", "Non-linear Regression Demo", "Univariate Linear Regression Demo", "Logistic Regression With Linear Boundary Demo", "Logistic Regression With Non-Linear Boundary Demo", "Multivariate Logistic Regression Demo", "Multivariate Logistic Regression Demo", "Neural Network (Multilayer Perceptron) Demo", "Neural Network (Multilayer Perceptron) Demo", "Markdown Files", "Here\u2019s my sample title", "Learn Python Programming", "Mathematics for Machine Learning", "Getting Started with Python", "Content with notebooks", "Linear Algebra", "Python Iterators", "Python Python Generators", "Python Closures", "Python Decorators", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator", "Python RegEx", "Python <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code></strong>", "Python Advanced Topics", "Python Flow-Control (Decision-Making) Statements", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-else</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-elif-else</span></code> statement", "Python Nested <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Loops in Python", "Loops in Python", "Control Statements in Python", "Python Flow Control", "Python Numbers, Type Conversion and Mathematics", "Python Strings", "Python List", "Python Tuple", "Python Dictionary", "Python Sets", "Python List Comprehension", "Python Data Types", "Python datetime", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strftime()</span></code>", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strptime()</span></code>", "How to get current date and time in Python?", "Python Get Current time", "Python timestamp to datetime and vice-versa", "Python time Module", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">sleep()</span></code>", "Python Date &amp; Time Module", "Python File I/O", "Python Directory and Files Management", "Python Errors and Built-in Exceptions", "Python Exceptions Handling Using <code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">except</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">finally</span></code> statement", "Python Custom Exceptions", "Python Files", "Python Functions", "Python Global, Local and Nonlocal variables", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code> Keyword", "Function Argument and Parameter", "Python Recursion", "Python Anonymous/<strong><code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span></code></strong> Function", "Python Modules", "Python Random Module", "Python Mathematical Functions", "Python Package", "Python Docstrings", "Python User-defined Functions", "Python Functions", "Python Hello, World", "Python Keywords and Identifiers", "Python Statement, Indentation and Comments", "Python Variables and Constants", "Python Literals", "Python Data Types", "Python Type Conversion and Type Casting", "Python Input, Output and Import", "Python Operators", "Python Namespace and Scope", "Data structures and algorithms", "Differences Between Interpreter and Compiler", "&lt;no title&gt;", "Python Introduction", "Python OOPs Concepts", "Python  Classes and Objects", "Python Inheritance", "Python Operator Overloading", "Python Object Class", "self in Python, Demystified", "Content with notebooks", "Markdown Files", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "Content with notebooks", "Markdown Files", "Here\u2019s my sample title", "Introduction to HuggingFace", "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80", "Table of Contents", "Langchain modules", "LangGraphs", "LangServe", "LangSmith", "Langchain expression language", "Matplotlib", "Python Matplotlib", "Python Matplotlib", "Python NumPy", "Python NumPy Array:", "Array indexing", "Array math", "Arrays reorganizing", "Python NumPy Exercises", "Python Numpy Module", "Python Pandas", "Create Pandas DataFrame from Python Dictionary", "Create Pandas DataFrame from Python List", "Pandas DataFrame head, tail, at, iat", "Drop columns in pandas DataFrame", "Drop duplicates in pandas DataFrame", "Drop columns with NA in pandas DataFrame", "Rename columns in Pandas DataFrame", "Convert Pandas DataFrame to Python dictionary", "Set index in pandas DataFrame", "Reset index in pandas DataFrame", "Python Pandas", "Python Pandas", "Python Pandas Module", "Loading Datasets in Seaborn", "Controlling Aesthetics of Seaborn Plots", "Matplotlib vs. Seaborn Plotting Code", "Seaborn Color Palettes", "LM Plot and Reg Plot", "Scatter Plot and Joint Plot", "Additional Regression Plots", "What is Distribution Plots?", "Seaborn: Categorical Data Plots", "Seaborn: Strip Plot", "Seaborn: Box Plot", "Seaborn: Violin Plot", "Bar Plot, Point Plot and Count plot", "Factor Plot", "Time Series &amp; LV Plot", "PairGrid", "FacetGrid", "What is heat map?", "What is cluster map?", "Python Seaborn", "Here\u2019s my sample title", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "AI/ML Learning Path", "Welcome to my technical diary \ud83e\udd2f"], "titleterms": {"": [20, 31, 45, 47, 51, 52, 54, 79, 102, 105, 122, 136, 145, 158, 160], "0": [31, 122, 134], "1": [27, 29, 31, 37, 38, 39, 41, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 60, 62, 63, 66, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 108, 114, 115, 122, 128, 131, 134, 136, 145, 147, 150, 153], "10": [31, 51, 115, 122, 136], "100": 122, "100th": 122, "10x10": 122, "10x3": 122, "11": [31, 51, 122], "12": [51, 122], "13": [51, 122], "14": [51, 122], "15": [51, 122], "16": [51, 122], "16x16": 122, "17": 122, "18": 122, "19": 122, "1d": [119, 122], "2": [27, 29, 31, 37, 38, 39, 41, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 58, 60, 62, 66, 72, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 108, 114, 115, 122, 136, 145, 150], "20": 122, "2016": 122, "2017": 8, "21": 122, "22": 122, "23": 122, "24": 122, "25": 122, "26": 122, "27": 122, "28": 122, "29": 122, "2d": [119, 122], "2x2x2": 122, "3": [27, 29, 31, 37, 39, 41, 44, 45, 46, 48, 51, 52, 54, 55, 58, 60, 62, 66, 72, 76, 81, 82, 83, 84, 86, 87, 108, 114, 115, 122, 136, 145, 150], "30": 122, "31": 122, "32": 122, "33": 122, "34": 122, "35": 122, "36": 122, "37": 122, "38": 122, "39": 122, "3x3": 122, "3x4": 122, "4": [27, 31, 51, 55, 58, 60, 62, 76, 81, 84, 87, 115, 122, 136, 145], "40": 122, "41": 122, "42": 122, "43": 122, "44": 122, "45": 122, "46": 122, "47": 122, "48": 122, "49": 122, "4x4": 122, "5": [31, 51, 55, 62, 76, 84, 87, 115, 122, 136, 145], "50": 122, "51": 122, "52": 122, "53": 122, "54": 122, "55": 122, "56": 122, "57": 122, "58": 122, "59": 122, "5x2": 122, "6": [31, 51, 55, 62, 84, 87, 115, 122, 136], "60": 122, "61": 122, "62": 122, "63": 122, "64": 122, "65": 122, "66": 122, "67": 122, "68": 122, "69": 122, "6x3": 122, "6x6": 122, "7": [31, 51, 62, 115, 122, 136], "70": 122, "71": 122, "72": 122, "73": 122, "74": 122, "75": 122, "76": 122, "77": 122, "78": 122, "79": 122, "8": [31, 51, 62, 115, 122, 136], "80": 122, "81": 122, "82": 122, "83": 122, "84": 122, "85": 122, "86": 122, "87": 122, "88": 122, "89": 122, "8x8": 122, "9": [31, 51, 62, 115, 122, 136], "90": 122, "91": 122, "92": 122, "93": 122, "94": 122, "95": 122, "96": 122, "97": 122, "98": 122, "99": 122, "9_": 31, "9x9": 122, "A": [31, 122], "Be": [98, 119], "By": 31, "For": 49, "If": [45, 47], "In": [23, 45, 72, 94], "Into": [10, 12, 15, 16, 17, 18], "No": 63, "Of": 95, "One": [4, 31, 36], "The": [2, 30, 35, 36, 44, 45, 46, 47, 60, 63, 72, 125, 128, 129, 130, 131, 132, 133, 134], "These": 145, "To": [98, 124], "With": [13, 14], "_": 31, "__doc__": 76, "__init__": 98, "__new__": 98, "about": 21, "accept": 86, "access": [39, 44, 45, 46, 47, 86, 94], "accumul": 122, "across": 68, "ad": [47, 117, 131], "add": [5, 45, 47, 101, 122, 159], "addit": 144, "advanc": [21, 33, 44, 121, 161], "advantag": [46, 70, 72, 77], "aesthet": 139, "aggreg": 135, "ai": 161, "algebra": 25, "algorithm": [0, 2, 6, 9, 89], "align": 86, "all": [4, 44, 45, 47, 72, 115, 122, 128, 129, 130, 131, 136], "allow": 145, "alphabet": 31, "alphanumer": 31, "alreadi": 47, "also": [31, 118], "altern": 31, "amount": 135, "an": [5, 26, 31, 45, 47, 48, 63, 94, 101, 122, 159], "analyz": [10, 11, 12, 13, 14, 15, 16], "anatomi": [148, 149], "ani": [31, 45, 47, 66, 122], "anomali": [0, 7], "anonym": 71, "anoth": 69, "anyth": 47, "appart": 44, "appear": 45, "append": 45, "appli": 124, "applic": 23, "appropri": 52, "ar": [31, 45, 47, 48, 71, 72, 75, 77, 122, 125, 130, 145], "arang": 121, "arbitrari": [69, 122], "area": [23, 122], "arg": 32, "argmax": 118, "argmin": 118, "argument": [45, 63, 66, 69, 86], "arithmat": 87, "arithmet": 87, "around": 122, "arrai": [117, 118, 119, 120, 121, 122], "artifici": 8, "asarrai": 121, "ascend": [45, 46, 47], "asctim": 57, "assign": [82, 87], "attribut": [60, 76, 94, 118, 122, 124], "attributeerror": 62, "audienc": 162, "avail": 47, "averag": [122, 136], "avoid": 98, "awai": 122, "axi": [122, 128, 131, 145], "b": [31, 39, 40, 122], "back": 29, "background": 146, "backpropag": 6, "backslash": 31, "backward": 39, "bar": [114, 115, 150], "base": 122, "basic": [44, 69, 114, 117, 118], "batch": [3, 4], "bath": 115, "becom": 122, "befor": 31, "begin": 31, "beginn": [1, 161], "below": 122, "best": 7, "better": 48, "between": [27, 51, 55, 90, 122], "binari": 122, "bincount": 122, "bit": [48, 122], "bitwis": 87, "blank": 79, "block": [24, 99, 103, 122], "boolean": [66, 83, 87, 119, 121, 122], "bootstrap": 122, "border": 122, "both": [86, 90, 122], "bottom": 127, "boundari": [13, 14], "box": [114, 147, 148], "boxplot": 150, "brace": 31, "bracket": 31, "break": [39, 40, 41, 44, 79], "breath": 23, "broadcast": [120, 121], "build": [26, 122, 141], "built": [29, 44, 45, 46, 47, 48, 62, 72, 94], "byte": 122, "c": [39, 40, 122], "calcul": [13, 14, 15, 16, 17, 18, 23, 115], "call": 66, "can": [49, 98, 122], "car": 136, "care": [119, 122], "caret": 31, "cart": 31, "cartesian": 122, "case": 162, "cast": 85, "catch": [41, 63], "categor": [146, 147], "cauchi": 122, "cell": [5, 101, 159], "center": 122, "chain": 29, "chang": [44, 45, 46, 47, 60, 61, 82, 122, 125, 126, 134, 135], "charact": [31, 44, 83], "chart": [114, 115], "chdir": 61, "check": [23, 117, 122], "checkerboard": 122, "choic": 23, "cij": 122, "class": [4, 6, 21, 29, 30, 31, 36, 37, 39, 44, 45, 46, 47, 48, 49, 51, 56, 57, 60, 62, 63, 64, 66, 72, 76, 82, 87, 93, 94, 95, 97, 122], "classif": [4, 6], "claus": 63, "clean": [124, 136], "clear": [45, 47], "clock": 58, "close": 60, "closest": 122, "closur": [28, 29], "cluster": [9, 156], "code": [23, 24, 52, 53, 79, 90, 99, 103, 140], "collect": 83, "color": [122, 141, 155], "column": [122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136], "combin": [49, 117, 122, 124], "comma": 82, "command": [79, 122], "comment": [76, 81], "common": [44, 115, 122], "compani": 136, "compar": [122, 128], "comparis": [72, 90], "comparison": [87, 96, 117], "compil": [45, 90], "complier": 46, "compon": 79, "compos": 122, "comprehens": [45, 47, 49], "comput": [6, 122], "concaten": [44, 136], "concept": [1, 23, 93, 162], "conclus": 108, "condit": [34, 49, 124, 135, 136], "confid": 122, "configur": 122, "consecut": 122, "consid": [31, 122], "constant": [72, 82], "construct": 122, "constructor": [93, 94, 98, 124, 125, 126], "consum": 122, "contain": [31, 122], "content": [24, 99, 103, 108], "contigu": 122, "continu": [39, 40, 41], "control": [21, 34, 39, 40, 41, 42, 139], "convent": 82, "convers": [43, 83, 85, 124], "convert": [46, 122, 132], "coordin": 122, "copi": [45, 47, 117, 119, 122], "core": 162, "correspond": 122, "cost": [2, 3, 4, 6], "count": [45, 136, 150], "cours": 162, "cover": 122, "cream": 115, "creat": [5, 27, 44, 45, 46, 47, 48, 49, 52, 58, 64, 72, 94, 101, 118, 122, 124, 125, 126, 134, 141, 159], "creation": 124, "csv": [60, 124, 136], "ctime": 57, "cubehelix": 141, "current": [51, 54, 55, 61], "custom": [26, 64, 124, 126], "d": [31, 122], "dai": 51, "data": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 43, 50, 84, 89, 94, 114, 115, 121, 124, 125, 126, 135, 136, 145, 146, 155, 161], "datafram": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "dataset": [8, 15, 16, 17, 18, 136, 138, 145, 150, 153], "datatyp": [23, 48, 118], "date": [21, 51, 52, 54, 56, 59, 122], "datetim": [51, 52, 53, 55, 56], "decim": [31, 43, 72], "decis": [13, 14, 34], "declar": 82, "decor": [29, 30], "deep": 23, "default": [29, 31, 36, 37, 39, 44, 45, 46, 47, 48, 49, 56, 60, 62, 63, 66, 69, 72, 82, 87, 93], "defin": [28, 64, 66, 77, 94, 98, 125, 129, 130, 131], "definit": [2, 3, 4, 6], "degre": 122, "del": 128, "delet": [44, 45, 46, 60, 94, 128], "demo": [0, 2, 3, 4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "demystifi": 98, "densiti": 0, "depend": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "descend": [45, 46, 47], "descent": [3, 4, 10, 11, 12, 13, 14, 15, 16], "describ": [122, 135], "descript": 2, "desir": 135, "detail": 136, "detect": [0, 7], "determin": 120, "diagon": 122, "diari": 162, "dict": [45, 46, 47, 124, 125, 132], "dict2": 47, "dictionari": [39, 47, 60, 63, 84, 125, 132], "differ": [27, 35, 36, 48, 51, 54, 55, 79, 90, 122], "digit": [8, 31, 58], "dimens": 122, "dimension": 122, "dir": 72, "direct": [100, 104], "directori": 61, "disadvantag": 70, "discuss": 145, "disk": 115, "displai": [86, 115, 124], "distanc": 122, "distort": 2, "distplot": 145, "distribut": [0, 7, 122, 145], "dive": 23, "do": 28, "docstr": [66, 76, 81], "document": [121, 122], "doe": 47, "dollar": 31, "dot": 122, "down": 79, "draw": [13, 14, 122, 147, 153], "drop": [124, 128, 129, 130], "drop_dupl": 129, "dropna": 130, "dtype": 122, "duplic": [129, 130, 133], "durat": 51, "e": 122, "each": [115, 122, 136, 153], "easi": 27, "editor": 23, "effici": 27, "einsum": 122, "either": [45, 46, 47], "eleg": 45, "element": [45, 46, 47, 48, 117, 122], "elif": 37, "els": [36, 37, 39, 40, 41, 63], "empti": 48, "encapsul": 93, "end": [31, 45, 79], "engin": 162, "enjoi": 162, "enumer": [63, 122], "environ": 23, "equal": [47, 122], "equat": 3, "equidist": 122, "equival": [31, 122], "error": [45, 62, 108, 128, 131], "escap": [31, 44], "essenti": 162, "estim": 0, "etc": 45, "evalu": 0, "everi": 122, "everytim": 98, "exampl": [5, 6, 31, 38, 39, 40, 41, 51, 52, 53, 54, 55, 56, 58, 64, 68, 72, 79, 82, 87, 95, 101, 114, 132, 159], "except": [41, 62, 63, 64, 127], "exclud": 122, "exercis": [29, 31, 36, 37, 39, 44, 45, 46, 47, 48, 49, 56, 60, 62, 63, 66, 72, 82, 87, 93, 115, 122, 136], "exist": 122, "expens": 136, "expert": 161, "explicit": 85, "explicitli": 98, "export": [124, 135], "express": [27, 113, 122, 131], "extend": 45, "extens": 60, "extract": 122, "f": [31, 122], "face": 115, "facetgrid": 154, "facewash": 115, "factor": 151, "fals": [45, 47], "faq": [40, 41], "fashion": 8, "faster": 122, "featur": [3, 108], "feedforward": 6, "fifa": 114, "file": [19, 21, 60, 61, 65, 100, 104, 121, 122, 136], "fill": 122, "filter": [29, 71, 124, 135], "final": 63, "find": [7, 122, 136], "findal": 31, "fing": 7, "first": [20, 45, 102, 105, 122, 127, 128, 129, 136, 158, 160], "fit": 7, "five": 136, "fix": 122, "flatten": 121, "float": [43, 86, 122], "flow": [21, 34, 42], "flower": 8, "follow": [115, 122, 136], "format": [44, 51, 52, 53, 54, 76, 86, 135, 155], "forward": 6, "four": 122, "fraction": 43, "frame": 136, "frequent": 122, "from": [45, 46, 47, 48, 51, 52, 72, 75, 86, 121, 122, 124, 125, 126, 127, 128, 129, 130, 134, 136], "from_dict": 125, "fromkei": 47, "frozenset": 48, "function": [2, 3, 4, 6, 21, 27, 28, 29, 39, 44, 45, 46, 47, 48, 49, 66, 68, 69, 70, 71, 72, 74, 76, 77, 78, 86, 95, 96, 118, 120, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134], "g": 122, "game": 122, "gaussian": [0, 7, 122], "gener": [27, 49, 121, 122, 141], "get": [23, 29, 45, 47, 51, 54, 55, 61, 86, 107, 115, 122, 124], "getcwd": 61, "getter": 30, "give": 47, "given": [45, 46, 47, 122, 136], "glanc": 1, "global": [67, 68], "gmtime": 57, "good": 162, "gradient": [3, 4, 6, 10, 11, 12, 13, 14, 15, 16], "graph": 114, "group": [31, 147], "groupbi": [124, 135], "h": 122, "ha": 122, "hand": [35, 36], "handl": [51, 63, 108], "handwritten": 8, "happen": 98, "happi": 8, "hard": 115, "have": 28, "head": 127, "header": 132, "heat": 155, "heatmap": 155, "hello": [63, 79], "help": [76, 81], "here": [20, 44, 98, 102, 105, 158, 160], "hidden": [16, 17, 18], "hide": 94, "hierarch": [95, 126], "higesht": 136, "high": 90, "higher": [28, 29], "histogram": [114, 115], "hold": 23, "hour": 51, "how": [21, 44, 45, 48, 52, 53, 54, 66, 72, 79, 117, 122, 127], "hstack": 121, "huggingfac": 106, "hybrid": 95, "hypothesi": [3, 4], "i": [19, 31, 39, 40, 44, 45, 46, 47, 48, 60, 66, 68, 70, 74, 88, 90, 98, 100, 104, 121, 122, 124, 130, 145, 155, 156, 162], "iat": 127, "ident": [87, 122], "identifi": 80, "ignor": [44, 122], "illustr": [16, 17, 18], "iloc": 128, "imag": 122, "immut": 122, "implement": [6, 27, 122, 145], "implicit": 85, "import": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 72, 75, 86, 108, 117, 122, 124], "indent": 81, "index": [39, 45, 46, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "indexerror": 62, "indic": 122, "infinit": [26, 27], "info": 124, "inform": 23, "inherit": [93, 95], "init": [9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "initi": [6, 108], "inlin": 81, "inner": 122, "inplac": 122, "input": 86, "insert": [45, 124], "insid": [23, 39, 40, 51, 122], "inspect": [44, 124], "instal": [23, 108, 117], "instanc": [49, 93, 94], "instead": 43, "int": 122, "integ": [86, 119, 122], "interact": 141, "interleav": 122, "intermedi": 161, "intern": 98, "interpret": [90, 122], "intersect": 48, "interv": 122, "introduct": [21, 23, 32, 92, 106, 108], "iri": [8, 153], "issubclass": 95, "item": [45, 46, 47, 122], "iter": [26, 34, 39, 40, 44, 45, 46, 47, 48, 122, 124], "itm": 47, "its": 86, "j": 122, "januari": 122, "java": 90, "join": 124, "joint": 143, "jointplot": 145, "journei": 23, "json": 60, "jupyt": [0, 2, 3, 4, 6, 23], "just": 122, "justif": 86, "k": [2, 9], "kdeplot": 145, "keep": [129, 133], "kei": [47, 49, 66, 85, 90, 93, 125, 132], "keyerror": 62, "keyword": [68, 69, 80, 95], "kwarg": 32, "label": [29, 31, 36, 37, 39, 44, 45, 46, 47, 48, 49, 56, 60, 62, 63, 66, 72, 82, 87, 93, 127], "lambda": [49, 71, 131], "langchain": [108, 109, 113], "langgraph": 110, "langserv": 111, "langsmith": 112, "languag": [90, 113], "larg": [122, 135], "largest": 122, "last": [115, 122, 127, 128, 129, 136], "launch": 107, "layer": [16, 17, 18], "lead": 131, "learn": [21, 22, 29, 161, 162], "least": 130, "len": [45, 46, 47], "length": [47, 69, 122, 125], "let": [79, 82, 145], "letter": 152, "level": [29, 31, 37, 39, 45, 46, 48, 56, 60, 63, 66, 72, 82, 90, 93, 131, 134, 161], "librari": [114, 118], "life": 122, "like": [93, 122], "line": [35, 36, 39, 76, 79, 81, 82, 86, 114, 115, 122], "linear": [3, 8, 10, 11, 12, 13, 14, 25], "linspac": 121, "list": [23, 36, 37, 39, 40, 44, 45, 46, 47, 49, 52, 53, 61, 63, 66, 72, 84, 122, 125, 126, 131, 132, 133], "listdir": 61, "liter": 83, "lm": 142, "lmplot": 142, "load": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 114, 118, 121, 135, 138], "loc": 128, "local": [52, 67], "localtim": 57, "logic": [37, 62, 87], "logist": [4, 6, 9, 13, 14, 15, 16], "logspac": 121, "look": 93, "loop": [26, 27, 39, 40, 41, 49], "lv": 152, "machin": [22, 90, 161], "make": [34, 61, 122, 135, 136], "manag": [23, 61], "mani": 118, "manipul": 117, "map": [29, 71, 155, 156], "mark": 31, "markdown": [5, 19, 24, 99, 100, 101, 103, 104, 159], "mask": 121, "match": [31, 45], "math": [72, 74, 120], "mathemat": [22, 43, 74, 117, 120], "matplotlib": [21, 114, 115, 116, 140], "matric": [119, 122], "matrix": [120, 122], "max": [45, 46, 118], "maximum": [45, 46, 122], "mean": [2, 9, 122], "member": 95, "membership": [44, 45, 46, 47, 48, 87], "memori": [27, 122], "merg": 136, "metacharact": 31, "metadata": [5, 101, 124, 159], "method": [31, 44, 45, 46, 47, 48, 60, 93, 95, 118, 122], "microchip": 8, "microsecond": 51, "mileag": 136, "min": [45, 46, 118], "minimum": [46, 122], "minut": 51, "miscellan": 121, "miss": 130, "mkdir": 61, "mktime": 57, "ml": 161, "mlp": [17, 18], "mnist": 8, "model": [4, 6, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "modif": 124, "modifi": [48, 93, 94], "modul": [21, 55, 57, 59, 68, 72, 73, 74, 75, 76, 109, 123, 137], "modulenotfounderror": 62, "month": [51, 115, 122], "more": [31, 44, 117], "most": [115, 122, 136], "mul": 122, "mulitpli": 122, "multi": [4, 6, 76, 81, 127, 128, 131, 133, 134], "multilay": [17, 18], "multilevel": 95, "multilin": [86, 115], "multinomi": 122, "multipl": [63, 66, 72, 82, 86, 95, 120, 126, 128, 131, 133], "multipli": 122, "multithread": 58, "multivari": [10, 15, 16], "my": [20, 102, 105, 158, 160, 162], "myst": [5, 19, 24, 99, 100, 101, 103, 104, 159], "n": [31, 122, 127, 128], "na": 130, "name": [72, 82, 86, 88, 122, 126, 134, 136], "nameerror": 62, "namespac": 88, "nearest": 122, "necessari": [114, 122], "need": 93, "neg": [45, 46, 51], "negat": 122, "nest": [28, 38, 39, 40, 41, 49, 68, 125], "network": [6, 17, 18], "neural": [6, 17, 18], "neuron": 6, "new": [45, 47, 61, 122, 134, 162], "non": [8, 11, 14, 31, 122], "nonloc": [28, 67], "normal": [0, 3, 27, 122], "notebook": [5, 23, 24, 99, 101, 103, 159], "np": 122, "nth": 122, "null": 122, "number": [40, 43, 45, 46, 47, 49, 83, 84, 86, 118, 121, 122, 130, 133, 134], "numer": [83, 122], "numpi": [21, 117, 118, 121, 122, 123], "o": [60, 72], "object": [21, 31, 51, 53, 55, 60, 90, 93, 94, 97, 124], "observ": 147, "old": [44, 133], "onc": 122, "one": [31, 35, 39, 82, 86, 122, 130, 132], "onli": [86, 122, 125], "oop": 93, "open": 60, "oper": [8, 37, 44, 45, 46, 47, 48, 72, 87, 96, 117, 120], "opposit": 31, "option": 124, "order": [28, 29, 45, 46, 47, 95, 122], "orient": 93, "other": [45, 46, 47, 48, 134], "otherwis": [45, 46], "our": 135, "outer": [41, 122], "outlier": 7, "output": [24, 86, 93, 99, 103, 122], "over": [46, 122], "overfit": [3, 4], "overload": 96, "overrid": [93, 95], "p": 122, "p0": 122, "p1": 122, "pack": 63, "packag": [23, 75, 76, 108, 122], "pad": 122, "pair": 47, "pairgrid": 153, "pairplot": 145, "pairwis": 153, "palett": 141, "panda": [21, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "paramet": [0, 3, 8, 28, 29, 66, 69, 94, 124, 132], "parent": [93, 95], "part": [122, 150, 153], "pass": [39, 40, 41, 45, 47, 66], "path": [72, 122, 161], "pattern": [31, 39, 40, 122], "per": 136, "percentil": 122, "perceptron": [16, 17, 18], "period": 31, "pie": [114, 115], "pipelin": 27, "place": [122, 128, 129, 130, 131, 133, 134], "placehold": 117, "plot": [7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 114, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "plu": 31, "point": [49, 55, 85, 86, 93, 122, 150], "polar": 122, "polymorph": 93, "polynomi": 3, "pop": [45, 128], "posit": [60, 69, 86, 122, 127, 128, 131], "power": 122, "practic": 86, "precis": [7, 13, 14, 15, 16, 17, 18], "predict": [10, 11, 12, 15, 16, 17, 18], "prefix": [31, 131], "prepar": 14, "prepara": [9, 13], "prerequisit": 29, "price": 136, "print": [15, 16, 39, 40, 51, 79, 86, 122, 124, 136], "printabl": 47, "privat": 95, "problem": [3, 4, 86], "process": 44, "produc": [47, 122], "product": [115, 122], "profit": 115, "program": [21, 58, 63, 79, 90, 93, 122], "progress": [7, 10, 11, 12, 13, 14, 15, 16], "propag": 6, "properti": [30, 94, 115], "provid": 118, "python": [21, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 92, 93, 94, 95, 96, 97, 98, 115, 116, 117, 118, 122, 123, 124, 125, 126, 132, 133, 135, 136, 137, 157], "python3": 45, "quantifi": 31, "question": [31, 115], "quickli": [5, 101, 159], "quiz": 119, "r": [31, 122], "rais": [63, 131], "rand": 118, "randint": 118, "randn": 118, "random": [6, 72, 73, 118, 121, 122], "randomli": 122, "rang": [39, 115, 122, 128, 133, 134], "rank": 122, "raw": 44, "re": 31, "read": [60, 115, 122, 135], "real": [114, 122, 162], "recal": 7, "recommend": 122, "record": 122, "recurs": 70, "reduc": 71, "refer": [0, 2, 3, 4, 6], "reg": 142, "regardless": 122, "regex": 31, "regplot": 142, "regress": [3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 144], "regular": [3, 4, 122], "relat": [44, 87], "relationship": 153, "reload": 72, "rememb": [32, 49, 80, 85, 93], "remov": [45, 47, 48, 61, 117, 131], "renam": [61, 72, 124, 131], "reorgan": 121, "repeat": 122, "replac": 122, "replic": 44, "report": 8, "repres": [27, 51, 55, 122], "represent": [47, 122], "requir": 125, "resampl": 122, "reset": [129, 130, 134], "reset_index": 134, "reshap": 121, "residplot": 144, "resolut": 95, "resourc": [21, 116, 123, 137, 157], "result": [9, 15, 16, 122], "return": [28, 45, 46, 47, 66], "revers": [39, 40, 45, 122], "rmdir": 61, "role": [100, 104], "round": 122, "row": [122, 125, 126, 127, 130, 132, 136], "rugplot": 145, "rule": [68, 80, 82], "run": 79, "sale": 115, "same": [45, 46, 122], "sampl": [20, 100, 102, 104, 105, 122, 158, 160], "save": [60, 115, 135], "scalar": 122, "scale": 3, "scatter": [115, 143], "scatterplot": 153, "scienc": 161, "scope": 88, "script": [76, 122], "seaborn": [138, 139, 140, 141, 142, 146, 147, 148, 149, 157], "search": [31, 72], "second": [51, 122], "section": [20, 102, 105, 158, 160], "see": [82, 115], "segment": 122, "select": [7, 122, 124, 127], "self": [94, 98], "semicolon": 82, "separ": 89, "seq": [46, 47], "sequenc": [31, 44, 89], "sequenti": 141, "seri": [124, 132, 133, 152], "server": 8, "set": [4, 6, 10, 15, 16, 17, 18, 39, 47, 48, 84, 122, 127, 133], "set_axi": 131, "set_index": 133, "setdefault": 47, "setter": 30, "shallow": [45, 47], "shape": 122, "share": [68, 122], "shift": 122, "short": [35, 36], "shortcut": [35, 36], "should": [45, 46, 93, 122], "show": 115, "sign": [86, 122], "similar": [47, 90], "singl": [66, 76, 81, 95, 125, 128, 131], "sixth": 122, "size": 122, "sleep": [57, 58], "slice": [44, 45, 46, 117], "slide": 122, "small": 122, "soap": 115, "solut": [3, 4], "some": 145, "sort": [45, 46, 47, 117, 122, 124, 135, 136], "space": 131, "span": [29, 31, 36, 37, 39, 44, 45, 46, 47, 48, 49, 56, 60, 62, 63, 66, 72, 82, 87, 93], "special": [31, 83, 87, 96], "specif": [23, 45, 46, 47, 63, 127], "specifi": [31, 45, 86], "split": [10, 12, 15, 16, 17, 18, 31], "spread": 63, "squar": 31, "stack": 115, "stai": 98, "star": 31, "start": [23, 31, 134], "statement": [34, 35, 36, 37, 38, 39, 40, 41, 49, 63, 66, 72, 81], "statist": [72, 117, 121, 124, 135], "step": 90, "str": 47, "stream": 27, "strftime": [51, 52, 57], "string": [23, 31, 39, 40, 44, 45, 47, 49, 51, 52, 53, 72, 76, 83, 84, 86], "strip": 147, "strptime": [51, 53, 57], "struct_tim": 57, "structur": [89, 122, 162], "style": [44, 115], "sub": 31, "subclass": 122, "subn": 31, "subpart": 122, "subplot": 115, "subsequ": 122, "subset": [12, 117, 122], "subtract": 122, "suffix": 131, "sum": 122, "summari": [31, 44, 45, 46, 47, 48, 119, 124], "super": 95, "support": 44, "suppress": 128, "swap": 122, "swarm": [146, 147], "sy": 72, "symmetr": 48, "syntax": [35, 36, 37, 38, 39, 40, 49, 62], "t": 31, "tabl": 108, "tail": 127, "target": 162, "technic": 162, "tell": 122, "test": [8, 10, 12, 15, 16, 17, 18, 45, 46, 47, 48, 124], "text": 86, "than": [48, 122], "thei": 122, "them": 122, "thi": [45, 47, 93, 115], "thing": [32, 80], "threshold": 7, "through": [26, 44, 45, 46, 47, 48], "throw": [45, 46], "tile": 122, "time": [21, 31, 45, 51, 52, 54, 55, 56, 57, 58, 59, 119, 122, 152], "timedelata": 55, "timedelta": 51, "timestamp": [51, 52, 56], "timezon": [51, 55], "tip": [150, 153], "titan": 150, "titl": [20, 102, 105, 158, 160], "to_dict": 132, "todai": [51, 54, 122], "tomorrow": 122, "tool": 107, "toolbox": 162, "toothpast": 115, "top": [127, 147], "topic": [21, 33, 81, 161], "total": [47, 115, 122, 136], "toyota": 136, "trail": 131, "train": [4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18], "transfer": 34, "triangl": 122, "tricki": 48, "triplet": 122, "true": [45, 47, 122], "try": 63, "tupl": [39, 45, 46, 47, 63, 84], "tutori": 23, "two": [44, 51, 55, 66, 122, 133, 136], "txt": 60, "type": [21, 43, 45, 46, 47, 50, 60, 66, 83, 84, 85, 86, 94, 95, 118, 122, 125, 126], "typeerror": [46, 62], "u": [82, 145], "ubyt": 122, "under": 122, "underscor": 31, "unequ": 122, "unicod": 83, "union": 48, "uniqu": 122, "unit": 6, "univari": 12, "univers": 120, "unpack": [63, 89], "untidi": 155, "up": 72, "upcom": 23, "updat": [47, 136], "us": [0, 7, 23, 27, 28, 30, 31, 39, 40, 43, 45, 46, 51, 52, 55, 63, 68, 71, 72, 76, 82, 86, 93, 98, 108, 115, 117, 122, 125, 126, 127, 128, 131, 132, 133, 136, 162], "user": [64, 77, 86, 125], "util": 108, "v": [4, 31, 49, 76, 90, 125, 128, 140], "valid": 82, "valu": [28, 45, 46, 47, 66, 82, 86, 93, 122, 125, 127, 130, 132, 152], "valueerror": [53, 62], "variabl": [3, 28, 47, 67, 68, 69, 82, 88, 89, 93, 125, 147], "variou": 86, "vector": [6, 122], "versa": 56, "version": [117, 122], "vertic": [122, 145], "vice": 56, "view": 124, "violin": [147, 149], "violinplot": 150, "virtual": 23, "visual": [7, 145], "vstack": 121, "w": [31, 122], "wai": [31, 45], "want": 49, "warn": 122, "we": [23, 28, 46], "welcom": 162, "what": [19, 39, 40, 44, 45, 46, 47, 48, 51, 66, 68, 70, 71, 72, 74, 75, 77, 88, 90, 98, 100, 104, 121, 122, 124, 145, 155, 156], "when": [28, 40, 43, 45, 47, 119, 122], "where": [31, 125, 130], "which": [45, 122], "while": [39, 40, 41, 86, 124, 131], "whisker": 114, "whitespac": 31, "whose": 122, "why": [21, 39, 40, 46, 95, 98, 117], "wich": 122, "wide": 155, "widget": 141, "width": 86, "window": 122, "without": [30, 66, 122, 132, 134], "word": 31, "work": [26, 44, 52, 53, 135], "world": [8, 63, 79, 114, 162], "would": 47, "wrap": 72, "write": [60, 63, 79, 80, 122], "x": [8, 122], "xi": 122, "xlsx": 60, "xml": 60, "y": [8, 122], "yaml": [5, 101, 159], "year": [51, 115], "yesterdai": 122, "yj": 122, "you": [49, 93], "your": [23, 115], "z": [31, 122], "z0": 31, "za": 31, "zero": [31, 122], "zip": 63}})