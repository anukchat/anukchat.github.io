Search.setIndex({"alltitles": {"1 distplot()": [[146, "distplot"]], "1. Arithmatic Operators": [[88, "arithmatic-operators"]], "1. Bar Plot": [[151, "bar-plot"]], "1. Basic Operators for concatenation of two or more strings": [[45, "basic-operators-for-concatenation-of-two-or-more-strings"]], "1. Changing a Tuple": [[47, "changing-a-tuple"]], "1. Dictionary Membership Test": [[48, "dictionary-membership-test"]], "1. Docstrings for Python Modules": [[77, "docstrings-for-python-modules"]], "1. Easy to Implement": [[28, "easy-to-implement"]], "1. Identity operators": [[88, "identity-operators"]], "1. Implicit Type Conversion": [[86, "implicit-type-conversion"]], "1. Import the numpy package under the name np and print the numpy version and the configuration (\u2605\u2606\u2606)": [[123, "import-the-numpy-package-under-the-name-np-and-print-the-numpy-version-and-the-configuration"]], "1. Indexing": [[47, "indexing"]], "1. List Membership Test": [[46, "list-membership-test"]], "1. Numeric Literals": [[84, "numeric-literals"]], "1. Opening Files in Python": [[61, "opening-files-in-python"]], "1. Python Keywords": [[81, "python-keywords"]], "1. Python Numbers": [[85, "python-numbers"]], "1. Python Output Using print() function": [[87, "python-output-using-print-function"]], "1. Python Statement": [[82, "python-statement"]], "1. Python Syntax Errors": [[63, "python-syntax-errors"]], "1. Python Variables": [[83, "python-variables"]], "1. Python break statement": [[42, "python-break-statement"]], "1. Set Membership Test": [[49, "set-membership-test"]], "1. Single lined comment:": [[82, "single-lined-comment"]], "1. Strip Plot": [[148, "strip-plot"]], "1. Supervised Learning \ud83c\udf93": [[0, "supervised-learning"]], "1. Tuple Membership Test": [[47, "tuple-membership-test"]], "1. [] - Square brackets": [[32, "square-brackets"]], "1. break Statement in Nested Loop": [[42, "break-statement-in-nested-loop"]], "1. continue Statement in Nested Loop": [[42, "continue-statement-in-nested-loop"]], "1. match.group()": [[32, "match-group"]], "1. re.findall()": [[32, "re-findall"]], "10. () - Group": [[32, "group"]], "10. Find indices of non-zero elements from [3,7,0,0,9,0] (\u2605\u2606\u2606)": [[123, "find-indices-of-non-zero-elements-from-3-7-0-0-9-0"]], "100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (\u2605\u2605\u2605)": [[123, "compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1d-array-x-i-e-resample-the-elements-of-an-array-with-replacement-n-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means"]], "11. Create a 4x4 identity matrix (\u2605\u2606\u2606)": [[123, "create-a-4x4-identity-matrix"]], "11. \\ - Backslash": [[32, "backslash"]], "12. Create a 2x2x2 array with random values (\u2605\u2606\u2606)": [[123, "create-a-2x2x2-array-with-random-values"]], "13. Create a 9x9 array with random values and find the minimum and maximum values (\u2605\u2606\u2606)": [[123, "create-a-9x9-array-with-random-values-and-find-the-minimum-and-maximum-values"]], "15. Create a 2d array with 1 on the border and 0 inside (\u2605\u2606\u2606)": [[123, "create-a-2d-array-with-1-on-the-border-and-0-inside"]], "16. How to add a border (filled with 0\u2019s) around an existing array? (\u2605\u2606\u2606)": [[123, "how-to-add-a-border-filled-with-0s-around-an-existing-array"]], "17. What is the result of the following expression? (\u2605\u2606\u2606)": [[123, "what-is-the-result-of-the-following-expression"]], "18. Create a 6x6 matrix with values 1,2,3,4 just below the diagonal (\u2605\u2606\u2606)": [[123, "create-a-6x6-matrix-with-values-1-2-3-4-just-below-the-diagonal"]], "19. Create a 6x6 matrix and fill it with a checkerboard pattern (\u2605\u2606\u2606)": [[123, "create-a-6x6-matrix-and-fill-it-with-a-checkerboard-pattern"]], "2 jointplot()": [[146, "jointplot"]], "2. . - Period": [[32, "period"]], "2. Closing Files in Python": [[61, "closing-files-in-python"]], "2. Comparison/Relational operators": [[88, "comparison-relational-operators"]], "2. Constants": [[83, "constants"]], "2. Convert a list of numeric value into a one-dimensional NumPy array (\u2605\u2606\u2606)": [[123, "convert-a-list-of-numeric-value-into-a-one-dimensional-numpy-array"]], "2. Deleting a Tuple": [[47, "deleting-a-tuple"]], "2. Docstrings for Python Functions": [[77, "docstrings-for-python-functions"]], "2. Explicit Type Conversion": [[86, "explicit-type-conversion"]], "2. Inline comments": [[82, "inline-comments"]], "2. Iterating Through a Dictionary": [[48, "iterating-through-a-dictionary"]], "2. Iterating Through a List": [[46, "iterating-through-a-list"]], "2. Iterating Through a Set": [[49, "iterating-through-a-set"]], "2. Iterating Through a Tuple": [[47, "iterating-through-a-tuple"]], "2. Membership operators": [[88, "membership-operators"]], "2. Memory Efficient": [[28, "memory-efficient"]], "2. Negative Indexing": [[47, "negative-indexing"]], "2. Point Plot": [[151, "point-plot"]], "2. Python Identifiers": [[81, "python-identifiers"]], "2. Python Indentation": [[82, "python-indentation"]], "2. Python Input Using input() function": [[87, "python-input-using-input-function"]], "2. Python List []": [[85, "python-list"]], "2. Python Logical Errors (Exceptions)": [[63, "python-logical-errors-exceptions"]], "2. Python String Membership Operators": [[45, "python-string-membership-operators"]], "2. Python continue statement": [[42, "python-continue-statement"]], "2. String literals (unicode character strings)": [[84, "string-literals-unicode-character-strings"]], "2. Unsupervised Learning \ud83e\udde9": [[0, "unsupervised-learning"]], "2. break Statement in Outer Loop": [[42, "break-statement-in-outer-loop"]], "2. continue Statement in Outer Loop": [[42, "continue-statement-in-outer-loop"]], "2. match.start(), match.end() and match.span()": [[32, "match-start-match-end-and-match-span"]], "2. re.split()": [[32, "re-split"]], "20. Consider a (8,9,10) shape array, what is the index (x,y,z) of the 100th element? (\u2605\u2606\u2606)": [[123, "consider-a-8-9-10-shape-array-what-is-the-index-x-y-z-of-the-100th-element"]], "21. Create a checkerboard 8x8 matrix using the tile function (\u2605\u2606\u2606)": [[123, "create-a-checkerboard-8x8-matrix-using-the-tile-function"]], "22. Normalize a 6x6 random matrix (\u2605\u2606\u2606)": [[123, "normalize-a-6x6-random-matrix"]], "23. find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements. (\u2605\u2606\u2606)": [[123, "find-the-number-of-elements-of-an-array-length-of-one-array-element-in-bytes-and-total-bytes-consumed-by-the-elements"]], "24. Multiply a 6x3 matrix by a 3x4 matrix (real matrix product) (\u2605\u2606\u2606)": [[123, "multiply-a-6x3-matrix-by-a-3x4-matrix-real-matrix-product"]], "25. Given a 1D array, negate all elements which are between 3 and 8, in place. (\u2605\u2606\u2606)": [[123, "given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place"]], "26. What is the output of the following script? (\u2605\u2606\u2606)": [[123, "what-is-the-output-of-the-following-script"]], "27. Write a Python program compare two arrays using numpy (\u2605\u2606\u2606)": [[123, "write-a-python-program-compare-two-arrays-using-numpy"]], "28. What are the result of the following expressions? (\u2605\u2606\u2606)": [[123, "what-are-the-result-of-the-following-expressions"]], "29. How to round away from zero a float array ? (\u2605\u2606\u2606)": [[123, "how-to-round-away-from-zero-a-float-array"]], "3 pairplot()": [[146, "pairplot"]], "3. Boolean literals": [[84, "boolean-literals"]], "3. Count Plot": [[151, "count-plot"]], "3. Create a null vector of size 9 (\u2605\u2606\u2606)": [[123, "create-a-null-vector-of-size-9"]], "3. Deep Learning \ud83e\udde0": [[0, "deep-learning"]], "3. Docstrings for Python Classes": [[77, "docstrings-for-python-classes"]], "3. Logical/Boolean operators": [[88, "logical-boolean-operators"]], "3. Multi lined comment:": [[82, "multi-lined-comment"]], "3. Other List Operations in Python": [[46, "id1"]], "3. Python Comments": [[82, "python-comments"]], "3. Python Import function": [[87, "python-import-function"]], "3. Python NameError": [[63, "python-nameerror"]], "3. Python Relational Operators": [[45, "python-relational-operators"]], "3. Python Tuple ()": [[85, "python-tuple"]], "3. Python pass statement": [[42, "python-pass-statement"]], "3. Represent Infinite Stream": [[28, "represent-infinite-stream"]], "3. Slicing": [[47, "slicing"]], "3. Writing to Files in Python": [[61, "writing-to-files-in-python"]], "3. ^ - Caret": [[32, "caret"]], "3. match.re and match.string": [[32, "match-re-and-match-string"]], "3. re.sub()": [[32, "re-sub"]], "30. How to find common values between two arrays? (\u2605\u2606\u2606)": [[123, "how-to-find-common-values-between-two-arrays"]], "31. How to ignore all numpy warnings (not recommended)? (\u2605\u2606\u2606)": [[123, "how-to-ignore-all-numpy-warnings-not-recommended"]], "32. Is the following expressions true? (\u2605\u2606\u2606)": [[123, "is-the-following-expressions-true"]], "33. How to get the dates of yesterday, today and tomorrow? (\u2605\u2606\u2606)": [[123, "how-to-get-the-dates-of-yesterday-today-and-tomorrow"]], "34. How to get all the dates corresponding to the month of January 2016? (\u2605\u2605\u2606)": [[123, "how-to-get-all-the-dates-corresponding-to-the-month-of-january-2016"]], "35. How to compute ((A+B)*(-A/2)) in place (without copy)? (\u2605\u2605\u2606)": [[123, "how-to-compute-a-b-a-2-in-place-without-copy"]], "36. Extract the integer part of a random array of positive numbers using 4 different methods (\u2605\u2605\u2606)": [[123, "extract-the-integer-part-of-a-random-array-of-positive-numbers-using-4-different-methods"]], "37. Create a 3x3 matrix with row values ranging from 0 to 2 (\u2605\u2605\u2606)": [[123, "create-a-3x3-matrix-with-row-values-ranging-from-0-to-2"]], "38. Consider a generator function that generates 9 integers and use it to build an array (\u2605\u2606\u2606)": [[123, "consider-a-generator-function-that-generates-9-integers-and-use-it-to-build-an-array"]], "39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (\u2605\u2605\u2606)": [[123, "create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded"]], "4 rugplot()": [[146, "rugplot"]], "4. $ - Dollar": [[32, "dollar"]], "4. Bitwise operators": [[88, "bitwise-operators"]], "4. Docstrings for Python Scripts": [[77, "docstrings-for-python-scripts"]], "4. Docstrings in Python": [[82, "docstrings-in-python"]], "4. How to find the memory size of any array (\u2605\u2606\u2606)": [[123, "how-to-find-the-memory-size-of-any-array"]], "4. Pipelining Generators": [[28, "pipelining-generators"]], "4. Python IndexError": [[63, "python-indexerror"]], "4. Python Strings": [[85, "python-strings"]], "4. Reading Files in Python": [[61, "reading-files-in-python"]], "4. Reinforcement Learning \ud83c\udfae": [[0, "reinforcement-learning"]], "4. re.subn()": [[32, "re-subn"]], "40. Create a random vector of size 10 and sort it (\u2605\u2605\u2606)": [[123, "create-a-random-vector-of-size-10-and-sort-it"]], "41. How to sum a small array faster than np.sum? (\u2605\u2605\u2606)": [[123, "how-to-sum-a-small-array-faster-than-np-sum"]], "42. Consider two random array A and B, check if they are equal (\u2605\u2605\u2606)": [[123, "consider-two-random-array-a-and-b-check-if-they-are-equal"]], "43. Make an array immutable (read-only) (\u2605\u2605\u2606)": [[123, "make-an-array-immutable-read-only"]], "44. Consider a random 5x2 matrix representing cartesian coordinates, convert them to polar coordinates (\u2605\u2605\u2606)": [[123, "consider-a-random-5x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates"]], "45. Create random vector of size 5 and replace the maximum value by 0 (\u2605\u2605\u2606)": [[123, "create-random-vector-of-size-5-and-replace-the-maximum-value-by-0"]], "46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (\u2605\u2605\u2606)": [[123, "create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area"]], "47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj)) (\u2605\u2605\u2606)": [[123, "given-two-arrays-x-and-y-construct-the-cauchy-matrix-c-cij-1-xi-yj"]], "48. Print the minimum and maximum representable value for each numpy scalar type (\u2605\u2605\u2606)": [[123, "print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type"]], "49. How to print all the values of an array? (\u2605\u2605\u2606)": [[123, "how-to-print-all-the-values-of-an-array"]], "5 kdeplot()": [[146, "kdeplot"]], "5. * - Star": [[32, "star"]], "5. Assignment operators": [[88, "assignment-operators"]], "5. Docstrings for Python Packages": [[77, "docstrings-for-python-packages"]], "5. How to get the documentation of the numpy add function from the command line? (\u2605\u2606\u2606)": [[123, "how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line"]], "5. Python ModuleNotFoundError": [[63, "python-modulenotfounderror"]], "5. Python Set {}": [[85, "python-set"]], "5. re.search()": [[32, "re-search"]], "50. How to find the closest value (to a given scalar) in a vector? (\u2605\u2605\u2606)": [[123, "how-to-find-the-closest-value-to-a-given-scalar-in-a-vector"]], "51. Create a structured array representing a position (x,y) and a color (r,g,b) (\u2605\u2605\u2606)": [[123, "create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b"]], "52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (\u2605\u2605\u2606)": [[123, "consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances"]], "53. How to convert a float (32 bits) array into an integer (32 bits) in place?": [[123, "how-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"]], "54. How to read the following file? (\u2605\u2605\u2606)": [[123, "how-to-read-the-following-file"]], "55. What is the equivalent of enumerate for numpy arrays? (\u2605\u2605\u2606)": [[123, "what-is-the-equivalent-of-enumerate-for-numpy-arrays"]], "56. Generate a generic 2D Gaussian-like array (\u2605\u2605\u2606)": [[123, "generate-a-generic-2d-gaussian-like-array"]], "57. How to randomly place e elements in a 2D array? (\u2605\u2605\u2606)": [[123, "how-to-randomly-place-e-elements-in-a-2d-array"]], "58. Subtract the mean of each row of a matrix (\u2605\u2605\u2606)": [[123, "subtract-the-mean-of-each-row-of-a-matrix"]], "59. How to sort an array by the nth column? (\u2605\u2605\u2606)": [[123, "how-to-sort-an-array-by-the-nth-column"]], "6# 6# 14. Create a random vector of size 20 and find the mean value (\u2605\u2606\u2606)": [[123, "create-a-random-vector-of-size-20-and-find-the-mean-value"]], "6. + - Plus": [[32, "plus"]], "6. Create a null vector of size 12 but the sixth value which is 1 (\u2605\u2606\u2606)": [[123, "create-a-null-vector-of-size-12-but-the-sixth-value-which-is-1"]], "6. Python AttributeError": [[63, "python-attributeerror"]], "6. Python Dictionary {}": [[85, "python-dictionary"]], "6. Special operators": [[88, "special-operators"]], "60. How to tell if a given 2D array has null columns? (\u2605\u2605\u2606)": [[123, "how-to-tell-if-a-given-2d-array-has-null-columns"]], "61. Find the nearest value from a given value in an array (\u2605\u2605\u2606)": [[123, "find-the-nearest-value-from-a-given-value-in-an-array"]], "62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (\u2605\u2605\u2606)": [[123, "considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator"]], "63. Create an array class that has a name attribute (\u2605\u2605\u2606)": [[123, "create-an-array-class-that-has-a-name-attribute"]], "64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (\u2605\u2605\u2605)": [[123, "consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices"]], "65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (\u2605\u2605\u2605)": [[123, "how-to-accumulate-elements-of-a-vector-x-to-an-array-f-based-on-an-index-list-i"]], "66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (\u2605\u2605\u2606)": [[123, "considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors"]], "67. Considering a four dimensions array, how to get sum over the last two axis at once? (\u2605\u2605\u2605)": [[123, "considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once"]], "68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (\u2605\u2605\u2605)": [[123, "considering-a-one-dimensional-vector-d-how-to-compute-means-of-subsets-of-d-using-a-vector-s-of-same-size-describing-subset-indices"]], "69. How to get the diagonal of a dot product? (\u2605\u2605\u2605)": [[123, "how-to-get-the-diagonal-of-a-dot-product"]], "7. ? - Question Mark": [[32, "question-mark"]], "7. Create a vector with values ranging from 20 to 59 (\u2605\u2606\u2606)": [[123, "create-a-vector-with-values-ranging-from-20-to-59"]], "7. Python KeyError": [[63, "python-keyerror"]], "70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (\u2605\u2605\u2605)": [[123, "consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value"]], "71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (\u2605\u2605\u2605)": [[123, "consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5"]], "72. How to swap two rows of an array? (\u2605\u2605\u2605)": [[123, "how-to-swap-two-rows-of-an-array"]], "73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (\u2605\u2605\u2605)": [[123, "consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles"]], "74. Given a sorted array C that corresponds to a bincount, how to produce an array A such that np.bincount(A) == C? (\u2605\u2605\u2605)": [[123, "given-a-sorted-array-c-that-corresponds-to-a-bincount-how-to-produce-an-array-a-such-that-np-bincount-a-c"]], "75. How to compute averages using a sliding window over an array? (\u2605\u2605\u2605)": [[123, "how-to-compute-averages-using-a-sliding-window-over-an-array"]], "76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (\u2605\u2605\u2605)": [[123, "consider-a-one-dimensional-array-z-build-a-two-dimensional-array-whose-first-row-is-z-0-z-1-z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-z-3-z-2-z-1"]], "77. How to negate a boolean, or to change the sign of a float inplace? (\u2605\u2605\u2605)": [[123, "how-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace"]], "78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[123, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-p0-i-p1-i"]], "79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[123, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-set-of-points-p-how-to-compute-distance-from-each-point-j-p-j-to-each-line-i-p0-i-p1-i"]], "8. Python TypeError": [[63, "python-typeerror"]], "8. Reverse a vector (first element becomes last) (\u2605\u2606\u2606)": [[123, "reverse-a-vector-first-element-becomes-last"]], "8. {} - Braces": [[32, "braces"]], "80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (\u2605\u2605\u2605)": [[123, "consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary"]], "81. Consider an array a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], \u2026, [11,12,13,14]]? (\u2605\u2605\u2605)": [[123, "consider-an-array-a-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-b-1-2-3-4-2-3-4-5-3-4-5-6-11-12-13-14"]], "82. Compute a matrix rank (\u2605\u2605\u2605)": [[123, "compute-a-matrix-rank"]], "83. How to find the most frequent value in an array?": [[123, "how-to-find-the-most-frequent-value-in-an-array"]], "84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (\u2605\u2605\u2605)": [[123, "extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix"]], "85. Create a 2D array subclass such that a[i,j] == a[j,i] (\u2605\u2605\u2605)": [[123, "create-a-2d-array-subclass-such-that-a-i-j-a-j-i"]], "86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (\u2605\u2605\u2605)": [[123, "consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-how-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1"]], "87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (\u2605\u2605\u2605)": [[123, "consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4"]], "88. How to implement the Game of Life using numpy arrays? (\u2605\u2605\u2605)": [[123, "how-to-implement-the-game-of-life-using-numpy-arrays"]], "89. How to get the n largest values of an array (\u2605\u2605\u2605)": [[123, "how-to-get-the-n-largest-values-of-an-array"]], "9. Create a 3x3 matrix with values ranging from 12 to 20 (\u2605\u2606\u2606)": [[123, "create-a-3x3-matrix-with-values-ranging-from-12-to-20"]], "9. Python ValueError": [[63, "python-valueerror"]], "9. | - Alternation": [[32, "alternation"]], "90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (\u2605\u2605\u2605)": [[123, "given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item"]], "91. How to create a record array from a regular array? (\u2605\u2605\u2605)": [[123, "how-to-create-a-record-array-from-a-regular-array"]], "92. Consider a large vector A, compute A to the power of 3 using 3 different methods (\u2605\u2605\u2605)": [[123, "consider-a-large-vector-a-compute-a-to-the-power-of-3-using-3-different-methods"]], "93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (\u2605\u2605\u2605)": [[123, "consider-two-arrays-a-and-b-of-shape-8-3-and-2-2-how-to-find-rows-of-a-that-contain-elements-of-each-row-of-b-regardless-of-the-order-of-the-elements-in-b"]], "94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (\u2605\u2605\u2605)": [[123, "considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3"]], "95. Convert a vector of ints into a matrix binary representation (\u2605\u2605\u2605)": [[123, "convert-a-vector-of-ints-into-a-matrix-binary-representation"]], "96. Given a two dimensional array, how to extract unique rows? (\u2605\u2605\u2605)": [[123, "given-a-two-dimensional-array-how-to-extract-unique-rows"]], "97. Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (\u2605\u2605\u2605)": [[123, "considering-2-vectors-a-b-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function"]], "98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (\u2605\u2605\u2605)?": [[123, "considering-a-path-described-by-two-vectors-x-y-how-to-sample-it-using-equidistant-samples"]], "99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (\u2605\u2605\u2605)": [[123, "given-an-integer-n-and-a-2d-array-x-select-from-x-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n"]], "AI/ML Learning Path": [[162, "ai-ml-learning-path"]], "About Python Programming": [[22, "about-python-programming"]], "Accept float input from User": [[87, "accept-float-input-from-user"]], "Accept multiline input from a user": [[87, "accept-multiline-input-from-a-user"]], "Accepting User Inputs (as both integer and string)": [[87, "accepting-user-inputs-as-both-integer-and-string"]], "Accepting User Inputs (only as integer)": [[87, "accepting-user-inputs-only-as-integer"]], "Access Tuple Elements": [[47, "access-tuple-elements"]], "Access elements from a list": [[46, "access-elements-from-a-list"]], "Accessing Attributes with self Parameter": [[95, "accessing-attributes-with-self-parameter"]], "Accessing Elements from Dictionary": [[48, "accessing-elements-from-dictionary"]], "Accessing output string arguments by name": [[87, "accessing-output-string-arguments-by-name"]], "Accessing the index in for loop": [[40, "accessing-the-index-in-for-loop"]], "Add/Change List Elements": [[46, "add-change-list-elements"]], "Adding or Removing Elements": [[118, "adding-or-removing-elements"]], "Additional Regression Plots": [[145, "additional-regression-plots"]], "Advanced Level": [[162, "advanced-level"]], "Advanced string processing": [[45, "advanced-string-processing"]], "Advantage": [[73, "advantage"]], "Advantages of Recursion": [[71, "advantages-of-recursion"]], "Advantages of Tuple over List": [[47, "advantages-of-tuple-over-list"]], "Advantages of user-defined functions": [[78, "advantages-of-user-defined-functions"]], "Aggregate Statistics (Groupby)": [[136, "aggregate-statistics-groupby"]], "Algorithm Evaluation": [[1, "algorithm-evaluation"]], "An example cell": [[6, "an-example-cell"], [102, "an-example-cell"], [160, "an-example-cell"]], "Analyze Gradient Descent Progress": [[11, "analyze-gradient-descent-progress"], [12, "analyze-gradient-descent-progress"], [13, "analyze-gradient-descent-progress"], [14, "analyze-gradient-descent-progress"], [15, "analyze-gradient-descent-progress"], [16, "analyze-gradient-descent-progress"], [17, "analyze-gradient-descent-progress"]], "Anatomy of Box Plot": [[149, "anatomy-of-box-plot"]], "Anatomy of Violin Plot": [[150, "anatomy-of-violin-plot"]], "Anomaly Detection Algorithm": [[1, "anomaly-detection-algorithm"]], "Anomaly Detection Using Gaussian Distribution": [[1, "anomaly-detection-using-gaussian-distribution"], [8, "anomaly-detection-using-gaussian-distribution"]], "Apply condition": [[125, "apply-condition"]], "Argument of an Exception": [[64, "argument-of-an-exception"]], "Array": [[118, "array"]], "Array Attributes and Methods": [[119, "array-attributes-and-methods"]], "Array Manipulation": [[118, "array-manipulation"]], "Array datatypes": [[119, "array-datatypes"]], "Array indexing": [[120, "array-indexing"]], "Array math": [[121, "array-math"]], "Arrays reorganizing": [[122, "arrays-reorganizing"]], "Assigning value to constant in Python": [[83, "assigning-value-to-constant-in-python"]], "Assigning values to Variables in Python": [[83, "assigning-values-to-variables-in-python"]], "Backpropagation": [[7, "backpropagation"]], "Backpropagation Algorithm": [[7, "backpropagation-algorithm"]], "Backward Iteration using the reversed() function": [[40, "backward-iteration-using-the-reversed-function"]], "Bar Chart": [[115, "bar-chart"]], "Bar Plot, Point Plot and Count plot": [[151, "bar-plot-point-plot-and-count-plot"]], "Basic Graph": [[115, "basic-graph"]], "Basic Statistics": [[118, "basic-statistics"]], "Batch Gradient Descent": [[4, "batch-gradient-descent"], [5, "batch-gradient-descent"]], "Be careful when copying arrays!!!": [[120, "be-careful-when-copying-arrays"]], "Beginner": [[2, "beginner"]], "Beginner Level": [[162, "beginner-level"]], "Boolean Masking and Advanced Indexing": [[122, "boolean-masking-and-advanced-indexing"]], "Boolean array indexing": [[120, "boolean-array-indexing"]], "Box and Whiskers Chart": [[115, "box-and-whiskers-chart"]], "Box plot #1": [[115, "box-plot-1"]], "Box plot #2": [[115, "box-plot-2"]], "Breaking appart strings": [[45, "breaking-appart-strings"]], "Broadcasting": [[121, "broadcasting"]], "Broadcasting with array reorganizing": [[122, "broadcasting-with-array-reorganizing"]], "Building Custom Iterators": [[27, "building-custom-iterators"]], "Building color palettes:": [[142, "building-color-palettes"]], "Built-In Class Attributes": [[95, "built-in-class-attributes"]], "Built-in Functions with Set": [[49, "built-in-functions-with-set"]], "Built-in Higher Order Functions": [[30, "built-in-higher-order-functions"]], "Built-in functions to Work with Python": [[45, "built-in-functions-to-work-with-python"]], "Calculate Model Training Precision": [[14, "calculate-model-training-precision"], [15, "calculate-model-training-precision"], [16, "calculate-model-training-precision"], [17, "calculate-model-training-precision"], [18, "calculate-model-training-precision"], [19, "calculate-model-training-precision"]], "Cart ^": [[32, "cart"]], "Catching Exceptions in Python": [[64, "catching-exceptions-in-python"]], "Catching Specific Exceptions in Python": [[64, "catching-specific-exceptions-in-python"]], "Catching exceptions with continue statement": [[42, "catching-exceptions-with-continue-statement"]], "Categorical Data Background": [[147, "categorical-data-background"]], "Chaining Decorators in Python": [[30, "chaining-decorators-in-python"]], "Changing Dictionary to JSON": [[61, "changing-dictionary-to-json"]], "Changing Directory chdir() -": [[62, "changing-directory-chdir"]], "Changing JSON to Dictionary": [[61, "changing-json-to-dictionary"]], "Changing and Adding Dictionary elements": [[48, "changing-and-adding-dictionary-elements"]], "Check python datatypes": [[24, "check-python-datatypes"]], "Class": [[94, "class"]], "Class Constructor": [[94, "class-constructor"]], "Class Without Getters and Setters": [[31, "class-without-getters-and-setters"]], "Code blocks and outputs": [[25, "code-blocks-and-outputs"], [100, "code-blocks-and-outputs"], [104, "code-blocks-and-outputs"]], "Combining Arrays": [[118, "combining-arrays"]], "Common Python String Methods": [[45, "common-python-string-methods"]], "Compare DataFrame drop() vs. pop() vs. del": [[129, "compare-dataframe-drop-vs-pop-vs-del"]], "Comparision operators in Python": [[73, "comparision-operators-in-python"]], "Comparison": [[118, "comparison"]], "Concepts": [[163, "concepts"]], "Concepts at glance": [[2, "concepts-at-glance"]], "Conclusion": [[109, "conclusion"]], "Conditional Changes": [[136, "conditional-changes"]], "Conditional statements": [[35, "conditional-statements"]], "Conditionals in List Comprehension": [[50, "conditionals-in-list-comprehension"]], "Constants  -": [[73, "constants"]], "Constructors in Python": [[95, "constructors-in-python"]], "Content with notebooks": [[25, "content-with-notebooks"], [100, "content-with-notebooks"], [104, "content-with-notebooks"]], "Control Flow Statements": [[35, "control-flow-statements"]], "Control Statements in Python": [[42, "control-statements-in-python"]], "Control Statements in Python FAQs": [[42, "control-statements-in-python-faqs"]], "Controlling Aesthetics of Seaborn Plots": [[140, "controlling-aesthetics-of-seaborn-plots"]], "Convert Pandas DataFrame to Python dictionary": [[133, "convert-pandas-dataframe-to-python-dictionary"]], "Copying/Sorting": [[118, "copying-sorting"]], "Core engineering": [[163, "core-engineering"]], "Cost Function": [[4, "cost-function"], [5, "cost-function"], [7, "cost-function"]], "Cost Function (Distortion)": [[3, "cost-function-distortion"]], "Course Structure": [[163, "course-structure"]], "Create DataFrame from Hierarchical lists as columns": [[127, "create-dataframe-from-hierarchical-lists-as-columns"]], "Create DataFrame from dict using constructor": [[126, "create-dataframe-from-dict-using-constructor"]], "Create DataFrame from hierarchical lists as rows": [[127, "create-dataframe-from-hierarchical-lists-as-rows"]], "Create DataFrame from list by changing data type": [[127, "create-dataframe-from-list-by-changing-data-type"]], "Create DataFrame from list of dict": [[126, "create-dataframe-from-list-of-dict"]], "Create DataFrame from list using constructor": [[127, "create-dataframe-from-list-using-constructor"]], "Create DataFrame from list with a customized column name": [[127, "create-dataframe-from-list-with-a-customized-column-name"]], "Create DataFrame from list with a customized index": [[127, "create-dataframe-from-list-with-a-customized-index"]], "Create DataFrame from multiple lists": [[127, "create-dataframe-from-multiple-lists"]], "Create Generators in Python": [[28, "create-generators-in-python"]], "Create Pandas DataFrame from Python Dictionary": [[126, "create-pandas-dataframe-from-python-dictionary"]], "Create Pandas DataFrame from Python List": [[127, "create-pandas-dataframe-from-python-list"]], "Create Test Objects": [[125, "create-test-objects"]], "Create a NumPy Array": [[119, "create-a-numpy-array"]], "Create a notebook with MyST Markdown": [[6, "create-a-notebook-with-myst-markdown"], [102, "create-a-notebook-with-myst-markdown"], [160, "create-a-notebook-with-myst-markdown"]], "Creating Custom Exceptions": [[65, "creating-custom-exceptions"]], "Creating Instance Objects": [[95, "creating-instance-objects"]], "Creating Python Dictionary": [[48, "creating-python-dictionary"]], "Creating Python List": [[46, "creating-python-list"]], "Creating Python Sets": [[49, "creating-python-sets"]], "Creating Python Tuple": [[47, "creating-python-tuple"]], "Creating a Lambda Function": [[50, "creating-a-lambda-function"]], "Creating a module in Python": [[73, "creating-a-module-in-python"]], "Creating an Object in Python": [[95, "creating-an-object-in-python"]], "Creating an empty set is a bit tricky.": [[49, "creating-an-empty-set-is-a-bit-tricky"]], "Customizing Exception Classes": [[65, "customizing-exception-classes"]], "Data": [[146, "data"]], "Data Cleaning": [[125, "data-cleaning"]], "Data Hiding": [[95, "data-hiding"]], "Data structures and algorithms": [[90, "data-structures-and-algorithms"]], "DataFrame Attributes": [[125, "dataframe-attributes"]], "DataFrame GroupBy": [[125, "dataframe-groupby"]], "DataFrame Iteration": [[125, "dataframe-iteration"]], "DataFrame Join": [[125, "dataframe-join"]], "DataFrame Options": [[125, "dataframe-options"]], "DataFrame Sorting": [[125, "dataframe-sorting"]], "DataFrame constructor": [[125, "dataframe-constructor"]], "DataFrame constructor vs from_dict()": [[126, "dataframe-constructor-vs-from-dict"]], "DataFrame conversion": [[125, "dataframe-conversion"]], "DataFrame creation": [[125, "dataframe-creation"]], "DataFrame filter columns": [[125, "dataframe-filter-columns"]], "DataFrame from dict by changing the column data type": [[126, "dataframe-from-dict-by-changing-the-column-data-type"]], "DataFrame from dict nested dict": [[126, "dataframe-from-dict-nested-dict"]], "DataFrame from dict where values are variable-length lists": [[126, "dataframe-from-dict-where-values-are-variable-length-lists"]], "DataFrame from dict with a single value": [[126, "dataframe-from-dict-with-a-single-value"]], "DataFrame from dict with dict keys as a row": [[126, "dataframe-from-dict-with-dict-keys-as-a-row"]], "DataFrame from dict with key and value as a column": [[126, "dataframe-from-dict-with-key-and-value-as-a-column"]], "DataFrame from dict with required columns only": [[126, "dataframe-from-dict-with-required-columns-only"]], "DataFrame from dict with user-defined indexes": [[126, "dataframe-from-dict-with-user-defined-indexes"]], "DataFrame metadata": [[125, "dataframe-metadata"]], "DataFrame modification": [[125, "dataframe-modification"]], "DataFrame rename columns": [[125, "dataframe-rename-columns"]], "DataFrame selection": [[125, "dataframe-selection"]], "DataFrame to dict by row": [[133, "dataframe-to-dict-by-row"]], "DataFrame to dict by row index": [[133, "dataframe-to-dict-by-row-index"]], "DataFrame to dict using into parameter": [[133, "dataframe-to-dict-using-into-parameter"]], "DataFrame to dict with a list of values": [[133, "dataframe-to-dict-with-a-list-of-values"]], "DataFrame to dict with one column as the key": [[133, "dataframe-to-dict-with-one-column-as-the-key"]], "DataFrame to dict with pandas series of values": [[133, "dataframe-to-dict-with-pandas-series-of-values"]], "DataFrame to dict without header and index": [[133, "dataframe-to-dict-without-header-and-index"]], "Dataframe from CSV": [[125, "dataframe-from-csv"]], "Dataframe from dict": [[125, "dataframe-from-dict"]], "Datasets": [[9, "datasets"]], "Decorating Functions with Parameters": [[30, "decorating-functions-with-parameters"]], "Decorators in Python": [[30, "decorators-in-python"]], "Defining a Class in Python": [[95, "defining-a-class-in-python"]], "Defining a Closure Function": [[29, "defining-a-closure-function"]], "Defining a Function": [[67, "defining-a-function"]], "Defining a function with parameters": [[67, "defining-a-function-with-parameters"]], "Defining a function with parameters and return value": [[67, "defining-a-function-with-parameters-and-return-value"]], "Defining a function without any parameters": [[67, "defining-a-function-without-any-parameters"]], "Defining a function without parameters and return value": [[67, "defining-a-function-without-parameters-and-return-value"]], "Definition": [[3, "definition"], [4, "definition"], [5, "definition"], [7, "definition"]], "Delete Objects": [[95, "delete-objects"]], "Delete object properties": [[95, "delete-object-properties"]], "Delete/Remove List Elements": [[46, "delete-remove-list-elements"]], "Deleting Files": [[61, "deleting-files"]], "Density Estimation": [[1, "density-estimation"]], "Description": [[3, "description"]], "Determinant": [[121, "determinant"]], "Dictionary Built-in Dictionary Functions": [[48, "dictionary-built-in-dictionary-functions"]], "Differences Between Interpreter and Compiler": [[91, "differences-between-interpreter-and-compiler"]], "Differences between Generator function and Normal function": [[28, "differences-between-generator-function-and-normal-function"]], "Different types of ML \ud83d\udcda": [[0, "different-types-of-ml"]], "Disadvantages of Recursion": [[71, "disadvantages-of-recursion"]], "Display numbers in floating-point format": [[87, "display-numbers-in-floating-point-format"]], "Display output Number in various type format": [[87, "display-output-number-in-various-type-format"]], "Docstring Formats": [[77, "docstring-formats"]], "Docstrings": [[67, "docstrings"]], "Draw Decision Boundaries": [[14, "draw-decision-boundaries"], [15, "draw-decision-boundaries"]], "Draw a scatterplot for each pairwise relationship": [[154, "draw-a-scatterplot-for-each-pairwise-relationship"]], "Draw strips of observations on top of a box plot": [[148, "draw-strips-of-observations-on-top-of-a-box-plot"]], "Draw strips of observations on top of a violin plot": [[148, "draw-strips-of-observations-on-top-of-a-violin-plot"]], "Draw swarm observations on top of a violin plot": [[148, "draw-swarm-observations-on-top-of-a-violin-plot"]], "Drop NA from defined rows": [[131, "drop-na-from-defined-rows"]], "Drop all duplicates": [[130, "drop-all-duplicates"]], "Drop all the columns using loc": [[129, "drop-all-the-columns-using-loc"]], "Drop column by index position": [[129, "drop-column-by-index-position"]], "Drop column by suppressing errors": [[129, "drop-column-by-suppressing-errors"]], "Drop column from multi-index DataFrame": [[129, "drop-column-from-multi-index-dataframe"]], "Drop column in place": [[129, "drop-column-in-place"]], "Drop column using a function": [[129, "drop-column-using-a-function"]], "Drop column using pandas DataFrame delete": [[129, "drop-column-using-pandas-dataframe-delete"]], "Drop column using pandas DataFrame.pop() function": [[129, "drop-column-using-pandas-dataframe-pop-function"]], "Drop column where all values are missing": [[131, "drop-column-where-all-values-are-missing"]], "Drop column where at least one value is missing": [[131, "drop-column-where-at-least-one-value-is-missing"]], "Drop column with missing values in place": [[131, "drop-column-with-missing-values-in-place"]], "Drop column with the number of NA": [[131, "drop-column-with-the-number-of-na"]], "Drop columns": [[125, "drop-columns"]], "Drop columns in pandas DataFrame": [[129, "drop-columns-in-pandas-dataframe"]], "Drop columns with NA in pandas DataFrame": [[131, "drop-columns-with-na-in-pandas-dataframe"]], "Drop duplicates and reset the index": [[130, "drop-duplicates-and-reset-the-index"], [131, "drop-duplicates-and-reset-the-index"]], "Drop duplicates but keep first": [[130, "drop-duplicates-but-keep-first"]], "Drop duplicates but keep last": [[130, "drop-duplicates-but-keep-last"]], "Drop duplicates from defined columns": [[130, "drop-duplicates-from-defined-columns"]], "Drop duplicates in pandas DataFrame": [[130, "drop-duplicates-in-pandas-dataframe"]], "Drop duplicates in place": [[130, "drop-duplicates-in-place"]], "Drop first n columns": [[129, "drop-first-n-columns"]], "Drop multiple columns": [[129, "drop-multiple-columns"]], "Drop range of columns using iloc": [[129, "drop-range-of-columns-using-iloc"]], "Drop single column": [[129, "drop-single-column"]], "Drop the last column": [[129, "drop-the-last-column"]], "Encapsulation": [[94, "encapsulation"]], "Enjoy Learning \ud83d\ude03": [[163, "enjoy-learning"]], "Enumerate": [[64, "enumerate"]], "Error Handling": [[109, "error-handling"]], "Escape Sequence": [[45, "escape-sequence"]], "Escape character \\": [[32, "escape-character"]], "Essentials": [[163, "essentials"]], "Estimating Parameters for a Gaussian": [[1, "estimating-parameters-for-a-gaussian"]], "Example 10: Print year, month, hour, minute and timestamp": [[52, "example-10-print-year-month-hour-minute-and-timestamp"]], "Example 11: Difference between two dates and times": [[52, "example-11-difference-between-two-dates-and-times"]], "Example 12: Difference between two timedelta objects": [[52, "example-12-difference-between-two-timedelta-objects"]], "Example 13: Printing negative timedelta object": [[52, "example-13-printing-negative-timedelta-object"]], "Example 14: Time duration in seconds": [[52, "example-14-time-duration-in-seconds"]], "Example 15: Format date using strftime()": [[52, "example-15-format-date-using-strftime"]], "Example 16: strptime()": [[52, "example-16-strptime"]], "Example 1:": [[39, "example-1"], [80, "example-1"]], "Example 1: Current time using datetime object": [[56, "example-1-current-time-using-datetime-object"]], "Example 1: Declaring and assigning value to a constant": [[83, "example-1-declaring-and-assigning-value-to-a-constant"]], "Example 1: Declaring and assigning value to a variable": [[83, "example-1-declaring-and-assigning-value-to-a-variable"]], "Example 1: Get Current Date and Time": [[52, "example-1-get-current-date-and-time"]], "Example 1: Python get today\u2019s date": [[55, "example-1-python-get-todays-date"]], "Example 1: Python sleep()": [[59, "example-1-python-sleep"]], "Example 1: Python timestamp to datetime": [[57, "example-1-python-timestamp-to-datetime"]], "Example 1: datetime to string using strftime()": [[53, "example-1-datetime-to-string-using-strftime"]], "Example 1: string to datetime object": [[54, "example-1-string-to-datetime-object"]], "Example 2:": [[39, "example-2"], [80, "example-2"]], "Example 2: Creating string from a timestamp": [[53, "example-2-creating-string-from-a-timestamp"]], "Example 2: Current date in different formats": [[55, "example-2-current-date-in-different-formats"]], "Example 2: Current time using time module": [[56, "example-2-current-time-using-time-module"]], "Example 2: Declaring multiple variables in one line** using comma  ,  and semicolon ;": [[83, "example-2-declaring-multiple-variables-in-one-line-using-comma-and-semicolon"]], "Example 2: Get Current Date": [[52, "example-2-get-current-date"]], "Example 2: Python create a digital clock": [[59, "example-2-python-create-a-digital-clock"]], "Example 2: Python datetime to timestamp": [[57, "example-2-python-datetime-to-timestamp"]], "Example 2: string to datetime object": [[54, "example-2-string-to-datetime-object"]], "Example 3: Changing the value of a variable": [[83, "example-3-changing-the-value-of-a-variable"]], "Example 3: Current time of a timezone": [[56, "example-3-current-time-of-a-timezone"]], "Example 3: Date object to represent a date": [[52, "example-3-date-object-to-represent-a-date"]], "Example 3: Get the current date and time": [[55, "example-3-get-the-current-date-and-time"]], "Example 3: Locale\u2019s appropriate date and time": [[53, "example-3-locales-appropriate-date-and-time"]], "Example 3: Python multithreading": [[59, "example-3-python-multithreading"]], "Example 4: Get current date": [[52, "example-4-get-current-date"]], "Example 4: Time Objects to Represent Time": [[56, "example-4-time-objects-to-represent-time"]], "Example 4: sleep() in a multithreaded program": [[59, "example-4-sleep-in-a-multithreaded-program"]], "Example 5: Difference Between Two Points in Time Using": [[56, "example-5-difference-between-two-points-in-time-using"]], "Example 5: Get date from a timestamp": [[52, "example-5-get-date-from-a-timestamp"]], "Example 6: Difference Between Two Points in Time Using timedelata": [[56, "example-6-difference-between-two-points-in-time-using-timedelata"]], "Example 6: Print today\u2019s year, month and day": [[52, "example-6-print-todays-year-month-and-day"]], "Example 7: Time object to represent time": [[52, "example-7-time-object-to-represent-time"]], "Example 8: Print hour, minute, second and microsecond": [[52, "example-8-print-hour-minute-second-and-microsecond"]], "Example 9: Python datetime object": [[52, "example-9-python-datetime-object"]], "Example : Arithmetic operators in Python": [[88, "example-arithmetic-operators-in-python"]], "Example : Comparison operators in Python": [[88, "example-comparison-operators-in-python"]], "Example : Identity operators in Python": [[88, "example-identity-operators-in-python"]], "Example : Logical operators in Python": [[88, "example-logical-operators-in-python"]], "Example : Membership operators in Python": [[88, "example-membership-operators-in-python"]], "Example : Share a global Variable Across Python Modules": [[69, "example-share-a-global-variable-across-python-modules"]], "Example Using decimal Module": [[73, "example-using-decimal-module"]], "Example Using math Module": [[73, "example-using-math-module"]], "Example Using operator Module": [[73, "example-using-operator-module"]], "Example Using os Module": [[73, "example-using-os-module"]], "Example Using random Module": [[73, "example-using-random-module"]], "Example Using statistics Module": [[73, "example-using-statistics-module"]], "Example Using string Module": [[73, "example-using-string-module"]], "Example Using sys Module": [[73, "example-using-sys-module"]], "Example of Inheritance in Python": [[96, "example-of-inheritance-in-python"]], "Example of Method Overriding in Python": [[96, "example-of-method-overriding-in-python"]], "Example of RegEx with Metacharacters": [[32, "example-of-regex-with-metacharacters"]], "Example to convert pandas DataFrame to dict": [[133, "example-to-convert-pandas-dataframe-to-dict"]], "Example:": [[42, "example"], [80, "example"]], "Example: Nested for loop": [[40, "example-nested-for-loop"]], "Example: Nested for loop to print pattern": [[40, "example-nested-for-loop-to-print-pattern"]], "Example: Nested while loop": [[41, "example-nested-while-loop"]], "Example: Nested while loop to print the pattern": [[41, "example-nested-while-loop-to-print-the-pattern"]], "Example: User-Defined Exception in Python": [[65, "example-user-defined-exception-in-python"]], "Exceptions in Python": [[64, "exceptions-in-python"]], "Exercise 10: Merge two data frames using the following condition": [[137, "exercise-10-merge-two-data-frames-using-the-following-condition"]], "Exercise 1: From the given dataset print the first and last five rows": [[137, "exercise-1-from-the-given-dataset-print-the-first-and-last-five-rows"]], "Exercise 1: Read Total profit of all months and show it using a line plot": [[116, "exercise-1-read-total-profit-of-all-months-and-show-it-using-a-line-plot"]], "Exercise 2: Clean the dataset and update the CSV file": [[137, "exercise-2-clean-the-dataset-and-update-the-csv-file"]], "Exercise 2: Get total profit of all months and show line plot with the following Style properties": [[116, "exercise-2-get-total-profit-of-all-months-and-show-line-plot-with-the-following-style-properties"]], "Exercise 3: Find the most expensive car company name": [[137, "exercise-3-find-the-most-expensive-car-company-name"]], "Exercise 3: Read all product sales data and show it  using a multiline plot": [[116, "exercise-3-read-all-product-sales-data-and-show-it-using-a-multiline-plot"]], "Exercise 4: Print All Toyota Cars details": [[137, "exercise-4-print-all-toyota-cars-details"]], "Exercise 4: Read toothpaste sales data of each month and show it using a scatter plot": [[116, "exercise-4-read-toothpaste-sales-data-of-each-month-and-show-it-using-a-scatter-plot"]], "Exercise 5: Count total cars per company": [[137, "exercise-5-count-total-cars-per-company"]], "Exercise 5: Read face cream and facewash product sales data and show it using the bar chart": [[116, "exercise-5-read-face-cream-and-facewash-product-sales-data-and-show-it-using-the-bar-chart"]], "Exercise 6: Find each company\u2019s Higesht price car": [[137, "exercise-6-find-each-companys-higesht-price-car"]], "Exercise 6: Read sales data of bathing soap of all months and show it using a bar chart. Save this plot to your hard disk": [[116, "exercise-6-read-sales-data-of-bathing-soap-of-all-months-and-show-it-using-a-bar-chart-save-this-plot-to-your-hard-disk"]], "Exercise 7: Find the average mileage of each car making company": [[137, "exercise-7-find-the-average-mileage-of-each-car-making-company"]], "Exercise 7: Read the total profit of each month and show it using the histogram to see the most common profit ranges": [[116, "exercise-7-read-the-total-profit-of-each-month-and-show-it-using-the-histogram-to-see-the-most-common-profit-ranges"]], "Exercise 8: Calculate total sale data for last year for each product and show it using a Pie chart": [[116, "exercise-8-calculate-total-sale-data-for-last-year-for-each-product-and-show-it-using-a-pie-chart"]], "Exercise 8: Sort all cars by Price column": [[137, "exercise-8-sort-all-cars-by-price-column"]], "Exercise 9: Concatenate two data frames using the following conditions": [[137, "exercise-9-concatenate-two-data-frames-using-the-following-conditions"]], "Exercise 9: Read Bathing soap facewash of all months and display it using the Subplot": [[116, "exercise-9-read-bathing-soap-facewash-of-all-months-and-display-it-using-the-subplot"]], "Exercise Question 10: Read all product sales data and show it using the stack plot": [[116, "exercise-question-10-read-all-product-sales-data-and-show-it-using-the-stack-plot"]], "Exercises \u279e <span class='label label-default'>Level 1</span>": [[30, "exercises-level-1"], [32, "exercises-level-1"], [38, "exercises-level-1"], [40, "exercises-level-1"], [46, "exercises-level-1"], [47, "exercises-level-1"], [49, "exercises-level-1"], [57, "exercises-level-1"], [61, "exercises-level-1"], [64, "exercises-level-1"], [67, "exercises-level-1"], [73, "exercises-level-1"], [83, "exercises-level-1"], [94, "exercises-level-1"]], "Exercises \u279e <span class='label label-default'>Level 2</span>": [[30, "exercises-level-2"], [32, "exercises-level-2"], [38, "exercises-level-2"], [40, "exercises-level-2"], [46, "exercises-level-2"], [47, "exercises-level-2"], [49, "exercises-level-2"], [61, "exercises-level-2"], [67, "exercises-level-2"], [73, "exercises-level-2"], [83, "exercises-level-2"], [94, "exercises-level-2"]], "Exercises \u279e <span class='label label-default'>Level 3</span>": [[30, "exercises-level-3"], [32, "exercises-level-3"], [38, "exercises-level-3"], [40, "exercises-level-3"], [49, "exercises-level-3"], [67, "exercises-level-3"], [73, "exercises-level-3"]], "Expert Level": [[162, "expert-level"]], "Exporting Data": [[125, "exporting-data"]], "FacetGrid": [[155, "facetgrid"], [155, "id1"]], "Factor Plot": [[152, "factor-plot"]], "Fashion MNIST": [[9, "fashion-mnist"]], "Feature 1": [[109, "feature-1"]], "Feature 2": [[109, "feature-2"]], "Feature 3": [[109, "feature-3"]], "Feature Scaling": [[4, "feature-scaling"]], "Features (variables)": [[4, "features-variables"]], "File Positions": [[61, "file-positions"]], "File Types": [[61, "file-types"]], "File with csv Extension": [[61, "file-with-csv-extension"]], "File with json Extension": [[61, "file-with-json-extension"]], "File with txt Extension": [[61, "file-with-txt-extension"]], "File with xlsx Extension": [[61, "file-with-xlsx-extension"]], "File with xml Extension": [[61, "file-with-xml-extension"]], "Files": [[61, "files"]], "Filter, Sort, and Groupby": [[125, "filter-sort-and-groupby"]], "Filtering Data": [[136, "filtering-data"]], "Find Anomalies Using Gaussian Distribution": [[8, "find-anomalies-using-gaussian-distribution"]], "Fing Outliers": [[8, "fing-outliers"]], "Flatten Data": [[122, "flatten-data"]], "For instance if you want to generate a list of numbers": [[50, "for-instance-if-you-want-to-generate-a-list-of-numbers"]], "Format Code List": [[53, "format-code-list"], [54, "format-code-list"]], "Format output strings by its positions": [[87, "format-output-strings-by-its-positions"]], "Forward (or Feedforward) Propagation": [[7, "forward-or-feedforward-propagation"]], "Forward Propagation Example": [[7, "forward-propagation-example"]], "Frozenset methods": [[49, "frozenset-methods"]], "Function Argument and Parameter": [[70, "function-argument-and-parameter"]], "Function as a Parameter": [[29, "function-as-a-parameter"]], "Function as a Parameter of Another Function": [[70, "function-as-a-parameter-of-another-function"]], "Function as a Return Value": [[29, "function-as-a-return-value"]], "Function pass Statement": [[67, "function-pass-statement"]], "Function return Statement": [[67, "function-return-statement"]], "Functions in Python Math Module": [[75, "functions-in-python-math-module"]], "Gaussian (Normal) Distribution": [[1, "gaussian-normal-distribution"]], "Generate Random Numbers": [[122, "generate-random-numbers"]], "Generators in Python": [[28, "generators-in-python"]], "Generic Seaborn Plots:": [[142, "generic-seaborn-plots"]], "Get Current Directory getcwd() -": [[62, "get-current-directory-getcwd"]], "Get multiple input values from a user in one line": [[87, "get-multiple-input-values-from-a-user-in-one-line"]], "Get the statistics of DataFrame": [[125, "get-the-statistics-of-dataframe"]], "Getting Started with Python": [[24, "getting-started-with-python"]], "Getting back to Decorators": [[30, "getting-back-to-decorators"]], "Global Variables": [[68, "global-variables"]], "Global Variables Across Python Modules": [[69, "global-variables-across-python-modules"]], "Global and local variables": [[68, "global-and-local-variables"]], "Global in Nested Functions": [[69, "global-in-nested-functions"]], "Good news is \ud83d\ude0d": [[163, "good-news-is"]], "Gradient Computation": [[7, "gradient-computation"]], "Group the strips by a categorical variable": [[148, "group-the-strips-by-a-categorical-variable"]], "HIGH-LEVEL LANGUAGES": [[91, "high-level-languages"]], "Handling timezone in Python": [[52, "handling-timezone-in-python"]], "Help topics": [[82, "help-topics"]], "Here is a list of all the escape sequences supported by Python.": [[45, "here-is-a-list-of-all-the-escape-sequences-supported-by-python"]], "Here\u2019s my first section": [[21, "heres-my-first-section"], [103, "heres-my-first-section"], [106, "heres-my-first-section"], [159, "heres-my-first-section"], [161, "heres-my-first-section"]], "Here\u2019s my sample title": [[21, "heres-my-sample-title"], [103, "heres-my-sample-title"], [106, "heres-my-sample-title"], [159, "heres-my-sample-title"], [161, "heres-my-sample-title"]], "Hierarchical Inheritance": [[96, "hierarchical-inheritance"]], "Higher Order Functions": [[29, "higher-order-functions"]], "Histogram": [[115, "histogram"]], "How Are Sets Better Than Other DataTypes?": [[49, "how-are-sets-better-than-other-datatypes"]], "How strftime() works?": [[53, "how-strftime-works"]], "How strptime() works?": [[54, "how-strptime-works"]], "How to Install NumPy?": [[118, "how-to-install-numpy"]], "How to access characters in a string?": [[45, "how-to-access-characters-in-a-string"]], "How to call a function in python?": [[67, "how-to-call-a-function-in-python"]], "How to change or delete a string?": [[45, "how-to-change-or-delete-a-string"]], "How to create a string in Python?": [[45, "how-to-create-a-string-in-python"]], "How to get current date and time in Python?": [[55, "how-to-get-current-date-and-time-in-python"]], "How to import modules in Python?": [[73, "how-to-import-modules-in-python"]], "How to learn Python?": [[22, "how-to-learn-python"]], "How to print blank lines": [[80, "how-to-print-blank-lines"]], "How to slice a string in Python?": [[45, "how-to-slice-a-string-in-python"]], "How to slice lists in Python?": [[46, "how-to-slice-lists-in-python"]], "How to use DataFrame.head() function": [[128, "how-to-use-dataframe-head-function"]], "How to use DataFrame.tail() function": [[128, "how-to-use-dataframe-tail-function"]], "Hybrid Inheritance": [[96, "hybrid-inheritance"]], "Hypothesis": [[4, "hypothesis"]], "Hypothesis (the Model)": [[5, "hypothesis-the-model"]], "Illustrate Hidden Layers Perceptrons": [[17, "illustrate-hidden-layers-perceptrons"], [18, "illustrate-hidden-layers-perceptrons"], [19, "illustrate-hidden-layers-perceptrons"]], "Import Dependencies": [[8, "import-dependencies"], [10, "import-dependencies"], [11, "import-dependencies"], [12, "import-dependencies"], [13, "import-dependencies"], [14, "import-dependencies"], [15, "import-dependencies"], [16, "import-dependencies"], [17, "import-dependencies"], [18, "import-dependencies"], [19, "import-dependencies"]], "Import NumPy and Check Version": [[118, "import-numpy-and-check-version"]], "Importing Data": [[125, "importing-data"]], "Importing module from a package": [[76, "importing-module-from-a-package"]], "Importing the Package": [[109, "importing-the-package"]], "In the upcoming tutorials, we will deep dive into specific concepts of Python, hold on your breath and start your journey": [[24, "in-the-upcoming-tutorials-we-will-deep-dive-into-specific-concepts-of-python-hold-on-your-breath-and-start-your-journey"]], "Index": [[125, "index"]], "Indexing": [[125, "indexing"]], "Indexing a 1D array": [[120, "indexing-a-1d-array"]], "Indexing a 2D array (matrices)": [[120, "indexing-a-2d-array-matrices"]], "Informal introduction to python: using python as calculator": [[24, "informal-introduction-to-python-using-python-as-calculator"]], "Inheritance": [[94, "inheritance"]], "Inheritance in Python": [[96, "inheritance-in-python"]], "Init and Train Linear Regression Model": [[11, "init-and-train-linear-regression-model"], [12, "init-and-train-linear-regression-model"], [13, "init-and-train-linear-regression-model"]], "Init and Train Logistic Regression Model": [[10, "init-and-train-logistic-regression-model"], [14, "init-and-train-logistic-regression-model"], [15, "init-and-train-logistic-regression-model"], [16, "init-and-train-logistic-regression-model"], [17, "init-and-train-logistic-regression-model"]], "Init and Train MLP Model": [[18, "init-and-train-mlp-model"], [19, "init-and-train-mlp-model"]], "Initializing the Langchain": [[109, "initializing-the-langchain"]], "Insert columns": [[125, "insert-columns"]], "Inspecting Strings": [[45, "inspecting-strings"]], "Installation": [[109, "installation"]], "Instance Variables and Methods": [[94, "instance-variables-and-methods"]], "Integer array indexing": [[120, "integer-array-indexing"]], "Interactive widget to create a sequential cubehelix palette:": [[142, "interactive-widget-to-create-a-sequential-cubehelix-palette"]], "Intermediate Level": [[162, "intermediate-level"]], "Interpreter Vs Compiler": [[91, "interpreter-vs-compiler"]], "Introduction": [[109, "introduction"]], "Introduction to *args and **kwargs in Python": [[33, "introduction-to-args-and-kwargs-in-python"]], "Introduction to HuggingFace": [[107, "introduction-to-huggingface"]], "Introduction to Machine Learning! \ud83d\ude80": [[0, "introduction-to-machine-learning"]], "Iris Flowers": [[9, "iris-flowers"]], "Iterate Dictionary using for loop": [[40, "iterate-dictionary-using-for-loop"]], "Iterate List using for loop": [[40, "iterate-list-using-for-loop"]], "Iterate List using while loop": [[41, "iterate-list-using-while-loop"]], "Iterate Numbers using while loop": [[41, "iterate-numbers-using-while-loop"]], "Iterate Set using for loop": [[40, "iterate-set-using-for-loop"]], "Iterate String using for loop": [[40, "iterate-string-using-for-loop"]], "Iterate String using while loop": [[41, "iterate-string-using-while-loop"]], "Iterate Tuple using for loop": [[40, "iterate-tuple-using-for-loop"]], "Iterating Through a string": [[45, "iterating-through-a-string"]], "Iterating Through an Iterator": [[27, "iterating-through-an-iterator"]], "Iterative statements": [[35, "iterative-statements"]], "Iterators in Python": [[27, "iterators-in-python"]], "Java is both Compiled and Interpreted.": [[91, "java-is-both-compiled-and-interpreted"]], "Join/Combine": [[125, "join-combine"]], "Jupyter Demos": [[1, "jupyter-demos"], [3, "jupyter-demos"], [4, "jupyter-demos"], [5, "jupyter-demos"], [7, "jupyter-demos"]], "K-Means Algorithm": [[3, "k-means-algorithm"]], "K-Means Algorithm Demo": [[10, "k-means-algorithm-demo"]], "KEY DIFFERENCE": [[91, "key-difference"]], "KEY SIMILARITIES": [[91, "key-similarities"]], "Key Points to Remember": [[50, "key-points-to-remember"], [86, "key-points-to-remember"]], "Key Points to Remember:": [[94, "key-points-to-remember"]], "LM Plot and Reg Plot": [[143, "lm-plot-and-reg-plot"]], "Lambda Function": [[50, "lambda-function"]], "LangGraphs": [[111, "langgraphs"]], "LangServe": [[112, "langserve"]], "LangSmith": [[113, "langsmith"]], "Langchain expression language": [[114, "langchain-expression-language"]], "Langchain modules": [[110, "langchain-modules"]], "Learn Python Programming": [[22, "learn-python-programming"]], "Let us see valid variable names": [[83, "let-us-see-valid-variable-names"]], "Letter Value (LV) Plot": [[153, "letter-value-lv-plot"]], "Let\u2019s break down the different components of the code.": [[80, "lets-break-down-the-different-components-of-the-code"]], "Let\u2019s discuss some plots that allow us to visualize the distribution of a dataset. These plots are:": [[146, "lets-discuss-some-plots-that-allow-us-to-visualize-the-distribution-of-a-dataset-these-plots-are"]], "Let\u2019s implement with dataset": [[146, "lets-implement-with-dataset"]], "Line Graph": [[115, "line-graph"]], "Linear Algebra": [[26, "linear-algebra"]], "Linear Regression": [[4, "linear-regression"]], "Linspace": [[122, "linspace"]], "List Comprehension vs String vs For Loop in Python": [[50, "list-comprehension-vs-string-vs-for-loop-in-python"]], "List Comprehension: Elegant way to create new List": [[46, "list-comprehension-elegant-way-to-create-new-list"]], "List Comprehensions vs Lambda functions": [[50, "list-comprehensions-vs-lambda-functions"]], "List Directories and Files listdir() -": [[62, "list-directories-and-files-listdir"]], "List Index": [[46, "list-index"]], "List comprehension can be combined with if statement": [[50, "list-comprehension-can-be-combined-with-if-statement"]], "Literal Collections": [[84, "literal-collections"]], "Load Data from File": [[122, "load-data-from-file"]], "Load Fifa Data": [[115, "load-fifa-data"]], "Load Necessary Libraries": [[115, "load-necessary-libraries"]], "Load in NumPy Library": [[119, "load-in-numpy-library"]], "Load the Data": [[8, "load-the-data"], [10, "load-the-data"], [11, "load-the-data"], [12, "load-the-data"], [13, "load-the-data"], [14, "load-the-data"], [15, "load-the-data"], [16, "load-the-data"], [17, "load-the-data"], [18, "load-the-data"], [19, "load-the-data"]], "Loading Datasets in Seaborn": [[139, "loading-datasets-in-seaborn"]], "Loading data into Pandas": [[136, "loading-data-into-pandas"]], "Local Variables": [[68, "local-variables"]], "LogSpace": [[122, "logspace"]], "Logistic Regression": [[5, "logistic-regression"]], "Logistic Regression With Linear Boundary Demo": [[14, "logistic-regression-with-linear-boundary-demo"]], "Logistic Regression With Non-Linear Boundary Demo": [[15, "logistic-regression-with-non-linear-boundary-demo"]], "Loops in Python": [[40, "loops-in-python"], [41, "loops-in-python"]], "MACHINE CODE": [[91, "machine-code"]], "MNIST (Handwritten Digits)": [[9, "mnist-handwritten-digits"]], "Making a New Directory mkdir() -": [[62, "making-a-new-directory-mkdir"]], "Making changes to the data": [[136, "making-changes-to-the-data"]], "Markdown + notebooks": [[25, "markdown-notebooks"], [100, "markdown-notebooks"], [104, "markdown-notebooks"]], "Markdown Files": [[20, "markdown-files"], [101, "markdown-files"], [105, "markdown-files"]], "Match object": [[32, "match-object"]], "Mathematics": [[118, "mathematics"]], "Mathematics for Machine Learning": [[23, "mathematics-for-machine-learning"]], "Matplotlib": [[115, "matplotlib"]], "Matplotlib vs. Seaborn Plotting Code": [[141, "matplotlib-vs-seaborn-plotting-code"]], "Matrix Multiplication": [[121, "matrix-multiplication"]], "MetaCharacters": [[32, "metacharacters"]], "Metadata info of DataFrame": [[125, "metadata-info-of-dataframe"]], "Method Overriding": [[96, "method-overriding"]], "Method Resolution Order in Python": [[96, "method-resolution-order-in-python"]], "Method to Modify Class Default Values": [[94, "method-to-modify-class-default-values"]], "Microchips Tests (Artificial)": [[9, "microchips-tests-artificial"]], "Miscellaneous": [[122, "miscellaneous"]], "Modify Object Properties": [[95, "modify-object-properties"]], "Modifying a set in Python": [[49, "modifying-a-set-in-python"]], "More": [[118, "more"], [118, "id2"]], "Multi-class Classification": [[7, "multi-class-classification"]], "Multi-class Classification (One-vs-All)": [[5, "multi-class-classification-one-vs-all"]], "Multi-line Docstrings in Python": [[77, "multi-line-docstrings-in-python"]], "Multi-line statement": [[82, "multi-line-statement"]], "Multithreading in Python": [[59, "multithreading-in-python"]], "Multivariate Linear Regression Demo": [[11, "multivariate-linear-regression-demo"]], "Multivariate Logistic Regression Demo": [[16, "multivariate-logistic-regression-demo"], [17, "multivariate-logistic-regression-demo"]], "MyST markdown": [[25, "myst-markdown"], [100, "myst-markdown"], [104, "myst-markdown"]], "Need of Encapsulation": [[94, "need-of-encapsulation"]], "Negative indexing": [[46, "negative-indexing"]], "Nested Loops in List Comprehension": [[50, "nested-loops-in-list-comprehension"]], "Nested break loops": [[42, "nested-break-loops"]], "Nested continue loops": [[42, "nested-continue-loops"]], "Nested for loops": [[40, "nested-for-loops"]], "Nested while loops": [[41, "nested-while-loops"]], "Network Model (Set of Neurons)": [[7, "network-model-set-of-neurons"]], "Neural Network": [[7, "neural-network"]], "Neural Network (Multilayer Perceptron) Demo": [[18, "neural-network-multilayer-perceptron-demo"], [19, "neural-network-multilayer-perceptron-demo"]], "Neuron Model (Logistic Unit)": [[7, "neuron-model-logistic-unit"]], "Non-Linear Y(X) Dependency (Artificial)": [[9, "non-linear-y-x-dependency-artificial"]], "Non-linear Regression Demo": [[12, "non-linear-regression-demo"]], "Nonlocal Variables": [[68, "nonlocal-variables"]], "Nonlocal variable in a nested function": [[29, "nonlocal-variable-in-a-nested-function"]], "Normal Equation": [[4, "normal-equation"]], "Notebooks with MyST Markdown": [[6, "notebooks-with-myst-markdown"], [102, "notebooks-with-myst-markdown"], [160, "notebooks-with-myst-markdown"]], "NumPy Array Types:": [[119, "numpy-array-types"]], "NumPy Basics": [[118, "numpy-basics"], [118, "id1"]], "Number Data Type in Python": [[44, "number-data-type-in-python"]], "Numpy Array basics": [[119, "numpy-array-basics"]], "Numpy Documentation": [[122, "numpy-documentation"]], "Numpy also provides many functions to create arrays:": [[119, "numpy-also-provides-many-functions-to-create-arrays"]], "OBJECT CODE": [[91, "object-code"]], "Object": [[94, "object"]], "Object Default Methods": [[94, "object-default-methods"]], "Object Method": [[94, "object-method"]], "Object Oriented Programming": [[94, "object-oriented-programming"]], "Object Properties": [[95, "object-properties"]], "Old style formatting": [[45, "old-style-formatting"]], "One or more times +": [[32, "one-or-more-times"]], "Operations": [[118, "operations"]], "Other Dictionary Operations": [[48, "other-dictionary-operations"]], "Other Frozenset methods": [[49, "other-frozenset-methods"]], "Other List Operations in Python": [[46, "other-list-operations-in-python"]], "Other Python Set Methods": [[49, "other-python-set-methods"]], "Other Set Operations": [[49, "other-set-operations"]], "Other Tuple Operations": [[47, "other-tuple-operations"]], "Output String justification": [[87, "output-string-justification"]], "Output formatting": [[87, "output-formatting"]], "Output text alignment specifying a width": [[87, "output-text-alignment-specifying-a-width"]], "Overfitting Problem": [[4, "overfitting-problem"], [5, "overfitting-problem"]], "Overloading Comparison Operators": [[97, "overloading-comparison-operators"]], "Overloading the + Operator": [[97, "overloading-the-operator"]], "Overriding parent method": [[94, "overriding-parent-method"]], "Package manager and virtual environment": [[24, "package-manager-and-virtual-environment"]], "Packing": [[64, "packing"]], "Packing Dictionaries": [[64, "packing-dictionaries"]], "Packing Lists": [[64, "packing-lists"]], "Packing and Unpacking Arguments in Python": [[64, "packing-and-unpacking-arguments-in-python"]], "PairGrid": [[154, "pairgrid"]], "Pandas DataFrame head, tail, at, iat": [[128, "pandas-dataframe-head-tail-at-iat"]], "Parameters": [[4, "parameters"]], "Parameters:": [[125, "parameters"]], "Part 1: with Iris dataset": [[154, "part-1-with-iris-dataset"]], "Part 1: with Tips dataset": [[154, "part-1-with-tips-dataset"]], "Part 1: with Titanic dataset": [[151, "part-1-with-titanic-dataset"]], "Part 2: with Tips dataset": [[151, "part-2-with-tips-dataset"]], "Passing Arguments with Key and Value": [[67, "passing-arguments-with-key-and-value"]], "Period .": [[32, "id3"]], "Pie Chart": [[115, "pie-chart"]], "Pie Chart #1": [[115, "pie-chart-1"]], "Pie Chart #2": [[115, "pie-chart-2"]], "Pie Chart #3": [[115, "pie-chart-3"]], "Placeholders": [[118, "placeholders"]], "Plot Precision/Recall Progress": [[8, "plot-precision-recall-progress"]], "Plot Test Dataset Predictions": [[16, "plot-test-dataset-predictions"], [17, "plot-test-dataset-predictions"], [18, "plot-test-dataset-predictions"], [19, "plot-test-dataset-predictions"]], "Plot the Clustering Results": [[10, "plot-the-clustering-results"]], "Plot the Data": [[8, "plot-the-data"], [10, "plot-the-data"], [12, "plot-the-data"], [14, "plot-the-data"], [15, "plot-the-data"], [16, "plot-the-data"], [17, "plot-the-data"], [18, "plot-the-data"], [19, "plot-the-data"]], "Plot the Model Predictions": [[11, "plot-the-model-predictions"], [12, "plot-the-model-predictions"], [13, "plot-the-model-predictions"]], "Plot the distribution on the vertical axis:": [[146, "plot-the-distribution-on-the-vertical-axis"]], "Polymorphism": [[94, "polymorphism"]], "Polynomial Regression": [[4, "polynomial-regression"]], "Positional Arguments (Basic)": [[70, "positional-arguments-basic"]], "Practice Problem": [[87, "practice-problem"]], "Prepara the Data for Training": [[10, "prepara-the-data-for-training"], [14, "prepara-the-data-for-training"]], "Prepare the Data for Training": [[15, "prepare-the-data-for-training"]], "Prerequisites for learning decorators": [[30, "prerequisites-for-learning-decorators"]], "Print Training Results": [[16, "print-training-results"], [17, "print-training-results"]], "Print end command": [[80, "print-end-command"]], "Private members of parent class": [[96, "private-members-of-parent-class"]], "Programming Steps Comparision:": [[91, "programming-steps-comparision"]], "Python  Classes and Objects": [[95, "python-classes-and-objects"]], "Python **kwargs": [[33, "python-kwargs"]], "Python *args": [[33, "python-args"]], "Python *args and **kwargs": [[33, "python-args-and-kwargs"]], "Python - filter Function": [[30, "python-filter-function"]], "Python - map Function": [[30, "python-map-function"]], "Python @property decorator": [[31, "python-property-decorator"]], "Python Advanced Topics": [[22, "python-advanced-topics"], [34, "python-advanced-topics"]], "Python Anonymous/lambda Function": [[72, "python-anonymous-lambda-function"]], "Python Applications Area": [[24, "python-applications-area"]], "Python Arbitrary/Variable-length Arguments": [[70, "python-arbitrary-variable-length-arguments"]], "Python Built-In Modules Examples": [[73, "python-built-in-modules-examples"]], "Python Built-in Exceptions": [[63, "python-built-in-exceptions"]], "Python Built-in List Functions": [[46, "python-built-in-list-functions"]], "Python Built-in Tuple Functions": [[47, "python-built-in-tuple-functions"]], "Python Classes and Objects": [[95, "id1"]], "Python Closures": [[29, "python-closures"]], "Python Comments": [[77, "python-comments"]], "Python Comments Using Strings": [[77, "python-comments-using-strings"]], "Python Comments vs Docstrings": [[77, "python-comments-vs-docstrings"]], "Python Custom Exceptions": [[65, "python-custom-exceptions"]], "Python Data Types": [[22, "python-data-types"], [51, "python-data-types"], [85, "python-data-types"]], "Python DataFrame": [[125, "python-dataframe"]], "Python Date & Time Module": [[22, "python-date-time-module"], [60, "python-date-time-module"]], "Python Decimal": [[44, "python-decimal"]], "Python Decorators": [[30, "python-decorators"]], "Python Default Arguments": [[70, "python-default-arguments"]], "Python Dictionary": [[48, "python-dictionary"]], "Python Dictionary Comprehension": [[48, "python-dictionary-comprehension"]], "Python Dictionary Methods": [[48, "python-dictionary-methods"]], "Python Directory": [[62, "python-directory"]], "Python Directory and Files Management": [[62, "python-directory-and-files-management"]], "Python Docstrings": [[77, "python-docstrings"]], "Python Errors and Built-in Exceptions": [[63, "python-errors-and-built-in-exceptions"]], "Python Exceptions Handling Using try, except and finally statement": [[64, "python-exceptions-handling-using-try-except-and-finally-statement"]], "Python File I/O": [[61, "python-file-i-o"]], "Python File Methods": [[61, "python-file-methods"]], "Python Files": [[22, "python-files"], [66, "python-files"]], "Python Flow Control": [[22, "python-flow-control"], [43, "python-flow-control"]], "Python Flow-Control (Decision-Making) Statements": [[35, "python-flow-control-decision-making-statements"]], "Python Fractions": [[44, "python-fractions"]], "Python Frozenset": [[49, "python-frozenset"]], "Python Function Arguments": [[70, "python-function-arguments"]], "Python Functions": [[22, "python-functions"], [67, "python-functions"], [79, "python-functions"]], "Python Generator Expression": [[28, "python-generator-expression"]], "Python Generators with a Loop": [[28, "python-generators-with-a-loop"]], "Python Get Current time": [[56, "python-get-current-time"]], "Python Global, Local and Nonlocal variables": [[68, "python-global-local-and-nonlocal-variables"]], "Python Hello, World": [[80, "python-hello-world"]], "Python Infinite Iterators": [[27, "python-infinite-iterators"]], "Python Inheritance": [[96, "python-inheritance"]], "Python Input, Output and Import": [[87, "python-input-output-and-import"]], "Python Installation": [[24, "python-installation"]], "Python Introduction": [[22, "python-introduction"], [93, "python-introduction"]], "Python Iterators": [[27, "python-iterators"]], "Python Keyword Arguments": [[70, "python-keyword-arguments"]], "Python Keywords and Identifiers": [[81, "python-keywords-and-identifiers"]], "Python List": [[46, "python-list"]], "Python List Comprehension": [[50, "python-list-comprehension"]], "Python List Methods": [[46, "python-list-methods"]], "Python List Operations": [[46, "python-list-operations"]], "Python Literals": [[84, "python-literals"]], "Python Mathematical Functions": [[75, "python-mathematical-functions"]], "Python Mathematics": [[44, "python-mathematics"]], "Python Matplotlib": [[116, "python-matplotlib"], [117, "python-matplotlib"]], "Python Matplotlib Module": [[22, "python-matplotlib-module"]], "Python Module Search Path": [[73, "python-module-search-path"]], "Python Modules": [[73, "python-modules"]], "Python Modules List": [[73, "python-modules-list"]], "Python Multilevel Inheritance": [[96, "python-multilevel-inheritance"]], "Python Multiple Inheritance": [[96, "python-multiple-inheritance"]], "Python Namespace and Scope": [[89, "python-namespace-and-scope"]], "Python Nested if statement": [[39, "python-nested-if-statement"]], "Python NumPy": [[118, "python-numpy"]], "Python NumPy Array:": [[118, "python-numpy-array"], [119, "python-numpy-array"]], "Python NumPy Exercises": [[123, "python-numpy-exercises"]], "Python Numbers, Type Conversion and Mathematics": [[44, "python-numbers-type-conversion-and-mathematics"]], "Python Numpy Module": [[22, "python-numpy-module"], [124, "python-numpy-module"]], "Python OOPs Concepts": [[94, "python-oops-concepts"]], "Python Object Class": [[22, "python-object-class"], [98, "python-object-class"]], "Python Operator Overloading": [[97, "python-operator-overloading"], [97, "id1"]], "Python Operators": [[88, "python-operators"]], "Python Package": [[76, "python-package"]], "Python Pandas": [[125, "python-pandas"], [136, "python-pandas"], [137, "python-pandas"]], "Python Pandas Module": [[22, "python-pandas-module"], [138, "python-pandas-module"]], "Python Python Generators": [[28, "python-python-generators"]], "Python Random Module": [[74, "python-random-module"]], "Python Recursion": [[71, "python-recursion"]], "Python Recursive Function": [[71, "python-recursive-function"]], "Python RegEx": [[32, "python-regex"]], "Python RegEx Methods": [[32, "python-regex-methods"]], "Python Resources": [[22, "python-resources"]], "Python Seaborn": [[158, "python-seaborn"]], "Python Set Operations": [[49, "python-set-operations"]], "Python Sets": [[49, "python-sets"]], "Python Single Inheritance": [[96, "python-single-inheritance"]], "Python Special Functions": [[97, "python-special-functions"]], "Python Statement, Indentation and Comments": [[82, "python-statement-indentation-and-comments"]], "Python String Formatting": [[45, "python-string-formatting"]], "Python String Replication Operator (*)": [[45, "python-string-replication-operator"]], "Python Strings": [[24, "python-strings"], [45, "python-strings"]], "Python Strings Operations": [[45, "python-strings-operations"]], "Python Tuple": [[47, "python-tuple"]], "Python Type Conversion and Type Casting": [[86, "python-type-conversion-and-type-casting"]], "Python User-defined Functions": [[78, "python-user-defined-functions"]], "Python Variable Scope": [[89, "python-variable-scope"]], "Python Variables and Constants": [[83, "python-variables-and-constants"]], "Python __doc__ attribute": [[77, "python-doc-attribute"]], "Python datetime": [[52, "python-datetime"]], "Python docstrings": [[77, "id1"]], "Python for Loop": [[40, "python-for-loop"]], "Python format datetime": [[52, "python-format-datetime"]], "Python from-import statement": [[73, "python-from-import-statement"]], "Python global Keyword": [[69, "python-global-keyword"]], "Python if statement": [[36, "python-if-statement"]], "Python if-elif-else statement": [[38, "python-if-elif-else-statement"]], "Python if-else statement": [[37, "python-if-else-statement"]], "Python import statement": [[73, "python-import-statement"]], "Python lists": [[24, "python-lists"]], "Python sleep()": [[59, "python-sleep"]], "Python strftime()": [[53, "python-strftime"]], "Python strftime() - datetime object to string": [[52, "python-strftime-datetime-object-to-string"]], "Python strptime()": [[54, "python-strptime"]], "Python strptime() - string to datetime": [[52, "python-strptime-string-to-datetime"]], "Python super() function": [[96, "python-super-function"]], "Python time Module": [[58, "python-time-module"]], "Python time.asctime()": [[58, "python-time-asctime"]], "Python time.ctime()": [[58, "python-time-ctime"]], "Python time.gmtime()": [[58, "python-time-gmtime"]], "Python time.localtime()": [[58, "python-time-localtime"]], "Python time.mktime()": [[58, "python-time-mktime"]], "Python time.sleep()": [[58, "python-time-sleep"]], "Python time.strftime()": [[58, "python-time-strftime"]], "Python time.strptime()": [[58, "python-time-strptime"]], "Python time.time()": [[58, "python-time-time"]], "Python timestamp to datetime and vice-versa": [[57, "python-timestamp-to-datetime-and-vice-versa"]], "Python try with else clause": [[64, "python-try-with-else-clause"]], "Python try-finally Clause": [[64, "python-try-finally-clause"]], "Python while Loop": [[41, "python-while-loop"]], "Quantifier {}": [[32, "quantifier"]], "Quickly add YAML metadata for MyST Notebooks": [[6, "quickly-add-yaml-metadata-for-myst-notebooks"], [102, "quickly-add-yaml-metadata-for-myst-notebooks"], [160, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Quiz time": [[120, "quiz-time"]], "Raise error while renaming a column": [[132, "raise-error-while-renaming-a-column"]], "Raising Exceptions in Python": [[64, "raising-exceptions-in-python"]], "Raising an Exception": [[64, "raising-an-exception"]], "Random Initialization": [[7, "random-initialization"]], "Random number": [[119, "random-number"]], "Raw String to ignore escape sequence": [[45, "raw-string-to-ignore-escape-sequence"]], "Reading Data in Pandas": [[136, "reading-data-in-pandas"]], "Real World Examples": [[115, "real-world-examples"]], "Real world use cases": [[163, "real-world-use-cases"]], "References": [[1, "references"], [3, "references"], [4, "references"], [5, "references"], [7, "references"]], "Regularization": [[4, "regularization"], [5, "regularization"]], "Reloading a module": [[73, "reloading-a-module"]], "Removing a Directory or a File remove() and rmdir() -": [[62, "removing-a-directory-or-a-file-remove-and-rmdir"]], "Removing elements from Dictionary": [[48, "removing-elements-from-dictionary"]], "Removing elements from a set": [[49, "removing-elements-from-a-set"]], "Rename a single column": [[132, "rename-a-single-column"]], "Rename all columns with a list": [[132, "rename-all-columns-with-a-list"]], "Rename column by adding prefix/suffix": [[132, "rename-column-by-adding-prefix-suffix"]], "Rename column by index position": [[132, "rename-column-by-index-position"]], "Rename column in multi-index DataFrame": [[132, "rename-column-in-multi-index-dataframe"]], "Rename column using DataFrame.set_axis()": [[132, "rename-column-using-dataframe-set-axis"]], "Rename column using a function": [[132, "rename-column-using-a-function"]], "Rename columns by removing leading and trailing spaces": [[132, "rename-columns-by-removing-leading-and-trailing-spaces"]], "Rename columns in Pandas DataFrame": [[132, "rename-columns-in-pandas-dataframe"]], "Rename columns in all levels": [[132, "rename-columns-in-all-levels"]], "Rename columns in defined level": [[132, "rename-columns-in-defined-level"]], "Rename columns in place": [[132, "rename-columns-in-place"]], "Rename multiple columns": [[132, "rename-multiple-columns"]], "Renaming a Directory or a File rename() -": [[62, "renaming-a-directory-or-a-file-rename"]], "Reset index and change column name": [[135, "reset-index-and-change-column-name"]], "Reset index and creates new column in level": [[135, "reset-index-and-creates-new-column-in-level"]], "Reset index and name other level": [[135, "reset-index-and-name-other-level"]], "Reset index by level": [[135, "reset-index-by-level"]], "Reset index in pandas DataFrame": [[135, "reset-index-in-pandas-dataframe"]], "Reset index in place": [[135, "reset-index-in-place"]], "Reset index starts from 1": [[135, "reset-index-starts-from-1"]], "Reset index to starts at 0": [[135, "reset-index-to-starts-at-0"]], "Reset index to the range of numbers": [[135, "reset-index-to-the-range-of-numbers"]], "Reset index without new column": [[135, "reset-index-without-new-column"]], "Reset multi-level index": [[135, "reset-multi-level-index"]], "Reshape Data": [[122, "reshape-data"]], "Residplot()": [[145, "residplot"]], "Resources": [[117, "resources"], [124, "resources"], [138, "resources"], [158, "resources"]], "Return Boolean Values": [[67, "return-boolean-values"]], "Return Multiple Values": [[67, "return-multiple-values"]], "Return Single Value": [[67, "return-single-value"]], "Return a List": [[67, "return-a-list"]], "Reverse for loop": [[40, "reverse-for-loop"]], "Reverse for loop using range()": [[40, "reverse-for-loop-using-range"]], "Reverse while loop": [[41, "reverse-while-loop"]], "Rules and Naming Convention for Variables and constants": [[83, "rules-and-naming-convention-for-variables-and-constants"]], "Rules for writing identifiers": [[81, "rules-for-writing-identifiers"]], "Rules of global Keyword": [[69, "rules-of-global-keyword"]], "Running the \u201cHello, World!\u201d Program": [[80, "running-the-hello-world-program"]], "Sample Roles and Directives": [[101, "sample-roles-and-directives"], [105, "sample-roles-and-directives"]], "Saving as JSON File": [[61, "saving-as-json-file"]], "Saving our Data (Exporting into Desired Format)": [[136, "saving-our-data-exporting-into-desired-format"]], "Scatter Plot and Joint Plot": [[144, "scatter-plot-and-joint-plot"]], "Seaborn Color Palettes": [[142, "seaborn-color-palettes"]], "Seaborn Lmplots:": [[143, "seaborn-lmplots"]], "Seaborn Regplots:": [[143, "seaborn-regplots"]], "Seaborn: Box Plot": [[149, "seaborn-box-plot"]], "Seaborn: Categorical Data Plots": [[147, "seaborn-categorical-data-plots"]], "Seaborn: Strip Plot": [[148, "seaborn-strip-plot"]], "Seaborn: Violin Plot": [[150, "seaborn-violin-plot"]], "Select best threshold": [[8, "select-best-threshold"]], "Select bottom n rows in pandas DataFrame": [[128, "select-bottom-n-rows-in-pandas-dataframe"]], "Select bottom rows except for first n rows": [[128, "select-bottom-rows-except-for-first-n-rows"]], "Select bottom rows from the multi index DataFrame": [[128, "select-bottom-rows-from-the-multi-index-dataframe"]], "Select top n rows in pandas DataFrame": [[128, "select-top-n-rows-in-pandas-dataframe"]], "Select top rows except for last n rows": [[128, "select-top-rows-except-for-last-n-rows"]], "Select top rows from multi-index DataFrames": [[128, "select-top-rows-from-multi-index-dataframes"]], "Select value using row and column labels using DataFrame.at": [[128, "select-value-using-row-and-column-labels-using-dataframe-at"]], "Select value using row and column position using DataFrame.iat": [[128, "select-value-using-row-and-column-position-using-dataframe-iat"]], "Selection": [[125, "selection"]], "Self Can Be Avoided": [[99, "self-can-be-avoided"]], "Self Is Here To Stay": [[99, "self-is-here-to-stay"]], "Series": [[125, "series"]], "Server Operational Parameters": [[9, "server-operational-parameters"]], "Set Difference": [[49, "set-difference"]], "Set Intersection": [[49, "set-intersection"]], "Set Symmetric Difference": [[49, "set-symmetric-difference"]], "Set Union": [[49, "set-union"]], "Set index but keep column": [[134, "set-index-but-keep-column"]], "Set index by column number": [[134, "set-index-by-column-number"]], "Set index by keeping old index": [[134, "set-index-by-keeping-old-index"]], "Set index in pandas DataFrame": [[134, "set-index-in-pandas-dataframe"]], "Set index in place": [[134, "set-index-in-place"]], "Set index using a Python range": [[134, "set-index-using-a-python-range"]], "Set index using a column": [[134, "set-index-using-a-column"]], "Set index using a column with duplicates": [[134, "set-index-using-a-column-with-duplicates"]], "Set index using a list": [[134, "set-index-using-a-list"]], "Set index using multiple columns": [[134, "set-index-using-multiple-columns"]], "Set multi-index using a list and column": [[134, "set-multi-index-using-a-list-and-column"]], "Set multi-index using two Python series": [[134, "set-multi-index-using-two-python-series"]], "Set specific value in pandas DataFrame": [[128, "set-specific-value-in-pandas-dataframe"], [128, "id1"]], "Shortcut for if statement (Short-hand if or one-line if)": [[36, "shortcut-for-if-statement-short-hand-if-or-one-line-if"]], "Shortcut of if else (Short Hand if \u2026 else or One line if else)": [[37, "shortcut-of-if-else-short-hand-if-else-or-one-line-if-else"]], "Single Parameter:": [[67, "single-parameter"]], "Single-line docstrings in Python": [[77, "single-line-docstrings-in-python"]], "Slicing and Subsetting": [[118, "slicing-and-subsetting"]], "Solution to Overfitting": [[4, "solution-to-overfitting"], [5, "solution-to-overfitting"]], "Sorting/Describing Data": [[136, "sorting-describing-data"]], "Special Sequences": [[32, "special-sequences"]], "Special literals": [[84, "special-literals"]], "Specify Pattern Using RegEx": [[32, "specify-pattern-using-regex"]], "Specifying a sign while displaying output numbers": [[87, "specifying-a-sign-while-displaying-output-numbers"]], "Split the Data Into Training and Test Sets": [[11, "split-the-data-into-training-and-test-sets"], [16, "split-the-data-into-training-and-test-sets"], [17, "split-the-data-into-training-and-test-sets"], [18, "split-the-data-into-training-and-test-sets"], [19, "split-the-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Subsets": [[13, "split-the-data-into-training-and-test-subsets"]], "Spreading in Python": [[64, "spreading-in-python"]], "Square Brackets []": [[32, "id2"]], "Statistics": [[122, "statistics"], [125, "statistics"]], "String Concatenation Operator (+)": [[45, "string-concatenation-operator"]], "Summary": [[45, "summary"], [46, "summary"], [47, "summary"], [48, "summary"], [49, "summary"], [125, "summary"]], "Summary - MetaCharacters": [[32, "summary-metacharacters"]], "Summary:": [[120, "summary"], [125, "id1"]], "Swarm Plot": [[147, "swarm-plot"], [148, "swarm-plot"]], "Syntax :": [[37, "syntax"], [40, "syntax"]], "Syntax of List Comprehension": [[50, "syntax-of-list-comprehension"]], "Syntax:": [[36, "syntax"], [38, "syntax"], [39, "syntax"], [41, "syntax"]], "Table of Contents": [[109, "table-of-contents"]], "Target Audience \ud83e\uddd0": [[163, "target-audience"]], "The @property Decorator": [[31, "the-property-decorator"]], "The Algorithm": [[3, "the-algorithm"]], "The DataFrame.drop() function": [[129, "the-dataframe-drop-function"]], "The DataFrame.drop_duplicates() function": [[130, "the-dataframe-drop-duplicates-function"]], "The DataFrame.dropna() function": [[131, "the-dataframe-dropna-function"]], "The DataFrame.rename() function": [[132, "the-dataframe-rename-function"]], "The DataFrame.reset_index() function": [[135, "the-dataframe-reset-index-function"]], "The DataFrame.set_index() function": [[134, "the-dataframe-set-index-function"]], "The DataFrame.to_dict() function": [[133, "the-dataframe-to-dict-function"]], "The Difference\u2026": [[36, "the-difference"]], "The difference\u2026": [[37, "the-difference"]], "The dir() built-in function": [[73, "the-dir-built-in-function"]], "The except Clause with Multiple Exceptions": [[64, "the-except-clause-with-multiple-exceptions"]], "The except Clause with No Exceptions": [[64, "the-except-clause-with-no-exceptions"]], "The file Object Attributes": [[61, "the-file-object-attributes"]], "The format() Method for Formatting Strings": [[45, "the-format-method-for-formatting-strings"]], "The from_dict() function": [[126, "the-from-dict-function"]], "The property Class": [[31, "the-property-class"]], "Things to Remember": [[81, "things-to-remember"]], "Things to Remember:": [[33, "things-to-remember"]], "Time Series & LV Plot": [[153, "time-series-lv-plot"]], "Time-Series Plot": [[153, "time-series-plot"]], "To customize the display of DataFrame while printing": [[125, "to-customize-the-display-of-dataframe-while-printing"]], "Toolbox": [[163, "toolbox"]], "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80": [[108, "tools-to-get-a-launch"]], "Topics on Learning Data Science and Machine Learning": [[162, "topics-on-learning-data-science-and-machine-learning"]], "Training Set": [[5, "training-set"]], "Transfer statements": [[35, "transfer-statements"]], "Tuple Methods": [[47, "tuple-methods"]], "Tuple Operations": [[47, "tuple-operations"]], "Two Parameter:": [[67, "two-parameter"]], "Type Conversion": [[44, "type-conversion"]], "Type Conversion of Numbers in Python": [[84, "type-conversion-of-numbers-in-python"]], "Types Of Inheritance": [[96, "types-of-inheritance"]], "Types of Constructors": [[95, "types-of-constructors"]], "Types of Functions": [[67, "types-of-functions"]], "Typical workflow for a ML system": [[0, "typical-workflow-for-a-ml-system"]], "Univariate Linear Regression Demo": [[13, "univariate-linear-regression-demo"]], "Universal  Array Functions (Mathematical operations)": [[121, "universal-array-functions-mathematical-operations"]], "Unpacking": [[64, "unpacking"]], "Unpacking Dictionaries": [[64, "unpacking-dictionaries"]], "Unpacking List or a Tuple": [[64, "unpacking-list-or-a-tuple"]], "Unpacking Lists": [[64, "unpacking-lists"]], "Unpacking a sequence into separate variables": [[90, "unpacking-a-sequence-into-separate-variables"]], "Use __new__ or __init__?": [[99, "use-new-or-init"]], "Use lambda expressions to rename": [[132, "use-lambda-expressions-to-rename"]], "Use of Python Generators": [[28, "use-of-python-generators"]], "Use of global Keyword": [[69, "use-of-global-keyword"]], "Use of inheritance": [[94, "use-of-inheritance"]], "Use of lambda Function in python": [[72, "use-of-lambda-function-in-python"]], "Using Control Statement in for loops in Python": [[40, "using-control-statement-in-for-loops-in-python"]], "Using Control Statement in while loops in Python": [[41, "using-control-statement-in-while-loops-in-python"]], "Using Getters and Setters": [[31, "using-getters-and-setters"]], "Using Langchain": [[109, "using-langchain"]], "Using Python inside Jupyter notebook": [[24, "using-python-inside-jupyter-notebook"]], "Using a code editor of your choice": [[24, "using-a-code-editor-of-your-choice"]], "Using drop with axis='columns' or axis=1": [[129, "using-drop-with-axis-columns-or-axis-1"]], "Using python in a jupyter notebook": [[24, "using-python-in-a-jupyter-notebook"]], "Using r prefix before RegEx": [[32, "using-r-prefix-before-regex"]], "Using rename with axis='columns' or axis=1": [[132, "using-rename-with-axis-columns-or-axis-1"]], "Using the help() Function for Docstrings": [[77, "using-the-help-function-for-docstrings"]], "Utilizing Langchain Features": [[109, "utilizing-langchain-features"]], "ValueError in strptime()": [[54, "valueerror-in-strptime"]], "Variable Function Arguments": [[70, "variable-function-arguments"]], "Vectorized Implementation of Forward Propagation": [[7, "vectorized-implementation-of-forward-propagation"]], "Viewing/Inspecting Data": [[125, "viewing-inspecting-data"]], "Visualize the Fit": [[8, "visualize-the-fit"]], "Welcome to my technical diary \ud83e\udd2f": [[163, "welcome-to-my-technical-diary"]], "What Happens Internally?": [[99, "what-happens-internally"]], "What are lambda functions in Python?": [[72, "what-are-lambda-functions-in-python"]], "What are modules in Python?": [[73, "what-are-modules-in-python"]], "What are packages?": [[76, "what-are-packages"]], "What are user-defined functions in Python?": [[78, "what-are-user-defined-functions-in-python"]], "What is Compiler?": [[91, "what-is-compiler"]], "What is DataFrame in Pandas": [[125, "what-is-dataframe-in-pandas"]], "What is Dictionary in Python?": [[48, "what-is-dictionary-in-python"]], "What is Distribution Plots?": [[146, "what-is-distribution-plots"]], "What is Interpreter?": [[91, "what-is-interpreter"]], "What is List in Python?": [[46, "what-is-list-in-python"]], "What is Machine Learning? \ud83e\udde0": [[0, "what-is-machine-learning"]], "What is MyST?": [[20, "what-is-myst"], [101, "what-is-myst"], [105, "what-is-myst"]], "What is Name in Python?": [[89, "what-is-name-in-python"]], "What is Set in Python?": [[49, "what-is-set-in-python"]], "What is String in Python?": [[45, "what-is-string-in-python"]], "What is Tuple in Python?": [[47, "what-is-tuple-in-python"]], "What is a Namespace in Python?": [[89, "what-is-a-namespace-in-python"]], "What is a function in Python?": [[67, "what-is-a-function-in-python"]], "What is cluster map?": [[157, "what-is-cluster-map"]], "What is for loop in Python?": [[40, "what-is-for-loop-in-python"]], "What is global keyword?": [[69, "what-is-global-keyword"]], "What is heat map?": [[156, "what-is-heat-map"]], "What is hstack?": [[122, "what-is-hstack"]], "What is math module in Python?": [[75, "what-is-math-module-in-python"]], "What is recursion?": [[71, "what-is-recursion"]], "What is self in Python?": [[99, "what-is-self-in-python"]], "What is vstack?": [[122, "what-is-vstack"]], "What is while loop in Python?": [[41, "what-is-while-loop-in-python"]], "What\u2019s inside datetime?": [[52, "whats-inside-datetime"]], "When do we have closures?": [[29, "when-do-we-have-closures"]], "When to use Decimal instead of float?": [[44, "when-to-use-decimal-instead-of-float"]], "When to use closures?": [[29, "when-to-use-closures"]], "While loop in Python FAQs": [[41, "while-loop-in-python-faqs"]], "Why Learn Machine Learning? \ud83e\udd14": [[0, "why-learn-machine-learning"]], "Why Learn Python?": [[22, "why-learn-python"]], "Why and When to use while loop in Python": [[41, "why-and-when-to-use-while-loop-in-python"]], "Why is self explicitly defined everytime?": [[99, "why-is-self-explicitly-defined-everytime"]], "Why should we use Tuple? (Advantages of Tuple)": [[47, "why-should-we-use-tuple-advantages-of-tuple"]], "Why super() keyword": [[96, "why-super-keyword"]], "Why use NumPy?": [[118, "why-use-numpy"]], "Why use for loop?": [[40, "why-use-for-loop"]], "Wide format (untidy)": [[156, "wide-format-untidy"]], "Working of for loop for Iterators": [[27, "working-of-for-loop-for-iterators"]], "Working with large amounts of data": [[136, "working-with-large-amounts-of-data"]], "World Happiness Report 2017": [[9, "world-happiness-report-2017"]], "Wrap up": [[73, "wrap-up"]], "Writing the \u201cHello, World!\u201d Program": [[64, "writing-the-hello-world-program"], [80, "writing-the-hello-world-program"]], "Zero or more times *": [[32, "zero-or-more-times"]], "Zero or one time ?": [[32, "zero-or-one-time"]], "Zip": [[64, "zip"]], "[] . ^ $ * + ? {} () \\ |": [[32, "id1"]], "\\A - Matches if the specified characters are at the start of a string.": [[32, "a-matches-if-the-specified-characters-are-at-the-start-of-a-string"]], "\\B - Opposite of \\b. Matches if the specified characters are not at the beginning or end of a word.": [[32, "b-opposite-of-b-matches-if-the-specified-characters-are-not-at-the-beginning-or-end-of-a-word"]], "\\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \\t\\n\\r\\f\\v].": [[32, "s-matches-where-a-string-contains-any-non-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\W - Matches any non-alphanumeric character. Equivalent to [^a-zA-Z0-9_].": [[32, "w-matches-any-non-alphanumeric-character-equivalent-to-a-za-z0-9"]], "\\Z - Matches if the specified characters are at the end of a string.": [[32, "z-matches-if-the-specified-characters-are-at-the-end-of-a-string"]], "\\b - Matches if the specified characters are at the beginning or end of a word.": [[32, "b-matches-if-the-specified-characters-are-at-the-beginning-or-end-of-a-word"]], "\\d - Matches any non-decimal digit. Equivalent to [^0-9]": [[32, "d-matches-any-non-decimal-digit-equivalent-to-0-9"]], "\\s - Matches where a string contains any whitespace character. Equivalent to [ \\t\\n\\r\\f\\v].": [[32, "s-matches-where-a-string-contains-any-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.": [[32, "w-matches-any-alphanumeric-character-digits-and-alphabets-equivalent-to-a-za-z0-9-by-the-way-underscore-is-also-considered-an-alphanumeric-character"]], "__init__() is not a constructor": [[99, "init-is-not-a-constructor"]], "a) break in for loop": [[40, "a-break-in-for-loop"]], "a) break in while loop": [[41, "a-break-in-while-loop"]], "all(dict) - The all() function returns True when all elements in the given iterable are true. If not, it returns False.": [[48, "all-dict-the-all-function-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "all(list) - The method all() method returns True when all elements in the given iterable are true. If not, it returns False.": [[46, "all-list-the-method-all-method-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "any(dict) - The any() function returns True if any element of an iterable is True. If not, any() returns False.": [[48, "any-dict-the-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "any(list) - any() function returns True if any element of an iterable is True. If not, any() returns False.": [[46, "any-list-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "append() - The append() method adds an item to the end of the list.": [[46, "append-the-append-method-adds-an-item-to-the-end-of-the-list"]], "arange()": [[122, "arange"]], "asarray()": [[122, "asarray"]], "b) continue in for loop": [[40, "b-continue-in-for-loop"]], "b) continue in while loop": [[41, "b-continue-in-while-loop"]], "boxplot() and violinplot()": [[151, "boxplot-and-violinplot"]], "c) pass in for loop": [[40, "c-pass-in-for-loop"]], "c) pass in while loop": [[41, "c-pass-in-while-loop"]], "clear() - The clear() method removes all items from the list.": [[46, "clear-the-clear-method-removes-all-items-from-the-list"]], "clear() - The method clear() removes all items from the dictionary.": [[48, "clear-the-method-clear-removes-all-items-from-the-dictionary"]], "continue statement in while loop": [[42, "continue-statement-in-while-loop"]], "continue statement with else statements": [[42, "continue-statement-with-else-statements"]], "copy()  - The copy() method returns a shallow copy of the list.": [[46, "copy-the-copy-method-returns-a-shallow-copy-of-the-list"]], "copy() - The method copy() returns a shallow copy of the dictionary.": [[48, "copy-the-method-copy-returns-a-shallow-copy-of-the-dictionary"]], "count() - The count() method returns the number of times the specified element appears in the list.": [[46, "count-the-count-method-returns-the-number-of-times-the-specified-element-appears-in-the-list"]], "datetime.date Class": [[52, "datetime-date-class"]], "datetime.datetime": [[52, "datetime-datetime"]], "datetime.time": [[52, "datetime-time"]], "datetime.timedelta": [[52, "datetime-timedelta"]], "extend() - The extend() method adds all the elements of an iterable (list, tuple, string etc.) to the end of the list.": [[46, "extend-the-extend-method-adds-all-the-elements-of-an-iterable-list-tuple-string-etc-to-the-end-of-the-list"]], "for  loop in one line": [[40, "for-loop-in-one-line"]], "for loop inside for loop": [[40, "for-loop-inside-for-loop"]], "for loop inside while loop": [[41, "for-loop-inside-while-loop"]], "for loop with else": [[40, "for-loop-with-else"]], "for loop with if-else": [[40, "for-loop-with-if-else"]], "for loop with range() function": [[40, "for-loop-with-range-function"]], "fromkeys() - The method fromkeys() creates a new dictionary with keys from seq and values set to value.": [[48, "fromkeys-the-method-fromkeys-creates-a-new-dictionary-with-keys-from-seq-and-values-set-to-value"]], "heatmap": [[156, "heatmap"]], "heatmap colors": [[156, "heatmap-colors"]], "heatmap data": [[156, "heatmap-data"]], "if-elif-else statements and Logical Operator": [[38, "if-elif-else-statements-and-logical-operator"]], "if-elif-else statements or Logical Operator": [[38, "if-elif-else-statements-or-logical-operator"]], "if-elif-else statements with logical operators": [[38, "if-elif-else-statements-with-logical-operators"]], "import all names": [[73, "import-all-names"]], "import multiple modules": [[73, "import-multiple-modules"]], "import with renaming": [[73, "import-with-renaming"]], "index() - The index() method returns the index of the specified element in the list.": [[46, "index-the-index-method-returns-the-index-of-the-specified-element-in-the-list"]], "insert() - The insert() method inserts an element to the list at the specified index.": [[46, "insert-the-insert-method-inserts-an-element-to-the-list-at-the-specified-index"]], "issubclass()": [[96, "issubclass"]], "itmes() - The method items() returns a list of dict\u2019s (key, value) tuple pairs.": [[48, "itmes-the-method-items-returns-a-list-of-dicts-key-value-tuple-pairs"]], "keys() - The method keys() returns a list of all the available keys in the dictionary.": [[48, "keys-the-method-keys-returns-a-list-of-all-the-available-keys-in-the-dictionary"]], "lambda function use with filter()": [[72, "lambda-function-use-with-filter"]], "lambda function with map()": [[72, "lambda-function-with-map"]], "lambda function with reduce()": [[72, "lambda-function-with-reduce"]], "len(dict) - The len() function gives the total length of the dictionary. This would be equal to the number of items in the dictionary.": [[48, "len-dict-the-len-function-gives-the-total-length-of-the-dictionary-this-would-be-equal-to-the-number-of-items-in-the-dictionary"]], "len(list) - The len() method returns the number of elements in the list.": [[46, "len-list-the-len-method-returns-the-number-of-elements-in-the-list"]], "len(tuple) - The len() method returns the number of elements in the tuple.": [[47, "len-tuple-the-len-method-returns-the-number-of-elements-in-the-tuple"]], "math module Functions:": [[73, "math-module-functions"]], "max(list) - The max() method returns the elements from the list with maximum value.": [[46, "max-list-the-max-method-returns-the-elements-from-the-list-with-maximum-value"]], "max(tuple) - The max() method returns the elements from the tuple with maximum value. Type of element should be same otherwise complier throw TypeError.": [[47, "max-tuple-the-max-method-returns-the-elements-from-the-tuple-with-maximum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "max, min, argmax, argmin": [[119, "max-min-argmax-argmin"]], "min(list) - this method is used to get min value from the list. In Python3 lists element\u2019s type should be same otherwise compiler throw type Error.": [[46, "min-list-this-method-is-used-to-get-min-value-from-the-list-in-python3-lists-elements-type-should-be-same-otherwise-compiler-throw-type-error"]], "min(tuple) - The min() method returns the elements from the tuple with minimum value. Type of element should be same otherwise complier throw TypeError.": [[47, "min-tuple-the-min-method-returns-the-elements-from-the-tuple-with-minimum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "pop() - The pop() method removes the item at the given index from the list and returns the removed item.": [[46, "pop-the-pop-method-removes-the-item-at-the-given-index-from-the-list-and-returns-the-removed-item"]], "rand": [[119, "rand"]], "randint": [[119, "randint"]], "randn": [[119, "randn"]], "remove() - The remove() method removes the first matching element (which is passed as an argument) from the list.": [[46, "remove-the-remove-method-removes-the-first-matching-element-which-is-passed-as-an-argument-from-the-list"]], "reverse()  - The reverse() method reverses the elements of the list.": [[46, "reverse-the-reverse-method-reverses-the-elements-of-the-list"]], "self in Python, Demystified": [[99, "self-in-python-demystified"]], "setdefault() - The method setdefault() is similar to get but will set dict[key] = default if key is not already in dict.": [[48, "setdefault-the-method-setdefault-is-similar-to-get-but-will-set-dict-key-default-if-key-is-not-already-in-dict"]], "sort()  - The sort() method sorts the elements of a given list in a specific ascending or descending order.": [[46, "sort-the-sort-method-sorts-the-elements-of-a-given-list-in-a-specific-ascending-or-descending-order"]], "sorted(dict) - The sorted() function sorts the elements of a given iterable in a specific order (either ascending or descending) and returns the sorted iterable as a list.": [[46, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [47, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [48, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"]], "str(dict) - The str() function produces a printable string representation of a dictionary.": [[48, "str-dict-the-str-function-produces-a-printable-string-representation-of-a-dictionary"]], "time.sleep() in multithreaded programs": [[59, "time-sleep-in-multithreaded-programs"]], "time.struct_time Class": [[58, "time-struct-time-class"]], "tuple(seq) - The tuple() method converts a list of items into tuples.": [[47, "tuple-seq-the-tuple-method-converts-a-list-of-items-into-tuples"]], "type() - The type() function returns the type of the passed variable. If passed variable is dictionary then it would return a dictionary type.": [[48, "type-the-type-function-returns-the-type-of-the-passed-variable-if-passed-variable-is-dictionary-then-it-would-return-a-dictionary-type"]], "update() - The method update() adds dictionary dict2\u2019s key-values pairs in to dict. This function does not return anything.": [[48, "update-the-method-update-adds-dictionary-dict2s-key-values-pairs-in-to-dict-this-function-does-not-return-anything"]], "value() - The method values() returns a list of all the values available in a given dictionary.": [[48, "value-the-method-values-returns-a-list-of-all-the-values-available-in-a-given-dictionary"]], "while loop inside for loop": [[40, "while-loop-inside-for-loop"]], "while loop inside while loop": [[41, "while-loop-inside-while-loop"]], "while loop with else": [[41, "while-loop-with-else"]], "while loop with if-else": [[41, "while-loop-with-if-else"]], "you output should look like this:": [[94, "you-output-should-look-like-this"]], "\ud83d\udcbb Exercises  \u279e <span class='label label-default'>List</span>": [[37, "exercises-list"], [46, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Date and Time</span>": [[57, "exercises-date-and-time"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Dictionary</span>": [[48, "exercises-dictionary"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Exceptions Handling</span>": [[64, "exercises-exceptions-handling"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Files</span>": [[61, "exercises-files"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Functions</span>": [[67, "exercises-functions"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Higher order functions, Closure and Decorators</span>": [[30, "exercises-higher-order-functions-closure-and-decorators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List Comprehension</span>": [[50, "exercises-list-comprehension"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List</span>": [[38, "exercises-list"], [40, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Module</span>": [[73, "exercises-module"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Objects and Classes</span>": [[94, "exercises-objects-and-classes"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Operators</span>": [[88, "exercises-operators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Python Errors</span>": [[63, "exercises-python-errors"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>RegEx</span>": [[32, "exercises-regex"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Sets</span>": [[49, "exercises-sets"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>String</span>": [[45, "exercises-string"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Tuple</span>": [[47, "exercises-tuple"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Variables</span>": [[83, "exercises-variables"]]}, "docnames": ["content/concepts/Introduction_to_ml", "content/concepts/anomaly-detection", "content/concepts/concepts", "content/concepts/k-means", "content/concepts/linear-regression", "content/concepts/logistic-regression", "content/concepts/markdown-notebooks", "content/concepts/neural-networks", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo", "content/concepts/notebooks/data/README", "content/concepts/notebooks/k_means/k_means_demo", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo", "content/concepts/notebooks/linear_regression/non_linear_regression_demo", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo", "content/core/markdown", "content/core/mymarkdown", "content/essentials/000_Intro_to_Python", "content/essentials/intro_mathematics", "content/essentials/intro_python", "content/essentials/intro_statistics", "content/essentials/mathematics/1_linear_algebra", "content/essentials/python/advanced/001_Python_Iterators", "content/essentials/python/advanced/002_Python_Generators", "content/essentials/python/advanced/003_Python_Closure", "content/essentials/python/advanced/004_Python_Decorators", "content/essentials/python/advanced/005_Python_Property", "content/essentials/python/advanced/006_Python_RegEx", "content/essentials/python/advanced/Python_args_and_kwargs", "content/essentials/python/advanced/advanced_toc", "content/essentials/python/controlflow/000_Python_Flow_Control_statement", "content/essentials/python/controlflow/001_Python_if_statement", "content/essentials/python/controlflow/002_Python_if_else_statement", "content/essentials/python/controlflow/003_Python_if_elif_else_statement", "content/essentials/python/controlflow/004_Python_Nested_if_statement", "content/essentials/python/controlflow/005_Python_for_Loop", "content/essentials/python/controlflow/006_Python_while_Loop", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements", "content/essentials/python/controlflow/controlflow_toc", "content/essentials/python/datatypes/001_Python_Numbers", "content/essentials/python/datatypes/002_Python_String", "content/essentials/python/datatypes/003_Python_List", "content/essentials/python/datatypes/004_Python_Tuple", "content/essentials/python/datatypes/005_Python_Dictionary", "content/essentials/python/datatypes/006_Python_Sets", "content/essentials/python/datatypes/Python_List_Comprehension", "content/essentials/python/datatypes/datatypes_toc", "content/essentials/python/datetime/001_Python_datetime_Module", "content/essentials/python/datetime/002_Python_strftime", "content/essentials/python/datetime/003_Python_strptime", "content/essentials/python/datetime/004_Python_current_date_and_time", "content/essentials/python/datetime/005_Python_get_current_time", "content/essentials/python/datetime/006_Python_timestamp_to_datetime", "content/essentials/python/datetime/007_Python_time_Module", "content/essentials/python/datetime/008_Python_sleep", "content/essentials/python/datetime/datetime_toc", "content/essentials/python/files/001_Python_File_Input_Output", "content/essentials/python/files/002_Python_File_Directory", "content/essentials/python/files/003_Python_File_Exception", "content/essentials/python/files/004_Python_Exceptions_Handling", "content/essentials/python/files/005_Python_User_defined_Exceptions", "content/essentials/python/files/files_toc", "content/essentials/python/functions/001_Python_Functions", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal", "content/essentials/python/functions/003_Python_Function_global_Keywords", "content/essentials/python/functions/004_Python_Function_Arguments", "content/essentials/python/functions/005_Python_Function_Recursion", "content/essentials/python/functions/006_Python_Function_Anonymous", "content/essentials/python/functions/007_Python_Function_Module", "content/essentials/python/functions/008_Python_Function_random_Module", "content/essentials/python/functions/009_Python_Function_math_Module", "content/essentials/python/functions/010_Python_Function_Package", "content/essentials/python/functions/Python_Docstrings", "content/essentials/python/functions/Python_User_defined_Functions", "content/essentials/python/functions/functions_toc", "content/essentials/python/introduction/002_Hello_World", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments", "content/essentials/python/introduction/005_Python_Variables_&_Constants", "content/essentials/python/introduction/006_Python_Literals", "content/essentials/python/introduction/007_Python_Data_Types", "content/essentials/python/introduction/008_Python_Type_Conversion", "content/essentials/python/introduction/009_Python_Input_Output_Import", "content/essentials/python/introduction/010_Python_Operators", "content/essentials/python/introduction/011_Python_Namespace_and_Scope", "content/essentials/python/introduction/1_data_structures_and_agorithms", "content/essentials/python/introduction/Interpreter_Vs_Compiler", "content/essentials/python/introduction/constant", "content/essentials/python/introduction/intro_toc", "content/essentials/python/objects/001_Python_OOPs_Concepts", "content/essentials/python/objects/002_Python_Classes_and_Objects", "content/essentials/python/objects/003_Python_Inheritance", "content/essentials/python/objects/004_Python_Operator_Overloading", "content/essentials/python/objects/objects_toc", "content/essentials/python/objects/self_in_Python_Demystified", "content/essentials/statistics/statistics", "content/markdown", "content/markdown-notebooks", "content/mymarkdown", "content/notebooks", "content/real-world/markdown", "content/real-world/mymarkdown", "content/tools/hf/intro", "content/tools/intro_tools", "content/tools/langchain/intro", "content/tools/langchain/langchain-modules", "content/tools/langchain/langgraph", "content/tools/langchain/langserve", "content/tools/langchain/langsmith", "content/tools/langchain/lcel", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2", "content/tools/matplotlib/matplotlib_toc", "content/tools/numpy/001_Python_NumPy", "content/tools/numpy/002_Python_NumPy_Array_Part1", "content/tools/numpy/003_Python_NumPy_Array_Part2", "content/tools/numpy/004_Python_NumPy_Array_Part3", "content/tools/numpy/005_Python_NumPy_Array_Part4", "content/tools/numpy/Python_Numpy_Exercises_with_hints", "content/tools/numpy/numpy_toc", "content/tools/pandas/001_Python_Pandas_DataFrame", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index", "content/tools/pandas/002_Python_Pandas_Exercise_1", "content/tools/pandas/003_Python_Pandas_Exercise_2", "content/tools/pandas/pandas_toc", "content/tools/seaborn/001_Seaborn_Loading_Dataset", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics", "content/tools/seaborn/003_Matplotlib_vs_Seaborn", "content/tools/seaborn/004_Seaborn_Color_Palettes", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots", "content/tools/seaborn/008_Seaborn_Distribution_Plots", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot", "content/tools/seaborn/016_Seaborn_PairGrid_Plot", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot", "content/tools/seaborn/018_Seaborn_Heat_Map", "content/tools/seaborn/019_Seaborn_Cluster_Map", "content/tools/seaborn/seaborn_toc", "content/tools/tools-for-llms", "content/tools/tools-for-ml", "content/tools/tools-for-nn", "curriculum", "intro"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["content/concepts/Introduction_to_ml.md", "content/concepts/anomaly-detection.md", "content/concepts/concepts.md", "content/concepts/k-means.md", "content/concepts/linear-regression.md", "content/concepts/logistic-regression.md", "content/concepts/markdown-notebooks.md", "content/concepts/neural-networks.md", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo.ipynb", "content/concepts/notebooks/data/README.md", "content/concepts/notebooks/k_means/k_means_demo.ipynb", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/non_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo.ipynb", "content/core/markdown.md", "content/core/mymarkdown.md", "content/essentials/000_Intro_to_Python.ipynb", "content/essentials/intro_mathematics.ipynb", "content/essentials/intro_python.ipynb", "content/essentials/intro_statistics.ipynb", "content/essentials/mathematics/1_linear_algebra.ipynb", "content/essentials/python/advanced/001_Python_Iterators.ipynb", "content/essentials/python/advanced/002_Python_Generators.ipynb", "content/essentials/python/advanced/003_Python_Closure.ipynb", "content/essentials/python/advanced/004_Python_Decorators.ipynb", "content/essentials/python/advanced/005_Python_Property.ipynb", "content/essentials/python/advanced/006_Python_RegEx.ipynb", "content/essentials/python/advanced/Python_args_and_kwargs.ipynb", "content/essentials/python/advanced/advanced_toc.md", "content/essentials/python/controlflow/000_Python_Flow_Control_statement.ipynb", "content/essentials/python/controlflow/001_Python_if_statement.ipynb", "content/essentials/python/controlflow/002_Python_if_else_statement.ipynb", "content/essentials/python/controlflow/003_Python_if_elif_else_statement.ipynb", "content/essentials/python/controlflow/004_Python_Nested_if_statement.ipynb", "content/essentials/python/controlflow/005_Python_for_Loop.ipynb", "content/essentials/python/controlflow/006_Python_while_Loop.ipynb", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements.ipynb", "content/essentials/python/controlflow/controlflow_toc.md", "content/essentials/python/datatypes/001_Python_Numbers.ipynb", "content/essentials/python/datatypes/002_Python_String.ipynb", "content/essentials/python/datatypes/003_Python_List.ipynb", "content/essentials/python/datatypes/004_Python_Tuple.ipynb", "content/essentials/python/datatypes/005_Python_Dictionary.ipynb", "content/essentials/python/datatypes/006_Python_Sets.ipynb", "content/essentials/python/datatypes/Python_List_Comprehension.ipynb", "content/essentials/python/datatypes/datatypes_toc.md", "content/essentials/python/datetime/001_Python_datetime_Module.ipynb", "content/essentials/python/datetime/002_Python_strftime.ipynb", "content/essentials/python/datetime/003_Python_strptime.ipynb", "content/essentials/python/datetime/004_Python_current_date_and_time.ipynb", "content/essentials/python/datetime/005_Python_get_current_time.ipynb", "content/essentials/python/datetime/006_Python_timestamp_to_datetime.ipynb", "content/essentials/python/datetime/007_Python_time_Module.ipynb", "content/essentials/python/datetime/008_Python_sleep.ipynb", "content/essentials/python/datetime/datetime_toc.md", "content/essentials/python/files/001_Python_File_Input_Output.ipynb", "content/essentials/python/files/002_Python_File_Directory.ipynb", "content/essentials/python/files/003_Python_File_Exception.ipynb", "content/essentials/python/files/004_Python_Exceptions_Handling.ipynb", "content/essentials/python/files/005_Python_User_defined_Exceptions.ipynb", "content/essentials/python/files/files_toc.md", "content/essentials/python/functions/001_Python_Functions.ipynb", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal.ipynb", "content/essentials/python/functions/003_Python_Function_global_Keywords.ipynb", "content/essentials/python/functions/004_Python_Function_Arguments.ipynb", "content/essentials/python/functions/005_Python_Function_Recursion.ipynb", "content/essentials/python/functions/006_Python_Function_Anonymous.ipynb", "content/essentials/python/functions/007_Python_Function_Module.ipynb", "content/essentials/python/functions/008_Python_Function_random_Module.ipynb", "content/essentials/python/functions/009_Python_Function_math_Module.ipynb", "content/essentials/python/functions/010_Python_Function_Package.ipynb", "content/essentials/python/functions/Python_Docstrings.ipynb", "content/essentials/python/functions/Python_User_defined_Functions.ipynb", "content/essentials/python/functions/functions_toc.md", "content/essentials/python/introduction/002_Hello_World.ipynb", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers.ipynb", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments.ipynb", "content/essentials/python/introduction/005_Python_Variables_&_Constants.ipynb", "content/essentials/python/introduction/006_Python_Literals.ipynb", "content/essentials/python/introduction/007_Python_Data_Types.ipynb", "content/essentials/python/introduction/008_Python_Type_Conversion.ipynb", "content/essentials/python/introduction/009_Python_Input_Output_Import.ipynb", "content/essentials/python/introduction/010_Python_Operators.ipynb", "content/essentials/python/introduction/011_Python_Namespace_and_Scope.ipynb", "content/essentials/python/introduction/1_data_structures_and_agorithms.ipynb", "content/essentials/python/introduction/Interpreter_Vs_Compiler.ipynb", "content/essentials/python/introduction/constant.ipynb", "content/essentials/python/introduction/intro_toc.md", "content/essentials/python/objects/001_Python_OOPs_Concepts.ipynb", "content/essentials/python/objects/002_Python_Classes_and_Objects.ipynb", "content/essentials/python/objects/003_Python_Inheritance.ipynb", "content/essentials/python/objects/004_Python_Operator_Overloading.ipynb", "content/essentials/python/objects/objects_toc.md", "content/essentials/python/objects/self_in_Python_Demystified.ipynb", "content/essentials/statistics/statistics.ipynb", "content/markdown.md", "content/markdown-notebooks.md", "content/mymarkdown.md", "content/notebooks.ipynb", "content/real-world/markdown.md", "content/real-world/mymarkdown.md", "content/tools/hf/intro.md", "content/tools/intro_tools.ipynb", "content/tools/langchain/intro.md", "content/tools/langchain/langchain-modules.md", "content/tools/langchain/langgraph.md", "content/tools/langchain/langserve.md", "content/tools/langchain/langsmith.md", "content/tools/langchain/lcel.md", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1.ipynb", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2.ipynb", "content/tools/matplotlib/matplotlib_toc.md", "content/tools/numpy/001_Python_NumPy.ipynb", "content/tools/numpy/002_Python_NumPy_Array_Part1.ipynb", "content/tools/numpy/003_Python_NumPy_Array_Part2.ipynb", "content/tools/numpy/004_Python_NumPy_Array_Part3.ipynb", "content/tools/numpy/005_Python_NumPy_Array_Part4.ipynb", "content/tools/numpy/Python_Numpy_Exercises_with_hints.ipynb", "content/tools/numpy/numpy_toc.md", "content/tools/pandas/001_Python_Pandas_DataFrame.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index.ipynb", "content/tools/pandas/002_Python_Pandas_Exercise_1.ipynb", "content/tools/pandas/003_Python_Pandas_Exercise_2.ipynb", "content/tools/pandas/pandas_toc.md", "content/tools/seaborn/001_Seaborn_Loading_Dataset.ipynb", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics.ipynb", "content/tools/seaborn/003_Matplotlib_vs_Seaborn.ipynb", "content/tools/seaborn/004_Seaborn_Color_Palettes.ipynb", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot.ipynb", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot.ipynb", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots.ipynb", "content/tools/seaborn/008_Seaborn_Distribution_Plots.ipynb", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot.ipynb", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot.ipynb", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot.ipynb", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot.ipynb", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot.ipynb", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot.ipynb", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot.ipynb", "content/tools/seaborn/016_Seaborn_PairGrid_Plot.ipynb", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot.ipynb", "content/tools/seaborn/018_Seaborn_Heat_Map.ipynb", "content/tools/seaborn/019_Seaborn_Cluster_Map.ipynb", "content/tools/seaborn/seaborn_toc.md", "content/tools/tools-for-llms.md", "content/tools/tools-for-ml.md", "content/tools/tools-for-nn.md", "curriculum.md", "intro.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 28, 29, 30, 31, 35, 36, 39, 40, 41, 42, 44, 45, 47, 50, 54, 56, 57, 58, 59, 61, 63, 64, 67, 68, 69, 71, 72, 73, 75, 77, 78, 82, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 119, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 160, 163], "0": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 58, 59, 61, 63, 64, 65, 67, 69, 70, 72, 73, 74, 75, 81, 83, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 99, 100, 104, 115, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "00": [52, 53, 54, 56, 58, 59, 87, 125, 126, 128, 143, 144, 150, 153], "000": [44, 144, 149], "0000": [14, 58, 88], "00000": 125, "000000": [45, 53, 54, 87, 125, 136, 137, 139, 144, 155], "0000003": 45, "000007": 16, "000013": 17, "000032": 16, "000036": 17, "000066": 16, "000079": 16, "0000a3": 151, "0001": [44, 52, 58], "000110011001100110011": 44, "000112": 16, "000126": 16, "000155": 16, "000174": 17, "000191": 16, "000214": 16, "000216": 16, "000238": 17, "000269": 17, "000285": 17, "000301": 17, "000325": 17, "000367": 17, "000385": 16, "000410": 17, "000456": 17, "000465": 17, "000550": 17, "000683": 11, "000743": 17, "000917": 16, "000a": 44, "001": [53, 54], "0010": 88, "0011": 88, "001100": 17, "001139": 17, "001178": 17, "00121062e": 153, "001232": 17, "001262": 17, "001270": 16, "001354": 17, "00140327e": 153, "001619": 17, "001665": 17, "001835": 16, "001868": 155, "001873": 16, "001899": 17, "001_python_file_input_output": 62, "002": [53, 54], "002108": 17, "002177": 17, "002200": 17, "002327879593869": 122, "00232788": 122, "002464": 17, "002513": 17, "002841": 17, "002895": 17, "002940": 17, "002_python_file_directori": 62, "003": 13, "003029": 17, "003152": 17, "003456": 16, "003478": 17, "00357518e": 153, "003780": 17, "003845": 17, "003_python_file_except": 62, "004079": 16, "004274": 17, "004291": 17, "004785": 13, "004838": 16, "004_python_exceptions_handl": 62, "005": 153, "005294": 17, "005308": 17, "005356": 155, "005408": 17, "005436": 16, "005742": 17, "005743": 16, "005837": 16, "005978": 17, "005_python_user_defined_except": 62, "00616708": 119, "006191": 151, "006201": 17, "006730": 16, "007": [87, 153], "007120": 16, "007234": 155, "007320": 17, "007525": 16, "00778181e": 153, "007860": 17, "00786338": 122, "007995": 16, "007_python_function_modul": 61, "00826323e": 153, "00856914e": 153, "008831": 17, "009": 45, "009066": 17, "009417": 16, "009509": 17, "009529": 17, "00960206e": 153, "009757": 17, "01": [11, 13, 45, 52, 53, 54, 56, 58, 59, 87, 139, 143, 146, 148, 149, 150, 151, 153, 155], "010": [45, 153], "0100": 88, "010000": 125, "0101": 88, "010289": 17, "010311": 16, "01032310e": 153, "01051775e": 153, "010527": 17, "010755": 17, "011255": 16, "011523": 151, "011630": 17, "011743": 17, "01183409e": 153, "012098": 17, "012345": 45, "0123456789": 73, "012986": 17, "013148": 17, "013316": 17, "013350": 17, "01345985e": 153, "013474": 17, "013555": 17, "013763": 17, "013853": 17, "014127": 17, "014374": 16, "014745": 17, "015672": 16, "015862": 17, "015877": 17, "016288": 17, "016705": 15, "01710843e": 153, "017837": 17, "019028": 16, "01919923e": 153, "019404": 17, "019542": 17, "019561": 16, "019608": 125, "019675": 17, "019745": 17, "019922": 12, "01_learn_python4data": [62, 73, 137], "01x345": 45, "02": [12, 52, 53, 54, 58, 59, 139, 153], "020391": 16, "020408": 136, "021069": 151, "021708": 15, "021838": 17, "021854": 16, "02210": [38, 40], "022326": 16, "022727": 136, "022960": 17, "02319487": 122, "023622": 17, "024045": 17, "024052": 15, "024253": 17, "025000": 144, "025347": 17, "025388": 17, "02539500e": 153, "025531": 17, "025549": 16, "025678": 17, "026005": 17, "026023": 17, "026366": 17, "026648": 17, "02683718e": 153, "027404": 17, "027513": 17, "028090": 17, "028452": 15, "028944": 17, "028969": 17, "02919730e": 153, "02928161e": 153, "029371": 17, "029398": 17, "02989209e": 153, "03": [24, 45, 59, 139, 153], "030114": 151, "03068156e": 153, "030774": 139, "030971": 17, "030e2eec799d": 30, "031250": 136, "03145352": 122, "032258": 136, "032475": 16, "03247675": 122, "032878": 16, "033011": 17, "033088": 17, "033175": 16, "033192": 17, "033395": 17, "03348578e": 153, "03387531e": 153, "033911": 17, "034357": 15, "03461004": 122, "035009": 17, "03505598723366": 73, "035149": 16, "035714": 136, "036166": 17, "036300": 17, "037224": 16, "037445": 17, "037732": 17, "037747": 17, "038202": 17, "038580": 16, "039631": 151, "039698": 17, "039919": 17, "03ed55": 73, "03pm": 53, "04": [52, 58, 59, 139, 143], "040000": 125, "040986": 17, "041750": 17, "042011": 16, "042190": 15, "042849": 8, "042857": 136, "042991": 17, "043293": 17, "044382": 17, "045016": 17, "045985": 17, "04617067e": 153, "046456": [11, 13], "046484": 17, "046815": 8, "04702762e": 153, "047295": 16, "047347": 17, "04763428": 119, "048227": 17, "048779": 17, "048819": 12, "049796": 17, "04_python_funct": [61, 73], "05": [8, 53, 54, 59, 139], "0500": [149, 151], "05017144e": 153, "050218": 17, "050755": 17, "05082974": 119, "051020": 136, "051179": 17, "051267": 15, "051891": 17, "05233094e": 153, "052387": 12, "053816": 17, "05473060e": 153, "055217": 17, "055903": 17, "056380": 16, "05655136772680869": 74, "05669558e": 153, "057333": 139, "058497": 16, "058710": 17, "058824": 136, "058849": 17, "05908a030c74": 95, "059554": 17, "05_python_fil": 62, "06": [52, 53, 54, 55, 56, 58, 59, 139, 141], "061065": 17, "06161913e": 153, "061689": 17, "061915": 17, "062439": 17, "062500": 136, "063577": 155, "064516": 136, "065211": [11, 13], "065444": 17, "06563599e": 153, "065897": 17, "065937": 17, "06663512e": 153, "066667": 125, "068044": 12, "068645": 15, "06947804e": 153, "069723": 12, "07": [53, 54, 56, 59], "070254": 17, "070279": 17, "070574": 17, "0708": 149, "072182": 15, "073129": 11, "073160": 16, "073595": 17, "073709": 153, "073953": 17, "074074": 136, "07450952e": 153, "0750": 149, "07659773e": 153, "076923": 136, "077036": 151, "078020": 17, "079365": 17, "08": [52, 56, 58, 59], "080169": 153, "08143941": 119, "08309749e": 153, "083132": 15, "083174": 17, "083261": 17, "08333022e": 153, "083333": [125, 136], "084423": 17, "08553692": 121, "085536923187668": 73, "086334": 17, "086505": 17, "086688": 12, "086780": 16, "087": 11, "087328": 17, "087777": 17, "089286": 136, "09": [53, 54, 59], "090909": 136, "09090909090909": 73, "091695": 17, "091864": 11, "092742": 15, "093484": 17, "096154": 136, "096220": 17, "096812": 17, "09708521e": 153, "097538": [11, 13], "09790012e": 153, "098": 11, "098383": 17, "098661": 17, "098811": 17, "099350157876355": 122, "09935016": 122, "0_": 45, "0a4959e7a13b": 46, "0b": 44, "0b0001": 44, "0b10": [44, 88], "0b1010": 84, "0b1101011": 44, "0d17a834dca2": 70, "0ef33cc3a94d": 63, "0f0f0f": 142, "0f0f0f0f": 142, "0f73a35e8ce2": 81, "0j": [84, 88], "0o": 44, "0o12": 44, "0o15": 44, "0o310": 84, "0x": 44, "0x0000012c87c0af70": 29, "0x000001d284b3b430": 28, "0x000001d8aec3ac10": 95, "0x000001d8aec44eb0": 95, "0x000001d8aec7e1f0": 95, "0x000001d8aec7e4c0": 95, "0x000001d8aec7e5e0": 95, "0x00000218ffc65220": 97, "0x0000021e45765b20": 94, "0x0000021e45765dc0": 94, "0x00007ffad7cb2770": 29, "0x000a": 44, "0x12c": 84, "0x12c4cb88d90": 154, "0x12c4df5c1c0": 154, "0x12c4e273c70": 154, "0x12c50e26c10": 154, "0x12c53a52d60": 154, "0x12c53affc10": 154, "0x163ca247070": 157, "0x163cdf926d0": 157, "0x163ce3245e0": 157, "0x163cfcc79d0": 157, "0x163d0288250": 157, "0x163d05bfa60": 157, "0x163d0f2ae20": 157, "0x1662f00ac70": 145, "0x16633986eb0": 145, "0x166339f84c0": 145, "0x16635a26b80": 145, "0x16635a63550": 145, "0x170b84f24a0": 31, "0x1a11b1a6e80": 148, "0x1a11b2e7a00": 148, "0x1a11b349eb0": 148, "0x1a2186f5940": 155, "0x1a21896cac0": 155, "0x1a218c77d30": 155, "0x1a218d2d6a0": 155, "0x1a218de36a0": 155, "0x1a21a1a7310": 155, "0x1a21a449490": 155, "0x1a21a492c70": 155, "0x1a21b6eba00": 155, "0x1be276a14a8": 157, "0x1bfbd546670": 146, "0x1bfbe8c42b0": 146, "0x1bfbe8d2640": 146, "0x1bfbeacc8b0": 146, "0x1bfbf65d610": 146, "0x1ce07cb24f0": 151, "0x1ce07cc58e0": 151, "0x1da1f804700": 152, "0x1da1f8bf520": 152, "0x1da209c66d0": 152, "0x1da20f86b20": 152, "0x1da20fa4c10": 152, "0x1da214a06d0": 152, "0x1edcdfafd30": 153, "0x219288a7220": 144, "0x2192d5bb3a0": 144, "0x2192de12c70": 144, "0x2192dfa48b0": 144, "0x2192e06b910": 144, "0x2192e0be9d0": 144, "0x2192e328640": 144, "0x22c3a5e3ac0": 150, "0x22c3a722fd0": 150, "0x22c3b278670": 150, "0x22c3c78df40": 150, "0x22c3c8f1040": 150, "0x263397171f0": 142, "0x264e0145a90": 141, "0x26bc28689d0": 143, "0x26bc65bb8b0": 143, "0x26bc7611700": 143, "0x26bc7dd6cd0": 143, "0x26bc7eaf0a0": 143, "0x26bc8131250": 143, "0x26bc81b38b0": 143, "0x26bc81e5730": 143, "0x29872f94b20": 149, "0xfb": 44, "1": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 27, 29, 31, 33, 36, 37, 41, 44, 50, 58, 65, 68, 69, 70, 71, 72, 74, 75, 78, 89, 91, 95, 96, 97, 99, 100, 104, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 130, 131, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 155, 156, 157], "10": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 53, 56, 59, 61, 63, 64, 65, 67, 68, 69, 70, 72, 73, 75, 81, 82, 83, 84, 85, 86, 87, 88, 90, 94, 95, 97, 99, 100, 104, 115, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "100": [13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 32, 38, 40, 41, 42, 46, 48, 50, 67, 72, 73, 84, 88, 96, 97, 100, 104, 115, 119, 120, 122, 125, 126, 127, 136, 137, 140, 141, 144, 145, 146, 149, 150, 154, 155], "1000": [12, 14, 19, 41, 44, 50, 71, 83, 88, 94, 116, 122, 143, 149, 150, 151, 152, 153], "10000": [9, 16, 17, 18, 50, 116, 122, 125], "100000": [15, 50, 116, 139], "1000000000000000055511151231257827021181583404541015625": 44, "10026431e": 153, "101": [70, 95, 135, 136, 150, 151, 154, 155], "1010": 88, "101803": 13, "102": [70, 95, 125, 126, 135, 136, 137], "1024": 50, "10276143": 119, "103": [95, 135, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "104": [95, 125, 126, 136, 137], "104504": 16, "105": [11, 32, 73, 136], "1050": 45, "1053": 132, "1054": 132, "1055": 132, "1056": 132, "1057": 132, "106": 136, "106628291529549": 73, "106846": 17, "10696289e": 153, "107": [44, 136], "107072": 17, "107221": 14, "107353": 13, "108": 136, "108178": 17, "109": [70, 125, 136], "109299": 151, "1095522857580948": 147, "109553": 17, "1097501": 119, "1099_file": 83, "10_python_pandas_modul": 137, "10ffff_": 45, "11": [12, 15, 17, 28, 31, 37, 40, 42, 44, 45, 46, 48, 50, 54, 58, 59, 68, 72, 82, 84, 85, 88, 90, 94, 95, 115, 119, 120, 121, 122, 125, 129, 134, 136, 137, 139, 141, 149, 154, 155], "110": [136, 137], "1100": 45, "110110": 91, "110560": 17, "111": [88, 125, 126, 136, 137], "1110": 88, "1111": [32, 88], "111111": [87, 136], "11111111": 122, "112": [136, 137], "11222578": 8, "112483": 17, "11289431e": 153, "113": 136, "1134": 148, "1135": 148, "113538": 17, "1136": 148, "1137": 148, "1138": 148, "114": [125, 126, 136, 137], "11421774e": 153, "115": [125, 126, 136, 137], "1151515151515152": 141, "115551": 17, "115799": 11, "1158": 148, "1159": 148, "115971": 17, "116": 136, "1160": 148, "1161": 148, "1162": 148, "117": 136, "11734513e": 153, "117543": 17, "117647": 136, "117668": 17, "118": 136, "11818328e": 153, "119": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "119e50d96cfb": 63, "12": [8, 10, 12, 14, 16, 18, 19, 24, 28, 32, 33, 36, 37, 38, 39, 40, 42, 44, 45, 46, 48, 50, 53, 54, 56, 57, 58, 59, 63, 65, 67, 68, 72, 73, 84, 85, 87, 88, 90, 94, 99, 119, 120, 121, 122, 129, 136, 137, 141, 142, 143, 148, 150, 151, 153, 155, 156], "120": [4, 42, 70, 73, 125, 127, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "1200": 88, "12000": 116, "121": 136, "1212": 90, "121492": 17, "122": [12, 136], "122967": 17, "123": [12, 45, 86, 90, 136], "12336799": 119, "123456789": 45, "1234567890": [33, 84], "1234567890123456789": [44, 85], "12345678901234568": [44, 85], "12345678910": 41, "123774": 11, "124": [12, 86, 136], "124377": 17, "125": [12, 41, 50, 73, 115, 121, 136], "125000": 136, "1252": 139, "12587": 150, "126": [12, 136], "126257": 151, "126960000": 61, "127": [12, 115, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "1278387305019275": 141, "128": [12, 46, 50, 136], "128440": 125, "12872044e": 153, "129": [12, 136], "12940": [125, 126, 137, 144], "12945": 137, "1295210000": 61, "1296": [50, 139], "129861": 11, "13": [8, 12, 15, 28, 31, 41, 44, 45, 46, 48, 50, 53, 54, 56, 59, 63, 68, 70, 72, 73, 84, 86, 88, 94, 115, 120, 121, 122, 129, 136, 139, 144, 151, 153, 155], "130": [12, 125, 136], "131": [12, 136], "131910": 15, "132": [12, 136], "1326244364": 52, "133": [12, 136], "1333": 149, "134": [12, 136], "13409426e": 153, "13415": [125, 126, 137], "1345": 32, "13495": [125, 126, 137], "13499": 137, "135": [12, 136], "135925": 137, "136": [12, 136], "13680419e": 153, "137": [12, 136], "13756537093": 87, "137723281": 12, "1377422166": 61, "138": [12, 115, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "138264": 125, "139": [12, 136], "13914421e": 153, "13915538e": 153, "13950": [125, 126, 137], "13960670e": 153, "14": [8, 12, 13, 15, 17, 19, 24, 31, 32, 40, 42, 45, 46, 47, 48, 50, 55, 57, 59, 63, 67, 68, 83, 84, 85, 88, 92, 94, 95, 99, 115, 120, 121, 122, 136, 137, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "140": [12, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "14003": 144, "140708960741200": 89, "140708960741232": 89, "140708960741424": 89, "141": [12, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "14112001": 121, "1415": 45, "14159": [73, 75], "141592653589793": [44, 73, 87], "14183273e": 153, "142": [12, 136], "14204329": 122, "142705": 17, "142857": 136, "143": [12, 136], "144": [12, 41, 88, 136], "1445": [139, 148], "1446": 148, "1447": 148, "1448": 148, "1449": 148, "145": [12, 136], "1453": 139, "14577043e": 153, "146": [12, 28, 136], "146124": 17, "14613738e": 153, "146599183": 61, "147": [12, 136], "14770535": 119, "147751": 17, "148": [12, 121, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "148148": 136, "14847551e": 153, "149": [12, 136], "149320": 17, "14j": 84, "15": [8, 12, 15, 16, 17, 18, 19, 29, 31, 32, 33, 36, 37, 39, 40, 42, 44, 45, 46, 47, 48, 50, 53, 54, 58, 59, 64, 65, 67, 73, 85, 88, 94, 95, 115, 120, 121, 136, 137, 139, 141, 143, 148, 149, 151, 152, 153], "150": [12, 14, 15, 84, 97, 115, 116, 125, 136, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "1500": [143, 145], "15000": [65, 116], "150000": 116, "15097": 12, "151": [12, 136], "151165": 151, "1511893559": 52, "151786": 136, "152": [12, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "152862": 17, "1528797322": 53, "153": [41, 136], "153319": 11, "153527": [11, 13], "153883": 17, "154": [125, 126, 136, 137], "1545730073": 57, "1545925769": 58, "1545966844": 58, "1549": 133, "155": 136, "15514180e": 153, "156": [24, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "156250": 136, "156586": 16, "1568291": 150, "15687723e": 153, "157": 136, "15750": 137, "158": [136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "158023": 115, "1582568": 150, "159": 136, "159689": 13, "159790": 17, "16": [8, 12, 15, 27, 30, 31, 40, 41, 42, 44, 46, 47, 48, 50, 59, 65, 72, 73, 78, 83, 84, 85, 88, 94, 95, 96, 120, 121, 122, 136, 137, 139, 143, 144, 146, 148, 149, 150, 151, 154, 155], "160": [125, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "161": 136, "161006790": 61, "161290": 136, "161491": 16, "16188": 125, "162": [67, 136], "1624370069": 57, "1624370297": 58, "162875": 8, "163": 136, "163778": 17, "164": 136, "1647": 146, "165": 136, "16500": [125, 126, 137], "166": [17, 19, 136], "167": 136, "167204": 17, "168": [125, 126, 136, 137], "16807": 50, "168321": 53, "169": [136, 137], "16j": 84, "16pt": 151, "17": [12, 15, 31, 40, 41, 44, 46, 48, 50, 58, 59, 64, 65, 85, 94, 95, 96, 120, 128, 136, 137, 139, 147, 151, 155, 156], "170": 136, "1700": 18, "170215": 17, "17041474e": 153, "171": [125, 126, 136, 137], "17137357e": 153, "171588": 17, "171995": 137, "172": [58, 136], "17254901960784313": 144, "173": 136, "173469": 136, "174": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "174260": 8, "17450": [125, 126, 137], "175": [73, 115, 136], "175000": 116, "1752011936438014": 44, "176": [70, 73, 125, 126, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "176471": 136, "177": 136, "178": 136, "179": 136, "179027": 17, "17951135e": 153, "179585": 11, "1796": 40, "17995": 137, "18": [12, 15, 27, 31, 36, 37, 40, 42, 48, 49, 50, 52, 53, 55, 56, 59, 61, 65, 87, 88, 90, 95, 96, 115, 120, 125, 126, 128, 136, 137, 139, 150, 154, 155], "180": [41, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "18000": 116, "18089902e": 153, "181": 136, "18176766975113706": 141, "1819": [67, 70], "182": [136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "1821": 67, "1822565": 150, "183": [73, 136], "18324209e": 153, "18344": 137, "184": [136, 137], "184080": 12, "185": 136, "186": 136, "18644463e": 153, "186988000": 61, "187": [136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "187264": [11, 13], "187500": 136, "188": [125, 126, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "1882615260180538": 147, "188828": 17, "189": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "18920": 137, "19": [12, 15, 27, 31, 33, 40, 41, 45, 46, 49, 50, 58, 59, 65, 67, 68, 70, 84, 88, 95, 115, 120, 121, 125, 126, 128, 130, 131, 132, 134, 135, 136, 137, 141, 144, 147, 150], "190": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "1900": 125, "19000": 96, "190337": 15, "190504": 149, "190871": 115, "191": 136, "19116": 95, "192": 136, "192250": 15, "1926": 64, "1928": 40, "192985": 115, "193": [136, 137], "19305918e": 153, "193080": 115, "1937": 24, "194": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "194125062": 61, "1942": 32, "195": 136, "1953": 40, "19566591e": 153, "195915": 8, "196": [115, 122, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "196526332130161": 122, "1966": 45, "19680801": [25, 100, 104], "19692239e": 153, "197": [136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "1970": [52, 57, 58], "19735756e": 153, "197483": 15, "1977": 153, "19789154e": 153, "198": 136, "199": [136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "199128": 16, "199333": 139, "1996": 0, "1997": 0, "19a": 63, "1a2": 32, "1ab34": 32, "1b9ae9b69587": 121, "1d": [118, 119], "1e100": 84, "1e8": 150, "1ee33d": 73, "1f": [45, 116, 151], "1first_nam": 32, "1gcsgplmabavqz26": 73, "1j": [84, 123], "1m": 115, "1num": 83, "1p": 86, "1st": [30, 46, 68, 69, 70, 71, 73], "1variabl": 81, "1x1": [16, 18], "1x2": [16, 18], "1x3": [16, 18], "1x4": [16, 18], "1x5": [16, 18], "1x6": [16, 18], "1x7": [16, 18], "1x8": [16, 18], "1x9": [16, 18], "2": [3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 29, 33, 35, 36, 37, 41, 44, 50, 58, 64, 65, 68, 69, 70, 71, 72, 74, 75, 76, 89, 91, 95, 96, 97, 99, 102, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 160], "20": [11, 12, 13, 15, 16, 17, 18, 19, 27, 29, 31, 33, 39, 40, 41, 42, 44, 45, 46, 49, 50, 52, 56, 59, 64, 65, 67, 68, 70, 72, 73, 85, 88, 94, 95, 115, 118, 120, 121, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 141, 143, 144, 149, 151], "200": [48, 67, 70, 73, 84, 96, 115, 120, 136, 144, 153, 155], "2000": 116, "200000": [116, 125], "200000000000003": 78, "20040757": 122, "200555": 56, "200882": 17, "201": [52, 136], "2011": 115, "2012": [52, 90], "2013": [53, 54], "201300": 151, "2015": [139, 155], "2016": [153, 155], "2017": [11, 13, 52, 141, 155], "2018": [32, 52, 53, 54, 57, 58, 115, 155], "2019": [52, 53, 54, 56, 57, 58, 70], "202": [67, 136], "2020": [56, 125], "2021": [45, 52, 53, 55, 58, 67], "2021pythondatatyp": 45, "2021pythondatayp": 45, "2022": 64, "2023": 24, "20240789e": 153, "202563": 144, "202998": 8, "203": [17, 19, 136], "204": 136, "204451": 17, "20491465": 122, "205": 136, "205306": 15, "2056": 146, "206": 136, "206135893": 61, "207": [136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "20784702e": 153, "208": [136, 137], "20800138e": 153, "20801": 115, "20843398e": 153, "2087a9c41308": 31, "209": 136, "209539": 15, "209800": 15, "20994144e": 153, "20x20": 7, "21": [12, 15, 31, 33, 40, 41, 42, 45, 46, 49, 50, 52, 54, 55, 58, 59, 65, 70, 73, 96, 115, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 143, 146, 148, 149, 150, 151, 155], "210": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "2102": 32, "211": [136, 140], "211349": [11, 13], "211538": 136, "212": [136, 140], "2126": 139, "21260800e": 153, "213": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "21330910940589698": 147, "21355": 12, "213710": 15, "21379529e": 153, "214": [17, 19, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "214286": 136, "214695": 153, "214782": 12, "215": 136, "2154": 122, "216": [41, 50, 73, 136], "217": 136, "21728": 12, "217391": 136, "21741122e": 153, "21748794e": 153, "218": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "21855997e": 153, "2189884": 12, "219": [121, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "21987980e": 153, "22": [12, 15, 24, 45, 46, 49, 50, 52, 53, 55, 56, 58, 59, 65, 70, 72, 73, 88, 120, 121, 122, 126, 136, 139, 149, 151, 155], "220": 136, "220087": 151, "22026": 44, "220657": 17, "221": 136, "222": 136, "222222": 136, "22222222": 122, "22291790e": 153, "223": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "223188": 8, "22357762": 122, "22389": 144, "223905": [11, 13], "22397933e": 153, "224": 136, "22417715e": 153, "224369": 11, "225": 136, "225000": 116, "2251799813685248": 44, "225806": 136, "22592182e": 153, "226": [115, 136], "226677": 13, "22672978": 119, "227": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "22709318e": 153, "22722896e": 153, "228": [115, 136], "228434": 151, "22897": 150, "229": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "22911": 144, "22931538e": 153, "22949": 144, "23": [12, 15, 32, 40, 41, 45, 46, 52, 53, 54, 56, 58, 59, 73, 86, 95, 115, 120, 125, 126, 136, 137, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "230": 136, "2305ca5": 24, "231": 136, "23180804": 119, "232": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "233": [41, 136], "233336": 11, "233423": 52, "23379671": 122, "234": 136, "234566": 52, "234922": 11, "235": 136, "236": 136, "23600": 137, "23606798": 121, "23611012e": 153, "237": 136, "238": 136, "23845": 137, "239": 136, "24": [12, 15, 33, 40, 42, 46, 48, 49, 50, 53, 54, 59, 61, 72, 73, 94, 95, 115, 120, 125, 126, 136, 137, 143, 146, 148, 149, 150, 151, 155], "240": 136, "2401": 50, "241": 136, "242": 136, "24271445e": 153, "24299133e": 153, "242b77ef2a87": 85, "243": [50, 136], "244": [73, 136], "244898": 155, "245": 136, "245426098662": 129, "245483": [11, 13], "245614": 136, "2458": 139, "246": 136, "246154": 125, "24674836e": 153, "24677": 144, "247": [136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "247597": [11, 13], "2476979795053773": 44, "248": 136, "24813498e": 153, "248490": [11, 13], "24865": 150, "249": 136, "25": [12, 16, 17, 18, 19, 24, 30, 33, 40, 41, 42, 44, 46, 48, 49, 50, 53, 57, 59, 61, 64, 73, 84, 85, 87, 88, 94, 95, 115, 116, 120, 121, 125, 136, 139, 141, 143, 144, 146, 150, 151, 155], "250": [97, 136], "2500": [40, 149, 151], "250000": [116, 125, 136, 144], "250fe64180f3": 95, "251": [44, 136], "252": 136, "25231985e": 153, "252785": 13, "253": [44, 136], "2534156": 150, "2535": 139, "254": [94, 136], "25490048e": 153, "255": [9, 11, 16, 17, 18, 19, 73, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "2550": 40, "2557": 146, "2559205": 119, "256": [46, 50, 136], "257": [77, 136], "258": 136, "258364": 15, "258705000": 61, "258745": 150, "259": 136, "259259": 136, "259490": 139, "25th": 125, "26": [12, 45, 46, 47, 49, 50, 56, 59, 73, 94, 115, 120, 125, 126, 136, 137, 139, 143, 149, 151], "260": 136, "261": 136, "261842": 144, "262": 136, "262144": 45, "262680": 16, "263": 136, "263600": 15, "264": 136, "264672": 17, "265": 136, "265008": 12, "26568259e": 153, "26571389e": 153, "266": 136, "267": 136, "268": 136, "269": 136, "27": [12, 29, 33, 40, 41, 42, 49, 50, 56, 58, 61, 70, 72, 87, 88, 94, 115, 120, 121, 125, 126, 136, 137, 149], "270": 136, "271": 136, "271429": 136, "272": 136, "27216990e": 153, "272699": 151, "272727": 136, "273": [31, 136], "274": 136, "275": [136, 148], "27500": 125, "275510": 136, "276": 136, "2761": 11, "276716": [11, 13], "27672348": 119, "277": 136, "277027": [11, 13], "27764243": 119, "278": 136, "278711": 17, "27891384e": 153, "279": 136, "27j": 84, "28": [12, 15, 31, 40, 41, 42, 49, 50, 52, 58, 64, 73, 94, 115, 120, 136, 137, 151], "280": 136, "280702": 136, "281": 136, "281250": 136, "2817": 148, "2818": 148, "2819": 148, "282": 136, "2820": 148, "2821": 148, "2822": 139, "28254475e": 153, "282662": [11, 13], "283": 136, "2833": [149, 151], "28366219": 121, "284": [11, 13, 136], "28418980453852622603883856494709731311218158362293224700445543940796643776911788129508577246309929258069598467896008287596053863082109746801947722280783720032649818198464452375358348619120021135797251857019557032565638659667745421115194468559021541269027438746788486392649581405327516658718317011453858465218779880972140612551504149701082164179367484198570734230003528355826545644223794779911723917115845213739921327820409005460708547942445234906498880588411276755120002108963510955276534630522965966177951626038063994937181228938844252668098515385045718428663547788122173798704717510979319749834083419004355222012043715855123615249682039587844431246269017612728291710718821388840627277407189863509789929339102406655115786899696829902032282666983426897111750208839152830573688512831984602085360572485861376": 88, "285": 136, "286": 136, "28675168e": 153, "287": 136, "287372": [11, 13], "288": 136, "28883356e": 153, "289": 136, "289000": 115, "289474": 144, "28x19": [16, 18], "28x20": [16, 18], "28x21": [16, 18], "28x22": [16, 18], "28x23": [16, 18], "28x24": [16, 18], "28x25": [16, 18], "28x26": [16, 18], "28x27": [16, 18], "28x28": [5, 7, 9, 16, 17, 18, 19], "29": [12, 15, 19, 31, 40, 41, 58, 61, 94, 120, 121, 136, 137, 142, 143, 148, 150, 155], "290": 136, "290549": [11, 13], "291": 136, "291667": 136, "291853": 14, "292": 136, "29235": 12, "293": 136, "293987": 12, "294": 136, "29402596": 122, "29431485e": 153, "2946014910624595": 73, "294804": [11, 13], "294850": 13, "295": 136, "29534113": 122, "295455": 136, "29560668e": 153, "295817": 11, "296": 136, "297": 136, "298": 136, "298226": 11, "299": 136, "29995": 137, "2d": [15, 115, 116, 118, 119, 125, 147, 156], "2d7f5e": 151, "2darrai": [129, 132], "2f": [11, 12, 13, 45, 87, 96, 115, 151, 154], "2f7f4e5fdb49": 59, "2j": [44, 84, 85], "2nd": [30, 45, 46, 47, 68, 69, 71], "2rgxf": 73, "2x": [88, 115], "2x2": [119, 155], "3": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 29, 31, 33, 36, 37, 39, 41, 44, 48, 50, 54, 58, 64, 65, 68, 69, 70, 71, 72, 75, 78, 80, 81, 86, 89, 91, 92, 94, 95, 96, 97, 99, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 155, 156, 157], "30": [14, 17, 19, 29, 30, 31, 37, 40, 41, 42, 45, 46, 50, 52, 53, 54, 56, 58, 64, 67, 68, 69, 70, 73, 83, 85, 88, 89, 94, 115, 120, 125, 136, 141, 144, 146, 148, 149, 152], "300": [18, 31, 46, 83, 84, 115, 136, 142], "3000": [17, 18, 65], "300000": [116, 139], "3000000000000003": 44, "300000e": 87, "301": 136, "301184": [11, 13], "30119580e": 153, "302": 136, "302078": 11, "303": 136, "30378713e": 153, "304": 136, "305": 136, "305880": 15, "306": 136, "306264": 151, "30668723": 119, "307": 136, "308": 136, "308492": 15, "309": 136, "30911403e": 153, "30920635": 119, "31": [31, 40, 41, 52, 53, 54, 58, 73, 94, 115, 136, 137, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "310": [132, 136], "31002414e": 153, "310634": 15, "311": [13, 132, 136], "311099": 16, "312": [132, 136], "3125": 50, "312500": 136, "31287314e": 153, "313": [132, 136], "313125": 14, "313707": [11, 13], "31390556e": 153, "314": [11, 13, 67, 132, 136], "3143": 13, "315": 136, "315317": 11, "3153600000": 88, "31576734e": 153, "315964": [11, 13], "316": [11, 13, 136], "317": 136, "31701798e": 153, "31708111e": 153, "318": 136, "318750": 125, "319": 136, "32": [15, 27, 31, 40, 42, 46, 50, 54, 67, 94, 121, 125, 136, 139, 151, 155], "320": 136, "320879": 13, "321": 136, "321004": 151, "32105794e": 153, "322": 136, "322715": [11, 13], "323": 136, "323947000": 61, "324": 136, "324129": 151, "325": 136, "325394": 11, "326": 136, "326574": [11, 13], "327": 136, "32768": 50, "328": 136, "329": 136, "329871": 11, "33": [13, 15, 40, 45, 52, 59, 70, 73, 86, 87, 94, 96, 115, 122, 136, 137], "330": [42, 136], "33094796e": 153, "331": 136, "33114510e": 153, "331191": 55, "33142653": 119, "332": 136, "33205527e": 153, "333": [45, 52, 88, 136], "333333": 137, "33333333": [44, 121, 122], "333333333333333": 88, "333333333333333481363069950020872056484222412109375": 73, "3333333333333335": 73, "334": 136, "334694": 17, "335": 136, "33516842e": 153, "336": 136, "33662976e": 153, "337": 136, "33768743e": 153, "338": 136, "33856867e": 153, "338695217273813": 122, "339": 136, "34": [32, 41, 52, 59, 73, 88, 94, 120, 122, 136, 137, 139, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "340": [40, 41, 136], "340730": 12, "340909": 136, "341": 136, "342": 136, "34238": 52, "342380": 52, "343": [41, 50, 136], "343280": 11, "343750": 136, "344": [13, 136], "344095": [11, 13], "34435993e": 153, "345": 136, "345081": 15, "3456": 32, "345673": 32, "3456789": 45, "34567890": 87, "3457": 45, "346": [87, 136], "347": [54, 136], "348": [54, 136], "349": [54, 136], "349540": 14, "35": [8, 32, 40, 42, 45, 46, 55, 58, 85, 87, 115, 120, 136, 137, 139, 148, 149, 150, 151], "350": [19, 54, 136], "350000": [116, 139], "351": [54, 136], "352": 136, "35266299": 119, "352682": 11, "353": 136, "354": 136, "354839": 136, "35488217e": 153, "355": 136, "355280": [11, 13], "356": [32, 136], "356651": [11, 13], "357": 136, "357143": 136, "357150": 13, "35731444e": 153, "357765": 11, "358": 136, "359": 136, "35994688e": 153, "36": [28, 40, 41, 42, 45, 50, 67, 81, 87, 115, 136, 139, 142], "360": 136, "36000": 137, "360856": 149, "361": [58, 136], "361467": 11, "362": [58, 136], "362012": [11, 13], "363": 136, "363636": 136, "364": 136, "36492380e": 153, "365": [45, 136], "366": [53, 54, 58, 136], "36699927e": 153, "367": 136, "367007": [11, 13], "36782780e": 153, "368": 136, "3681b3969e27": 65, "36880": 137, "369": 136, "36938945e": 153, "37": [15, 31, 40, 41, 94, 125, 126, 136, 137, 155], "370": 136, "37028": 137, "370370": 136, "371": 136, "37144872e": 153, "37181743e": 153, "372": 136, "373": 136, "37380679e": 153, "374": 136, "375": [61, 136], "375000": [15, 136], "376": 136, "37644": 144, "377": [11, 13, 41, 136], "37796264e": 153, "378": 136, "379": 136, "379273": 11, "379510": [11, 13], "38": [15, 56, 94, 115, 136, 144, 149, 151, 153, 155], "380": 136, "381": 136, "382": 136, "38209653": 119, "38223": 144, "38224839e": 153, "382612": [11, 13], "382817": [11, 13], "383": 136, "38336447": 122, "38385823e": 153, "384": 136, "384232": 15, "38429280e": 153, "384398": 11, "384399": [11, 13], "384403": [11, 13], "385": 136, "385399": [11, 13], "38568225e": 153, "38575866e": 153, "385965": 136, "385970": [11, 13], "386": 136, "387": 136, "387097": 136, "38787858e": 153, "388": 136, "389": 136, "3890561": 121, "389559": 13, "39": [40, 45, 52, 59, 115, 136, 139, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "390": 136, "391": 136, "39119225e": 153, "39169378e": 153, "392": 136, "392857": 136, "393": 136, "393174": 11, "393413": 151, "394": 136, "395": 136, "39594634e": 153, "396": 136, "397": 136, "39764517e": 153, "398": 136, "39801": 32, "398040": 15, "39878883": 119, "399": [46, 136], "39957927e": 153, "3bfaa309574d": 49, "3blue1brown": 7, "3d": [8, 11, 24, 120], "3da34cc7641": 45, "3e859d37287a": 81, "3ec8c6652eef": 71, "3f": [45, 87], "3j": [24, 44, 84, 85, 95], "3rd": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 46, 69, 71, 118, 143], "4": [3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 58, 64, 67, 68, 69, 70, 71, 72, 73, 75, 80, 81, 83, 86, 87, 91, 94, 95, 96, 99, 100, 104, 115, 118, 119, 120, 121, 122, 124, 125, 126, 128, 130, 132, 134, 136, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "40": [12, 15, 40, 42, 50, 59, 64, 70, 85, 87, 88, 115, 120, 127, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "400": [7, 136, 144], "4000": 116, "400000": [116, 137, 139], "40015831": 119, "400770": [11, 13], "401": 136, "402": 136, "403": [11, 136], "403509": 136, "403846": 136, "404": 136, "404206": 14, "404240": 15, "405": 136, "405706": [11, 13], "406": 136, "40603744": 122, "40636423e": 153, "406469": 8, "407": 136, "408": 136, "408520": 8, "408781": 11, "409": [136, 148], "40904134e": 153, "409091": 136, "4096": 50, "40960": 137, "41": [40, 41, 58, 59, 115, 136, 137, 153], "410": [136, 148], "410458": [11, 13], "41083552e": 153, "411": [136, 148], "411377": 15, "412": [136, 148], "41276190e": 153, "41292267e": 153, "413": [136, 148], "41315": 137, "4131591": 121, "414": 136, "41405704e": 153, "41406033e": 153, "41421356": 121, "414368": 153, "415": 136, "4151": 129, "4152": 129, "4153": 129, "4154": 129, "4155": 129, "416": 136, "41614684": 121, "416667": 136, "417": 136, "418": 136, "4186": 129, "4187": 129, "4188": 129, "4189": 129, "419": 136, "4190": 129, "419745": 13, "42": [40, 42, 48, 52, 59, 96, 122, 136, 145], "420": 136, "421": 136, "422": [11, 136], "423": 136, "423522": 12, "423851": 15, "424": 136, "42477796076938": 73, "42499377e": 153, "425": 136, "42530": 150, "42538101e": 153, "426": 136, "42612988": 122, "426227": [11, 13], "427": 136, "427426": [11, 13], "428": 136, "428571": 136, "42857143": 121, "4286f4": 115, "428939": [11, 13], "429": 136, "43": [17, 19, 40, 41, 59, 121, 136], "430": 136, "430182": [11, 13], "4306": 129, "4307": 129, "4308": 129, "4309": 129, "430905": 13, "431": 136, "4310": 129, "43186c7d3555": 81, "43196619e": 153, "432": 136, "433": 136, "433627": 11, "434": 136, "4340020aef34": 95, "43469003": 122, "435": 136, "435540": [11, 13], "43563027": 119, "435633": 52, "435866": 139, "436": 136, "437": 136, "437500": 136, "438": 136, "439": 136, "439305": 15, "44": [58, 59, 136, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "440": 136, "441": 136, "44120621e": 153, "442": 136, "44225798": 119, "442308": [125, 136], "443": 136, "443572": [11, 13], "443705": 15, "4439": 132, "444": 136, "4440": 132, "4441": 132, "4442": 132, "4443": 132, "444444": 136, "44444444": 122, "445": 136, "446": 136, "44666284e": 153, "447": 136, "44794755e": 153, "448": 136, "449": 136, "449489742783178": 73, "4496": 148, "4497": 148, "4498": 148, "4499": 148, "45": [14, 15, 40, 41, 42, 59, 61, 73, 82, 90, 115, 133, 136, 139, 148, 155], "450": 136, "4500": [16, 148], "45000": 125, "451": 136, "45103300e": 153, "452": 136, "453": 136, "45359369": 119, "454": 136, "45400": 137, "45409876e": 153, "454545": 136, "45468093e": 153, "455": 136, "455357": 136, "456": [45, 86, 136], "456140": 136, "457": 136, "458": 136, "4583": 149, "458333": 136, "458614": 14, "459": 136, "45d582f31548": 95, "46": [15, 33, 59, 67, 115, 136, 137, 148, 155], "460": 136, "46063092e": 153, "46075265e": 153, "461": 136, "462": 136, "462272": [11, 13], "463": 136, "464": 136, "4641": 122, "465": 136, "465640": 15, "465794806718": 44, "466": 136, "466366": 13, "4666666666666668": 141, "466b90e7ef2f": 85, "467": 136, "468": 136, "468750": 136, "469": [11, 13, 136], "469388": 136, "47": [40, 41, 52, 59, 136, 137, 139, 148], "470": 136, "47016730e": 153, "470490": [11, 13], "470689": 13, "471": 136, "472": 136, "473": 136, "473137c03db7": 81, "47320909e": 153, "474": 136, "474232": 17, "475": 136, "475540": [11, 13], "476": 136, "476004": 15, "477": 136, "477273": 136, "477699": [11, 13], "4777": 134, "4778": 134, "4779": 134, "477962": 15, "478": 136, "4780": 134, "4781": 134, "478125": 151, "478162": [11, 13], "479": 136, "479139": 11, "479204": [11, 13], "479556": [11, 13], "48": [40, 42, 45, 52, 59, 88, 96, 126, 128, 135, 136, 137, 148], "480": 136, "48013283e": 153, "48048431": 119, "480633": [11, 13], "481": 136, "48122198e": 153, "481349": [11, 13], "482": 136, "482383": [11, 13], "483": 136, "48383283e": 153, "484": 136, "484415": [11, 13], "485": 136, "486": 136, "487": 136, "48755100e": 153, "488": 136, "488215": 13, "488412": 11, "489": 136, "4895": 28, "489796": 125, "49": [38, 40, 41, 42, 48, 50, 58, 59, 73, 136, 137], "490": 136, "490625": 144, "490946": 11, "491": 136, "491228": 136, "491723": 16, "492": 136, "492727": 11, "492754": 136, "49291": 144, "493": [13, 136], "49332966e": 153, "494": [11, 13, 136], "494387": [11, 13], "495": 136, "49521424": 122, "49529338e": 153, "49574452": 122, "49587": 144, "496": 136, "496714": 125, "49690158e": 153, "497": 136, "49769501e": 153, "49798680e": 153, "498": 136, "49890664e": 153, "499": 136, "4999": 19, "49e421f2057c": 86, "4a9f159cd120": 45, "4b26ab49e29c": 27, "4c669126467b": 45, "4d4a0e714c73": 81, "4ed3868a9a2": 46, "4f": [14, 15, 16, 17, 18, 19, 45], "4m": 115, "4th": [46, 47], "5": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 29, 30, 31, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 57, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 82, 83, 84, 86, 87, 89, 91, 94, 95, 96, 97, 99, 100, 104, 115, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 132, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "50": [10, 32, 36, 38, 40, 41, 42, 44, 45, 48, 50, 56, 59, 61, 67, 68, 73, 90, 115, 121, 122, 125, 127, 128, 136, 137, 139, 143, 144, 146, 148, 149, 150, 151, 153, 155], "500": [11, 12, 13, 127, 136, 153], "5000": [9, 17, 19, 65, 153], "50000": [12, 115], "500000": [116, 125, 136, 137, 139], "500005": [11, 13], "501": 136, "502": 136, "502190": 15, "502418": 12, "503": 136, "503945": [11, 13], "504": [11, 13, 136], "505": 136, "5050": [40, 67], "50547116e": 153, "506": 136, "50628105e": 153, "507": 136, "507192": 17, "508": 136, "509": 136, "50b154750974": 81, "50th": 125, "51": [12, 59, 67, 115, 136, 137, 149], "510": 136, "510042": [11, 13], "51026454": 119, "511": 136, "512": [41, 46, 50, 72, 136], "513": 136, "513250": 15, "513433": 153, "513890": 15, "514": 136, "51479": 12, "515": 136, "515941f58fe7": 69, "516": 136, "51601397e": 153, "516129": 136, "51681": 144, "516912": [11, 13], "517": 136, "51782e52f201": 64, "517857": 136, "518": 136, "518519": 136, "519": [88, 136], "52": [59, 115, 125, 126, 136, 137], "520": 136, "52037": 12, "52063": 144, "521": 136, "522": [11, 13, 136], "523": 136, "524": 136, "524770": 15, "525": [13, 136], "52580": 144, "526": 136, "526373": 155, "527": [11, 136], "527393": 52, "527542": [11, 13], "528": 136, "529": 136, "529412": 136, "53": [40, 41, 48, 53, 54, 57, 59, 136, 137, 139, 148, 149, 151], "530": 136, "53037048e": 153, "530624": 13, "531": 136, "531250": 136, "531874": 12, "532": 136, "533": 136, "53341062e": 153, "533524": [11, 13], "53360752e": 153, "534": 136, "5348": 137, "535": 136, "535714": 136, "53590397e": 153, "536": 136, "536747": 11, "536997": 15, "537": [11, 13, 136], "53783010e": 153, "538": 136, "539": 136, "53901780e": 153, "53909609": 119, "54": [40, 41, 42, 52, 59, 72, 83, 94, 115, 121, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 149], "540": 136, "540222": 16, "540247": [11, 13], "54030231": 121, "541": 136, "541667": 136, "5418903291546293": 147, "542": 136, "5425": 150, "542734": 153, "54275813": 119, "543": 136, "54321": 40, "544": 136, "545": 136, "54510477e": 153, "5455131": 150, "546": 136, "546523": 14, "54682": 150, "547": 136, "547083": 153, "547509": 11, "54777888": 119, "548": 136, "548052": 15, "54808": 150, "548195": [11, 13], "549": 136, "54902750e": 153, "55": [40, 41, 52, 59, 67, 73, 122, 127, 129, 132, 136, 147, 155], "550": 136, "551": 136, "551020": 136, "55109787e": 153, "551122": [11, 13], "5513833499989991": 147, "551792": 12, "552": 136, "55283762": 119, "553": 136, "553519": 151, "55360672": 119, "55382448e": 153, "554": 136, "555": [41, 45, 90, 136], "5550161930871431": 122, "555108164c58": 48, "55555556": 122, "555816": 151, "556": 136, "557": 136, "558": 136, "5589": 129, "559": 136, "5590": 129, "5591": 129, "5592": 129, "5593": 129, "55965906e": 153, "56": [24, 39, 40, 42, 48, 52, 56, 59, 73, 125, 126, 128, 135, 136, 137, 155], "560": 136, "56077258e": 153, "561": 136, "561772": [11, 13], "562": 136, "562500": 136, "563": 136, "56348096e": 153, "564": 136, "564980": [11, 13], "565": 136, "56580759e": 153, "566": [54, 136], "56650192e": 153, "567": [54, 136], "56705": 12, "568": [54, 136], "569": [54, 136], "5698": 150, "57": [13, 57, 59, 115, 125, 126, 136, 137], "570": [54, 136], "57057605": 122, "571": 136, "571429": 136, "572": 136, "572094": 13, "57292499e": 153, "573": 136, "57330710e": 153, "57367853e": 153, "574": 136, "575": 136, "576": 136, "576700": 8, "5768efa4a35f": 96, "577": 136, "578": 136, "579": [86, 136], "57953b0b580c": 31, "58": [11, 52, 53, 58, 59, 115, 125, 126, 136, 137, 155], "580": 136, "5808771025513102": 147, "58099293e": 153, "581": 136, "581728": [11, 13], "582": 136, "5828025": 58, "583": 136, "584": 136, "585": 136, "585384": [11, 13], "5854679515581645": 44, "58556641e": 153, "586": 136, "58662330e": 153, "587": 136, "58776": 12, "588": 136, "588235": 136, "588767": 11, "58883361": 122, "58899709e": 153, "589": 136, "58900": 137, "59": [11, 18, 38, 52, 53, 54, 56, 58, 59, 125, 126, 136, 137, 143, 146, 148, 149, 150, 151, 155], "590": 136, "59049": 50, "59068226": 122, "591": 136, "592": 136, "593": 136, "59362951e": 153, "59371929e": 153, "594": 136, "594445": [11, 13], "595": 136, "596": 136, "59621339e": 153, "597": 136, "598": 136, "59815003": 121, "599": 136, "59b7b8cc9b5b": 95, "5aa728677edf": 73, "5b2db8c64782": 45, "5b50fb5d02c4": 70, "5e2": 84, "5f195de51d93": 97, "5m": 115, "5th": [45, 46], "6": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 33, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 58, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 78, 80, 81, 82, 83, 84, 86, 87, 94, 95, 96, 99, 115, 118, 119, 120, 121, 122, 125, 126, 128, 132, 136, 139, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157], "60": [12, 37, 38, 40, 41, 42, 50, 70, 73, 87, 89, 115, 125, 126, 127, 136, 137, 144, 145, 147], "600": [41, 88, 136], "6000": [16, 19, 116], "60000": [9, 16, 17, 18, 19, 94, 115], "600000": 139, "60000000000001": 31, "60059908": 122, "601": 136, "60124": 144, "60154": 144, "601607": [11, 13], "602": 136, "603": 136, "60332219e": 153, "603704": 151, "604": 136, "605": 136, "605370": 139, "606": 136, "60631cbc73b0": 68, "60683359e": 153, "607": 136, "60786967": 119, "608": 136, "60811794e": 153, "60818266e": 153, "609": [11, 136], "609060": 17, "60966": 12, "61": [48, 58, 125, 126, 136, 137, 143, 146, 148, 149, 150, 151, 155], "610": [41, 136], "610574": [11, 13], "611": [13, 136], "611101": [11, 13], "611172": 151, "612": 136, "612924": [11, 13], "613": 136, "614": 136, "614062": [11, 13], "614349": 12, "61440440e": 153, "614655": 15, "615": 136, "61500": 137, "616": 136, "616463": [11, 13], "61670566e": 153, "61675899e": 153, "617": 136, "617722": 12, "61784629": 119, "617951": [11, 13], "618": 136, "619": 136, "6197751905438615": 73, "62": [67, 136, 137, 150], "620": 136, "620071": [11, 13], "621": 136, "621415": 151, "622": 136, "622030": [11, 13], "622167": 151, "62242956e": 153, "623": 136, "62311335e": 153, "624": 136, "625": [50, 136], "62500": 125, "62503489e": 153, "626": 136, "626007": [11, 13], "62636": 144, "627": 136, "627163": [11, 13], "6274509803921569": 144, "62792336e": 153, "628": 136, "629": 136, "629630": 136, "62996541e": 153, "63": [40, 42, 63, 64, 67, 86, 87, 136, 148, 155], "630": 136, "63033250e": 153, "631": 136, "631579": 136, "63158859": 119, "632": 136, "63212579e": 153, "63238643": 122, "633": [70, 136], "6338": 137, "633974": 13, "634": 136, "63465586e": 153, "635": [13, 136], "635423": [11, 13], "635457": 16, "635574": 15, "636": 136, "637": 136, "6377": 137, "638": 136, "639": 136, "64": [16, 17, 18, 19, 24, 40, 41, 42, 46, 50, 72, 121, 136, 155], "640": 136, "64000": 115, "64034418e": 153, "641": 136, "64154651": 150, "642": 136, "643": 136, "64387910e": 153, "644": 136, "645": 136, "645161": 136, "646": 136, "647": 136, "647689": 125, "648": 136, "6488": 137, "649": 136, "65": [36, 37, 38, 45, 86, 126, 128, 135, 136, 155], "650": 136, "65000": 115, "650667": 13, "651": 136, "651253": 155, "652": [13, 136], "65235094": 122, "653": 136, "65364362": 121, "654": 136, "654593": 57, "655": 136, "65575249e": 153, "65596512e": 153, "656": 136, "6561": 50, "65628077": 119, "656404": 151, "657": 136, "6575": 137, "658": 136, "659": 136, "65903086e": 153, "66": [39, 40, 45, 69, 87, 136, 137, 143, 146, 148, 149, 150, 151, 155], "660": 136, "66000": 115, "660125": 15, "661": 136, "6611852": 150, "662": 136, "663": 136, "664": 136, "665": 136, "666": [48, 136], "666451": 8, "66666667": 122, "667": 136, "667565": 151, "668": 136, "669": 136, "67": [41, 45, 121, 136, 137, 155], "670": 136, "670396": 155, "671": 136, "672": 136, "673": 136, "674": 136, "675": 136, "67526014e": 153, "676": 136, "67631096e": 153, "676366": 8, "677": 136, "67761063e": 153, "678": 136, "6785": 137, "678571": 136, "679": 136, "68": [115, 129, 132, 136, 137, 143, 146, 148, 149, 150, 151, 153, 155], "680": 136, "680027": 13, "681": 136, "681159": 136, "682": 136, "682091": 155, "683": 136, "6833": 16, "68334519e": 153, "683673": 136, "684": 136, "684211": 136, "684940": 15, "685": 136, "68572271": 122, "686": 136, "68602648": 119, "68603251e": 153, "68671849e": 153, "687": 136, "68744134": 119, "68747069e": 153, "688": 136, "689": 136, "69": [38, 40, 126, 136, 137, 155], "690": 136, "69001671e": 153, "691": 136, "6918": 137, "692": 136, "692250": 15, "69258130e": 153, "69272794e": 153, "693": 136, "6931471805599453": 73, "69343173": 119, "693597": 13, "69361323e": 153, "694": 136, "695": 136, "696": 136, "697": 136, "69736459e": 153, "69791535": 119, "698": 136, "698874": 15, "699": 136, "69901020e": 153, "699560": 15, "6ab0f28c63a7": 65, "6ac8e81b6f0c": 63, "6f47904706aa": 121, "6f8260f6f5bb": 68, "6j": [44, 85, 95], "6m": 115, "6p": 87, "6th": 45, "6x": 88, "7": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 30, 31, 33, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 56, 58, 59, 61, 64, 67, 68, 69, 70, 72, 73, 82, 83, 84, 85, 86, 87, 88, 95, 96, 97, 99, 115, 119, 120, 121, 122, 125, 126, 132, 136, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157], "70": [36, 38, 40, 42, 50, 70, 115, 126, 128, 133, 135, 136, 137, 143, 144, 155], "700": [136, 154], "700557": 15, "701": 136, "70166723e": 153, "702": 136, "703": 136, "703704": 136, "704": 136, "704545": 136, "705": 136, "705882": 136, "706": 136, "706461": 13, "706585": 11, "707": 136, "707107": 125, "708": 136, "70805473e": 153, "709": 136, "7091468499697177e": 141, "70974533": 8, "71": [136, 137, 143, 149, 150, 151], "710": 136, "711": 136, "712": 136, "713": 136, "714": 136, "71400": 137, "714286": 137, "71432477e": 153, "715": 136, "715070": 149, "716": 136, "71671100e": 153, "717": 136, "71755233e": 153, "718": 136, "71828": [73, 75], "718281828459045": 73, "71828183": 121, "719": 136, "72": [40, 42, 67, 125, 128, 136, 155], "720": [44, 71, 73, 136], "721": 136, "722": 136, "72223991e": 153, "72247358e": 153, "723": 136, "72352380e": 153, "724": 136, "724490": 136, "724638": 136, "725": 136, "726": 136, "72638167e": 153, "727": 136, "72708198e": 153, "727273": 136, "72765023e": 153, "728": 136, "72888392e": 153, "729": [41, 50, 72, 136], "72964213e": 153, "73": [32, 136], "730": 136, "730982": 12, "731": 136, "731755": 139, "732": 136, "73205081": 121, "733": 136, "73370838": 122, "734": 136, "734673": 155, "735": 136, "73524094": 122, "7359b7dba965": 41, "736": 136, "737": 136, "73712819e": 153, "738": 136, "739": 136, "74": 136, "740": 136, "74098031e": 153, "741": 136, "741152": 8, "74149939e": 153, "741935": 136, "742": 136, "743": 136, "74304829e": 153, "74307119e": 153, "74371246e": 153, "744": [94, 136], "74400348e": 153, "744281": 155, "744415": 11, "74486871e": 153, "745": 136, "74509907e": 153, "746": 136, "746011": 155, "747": 136, "748": 136, "749": 136, "75": [59, 115, 122, 125, 126, 136, 139, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "750": 136, "750000": [125, 136, 137, 144, 155], "750615": 149, "75075a70c90": 120, "7507bdc665d5": 30, "751": 136, "751712": 12, "752": 136, "75209323e": 153, "753": 136, "754": 136, "755": 136, "755102": 155, "756": 136, "75665366e": 153, "7568025": 121, "757": 136, "758": 136, "758000": 139, "759": 136, "75th": 125, "76": [32, 122, 136, 150, 155], "760": 136, "76093000e": 153, "761": 136, "761378": 12, "762": 136, "762238": 139, "762329": 155, "76249894": 122, "763": 136, "763270": 8, "76344": 12, "764": 136, "765": 136, "765298": 139, "765539": 11, "766": [122, 136], "766294": 14, "767": 136, "768": [136, 139], "769": 136, "769231": 136, "76a0a5ce1450": 59, "76bf7a927991": 70, "77": [40, 70, 85, 87, 120, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 143, 150], "770": 136, "771": 136, "772": 136, "77237368": 122, "772579": 16, "772900": 17, "773": [90, 136], "774": 136, "775": [16, 17, 136], "775403": 13, "776": [16, 17, 136], "77678046e": 153, "777": [16, 17, 136], "7776": 50, "77777778": 122, "777778": 136, "778": [16, 17, 136], "779": [16, 17, 136], "78": [72, 122, 125, 136, 143, 155], "780": [16, 17, 136], "780573": 12, "781": [16, 17, 136], "781250": 136, "782": [16, 17, 136], "782dbd1412fe": 132, "783": [16, 17, 136], "784": [9, 16, 17, 18, 19, 136], "784433": 15, "785": [9, 16, 17, 18, 19, 136], "785269": 150, "785280": 150, "785714": 136, "786": 136, "78673234e": 153, "787": 136, "788": 136, "78883111e": 153, "789": [45, 136], "7898": 137, "78993856e": 153, "79": [73, 125, 136, 137], "790": 136, "79018354e": 153, "79025614": 122, "791": 136, "792": 136, "792566": [11, 13], "79270929e": 153, "793": 136, "794": [136, 139], "795": 136, "795455": 136, "795521": 15, "796": 136, "796667": [11, 13], "79671774e": 153, "797": 136, "797101": 136, "7975": [125, 126, 137], "798": 136, "79823164": 119, "799": 136, "7995": [125, 126, 137], "79998373e": 153, "7c9145eb11e9": 88, "7e786bcbd078": 65, "7f1fefd4d3f0": 48, "7fce570bf337": 85, "8": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 30, 31, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 58, 59, 61, 64, 65, 67, 68, 69, 70, 72, 73, 80, 82, 83, 85, 86, 87, 88, 92, 94, 95, 97, 99, 115, 119, 120, 121, 122, 125, 126, 128, 129, 132, 134, 136, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156], "80": [11, 13, 16, 17, 18, 19, 38, 40, 42, 50, 73, 115, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 144, 148, 152, 155], "800": [136, 144], "8000": [17, 19, 116], "80000": 125, "800000": [136, 139], "801": 32, "801005": 12, "8036360430009386": 44, "806452": 136, "807018": 136, "809158": [11, 13], "80966303e": 153, "81": [36, 40, 41, 42, 48, 50, 67, 86, 125, 126, 136, 137], "810696": [11, 13], "812500": 136, "8138b0729954": 48, "814809": 153, "816327": 136, "816653826391969": 99, "816760": [11, 13], "81788758": 122, "8189": 137, "81893678": 119, "81945073e": 153, "82": [125, 126, 136, 137], "821429": 136, "822132": 8, "82636160e": 153, "82647438e": 153, "82701252e": 153, "827153": 153, "828066": 139, "82974801e": 153, "83": [17, 67, 125, 126, 136], "830770": 151, "830875": [11, 13], "83098322e": 153, "831415": 11, "83161031e": 153, "83263141": 8, "83288998e": 153, "83319662e": 153, "8333333333333334": 88, "833552": [11, 13], "834558": [11, 13], "83464298e": 153, "835299": 144, "83727878e": 153, "83770503": 119, "83847501e": 153, "84": [96, 125, 136], "840201": 11, "84147098": 121, "84254180e": 153, "843333": 139, "843750": 136, "843887": [11, 13], "846939": 136, "846976": 151, "847": 90, "84915141e": 153, "85": [11, 87, 115, 119, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 144, 145, 152], "850000": 144, "85051737e": 153, "851852": 136, "853181": 8, "85505447": 119, "855366": 13, "857142857142854": 87, "857143": 136, "858131": [11, 13], "858904": 14, "85956433e": 153, "86": [56, 125, 126, 136, 137, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "8625": 149, "86299475e": 153, "863636": 136, "86635ab2cc7": 95, "868809": 15, "869565": 136, "87": [115, 125, 126, 128, 135, 136, 137, 150], "871429": 136, "872": 11, "87236687": 119, "87285499e": 153, "87380356": 122, "875000": 136, "87646883e": 153, "8778": 137, "87786341e": 153, "87853325e": 153, "87970769e": 153, "88": [15, 115, 122, 125, 126, 133, 136, 137, 143, 152], "88165065e": 153, "884058": 136, "88618684": 122, "88888889": 122, "89": [12, 18, 32, 38, 41, 73, 115, 125, 136, 137, 150], "8904402624046048": 147, "891691": 8, "89380846e": 153, "894992": 153, "89632087": 119, "899084": 8, "8b5cab780f33": 68, "8cc0f1bdc5ed": 83, "8f0bbdfdf6e5": 46, "8th": 47, "9": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 30, 33, 36, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 58, 59, 61, 64, 65, 67, 68, 69, 70, 72, 73, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 97, 99, 115, 118, 119, 120, 121, 122, 125, 126, 128, 132, 133, 134, 136, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "90": [12, 16, 38, 40, 41, 42, 45, 50, 67, 68, 70, 83, 84, 87, 89, 94, 115, 126, 128, 133, 135, 136, 144, 148, 152], "900": [68, 94], "900000": 139, "900000e": 45, "90093797e": 153, "901514": 15, "90264482e": 153, "90328251e": 153, "903846": 136, "906250": 136, "907975": 11, "90891100e": 153, "909091": 136, "90929743": 121, "909784": 13, "91": [12, 61, 86, 115, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139], "91174698": 122, "91348997e": 153, "914559": 13, "914701": 8, "91703708e": 153, "919264": 16, "91940167": 119, "92": [12, 115, 136, 152], "922403": 8, "922826": 17, "9250": [149, 151], "925579": 13, "925926": 136, "927536": 136, "928539": 13, "928571": 136, "92fab552c144": 73, "93": [17, 19, 40, 115, 136, 152], "93054890e": 153, "93082264e": 153, "93102691": 119, "93143051": 119, "932169": 13, "932537": 13, "932585": 16, "94": [115, 125, 126, 136, 137, 152], "9412": 18, "944681": 11, "946429": 136, "947368": [136, 144], "9478274870593494": 74, "948141": 15, "95": [12, 115, 125, 136, 137, 142, 143, 150, 151, 152, 153], "954": 142, "95501935e": 153, "956": 11, "9560342718892494": 74, "95892427": 121, "95966987": 119, "96": [12, 14, 16, 18, 37, 38, 39, 40, 41, 45, 48, 63, 64, 70, 83, 94, 115, 125, 136, 143], "96052f3c0c69": 45, "96139878e": 153, "9618232": 58, "96238081e": 153, "96248829": 122, "963404": 149, "964286": 136, "965323": 17, "966365e": 45, "96652011": 122, "96671753e": 153, "966907": 15, "97": [12, 45, 61, 125, 126, 136, 137, 152], "97087710e": 153, "971014": 136, "9717076499418887": 141, "97187673e": 153, "97305419e": 153, "976073": 151, "97739775e": 153, "977974": 17, "97964329e": 153, "98": [31, 45, 125, 136, 146, 155], "980769": 136, "981": 67, "98237187e": 153, "9831": 15, "9834262422606419": 147, "98514058e": 153, "98547": 150, "986095083415364e": 8, "986e6d871071": 33, "987": 41, "98749888": 119, "9899925": 121, "98a1ccc168e9": 70, "99": [37, 40, 45, 48, 53, 54, 82, 84, 85, 87, 119, 125, 126, 136, 137, 143, 146, 147, 148, 149, 150, 151, 155], "99262966e": 153, "994": 148, "994177": 56, "994667": 13, "995": 148, "996": 148, "997": 148, "99714633e": 153, "9976563219": 33, "997677": 155, "99771051": 8, "998": 148, "999": [45, 48, 68, 69, 122], "9995": [125, 126, 137], "999703": 155, "9999": [18, 52, 58, 73], "999926": 155, "999999": [53, 54, 87], "999999999999998": 41, "999999999999999": 121, "9b450cb47d30": 46, "9b9247988596": 63, "9df797f83624": 45, "9e95083e441a": 45, "A": [0, 1, 7, 8, 9, 18, 19, 24, 27, 28, 29, 30, 31, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 57, 59, 61, 62, 63, 64, 67, 68, 70, 71, 73, 76, 77, 80, 81, 82, 83, 84, 85, 87, 88, 89, 91, 94, 95, 96, 99, 115, 118, 119, 120, 122, 125, 126, 128, 129, 132, 133, 135, 136, 139, 142, 147, 148, 149, 150, 151, 152, 153, 155, 156], "AND": 97, "And": [0, 27, 28, 40, 45, 64, 84, 88, 126, 127, 133, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "As": [24, 25, 27, 29, 31, 32, 33, 40, 41, 42, 44, 47, 48, 59, 61, 63, 64, 67, 69, 70, 76, 77, 80, 83, 84, 86, 87, 88, 91, 94, 95, 99, 100, 104, 125, 126, 127, 128, 130, 131, 134, 135, 139, 141, 143, 144, 147, 148, 150, 151, 152, 153, 154, 155, 156], "At": [32, 89, 91, 99, 140, 144, 151, 153, 155], "BUT": [142, 144, 147, 149, 150, 151, 153], "Be": [18, 19, 27], "Being": 49, "But": [4, 5, 7, 10, 25, 28, 29, 30, 35, 38, 41, 42, 44, 45, 47, 49, 50, 64, 70, 72, 73, 78, 82, 83, 85, 87, 88, 94, 95, 97, 100, 104, 125, 126, 127, 130, 131, 132, 134, 135, 141, 142, 143, 144, 150, 151, 152, 153], "By": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 40, 41, 42, 52, 55, 71, 73, 80, 95, 99, 125, 126, 127, 129, 130, 131, 132, 134, 135, 137, 142, 144, 149, 150, 151, 153], "For": [3, 4, 5, 7, 12, 14, 15, 16, 17, 20, 23, 24, 25, 28, 30, 31, 32, 33, 35, 39, 40, 41, 42, 44, 45, 54, 58, 61, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 87, 88, 89, 91, 94, 95, 96, 97, 100, 101, 104, 105, 119, 120, 121, 122, 125, 126, 127, 128, 130, 131, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "IN": 50, "IT": [87, 95, 126], "If": [1, 4, 5, 6, 24, 27, 28, 30, 32, 35, 36, 37, 38, 40, 41, 42, 45, 47, 49, 50, 52, 54, 55, 56, 58, 61, 62, 63, 64, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 82, 83, 87, 89, 91, 94, 95, 96, 99, 102, 108, 118, 121, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 143, 144, 145, 150, 151, 152, 153, 154, 155, 160, 163], "In": [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 96, 97, 99, 108, 109, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "It": [0, 7, 9, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 57, 61, 62, 63, 64, 67, 69, 71, 72, 73, 75, 77, 78, 81, 82, 83, 84, 85, 87, 88, 91, 94, 95, 96, 97, 99, 101, 105, 118, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 142, 145, 146, 147, 150, 152, 153, 154, 155, 156, 162, 163], "Its": [7, 18, 19, 22, 24, 163], "NO": 49, "NOT": [10, 88, 97, 142, 143, 163], "No": [0, 32, 36, 40, 41, 63, 67, 82, 85, 91, 125, 126, 129, 132, 143, 146, 148, 149, 150, 151, 155], "Not": [46, 47, 48, 64, 74, 75, 88, 91, 97, 99, 118, 119, 131, 139, 148], "OR": [32, 88, 97, 139, 150], "On": [4, 8, 16, 17, 18, 19, 27, 29, 41, 48, 49, 61, 68, 70, 73, 91, 95, 118, 144, 151, 155], "One": [0, 7, 28, 31, 45, 52, 59, 73, 76, 82, 83, 94, 99, 120, 140, 141, 142, 143, 149, 151, 153], "Or": [7, 41, 132, 133, 141, 153], "Such": [7, 18, 19, 30, 41, 125, 126, 129, 133], "TO": [30, 136, 153], "That": [6, 24, 29, 35, 38, 45, 47, 61, 64, 97, 102, 141, 148, 150, 151, 152, 154, 155, 156, 160], "The": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 30, 32, 33, 35, 38, 39, 40, 41, 42, 44, 49, 50, 52, 53, 54, 58, 59, 62, 65, 67, 68, 69, 70, 71, 72, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 102, 115, 116, 118, 119, 120, 121, 122, 123, 125, 127, 128, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160], "Their": 147, "Then": [1, 42, 46, 55, 56, 57, 59, 65, 68, 69, 73, 83, 84, 94, 95, 96, 126, 142, 148, 149, 150, 153, 155], "There": [0, 4, 24, 25, 27, 28, 31, 32, 33, 35, 40, 41, 45, 46, 47, 49, 55, 56, 61, 63, 70, 73, 77, 81, 83, 84, 85, 88, 95, 97, 99, 100, 104, 125, 126, 128, 129, 131, 140, 141, 142, 143, 145, 147, 148, 149, 151, 152, 153, 155], "These": [0, 14, 15, 16, 17, 23, 30, 31, 44, 45, 59, 63, 64, 70, 71, 73, 74, 80, 82, 89, 94, 97, 132, 139, 142, 143, 144, 147, 149, 151, 153, 163], "To": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 28, 31, 32, 33, 35, 37, 41, 42, 44, 45, 49, 50, 52, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 73, 75, 77, 82, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 109, 118, 119, 121, 122, 126, 127, 129, 130, 136, 142, 143, 145, 146, 147, 149, 151, 152, 154, 155], "Will": 70, "With": [0, 5, 6, 24, 36, 47, 50, 64, 97, 102, 122, 140, 141, 142, 143, 145, 146, 147, 148, 149, 151, 153, 154, 155, 160], "_": [28, 31, 73, 81, 83, 90, 94, 95, 96, 132, 148, 150, 154], "__": [94, 95, 97], "__add__": 97, "__and__": 97, "__bases__": 95, "__builtins__": [52, 63, 73], "__cached__": [52, 73], "__call__": 30, "__class__": [64, 94, 95], "__closure__": 29, "__d": 96, "__dict__": [31, 77, 95], "__div__": 97, "__doc__": [52, 67, 73, 82, 95], "__eq__": 97, "__file__": [52, 73], "__floordiv__": 97, "__ge__": 97, "__getitem__": [40, 125], "__gt__": 97, "__iadd__": 97, "__idiv__": 97, "__imod__": 97, "__imul__": 97, "__init__": [27, 28, 31, 65, 76, 77, 94, 95, 96, 97, 148], "__invert__": 97, "__ipow__": 97, "__isub__": 97, "__iter__": [27, 28], "__le__": 97, "__loader__": [52, 73], "__lshift__": 97, "__lt__": 97, "__main__": [77, 94, 95, 96, 97, 99], "__maxpric": 94, "__mod__": 97, "__module__": 95, "__mro__": 96, "__mul__": 97, "__name__": [52, 73, 95, 148], "__ne__": 97, "__next__": [27, 28], "__or__": 97, "__package__": [52, 73], "__peg_parser__": 81, "__pow__": 97, "__rshift__": 97, "__salari": 94, "__secretcount": 95, "__spec__": [52, 73], "__str__": [65, 97], "__sub__": 97, "__truediv__": 97, "__version__": [77, 118, 123], "__weakref__": [77, 95], "__xor__": 97, "_add_numeric_oper": 125, "_age": 83, "_age_": 132, "_ax": 148, "_classname__attrnam": 95, "_decor": [132, 142, 148], "_drop_axi": 129, "_if": 83, "_indentation_": 35, "_init_": 64, "_io": 61, "_justcounter__secretcount": 95, "_m": 80, "_m_m_m_m_m_m_m_m_m": 80, "_marks_": 132, "_name_": 132, "_sinplot_": 140, "_strptime": 54, "_strptime_datetim": 54, "_temperatur": 31, "_transform_index": 132, "_y": 151, "a04242241123": 45, "a1": 147, "a2": 147, "a3": 147, "a3e12f": 73, "a8dfd56d4d8": 63, "a_copi": 120, "a_g_": 83, "aa": 32, "aabbcc": 115, "aabc": 32, "ab": [24, 32, 46, 52, 61, 123, 145, 151, 154], "ab123csd": 32, "abacu": 32, "abbrevi": [45, 53, 54, 55, 133, 142, 148, 149], "abc": [32, 40, 46, 47, 87], "abc12d": 32, "abc12de23f456": 32, "abcdef": 115, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 73, "abil": [45, 94, 96, 148], "abl": [4, 7, 23, 27, 29, 70, 86, 89, 96, 140, 143, 147, 149, 150, 151, 153, 154], "abnorm": 42, "abomasnow": 136, "abomasnowmega": 136, "abort": 42, "about": [6, 7, 8, 10, 20, 24, 25, 27, 29, 30, 31, 32, 33, 35, 40, 44, 45, 46, 47, 48, 49, 50, 52, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 75, 77, 81, 82, 83, 84, 85, 86, 87, 89, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 119, 120, 122, 125, 126, 140, 141, 142, 143, 144, 145, 146, 148, 149, 151, 152, 153, 154, 155, 160], "abov": [4, 5, 7, 24, 27, 28, 29, 30, 31, 32, 33, 36, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 59, 61, 63, 64, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 82, 83, 84, 86, 89, 94, 95, 96, 97, 99, 118, 120, 125, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "abra": 136, "abruptli": [40, 41], "absenc": 44, "absol": 136, "absolmega": 136, "absolut": [24, 29, 31, 35, 67, 75], "absolute_valu": 67, "abstract": [63, 94, 147, 149, 150, 153], "abus": 29, "abxz": 32, "abyss": 32, "ac": 32, "academ": 126, "acc": 120, "accelgor": 136, "accent": 145, "accent_r": 145, "accept": [45, 65, 95, 101, 105, 139, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "access": [24, 29, 31, 38, 49, 53, 58, 61, 63, 67, 68, 69, 72, 73, 75, 76, 77, 82, 85, 88, 89, 94, 96, 99, 118, 119, 120, 125, 126, 127, 128, 142, 143, 150], "access_level": 38, "accessor": 125, "accident": 94, "acco": 136, "accomplish": [45, 49, 50, 55, 87], "accord": [38, 67, 78, 88, 97, 153, 155, 156], "accordingli": [41, 61, 89, 140, 142, 143, 144, 153], "account": [15, 30, 147, 151], "account_bal": 94, "account_info": 94, "accur": [0, 4, 5, 11, 13, 16, 17, 18, 19, 37, 38, 44, 75, 85, 144], "accuraci": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19], "acd": 32, "acdbea": 32, "ach": 32, "achiev": [42, 94, 97, 133, 140, 141, 144, 145, 150, 153], "achiv": 45, "acm": 90, "aco": [73, 75], "acordingli": 153, "acosh": [73, 75], "acquaint": [143, 144, 152, 153, 154, 155], "acquir": [94, 96], "acronym": 45, "across": [0, 99, 125, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155], "act": [24, 30, 35, 68, 77, 88, 94, 95, 148, 154], "action": [0, 35, 47, 64, 67, 80, 94, 99, 125, 141, 155], "activ": [7, 18, 19, 24, 57, 155, 162], "actual": [10, 14, 15, 16, 17, 18, 19, 27, 28, 30, 31, 45, 59, 61, 65, 70, 83, 85, 95, 96, 97, 99, 116, 121, 125, 133, 139, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "ad": [4, 5, 11, 12, 13, 14, 15, 16, 17, 24, 30, 31, 32, 40, 42, 44, 46, 47, 49, 57, 63, 67, 86, 87, 96, 121, 122, 125, 126, 127, 133, 135, 139, 140, 141, 143, 148, 149, 150, 151, 153], "adapt": [146, 150, 153, 154, 155], "add": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 29, 30, 32, 33, 37, 38, 40, 41, 47, 49, 50, 63, 64, 67, 69, 70, 72, 73, 78, 82, 83, 84, 86, 87, 88, 94, 95, 96, 97, 115, 116, 118, 121, 122, 125, 126, 127, 132, 135, 140, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 157], "add_": [25, 100, 104], "add_6_and_3": 81, "add_all_num": 67, "add_binari": 77, "add_collect": 148, "add_expens": 94, "add_incom": 94, "add_item": 67, "add_legend": [154, 155], "add_legend_data": 148, "add_patch": 147, "add_prefix": 132, "add_skil": 94, "add_suffix": 132, "add_ten": [29, 67], "add_two_num": 50, "add_two_numb": [67, 70], "adder": 33, "addit": [7, 11, 12, 13, 14, 15, 16, 17, 24, 26, 33, 44, 64, 67, 70, 72, 77, 83, 86, 87, 88, 94, 96, 97, 118, 140, 141, 143, 144, 148, 150, 153, 158], "addition": [23, 94, 144, 151, 153, 154, 155], "address": [4, 5, 38, 40, 48, 61, 83, 151], "adienc": 154, "adjust": [7, 88, 147, 148, 149, 152, 153], "admin": 38, "adopt": 83, "adult_mal": [149, 151], "advanc": [10, 24, 42, 70, 83, 140, 151], "advantag": [10, 27, 91, 140, 150], "advers": 151, "adversari": 162, "advic": 151, "advis": [73, 83, 144, 151], "aegislashblad": 136, "aegislashshield": 136, "aerodactyl": 136, "aerodactylmega": 136, "aesthet": [139, 141, 142, 143, 144, 148, 151, 153, 155, 158], "af0f59439c9b": 29, "affect": [68, 125, 144], "afford": 140, "afmhot": 145, "afmhot_r": 145, "afoo": 32, "afootbal": 32, "afootest": 32, "after": [0, 7, 27, 32, 38, 40, 41, 42, 44, 45, 46, 47, 58, 59, 61, 63, 64, 67, 68, 69, 70, 73, 77, 81, 82, 83, 85, 86, 87, 91, 95, 97, 99, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 141, 145, 150, 155], "ag": [33, 37, 38, 40, 45, 46, 48, 63, 64, 67, 70, 73, 77, 83, 87, 88, 94, 95, 96, 99, 115, 125, 126, 128, 129, 130, 131, 132, 134, 135, 139, 141, 144, 148, 149, 151, 155], "again": [36, 41, 46, 59, 61, 63, 65, 71, 73, 94, 96, 97, 99, 139, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "against": [32, 121, 126, 133, 141, 143, 144, 148, 154, 155], "age_": 83, "agenda": [139, 141, 143, 150, 153], "agent": 0, "agg": [125, 137], "aggfunc": 125, "aggreg": [7, 153], "aggron": 136, "aggronmega": 136, "agre": 141, "ahead": [141, 144], "ai": [24, 108, 151, 163], "aid": 154, "aim": [0, 3, 10, 125, 129, 152], "aipom": 136, "airlin": 156, "akin": 0, "alakazam": 136, "alakazammega": 136, "alan": [40, 41, 67, 70, 126], "alan99": 42, "alan99whit": 41, "alfa": [125, 126, 137], "algebra": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 118, 144, 162], "algorithm": [0, 2, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 40, 96, 143, 154, 162, 163], "alia": 32, "align": [0, 25, 45, 100, 104, 116, 125, 144], "alina": 115, "aliv": [149, 151], "all": [0, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 31, 32, 38, 39, 40, 41, 42, 44, 47, 49, 52, 53, 54, 59, 61, 62, 63, 64, 65, 67, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 99, 102, 118, 119, 120, 121, 122, 125, 126, 127, 128, 133, 134, 135, 136, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 163], "all_even": 28, "all_kei": 48, "allan": 45, "allclos": 123, "alll": 116, "alloc": [72, 94, 153], "allow": [11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 29, 30, 31, 32, 33, 35, 38, 40, 41, 44, 46, 47, 63, 64, 69, 70, 82, 83, 84, 87, 88, 94, 95, 96, 97, 99, 101, 105, 120, 121, 125, 126, 132, 133, 134, 142, 145, 149, 150, 154, 155], "almost": [24, 143, 152, 153], "aloha": 139, "alomomola": 136, "alon": [147, 149, 151], "along": [8, 10, 11, 14, 15, 30, 40, 63, 64, 67, 70, 72, 73, 77, 95, 96, 99, 118, 119, 121, 140, 143, 145, 147, 148, 150, 152, 153, 163], "alow": 42, "alpha": [8, 18, 19, 74, 83, 142, 144, 145, 146, 147, 148, 150, 155], "alphabet": [41, 42, 45, 69, 73, 84], "alphanumer": 45, "alreadi": [8, 23, 29, 30, 38, 45, 46, 49, 61, 63, 73, 78, 91, 99, 125, 126, 135, 143, 144, 145, 147, 148, 149, 150, 152, 153, 155], "alright": 146, "also": [0, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 35, 36, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 67, 68, 69, 70, 72, 73, 76, 77, 80, 82, 83, 84, 86, 87, 88, 89, 91, 94, 95, 96, 99, 100, 102, 104, 116, 120, 121, 122, 123, 125, 127, 128, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 163], "altaria": 136, "altariamega": 136, "alter": [30, 35, 85, 125, 140, 143, 145, 147, 148, 150, 151, 152, 153], "altern": [29, 45, 61, 70, 73, 84, 129, 132, 150, 153, 155], "although": [4, 12, 29, 67, 68, 72, 76, 88, 89, 95, 140, 141, 142, 148, 149, 153, 154], "alu": 61, "alwai": [24, 27, 35, 36, 64, 65, 67, 73, 74, 75, 78, 80, 81, 82, 86, 88, 89, 95, 96, 99, 120, 125, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153], "am": [30, 32, 45, 49, 53, 54, 68, 77, 87, 99, 140, 143, 145, 147, 148, 149, 150, 151, 153, 155], "amaura": 136, "amax": [18, 19], "amaz": [44, 155], "amazon": 45, "amber": 142, "ambigu": 78, "ambipom": 136, "amd": 91, "amd64": 24, "amelia": 99, "america": [52, 56, 61], "american": 139, "ami": [33, 40, 95], "amin": [18, 19], "among": [38, 59, 95, 142, 143, 151, 152, 155], "amoonguss": 136, "amount": [0, 35, 37, 65, 82, 85, 91, 118, 144, 148, 149, 150, 155], "ampharo": 136, "ampharosmega": 136, "ampl": 153, "an": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 53, 57, 58, 59, 61, 62, 63, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 96, 97, 99, 105, 118, 119, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "anaconda": [73, 118, 140], "anaconda3": [54, 73, 129, 132, 133, 134, 139, 142, 146, 148], "analog": [76, 125], "analys": [5, 14, 15, 16, 17, 91, 108, 140], "analysi": [0, 3, 4, 5, 12, 14, 15, 16, 17, 57, 91, 125, 126, 129, 136, 137, 139, 140, 142, 143, 147, 148, 149, 151, 152, 153, 155, 156, 162], "analyst": [125, 133, 141], "analyt": [0, 125, 143], "analyz": [7, 64, 91, 115, 116, 125, 126, 127, 130, 131, 133, 136, 137, 147, 155], "anana": 32, "angl": 75, "ani": [4, 6, 7, 18, 19, 22, 24, 27, 28, 30, 31, 39, 40, 41, 42, 44, 45, 47, 49, 50, 57, 63, 64, 68, 69, 70, 71, 72, 73, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 102, 109, 118, 119, 121, 122, 125, 129, 130, 131, 132, 134, 135, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 163], "anim": [7, 18, 19, 96], "ankl": [17, 19], "anlayt": 163, "ann": [7, 18, 19], "anniversari": 32, "annoi": 122, "annot": [141, 150, 151, 154], "annotate_ax": 148, "annual": [24, 126, 144], "anomal": 1, "anomali": [2, 162], "anomaly_detect": 8, "anonym": [22, 28, 50, 79], "anorith": 136, "anoth": [3, 7, 22, 28, 29, 30, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 55, 61, 63, 67, 68, 69, 73, 76, 77, 81, 82, 84, 86, 87, 88, 89, 94, 95, 96, 115, 120, 121, 125, 126, 127, 134, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "anscomb": [143, 145], "answer": [44, 153], "antibiot": 40, "anuko": 45, "anukool": [45, 62], "any_fun": 77, "anymor": 154, "anyon": [45, 83], "anyth": [24, 36, 45, 67, 95, 99, 129, 132, 134, 135, 140, 147, 150, 155], "anytim": 141, "anywai": [37, 149, 150, 154], "anywher": [32, 145], "apart": [4, 24, 46, 121, 144, 147, 153], "api": [129, 132], "app": 142, "appart": 42, "appdata": 73, "appeal": [140, 141, 151], "appear": [45, 68, 69, 72, 77, 82, 96, 140, 142, 143, 144, 151, 155], "appen": 122, "append": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 40, 50, 61, 64, 67, 72, 73, 77, 87, 94, 118, 122, 125, 132, 134, 137, 143, 145, 146, 147, 148, 155], "appl": [32, 40, 45, 46, 48, 49, 84, 85, 88, 95, 127, 151], "appli": [24, 30, 31, 63, 72, 128, 129, 131, 132, 133, 135, 142, 143, 147, 150, 152, 153, 154, 155], "applic": [0, 22, 32, 44, 45, 57, 61, 73, 76, 94, 95, 109, 121, 126, 132, 147, 162, 163], "approach": [7, 26, 94, 121, 129, 132, 154, 155], "appropri": [0, 5, 14, 15, 16, 17, 36, 37, 38, 39, 44, 54, 67, 142, 147], "approxim": [4, 5, 44, 152, 153], "apr": 80, "april": [38, 42], "apython": 32, "ar": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 74, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 101, 102, 105, 108, 116, 119, 120, 121, 122, 125, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163], "arab": 61, "arang": [8, 115, 118, 120, 121, 123, 155, 156], "arbitrari": [48, 49, 64, 67, 99, 120, 125, 142], "arbok": 136, "arc": 75, "arcanin": 136, "arceu": 136, "archen": 136, "archeop": 136, "architectur": 7, "arctan2": 123, "arcx": 45, "arcxarcx": 45, "area": [0, 67, 83, 88, 94, 96, 144, 150, 153, 154], "area_of_circl": [67, 83], "aren": [50, 149, 151, 153], "arg": [30, 34, 42, 54, 64, 70, 99, 132, 142, 145, 148, 154], "arg1": [50, 70], "arg2": 50, "arg3": 50, "argentina": 115, "argmax": 123, "argmin": 123, "argpartit": 123, "argsort": 123, "argument": [22, 27, 28, 30, 31, 32, 33, 45, 49, 50, 52, 53, 54, 58, 59, 61, 62, 63, 65, 68, 72, 73, 77, 79, 83, 95, 99, 115, 119, 122, 140, 141, 142, 143, 144, 146, 149, 153, 155], "argument1": 73, "argument2": 73, "argument_list": 72, "argv": 73, "ariado": 136, "aris": [30, 41], "arithmet": [31, 44, 63, 67, 94, 97, 121], "arm": [91, 139], "armaldo": 136, "arnold": 139, "aromatiss": 136, "aron": 136, "around": [45, 70, 77, 85, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "arr": [30, 119, 121], "arrai": [14, 15, 18, 19, 22, 24, 25, 40, 45, 48, 50, 61, 67, 73, 100, 104, 124, 125, 143, 144, 145, 147, 153, 154, 155, 156], "arrang": [62, 136, 143, 148, 151, 152], "array_equ": [118, 123], "arriv": [147, 150], "arrow": 63, "arrrai": 125, "arsen": [153, 154, 155], "art": [0, 42], "arthur": [30, 33, 38, 40, 48, 50, 67, 70, 87, 94, 95, 96], "arthurhunt": 33, "articl": [9, 17, 19, 41, 56, 57, 58, 59, 69, 70, 99, 125, 126, 129, 131, 132, 144], "articuno": 136, "artif": 15, "artifici": [0, 7, 12, 15, 18, 19, 151, 162], "artificial_intellig": 151, "artist": 148, "as_cmap": 142, "as_strid": 123, "asabeneh": [24, 61], "ascend": [125, 136, 137], "ascii": [45, 61], "ascii_lett": 73, "ascontiguousarrai": 123, "asian": [47, 139], "asian_countri": 47, "asid": 151, "asin": [73, 75], "asinh": [73, 75], "ask": [24, 28, 35, 44, 65, 87, 153], "aspect": [94, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 155], "assaria": 139, "assert": [63, 64, 81, 82], "assertionerror": 63, "assess": 152, "assign": [3, 7, 17, 19, 29, 30, 31, 40, 45, 46, 47, 48, 49, 50, 55, 63, 68, 69, 70, 72, 77, 82, 84, 85, 86, 89, 90, 94, 97, 99, 125, 126, 129, 132, 134, 135, 140, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155], "assist": [142, 154], "associ": [0, 9, 17, 19, 48, 73, 77, 82, 83, 89, 95, 141, 144, 148, 149, 153, 155], "assum": [1, 4, 7, 11, 13, 31, 88, 129, 142], "assumpt": [144, 153], "assur": [147, 149, 153], "asterisk": [33, 70, 73], "astyp": [118, 122, 123, 125, 150, 155], "async": 81, "atan": [73, 75], "atan2": [73, 75], "atanh": [73, 75], "ath": 32, "atk": 136, "atlanta": 96, "atlanti": 33, "atleast": 145, "atleast_2d": 123, "atmospher": 141, "attach": [29, 31, 42, 83, 94, 125, 141, 142, 143, 144, 145, 148, 150, 152, 153, 155], "attack": [136, 139], "attain": 151, "attempt": [141, 149, 153], "attent": [148, 150, 155], "attr": [95, 96], "attract": [87, 140], "attrib": 61, "attribut": [29, 30, 31, 32, 49, 52, 58, 63, 65, 67, 73, 75, 82, 87, 94, 96, 99, 121, 129, 132, 145, 147, 148, 153], "attributeerror": [49, 94, 95, 96, 148, 153], "attributemethod": 82, "audi": [125, 126, 137], "audienc": 154, "audino": 136, "audinomega": 136, "audio": [24, 155], "aug": 80, "augmentedassign": 82, "august": 38, "auroru": 136, "australia": [11, 13, 115, 144], "auto": [136, 137], "autom": [0, 24, 40, 41], "automat": [0, 7, 27, 28, 31, 44, 73, 83, 86, 94, 95, 99, 125, 140, 141, 144, 146], "automobil": 125, "automobile_data": [125, 126, 137], "automobile_data1": 137, "autopct": [115, 116], "autoregress": 153, "autoreload": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "autumn": [38, 67, 139, 145], "autumn_r": 145, "ava": 61, "avail": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 45, 46, 47, 49, 61, 73, 75, 77, 80, 82, 84, 85, 87, 89, 96, 97, 121, 125, 131, 132, 141, 142, 143, 144, 150, 151, 153, 154, 155], "avalugg": 136, "averag": [1, 4, 40, 46, 67, 116, 125, 126, 144, 149, 153, 155], "avg": 136, "avocado": 88, "avoid": [29, 38, 39, 42, 49, 50, 61, 71, 76, 86, 94, 119, 129, 144, 153], "avov": [144, 145], "awai": [11, 12, 13, 14, 15, 16, 17, 24, 32, 83, 140, 143, 144, 149, 151], "await": [81, 141], "awar": [18, 19, 61, 144, 148], "award": 153, "awesom": [24, 145], "awhil": 83, "awk": 24, "ax": [8, 11, 14, 15, 25, 100, 104, 129, 132, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "ax1": [154, 156], "ax2": 154, "ax4": 154, "ax5": 154, "ax6": 154, "ax_joint": 144, "axarr": 116, "axes_styl": [140, 151], "axessubplot": [139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 153, 156], "axew": 136, "axhlin": 155, "axi": [11, 14, 15, 16, 17, 18, 19, 32, 115, 116, 118, 119, 121, 122, 125, 131, 136, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155], "axis_nam": 129, "axisgrid": [141, 143, 144, 145, 146, 149, 152, 153, 154, 155], "axz": 32, "ax\u00b2": 67, "az": 139, "azelf": 136, "azumaril": 136, "azuril": 136, "b": [11, 30, 38, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 58, 61, 62, 64, 67, 68, 69, 70, 73, 74, 75, 77, 83, 84, 85, 87, 88, 89, 95, 96, 97, 99, 115, 118, 119, 120, 121, 125, 126, 128, 129, 130, 131, 132, 135, 139, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "b1": 97, "b2": 97, "b312893cfb9a": 48, "b334ef": 73, "b3ac65e67ae9": 68, "b4c816180ad9": 87, "b72af0bfcd83": 46, "b8ab82a1062c": 70, "b8eab4452d4b": 95, "b942612e6b6a": 46, "b951d4fef2c8": 64, "b977fb738e16": 94, "babydog": 96, "bac": 32, "back": [8, 45, 62, 70, 87, 91, 97, 108, 118, 125, 129, 132, 133, 134, 135, 136, 141, 148, 149, 150, 151, 152, 153], "back_end": 46, "backend": [140, 143, 155], "background": [28, 140, 142, 144, 150, 151, 153], "backlash": 32, "backpropag": [18, 19], "backslash": [45, 62, 82, 84], "backspac": 45, "backward": [31, 41, 45, 62, 85, 99, 150], "bad": [64, 125, 149], "bag": [17, 19, 83], "bagon": 136, "baidu": [70, 83], "ball": [40, 48, 84], "baltoi": 136, "banana": [32, 38, 40, 46, 49, 64, 84, 85, 87, 88, 127], "band": 153, "bandwidth": [146, 150, 153], "banett": 136, "banettemega": 136, "bangladesh": [61, 144], "bank": 148, "bar": [32, 46, 48, 69, 141, 147, 148, 149, 150, 152, 153, 155, 158], "bar1": 151, "bar2": 151, "bar3": 151, "barack": 61, "barbaracl": 136, "barboach": 136, "barcelona": 115, "barchart": 115, "bare": 163, "bark": 96, "barn": 33, "barplot": [140, 147, 151, 152], "basculin": 136, "base": [0, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 19, 24, 40, 41, 42, 44, 45, 50, 52, 53, 54, 58, 63, 64, 65, 71, 73, 75, 76, 86, 87, 88, 91, 94, 95, 96, 99, 102, 108, 122, 125, 126, 128, 129, 136, 137, 142, 144, 145, 150, 151, 153, 155, 156, 159, 160, 161], "base1": 96, "base2": 96, "baseclass": [94, 96], "baselin": 151, "baseto": 73, "basi": [24, 45, 46, 143, 145, 146, 147, 149], "basic": [23, 30, 31, 32, 42, 44, 58, 65, 69, 73, 94, 121, 125, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163], "basicli": 47, "basicmethod": 82, "bastiodon": 136, "bat": 96, "bathingsoap": 116, "bathingsoapsalesdata": 116, "battl": 45, "bayleef": 136, "baz": 46, "bb": 32, "bb99b9cebaa8": 48, "bc9e07fcbe69": 49, "bcaaeab6bf17": 86, "beak": 40, "bear": 37, "beartic": 136, "beauti": [32, 80, 139, 153], "beautifi": 61, "beautifli": 136, "beautifulli": 148, "beautifulsoup": 24, "becasu": 81, "becaus": [7, 24, 28, 30, 40, 41, 42, 45, 53, 63, 64, 67, 68, 69, 70, 72, 80, 81, 82, 83, 84, 85, 86, 88, 94, 95, 96, 99, 126, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "becom": [28, 31, 40, 41, 45, 68, 99, 125, 126, 127, 153], "bedroom": 0, "bee": 147, "beedril": 136, "beedrillmega": 136, "been": [3, 7, 14, 15, 16, 17, 18, 19, 32, 42, 45, 46, 47, 48, 49, 61, 63, 64, 77, 83, 95, 99, 108, 123, 139, 141, 142, 143, 144, 147, 148, 150, 152, 153, 154, 155], "beeswarm": [147, 148], "befor": [0, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 33, 40, 41, 44, 50, 52, 58, 59, 62, 64, 68, 69, 70, 72, 77, 86, 91, 95, 96, 99, 122, 125, 126, 127, 129, 130, 131, 132, 134, 135, 139, 141, 142, 143, 144, 145, 149, 150, 151, 153, 154, 155, 163], "beforehand": 41, "began": 155, "begin": [25, 31, 40, 45, 46, 47, 58, 61, 73, 77, 82, 83, 95, 97, 99, 100, 104, 134, 135, 136, 139, 140, 141, 143, 144, 145, 147, 148, 149, 151, 152, 153, 155], "beginn": [22, 80, 91, 143, 149, 150, 163], "behav": [61, 84, 97, 99, 121], "behavior": [0, 44, 77, 94, 95, 96, 99, 130, 134, 135, 143], "behaviour": 88, "beheeyem": 136, "behind": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 71, 72, 147, 150, 152, 155], "being": [0, 7, 14, 15, 18, 19, 24, 31, 32, 41, 46, 48, 49, 67, 70, 85, 94, 96, 101, 105, 140, 143, 144, 145, 147, 149, 151, 153, 154], "beldum": 136, "belgium": [115, 144], "believ": [148, 153], "bell": 45, "bella": [40, 94, 95, 99], "bellossom": 136, "bellsprout": 136, "belong": [3, 10, 44, 84, 85, 94, 95], "below": [3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 28, 30, 31, 36, 37, 40, 41, 42, 45, 46, 47, 48, 50, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 67, 70, 71, 73, 76, 77, 80, 81, 83, 84, 85, 87, 88, 94, 96, 97, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 144, 146, 154, 155, 156], "ben": 94, "benchmark": [9, 17, 19], "bend": 143, "benefici": [83, 128], "benefit": [45, 73, 96], "benz": 137, "bergmit": 136, "bert": 162, "besid": 118, "best": [0, 1, 4, 24, 28, 30, 40, 42, 45, 46, 61, 78, 91, 116, 142, 143, 144, 145, 147, 150, 153], "beta": [74, 143], "betavari": 74, "better": [11, 13, 29, 32, 35, 40, 41, 59, 77, 82, 91, 96, 97, 99, 115, 116, 125, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 162], "betw": 11, "between": [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 19, 30, 32, 40, 41, 42, 44, 45, 46, 47, 49, 57, 61, 71, 73, 74, 77, 87, 88, 95, 99, 121, 122, 125, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156], "beverag": 47, "beyond": [149, 153], "bfc5aa62a0ff": 88, "bfoo": 32, "bia": [7, 162], "bibarel": 136, "bibl": 141, "bidoof": 136, "big": [11, 12, 13, 153, 154, 155, 162, 163], "bigger": [4, 7, 8, 10, 16, 17, 18, 19, 31, 37, 49, 87, 120, 145, 147, 154], "biggest": [119, 140], "bill": [30, 40, 45, 50, 67, 70, 143, 144, 147, 148, 149, 150, 153, 155], "bin": [62, 77, 88, 115, 141, 144, 146, 150, 151, 155], "binacl": 136, "binari": [5, 14, 15, 16, 17, 44, 45, 61, 77, 82, 84, 87, 88, 91, 145], "binary_r": 145, "binary_sum": 77, "bind": [89, 95, 148], "binder": 24, "binomi": 144, "biolog": [7, 18, 19], "bird": [48, 94, 96], "birth": [32, 144], "birth_year": [67, 70, 83], "birthdai": 67, "bisharp": 136, "bit": [4, 5, 8, 10, 16, 17, 18, 19, 24, 47, 74, 88, 91, 141, 145, 156], "bitwis": [82, 97], "bivarait": 144, "bivari": [146, 152, 155], "bject": 61, "black": [7, 10, 139, 147, 148, 151], "blank": 77, "blastois": 136, "blastoisemega": 136, "blaziken": 136, "blazikenmega": 136, "blend": 155, "blind": 142, "blissei": 136, "blitzl": 136, "blob": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 154], "block": [6, 35, 36, 37, 38, 39, 40, 41, 42, 61, 64, 67, 82, 94, 102, 125, 146, 153, 156, 160], "blog": [57, 99], "blood": [96, 153], "blood_pressur": 153, "blu": 94, "blue": [40, 82, 115, 142, 143, 145, 148, 156], "blueprint": [94, 95, 99], "blues_r": 145, "bmv": 137, "bmw": [96, 137], "bob": 83, "bodi": [27, 36, 37, 38, 39, 40, 41, 42, 67, 68, 72, 82, 94, 96, 125, 126, 136, 137, 139], "body_camera": 139, "bokeh": 144, "bold": [115, 150, 151, 153, 155], "bolder": 155, "boldor": 136, "bond": [45, 87], "bone": 145, "bone_r": 145, "bonsli": 136, "bonu": 151, "book": [6, 20, 25, 83, 97, 100, 101, 102, 104, 105, 142, 151, 159, 160, 161], "bookmark": 152, "bool": [95, 96], "bool_a": 120, "bool_idx": 120, "boolean": [16, 17, 18, 19, 30, 38, 45, 73, 82, 95, 118, 119, 125, 129, 130, 131, 132, 134, 135], "boost": 47, "booster": 141, "boot": [17, 19], "boot_trac": 153, "bootstrap": [151, 153], "boottel": 62, "bore": 42, "born": [32, 64], "borrow": 99, "both": [16, 17, 18, 19, 28, 30, 32, 37, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 58, 61, 62, 64, 68, 69, 73, 82, 84, 88, 89, 94, 96, 99, 101, 105, 121, 125, 126, 127, 129, 132, 140, 141, 143, 144, 148, 150, 151, 155], "bother": [141, 143], "bottl": 45, "bottom": [16, 17, 18, 19, 24, 120, 125, 141, 149, 151, 153], "bottom_plot": 151, "bottombar": 151, "bottomrow": 128, "bouffal": 136, "bound": [29, 30, 63, 74, 91, 95, 125, 148], "boundari": [5, 9], "box": [101, 105, 150, 151, 152, 153, 155, 158], "boxen": 153, "boxenplot": 153, "boxplot": [115, 140, 142, 147, 148, 149, 150, 153, 155], "boxprop": [115, 147], "bp": 115, "brace": [45, 48, 49, 82, 85, 87], "bracket": [28, 36, 40, 41, 45, 46, 47, 48, 50, 82, 84, 85, 119, 120], "brain": [7, 18, 19, 154], "braixen": 136, "brand": 155, "braviari": 136, "brazil": [61, 115], "brbg": 145, "brbg_r": 145, "bread": 45, "break": [7, 22, 27, 35, 43, 64, 65, 67, 73, 81, 82, 84, 87, 154, 155], "breakdown": 147, "breed": 48, "breez": 149, "breloom": 136, "breviti": 120, "brew": 142, "brewer": 142, "brg": 145, "brg_r": 145, "brief": [58, 61, 74, 75, 95, 122], "briefli": 142, "bright": 142, "brilliant": 45, "bring": [45, 61, 143, 145, 149, 151, 155], "broader": [148, 153], "broadli": 63, "brock": 139, "broken": [31, 71], "bronzong": 136, "bronzor": 136, "brooklyn": 148, "brother": 94, "brown": [139, 142], "browser": [24, 142], "bruce": 70, "bruyn": 115, "bsd": [125, 136, 137], "btw": 118, "buck": 139, "bucket": 142, "budew": 136, "bue": 156, "buffer": 61, "bug": 136, "bugn": 145, "bugn_d": 151, "bugn_r": 145, "build": [8, 11, 13, 14, 15, 24, 28, 31, 32, 94, 95, 101, 105, 125, 140, 146, 148, 162], "built": [6, 24, 27, 29, 31, 40, 42, 44, 50, 61, 64, 65, 67, 72, 77, 78, 80, 82, 83, 87, 89, 94, 96, 97, 102, 116, 125, 129, 132, 139, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 160], "builtin": [24, 77], "buizel": 136, "bulbasaur": 136, "bulk": 147, "bunch": [0, 45, 141], "buneari": 136, "bunnelbi": 136, "bupu": 145, "bupu_r": 145, "burlington": 139, "burmi": 136, "busi": [0, 24, 125, 143, 148, 151], "bussi": 24, "butter": 45, "butterfre": 136, "bw": [150, 152], "bwmeq": 73, "bwr": [145, 152], "bwr_r": 145, "bx": [67, 144], "bypass": 42, "byte": [61, 62, 125], "c": [8, 10, 22, 24, 30, 31, 32, 38, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 56, 61, 62, 63, 64, 67, 72, 73, 75, 81, 82, 83, 84, 85, 87, 88, 89, 91, 94, 95, 96, 99, 115, 116, 119, 120, 121, 122, 125, 129, 130, 131, 132, 133, 134, 136, 137, 139, 142, 144, 146, 147, 148, 149, 151, 156], "c0": [141, 142], "c00e5d7d3c3": 63, "c02acf54079b": 137, "c1": [95, 96, 142], "c2": 142, "c3": 142, "c3f637926d7e": 61, "c4": 142, "c454c1331524": 65, "c5": 142, "c6": 142, "c7": 142, "c761920b81b0": 64, "c8": 142, "c8f749f7a9ca": 137, "c9": 142, "c92d9f2b36de": 85, "c_name": 96, "ca": [32, 139], "cab": [32, 153], "cabbag": 64, "cabxz": 32, "cach": 148, "cacnea": 136, "cacturn": 136, "cad": 24, "calcul": [4, 7, 8, 11, 13, 36, 40, 42, 44, 57, 67, 75, 82, 83, 87, 88, 94, 96, 99, 125, 140, 142, 144, 146, 147, 148, 150, 151, 153], "calcula": 23, "calculate_ag": [67, 70], "calculate_area": 94, "calculate_mean": 67, "calculate_median": 67, "calculate_mod": 67, "calculate_rang": 67, "calculate_slop": 67, "calculate_std": 67, "calculate_vari": 67, "calculu": 162, "calendar": 153, "call": [1, 7, 8, 18, 19, 20, 24, 27, 28, 29, 30, 31, 32, 33, 35, 39, 40, 41, 45, 46, 47, 48, 49, 50, 54, 59, 61, 63, 64, 65, 68, 69, 70, 71, 72, 73, 76, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 101, 105, 120, 127, 128, 129, 132, 134, 135, 140, 142, 148, 150, 151, 153, 154, 155, 156], "callabl": [27, 30, 48, 73, 132, 148, 150], "callablemethod": 82, "callback": 30, "caller": 28, "cambridg": 150, "camelcas": 83, "camera": 139, "camerupt": 136, "cameruptmega": 136, "can": [0, 4, 6, 7, 11, 13, 18, 19, 22, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 95, 96, 97, 100, 102, 104, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 162, 163], "canada": [11, 13, 115], "candi": 95, "canidaefamili": 96, "cannon": 88, "cannot": [28, 30, 31, 33, 40, 42, 44, 45, 47, 48, 49, 54, 61, 63, 64, 68, 69, 70, 72, 73, 81, 83, 84, 85, 86, 87, 88, 91, 94, 99, 122, 126, 129, 131, 139, 145, 151], "canon": 24, "cap": 151, "capabl": [0, 32, 155], "capit": [30, 45, 67, 73, 83], "capita": [11, 13], "capital_c": 83, "capitalis": 45, "capitalize_list_item": 67, "capsiz": 151, "captial": 45, "captur": [64, 74, 88], "capword": [73, 83], "car": [0, 7, 95, 96, 125, 126, 139], "car_horsepow": 137, "car_info": 96, "car_manufactur": 137, "car_pric": 137, "carbink": 136, "care": [27, 61, 121, 125, 143, 144, 153, 156], "career": 0, "carefulli": 42, "carnegi": 7, "carnivin": 136, "carpricedf": 137, "carracosta": 136, "carri": [44, 49, 88, 97, 135], "carriag": 45, "carrot": 64, "carsdf": 137, "carsdf1": 137, "carsdf2": 137, "carshorsepowerdf": 137, "carson": 70, "carter": 94, "cartesian": 11, "carvanha": 136, "cascoon": 136, "case": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 29, 30, 32, 35, 36, 37, 40, 42, 44, 45, 48, 49, 59, 63, 64, 73, 81, 82, 83, 84, 87, 88, 89, 91, 94, 96, 99, 109, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 162], "cast": 119, "castform": 136, "cat": [7, 40, 84, 85, 99, 145], "cat1": 99, "cat2": 99, "cat_po": 148, "catch": [35, 65, 150, 155], "cateat": 115, "categor": [0, 5, 14, 15, 16, 17, 73, 125, 126, 139, 142, 143, 146, 149, 150, 151, 152, 153, 154, 155, 158], "categori": [10, 14, 15, 17, 19, 35, 44, 63, 85, 136, 139, 142, 145, 147, 151, 154], "categoricalindex": 125, "categorize_countri": 30, "category_point": [143, 145], "caterpi": 136, "cathi": 40, "catplot": 153, "caught": [27, 42, 64], "caus": [30, 31, 42, 49, 61, 63, 64, 65, 80], "cautiou": 155, "cb8ac02fbcd3": 63, "cbar": 156, "cbook": 148, "cd": 73, "cde": 32, "cdn": 115, "ceil": [16, 17, 18, 19, 73, 75, 123], "celebi": 136, "cell": [16, 17, 18, 19, 24, 29, 68, 140, 156], "cell_cont": 29, "celsiu": 31, "center": [45, 64, 87, 122, 141, 146, 149, 150, 151, 154], "centimet": [9, 10, 14], "centimetr": 139, "centr": 143, "central": [94, 139, 143, 147, 149, 150, 151, 153], "centroid": [3, 10], "centroid_id": 10, "centuri": [53, 54], "certain": [1, 11, 12, 13, 14, 15, 16, 17, 32, 35, 42, 45, 46, 47, 54, 56, 63, 64, 73, 78, 83, 125, 140, 149], "certainli": [83, 141, 144, 147, 150, 151, 153, 154], "ch": [40, 50], "chaang": 136, "chain": [38, 83, 88, 96, 126, 129, 130, 135], "chairman": 153, "challeng": [45, 95, 154], "chandelur": 136, "chandler": 139, "chang": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 30, 36, 40, 41, 44, 49, 50, 57, 63, 64, 67, 68, 69, 70, 73, 85, 86, 87, 91, 94, 95, 96, 97, 115, 119, 120, 122, 125, 128, 129, 130, 131, 132, 134, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "change_to_upp": 30, "chansei": 136, "chapter": 45, "char": [28, 40, 84], "charact": [24, 30, 35, 40, 41, 42, 53, 54, 61, 73, 80, 82, 83, 85, 87, 132, 140], "characterist": [0, 5, 7, 49, 94, 136, 137, 153], "charcter": 45, "charizard": 136, "charizardmega": 136, "charmand": 136, "charmeleon": 136, "chart": [151, 153, 154], "chase": 139, "chatot": 136, "chdir": 73, "che": 32, "cheat": [117, 124, 138], "check": [11, 13, 14, 15, 16, 17, 18, 19, 25, 28, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 61, 64, 67, 69, 73, 83, 85, 88, 94, 95, 96, 100, 104, 122, 125, 130, 134, 140, 142, 144, 145, 148, 153, 155], "check_season": 67, "check_text_similar": 61, "checkbox": 24, "checkpoint": 136, "chelsea": 155, "cher": 32, "cherbourg": [149, 151], "cherrim": 136, "cherubi": 136, "chesnaught": 136, "chespin": 136, "chevrolet": 137, "chikorita": 136, "child": [61, 94, 96, 149], "childmethod": 96, "children": 151, "chimchar": 136, "chimecho": 136, "china": [30, 46, 47, 50, 61], "chinchou": 136, "chines": 61, "ching": 32, "chingl": 136, "chirag": 95, "choic": [38, 44, 73, 74, 123, 142, 143, 144, 146, 147, 148, 149, 153], "choos": [1, 8, 64, 119, 125, 126, 142, 143, 148, 149, 151, 153, 154, 156], "choose_colorbrewer_palett": 142, "choose_cubehelix_palett": 142, "chose": [0, 24, 144], "chosen": [74, 148, 155], "chp": 45, "chracter": 87, "chronometri": 153, "chunk": [67, 136, 142, 143, 149, 153], "chunksiz": 136, "ci": [143, 145, 151, 152, 153], "ci_band": 153, "ci_bar": 153, "cinccino": 136, "cir": 94, "circl": [67, 75, 83, 88, 94, 116], "circum_of_circl": 83, "circumfer": [75, 83, 88], "circumst": [64, 149], "citi": [45, 48, 50, 61, 64, 83, 94, 115, 126, 129, 139, 148], "citizen": 29, "cividi": [142, 145, 148], "cividis_r": 145, "cl": [54, 99], "claim": 139, "clamperl": 136, "clarifi": [32, 64, 89, 140], "clark": [30, 67, 70, 87], "clasess": 15, "class": [9, 10, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 33, 41, 42, 44, 53, 54, 55, 56, 62, 68, 69, 71, 72, 76, 78, 81, 82, 85, 86, 87, 89, 91, 97, 99, 118, 119, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 143, 147, 149, 150, 151, 153, 154, 155, 156], "class1": 96, "class2": 96, "class_suit": 94, "classic": 163, "classif": [0, 10, 154, 162], "classifi": [0, 5, 10, 14, 15, 16, 17, 18, 19, 63, 151], "classinfo": 96, "classmethod": [52, 57], "classnam": 94, "classon": 94, "classtwo": 94, "clauncher": 136, "claus": 115, "clawitz": 136, "claydol": 136, "clayton": 70, "clean": [0, 32, 61, 64, 71, 76, 82, 130, 131, 162, 163], "clean_text": [32, 61], "cleaned_text": 32, "cleaner": [28, 121], "cleans": 153, "clear": [14, 15, 28, 49, 76, 99, 141, 151], "clearer": [65, 82, 141, 155], "clearli": 31, "clefabl": 136, "clefairi": 136, "cleffa": 136, "clich": 32, "click": [24, 163], "client": 154, "clipboard": 125, "cllose": 143, "cloak": 136, "clock": [53, 54, 153], "close": [4, 29, 63, 64, 77, 91, 96, 125, 141, 144, 147, 148, 150, 151, 152, 153, 154], "closer": [27, 86, 99, 144], "closest_centroids_id": 10, "closur": [22, 34], "closure_result": 29, "cloth": [5, 7, 17, 19], "cloud": 153, "cloudi": 5, "cloyster": 136, "club": [115, 155], "cluster": [0, 3, 149, 150, 154, 156, 158, 162], "clustergrid": 157, "clustermap": 157, "cm": [10, 14, 25, 100, 104], "cmap": [16, 17, 18, 19, 25, 100, 104, 142, 145, 148, 154, 156, 157], "cmap_cycl": 145, "cmath": 75, "cmd": 80, "cmp": [46, 47, 48], "cmrmap": 145, "cmrmap_r": 145, "cn": 142, "cnt": 40, "co": [44, 73, 75, 89, 118, 121, 139, 155], "coat": [7, 17, 19], "cobalion": 136, "code": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 50, 52, 58, 61, 62, 64, 67, 68, 70, 71, 72, 73, 76, 77, 78, 81, 82, 83, 84, 87, 88, 94, 96, 99, 102, 118, 121, 139, 140, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 155, 160], "codeobject": 82, "coeffici": [118, 141, 143, 154], "coerc": [44, 156], "coercion": 44, "coexist": 144, "cofagrigu": 136, "coffe": 151, "col": [120, 125, 129, 132, 134, 136, 141, 143, 145, 147, 149, 150, 152, 153, 155], "col1": [125, 126, 127, 129, 130, 133], "col2": [125, 126, 127, 129, 130, 133], "col3": 125, "col_clust": 157, "col_fil": 135, "col_l": 147, "col_label": [125, 127, 129], "col_label1": 134, "col_label2": 134, "col_level": 135, "col_nam": [129, 152], "col_ord": [143, 152, 155], "col_posit": 125, "col_r1": 120, "col_r2": 120, "col_var": 152, "col_wrap": [143, 145, 152, 155], "colab": [23, 24, 163], "cold": [25, 45, 100, 104], "coldest_th": 31, "collabor": 0, "collect": [0, 7, 24, 27, 40, 41, 48, 49, 59, 62, 63, 73, 85, 89, 95, 123, 133, 147, 148, 155], "collector": 61, "colleg": 94, "collid": [76, 89], "colon": [36, 45, 46, 47, 48, 63, 67], "color": [3, 7, 11, 25, 40, 48, 73, 94, 95, 100, 104, 115, 116, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158], "color_cod": [145, 155], "color_map": [16, 17, 18, 19], "color_palett": [142, 151], "colorbrew": 142, "colormap": [142, 151, 157], "colour": [154, 156], "column": [8, 12, 14, 15, 16, 17, 18, 19, 40, 50, 61, 115, 118, 119, 120, 121, 122, 136, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157], "column_1": 155, "column_2": 155, "column_current_nam": 132, "column_label": [125, 133], "column_nam": 125, "column_on": 125, "column_posit": 125, "com": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 33, 67, 70, 83, 90], "comb": 73, "combe": 136, "combin": [4, 8, 10, 11, 13, 14, 45, 46, 47, 64, 81, 83, 88, 96, 119, 127, 134, 146, 147, 150, 152, 153, 155], "combusken": 136, "come": [24, 28, 31, 41, 42, 44, 45, 50, 64, 67, 78, 80, 89, 97, 99, 125, 140, 143, 144, 146, 148, 150, 151, 153, 154, 155], "comfort": [30, 50, 152], "comic": 115, "comma": [45, 46, 47, 48, 49, 67, 85], "command": [6, 24, 41, 64, 72, 73, 77, 91, 95, 102, 118, 140, 143, 160], "commenc": [152, 155], "comment": [22, 31, 67, 83, 93, 118], "commerc": 24, "commerci": 22, "commiss": 153, "common": [1, 7, 8, 30, 46, 49, 52, 57, 61, 63, 73, 94, 95, 99, 120, 125, 127, 140, 142, 143, 147, 149, 151, 153, 154, 155], "commonli": [0, 32, 45, 46, 48, 49, 52, 58, 96, 142, 143, 144, 145, 146, 151, 153], "commonmark": [20, 101, 105], "comonli": 155, "compact": 50, "compani": [45, 46, 48, 70, 96, 116, 125, 126], "companion": [154, 155], "company_grp": 137, "company_info": 96, "company_nam": 96, "company_sales_data": 116, "compar": [0, 10, 22, 28, 37, 44, 45, 46, 47, 48, 49, 83, 88, 91, 97, 140, 141, 144, 146, 147, 150, 151], "comparis": [141, 144], "comparison": [45, 82, 115, 126, 129, 149, 151, 154], "comparit": 147, "compat": [31, 86, 97, 99, 121, 126, 150], "compatible_format": 77, "compens": 148, "compet": [126, 152], "competit": 141, "compil": [22, 24, 30, 32, 82, 93, 145, 153], "complain": 99, "complement": [32, 88, 140, 148], "complementari": 75, "complet": [40, 41, 42, 45, 47, 49, 61, 73, 74, 77, 89, 96, 116, 122, 137, 147, 151, 153], "complex": [0, 7, 18, 19, 24, 40, 41, 44, 71, 75, 82, 84, 85, 88, 95, 96, 108, 115, 116, 125, 126, 136, 137, 141, 143, 154], "complex128": 122, "complex_number1": 84, "complex_number2": 84, "complexnumb": 95, "compli": 91, "complic": [95, 125, 140, 142], "complier": 91, "compon": [11, 12, 13, 14, 15, 16, 17, 67, 94, 142, 143, 152, 153, 155], "compos": 46, "composur": 115, "compound": [24, 46, 88], "comprehend": [149, 154], "comprehens": [27, 28, 40, 144], "compris": 144, "comput": [0, 1, 18, 19, 24, 39, 44, 45, 49, 50, 59, 61, 64, 76, 80, 82, 88, 91, 94, 96, 118, 121, 136, 141, 144, 147, 148, 149, 150, 151, 153, 155], "computation": 143, "concat": [73, 125, 136, 137, 145, 149, 154, 155], "concaten": [46, 47, 50, 73, 87, 94, 97, 118, 125, 149], "conceal": 142, "concentr": 147, "concept": [22, 23, 26, 65, 82, 89, 96, 98, 118, 142, 143, 144, 146, 149, 151, 153, 154, 155, 162], "conceptu": [76, 149, 150, 152, 163], "concern": [141, 149], "concis": [7, 28, 46, 48, 50, 65, 72, 120, 121], "conclud": [29, 151, 153, 155], "conclus": 99, "concret": 153, "concurr": 59, "conda": [24, 118], "condit": [27, 28, 30, 36, 37, 38, 39, 40, 41, 42, 48, 49, 61, 63, 71, 72, 82, 86, 88, 120, 129, 131, 153, 154, 155], "condition_inn": 39, "conditon_out": 39, "conduct": [5, 14, 15, 16, 17, 91], "confid": [143, 145, 147, 149, 150, 151, 153], "config": 69, "configur": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "confin": 136, "confirm": 80, "conflict": 125, "confus": [28, 39, 76, 83, 99, 141, 142, 148, 149, 151, 154], "congratul": [65, 80, 108], "conjuct": 153, "conjunct": [45, 87], "conkeldurr": 136, "connect": [7, 64, 148, 149, 151, 153, 163], "connection_object": 125, "connectionist": [7, 18, 19], "consequ": 0, "consid": [4, 7, 12, 18, 19, 35, 41, 45, 46, 48, 49, 53, 54, 64, 70, 76, 91, 97, 99, 121, 122, 126, 130, 131, 141, 147, 149, 152, 154, 155], "consider": [10, 14, 24, 50, 143, 149, 153, 162], "consist": [4, 7, 9, 10, 14, 16, 17, 18, 19, 46, 48, 63, 77, 78, 82, 96, 120, 143, 151, 156], "consol": [24, 87, 125], "constant": [4, 5, 22, 32, 75, 84, 93, 119, 121, 152, 153], "constantli": [152, 154], "constitut": [7, 18, 19], "constraint": 31, "construct": [30, 31, 37, 42, 64, 71, 76, 77, 80, 94, 119, 120, 125], "constructor": [52, 65, 77, 96], "consum": 153, "contain": [7, 9, 14, 15, 27, 28, 30, 38, 40, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 58, 61, 62, 64, 72, 73, 76, 77, 83, 84, 86, 87, 89, 94, 95, 116, 122, 125, 126, 130, 131, 133, 134, 135, 136, 137, 150, 151, 153, 156, 163], "content": [6, 20, 24, 32, 61, 62, 64, 73, 101, 102, 105, 125, 139, 160], "contest": 24, "context": [45, 69, 97, 140], "contextmanag": 82, "contigu": [45, 149], "continu": [1, 8, 22, 28, 35, 43, 64, 81, 82, 95, 96, 144, 148, 151, 152, 155], "contour": [8, 14, 15, 142, 144, 145], "contrast": [0, 120], "contrastingli": 0, "contribut": [4, 5, 151, 162], "control": [7, 24, 28, 36, 37, 44, 45, 82, 94, 97, 99, 139, 141, 142, 144, 148, 149, 150, 151, 153, 155, 158], "conttinu": 145, "convei": [151, 153], "conveni": [4, 5, 118, 141, 143, 144, 147, 150], "convent": [32, 77, 95, 99, 129, 132, 153], "convention": 95, "converg": [3, 4, 143], "convers": [22, 45, 82, 93, 142, 147, 150], "convert": [6, 7, 16, 17, 18, 19, 31, 44, 45, 46, 49, 50, 52, 53, 54, 57, 61, 63, 67, 75, 84, 86, 87, 88, 91, 102, 118, 119, 122, 125, 126, 127, 137, 142, 147, 151, 160], "convert_celsius_2_fahrenheit": 67, "convert_dictionary_to_python_object": 95, "convient": 125, "convini": [119, 122], "convnet": 122, "convolut": 162, "cook": 87, "cool": [122, 142, 145], "cool_r": 145, "cooler": 28, "coolwarm": [25, 100, 104, 145, 146, 149, 150, 151, 154], "coolwarm_r": 145, "coordin": 97, "cope": 64, "copi": [24, 45, 49, 62, 73, 94, 121, 122, 125, 129, 130, 131, 132, 134, 135, 148], "copper": [145, 151], "copper_r": 145, "copyreg": 77, "copyright": 24, "copysign": [73, 75, 123], "core": [18, 19, 95, 118, 123, 125, 129, 132, 133, 134, 143, 150, 155], "corg": 46, "cori": [40, 45, 67, 70], "cornel": 150, "corner": 120, "corphish": 136, "corr": [125, 156], "corr_func": 154, "corrcoef": 118, "corrctli": [16, 17], "correct": [5, 7, 14, 15, 16, 17, 18, 19, 37, 41, 46, 63, 70, 73, 80, 91, 122, 126, 127, 141, 143, 149, 155], "correctli": [0, 4, 14, 15, 16, 17, 18, 19, 40, 65, 154], "correl": [0, 118, 125, 141, 144, 145, 147, 152, 154, 155, 157], "correspond": [0, 7, 11, 48, 58, 63, 65, 73, 83, 89, 91, 95, 99, 120, 144, 147, 150, 151, 152, 153, 155], "corrupt": [11, 13], "corsola": 136, "cosh": [73, 75], "cosin": [73, 75, 118], "cost": [11, 12, 13, 14, 15, 16, 17, 18, 19], "cost_histori": [11, 12, 13], "cottone": 136, "could": [7, 8, 24, 27, 42, 45, 61, 64, 76, 78, 89, 94, 95, 99, 121, 122, 129, 131, 139, 141, 142, 147, 148, 150, 151, 153], "couldn": [99, 145], "count": [7, 8, 32, 40, 41, 42, 45, 47, 61, 67, 81, 94, 95, 99, 115, 125, 136, 139, 144, 147, 150, 153, 155, 158], "counter": [40, 41, 95], "counterintuit": 28, "counterpart": [28, 45, 75], "counti": 63, "countplot": [147, 150, 151], "countri": [4, 9, 11, 13, 30, 33, 38, 40, 45, 46, 47, 48, 50, 61, 63, 64, 67, 83, 94, 115, 144, 153], "countries_data": 61, "countries_details_data": 30, "countries_to_look_at": 115, "country_lst_on": 64, "country_lst_two": 64, "coupl": [4, 5, 61, 142, 148, 149, 150, 151], "cours": [23, 24, 45, 67, 73, 81, 88, 139, 141, 143, 144, 145, 147, 148, 149, 151, 153], "course_nam": 67, "coursera": [1, 3, 4, 5, 7, 9], "cous": [11, 12, 13], "cov": [143, 154], "covari": 143, "cover": [29, 30, 32, 61, 63, 125, 126, 127, 131, 132, 134, 139, 141, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 162], "coverg": 143, "covert": 91, "cp1252": 61, "cplai": 24, "cradili": 136, "craft": 147, "cram": 154, "cranido": 136, "crash": 64, "crawdaunt": 136, "creat": [0, 8, 11, 17, 19, 22, 24, 25, 27, 29, 30, 31, 32, 40, 41, 44, 52, 54, 55, 56, 57, 61, 62, 63, 64, 67, 68, 69, 71, 77, 78, 80, 81, 83, 84, 85, 89, 91, 94, 96, 97, 99, 100, 104, 118, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 137, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "creation": [61, 119, 162], "creator": 99, "credit": [24, 140], "cresselia": 136, "cript": 61, "cristiano": 115, "criteria": [0, 29, 30], "critic": [64, 153, 154], "croagunk": 136, "crobat": 136, "croconaw": 136, "cross": [7, 71, 153, 155], "crustl": 136, "cryogon": 136, "css": [45, 46, 94], "css4": 142, "csv": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 115, 116, 126, 133, 134, 135, 136, 139, 144, 150, 151, 153, 155], "csv_exampl": 61, "csv_reader": 61, "ctrl": [24, 41, 63], "cubchoo": 136, "cube": [29, 41, 50, 70, 72, 87], "cubehelix": 145, "cubehelix_palett": 142, "cubehelix_r": 145, "cubic": 4, "cubon": 136, "cum": [45, 49], "cumbersom": 143, "cumsum": [118, 123], "cumul": [0, 118], "cup": 151, "curat": [0, 143, 163], "curiou": 143, "curious": 155, "curli": [32, 45, 48, 49, 87], "current": [0, 3, 4, 5, 11, 12, 13, 18, 19, 22, 29, 40, 41, 42, 53, 57, 58, 59, 60, 61, 64, 69, 73, 74, 77, 80, 89, 94, 95, 96, 134, 135, 141, 142, 143, 145, 147, 155], "current_examples_indic": 10, "current_file_nam": 62, "current_palett": 142, "current_salari": 83, "current_tim": 56, "current_year": [67, 70], "current_year_2021": 83, "curri": [50, 94], "cursor": 61, "curtain": 155, "curv": [11, 12, 13, 14, 15, 16, 17, 144, 150], "custom": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 37, 73, 77, 126, 140, 141, 142, 143, 145, 147, 148, 150, 151, 152, 153, 154, 155], "custom_lin": [25, 100, 104], "customerror": 65, "customiz": [140, 153, 155], "cut": [9, 16, 17, 18, 19, 45, 149, 150, 152], "cyan": 142, "cycl": [142, 145], "cycler": [25, 100, 104], "cylind": [125, 126, 137], "cyndaquil": 136, "cython": 148, "d": [0, 3, 38, 40, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 61, 64, 67, 83, 84, 85, 87, 95, 96, 97, 116, 119, 122, 125, 130, 131, 136, 144, 148, 150, 154, 156], "d1": [55, 96], "d2": 55, "d3": 55, "d4": 55, "d75c9779269a": 65, "da": 151, "daaaat": 32, "daaat": 32, "daat": 32, "dai": [23, 32, 44, 45, 53, 54, 55, 56, 57, 58, 67, 69, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155], "daili": 143, "danc": 94, "dark": [136, 140, 142, 145, 151], "dark2": 145, "dark2_r": 145, "darkgrid": [140, 147, 149, 150, 153], "darkrai": 136, "darmanitanstandard": 136, "darmanitanzen": 136, "darumaka": 136, "dash": 146, "dashboard": [147, 148], "dat": [32, 62], "data": [0, 4, 5, 7, 9, 24, 25, 27, 28, 29, 30, 32, 33, 40, 41, 45, 46, 47, 48, 49, 54, 61, 62, 64, 67, 70, 73, 77, 83, 84, 86, 87, 88, 91, 94, 96, 100, 104, 108, 118, 120, 121, 128, 129, 130, 131, 132, 133, 135, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 163], "data1": [46, 125, 144], "data2": 144, "data_1": [61, 62], "data_analysi": 151, "data_point": 146, "data_str": 54, "data_typ": 126, "databas": [57, 61, 125], "datafam": 127, "datafram": [11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 115, 119, 136, 137, 138, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "datapoint": [141, 142, 147, 150, 152, 153, 155], "datasci": [45, 68, 88], "dataseri": 125, "dataset": [0, 8, 10, 11, 12, 13, 15, 115, 122, 125, 128, 129, 130, 131, 132, 133, 135, 136, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158], "datatyp": [22, 45, 47, 75, 85, 86, 93, 125, 126, 155], "date": [11, 54, 56, 125, 139, 143, 145, 153, 155], "date_object": [52, 54], "date_rang": 125, "date_str": [52, 54], "date_tim": 53, "date_time1": 53, "date_time2": 53, "dateclass": 52, "datetim": [22, 55, 60, 73, 125], "datetime64": 123, "datetime_capi": 52, "datetime_london": [52, 56], "datetime_ni": [52, 56], "datetime_object": 52, "datetimeindex": 125, "daughter": 94, "dave": 90, "david": [70, 87], "dct": 64, "dd": [52, 54, 55], "dd6f749658a4": 31, "de": [32, 115], "deal": [26, 31, 42, 44, 45, 61, 86, 122, 125, 139, 142, 143, 144, 145, 146, 147, 148, 149, 153, 154, 155], "dealt": [139, 143, 147], "debug": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 63, 71, 78, 82], "dec": [24, 30, 53, 54, 58, 80], "decemb": [38, 57], "decend": 136, "decent": [147, 150, 151], "decept": 149, "decid": [0, 4, 5, 8, 11, 13, 31, 35, 48, 132, 143, 144, 149, 150, 151, 153, 155], "decim": [31, 45, 53, 54, 77, 83, 84, 85, 87, 88, 119], "decis": [0, 9, 39], "deck": [149, 151, 155], "declar": [29, 30, 41, 45, 46, 61, 63, 65, 67, 68, 69, 73, 85, 88, 89, 94, 95, 99, 119, 143, 151, 153, 154, 155], "decod": [45, 63], "decompos": 78, "decomposit": [26, 121], "decor": [22, 29, 34, 99, 153, 155], "decorator_with_paramet": 30, "decreas": [7, 11, 12, 13, 14, 15, 16, 17, 41, 71, 139, 142, 144, 149], "decrement": 97, "dedenn": 136, "dedic": [2, 155], "deduc": [143, 150], "deep": [7, 26, 42, 118, 139, 142, 162], "deepak": [62, 73], "deeper": [52, 139, 143, 145, 150, 152, 153, 155], "deepli": [42, 143], "deerl": 136, "def": [27, 28, 29, 30, 31, 33, 37, 38, 39, 42, 50, 59, 64, 65, 67, 68, 69, 70, 71, 72, 73, 77, 78, 81, 82, 84, 87, 89, 94, 95, 96, 97, 99, 132, 136, 140, 143, 145, 147, 148, 154, 155], "default": [6, 8, 10, 16, 17, 18, 19, 29, 52, 69, 71, 75, 77, 80, 87, 95, 96, 102, 115, 118, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 146, 149, 150, 152, 153, 155, 156, 160], "default_ord": 45, "default_valu": 125, "defens": 136, "defer": 134, "defin": [0, 4, 5, 6, 18, 19, 22, 27, 28, 30, 31, 32, 33, 40, 41, 44, 45, 46, 47, 48, 50, 52, 58, 63, 64, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 87, 89, 94, 96, 97, 102, 122, 125, 129, 133, 140, 141, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160], "definit": [24, 30, 40, 67, 70, 72, 73, 77, 82, 87, 94, 95, 96, 99], "degrad": 99, "degre": [4, 11, 12, 13, 14, 15, 16, 17, 31, 73, 75], "deino": 136, "del": [29, 45, 46, 47, 48, 81, 95], "delai": [58, 59, 141, 147], "delattr": 95, "delcatti": 136, "deleg": 96, "delelop": 24, "delet": [29, 31, 48, 49, 62, 63, 82, 118, 125, 131, 134], "deliber": 63, "delibird": 136, "delimit": [61, 122, 125, 136], "delphox": 136, "delv": [0, 140, 141, 144, 145], "demand": [28, 140], "demo": [2, 8, 9, 145], "demonstr": [27, 46, 82, 96, 127, 144, 147, 154, 155], "deni": 38, "denim": [142, 148], "denmark": [11, 13, 30, 46, 64, 144], "denomin": 44, "denot": [31, 33, 45, 70, 71, 85, 94], "densii": 150, "densiti": [8, 141, 142, 144, 145, 146, 148, 150, 153], "deoxysattack": 136, "deoxysdefens": 136, "deoxysnorm": 136, "deoxysspe": 136, "depart": [95, 153], "depat": 95, "depend": [0, 4, 5, 24, 29, 35, 42, 61, 65, 73, 74, 97, 101, 105, 118, 125, 139, 141, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155], "depict": [142, 147, 149, 153], "deploy": 162, "deprec": [133, 137, 141, 146, 148], "deprecation_addendum": 148, "depth": [71, 83, 96, 139, 143, 144, 147], "deriv": [4, 5, 7, 64, 65, 94, 96, 99, 153], "derived1": 96, "derived2": 96, "derivedclass": [94, 96], "descend": [61, 67, 125], "descent": [7, 18, 19, 163], "describ": [4, 5, 7, 14, 15, 16, 17, 67, 70, 73, 82, 88, 94, 125, 139, 144, 149, 151, 152, 153, 154, 155], "descript": [42, 45, 46, 47, 48, 49, 61, 67, 73, 74, 75, 77, 94, 95, 118, 125, 132, 139, 149, 153], "descriptor": [61, 77], "deserv": 150, "desgin": 84, "design": [24, 30, 125, 143, 151, 152, 163], "desir": [30, 42, 46, 122, 155, 162], "desk": 24, "desktop": [24, 62], "despin": [140, 150, 151, 152, 154, 155], "destroi": [28, 68, 95], "destruct": 95, "destructur": 64, "det": 121, "detach": 61, "detail": [0, 6, 28, 31, 58, 63, 70, 82, 87, 94, 95, 96, 102, 120, 125, 127, 129, 134, 135, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 155, 159, 160, 161], "detect": [0, 2, 4, 5, 18, 19, 63, 120, 142, 162], "determin": [0, 45, 49, 130, 131, 135, 143, 144, 145, 147, 149, 151, 153, 154, 155], "determinist": 74, "develop": [10, 14, 22, 24, 32, 38, 65, 76, 83, 91, 94, 99, 109], "deviat": [1, 8, 67, 94, 118, 122, 125, 149, 151], "devic": [87, 91], "dewgong": 136, "dewott": 136, "df": [115, 116, 125, 129, 132, 133, 134, 135, 136, 137, 139, 141, 143, 145, 148, 150, 153, 155, 156], "df1": [125, 144], "df2": [125, 144], "df6ce7ede1dc": 63, "df_xlsx": 136, "dfca0b041b3d": 65, "dhl": 45, "di": [32, 40], "diag": [123, 154], "diag_ax": 154, "diag_indic": 154, "diag_kind": [145, 154], "diag_kw": 145, "diag_sharei": 154, "diagon": [145, 154], "diagram": [89, 128, 132, 135, 146], "dialga": 136, "dialogu": 40, "diamet": 75, "dianci": 136, "dianciemega": 136, "dichotom": [5, 14, 15, 16, 17], "dict": [24, 33, 49, 61, 64, 67, 73, 84, 85, 86, 95, 115, 127, 128, 129, 130, 131, 132, 134, 135, 137, 141, 150, 155, 157], "dict1": [40, 48], "dict2": 40, "dict_1": 95, "dict_item": 48, "dict_kei": 48, "dict_valu": 48, "dictionari": [22, 24, 30, 31, 33, 38, 45, 46, 47, 49, 50, 51, 63, 67, 77, 82, 84, 86, 88, 95, 125, 127, 132, 137, 140, 142, 155], "dictionaryliter": 82, "did": [28, 30, 36, 63, 64, 68, 87, 88, 94, 96, 125, 153], "didn": [45, 94, 97, 140, 149, 150, 155], "die": 155, "diet": [152, 153], "diff": [11, 13, 56], "differ": [7, 8, 11, 18, 19, 29, 30, 32, 33, 35, 40, 41, 42, 44, 45, 46, 47, 48, 53, 57, 58, 59, 61, 62, 63, 64, 67, 68, 70, 72, 73, 76, 78, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 101, 105, 120, 121, 125, 126, 127, 130, 133, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163], "difference_upd": 49, "differenti": 81, "difficult": [91, 140, 147, 148, 149, 150, 151], "dig": [52, 153, 155], "diggersbi": 136, "digit": [5, 7, 16, 17, 18, 19, 40, 45, 54, 73, 77, 81, 83, 88, 94, 122, 153], "digit_label": [16, 17, 18, 19], "digit_pixel": [16, 17, 18, 19], "diglett": 136, "dimens": [118, 119, 120, 121, 125, 143, 154, 155], "dimension": [0, 3, 26, 40, 50, 118, 119, 125, 127, 143, 154, 155, 162], "dinner": [67, 143, 146, 147, 148, 149, 150, 151, 155], "dir": [32, 52, 63], "dir_nam": 62, "direct": [4, 5, 6, 9, 17, 19, 20, 32, 41, 45, 50, 52, 53, 54, 58, 72, 94, 102, 151, 160], "directli": [24, 28, 46, 65, 67, 73, 76, 89, 91, 94, 95, 121, 140, 146, 152, 153, 163], "directori": [22, 61, 63, 66, 73, 76, 87], "directory_nam": 73, "dirichlet": 153, "disadvantag": [91, 150], "disagre": 44, "discard": 49, "disclosur": 155, "disconnect": 64, "discourag": 99, "discours": 155, "discov": 0, "discret": [142, 143, 150, 151, 153, 155], "discrimin": [10, 14], "discuss": [32, 37, 44, 45, 47, 73, 78, 82, 87, 96, 125, 126, 127, 128, 129, 134, 135, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "disengag": 153, "disjoint": 49, "disk": [61, 91], "dispar": 153, "dispers": [139, 149], "displai": [1, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 37, 38, 39, 40, 41, 42, 45, 52, 62, 64, 65, 77, 80, 84, 88, 91, 95, 96, 102, 115, 122, 128, 140, 142, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 160], "displot": 146, "dispos": 153, "dispsid": 96, "disregard": 42, "disrupt": 64, "dist": [73, 158], "distac": 40, "distanc": [32, 40, 88, 99, 149, 150], "distinct": [0, 120, 153], "distinguish": [7, 10, 14, 15, 18, 19, 49, 61, 99, 142], "distort": 153, "distplot": [141, 154], "distribut": [15, 22, 74, 94, 115, 118, 119, 122, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155], "distriut": 149, "ditribut": 144, "ditto": 136, "div0ssutgadkwstr": 73, "dive": [139, 143, 149, 151, 152, 155], "diverg": 142, "divid": [30, 35, 41, 46, 52, 63, 73, 75, 76, 78, 83, 87, 88, 118, 121, 123, 125, 126, 129, 147, 149, 151, 152, 153], "dividend": 70, "divis": [30, 35, 41, 42, 50, 63, 64, 67, 83, 88, 97, 118, 121], "divisor": 70, "django": [24, 45], "dll": 73, "do": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 31, 32, 35, 36, 37, 40, 41, 42, 45, 46, 47, 49, 50, 56, 63, 64, 65, 67, 70, 73, 74, 75, 77, 78, 82, 83, 85, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 101, 104, 105, 108, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "do_someth": 70, "doc": [31, 67, 77, 121], "docstr": [22, 45, 79, 95], "doctor": 32, "document": [6, 25, 61, 62, 67, 77, 82, 94, 95, 100, 102, 104, 105, 119, 120, 121, 140, 143, 149, 159, 160, 161], "dodg": [137, 147, 148, 149, 150, 151, 152, 153], "dodrio": 136, "doduo": 136, "doe": [4, 11, 13, 28, 30, 31, 32, 36, 40, 41, 42, 45, 46, 47, 49, 50, 54, 61, 63, 64, 67, 68, 70, 73, 75, 77, 82, 83, 85, 87, 88, 89, 91, 94, 95, 96, 97, 119, 121, 125, 128, 129, 130, 131, 132, 134, 135, 142, 143, 145, 147, 148, 150, 155], "does_exist": 46, "doesn": [10, 31, 38, 40, 41, 42, 45, 47, 48, 54, 73, 86, 95, 132, 140, 141, 143, 148, 150, 151, 155], "dog": [47, 96], "dohc": [125, 126, 137], "dollar": [25, 100, 104, 115, 116], "domain": [0, 24, 141, 143, 148, 151, 153, 155], "dominantli": 143, "don": [7, 10, 31, 41, 42, 46, 50, 61, 67, 69, 73, 76, 83, 94, 96, 99, 125, 132, 134, 135, 140, 141, 143, 144, 146, 148, 149, 150, 151, 153, 154, 155], "donald": 61, "done": [24, 28, 30, 31, 36, 37, 40, 41, 42, 45, 50, 61, 76, 80, 86, 87, 91, 96, 99, 126, 130, 133, 140, 141, 142, 145, 147, 148, 150, 151, 152, 153, 154, 155], "dong": [4, 5], "donphan": 136, "door": [0, 95], "dot": [23, 26, 73, 76, 94, 95, 115, 116, 118, 121, 144, 147, 148, 149, 150, 151, 153, 163], "doubl": [33, 45, 67, 72, 82, 84, 85, 88, 94, 95, 96, 97, 140], "doublad": 136, "doubt": [144, 147, 148, 149], "down": [4, 5, 31, 42, 71, 73, 88, 139, 140, 142, 144, 154, 155], "download": [24, 73, 115, 116, 122], "downsid": 151, "downtown": 48, "dpi": [115, 116], "dr": [61, 73, 94], "draft": [150, 151, 152, 153, 154, 155], "drag": 147, "dragalg": 136, "dragon": 136, "dragonair": 136, "dragonit": 136, "drapion": 136, "dratini": 136, "draw": [8, 16, 17, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 153, 155], "draw_fram": 151, "draw_stripplot": 148, "drawn": [99, 145, 148, 149, 153, 155], "dress": [7, 17, 19], "drifblim": 136, "drifloon": 136, "drilbur": 136, "drill": [142, 143], "drink": 84, "drive": [0, 37, 163], "driver": [70, 153], "drop": [9, 11, 13, 16, 17, 18, 19, 28, 134, 135, 136, 142, 143, 155], "drop_dupl": [131, 135], "drope": 129, "dropna": [125, 135, 141, 143, 145, 154, 155], "dropoff_datetim": 153, "dropoff_latitud": 153, "dropoff_longitud": 153, "drowze": 136, "druddigon": 136, "dry": [67, 94], "dt_object": 57, "dt_object1": 54, "dt_object2": 54, "dt_string": [54, 55], "dtype": [18, 19, 115, 118, 119, 121, 122, 125, 126, 127, 133, 134, 136, 137, 144, 145, 154], "duc": 32, "ducklett": 136, "due": [31, 33, 42, 44, 46, 61, 64, 89, 91, 121, 147], "dugtrio": 136, "dull": 140, "dummi": [144, 151, 155], "dump": [61, 77], "dumpstack": 62, "dunsparc": 136, "duosion": 136, "duplic": [40, 49, 73, 85, 89, 125, 129, 135], "durant": 136, "durat": 153, "dure": [24, 50, 63, 64, 70, 72, 73, 91, 99, 140, 143, 147, 152], "dusclop": 136, "duski": 142, "dusknoir": 136, "duskul": 136, "dusti": 142, "dustox": 136, "dutch": 61, "duti": 139, "dwebbl": 136, "dynam": [22, 85, 89, 91], "dynamicfeatur": 82, "dystopia": [11, 13], "e": [3, 4, 5, 7, 11, 12, 13, 23, 24, 28, 32, 40, 41, 42, 44, 45, 46, 47, 48, 49, 61, 62, 64, 68, 69, 73, 75, 80, 83, 84, 86, 87, 88, 94, 96, 116, 119, 121, 122, 125, 126, 127, 130, 131, 132, 133, 134, 135, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163], "e0e0e0": 115, "e15e5601926f": 99, "e2e604bf92d": 63, "e32e417070a1": 85, "e8fb9ed4ccdc": 153, "each": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 30, 37, 38, 40, 41, 42, 45, 46, 47, 48, 49, 64, 67, 71, 72, 73, 77, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 99, 118, 119, 120, 121, 125, 126, 127, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 162], "earli": 23, "earlier": [139, 140, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "earn": 88, "earth": 67, "easi": [22, 24, 27, 40, 41, 45, 61, 76, 78, 80, 91, 94, 125, 126, 140, 145, 147, 149, 151, 153, 155, 163], "easier": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 31, 32, 50, 71, 76, 81, 87, 91, 99, 127, 147, 152, 154], "easili": [28, 52, 57, 77, 83, 96, 129, 140, 144, 147, 155, 163], "eat": [80, 96], "eaxh": 11, "eb3d2b": 73, "economi": [4, 11, 13], "ecosystem": [20, 101, 105], "ed": 40, "ed7c4dc05b92": 68, "edg": [0, 7, 116, 141, 150, 151, 154], "edgecolor": [141, 147, 148, 151, 154, 155], "editor": [38, 140], "edu": 9, "educ": [32, 147, 153], "educa": 32, "education_level": 150, "edward": 154, "ee": 32, "ee4e8ee8c904": 63, "ee80ca1a52c8": 84, "eelektrik": 136, "eelektross": 136, "eeve": 136, "effect": [45, 61, 69, 73, 94, 142, 144, 147, 151], "effici": [31, 40, 41, 44, 61, 67, 73, 76, 89, 91, 94, 118, 125, 127, 141, 148, 153], "effort": 154, "eg": [30, 32, 83, 91], "egg": 73, "eh": 74, "eigenvalu": [26, 121], "eigenvector": 26, "eight": 137, "eighti": 32, "einstein": 32, "either": [32, 35, 36, 38, 58, 64, 65, 77, 82, 88, 91, 96, 125, 126, 132, 139, 140, 142, 143, 146, 147, 149, 150, 151, 153, 154, 155], "ekan": 136, "el": 45, "elabor": 77, "electabuzz": 136, "electivir": 136, "electr": 136, "electrik": 136, "electrod": 136, "eleg": [22, 27, 28, 29, 48, 50, 71], "elegantli": 27, "elekid": 136, "element": [27, 40, 41, 44, 45, 58, 62, 67, 72, 73, 74, 80, 85, 86, 87, 88, 90, 95, 119, 120, 121, 122, 125, 127, 128, 140, 151, 153, 155], "elementari": 149, "elementtre": 61, "elementwis": [121, 122], "elemnet": [48, 85], "elemtnt": 85, "elgyem": 136, "elif": [14, 22, 29, 35, 39, 42, 43, 65, 81], "elimin": [42, 85, 99], "elliot": 139, "ellipsi": 82, "ello": 45, "els": [16, 17, 18, 19, 22, 27, 29, 32, 35, 36, 39, 43, 45, 46, 48, 50, 61, 67, 70, 71, 73, 78, 81, 84, 87, 94, 95, 115, 126, 129, 131, 132, 140, 141, 143, 145, 148, 151, 153, 154], "elucid": 151, "email": [5, 14, 15, 16, 17, 24, 32, 33, 61, 90], "email_exchanges_big": 61, "emath": 123, "emb": [25, 100, 104], "embark": [149, 151], "embark_town": [149, 151], "embed": [44, 77], "emboar": 136, "emili": 94, "emolga": 136, "emp": [32, 95, 96], "emp_data": 70, "emp_id": [48, 70], "emp_nam": 48, "emphasi": [95, 152, 155], "employe": [94, 95, 96, 153], "employee_info": 96, "empoleon": 136, "empow": [0, 32, 45, 142], "empoye": 70, "empti": [11, 31, 32, 40, 41, 42, 45, 46, 47, 48, 61, 62, 67, 69, 74, 76, 94, 95, 118, 121, 125, 126, 131, 133, 146], "empty_lik": 121, "en": 146, "enabl": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 96, 154, 162], "encapsul": 29, "enclos": [29, 40, 41, 45, 47, 63, 80, 85, 148], "encod": [45, 61, 63, 64, 139, 155, 156], "encount": [63, 64, 121, 153], "encourag": 150, "encrypt": 74, "end": [25, 27, 28, 36, 40, 41, 42, 45, 47, 54, 59, 61, 63, 64, 67, 71, 77, 82, 85, 87, 91, 100, 104, 118, 122, 125, 126, 140, 142, 143, 144, 145, 148, 151, 153, 154, 155, 163], "end_index": 24, "endindex": 120, "endless": [0, 150], "endpoint": 122, "endswith": 45, "enforc": [82, 86], "engag": 153, "engin": [24, 32, 95, 125, 126, 136, 137, 153], "engine_rotation_spe": 83, "england": [61, 63, 64, 94, 115], "english": [45, 48, 61, 84, 91, 140], "enhanc": [141, 147, 148, 155], "enjoi": [45, 73, 145, 150], "enlarg": 140, "enough": [37, 46, 47, 83, 139, 141, 147, 149, 150, 151, 152, 153, 154], "enrol": 151, "ensembl": [162, 163], "ensur": [50, 61, 82, 96, 142, 145, 147, 151, 153, 154], "ensure_ascii": 61, "entei": 136, "enter": [36, 37, 38, 39, 41, 42, 64, 65, 67, 78, 82, 87, 88, 96, 153, 155], "enterpris": 24, "entir": [27, 28, 45, 46, 47, 48, 61, 91, 96, 128, 146, 150, 151, 153, 155], "entireti": 155, "entiti": [81, 94], "entri": [18, 19, 38, 40, 48, 64, 125, 126, 133], "enuemer": 40, "enumer": [10, 11, 14, 15, 16, 17, 40, 45, 49, 148, 151], "env": 24, "environ": [23, 73, 91, 143, 155], "eof": 61, "eoferror": 63, "ep": 123, "epar": 61, "epitom": 154, "epoch": 58, "epsilon": [8, 18, 19], "eq": 73, "equal": [27, 36, 37, 38, 39, 40, 41, 42, 44, 46, 70, 71, 73, 75, 80, 83, 84, 88, 97, 116, 118, 121, 125, 132, 146, 149, 151, 153], "equal1": 73, "equat": [5, 7, 12, 67, 141], "equip": [122, 144], "equival": [28, 30, 31, 40, 42, 45, 46, 48, 50, 52, 53, 54, 61, 72, 84, 88, 95, 96, 99, 120, 121], "er": 32, "era": 155, "eras": 61, "erf": [73, 75], "erfc": [73, 75], "eric": 70, "erp": 24, "err_kw": 153, "err_palett": 153, "err_styl": 153, "errcolor": 151, "errno": 63, "error": [0, 7, 24, 27, 30, 31, 42, 44, 45, 48, 49, 61, 64, 65, 67, 68, 70, 75, 81, 82, 85, 86, 87, 91, 94, 95, 96, 97, 121, 126, 134, 141, 142, 151, 152], "errstat": 123, "errwidth": 151, "escap": [25, 62, 100, 104], "escavali": 136, "especi": [26, 91, 99, 118], "espeon": 136, "espurr": 136, "essenti": [23, 96, 118, 122, 151], "essesnti": 108, "establish": [145, 153], "estim": [4, 8, 12, 141, 143, 144, 145, 146, 147, 150, 151, 152, 153], "estonia": 64, "et": 61, "etc": [4, 7, 16, 17, 18, 19, 24, 25, 27, 28, 40, 41, 42, 44, 45, 47, 48, 49, 52, 53, 54, 58, 67, 72, 73, 81, 82, 83, 86, 88, 89, 91, 94, 95, 100, 104, 118, 120, 121, 122, 125, 133, 136, 137, 139, 144, 145, 148, 152, 153, 163], "ethan": [50, 67, 70, 87], "ethic": 162, "etre": 61, "euclidean": [75, 88], "europ": [52, 56], "eval": [24, 67, 87], "evalu": [35, 36, 37, 38, 41, 42, 61, 72, 87, 88, 91], "evan": 139, "even": [22, 24, 28, 29, 30, 31, 35, 37, 38, 40, 41, 42, 44, 45, 46, 50, 61, 64, 67, 68, 70, 71, 72, 77, 82, 83, 86, 87, 88, 91, 95, 96, 99, 121, 122, 126, 127, 130, 131, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "even_list": 72, "even_no": 72, "even_num": 67, "even_numb": [30, 40, 50, 72], "even_odd": 67, "evenli": [118, 122], "evenodd": 70, "evens_and_odd": 67, "event": [8, 64], "eventu": [152, 154], "ever": [32, 40, 45, 89, 145, 148, 155], "everi": [0, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 24, 37, 40, 42, 44, 45, 49, 50, 54, 64, 71, 73, 85, 89, 91, 94, 95, 96, 97, 99, 119, 125, 139, 142, 143, 144, 146, 148, 149, 153, 154, 155], "everybodi": 45, "everyon": [70, 144], "everyth": [30, 46, 47, 48, 49, 65, 73, 85, 89, 94, 95, 148, 151, 152], "everytim": 148, "everywher": 27, "evid": [83, 141, 143, 147], "evok": 142, "ew": 45, "eward": 32, "ex": [0, 32, 91], "exact": [4, 44, 140, 147, 149], "exactli": [30, 32, 42, 45, 64, 99, 140, 147], "examin": 143, "exampl": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 58, 61, 63, 64, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 81, 82, 84, 85, 86, 87, 89, 90, 94, 95, 97, 99, 100, 104, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 140, 141, 142, 144, 145, 146, 147, 151, 152, 153, 155, 156, 163], "exaplan": [63, 94], "exc_info": 64, "excadril": 136, "exceed": 71, "excel": [22, 28, 61, 125], "excel_book": 61, "except": [7, 18, 19, 22, 24, 27, 30, 32, 45, 46, 61, 66, 73, 77, 81, 82, 95, 130, 140, 142, 143, 147, 149, 151], "exception": 144, "exception1": 64, "exception2": 64, "exceptioni": 64, "exceptionii": 64, "exceptionn": 64, "excercis": 124, "exceric": 163, "excit": 0, "exclud": [33, 49, 139, 153, 154], "exclus": [61, 73, 119, 125, 129], "excus": 155, "execut": [6, 24, 27, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 50, 58, 59, 61, 64, 67, 68, 73, 78, 80, 82, 87, 89, 91, 94, 95, 102, 129, 132, 134, 135, 155, 160, 163], "exeggcut": 136, "exeggutor": 136, "exercis": [22, 68, 69, 136, 138, 139, 152, 153], "exhaust": [27, 40, 91, 143], "exist": [4, 30, 31, 32, 38, 45, 46, 47, 48, 49, 50, 61, 63, 73, 89, 94, 95, 96, 99, 125, 128, 129, 130, 131, 132, 134, 135, 143, 151, 155, 156], "exit": [40, 41, 42, 61, 63, 73, 80], "exmpl": 45, "exp": [44, 73, 75, 83, 121, 123], "expand": [72, 77, 122, 152], "expandtab": 45, "expect": [7, 11, 13, 32, 64, 88, 125, 133, 147, 149, 150, 153, 155], "expens": [71, 94], "experi": [0, 24, 140, 143, 144, 147, 148, 149, 151, 155, 162], "experiment": [24, 163], "expert": [0, 150], "explain": [5, 14, 15, 16, 17, 30, 49, 71, 82, 89, 99, 122, 130, 133, 139, 140, 142, 143, 144, 148, 153], "explan": [33, 36, 37, 38, 40, 41, 42, 45, 50, 52, 55, 57, 59, 64, 65, 68, 69, 70, 72, 74, 75, 78, 86, 88, 94, 95, 96, 97, 99, 109, 121, 122, 148], "explanatori": 141, "explicit": [0, 82, 99, 121, 142, 148, 150, 151], "explicitli": [0, 29, 44, 50, 61, 67, 83, 119, 140, 151], "explod": 115, "exploit": 91, "explor": [0, 32, 58, 108, 140, 143, 145, 148, 150], "exploratori": [0, 140], "exploud": 136, "expm1": [73, 75], "expon": [27, 40, 45, 75, 87], "exponenti": [45, 73, 74, 84, 88, 121, 150, 153], "export": 77, "expovari": 74, "express": [31, 32, 36, 37, 38, 41, 42, 45, 46, 48, 50, 67, 70, 72, 82, 84, 86, 87, 88, 90, 97, 125, 153], "expression1": 39, "expression2": 39, "expression3": 39, "expression4": 39, "extempor": 152, "extend": [31, 45, 67, 82, 94, 96, 134, 142, 149, 150, 151], "extens": [8, 20, 24, 29, 73, 77, 80, 82, 87, 101, 105, 115, 116, 144, 153], "extent": [148, 153], "extern": [42, 64], "extra": [31, 62, 63, 82, 132, 148, 149, 152], "extrac": [16, 17], "extract": [0, 8, 10, 14, 15, 16, 17, 18, 19, 32, 61, 85, 125, 148, 156], "extrapol": 144, "extrem": [125, 140, 141, 142, 143, 148, 150, 153, 155], "ey": [119, 123, 151], "f": [29, 38, 39, 44, 45, 53, 54, 61, 64, 65, 67, 70, 73, 77, 87, 90, 94, 95, 99, 116, 121, 122, 129, 132, 134, 139, 145, 148, 150, 153], "f09af94986b4": 47, "f1": [1, 8], "f1_histori": 8, "f2db54e8947c": 148, "f3f4b74da706": 47, "f45": 32, "f49307ce4aaa": 49, "f6b2789c4214": 134, "f7b055f5764d": 28, "f7d40ce0c112": 31, "f7ffd6347533": 63, "fab": [73, 75], "fab2e1af2c65": 99, "fabric": 155, "fabul": 147, "face": [7, 71, 139, 154], "facebook": 45, "facecolor": [115, 147, 151], "facecream": 116, "facecremsalesdata": 116, "faceprep": 42, "facet": [140, 143, 152, 154, 155], "facet_kw": 152, "facetgrid": [143, 144, 145, 149, 152, 153, 154, 158], "facewashsalesdata": 116, "facil": 73, "facilit": [149, 151], "fact": [27, 30, 46, 47, 83, 118, 143, 150, 152, 153], "factor": [26, 42, 141, 145, 149, 150, 151, 153, 158], "factori": [44, 67, 71, 73, 75, 77], "factorplot": [147, 149, 150, 152, 153], "fade": [142, 149], "fahrenheit": 31, "fail": [4, 5, 37, 38, 41, 61, 63, 125, 142], "fair": [145, 153], "fairi": 136, "fairli": 28, "fake": 153, "falcon": 45, "fall": [36, 44, 63, 78, 85, 147, 153], "fallback": 119, "fals": [1, 8, 11, 13, 16, 17, 18, 19, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 49, 61, 67, 73, 77, 81, 83, 84, 87, 88, 96, 97, 119, 120, 122, 123, 125, 129, 130, 131, 132, 134, 135, 136, 137, 139, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "falsi": 88, "famili": [5, 11, 13, 77, 144, 151, 153], "familiar": [31, 45, 47, 95, 116, 137, 145, 148, 150, 151, 152], "fan": [148, 155], "fanci": [120, 125], "fandango": 24, "far": [32, 38, 83, 99, 122, 136, 140, 141, 142, 143], "fare": [149, 151, 153], "farfetch": 136, "fasewash": 116, "fashion": [5, 7, 17, 19, 96], "fast": [61, 118, 125, 129, 153], "faster": [44, 47, 50, 85, 91, 94, 96, 121], "fastest": 163, "fat": 152, "fatal": 139, "fatorplot": 147, "favorit": 47, "fbf7cddd4b2a": 63, "fc": [115, 151], "fdel": 31, "fearow": 136, "feasibl": 134, "featur": [0, 1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 30, 94, 96, 97, 129, 139, 141, 142, 143, 144, 145, 147, 149, 150, 153, 154, 155, 163], "feb": [53, 54, 80], "februari": [38, 53, 54], "fed": 0, "feder": 61, "feeba": 136, "feed": [37, 150, 162], "feedback": [37, 67], "feedforward": [18, 19], "feedpars": 24, "feel": [38, 139, 143, 144, 145, 147, 148, 149], "femal": [61, 94, 136, 139, 143, 146, 148, 149, 150, 151, 155], "female_dinn": 150, "female_lunch": 150, "fenc": 149, "fennekin": 136, "feraligatr": 136, "ferrose": 136, "ferrothorn": 136, "fetch": [12, 73, 125, 140, 143, 144, 147, 149, 151, 153, 154, 155], "few": [29, 30, 31, 40, 41, 44, 45, 48, 52, 108, 122, 125, 128, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "fewer": [22, 153, 154], "fffbe51149a7": 54, "fget": 31, "fh": 64, "fi": 50, "fib": 73, "fibo": 73, "fibo1": 73, "fibonacci": [28, 41, 73], "fibonacci_numb": 28, "fiction": 151, "fiddl": 152, "field": [11, 13, 45, 61, 84, 125, 128, 142, 153], "fifa_data": 115, "fig": [25, 46, 49, 100, 104, 141, 146, 150], "fight": [11, 12, 13, 14, 15, 16, 17, 18, 19, 136], "fighth": [16, 17, 18, 19], "figsiz": [8, 10, 11, 13, 16, 17, 18, 19, 25, 100, 104, 115, 142, 150, 151, 153, 157], "figur": [8, 10, 11, 16, 17, 18, 19, 39, 65, 76, 81, 82, 88, 96, 115, 116, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 157], "file": [6, 24, 27, 28, 30, 45, 63, 64, 65, 69, 70, 73, 76, 77, 80, 81, 83, 87, 91, 102, 116, 125, 133, 134, 135, 136, 155, 160], "file_data": 61, "file_nam": 125, "filedata": 122, "fileexistserror": 73, "filenam": [61, 73, 87, 125, 144], "fileno": 61, "filenotfounderror": [61, 63], "fill": [115, 118, 119, 122, 144, 163], "fillna": 125, "filter": [46, 48, 50, 135], "filter_cond": 125, "filterwarn": [141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "fin": 64, "final": [7, 28, 30, 40, 41, 42, 45, 46, 61, 63, 68, 69, 81, 83, 87, 89, 99, 121, 135, 142, 145, 149, 150, 151, 153, 154, 155], "finali": 122, "finaltext": 87, "financ": 118, "financi": 44, "find": [1, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 28, 30, 32, 40, 41, 45, 46, 49, 50, 52, 56, 61, 64, 67, 71, 73, 78, 83, 85, 88, 94, 96, 99, 120, 121, 122, 125, 129, 131, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 163], "find_even_numb": 67, "find_most_common_word": 61, "find_most_frequent_word": 61, "findarea": 96, "fine": [81, 87, 153], "finer": 140, "finfo": 123, "finish": [29, 40, 82, 143, 146], "finit": [27, 44], "finland": [11, 13, 30, 38, 40, 45, 46, 47, 50, 61, 64, 83, 94], "finneon": 136, "fintech": 148, "fir": 141, "fire": 136, "firm": 149, "firmer": 154, "first": [0, 7, 8, 9, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 35, 36, 37, 39, 40, 41, 42, 45, 47, 50, 52, 53, 54, 58, 61, 62, 63, 64, 67, 68, 70, 73, 77, 78, 80, 82, 83, 87, 89, 91, 94, 95, 96, 97, 99, 115, 120, 121, 125, 132, 134, 135, 140, 142, 143, 145, 147, 149, 150, 151, 152, 153, 154, 155, 163], "first_lett": 45, "first_nam": [30, 32, 38, 40, 45, 48, 67, 83, 86], "first_name_to_list": 86, "first_nm": 70, "first_numb": 87, "firstnam": [32, 33, 67, 70, 83, 87, 94], "fisher": [10, 14], "fit": [0, 1, 4, 5, 11, 12, 13, 77, 141, 143, 144, 145, 146, 149, 150, 153], "fit_fn": 141, "fit_reg": 143, "five": [32, 40, 64, 96, 115, 125, 126, 128], "fix": [25, 40, 63, 70, 91, 100, 104, 125, 143, 153], "flaaffi": 136, "flab\u00e9b\u00e9": 136, "flag": [12, 16, 17, 18, 19, 32, 115, 123, 129, 130, 131, 132, 134, 135, 136, 139, 145, 153], "flag_r": 145, "flamer": 136, "flaot": 44, "flareon": 136, "flase": 88, "flask": [24, 45], "flat": 123, "flat_latency_grid": 8, "flat_prob": 8, "flat_throughput_grid": 8, "flatten": [8, 10, 11, 12, 13, 14, 15, 50, 118, 147], "flattened_list": 50, "flavor": [20, 101, 105], "flee": 139, "fleme": 40, "fletchind": 136, "fletchl": 136, "flexibl": [24, 33, 85, 87, 125, 141, 143, 146, 147, 148], "flexibli": 146, "flierprop": 149, "fliersiz": 149, "flight": [139, 156, 157], "fligth": 156, "flip": 140, "float": [24, 31, 39, 42, 45, 46, 47, 49, 52, 59, 63, 64, 73, 74, 75, 78, 82, 84, 85, 86, 88, 96, 119, 125, 142, 147, 148, 150, 151], "float64": [115, 119, 121, 125, 126, 127, 133], "float64index": 125, "float_1": 84, "float_2": 84, "float_numb": 87, "floatingpointerror": 63, "floatzel": 136, "floett": 136, "floor": [73, 75, 83, 88, 95, 97, 123, 147], "floor_divis": 83, "florg": 136, "flow": [10, 40, 41, 42, 45, 61, 64, 154], "flowchart": 0, "flower": [3, 5, 10, 14, 15, 40, 139, 147], "floyd": 40, "fluctuat": 153, "flush": [41, 59, 61, 77, 87], "fly": [28, 94, 95, 96, 136], "flygon": 136, "flying_test": 94, "fmod": [73, 75], "fmri": 153, "fmt": 115, "fn": 1, "fo": 32, "focu": [141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155], "focus": [87, 94], "foe": 73, "folder": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 30, 62, 73, 125, 136, 137, 142, 144, 145, 150, 151, 153], "follow": [0, 1, 3, 4, 5, 6, 7, 17, 19, 22, 27, 28, 29, 30, 31, 32, 35, 37, 38, 40, 42, 44, 45, 46, 47, 48, 49, 50, 61, 63, 64, 65, 67, 70, 71, 73, 74, 76, 77, 78, 80, 82, 83, 84, 87, 88, 89, 91, 94, 95, 96, 97, 99, 102, 108, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 140, 142, 153, 154, 155, 156, 160], "fom": 41, "font": [115, 140, 148, 151, 153], "font_scal": [140, 150], "fontdict": 115, "fontnam": 115, "fontsiz": [115, 150, 155], "fontweight": [115, 150, 151, 155], "foo": [32, 46, 48], "food": [84, 85], "food_list": 47, "food_staff": 67, "food_tupl": 47, "foongu": 136, "foot": 115, "footbal": [32, 155], "football_plot": 155, "forc": [65, 119, 126, 139], "force_edgecolor": 154, "forcibli": 77, "ford": [96, 137], "forev": 41, "forget": [7, 82], "forgot": 63, "forgotten": 41, "form": [4, 7, 8, 10, 12, 14, 29, 36, 40, 44, 45, 48, 50, 53, 54, 61, 62, 70, 72, 73, 78, 82, 85, 91, 94, 118, 119, 121, 125, 129, 130, 133, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155], "formal": [70, 99], "format": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 33, 38, 40, 47, 48, 57, 58, 61, 73, 82, 94, 95, 97, 125, 126, 133, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "format_regex": 54, "format_vers": 77, "former": [82, 96], "formfe": 45, "formul": 40, "formula": [1, 4, 5, 32, 67], "forretress": 136, "fortan": 122, "forth": 73, "fortun": [22, 44], "forum": [147, 148, 149, 151], "forward": [40, 45, 62, 63, 85, 153, 156], "found": [29, 32, 40, 42, 45, 48, 54, 63, 64, 73, 88, 91, 96, 119, 129, 132, 142, 149, 151, 153, 156], "foundat": 152, "four": [9, 10, 14, 32, 35, 40, 54, 67, 82, 84, 87, 96, 99, 122, 125, 126, 137, 139, 140, 149, 155], "fourth": [32, 41, 87, 129], "fp": 1, "frac": [11, 13, 16, 17, 18, 19, 88], "fraction": [54, 75, 141], "frame": [15, 16, 17, 18, 19, 71, 82, 125, 129, 132, 133, 134, 149, 154, 155], "frameobject": 82, "framework": [7, 18, 19, 24, 109, 155], "francisco": 139, "frank": 70, "fraudul": [5, 14, 15, 16, 17], "fraxur": 136, "free": [0, 22, 38, 61, 144, 145, 147, 148, 149, 151, 153, 163], "freed": 61, "freedom": [4, 11, 13, 154], "freeli": [22, 153], "french": 61, "freq_dist": 94, "frequenc": [94, 125, 149, 150], "frequent": [32, 42, 46, 61, 73, 120, 121, 125, 149, 152], "fresher": 155, "frexp": [73, 75], "fri": [58, 148, 150, 151], "friend": 5, "friendli": [28, 50], "frillish": 136, "froaki": 136, "frogadi": 136, "from": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 27, 28, 29, 30, 31, 32, 38, 40, 41, 42, 44, 45, 50, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 74, 75, 77, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 95, 96, 97, 99, 100, 104, 108, 115, 116, 118, 119, 120, 121, 132, 133, 134, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "from_arrai": [129, 132], "from_dict": [125, 137], "from_tupl": [128, 135], "fromarrai": 123, "fromit": 123, "fromtimestamp": [52, 53, 57], "fron": [11, 13], "front": [32, 45, 151], "front_end": 46, "frontend": 140, "froslass": 136, "frown": 99, "fruit": [32, 38, 40, 46, 47, 49, 64, 82, 84, 95, 127, 151], "fruit1": 127, "fruit2": 127, "fruit3": 127, "fruit4": 127, "fruits1": 84, "fruits2": 84, "fruits3": 84, "fruits4": 84, "fruits_and_veg": 64, "fruits_df": 127, "fruits_dict": 127, "fruits_list": 127, "fruits_veget": 47, "fset": 31, "fsum": [73, 75], "fucntion": [68, 69], "fulfil": 143, "full": [9, 16, 17, 18, 19, 24, 52, 53, 54, 61, 62, 67, 73, 76, 83, 88, 119, 121, 150], "full_data": 61, "full_lik": 119, "full_nam": [67, 70, 83], "full_stack": 46, "fulli": 151, "fun": [32, 67, 68, 69, 70, 73, 83, 88, 142, 154], "fun1": [68, 69, 96], "fun2": [68, 69, 96], "fun3": [69, 96], "func": [30, 132, 148], "func1": 94, "func2": 94, "function": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 31, 32, 33, 35, 41, 42, 44, 52, 58, 59, 61, 62, 63, 64, 68, 74, 76, 80, 81, 82, 83, 84, 85, 86, 89, 94, 95, 99, 101, 105, 116, 118, 122, 125, 127, 140, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155], "function_nam": 67, "functionnam": 64, "functool": 72, "fundament": [94, 125, 142], "fungi": 67, "fur": 7, "furfrou": 136, "furret": 136, "further": [3, 11, 12, 13, 14, 15, 16, 17, 28, 45, 61, 63, 65, 67, 87, 89, 91, 125, 126, 134, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "furthermor": [28, 30, 31, 46, 67, 73, 89, 94, 99, 140], "furthest": 32, "futur": [40, 42, 61, 83, 99, 133, 142, 146, 152, 153, 155, 163], "futurewarn": [133, 137, 142, 146], "g": [0, 4, 5, 7, 11, 13, 23, 30, 42, 46, 47, 61, 83, 115, 116, 119, 121, 122, 125, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "ga": 115, "gabit": 136, "gain": [143, 144, 152, 153], "gallad": 136, "gallademega": 136, "galvantula": 136, "gam": 153, "game": [24, 76], "gamma": [73, 74, 75, 153], "gammavari": 74, "gap": 81, "garbag": [61, 63, 95, 130], "garbodor": 136, "garchomp": 136, "garchompmega": 136, "gardevoir": 136, "gardevoirmega": 136, "gari": 70, "gas_pric": 115, "gas_price_figur": 115, "gastli": 136, "gastrodon": 136, "gate": 50, "gather": [125, 126, 130, 148], "gaug": [147, 148], "gauss": 74, "gaussian": [74, 122, 143, 144, 146, 153], "gaussian_anomali": 8, "gaussian_anomaly_detect": 8, "gaussiananomalydetect": 8, "gaussiankd": 150, "gave": 61, "gca": [148, 154, 155], "gcd": 73, "gdp": [4, 11, 13, 153], "gea": 115, "geeksforgeek": [4, 5], "gender": [48, 61, 94, 139, 143, 147, 148, 150, 151, 155], "gender_domin": 150, "gener": [4, 5, 7, 11, 14, 15, 18, 19, 22, 24, 27, 30, 34, 35, 40, 41, 44, 45, 47, 63, 64, 65, 67, 71, 72, 73, 74, 76, 77, 82, 85, 88, 91, 94, 95, 96, 99, 108, 116, 119, 120, 129, 132, 135, 136, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163], "generate_color": 73, "generate_full_nam": 67, "generate_group": 70, "generatig": 141, "generatingdata": [143, 145], "generatorexit": 63, "generos": [11, 13], "genesect": 136, "genexpr": 28, "genfromtxt": [122, 123], "gengar": 136, "gengarmega": 136, "genotyp": 147, "gentleman": 153, "geodud": 136, "geograph": 153, "gereet": 67, "germain": 115, "german": 61, "germancar": 137, "germani": 137, "get": [4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 27, 28, 29, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 49, 50, 54, 57, 58, 59, 60, 61, 63, 64, 65, 67, 68, 70, 72, 73, 82, 83, 88, 89, 94, 95, 96, 97, 99, 101, 102, 105, 119, 120, 122, 126, 128, 132, 133, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 163], "get_cost": [11, 13], "get_data": 95, "get_first_ten_countri": 30, "get_group": 137, "get_height": 151, "get_last_ten_countri": 30, "get_offset": 147, "get_string_list": 30, "get_temperatur": 31, "get_width": 151, "get_x": 151, "get_xlim": 148, "get_xticklabel": 151, "get_yticklabel": 151, "getattr": [95, 96, 148], "getcwd": 73, "getcwdb": 62, "getdata": 95, "getdatalim": 147, "getrandbit": 74, "getroot": 61, "getstat": 74, "ggplot": 115, "ghost": 136, "gibl": 136, "gift": 30, "gigabyt": 155, "gigalith": 136, "girafarig": 136, "giratinaalt": 136, "giratinaorigin": 136, "gist": 144, "gist_earth": 145, "gist_earth_r": 145, "gist_grai": 145, "gist_gray_r": 145, "gist_heat": 145, "gist_heat_r": 145, "gist_ncar": 145, "gist_ncar_r": 145, "gist_rainbow": 145, "gist_rainbow_r": 145, "gist_stern": 145, "gist_stern_r": 145, "gist_yarg": 145, "gist_yarg_r": 145, "github": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 83, 115, 116], "give": [14, 15, 24, 27, 30, 32, 36, 37, 38, 40, 42, 44, 45, 64, 67, 73, 75, 81, 83, 88, 94, 95, 108, 118, 119, 121, 122, 125, 126, 127, 133, 134, 135, 136, 137, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155], "giveawai": 145, "given": [1, 3, 4, 28, 30, 33, 35, 36, 40, 41, 42, 45, 49, 52, 54, 58, 59, 63, 64, 67, 70, 73, 77, 80, 81, 84, 87, 89, 96, 99, 118, 119, 122, 126, 143, 147, 148, 150, 153, 155], "gkdive": 115, "gkhandl": 115, "gkkick": 115, "gkposit": 115, "gkreflex": 115, "glaceon": 136, "glali": 136, "glaliemega": 136, "glameow": 136, "glanc": 83, "gligar": 136, "glimps": 150, "gliscor": 136, "global": [22, 29, 63, 72, 79, 81, 89], "global_lang": 68, "global_var": [68, 69], "globalglob": 68, "gloom": 136, "glu": 141, "gmtoff": 54, "gmtoff_fract": 54, "gnbu": 145, "gnbu_r": 145, "gnuplot": 145, "gnuplot2": 145, "gnuplot2_r": 145, "gnuplot_r": 145, "go": [4, 5, 7, 8, 11, 16, 17, 18, 19, 24, 30, 31, 39, 40, 42, 44, 64, 67, 71, 82, 88, 89, 91, 94, 97, 99, 118, 136, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "goal": [0, 123, 140, 143, 144, 152, 163], "god": 48, "goe": [11, 12, 13, 14, 15, 16, 17, 29, 59, 63, 64, 65, 73, 94, 99, 129, 132, 144, 150], "gogh": 24, "gogoat": 136, "golbat": 136, "goldeen": 136, "golduck": 136, "golem": 136, "golett": 136, "golurk": 136, "gone": [143, 147, 153], "gonna": 153, "good": [16, 17, 18, 19, 29, 40, 45, 47, 61, 64, 65, 67, 70, 73, 78, 82, 87, 115, 116, 125, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "goodra": 136, "googl": [24, 45, 77, 96, 153], "googol": 84, "goomi": 136, "gorebyss": 136, "got": [30, 33, 69, 73, 85, 86, 97, 125, 149, 150, 163], "gothita": 136, "gothitel": 136, "gothorita": 136, "gourgeistaverag": 136, "gourgeistlarg": 136, "gourgeistsmal": 136, "gourgeistsup": 136, "govern": [11, 13, 147, 153], "gpt": 162, "grab": 151, "gracefulli": [42, 134], "grade": [36, 37, 38, 115, 126, 147], "gradient": [18, 19, 163], "graduat": 150, "grai": [142, 145, 147, 148, 155], "granbul": 136, "grandpar": 96, "grant": 38, "grape": 40, "graph": [0, 4, 116, 144, 147, 151, 153], "graph_obj": 11, "graphic": [24, 64, 148, 150, 154, 156], "grass": 136, "gravel": 136, "graviti": [67, 83, 86, 92], "gray_r": 145, "grayscal": [9, 17, 19, 142], "great": [35, 89, 97, 141, 147, 148, 153, 154, 155, 156], "greater": [36, 38, 39, 41, 42, 65, 73, 75, 83, 88, 97, 118, 121, 125], "greek": 94, "green": [16, 17, 18, 19, 40, 82, 142, 145, 146, 148], "greens_r": 145, "greet": [30, 67, 70, 87, 95], "greet_modul": 73, "grei": [16, 17, 18, 19, 140, 142, 145, 146, 151], "greninja": 136, "gretta": 70, "greyish": 142, "greys_r": 145, "grid": [8, 11, 13, 116, 118, 119, 140, 145, 150, 152, 153, 154, 155], "grid_kw": 145, "gridlin": 116, "gridsiz": 150, "gridspec": 155, "gridspec_kw": [150, 155], "grimer": 136, "grip": [149, 154], "grotl": 136, "groudon": 136, "groudonprim": 136, "ground": [94, 136], "group": [0, 24, 125, 137, 140, 143, 147, 149, 150, 151, 153], "groupbi": [137, 148, 150], "grouper": 150, "grovyl": 136, "grow": [22, 67, 76, 87], "growlith": 136, "growth": [11, 12, 13, 153], "grumpig": 136, "gt": 73, "guarante": [47, 61, 64, 155], "guava": [40, 46, 49, 151], "guess": [14, 15, 31, 65, 119, 125, 139, 148, 149, 151, 152], "guest": 38, "gui": [24, 64, 141, 145, 147, 151, 153], "guid": [0, 22, 25, 100, 104, 141, 142, 144], "guidanc": [0, 142], "gulpin": 136, "gun": 139, "gunmet": 142, "gurdurr": 136, "guthri": 139, "gyarado": 136, "gyaradosmega": 136, "gz": 73, "h": [0, 28, 32, 40, 41, 42, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 86, 88, 121, 139, 149, 151], "h1": 122, "h2": 122, "ha": [3, 7, 11, 13, 16, 17, 18, 19, 22, 24, 27, 29, 30, 31, 32, 33, 35, 37, 38, 40, 42, 44, 45, 48, 49, 50, 52, 58, 59, 61, 62, 63, 64, 65, 67, 69, 70, 72, 73, 76, 80, 82, 83, 84, 85, 86, 88, 89, 91, 94, 95, 96, 99, 115, 120, 121, 122, 125, 126, 127, 128, 131, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155], "habit": 153, "hack": 150, "hacker_new": 61, "had": [29, 30, 63, 67, 70, 73, 121, 140, 144, 145, 148, 149, 150, 151, 152, 153, 155], "hadlei": [143, 153], "half": [46, 142, 152], "halt": 64, "hamper": 73, "hand": [0, 40, 48, 49, 61, 68, 70, 91, 94, 95, 140, 143, 144, 145, 148, 151, 153, 155], "handel": [22, 66], "handi": [24, 115, 116, 125, 136, 137, 143, 144, 147, 148, 150, 153, 154, 155], "handl": [5, 24, 27, 28, 29, 42, 45, 58, 59, 61, 62, 63, 65, 70, 118, 120, 126, 134, 144, 151, 153], "handler": 42, "handwritten": [5, 7, 16, 18], "hank": 70, "happen": [27, 28, 29, 33, 40, 41, 89, 91, 96, 97, 131, 141], "happi": [4, 11, 13, 42, 45, 46, 67, 80, 87, 94, 144, 149, 153], "happin": 13, "happind": [11, 13], "happini": 136, "hard": [22, 32, 61, 71, 82, 87, 155], "hardtop": 137, "hardwar": [18, 19, 44, 91], "hariyama": 136, "harmless": 141, "harmon": 1, "harper": 70, "harri": [95, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "harvard": 150, "has_w2": 83, "hasattr": 95, "hash": [45, 77, 82], "hashabl": 49, "hatch": 115, "hatchback": [125, 126, 137], "haunter": 136, "have": [0, 1, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 23, 27, 28, 30, 31, 32, 33, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 55, 56, 57, 59, 61, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 82, 83, 84, 85, 87, 88, 89, 91, 94, 95, 96, 97, 99, 102, 108, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 163], "haven": [52, 145, 147, 148, 153], "hawk": 32, "hawlucha": 136, "haxoru": 136, "hazi": 155, "he": [32, 38, 45, 61, 64, 65, 94, 154], "head": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 115, 125, 136, 137, 139, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 155, 157], "header": [67, 70, 128, 129, 132, 134, 135, 136, 150, 155], "health": [11, 13], "heart": 26, "heat": [155, 158], "heatmap": [155, 157], "heatmor": 136, "heatran": 136, "heavi": [115, 150, 153], "heavili": [145, 146], "hei": [32, 47], "height": [46, 88, 141, 144, 145, 151], "height_ratio": 150, "held": 153, "heliolisk": 136, "helioptil": 136, "hello": [22, 24, 28, 29, 30, 32, 36, 37, 40, 45, 46, 47, 49, 59, 63, 67, 70, 73, 77, 82, 83, 85, 86, 87, 88, 89, 93, 95, 96, 147], "hello009": 45, "hello99": 45, "hello99world66": 45, "hellohellohello": 45, "helloworld": [40, 41, 42, 45, 46, 47, 49], "help": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 32, 35, 40, 41, 42, 46, 52, 53, 54, 57, 58, 64, 65, 67, 71, 73, 78, 81, 83, 89, 94, 99, 101, 105, 115, 116, 118, 125, 126, 140, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 163], "helper": 40, "helsinki": 61, "henc": [35, 36, 40, 41, 42, 44, 45, 46, 47, 50, 52, 61, 68, 72, 73, 85, 87, 88, 89, 91, 94, 97, 120, 139, 140, 143, 144, 151, 152, 153, 155], "her": [87, 152], "heracross": 136, "heracrossmega": 136, "herdier": 136, "here": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 38, 40, 41, 42, 44, 46, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 61, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 75, 76, 77, 78, 82, 83, 84, 85, 87, 88, 89, 94, 95, 96, 97, 100, 101, 104, 105, 108, 120, 121, 122, 126, 127, 134, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163], "hereon": 155, "heterogen": [47, 125, 127, 133], "hex": [44, 45, 142, 144, 146], "hexa": 73, "hexadecim": [44, 45, 73, 84, 87], "hexagon": 144, "hexpoint": 99, "hh": 45, "hhmm": [53, 54], "hi": [32, 48, 59, 64, 87, 152, 153], "hiberfil": 62, "hidden": [0, 7, 27, 94], "hide": [29, 31, 94, 142, 150], "hierarch": [125, 126, 128, 135, 157], "hierarchi": 76, "high": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 74, 115, 116, 118, 119, 125, 140, 144, 149, 150, 151, 152, 154], "higher": [11, 12, 13, 14, 15, 16, 17, 18, 19, 37, 72, 86, 91, 143, 144, 150, 152], "higher_order_funct": 29, "highest": [8, 73, 125, 139, 144, 147, 149, 151], "highli": [0, 61, 95, 99, 118, 140, 144, 145, 147, 148, 149, 150, 151, 154], "highlight": [141, 143, 155, 157], "hill": [4, 5], "himself": 99, "hint": [65, 123, 137, 151], "hippopota": 136, "hippowdon": 136, "hispan": 139, "hist": [8, 11, 13, 115, 116, 145, 146, 154, 155], "hist_kw": 141, "histogram": [8, 11, 13, 141, 144, 145, 146, 148, 151, 154], "histohram": [8, 11, 13], "histori": 8, "histplot": 146, "histtyp": 154, "hit": 63, "hitmonchan": 136, "hitmonle": 136, "hitmontop": 136, "hl": 142, "hls_palett": 142, "hmm": [150, 154], "hmmm": 152, "ho": [45, 136], "hobbi": 126, "hoffman": 139, "hold": [16, 17, 18, 19, 46, 69, 70, 83, 99, 119, 147, 150, 152, 155], "home": 94, "homemad": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "homework": [144, 145, 148, 151, 153], "homogen": [47, 119], "hon": 24, "honchkrow": 136, "honda": 137, "honedg": 136, "honei": 42, "honest": 147, "honestli": [145, 149, 150, 153], "honk": 89, "honor": 153, "hood": [149, 150], "hoopahoopa": 136, "hoorai": 36, "hoothoot": 136, "hope": [40, 45, 67, 88, 139, 143, 145, 151, 153, 154], "hoppip": 136, "horitzont": 122, "horizon": 152, "horizont": [32, 45, 118, 122, 140, 147, 148, 149, 150, 151, 153, 155], "horrai": 36, "horsea": 136, "horsepow": [125, 126, 136, 137], "hostnam": 64, "hot": [25, 100, 104, 145], "hot_r": 145, "houndoom": 136, "houndoommega": 136, "houndour": 136, "hour": [53, 54, 56, 57, 58, 88, 96, 115, 152, 163], "hous": [0, 95, 153], "how": [0, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 32, 35, 37, 40, 41, 42, 44, 47, 48, 50, 52, 58, 61, 63, 64, 65, 68, 69, 70, 72, 74, 75, 77, 86, 87, 88, 91, 94, 95, 96, 97, 102, 125, 126, 127, 129, 131, 132, 133, 134, 135, 139, 140, 141, 143, 144, 148, 150, 151, 152, 153, 154, 155, 160, 163], "howdi": 32, "howev": [31, 32, 36, 37, 40, 47, 49, 50, 59, 64, 65, 69, 82, 83, 85, 86, 89, 91, 94, 95, 96, 97, 99, 119, 120, 121, 156], "hp": 136, "hspace": [16, 17, 18, 19, 150], "hstack": [8, 11, 118, 154], "hsv": [143, 145, 148, 149, 151, 152], "hsv_r": [145, 148], "html": [24, 25, 45, 46, 61, 94, 100, 104, 121, 125, 142, 153, 157], "http": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 115, 121, 146, 153, 157], "hu": 42, "hue": [142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "hue_kw": [154, 155], "hue_ord": [143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "huge": [85, 135, 142, 147, 150, 153, 155], "human": [0, 31, 32, 50, 82, 91, 154, 162], "hundr": [31, 88, 155], "hungari": 144, "hungri": 37, "hunt": [33, 50, 67, 87], "huntail": 136, "husl": [142, 151], "hybrid": 150, "hydreigon": 136, "hyperbol": 75, "hyperparamat": 163, "hypno": 136, "hypot": [73, 75], "hypothesi": 7, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 42, 44, 50, 52, 53, 54, 55, 57, 58, 59, 62, 63, 64, 65, 66, 68, 70, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 93, 94, 95, 96, 97, 100, 102, 103, 104, 106, 109, 115, 116, 118, 119, 120, 121, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162], "i_num": 65, "ia": [30, 139], "iat": 125, "ibm": 45, "ic": [9, 136], "icefir": [145, 147, 148, 149, 150, 153, 154, 155], "icefire_r": 145, "iceland": [11, 13, 64], "icon": [24, 163], "id": [36, 67, 70, 73, 89, 95, 115, 135, 139, 140, 151, 152, 153], "id_var": [149, 155], "idea": [27, 28, 78, 82, 87, 89, 99, 145, 147, 148, 149, 153, 154, 155], "ideal": [41, 139, 140, 142, 147, 150, 151, 153, 154], "ident": [118, 119, 121, 125, 135, 144, 151, 152, 154], "identif": 8, "identifi": [0, 7, 22, 30, 32, 45, 50, 64, 67, 72, 73, 76, 82, 83, 88, 89, 93, 94, 125, 126, 127, 130, 132, 134, 151, 153], "identitytransform": 148, "ifetch": 149, "igglybuff": 136, "ignor": [40, 41, 42, 77, 82, 129, 132, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "ignore_index": [130, 131], "ii": [25, 100, 104, 143], "iii": 139, "iinfo": 123, "ill": 83, "illeg": [63, 82], "illumin": 142, "illumis": 136, "illustr": [3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 28, 40, 41, 49, 64, 65, 78, 87, 99, 139, 140, 141, 148, 150, 154, 155], "iloc": [125, 136], "imag": [0, 4, 5, 7, 9, 16, 17, 18, 19, 24, 25, 61, 71, 84, 95, 100, 104, 140, 142, 144, 153, 154, 155], "image_s": [16, 17, 18, 19], "imagin": [32, 89, 125], "imaginari": [44, 49, 63, 84, 85, 123, 143], "imbal": 141, "imdisk": 62, "img": [62, 144], "imgseek": 24, "imit": 12, "immedi": [28, 37, 40, 41, 58, 59, 64, 67, 80, 99, 139, 163], "immens": 141, "immut": [40, 45, 46, 47, 48, 49, 67, 84, 85, 122], "imp": 73, "impact": [143, 148], "imperfect": 44, "implement": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 29, 30, 31, 42, 44, 46, 47, 65, 67, 73, 82, 91, 94, 96, 97, 99, 121, 143, 144, 145, 155, 162, 163], "impli": [45, 46, 61, 62, 82, 88], "implic": 148, "implicit": [45, 99], "implicitli": [44, 82, 99, 137], "import": [0, 1, 22, 24, 25, 30, 32, 35, 41, 44, 47, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 69, 72, 74, 75, 77, 81, 82, 83, 85, 89, 91, 93, 94, 99, 100, 104, 115, 116, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "import_ipynb": 73, "importerror": 63, "importlib": 73, "imposs": [87, 150], "improp": 63, "improv": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 67, 125, 134, 162], "imshow": [16, 17, 18, 19], "inan": 150, "inbuilt": [84, 122, 129], "inc": 30, "inch": 115, "incid": [139, 151], "includ": [6, 24, 25, 27, 32, 37, 40, 41, 42, 45, 46, 61, 64, 73, 77, 78, 80, 85, 91, 95, 99, 100, 102, 104, 116, 119, 122, 125, 126, 137, 139, 140, 145, 149, 155, 156, 160, 163], "inclus": [73, 74, 119, 125, 142], "incom": [61, 70, 94, 144], "incomplet": 82, "inconsist": 63, "incorpor": 140, "incorrect": [37, 41, 63, 82, 91], "increas": [7, 11, 12, 13, 14, 15, 16, 17, 41, 42, 46, 82, 142, 144, 148, 149, 152, 153, 155], "increment": [40, 41, 42, 69, 97], "ind": 46, "inde": [148, 149, 150, 151, 155], "indefinit": 41, "indent": [22, 36, 37, 39, 40, 42, 61, 63, 67, 69, 93], "indentationerror": [63, 82], "independ": [4, 5, 12, 14, 15, 16, 17, 91, 140, 143, 151, 152], "index": [3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 28, 32, 41, 45, 48, 49, 58, 63, 64, 73, 85, 87, 118, 119, 136, 137, 144, 151, 153, 154, 155], "index1": 126, "index2": 126, "index_on": 125, "indexerror": [45, 46, 47], "india": [30, 46, 47, 50, 61], "indianr": 146, "indic": [1, 8, 12, 16, 17, 18, 19, 36, 45, 46, 47, 58, 61, 63, 82, 120, 129, 130, 133, 139, 143, 145, 147, 149, 150, 151, 153], "indirect": 96, "indirectli": 65, "individu": [45, 48, 61, 73, 120, 141, 145, 147, 149, 150, 151, 152, 153, 154, 156], "indivis": 153, "indonesia": [47, 61], "industri": [0, 126, 127], "ineffici": [40, 71], "inf": [27, 73, 121, 123, 148], "infer": [83, 122, 125, 126, 139, 144, 148, 150, 152, 153, 154, 155], "infernap": 136, "inferno": 145, "inferno_r": 145, "infin": [75, 121, 123], "infinit": [41, 44, 59, 71, 88], "infit": 27, "info": [18, 19, 77, 95, 96, 99, 123, 146], "inform": [0, 6, 8, 25, 38, 52, 61, 62, 64, 69, 83, 99, 100, 102, 104, 125, 126, 147, 149, 151, 152, 153, 154, 155, 160], "ing": 32, "inher": [0, 142], "inherit": [22, 64, 65, 98, 99], "inhomogen": 120, "init": [6, 8, 99, 102, 160], "init_notebook_mod": 11, "initi": [3, 11, 12, 13, 18, 19, 27, 28, 40, 41, 42, 45, 46, 49, 61, 68, 74, 76, 83, 89, 94, 95, 96, 99, 118, 119, 131, 143, 146, 154, 155], "inkai": 136, "inlin": [11, 72, 105, 115, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "inner": [2, 7, 29, 30, 40, 41, 42, 68, 121, 125, 148, 149, 150], "inner_arg": 148, "inner_f": 148, "inner_fun": 68, "inner_func": 89, "inner_funct": 89, "inner_kwarg": 148, "innermost": [41, 42], "inplac": [125, 129, 130, 131, 132, 134, 135, 136, 151], "input": [0, 4, 5, 7, 11, 13, 17, 18, 19, 27, 28, 29, 30, 31, 33, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 54, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 78, 81, 83, 84, 85, 86, 88, 91, 94, 95, 96, 97, 99, 101, 105, 120, 121, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 143, 147, 148, 149, 153, 154, 155, 156], "input_param_nam": 13, "input_param_name_1": 11, "input_param_name_2": 11, "inputsid": 96, "insert": [45, 48, 49, 77, 95, 118, 126, 135], "insid": [27, 29, 30, 31, 32, 33, 36, 37, 39, 42, 45, 46, 47, 48, 49, 50, 59, 61, 62, 64, 67, 68, 69, 70, 73, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 94, 95, 96, 97, 99, 125, 144, 149, 150, 151, 152, 155], "insight": [0, 144, 148, 149, 151], "inspect": [99, 132], "inspir": [7, 18, 19, 49], "insrantli": 24, "inst_creat": 99, "insta": 120, "instal": [61, 73, 80, 141], "instanc": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 30, 40, 44, 46, 54, 61, 63, 64, 73, 77, 82, 83, 85, 89, 96, 99, 121, 122, 125, 132, 133, 147, 150, 155, 156], "instant": 72, "instanti": [44, 52, 94, 95, 99], "instantli": 42, "instead": [7, 9, 16, 17, 18, 19, 24, 28, 29, 31, 33, 37, 41, 63, 73, 83, 91, 94, 95, 96, 97, 121, 125, 127, 137, 139, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155], "instruct": [0, 6, 36, 59, 64, 82, 102, 140, 159, 160, 161], "int": [16, 17, 18, 19, 24, 27, 29, 30, 40, 41, 44, 45, 46, 47, 63, 64, 65, 77, 84, 85, 86, 87, 88, 95, 96, 115, 131, 132], "int32": [119, 121, 122], "int64": [18, 19, 119, 122, 125, 126, 136, 137], "int_1": 84, "int_2": 84, "intact": 143, "integ": [36, 38, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 61, 64, 67, 71, 73, 74, 75, 77, 82, 84, 85, 86, 88, 118, 119, 125, 126, 127], "intel": 91, "intellig": [143, 151, 162], "intellij": 140, "intend": [9, 17, 19, 144, 155], "intens": 143, "intent": [77, 143, 151], "inter": [149, 151, 152], "interact": [0, 7, 11, 23, 24, 25, 28, 61, 73, 80, 87, 95, 100, 104, 125, 140], "intercept": [50, 88, 141], "intercept_stderr": 141, "interchang": [125, 148], "interest": [0, 28, 30, 32, 64, 89, 95, 131, 140, 141, 142, 150, 151, 152, 153, 154], "interfac": [24, 31, 64, 94, 140, 142], "interg": 86, "intermedi": 91, "intermediari": 91, "intern": [27, 28, 31, 42, 45, 46, 61, 63, 70, 74, 94, 95, 97, 126, 142], "internet": [24, 145], "interp": 123, "interpol": [144, 153], "interpret": [22, 24, 28, 32, 36, 40, 41, 42, 45, 63, 64, 67, 70, 71, 73, 77, 80, 81, 82, 86, 87, 88, 89, 93, 143, 151, 152, 153, 154], "interquartil": 150, "interrelationship": 155, "interrupt": 63, "intersect": [40, 85], "intersect1d": 123, "intersection_upd": 49, "interv": [5, 14, 15, 16, 17, 115, 118, 122, 140, 143, 145, 147, 149, 150, 151, 152, 153], "intervent": 162, "interview": [153, 162], "intiuit": 24, "intrigu": [0, 139], "intrins": [139, 140, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "intro": [33, 159, 161], "introduc": [7, 31, 45, 80, 149, 150, 154, 155], "introduct": [2, 45, 162], "introductori": 144, "intuit": [8, 23, 31, 125, 147], "inv": 118, "invalid": [15, 39, 45, 63, 64, 73, 81, 83, 86, 87, 121], "inventor": 40, "invers": [26, 42, 58, 75, 118, 121], "invert": 32, "invest": 151, "invis": 150, "invoc": [72, 143], "invok": [30, 50, 95, 97], "involv": [0, 44, 86, 88, 96, 139, 144, 147, 149, 153, 162], "ioerror": 64, "ion": [25, 100, 104], "iot": 163, "ip": 153, "iplot": 11, "ipynb": [20, 24, 62, 73, 101, 105], "ipynb_checkpoint": 62, "ipython": [24, 27, 28, 29, 30, 31, 33, 41, 45, 46, 47, 48, 49, 54, 59, 61, 63, 64, 65, 68, 69, 70, 71, 73, 81, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 99, 120, 121, 129, 132, 134, 137, 140, 142, 144, 148, 153], "iqr": 149, "ireland": 144, "iri": [3, 5, 10, 14, 115, 139, 142, 144, 145, 147, 148, 149, 157], "iris_data": [115, 157], "iris_typ": [10, 14], "iron": 27, "irrespect": 42, "is_cal": 30, "is_empti": 67, "is_even": [30, 67], "is_light_on": 83, "is_mar": [38, 40], "is_marri": 83, "is_name_long": 30, "is_odd": 30, "is_prim": 67, "is_return": 30, "is_uniqu": 134, "is_valid_vari": 32, "isalnum": 45, "isalpha": [41, 45], "isatti": 61, "isclos": 73, "isdecim": [41, 45], "isdigit": 45, "isdisjoint": 49, "isfinit": [73, 75], "isidentifi": 45, "isin": [149, 151], "isinf": [73, 75], "isinst": [44, 85, 95, 96], "island": 30, "islow": 45, "isn": [7, 18, 19, 125, 132, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "isnan": [73, 75], "isnul": 125, "isnumer": 45, "isol": [24, 89], "isprint": 45, "isqrt": 73, "isspac": [42, 45], "issu": [5, 44, 50, 69, 116, 142, 150, 154], "issubset": 49, "issuperset": 49, "istitl": 45, "isupp": 45, "isuzu": 137, "item": [8, 11, 13, 16, 17, 18, 19, 27, 28, 30, 32, 33, 40, 41, 45, 49, 50, 63, 64, 67, 72, 73, 77, 85, 95, 118, 126, 129, 151], "items": [119, 122, 123], "iter": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 30, 34, 42, 50, 63, 71, 73, 75, 87, 90, 126, 140, 151, 153, 155], "iter_obj": 27, "iterrow": [125, 136], "itertool": 145, "its": [0, 1, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 40, 41, 44, 45, 46, 47, 48, 49, 52, 53, 54, 61, 67, 68, 70, 73, 77, 85, 88, 89, 91, 94, 95, 96, 99, 125, 126, 127, 128, 129, 131, 133, 135, 140, 144, 148, 149, 150, 155, 156, 157], "itself": [7, 18, 19, 27, 29, 31, 40, 45, 47, 48, 49, 61, 65, 67, 71, 91, 94, 95, 96, 99, 143, 150, 151, 154, 162], "iv": 32, "ivan": 70, "ivysaur": 136, "j": [4, 5, 7, 30, 40, 41, 42, 45, 46, 53, 54, 61, 83, 84, 95, 118, 119, 126, 141, 154], "jack": 128, "jaguar": 137, "jam": 45, "jan": [53, 54, 80, 139], "jane": [95, 128], "januari": [32, 38, 42, 52, 53, 54, 57, 58], "japan": [61, 137], "japanesecar": 137, "jargon": 88, "jason": 86, "java": [22, 40, 41, 45, 46, 48, 61, 82, 94, 99], "javascrip": 61, "javascript": [32, 45, 50, 61, 64, 91, 94], "jellic": 136, "jenner": 40, "jet": [142, 145], "jet_r": 145, "jetbrain": 140, "jigglypuff": 136, "jill": 128, "jirachi": 136, "jitter": [148, 153], "jlufe": 48, "jo": [8, 32], "job": [0, 32, 45, 91, 142, 143, 147, 150, 154], "joe": [125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 139], "john": [47, 70, 115, 139, 153], "join": [45, 46, 47, 49, 61, 87, 150], "joined_df": 125, "joint": [143, 152, 158], "jointgrid": [144, 146], "jointplot": [144, 145], "jolteon": 136, "joltik": 136, "jose": 128, "journal": 143, "journei": [143, 155, 163], "jr": [115, 136], "json": [24, 73, 125], "json_exampl": 61, "json_str": 125, "jude": 32, "juic": 84, "jul": 80, "juli": 38, "jumbl": 143, "jump": [42, 45, 143, 149, 151, 155], "jumpluff": 136, "jun": [53, 55, 80], "june": [38, 42, 52, 53, 54, 55, 58, 141], "jupyt": [6, 9, 20, 22, 25, 63, 87, 100, 101, 102, 104, 105, 140, 142, 159, 160, 161, 162, 163], "jupytext": [6, 102, 160], "just": [5, 9, 16, 17, 18, 19, 27, 28, 30, 42, 45, 72, 76, 77, 80, 82, 85, 87, 99, 125, 127, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "justcount": 95, "justifi": [45, 87], "juventu": 115, "jvm": 91, "jynx": 136, "k": [2, 40, 41, 45, 74, 115, 116, 139, 141, 142, 147, 148], "k_depth": 153, "k_mean": 10, "kabuto": 136, "kabutop": 136, "kadabra": 136, "kaggl": [9, 152], "kakuna": 136, "kangaskhan": 136, "kangaskhanmega": 136, "kappa": 74, "kapur": 5, "karen": 153, "karrablast": 136, "kate": 47, "kb": 73, "kcsy2": 73, "kde": [141, 144, 146, 150, 154], "kdeplot": [142, 144, 145, 154, 155], "kecleon": 136, "keen": [30, 152], "keep": [4, 5, 25, 28, 32, 41, 70, 76, 95, 100, 104, 126, 131, 139, 141, 142, 143, 144, 150, 151, 152, 153, 154, 155], "keepdim": 123, "kei": [30, 33, 35, 38, 40, 46, 47, 49, 63, 64, 82, 84, 85, 88, 125, 127, 132, 134, 137, 145, 154], "keldeoordinari": 136, "keldeoresolut": 136, "kenel": 146, "kenneth": [139, 142], "kept": [76, 142], "kera": 162, "kernel": [6, 24, 102, 140, 142, 145, 146, 150, 153, 160], "kernel_density_estim": 146, "kernel_list": 146, "keyboard": 22, "keyboardinterrupt": [41, 59, 63, 64], "keyerror": [48, 49, 128, 129, 132, 134], "keyword": [22, 29, 30, 33, 36, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 64, 67, 68, 72, 73, 77, 79, 83, 87, 89, 93, 94, 95, 99, 115, 142, 144, 153, 155], "keyword_ord": 45, "kg": 44, "kid": 141, "kill": 155, "kind": [7, 27, 28, 64, 67, 70, 82, 101, 105, 115, 125, 132, 133, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "kindli": 155, "kingdra": 136, "kingler": 136, "kirlia": 136, "kivi": 24, "kiwi": [40, 49], "klang": 136, "klefki": 136, "klink": 136, "klinklang": 136, "km": 96, "kmean": 10, "know": [10, 23, 28, 29, 30, 31, 38, 40, 41, 42, 44, 64, 67, 70, 71, 73, 80, 83, 85, 87, 91, 96, 97, 99, 118, 120, 122, 128, 129, 132, 134, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "knowledg": [7, 65, 153, 154], "known": [1, 8, 10, 11, 13, 24, 29, 40, 41, 44, 47, 48, 68, 72, 83, 86, 91, 94, 95, 97, 121, 139, 143, 145, 147, 148, 149, 151, 153, 154, 155], "knoxvil": 139, "kof": 136, "kool": 45, "korea": 115, "krabbi": 136, "kricketot": 136, "kricketun": 136, "krokorok": 136, "krookodil": 136, "kw": [148, 154, 155], "kwarg": [30, 34, 64, 99, 132, 145, 148, 154, 155], "kyogr": 136, "kyogreprim": 136, "kyurem": 136, "kyuremblack": 136, "kyuremwhit": 136, "l": [7, 11, 28, 32, 40, 41, 42, 45, 46, 47, 48, 49, 64, 72, 86, 115, 151], "la_": [25, 100, 104], "label": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 103, 115, 116, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 143, 150, 151, 153, 154, 155, 157, 159, 161], "label_dist": 146, "label_map": [17, 19], "labelbottom": [16, 17, 18, 19], "labelleft": [16, 17, 18, 19], "labl": 125, "labour": 144, "lack": 0, "laet": [17, 19], "lairon": 136, "lam": 147, "lambd": 74, "lambda": [28, 30, 81, 125, 150], "lampent": 136, "land": [30, 108], "landorusincarn": 136, "landorustherian": 136, "langchain": 162, "languag": [22, 24, 30, 31, 32, 40, 41, 42, 45, 46, 48, 50, 61, 63, 67, 80, 81, 82, 83, 87, 88, 94, 95, 99, 101, 105, 154, 162], "lanturn": 136, "laod": 157, "lapra": 136, "larg": [0, 24, 28, 46, 62, 63, 65, 73, 78, 88, 91, 115, 116, 119, 121, 125, 128, 135, 137, 140, 141, 148, 149, 153], "larger": [24, 29, 67, 76, 86, 91, 121, 153], "largest": [49, 73, 75], "larvesta": 136, "larvitar": 136, "last": [7, 24, 27, 28, 29, 30, 31, 33, 40, 41, 42, 45, 46, 47, 48, 49, 54, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 77, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 120, 121, 122, 125, 132, 134, 135, 140, 144, 145, 148, 150, 151, 153, 155], "last_index": [45, 129], "last_lett": 45, "last_nam": [30, 38, 40, 45, 48, 67, 83], "last_nm": 70, "lastli": [61, 149, 151, 155], "lastnam": [33, 67, 70, 83, 87, 94], "late": [139, 141], "latenc": [1, 8, 9], "latency_from": 8, "latency_grid": 8, "latency_rang": 8, "latency_to": 8, "latent": 152, "later": [28, 31, 42, 65, 77, 82, 83, 87, 88, 95, 125, 139, 143, 145, 147, 148, 149, 152, 155], "latest": [24, 141, 153], "latia": 136, "latiasmega": 136, "latio": 136, "latiosmega": 136, "latitud": 153, "latter": 96, "lattic": 154, "latvia": 144, "launch": 24, "layer": [0, 7, 94], "layer_numb": [18, 19], "layout": [11, 155], "lazi": [28, 40], "lb": 115, "ldexp": [73, 75], "ldot": 45, "lead": [45, 63, 73], "leafeon": 136, "leap": 152, "learn": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 27, 28, 29, 31, 32, 33, 37, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 108, 116, 118, 125, 127, 128, 130, 132, 133, 134, 135, 137, 139, 143, 144, 145, 149, 151, 152, 153, 154, 155, 156], "learning_r": [11, 12, 13], "learnt": [18, 19, 147, 148, 149, 153, 155], "least": [7, 18, 19, 24, 28, 32, 46, 48, 59, 82, 89, 95, 99, 121, 141, 144, 145, 147, 148, 149, 151, 153], "leav": [41, 49, 145, 147, 148, 150, 151, 153, 155], "leavanni": 136, "lectur": [45, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "ledft": 141, "ledian": 136, "ledyba": 136, "lee": [115, 139], "left": [16, 17, 18, 19, 27, 32, 40, 45, 53, 54, 56, 76, 87, 88, 96, 97, 115, 116, 120, 125, 140, 141, 144, 148, 150, 151, 152], "leg": [48, 96], "legandari": 136, "legend": [8, 10, 13, 14, 15, 16, 17, 25, 100, 104, 115, 116, 143, 145, 148, 150, 151, 152, 153, 154, 155], "legend_": 148, "legend_out": [143, 152, 155], "legendari": 136, "lembk": 139, "lemon": [40, 64], "len": [14, 15, 16, 17, 18, 19, 28, 30, 40, 41, 42, 45, 49, 50, 54, 83, 88, 118, 129, 132, 135, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "length": [9, 10, 14, 28, 32, 33, 40, 44, 45, 46, 49, 74, 83, 85, 88, 94, 96, 115, 118, 121, 125, 132, 134, 136, 137, 139, 141, 143, 144, 147, 151, 155], "lengthi": [28, 76, 150], "lesli": 139, "less": [8, 11, 13, 28, 36, 37, 38, 41, 42, 50, 59, 65, 75, 88, 91, 97, 125, 143, 154], "lesser": [37, 125], "lesson": 125, "let": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 42, 44, 45, 47, 49, 50, 52, 58, 59, 61, 63, 64, 67, 68, 69, 71, 72, 73, 77, 86, 87, 88, 89, 94, 95, 96, 97, 99, 102, 119, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161], "letter": [30, 32, 40, 41, 42, 45, 49, 50, 63, 73, 81, 83], "lettervalu": [152, 158], "level": [5, 8, 14, 15, 16, 17, 22, 24, 39, 44, 76, 108, 115, 125, 126, 128, 129, 134, 139, 140, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "level_0": 126, "level_index": 129, "leverag": 153, "lewi": 139, "lfloor": 88, "lgamma": [73, 75], "li": 26, "lib": [45, 54, 73, 123, 129, 132, 133, 134, 139, 142, 146, 148], "librari": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 45, 75, 78, 82, 116, 118, 125, 126, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 163], "licens": [24, 125, 136, 137], "lickilicki": 136, "lickitung": 136, "lie": 99, "liepard": 136, "life": [11, 13, 23, 68, 154, 163], "light": [115, 142], "light_medium": 115, "lightblu": 141, "lighter": 155, "like": [0, 1, 3, 4, 5, 6, 7, 14, 15, 16, 17, 22, 24, 27, 28, 30, 31, 32, 37, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 70, 72, 73, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 99, 101, 102, 105, 115, 116, 118, 121, 122, 125, 126, 127, 128, 129, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163], "likelihood": 146, "likewis": [133, 135], "lileep": 136, "lillig": 136, "lillipup": 136, "lime": 64, "limit": [40, 44, 65, 68, 71, 85, 97, 139, 141, 147, 150, 153, 154, 155, 157], "limitless": 143, "limousin": 153, "linalg": [118, 121, 123], "line": [4, 6, 11, 12, 13, 14, 15, 16, 17, 22, 24, 25, 26, 29, 31, 32, 35, 41, 42, 45, 49, 50, 61, 63, 64, 67, 68, 70, 72, 73, 81, 84, 85, 88, 89, 91, 95, 100, 101, 102, 104, 105, 121, 122, 139, 140, 141, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155, 160], "line2d": [25, 100, 104], "line_count": 61, "line_kw": [143, 144], "linear": [2, 5, 7, 8, 10, 16, 17, 18, 19, 23, 50, 67, 96, 118, 141, 142, 143, 144, 145, 147, 149, 152, 153, 155, 162], "linear_regress": [11, 12, 13], "linearli": [7, 18, 19, 143, 153], "linearregress": [11, 12, 13], "linearsegmentedcolormap": 142, "linecollect": 148, "linefe": 45, "lineplot": 153, "liner": 5, "linestyl": [115, 116, 151], "linewidth": [115, 116, 140, 141, 147, 148, 149, 150, 153, 154, 155, 156], "link": [24, 91, 142, 143, 144, 152, 153, 155], "linoon": 136, "linregress": 141, "linregressresult": 141, "linspac": [11, 12, 13, 14, 15, 25, 100, 104, 118, 123, 140, 146, 153, 155], "linux": 61, "list": [9, 10, 14, 22, 27, 28, 30, 32, 33, 44, 49, 51, 52, 61, 63, 72, 74, 75, 76, 77, 81, 82, 84, 86, 87, 88, 94, 95, 96, 97, 99, 118, 119, 120, 121, 122, 125, 129, 131, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155], "list1": [40, 46, 67, 72, 73, 85, 127], "list2": [46, 72, 127], "list3": 46, "list_": 28, "list_1": 95, "list_enumer": 45, "list_nam": 46, "list_of_cmap": 154, "list_of_hexa_color": 73, "list_of_list": [40, 50], "list_of_rgb_color": 73, "list_siz": 40, "listedcolormap": 151, "listliter": 82, "liter": [22, 45, 53, 54, 63, 64, 70, 77, 82, 83, 86, 87, 88, 93], "lithuania": 144, "litleo": 136, "littl": [8, 10, 16, 17, 18, 19, 89, 96, 120, 141, 143, 147, 148, 150, 151, 152, 154, 155], "litwick": 136, "live": [30, 38, 45, 61, 64, 88, 94], "liverpool": 155, "ljust": [45, 87], "ll": [20, 28, 29, 40, 42, 44, 46, 47, 48, 49, 61, 62, 64, 67, 68, 69, 72, 76, 80, 94, 95, 101, 105, 125, 141, 156], "llm": 162, "lm": [142, 153, 158], "lmplot": [144, 145], "lo": 32, "load": [61, 73, 77, 91, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158], "load_dataset": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "load_ext": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "loc": [115, 116, 122, 125, 136, 148, 150, 151], "loc_var": 68, "local": [4, 5, 22, 24, 28, 29, 52, 54, 55, 56, 57, 58, 59, 63, 69, 72, 79, 89, 95, 96, 99, 125, 145], "local_lang": 68, "local_tim": 58, "localtim": [56, 59], "locat": [0, 30, 32, 45, 46, 61, 63, 73, 76, 83, 87, 88, 96, 116, 136, 148, 149, 150, 153], "locator_param": 141, "locket": 73, "log": [62, 73, 74, 75, 118, 122], "log10": [44, 73, 75], "log1p": [73, 75], "log2": [73, 75], "logarithm": [44, 73, 75], "logic": [35, 37, 71, 97, 99, 125, 129, 132, 163], "logical_and": 123, "logical_not": 123, "logist": [2, 143, 144], "logistic_regress": [8, 10, 14, 15, 16, 17], "logisticregress": [14, 15, 16, 17], "lognormvari": 74, "logo": [61, 62], "logo1": 62, "logspac": [25, 100, 104], "logx": 143, "lombr": 136, "london": [30, 52, 56, 61, 64, 94, 129], "long": [30, 35, 41, 42, 44, 45, 50, 81, 82, 84, 89, 99, 122, 141, 147, 148, 163], "long_nam": 30, "longer": [11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 45, 73, 94, 146], "longitud": 153, "look": [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 29, 30, 31, 32, 35, 42, 44, 61, 63, 68, 71, 73, 76, 77, 81, 82, 86, 87, 89, 96, 97, 99, 115, 116, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "lookuna": 45, "lookup": 125, "loop": [4, 22, 30, 33, 35, 43, 45, 46, 47, 48, 49, 59, 61, 64, 67, 70, 82, 87, 121, 125, 151], "loos": 7, "lopunni": 136, "lopunnymega": 136, "lose": 61, "loss": [86, 155], "lost": 45, "lot": [4, 5, 22, 25, 28, 40, 41, 45, 71, 73, 76, 91, 100, 104, 120, 141, 143, 151, 153], "lotad": 136, "loudr": 136, "love": [24, 30, 32, 49, 87], "low": [11, 12, 13, 14, 15, 16, 17, 18, 19, 74, 116, 119, 144, 149, 152], "lower": [32, 45, 86, 116, 120, 121, 141, 149, 150, 152, 153, 154], "lowercas": [32, 45, 73, 81, 83], "lowess": [143, 145], "lowest": [73, 125, 149, 151], "lsr": [141, 144], "lst": [29, 50, 64], "lst_one": 64, "lst_two": 64, "lstrip": 45, "lucario": 136, "lucariomega": 136, "lucia": 95, "lucr": 0, "ludicolo": 136, "lugia": 136, "luke": 150, "lumineon": 136, "lump": 149, "lunaton": 136, "lunch": [0, 143, 147, 148, 150, 155], "lut": 157, "luvdisc": 136, "luxembourg": 144, "luxio": 136, "luxrai": 136, "lvplot": 153, "lw": [25, 100, 104, 147, 148, 151, 153, 155], "m": [3, 4, 5, 8, 32, 40, 42, 46, 47, 52, 53, 54, 55, 56, 57, 58, 59, 73, 75, 80, 81, 83, 86, 87, 88, 96, 115, 116, 139, 142, 147, 149, 151, 155], "ma": 32, "maaan": 32, "machamp": 136, "machin": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 38, 96, 108, 143, 151, 152, 154, 155, 163], "machine_learn": 151, "machineri": 125, "machok": 136, "machop": 136, "maco": 62, "macreadi": 0, "macro_cas": 83, "made": [32, 63, 65, 73, 89, 91, 95, 153], "madrid": 115, "magbi": 136, "magcargo": 136, "magic": [30, 97, 140], "magikarp": 136, "magma": [142, 143, 145], "magma_r": 145, "magmar": 136, "magmortar": 136, "magnemit": 136, "magnet": 153, "magneton": 136, "magnezon": 136, "magnitud": [4, 5, 96, 97, 143, 151], "mai": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 28, 32, 38, 42, 44, 45, 46, 47, 49, 52, 53, 59, 61, 64, 65, 67, 69, 70, 76, 80, 86, 89, 91, 94, 95, 96, 99, 120, 125, 126, 127, 129, 130, 134, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "mail": [32, 123], "mailbox": 73, "main": [32, 44, 47, 68, 69, 73, 77, 83, 94, 95, 96, 99, 147, 151, 153, 156], "main1": 69, "mainli": 40, "maintain": [78, 143], "mainten": 162, "major": [8, 28, 87, 147, 148, 151, 152], "majorli": [125, 126, 143, 147, 148, 152, 153, 155], "make": [0, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32, 33, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 61, 63, 64, 65, 67, 68, 69, 71, 73, 76, 78, 81, 82, 83, 86, 87, 88, 89, 91, 94, 96, 97, 99, 100, 104, 118, 120, 121, 125, 126, 127, 129, 130, 132, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163], "make_blob": 154, "make_kd": 145, "make_multiplier_of": 29, "make_pretti": 30, "make_sound": 99, "make_uppercas": 30, "mako": [145, 153, 157], "mako_r": 145, "makuhita": 136, "malamar": 136, "male": [61, 94, 136, 139, 143, 146, 148, 149, 150, 151, 155], "male_dinn": 150, "male_lunch": 150, "malign": [5, 14, 15, 16, 17], "mammal": 96, "mammalnam": 96, "mamoswin": 136, "man": [31, 32, 149, 151], "manadatori": 143, "manag": [32, 67, 73, 76, 153], "manaphi": 136, "manchest": [94, 115], "mandatori": [47, 52, 67, 70, 82, 95, 99, 143, 147, 148, 155], "mandibuzz": 136, "manectr": 136, "manectricmega": 136, "mango": [38, 40, 46, 49, 64, 67, 84, 87, 127, 151], "manhattan": 148, "mani": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 32, 40, 41, 42, 45, 47, 49, 61, 62, 64, 65, 73, 77, 83, 88, 94, 95, 99, 101, 102, 105, 115, 121, 122, 125, 130, 139, 141, 142, 148, 153, 154, 156, 160, 163], "manipul": [31, 45, 52, 73, 95, 121, 125, 135, 155], "mankei": 136, "manner": [30, 35, 40, 41, 96, 147, 153], "manner_of_death": 139, "mantin": 136, "mantissa": 75, "mantyk": 136, "manual": [0, 4, 5, 7, 27, 64, 65, 122], "manufactur": 95, "map": [0, 7, 17, 19, 26, 50, 82, 89, 125, 132, 142, 144, 145, 148, 150, 154, 155, 158], "map_datafram": 155, "map_diag": [145, 154], "map_low": [145, 154], "map_offdiag": 154, "map_upp": [145, 154], "mapper": 132, "mappingmethod": 82, "maptplotlib": 155, "mar": 80, "maractu": 136, "march": [32, 38, 42], "mareep": 136, "margin": [11, 144, 147], "margin_titl": [152, 155], "maril": 136, "marit": 46, "marital_statu": 48, "mariya": 40, "mark": [35, 36, 40, 48, 67, 77, 80, 82, 87, 95, 115, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 146, 148, 151], "markdown": [24, 159, 161], "markdownfil": [6, 102, 160], "markedli": [20, 101, 105], "marker": [10, 11, 62, 115, 116, 139, 143, 144, 145, 148, 149, 151, 153, 154, 155], "markeredgecolor": 115, "markerfacecolor": 116, "markers": 115, "market": [0, 94], "marks_df": 125, "marks_dict": 125, "markup": [101, 105], "marowak": 136, "marri": [38, 83], "marshtomp": 136, "mask": [129, 155], "masquerain": 136, "mass": [67, 83, 125], "massiv": [125, 128], "master": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "masterstudentclass": 95, "mat": 120, "match": [54, 70, 129, 132, 134, 144, 146, 149, 150, 155], "match_replac": 32, "materi": 7, "math": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 44, 48, 63, 79, 87, 100, 104], "mathemat": [24, 40, 49, 50, 73, 83, 88, 97, 125, 141, 144, 149, 151, 153, 162, 163], "mathemet": 108, "mathew": 115, "matlab": [38, 40, 61, 83, 91, 94, 120, 121], "matmul": 121, "matplotlib": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 100, 104, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158], "matric": [26, 121], "matrix": [7, 8, 16, 17, 18, 19, 26, 50, 118, 119, 120, 122, 125, 154, 155, 156, 157], "matruc": 121, "matter": [30, 42, 64, 67, 70, 83, 147], "matthew": 139, "mawil": 136, "mawilemega": 136, "max": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 49, 94, 96, 118, 121, 122, 123, 125, 137, 139, 144, 146, 147, 155], "max_inst": 99, "max_iter": [10, 14, 15, 16, 17, 18, 19], "max_row": 125, "max_spe": 96, "maxim": 0, "maximum": [10, 14, 15, 16, 17, 18, 19, 32, 41, 71, 94, 115, 118, 121, 122, 125, 146, 149, 150], "maxsiz": 73, "maxsplit": 32, "maxyear": 52, "mayb": [40, 153], "mazda": 137, "maze": 0, "mb": [8, 18, 19], "mbox": [25, 100, 104], "md": [6, 20, 101, 102, 105, 160], "me": [37, 45, 87, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 153, 154, 155], "mean": [1, 2, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 29, 31, 32, 36, 37, 40, 41, 42, 45, 46, 47, 49, 52, 53, 54, 58, 63, 68, 70, 73, 81, 82, 83, 84, 85, 86, 87, 88, 94, 95, 97, 99, 100, 104, 118, 119, 122, 125, 136, 137, 139, 141, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155], "meaning": [127, 155], "meant": 139, "meanwhil": [144, 148, 151, 153, 155], "measur": [0, 9, 10, 14, 94, 139, 141, 144, 147, 148, 149, 152, 153], "mechan": [23, 77, 121, 143, 153, 156], "median": [46, 73, 94, 115, 118, 122, 125, 148, 149, 150, 151, 153], "medianprop": 115, "medicham": 136, "medichammega": 136, "meditit": 136, "medium": [25, 28, 100, 104, 115, 142], "medium_heavi": 115, "meet": [36, 148, 149], "mega": 136, "meganium": 136, "melina": 61, "mellon": 7, "meloettaaria": 136, "meloettapirouett": 136, "melt": [147, 148, 149, 155], "melt_df": 149, "member": [31, 49, 94, 95, 144, 150], "memor": 143, "memori": [18, 19, 27, 40, 44, 45, 46, 61, 63, 71, 83, 85, 88, 89, 91, 94, 95, 118, 122, 125, 140, 153], "memoryerror": [63, 64], "men": 142, "mennen": 40, "mention": [7, 28, 45, 64, 77, 125, 140, 144, 148, 151, 152, 153, 155], "menu": [84, 142], "meow": 99, "meowsticfemal": 136, "meowsticmal": 136, "meowth": 136, "merced": 137, "mere": 99, "merg": [97, 125, 150], "meshgrid": [8, 123], "mesprit": 136, "mess": 136, "messag": [4, 5, 29, 36, 37, 38, 39, 63, 64, 65, 67, 70, 77], "messi": [40, 41, 115], "met": [29, 37, 41, 131], "meta": 32, "metagross": 136, "metagrossmega": 136, "metang": 136, "metapod": 136, "metaprogram": 30, "meter": [83, 153], "meth": 99, "method": [24, 27, 28, 29, 30, 31, 40, 41, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 70, 73, 76, 77, 82, 87, 91, 95, 97, 99, 121, 125, 126, 129, 132, 134, 135, 139, 143, 144, 149, 150, 151, 152, 153, 154, 155, 157, 163], "metric": [0, 157], "mew": 136, "mewtwo": 136, "mewtwomega": 136, "michael": 139, "michel": 61, "microchip": [5, 15], "microsecond": [53, 54, 56], "microsoft": 45, "mid": 88, "middl": [38, 46, 47, 64, 120, 147, 149, 150, 151], "mienfoo": 136, "mienshao": 136, "might": [1, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 29, 35, 41, 42, 44, 59, 64, 82, 87, 99, 119, 141, 143, 147, 148, 149, 150, 151, 152, 154, 155], "mightyena": 136, "milaan": [30, 38, 40, 45, 48, 50, 61, 63, 64, 67, 70, 73, 83, 86, 88, 94, 96, 137], "milan": [45, 61, 95], "mile": 151, "mileag": [125, 126, 136, 145, 147], "mileagedf": 137, "milk": 67, "milot": 136, "miltank": 136, "mime": 136, "min": [4, 11, 12, 13, 14, 15, 49, 94, 118, 121, 122, 123, 125, 139, 144, 146, 147, 152, 155], "min_row": 125, "minccino": 136, "mind": [35, 50, 70], "mini": 150, "minim": [3, 7, 72, 139], "minimum": [4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 46, 115, 118, 122, 125, 141, 149, 150, 163], "minu": [88, 149], "minun": 136, "minut": [18, 19, 53, 54, 56, 57, 58, 147, 148, 152], "minyear": 52, "mirror": [71, 154], "misc": 77, "misdreavu": 136, "misinterpret": 142, "mislead": 144, "mismagiu": 136, "mismatch": 99, "miss": [11, 12, 13, 14, 15, 16, 17, 37, 63, 64, 70, 119, 126, 135, 151, 153], "missing_label": 132, "mission": 87, "mistak": [46, 63, 91, 149], "mit": 150, "mitsubishi": 137, "mix": [46, 47, 48, 49, 70, 119, 120, 147, 148, 149, 153], "mix_fruit": [40, 46, 49], "mkdir": 73, "ml": [2, 23, 151, 163], "mlc": 148, "mlp": 7, "mm": [52, 54, 55], "mn": 32, "mnemon": 83, "mnist": [5, 7, 16, 17, 18, 19], "mo": 32, "mod": [73, 123], "modal": 150, "mode": [11, 24, 61, 64, 73, 74, 94, 95, 136, 148, 149], "model": [0, 4, 8, 91, 94, 95, 108, 141, 143, 145, 152, 153, 154, 162, 163], "model_": 154, "modf": [73, 75], "modif": [31, 94, 96, 122, 129, 132, 134, 135, 148, 151, 152, 153, 155], "modifi": [29, 30, 31, 38, 40, 41, 45, 46, 47, 48, 50, 59, 61, 68, 69, 73, 85, 87, 88, 120, 125, 130, 136, 148, 150, 152, 153, 162], "modul": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 41, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 57, 59, 61, 62, 63, 64, 65, 68, 70, 71, 72, 79, 82, 83, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 120, 121, 129, 132, 134, 143, 148, 153, 155], "modula": 99, "modular": 67, "modulo": [63, 97], "modulu": [83, 88, 97], "moistur": [116, 148], "moisturizersalesdata": 116, "moltr": 136, "moment": [89, 148, 155], "mon": [42, 53, 54], "mondai": [53, 54, 58], "monei": [147, 148], "monferno": 136, "mongodb": 46, "monitor": 162, "monkei": 150, "monoton": 96, "month": [42, 53, 54, 55, 56, 57, 58, 67, 82, 151, 153, 156], "month_numb": 116, "monthlist": 116, "moon": 67, "moral": 141, "mordern": 22, "more": [0, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 27, 28, 29, 30, 31, 33, 35, 37, 38, 40, 42, 44, 46, 47, 48, 49, 50, 52, 53, 58, 59, 61, 62, 63, 64, 65, 67, 68, 70, 72, 73, 74, 77, 81, 82, 83, 84, 89, 91, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 116, 119, 120, 121, 122, 125, 126, 131, 134, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 163], "moreland": 142, "moreov": [0, 61], "morn": [67, 70, 87], "morphism": 94, "most": [0, 22, 24, 26, 27, 28, 29, 30, 31, 32, 33, 41, 44, 45, 46, 47, 48, 49, 54, 59, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 82, 84, 85, 86, 87, 88, 91, 94, 95, 96, 97, 99, 101, 105, 120, 121, 125, 127, 129, 132, 134, 142, 147, 148, 149, 150, 151, 152, 153, 155, 156], "most_frequent_word": 32, "most_populated_countri": [61, 67], "most_spoken_languag": [61, 67], "mostli": [41, 45, 142, 155], "mothim": 136, "motiv": 32, "motorcycl": 7, "mous": [46, 47], "move": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 36, 40, 42, 61, 89, 132, 140, 141, 144, 147, 148, 149, 151, 153, 154, 155], "movement": 0, "movi": 154, "mpimg": [16, 17, 18, 19], "mpl": 151, "mr": 136, "mri": 153, "mro": 96, "msc": 24, "msg": [29, 30, 67, 70, 139, 146], "mtransform": 148, "mu": [8, 74], "mu_param": 8, "much": [0, 4, 7, 11, 12, 13, 22, 24, 28, 31, 48, 73, 122, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155], "mudkip": 136, "muk": 136, "mul": 73, "multi": [84, 85, 94, 126, 127, 150, 154, 155], "multideriv": 96, "multidimension": [118, 120, 125], "multiindex": [125, 128, 129, 132, 135], "multilay": 7, "multilayer_perceptron": [18, 19], "multilayerperceptron": [18, 19], "multilevel": 151, "multilin": [32, 45, 72, 82, 84, 85], "multiline_str": [45, 84], "multimedia": 24, "multip": 26, "multipl": [0, 4, 7, 12, 18, 19, 24, 28, 30, 38, 40, 42, 45, 46, 49, 50, 61, 68, 70, 72, 81, 82, 84, 88, 91, 94, 95, 97, 99, 118, 119, 125, 126, 128, 130, 131, 135, 137, 141, 142, 143, 147, 148, 149, 150, 153, 154, 155], "multiple_vari": 50, "multipli": [11, 12, 13, 14, 15, 16, 17, 29, 40, 41, 47, 52, 67, 71, 77, 78, 83, 87, 88, 118, 121], "multitouch": 24, "multivari": [2, 4, 5, 8, 155], "multivariate_gaussian": 8, "multivariate_norm": [142, 143, 144, 154], "mumbai": 50, "munchlax": 136, "munna": 136, "murkrow": 136, "musharna": 136, "mushroom": 47, "music": 76, "must": [27, 29, 30, 39, 40, 44, 45, 46, 47, 48, 49, 61, 62, 64, 67, 68, 70, 71, 73, 74, 76, 77, 81, 82, 83, 85, 86, 89, 91, 95, 96, 99, 116, 120, 126, 130, 131, 140, 141, 148, 155], "mut": 147, "mutabl": [40, 46, 47, 48, 49, 85, 125], "mutat": 120, "mute": 150, "my": [5, 41, 44, 45, 61, 64, 68, 69, 77, 83, 85, 95, 99, 115, 116, 142, 147, 149, 150, 151, 153], "my_addit": 78, "my_ag": 37, "my_data": 62, "my_dict": 48, "my_dict1": 48, "my_dict2": 48, "my_dict3": 48, "my_func": 68, "my_gen": 28, "my_info": 46, "my_it": 27, "my_list": [27, 28, 46, 72, 119, 125], "my_list1": [46, 119], "my_list2": [46, 119], "my_list3": 46, "my_list4": 46, "my_list5": 46, "my_matrix": 119, "my_modul": 73, "my_nam": 83, "my_set": [40, 49], "my_str": [28, 45], "my_tupl": 47, "my_tuple1": 47, "my_tuple2": 47, "my_tuple3": 47, "my_tuple4": 47, "my_vaccin": 40, "myclass": 81, "mygraph": 115, "mymethod": 96, "mynewclass": 95, "myst": [159, 161], "mysteri": 89, "n": [3, 4, 5, 8, 10, 12, 25, 27, 28, 29, 33, 36, 37, 40, 41, 42, 45, 46, 47, 50, 61, 64, 65, 67, 70, 71, 72, 73, 77, 80, 82, 83, 84, 86, 87, 90, 94, 95, 96, 100, 104, 118, 119, 122, 125, 126, 127, 130, 131, 132, 133, 134, 135, 137, 139, 147, 149, 150, 151, 153, 154], "n0": 40, "n1": 40, "n10": 40, "n21": 40, "n28": 40, "n3": 40, "n36": 40, "n45": 40, "n6": 40, "n_boot": [143, 151, 152, 153], "n_color": 142, "n_featur": 154, "n_list": 46, "n_sampl": 154, "n_tupl": 47, "na": [125, 129, 130, 135], "na_valu": 137, "nafter": [129, 130, 131, 134, 135], "nail": 139, "naiv": 99, "name": [11, 17, 19, 24, 28, 29, 30, 31, 32, 33, 40, 41, 42, 44, 45, 46, 47, 48, 50, 52, 53, 54, 58, 59, 61, 62, 63, 64, 67, 68, 70, 72, 76, 77, 78, 81, 82, 84, 85, 86, 88, 90, 94, 95, 96, 97, 99, 115, 116, 125, 126, 128, 129, 130, 131, 132, 133, 134, 136, 139, 142, 143, 144, 146, 147, 151, 153, 155], "named_tupl": 58, "nameerror": [29, 31, 45, 46, 47, 48, 64, 68, 84, 85, 95], "nameless": 72, "names_upper_cas": 30, "namespac": [22, 29, 31, 72, 73, 76, 82, 93, 95, 99, 118], "nan": [73, 75, 119, 121, 123, 126, 131, 135, 136, 137, 139, 143, 149, 151], "napr": 80, "narrow": 150, "nat": [125, 126, 128, 129, 130, 131, 132, 133, 134, 135], "nation": 115, "nativ": [88, 139, 140], "natu": 136, "natur": [1, 8, 24, 30, 41, 73, 75, 89, 118, 153, 162], "naug": 80, "navig": 0, "nayron": [18, 19], "nbagg": 140, "nbin": 141, "nbyte": 119, "ncol": [141, 150, 151], "ncolumn": 132, "ncongratul": 65, "ncontain": 61, "ndarrai": [118, 119, 122, 125, 126, 127, 156], "ndata": 33, "ndatafram": 135, "ndec": 80, "ndenumer": [123, 141], "ndframe": 125, "ndim": [118, 119], "ndindex": 123, "ndo": 45, "ne": 115, "nearest": [3, 10], "nearli": [45, 72, 88, 118], "neat": 82, "neatli": 143, "necessari": [24, 27, 39, 41, 77, 134, 140, 145], "necessarili": [125, 139, 143, 148, 149, 155], "necessit": 0, "need": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 31, 32, 35, 37, 40, 41, 44, 45, 46, 47, 50, 52, 54, 55, 56, 58, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 78, 80, 83, 85, 86, 87, 91, 95, 96, 97, 99, 102, 108, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 156, 160, 163], "neg": [1, 4, 5, 15, 32, 36, 37, 38, 39, 45, 50, 61, 75, 84, 87, 123, 128, 144, 150], "negat": [32, 88], "negative_numb": 87, "neither": [39, 45, 68, 75, 150], "nenter": 65, "nenuemer": 40, "nescessarili": 121, "nest": [22, 30, 35, 37, 38, 43, 46, 47, 48, 68, 71, 89, 118, 119, 127, 148, 150, 151], "netherland": [11, 13], "network": [0, 2, 64, 108, 122, 162, 163], "networkerror": 64, "neural": [0, 2, 108, 122, 162, 163], "neural_network": [18, 19], "neuron": [18, 19], "never": [27, 41, 42, 44, 64, 83, 88, 91, 125, 140, 142, 147], "new": [0, 1, 4, 5, 11, 12, 13, 16, 17, 18, 19, 23, 24, 30, 31, 32, 35, 41, 45, 47, 49, 50, 53, 54, 56, 57, 61, 65, 69, 72, 80, 83, 87, 89, 94, 95, 96, 97, 99, 115, 120, 122, 125, 126, 129, 130, 131, 132, 134, 137, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155], "new_": 125, "new_ag": 132, "new_axi": 129, "new_col": 132, "new_col_nam": 125, "new_df": 136, "new_dict": 48, "new_file_nam": 62, "new_head": 135, "new_index": 132, "new_list": 72, "new_mark": 132, "new_nam": 132, "new_sig": 148, "new_str": 32, "new_valu": 125, "new_year": 56, "new_york": [52, 56], "newaxi": 154, "newdir": 62, "newli": [99, 135], "newlin": [32, 45, 61, 77, 80, 82, 84, 87], "newshap": 122, "newton": 67, "next": [7, 27, 28, 36, 38, 40, 41, 42, 45, 61, 63, 64, 73, 74, 82, 91, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "neymar": [40, 41, 115], "nf": 125, "nfeb": 80, "nfor": 40, "ng": 32, "ngood": 45, "nhow": 87, "ni": 40, "nice": [140, 142, 147, 148, 153], "nicer": [45, 151], "nichol": 139, "nidok": 136, "nidoqueen": 136, "nidoran": 136, "nidorina": 136, "nidorino": 136, "nigeria": 61, "night": [70, 150], "nikla": [4, 5], "nin": 45, "nincada": 136, "nine": 32, "ninetal": 136, "nineti": 45, "ninjask": 136, "nipy_spectr": 145, "nipy_spectral_r": [145, 147], "nissan": 137, "njul": 80, "njun": 80, "nlist": 133, "nmai": 80, "nmar": 80, "nmulti": 82, "nn": 150, "nnov": 80, "no_of_nonna_valu": 131, "no_of_sid": 96, "nob": 141, "noct": 80, "noctowl": 136, "node": [7, 18, 19, 46], "nohtyp": 45, "noibat": 136, "nois": [143, 148], "noisier": 150, "noivern": 136, "nomin": [5, 14, 15, 16, 17], "non": [2, 4, 5, 7, 10, 18, 19, 29, 33, 36, 41, 45, 61, 62, 70, 74, 95, 125, 131, 139, 140, 143, 145, 147, 153], "none": [30, 31, 32, 36, 40, 41, 48, 58, 61, 64, 67, 70, 74, 77, 81, 82, 84, 95, 122, 123, 125, 126, 129, 130, 131, 132, 134, 135, 139, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "nonlinear": [4, 7, 12, 18, 19, 143], "nonloc": [22, 69, 79, 81, 89], "nonlov": 68, "nonmarinemamm": 96, "nonneg": [118, 119], "nonparametr": [143, 145], "nonwingedmamm": 96, "nonzero": 123, "nor": [39, 45, 64, 68, 75, 150], "nordic_countri": 64, "norm": [31, 75, 121, 141, 146, 148], "normal": [8, 12, 16, 17, 18, 19, 29, 30, 32, 41, 42, 45, 50, 64, 65, 68, 72, 73, 74, 95, 119, 122, 128, 136, 141, 143, 144, 145, 146, 149, 150, 157], "normal_arrai": 122, "normalis": 156, "normalize_data": [12, 16, 17, 18, 19], "normalvari": 74, "north": 151, "norwai": [11, 13, 46, 64], "nosepass": 136, "notaion": 120, "notat": [4, 5, 49, 87, 115, 120, 150], "notation3": 87, "notch": 149, "note": [4, 5, 27, 28, 29, 31, 35, 41, 42, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 64, 67, 68, 70, 73, 77, 82, 83, 84, 87, 88, 89, 94, 95, 96, 101, 105, 116, 119, 120, 121, 125, 126, 128, 129, 132, 133, 134, 135, 139, 140, 142, 143, 144, 145, 148, 149, 150, 151, 153, 154, 155, 163], "notebook": [9, 11, 20, 26, 63, 87, 101, 105, 140, 142, 143, 144, 145, 152, 153, 155, 159, 161, 162, 163], "notepad": 80, "noth": [32, 36, 40, 41, 42, 49, 67, 83, 94, 121, 148, 149, 150, 156], "notic": [30, 42, 44, 48, 50, 52, 63, 85, 87, 95, 96, 125, 140, 141, 143, 145, 147, 148, 149, 150, 151, 153, 154], "notif": [7, 24], "notimplementederror": 63, "notion": [44, 97], "notnul": 125, "notpad": 80, "noutput": 37, "nov": 80, "novemb": 38, "now": [5, 7, 8, 10, 11, 12, 13, 14, 15, 22, 28, 29, 30, 31, 32, 35, 36, 37, 40, 41, 50, 52, 53, 55, 56, 57, 61, 63, 64, 67, 68, 69, 70, 72, 73, 76, 77, 80, 82, 84, 86, 87, 89, 94, 95, 96, 97, 99, 121, 132, 135, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163], "nowher": 125, "np": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 100, 104, 115, 118, 119, 120, 121, 122, 125, 131, 135, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "nperfect": 82, "nresult": 133, "nrow": [141, 150], "nsep": 80, "nsheet": 61, "nthi": [61, 65], "null": [40, 41, 49, 125, 131, 143, 155], "num": [27, 28, 29, 30, 33, 36, 37, 38, 39, 40, 41, 45, 49, 64, 67, 70, 71, 72, 82, 83, 87, 95, 122, 125, 126, 137, 146], "num1": [36, 37, 38, 39, 67, 70, 78, 83, 87, 95], "num2": [36, 37, 38, 39, 67, 70, 78, 83, 87, 95], "num3": 87, "num4": 87, "num_1": [38, 83], "num_2": [38, 83], "num_cel": [16, 17, 18, 19], "num_clust": 10, "num_exampl": [8, 10, 14, 15], "num_flo": 86, "num_float": 86, "num_int": 86, "num_iter": [11, 12, 13], "num_list": [50, 72], "num_new": 86, "num_on": 67, "num_perceptron": [18, 19], "num_point": [143, 145], "num_str": 86, "num_sum": 86, "num_training_exampl": [16, 17, 18, 19], "num_two": 67, "numb": 11, "number": [0, 1, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 28, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 42, 45, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 75, 77, 78, 81, 82, 83, 86, 88, 90, 95, 96, 97, 99, 115, 116, 118, 125, 126, 127, 128, 132, 139, 140, 141, 142, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "number33": 87, "number_arithmet": 39, "number_list": 50, "numbermethod": 82, "numbers_int": 30, "numbers_squar": 30, "numbers_str": 30, "numbers_to_displai": [16, 17, 18, 19], "numel": 136, "numer": [17, 19, 24, 40, 41, 44, 45, 65, 73, 83, 87, 97, 118, 119, 125, 142, 144, 146, 147, 149, 150, 151, 153, 156], "numpi": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 40, 77, 100, 104, 115, 116, 120, 121, 125, 131, 135, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162], "numpy_array_from_list": 119, "nuzleaf": 136, "nvar": 141, "ny": [52, 56], "nyc": 153, "nyc_taxi": 153, "nyear": 58, "nzip": 40, "o": [22, 24, 28, 32, 40, 42, 45, 46, 47, 48, 49, 50, 62, 66, 84, 85, 86, 87, 93, 115, 116, 135, 139, 140, 143, 151, 154], "ob": 95, "obama": 61, "obj": [24, 27, 31, 50, 94, 95, 99, 129], "obj1": 96, "obj2": 96, "object": [0, 3, 24, 27, 28, 29, 30, 31, 40, 44, 45, 46, 47, 48, 49, 53, 55, 57, 58, 62, 63, 64, 65, 67, 70, 71, 72, 73, 74, 77, 82, 83, 85, 86, 87, 88, 89, 96, 97, 99, 118, 119, 121, 122, 126, 127, 132, 133, 134, 136, 142, 143, 144, 145, 147, 148, 151, 154, 155], "object1": 96, "object_nam": 95, "observ": [0, 3, 8, 10, 30, 31, 36, 42, 94, 125, 135, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 155, 156], "obtain": [45, 73, 144, 151, 155], "obviou": [31, 45, 88], "obvious": 148, "occas": 122, "occass": [143, 147], "occur": [32, 41, 42, 45, 61, 63, 64, 65, 69, 78, 86, 122, 149], "occurr": [32, 45, 49, 95, 130, 151], "ocean": [145, 154], "ocean_r": 145, "oct": 80, "octadecim": 44, "octal": [44, 45, 84, 87], "octilleri": 136, "octob": 38, "od": 94, "odd": [27, 35, 40, 41, 46, 48, 50, 64, 67, 70, 99, 122], "odd_numb": [30, 50], "odd_squar": 48, "oddish": 136, "ofcours": [151, 153, 155], "off": [6, 20, 45, 61, 101, 102, 105, 125, 140, 151, 153, 160], "offer": [0, 24, 44, 46, 74, 88, 120, 123, 139, 142, 145, 147, 148, 150, 151, 152, 153, 154, 155], "offic": 139, "offici": [22, 77, 143, 147, 149, 152, 153], "offlin": [11, 150], "offset": [53, 54, 61, 140, 151], "offspr": 147, "often": [1, 5, 8, 41, 45, 46, 80, 87, 94, 99, 141, 142, 144, 145, 147, 148, 149, 151, 153, 154, 155], "oh": [136, 151], "ohc": [125, 126, 137], "ohcf": 137, "ohcv": [125, 126, 137], "ok": [45, 82, 139], "okai": [82, 144, 145, 147, 148, 150], "old": [32, 37, 64, 77, 87, 94, 99, 123, 125, 132, 141, 144], "old_col": 132, "old_nam": 125, "older": [37, 88], "oliv": 142, "omanyt": 136, "omastar": 136, "omit": 32, "omma": 61, "onc": [4, 5, 24, 28, 32, 40, 42, 45, 47, 48, 49, 52, 61, 64, 67, 68, 70, 73, 80, 83, 85, 91, 128, 129, 132, 139, 140, 142, 145, 148, 149, 150, 151, 152, 153, 154, 155, 163], "one": [0, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 59, 61, 64, 68, 70, 71, 72, 73, 76, 77, 80, 81, 82, 84, 85, 86, 88, 89, 91, 95, 96, 97, 99, 101, 105, 108, 119, 120, 121, 122, 125, 126, 127, 129, 130, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157], "onedr": 62, "onedrivetemp": 62, "ones": [5, 45, 73, 118, 119, 121, 122, 123, 132, 134, 147, 149], "ongo": 153, "onion": 64, "onix": 136, "onli": [7, 13, 22, 28, 29, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 52, 61, 62, 63, 64, 65, 68, 69, 70, 72, 73, 77, 80, 82, 83, 85, 88, 89, 91, 94, 95, 96, 97, 99, 119, 120, 125, 128, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 148, 150, 151, 153, 154, 155], "onlin": [5, 14, 15, 16, 17, 22, 142, 150, 153], "onto": [144, 152], "ooo": 45, "oop": [22, 64, 98], "opac": [11, 142], "opaqu": 142, "open": [0, 22, 24, 63, 64, 73, 77, 82, 118, 125, 136, 137, 162], "open_workbook": 61, "openai": 162, "openerp": 24, "oper": [1, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 28, 29, 30, 32, 33, 40, 41, 44, 50, 52, 61, 63, 64, 67, 68, 70, 76, 78, 82, 83, 85, 87, 90, 91, 93, 94, 95, 98, 108, 119, 122, 125, 129, 130, 132, 133, 134, 135, 153, 163], "operand": [44, 45, 46, 63, 64, 86, 88, 97], "opinion": [147, 151, 153], "opportun": [0, 42, 141], "opposit": [72, 125], "optim": [0, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 42, 48, 85, 91, 129, 163], "option": [4, 5, 31, 32, 38, 40, 41, 44, 45, 46, 47, 48, 50, 64, 65, 67, 70, 77, 87, 94, 95, 96, 119, 122, 126, 133, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "oracl": 45, "orang": [38, 40, 46, 49, 64, 84, 88, 127, 142, 145], "oranges_r": 145, "orbital_period": 150, "order": [4, 7, 8, 16, 17, 18, 19, 28, 40, 41, 45, 61, 62, 67, 68, 70, 72, 73, 76, 85, 87, 95, 122, 125, 126, 132, 133, 140, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155], "ordereddict": 133, "ordin": [5, 14, 15, 16, 17, 151], "ordinari": 30, "ore": [32, 155], "org": [24, 115, 121, 146, 153, 157], "organ": [24, 46, 52, 67, 73, 76, 87, 94, 153, 157], "orient": [27, 29, 31, 65, 95, 96, 97, 99, 126, 133, 140, 147, 148, 149, 150, 151, 152, 153], "origin": [8, 9, 10, 17, 19, 29, 30, 32, 62, 91, 97, 99, 120, 122, 125, 126, 129, 130, 131, 133, 135, 140, 144, 149, 153, 154, 157], "orrd": 145, "orrd_r": 145, "orthogonol": 26, "oserror": 63, "oshawott": 136, "ot": [32, 39], "otat": 61, "other": [0, 5, 6, 7, 10, 14, 15, 22, 24, 27, 28, 30, 32, 40, 41, 44, 45, 50, 58, 61, 63, 64, 65, 67, 68, 70, 71, 72, 73, 77, 78, 80, 81, 82, 83, 84, 85, 88, 91, 94, 95, 96, 97, 99, 102, 118, 119, 121, 122, 125, 126, 130, 131, 133, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 162], "other_mag": 97, "otherwis": [42, 45, 61, 64, 70, 91, 95, 96, 121, 126, 131, 132], "othwerwis": 41, "ou": 153, "our": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 31, 32, 37, 41, 42, 44, 61, 62, 63, 64, 65, 67, 71, 73, 76, 77, 78, 80, 81, 87, 94, 97, 99, 115, 122, 125, 126, 128, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "our_plot": 145, "ourselv": [61, 78, 80], "out": [14, 24, 25, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 61, 63, 65, 67, 70, 72, 73, 80, 81, 82, 83, 84, 85, 88, 97, 100, 104, 120, 122, 123, 125, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155], "outcom": [35, 67, 143], "outer": [29, 39, 40, 41, 68, 121, 125, 149], "outer_fun": 68, "outer_funct": 89, "outermost": 89, "outlier": [143, 144, 149, 151, 153, 157], "outlier_prop": 153, "outliers_indic": 8, "outlin": [115, 148], "outout": 83, "outperform": 0, "output": [0, 4, 5, 6, 7, 11, 13, 18, 19, 27, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 42, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 67, 68, 69, 70, 72, 73, 80, 86, 88, 91, 95, 96, 97, 102, 119, 121, 125, 128, 132, 133, 140, 153, 160, 162], "output_param_nam": [11, 13], "outsid": [36, 39, 40, 42, 46, 47, 68, 69, 94, 95, 120, 144, 153, 155], "over": [0, 11, 12, 13, 14, 15, 16, 17, 27, 28, 30, 40, 41, 42, 72, 81, 82, 84, 96, 115, 119, 125, 126, 140, 141, 143, 146, 148, 151, 153, 154], "overal": [91, 115, 140, 145, 150, 151, 153, 154], "overcom": 44, "overfit": [11, 12, 13, 14, 15, 16, 17, 18, 19], "overflow": [71, 123], "overflowerror": [63, 88], "overkil": 28, "overlai": [144, 151], "overlap": [147, 148, 153], "overli": 154, "overload": [22, 98, 121], "overplot": 154, "overrid": [65, 99], "overridden": [65, 96], "overview": [14, 15, 20, 82, 101, 105, 122, 143, 144, 151, 152], "overwrit": [48, 61, 70], "overwritten": 61, "ow": 32, "own": [27, 63, 64, 65, 72, 73, 76, 77, 78, 80, 87, 89, 99, 141, 148, 149, 150, 151, 153], "oxford": [87, 150], "p": [1, 24, 32, 40, 42, 45, 46, 47, 49, 50, 53, 54, 59, 83, 87, 90, 94, 141, 145, 148, 151], "p1": [90, 94, 97, 99, 156], "p2": [90, 94, 97, 99], "p3": [97, 99], "p4": 99, "p5": 99, "p6": 99, "p7": 99, "p_letter": 50, "p_list": 24, "pa": 139, "pachirisu": 136, "pack": [30, 47], "packag": [22, 61, 73, 79, 82, 125, 129, 132, 133, 134, 139, 142, 146, 148, 150, 152, 153, 154, 155], "packagesin": 76, "packing_person_info": 64, "pad": [45, 53, 54, 87, 88], "page": [6, 59, 74, 75, 82, 97, 102, 142, 152, 160], "pagefil": 62, "pai": 88, "pain": 154, "pair": [11, 14, 15, 40, 45, 49, 75, 85, 86, 125, 126, 132, 133, 145, 148, 150, 152, 153, 154], "paired_r": 145, "pairgrid": [141, 145, 146, 155, 158], "pairplot": [141, 145, 154, 155], "pairwis": 146, "pakistan": 61, "pal": 155, "pale": [142, 148], "palett": [141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158], "palkia": 136, "palpitoad": 136, "palplot": 142, "pancham": 136, "panda": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 40, 115, 116, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162], "panel": [152, 154], "pangoro": 136, "panpour": 136, "pansag": 136, "pansear": 136, "paper": [0, 140, 142, 143, 153, 162], "para": 136, "para1": 30, "para2": 30, "para3": 30, "paradigm": 94, "paragraph": 32, "parallel": [71, 155], "param": [8, 9, 143, 148, 149, 153, 154, 155], "param1": 50, "param2": 50, "param3": 50, "param_1": [5, 9, 15], "param_2": [5, 9, 15], "paramet": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 33, 45, 50, 61, 68, 72, 73, 77, 80, 84, 91, 94, 96, 99, 115, 122, 126, 127, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "parameter": 95, "parameter1": [67, 77], "parameter2": 67, "parametr": [95, 153], "paranthes": 45, "paranthesi": [47, 82], "parasect": 136, "parch": [149, 151], "parent": [65, 147], "parentattr": 96, "parenthes": [28, 32, 40, 45, 47, 63, 72, 80, 82, 84, 85, 140], "parenthesi": [28, 63, 68, 122], "parentmethod": 96, "pareto": [74, 151], "paretovari": 74, "pari": 115, "park": 143, "parmar": [30, 38, 40, 45, 50, 61, 67, 70, 73, 83, 94], "parramet": 155, "parrot": [94, 95], "pars": [58, 61, 63, 91, 125], "parser": 63, "part": [1, 30, 32, 40, 41, 42, 44, 45, 73, 75, 84, 85, 88, 89, 115, 118, 120, 130, 133, 139, 149, 153], "parti": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 52, 76], "partial": 7, "particl": 32, "particuar": [17, 18, 19], "particular": [35, 40, 41, 42, 44, 48, 49, 52, 57, 73, 83, 85, 94, 96, 119, 125, 128, 129, 131, 132, 133, 135, 139, 140, 141, 143, 144, 148, 149, 150, 151, 153, 154, 155], "particularli": [45, 149, 150], "partit": [3, 10, 45], "pass": [22, 27, 29, 30, 32, 33, 35, 36, 37, 43, 45, 52, 53, 54, 58, 63, 64, 65, 70, 72, 73, 77, 81, 83, 94, 95, 96, 99, 119, 125, 126, 127, 128, 129, 132, 134, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 153, 154, 155], "passag": 153, "passeng": [151, 153, 155, 156], "passenger_count": 153, "password": 37, "password_check": 37, "past": [116, 140, 145, 148, 149, 150, 153], "pastel1": [145, 150], "pastel1_r": 145, "pastel2": 145, "pastel2_r": 145, "pat": 108, "patch": [147, 151, 154], "patch_artist": 115, "patchcollect": 153, "path": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 61, 62, 76, 87, 102, 160], "pathcollect": [147, 148], "patienc": 143, "patrat": 136, "pattern": [0, 30, 91, 115, 142, 154], "paul": 139, "paus": 28, "pawniard": 136, "pca": 152, "pclass": [149, 151], "pctdistanc": 115, "pd": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 115, 116, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "pd_data": 8, "pd_test_data": [16, 17, 18, 19], "pd_train_data": [16, 17, 18, 19], "pdf": [143, 144, 146, 158], "peach": 151, "peak": [137, 144, 150], "pear": [38, 46, 49], "pearl": 91, "pearsonr": 154, "peculiar": [99, 125], "pedestrian": 7, "peek": [16, 17, 18, 19, 139], "peggi": [94, 96], "pelipp": 136, "penal": 0, "penguin": [94, 96], "penicillin": 40, "peo": 32, "peopl": [32, 45, 49, 139, 142, 148, 153], "pep": 77, "per": [11, 13, 65, 88, 115, 116, 126, 139, 140, 142, 143, 149, 150, 151, 153, 155], "peramet": 70, "perceiv": 142, "percent": 30, "percentag": [14, 15, 16, 17, 18, 19, 40, 87, 94, 116, 125, 128, 132, 135, 147, 149, 151, 153], "percentil": [94, 122, 125, 153], "percep": [18, 19], "percept": 150, "perceptron": 7, "perceptron_index": [18, 19], "perfect": [1, 41, 82], "perfectli": [81, 82], "perflog": 62, "perform": [0, 7, 10, 18, 19, 24, 27, 29, 33, 35, 40, 41, 44, 45, 46, 47, 48, 49, 50, 61, 64, 67, 72, 73, 78, 80, 85, 86, 87, 88, 91, 94, 97, 108, 118, 121, 125, 129, 132, 134, 135, 151, 163], "perimet": [67, 88, 96], "perimeter_of_circl": 67, "period": [72, 77, 125, 153], "perl": 24, "perm": 73, "perman": 61, "permiss": 64, "permit": 151, "permut": 156, "persian": 136, "person": [0, 38, 40, 61, 67, 70, 77, 82, 83, 88, 94, 95, 96, 148, 151, 153], "person_dct": 61, "person_info": [83, 94, 96], "person_json": 61, "personaccount": 94, "petal": [9, 10, 14, 139, 147], "petal_length": [3, 5, 10, 14, 139, 142, 144, 145, 147, 148, 154, 157], "petal_width": [3, 5, 10, 14, 139, 147, 148, 154, 157], "petallengthcm": 115, "petalwidthcm": 115, "petilil": 136, "ph": 150, "phanpi": 136, "phantump": 136, "phion": 136, "phone": [33, 87, 90], "phone_num": 90, "phone_numb": 87, "photo": 115, "photograph": 0, "php": [48, 91], "phrase": 45, "physic": [71, 94, 139], "pi": [32, 44, 45, 63, 67, 73, 75, 83, 87, 88, 92, 94, 136], "picalo": 24, "pichu": 136, "pick": [3, 8, 10, 14, 120, 139, 142, 143, 145, 151, 153], "pickl": 77, "pickler": 77, "pickletool": 77, "pickup_datetim": 153, "pickup_latitud": 153, "pickup_longitud": 153, "pictori": 151, "pictur": [3, 4, 5, 7, 16, 17, 18, 19, 42, 155], "pidgei": 136, "pidgeot": 136, "pidgeotmega": 136, "pidgeotto": 136, "pidov": 136, "piec": [31, 120, 151], "piechart": 115, "pignit": 136, "pikachu": 136, "pile": 151, "piloswin": 136, "pineappl": 151, "pineco": 136, "pink": [40, 142, 145], "pink_r": 145, "pinsir": 136, "pinsirmega": 136, "pip": [24, 61, 73], "pipe": 150, "pipelin": [0, 150], "piplup": 136, "pivot": [125, 156], "pivot_t": 125, "pixel": [5, 7, 9, 16, 17, 18, 19, 115], "pixel1": [17, 19], "pixel2": [17, 19], "pixel3": [17, 19], "pixel4": [17, 19], "pixel5": [17, 19], "pixel6": [17, 19], "pixel7": [17, 19], "pixel775": [17, 19], "pixel776": [17, 19], "pixel777": [17, 19], "pixel778": [17, 19], "pixel779": [17, 19], "pixel780": [17, 19], "pixel781": [17, 19], "pixel782": [17, 19], "pixel783": [17, 19], "pixel784": [17, 19], "pixel8": [17, 19], "pixel9": [17, 19], "piyg": 145, "piyg_r": 145, "pizel": [17, 18, 19], "place": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 31, 44, 45, 46, 47, 48, 49, 52, 61, 64, 65, 70, 71, 73, 76, 82, 83, 85, 87, 96, 99, 139, 151, 155, 156], "placehold": [42, 45, 87], "plai": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 82, 89, 96, 125, 140, 142, 143, 145, 147, 148, 149, 151, 152, 153, 154, 155], "plain": [14, 15, 27, 99, 150], "plan": [94, 153], "plane": [11, 15, 26], "planet": 150, "planets_data": 150, "plasma": [145, 150, 153], "plasma_r": 145, "plate": 151, "platform": [22, 24, 61, 91, 153], "player": [40, 41, 94, 96, 115], "playground": 7, "ple": 32, "pleas": [41, 126, 140, 142, 143, 144, 146, 150, 151, 153, 155], "plenti": [63, 125], "plot": [4, 25, 100, 104, 139, 154, 155, 156, 157, 158], "plot_data": 11, "plot_figur": 11, "plot_func": 155, "plot_index": [16, 17, 18, 19], "plot_joint": 144, "plot_kw": 145, "plot_layout": 11, "plot_predictions_trac": 11, "plot_test_trac": 11, "plot_training_trac": 11, "plotli": [11, 144], "plotlin": 116, "plotnonfinit": 148, "plotter": 148, "plotting_context": 140, "plt": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 100, 104, 115, 116, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "plu": [88, 152], "plusl": 136, "pm": [53, 54, 59], "png": [61, 62, 115, 116, 144], "po": [129, 151], "pocoo": 24, "poetri": 24, "pofession": 155, "point": [4, 5, 8, 28, 29, 31, 32, 44, 45, 49, 58, 59, 63, 73, 74, 75, 84, 85, 88, 95, 97, 99, 115, 122, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156], "point_color": 148, "pointer": 61, "pointplot": [147, 151], "poison": 136, "poisson": 147, "pokemon": 136, "pokemon_data": 136, "poli": 94, "polic": 139, "policekillingsu": 139, "polio": 40, "polito": 136, "poliwag": 136, "poliwhirl": 136, "poliwrath": 136, "pollut": 31, "poly1d": 141, "polyfit": 141, "polygon": 96, "polynomi": [11, 12, 13, 14, 15, 16, 17, 118, 143], "polynomial_degre": [11, 12, 13, 14, 15, 16, 17], "ponyta": 136, "poochyena": 136, "poorli": 142, "pop": [35, 48, 49, 115, 145, 149, 154, 157], "popitem": 48, "popul": [30, 50, 61, 67, 74, 153, 155], "popular": [22, 24, 45, 59, 73, 77, 91, 94], "porsch": 137, "port": 91, "portabl": [22, 77, 91], "portal": 152, "portfolio": 162, "portion": [45, 46, 64, 68, 89, 139], "portrai": 142, "portug": 115, "portugues": 61, "porygon": 136, "porygon2": 136, "posit": [0, 1, 15, 30, 32, 33, 36, 37, 38, 39, 45, 50, 64, 67, 71, 72, 75, 84, 125, 134, 135, 142, 144, 147, 148, 149, 151, 155], "positional_or_keyword": 132, "positional_ord": 45, "positive_even_numb": 50, "positive_no": 72, "positive_numb": 87, "possess": 143, "possibl": [0, 8, 11, 16, 17, 18, 19, 31, 32, 37, 40, 42, 45, 47, 50, 64, 71, 73, 76, 83, 84, 87, 115, 121, 122, 125, 127, 128, 142, 145, 147, 150, 153, 155, 156, 163], "possibli": [7, 95, 151], "post": [25, 57, 100, 104, 139, 142, 147, 148, 149, 150], "postag": 154, "poster": 140, "potato": [64, 67, 88], "potenti": [115, 125, 145, 152, 154], "pound": 152, "pow": [63, 73, 75], "pow2": [46, 50], "power": [27, 28, 40, 45, 46, 50, 63, 73, 75, 82, 83, 88, 89, 96, 97, 101, 105, 109, 118, 119, 121, 125, 153, 155], "powtwo": [27, 28], "powtwogen": 28, "pp": 32, "pple": 32, "practic": [22, 23, 32, 47, 64, 65, 67, 73, 78, 99, 119, 125, 137, 140, 144, 150, 151, 152, 153, 155, 162], "practical_estimation_of_the_bandwidth": 146, "pre": [0, 73, 91, 143, 151, 152, 153, 155], "prebuilt": 24, "preced": [36, 53, 54, 64, 70, 82, 96, 144], "precis": [1, 44, 88, 130, 135, 140, 143, 147, 153, 155], "precision_histori": 8, "preciss": [8, 16, 17, 18, 19], "predefin": [0, 5, 11, 61, 67, 73, 86, 140], "predict": [0, 4, 5, 14, 15, 91, 143, 153], "predicted_label": [16, 17, 18, 19], "predictions_num": [11, 12, 13], "predictor": 143, "predomin": 26, "prefer": [28, 29, 44, 82, 96, 115, 126, 140, 147, 150, 151], "prefix": [44, 76, 89, 94, 95, 140, 142], "prepar": [139, 154, 162], "prepend": 121, "presenc": [6, 44, 88, 102, 144, 160], "present": [38, 40, 42, 45, 48, 49, 62, 64, 72, 77, 88, 125, 128, 129, 132, 140, 141, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 163], "preserv": 44, "preset": 140, "press": [41, 82, 142], "pression": 32, "pressur": 153, "pretti": [14, 15, 24, 30, 57, 80, 85, 125, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "prevent": [11, 12, 13, 14, 15, 16, 17, 18, 19, 76, 83, 94, 96], "preview": [139, 141, 143, 144, 145, 149, 150, 151, 153, 155], "previou": [7, 31, 37, 44, 61, 68, 73, 89, 99, 120, 140, 144, 145, 147, 148, 149, 150, 152, 153, 155], "previous": [64, 73, 144, 145, 148, 150, 153, 154, 155], "prgn": 145, "prgn_r": 145, "price": [0, 4, 5, 94, 95, 115, 125, 126, 127, 136, 153], "price_df": 127, "price_list": 127, "pricedf": 137, "primari": [142, 153], "primarili": [40, 41], "prime": [40, 41, 67], "primeap": 136, "princeton": 153, "princip": 152, "principl": [94, 153], "prinplup": 136, "print": [6, 8, 10, 11, 12, 13, 14, 15, 18, 19, 24, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 77, 78, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 97, 99, 102, 115, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 147, 153, 160], "print_data": 68, "print_full_nam": 30, "print_fullnam": [67, 70], "print_hello": 59, "print_hello_three_tim": 59, "print_hi": 59, "print_hi_three_tim": 59, "print_list": 67, "print_msg": 29, "print_this_to_screen": 81, "printer": [29, 30], "printf": 45, "printhello": 89, "printinfo": 70, "printnam": 94, "printstudentdata": 95, "prior": [7, 153], "priori": 0, "prism": [145, 154], "prism_r": 145, "privaci": 162, "privat": [31, 73, 94, 95], "privatenam": 82, "privileg": 154, "probabl": [1, 5, 8, 11, 12, 13, 23, 44, 83, 115, 119, 142, 144, 149, 150, 156, 162], "problem": [0, 12, 24, 29, 31, 33, 45, 64, 71, 94, 142, 150, 154, 155, 163], "probopass": 136, "proce": [7, 42, 87, 145], "procedur": [95, 153], "process": [0, 7, 11, 13, 14, 15, 17, 18, 19, 24, 28, 41, 42, 47, 50, 59, 64, 71, 86, 91, 94, 95, 96, 99, 125, 127, 131, 143, 154, 155, 162], "processor": 91, "prod": 73, "produc": [9, 15, 28, 32, 37, 64, 80, 96, 115, 116, 121, 129, 132, 140, 162], "product": [11, 23, 26, 71, 73, 77, 83, 91, 97, 118, 121, 142, 143, 144, 145, 155, 162], "profession": [115, 140, 141, 142, 147, 148, 150], "profici": 143, "profit_rang": 116, "profitlist": 116, "program": [0, 7, 18, 19, 24, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 50, 52, 53, 54, 55, 56, 57, 58, 61, 62, 63, 65, 67, 68, 69, 72, 73, 75, 76, 77, 78, 82, 83, 84, 85, 86, 87, 89, 95, 96, 97, 99, 143, 153, 162], "programdata": [54, 62, 73, 129, 132, 133, 134, 139, 142, 146, 148], "programm": [0, 31, 44, 50, 64, 67, 77, 82, 84, 94, 99, 145], "programmar": 78, "progress": 24, "project": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 52, 76, 78, 143, 145, 152, 155, 162], "promin": 147, "promis": [99, 139, 145, 153], "promot": [86, 88], "prompt": [38, 67, 73, 87, 88, 118], "pronoun": 94, "pronounc": 154, "prop": [148, 151], "prop_cycl": [25, 100, 104], "proper": [63, 94, 130], "properli": [61, 62, 63, 80, 95, 149, 150, 155], "properti": [22, 34, 73, 94, 96, 128, 148, 153], "proport": [0, 4, 5, 11, 13, 16, 17, 18, 19, 149, 151, 153], "propos": 99, "prospect": 0, "protect": [47, 64, 85, 94, 95], "protocol": [24, 27], "prototyp": [3, 10, 22, 95], "provid": [0, 22, 24, 29, 31, 35, 40, 42, 44, 45, 46, 48, 59, 62, 64, 65, 67, 70, 73, 77, 87, 94, 95, 96, 116, 118, 121, 123, 125, 126, 127, 129, 132, 137, 142, 144, 147, 149, 153, 154, 155, 163], "proxi": [63, 96], "prune": 141, "pseudo": [64, 74], "pseudocolor": 142, "psychic": 136, "psyduck": 136, "ptp": 147, "public": [77, 94], "publish": 153, "pubu": 145, "pubu_r": 145, "pubugn": 145, "pubugn_r": 145, "pull": [120, 142, 151, 152, 155], "pullov": [17, 19], "puls": 152, "pumpkabooaverag": 136, "pumpkaboolarg": 136, "pumpkaboosmal": 136, "pumpkaboosup": 136, "punctuat": 73, "puor": 145, "puor_r": 145, "pupitar": 136, "purchas": 0, "purd": 145, "purd_r": 145, "purpl": [142, 145, 147], "purples_r": 145, "purpos": [7, 22, 24, 35, 61, 65, 72, 73, 74, 82, 83, 94, 95, 96, 97, 101, 105, 127, 141, 142, 143, 148, 149, 152, 153, 155], "purrloin": 136, "purugli": 136, "put": [31, 32, 36, 37, 42, 45, 46, 64, 80, 87, 89, 123], "pvalu": 141, "py": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 45, 54, 65, 69, 73, 76, 77, 80, 83, 87, 129, 132, 133, 134, 139, 142, 146, 148], "py3": 73, "py_list": 46, "py_tupl": 47, "pybrain": 24, "pycharm": [24, 140], "pydata": [139, 153, 157], "pygam": 24, "pykyra": 24, "pynb": 73, "pyplot": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 100, 104, 115, 116, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "pyqt": 24, "pyramid": [24, 40, 45], "pyroar": 136, "pyscript": 73, "pyth0ndatatyp": 45, "pytho": 45, "python": [90, 91, 115, 120, 121, 128, 129, 132, 135, 141, 143, 145, 148, 150, 153, 154, 162, 163], "python3": [48, 64], "python32": 45, "python38": 73, "python4datasci": 73, "python99": [37, 61, 62], "python_datatyp": 45, "python_dataypes_2021": 45, "python_learn": 62, "python_studi": 62, "pythonblogsoftwar": 24, "pythondatatyp": 45, "pythonpath": 73, "pythonregex": 32, "pythonthi": 82, "pythonwikiengin": 24, "pythonwin": 73, "pytorch": [40, 162], "pytz": [52, 56], "pyweek": 24, "q": [83, 145, 149], "quadrat": 67, "quagsir": 136, "qualit": 142, "qualiti": [115, 116], "quantil": [115, 149], "quantit": [149, 151, 154], "quantiti": 151, "quantiz": 142, "quarter": 153, "quarterli": 155, "quartet": 145, "quartil": [115, 149, 150, 151], "queen": 148, "queenstown": 149, "queri": [125, 143, 153], "question": [41, 46, 137, 154], "quick": [77, 123, 141, 148, 154], "quickli": [122, 140, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155], "quilava": 136, "quilladin": 136, "quintero": 139, "quit": [7, 11, 13, 40, 47, 63, 64, 120, 122, 141, 143, 144, 145, 146, 147, 148, 152, 153, 155, 156], "quot": [45, 61, 67, 77, 82, 84, 85, 140, 142], "quotat": [77, 80], "quux": 46, "quz": 46, "qwilfish": 136, "r": [4, 11, 12, 13, 38, 40, 41, 42, 45, 46, 47, 48, 49, 54, 59, 61, 62, 64, 67, 83, 84, 88, 94, 95, 115, 116, 120, 125, 133, 136, 137, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "r1": 119, "race": [139, 147], "rad": 115, "radian": [73, 75], "radiu": [83, 88, 94], "raichu": 136, "raikou": 136, "rain": 5, "rainbow": [142, 145, 148, 150, 151, 153], "rainbow_r": 145, "rais": [8, 27, 28, 31, 42, 45, 46, 47, 48, 49, 54, 61, 63, 65, 73, 75, 77, 81, 88, 97, 99, 129, 134, 148], "ralt": 136, "ram": 61, "ramp": 142, "rampardo": 136, "ran": [40, 63, 64, 80, 94, 95], "rana": 119, "rand": [73, 125, 145, 147, 153, 154, 156], "randint": [73, 74, 145, 154], "randn": [25, 100, 104, 146, 149, 153], "random": [1, 3, 8, 11, 13, 16, 17, 18, 19, 22, 25, 44, 49, 61, 79, 100, 104, 118, 125, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "random_numb": 73, "random_sampl": 119, "random_st": 154, "random_user_id": 73, "randomli": [3, 141, 153], "randomlist": 64, "randomst": 143, "randon": 154, "randrang": [44, 73, 74], "rang": [4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 32, 41, 42, 45, 46, 47, 48, 50, 59, 63, 64, 65, 67, 73, 74, 82, 85, 94, 96, 100, 104, 118, 119, 120, 121, 125, 126, 127, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "rangeindex": [18, 19, 125, 135], "rank": [9, 11, 13, 118, 119, 120, 121], "rapid": 22, "rapidash": 136, "rapidli": 22, "rare": [8, 64, 99], "rate": [4, 5, 11, 12, 13, 88, 115, 144, 147, 148, 152], "rather": [5, 7, 18, 19, 52, 59, 73, 77, 82, 96, 125, 126, 128, 132, 134, 135, 140, 149, 151, 153], "ratic": 136, "ratio": [0, 5, 14, 15, 16, 17, 75, 155], "ration": 44, "rattata": 136, "raw": [32, 84, 153], "raw_str": 84, "rayquaza": 136, "rayquazamega": 136, "rb": 61, "rbg": 157, "rc": [140, 142, 151], "rcparam": [25, 100, 104, 151, 153, 154], "rdbm": 155, "rdbu": 145, "rdbu_r": 145, "rdgy": 145, "rdgy_r": 145, "rdpu": 145, "rdpu_r": 145, "rdylbu": 145, "rdylbu_r": 145, "rdylgn": 145, "rdylgn_r": 145, "re": [0, 7, 11, 24, 41, 45, 46, 67, 73, 125, 134, 135, 136, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 153, 155], "rea": 40, "reacal": 8, "reach": [1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 31, 40, 42, 61, 108], "react": [45, 46, 61], "read": [22, 28, 29, 32, 33, 59, 63, 64, 67, 68, 69, 77, 82, 83, 89, 91, 95, 119, 120, 121, 125, 133, 139, 143, 144, 154, 162], "read_clipboard": 125, "read_csv": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 115, 116, 125, 126, 133, 136, 137, 139, 144, 150, 151], "read_excel": [125, 136], "read_html": 125, "read_json": 125, "read_sql": 125, "read_tabl": 125, "readabl": [22, 35, 50, 61, 72, 73, 82, 91, 99, 126], "reader": 61, "readi": [64, 94, 96, 163], "readili": [78, 87], "readlin": 61, "readm": 61, "real": [1, 3, 4, 7, 8, 10, 23, 24, 44, 83, 84, 85, 94, 95, 125, 143, 148, 149, 150, 153, 154, 162], "realiti": 83, "realiz": 150, "realli": [16, 17, 18, 19, 32, 94, 95, 139, 141, 143, 144, 147, 148, 149, 150, 153, 154, 155, 156], "reason": [4, 12, 28, 29, 30, 31, 44, 67, 72, 89, 95, 99, 122, 131, 139, 141, 148, 150, 155], "reassign": [30, 45, 47, 83, 131, 132], "rebind": 89, "recal": 1, "recall_histori": 8, "receiv": [7, 36, 37, 50, 70, 99], "recent": [27, 28, 29, 30, 31, 33, 41, 45, 46, 47, 48, 49, 54, 59, 61, 63, 64, 65, 68, 69, 70, 71, 73, 84, 85, 86, 87, 88, 94, 95, 96, 97, 99, 120, 129, 132, 134, 148, 153], "reciev": 24, "reciproc": 64, "recogn": [0, 5, 7, 16, 17, 18, 19, 31, 73], "recognit": [0, 7, 16, 17], "recollect": 145, "recomend": 83, "recommend": [0, 24, 31, 32, 33, 53, 54, 59, 61, 76, 82, 83, 95, 118, 119, 143, 145, 147, 148, 149, 151, 154, 162], "record": [90, 133, 139, 153, 155], "recoveri": 62, "rect": [94, 147], "rectangl": [40, 88, 94, 147, 149, 151, 155], "rectangular": [151, 155, 156], "rectifi": 37, "recur": 99, "recurr": 162, "recurs": [22, 79, 96], "recursionerror": 71, "recursor": 71, "recycl": 62, "red": [4, 8, 16, 17, 18, 19, 40, 82, 95, 115, 116, 142, 145, 146, 148], "redeclar": 83, "redefin": [96, 153], "rediu": 94, "reds_r": 145, "reduc": [4, 5, 11, 12, 13, 18, 19, 30, 40, 41, 67, 71, 123, 125, 144, 150, 152, 153], "reduceat": 123, "reduct": [0, 26, 162], "redund": [99, 125, 129], "redux": 46, "refactor": 31, "refect": 143, "refer": [22, 24, 29, 30, 42, 45, 46, 47, 61, 63, 73, 76, 77, 78, 83, 84, 88, 89, 94, 96, 99, 105, 121, 122, 123, 125, 139, 140, 142, 143, 145, 148, 149, 151, 152, 153, 154, 155, 159, 161], "referec": 153, "referenc": [68, 69, 139, 148, 149], "reference_vari": 94, "referenceerror": 63, "refin": 143, "reflect": [71, 143, 147, 149, 151, 153, 155], "reform": 155, "reformat": 45, "refresh": [23, 140], "reg": [32, 142, 144, 145, 146, 153, 158], "regard": [141, 148, 153], "regardless": 36, "regex": [22, 34, 136], "regex101": 32, "regex_pattern": 32, "regic": 136, "regigiga": 136, "regirock": 136, "regist": 77, "registeel": 136, "reglot": 143, "regplot": [141, 145, 147, 154], "regress": [2, 7, 9, 140, 141, 143, 144, 147, 153, 154, 158, 162], "regular": [20, 32, 40, 45, 50, 101, 105, 125, 149, 153], "regularization_param": [11, 12, 13, 14, 15, 16, 17, 18, 19], "regularli": 94, "reindex": 129, "reindex_axi": 151, "reinforc": 162, "reinvent": 153, "reject": 42, "rel": [91, 140, 147, 151, 153], "relat": [4, 23, 52, 58, 59, 61, 63, 64, 70, 97, 139, 141, 148, 149, 152, 153, 154, 155, 156], "relationa": 125, "relationship": [0, 4, 5, 11, 12, 13, 14, 15, 16, 17, 141, 142, 143, 144, 145, 146, 151, 155], "releas": [64, 67, 115], "relev": [125, 140, 144, 148, 152, 155, 156], "reli": [45, 61], "relicanth": 136, "reload": [8, 152], "reload_ext": 8, "relplot": 153, "rem": 70, "remain": [9, 16, 17, 18, 19, 47, 61, 88, 139, 140, 143, 144, 145, 147, 152, 153, 154], "remaind": [41, 42, 70, 73, 75, 83, 88, 97, 115], "remean": 42, "rememb": [16, 17, 18, 19, 28, 29, 40, 42, 62, 67, 68, 83, 84, 88, 96, 99, 119, 147, 148, 149, 150, 151, 153, 163], "remind": 142, "remoraid": 136, "remot": 64, "remov": [0, 29, 32, 40, 44, 45, 47, 61, 63, 67, 73, 95, 129, 130, 131, 135, 140, 143, 146, 148, 149, 150, 153, 154], "remove_item": 67, "remove_support_word": 61, "renam": [15, 24, 118, 135, 151, 155], "rename_axi": 132, "render": [11, 13, 24, 62, 101, 105], "repeat": [0, 40, 41, 45, 46, 47, 48, 61, 67, 71, 78, 80, 94, 96, 119, 122, 153, 155], "repeatedli": [35, 40, 41, 42], "repetit": [32, 40], "rephras": 149, "replac": [9, 17, 19, 28, 31, 32, 42, 45, 50, 83, 95, 96, 120, 125, 132, 134, 137, 140, 142, 144, 146, 148, 150, 153], "replic": 153, "report": [11, 13], "repositori": [9, 30, 45], "repr": 24, "repres": [1, 8, 16, 17, 18, 19, 44, 45, 53, 54, 55, 57, 58, 63, 64, 70, 77, 81, 84, 85, 91, 94, 95, 99, 129, 132, 134, 135, 139, 140, 142, 143, 144, 147, 149, 150, 151, 153, 155, 156], "represent": [0, 24, 44, 45, 53, 54, 77, 94, 125, 139, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "reproduc": [25, 100, 104, 150], "request": [24, 120], "requir": [0, 4, 11, 12, 13, 24, 26, 27, 28, 31, 35, 40, 41, 44, 50, 63, 64, 65, 67, 70, 72, 76, 82, 83, 84, 86, 91, 94, 95, 96, 99, 108, 125, 129, 131, 132, 135, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 163], "required_datatyp": 86, "requis": 148, "resampl": 153, "resarch": 45, "rescu": [28, 31], "research": [45, 49, 142, 143, 148, 149, 151, 152, 155, 162], "resembl": [153, 155], "reserv": [81, 83], "reset": 140, "reset_index": [125, 126, 136, 151], "resghap": 8, "reshap": [0, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 118, 121, 123, 156], "reshiram": 136, "resid": [73, 146], "residplot": 154, "residu": [11, 13, 145], "resiz": [61, 115, 118], "resolut": 115, "resolv": [127, 154], "reson": 153, "resourc": [27, 61, 64, 142, 144, 145, 150, 151, 152, 153], "respect": [45, 52, 59, 64, 70, 85, 86, 87, 95, 126, 128, 132, 133, 141, 142, 143, 144, 151, 152, 153, 154, 155], "respectivv": 151, "respons": [97, 148, 152, 162], "rest": [6, 40, 42, 45, 46, 61, 64, 67, 77, 102, 129, 132, 140, 143, 145, 147, 148, 149, 151, 152, 153, 154, 160], "restart": [28, 40, 73, 140], "restaur": [143, 147, 148, 150], "restor": 74, "restrict": [31, 94, 99, 150], "restructur": 77, "result": [3, 7, 11, 12, 13, 27, 28, 29, 30, 32, 33, 37, 38, 40, 41, 42, 44, 45, 46, 47, 58, 59, 63, 64, 67, 68, 70, 71, 73, 78, 81, 82, 87, 88, 96, 97, 120, 121, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 140, 142, 143, 144, 145, 151, 152, 153, 154, 155], "resurc": 152, "ret": 148, "retriev": [31, 45, 48, 70, 77, 85, 134], "return": [8, 11, 13, 16, 17, 18, 19, 24, 27, 28, 30, 31, 32, 38, 40, 41, 45, 49, 50, 52, 53, 54, 55, 57, 58, 61, 62, 63, 64, 65, 68, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 87, 88, 94, 95, 96, 97, 99, 119, 120, 121, 122, 125, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 147, 148, 150, 153, 154, 155], "reuniclu": 136, "reus": [24, 31, 94, 120], "reusabl": [33, 67, 73, 94, 96], "rev": 115, "rev_str": 28, "reveal": [99, 142, 154, 163], "revenu": 142, "revers": [28, 30, 45, 47, 48, 67, 118, 142], "reverse_list": 67, "reverse_list1": 67, "review": [118, 147, 148], "revis": [150, 151], "revisit": [144, 145], "revolut": 115, "revolution": 0, "reward": [0, 32, 45], "rewrit": [37, 67], "rewritten": 50, "rfind": 45, "rfloor": 88, "rgb": [11, 73, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "rgb_color_gen": 73, "rgba": [142, 144], "rhydon": 136, "rhyhorn": 136, "rhyperior": 136, "rich": [149, 153, 154], "rid": [140, 146, 148, 150], "right": [35, 45, 65, 70, 77, 82, 87, 88, 95, 96, 97, 115, 116, 120, 125, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 155], "rigor": 153, "rindex": 45, "riolu": 136, "risk": [153, 154], "rjust": [45, 87], "rmdir": 73, "rmtree": 62, "roam": 73, "robert": 142, "robot": 0, "robust": [22, 91, 122, 143, 157], "rock": 136, "rocket": [24, 145, 147, 148, 150, 151, 152, 153, 154, 155], "rocket_r": 145, "rodriguez": 139, "roger": 115, "roggenrola": 136, "rohan": 5, "roi": 153, "role": [20, 82, 96, 125, 162], "roll": [123, 134], "romeo_and_juliet": 61, "romero": [125, 126, 137], "ronald": [10, 14], "ronaldo": [40, 41, 115], "room": 4, "root": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 61, 64, 73, 75, 118, 121], "rose": 128, "roselia": 136, "roserad": 136, "rot": 142, "rotat": 142, "rotom": 136, "rotomfan": 136, "rotomfrost": 136, "rotomheat": 136, "rotommow": 136, "rotomwash": 136, "rough": 153, "roughli": [144, 155], "round": [28, 36, 45, 50, 73, 86, 88], "routin": [80, 121, 151, 153], "row": [8, 9, 12, 15, 16, 17, 18, 19, 40, 41, 50, 61, 115, 118, 119, 120, 121, 122, 125, 129, 130, 132, 134, 135, 136, 141, 143, 144, 145, 147, 151, 152, 154, 155, 156, 157], "row1": 131, "row2": 131, "row_color": 157, "row_index": 133, "row_index1": 127, "row_index2": 127, "row_labl": 125, "row_ord": [143, 152, 155], "row_posit": 125, "row_r1": 120, "row_r2": 120, "rpm": 137, "rstrip": 45, "rt": 61, "ru": 64, "rubi": 91, "rufflet": 136, "rug": [141, 146], "rule": [0, 7, 18, 19, 45, 67, 91, 96, 121, 125, 148, 151, 155], "run": [6, 22, 23, 24, 27, 28, 29, 30, 40, 41, 42, 44, 50, 52, 53, 54, 55, 56, 57, 58, 59, 63, 64, 67, 68, 69, 70, 73, 82, 83, 89, 91, 94, 96, 102, 140, 142, 150, 152, 153, 160], "runnabl": 91, "runtim": [63, 64, 73, 96, 139], "runtimeerror": [63, 64], "runtimewarn": 121, "russia": [30, 46, 64], "russian": 61, "rvalu": 141, "s1": [52, 94, 134, 135], "s2": [52, 94, 134, 135], "s3": [134, 135], "s4": 135, "s_car": 96, "sabley": 136, "sableyemega": 136, "sad": 29, "safe": [47, 61, 94, 142, 146], "safer": [61, 62], "sai": [1, 4, 5, 7, 30, 32, 41, 70, 73, 83, 95, 96, 125, 140, 141, 142, 143, 144, 145, 148, 149, 151, 152, 153, 154, 155], "said": [1, 8, 45, 96, 121, 140, 142, 143, 144], "saint": 115, "sake": [126, 139], "salam": 136, "salamencemega": 136, "salari": [65, 94, 96, 115, 129], "salarynotinrangeerror": 65, "sale": 153, "sales_data_of_bathingsoap": 116, "salesdata": 116, "salk": 40, "salmon": 151, "sam": [126, 128, 129, 130, 131, 132, 135], "same": [7, 9, 17, 19, 20, 27, 28, 30, 33, 36, 37, 40, 42, 45, 49, 64, 67, 68, 69, 70, 72, 73, 74, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 101, 105, 116, 118, 119, 120, 121, 122, 125, 128, 129, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155], "sampl": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 25, 27, 61, 74, 84, 94, 96, 100, 104, 119, 122, 139, 144, 145, 147, 148, 149, 150, 153, 154, 155], "sample_1": 149, "sample_2": 149, "sample_3": 149, "sample_cmap": 142, "sample_color": 142, "sample_combo": 149, "sample_melt": [147, 155], "samsung": 70, "samurott": 136, "san": [115, 139], "sandal": [7, 17, 19], "sandil": 136, "sandshrew": 136, "sandslash": 136, "sanitize_sequ": 148, "sapp": 139, "sat": [148, 149, 150, 151], "satisfi": [30, 35, 41, 42, 50, 96, 120], "satur": [142, 149, 150, 151, 153], "save": [24, 27, 28, 73, 80, 91, 115], "savefig": [115, 116], "saw": [24, 95], "sawk": 136, "sawsbuck": 136, "scalabl": 155, "scalar": [26, 121, 122, 125, 126, 150, 151], "scale": [0, 115, 122, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "scale_hu": 150, "scan": [91, 154], "scandic": 46, "scatter": [8, 10, 11, 12, 13, 14, 15, 127, 141, 143, 145, 146, 147, 148, 152, 154, 155, 158], "scatter3d": 11, "scatter_kw": [143, 144, 145, 147, 154], "scatterbug": 136, "scatterplot": [143, 144, 145, 147, 148, 155], "scc": 144, "scenario": [0, 4, 69, 96, 140, 143, 144, 148, 149, 150, 153, 163], "scene": 11, "sceptil": 136, "sceptilemega": 136, "scheme": 142, "school": [23, 44, 126, 150, 151], "scienc": [0, 1, 8, 22, 24, 45, 48, 61, 67, 73, 125, 128, 138, 141, 143, 152, 153, 155, 163], "scientif": [24, 118, 142, 150], "scikit": [40, 118, 154, 162], "scipi": [24, 121, 141, 146, 153, 154], "scizor": 136, "scizormega": 136, "scoliped": 136, "scope": [22, 29, 63, 68, 69, 73, 82, 87, 93, 148, 149, 155], "score": [1, 4, 8, 9, 11, 13, 38, 126, 149, 151], "scorebook": 151, "scorecard": [151, 155], "scott": 150, "scrafti": 136, "scraggi": 136, "scratch": [27, 94, 96], "screen": [45, 52, 80, 87, 143, 152], "script": [24, 64, 73, 88, 91], "scyther": 136, "sd": [122, 151, 153], "seaborn": [144, 145, 146, 151, 152, 153, 154, 155, 156, 157], "seadra": 136, "seagreen": 155, "seak": 136, "sealeo": 136, "search": [31, 45, 48, 76, 89, 96, 137, 152], "season": [38, 67], "second": [7, 27, 28, 30, 39, 40, 45, 46, 47, 50, 53, 54, 56, 57, 58, 59, 63, 64, 68, 70, 73, 78, 83, 87, 88, 95, 96, 99, 120, 128, 129, 132, 134, 137, 140, 148, 149, 150, 151, 153, 155], "second_last": 45, "second_lett": 45, "second_numb": 87, "secondari": 39, "secondli": [143, 153], "secret": 163, "section": [2, 7, 29, 44, 45, 50, 61, 63, 82, 87, 108, 125, 126, 127, 128, 129, 130, 133, 135, 147, 150, 152, 153, 163], "sector": [14, 15], "secur": 94, "sedan": [125, 126, 137], "see": [4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 27, 28, 29, 30, 31, 32, 33, 37, 40, 41, 42, 44, 45, 48, 50, 59, 61, 63, 64, 67, 68, 69, 70, 72, 73, 74, 77, 80, 81, 82, 85, 86, 87, 88, 91, 94, 96, 97, 99, 100, 101, 102, 104, 105, 118, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 139, 140, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 159, 160, 161], "seed": [25, 74, 100, 104, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "seedot": 136, "seek": 61, "seek_set": 61, "seekabl": 61, "seel": 136, "seem": [44, 76, 99, 141, 149, 150, 152, 153, 154, 155], "seen": [29, 31, 61, 83, 99, 125, 126, 134, 135, 145, 146, 147, 148, 149, 154, 155], "segment": [0, 78, 140, 141, 143, 147, 152], "segreg": [140, 147, 150, 151, 153, 155], "seismic": 145, "seismic_r": 145, "seismitoad": 136, "select": [0, 4, 5, 24, 45, 115, 118, 120, 126, 129, 132, 137, 142, 150, 153, 154, 155], "select_difficulti": 76, "select_threshold": 8, "self": [0, 27, 28, 31, 50, 64, 65, 77, 94, 96, 97, 129, 132, 134, 139, 148], "self_mag": 97, "sell": 94, "semi": [24, 96], "send": 153, "sens": [0, 4, 11, 12, 13, 30, 40, 81, 83, 121, 125, 139], "sensibl": 97, "sensit": [42, 81, 83, 88, 142, 153], "sent": 7, "sentenc": [32, 40, 45, 49, 87, 88], "sentinel": 27, "sentret": 136, "sep": [53, 54, 77, 80, 87, 122, 136], "sepal": [9, 10, 14, 115, 139, 147], "sepal_length": [10, 14, 139, 145, 147, 148, 154, 157], "sepal_width": [10, 14, 139, 144, 145, 147, 148, 154, 157], "sepallength": 115, "sepallengthcm": 115, "sepalwidthcm": 115, "separ": [7, 18, 19, 37, 40, 44, 45, 46, 47, 48, 49, 50, 61, 62, 64, 65, 67, 81, 82, 83, 85, 87, 88, 89, 94, 96, 116, 127, 133, 140, 141, 143, 145, 147, 149, 150, 153, 154, 155], "separatelli": 15, "septemb": 38, "seq": 74, "sequenc": [27, 28, 40, 42, 46, 47, 48, 61, 62, 63, 67, 71, 72, 73, 74, 80, 82, 84, 85, 86, 88, 89, 120, 122, 134, 135, 143, 144, 153, 154], "sequencemethod": 82, "sequenti": [0, 134], "serbian": 61, "seren": 139, "seri": [28, 39, 40, 41, 57, 73, 91, 137, 143, 146, 147, 150, 152, 155, 162], "serial": 77, "serif": [151, 153], "serperior": 136, "serv": [3, 9, 10, 17, 19, 65, 77, 101, 105, 152], "server": [1, 8, 153], "servin": 136, "session": 73, "set": [0, 1, 3, 4, 9, 10, 12, 13, 14, 15, 22, 24, 27, 31, 32, 41, 45, 46, 51, 61, 62, 67, 73, 84, 86, 88, 94, 95, 96, 115, 119, 120, 122, 125, 126, 127, 129, 130, 131, 132, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163], "set1": [143, 145, 148, 151, 155], "set1_r": 145, "set2": [145, 149, 150, 151, 154], "set2_r": 145, "set3": [145, 149, 150], "set3_r": 145, "set_": 148, "set_1": 95, "set_axis_label": [152, 155], "set_context": 140, "set_fonts": 151, "set_hatch": 115, "set_index": [125, 133, 151], "set_opt": 125, "set_printopt": 123, "set_styl": [140, 142, 144, 150, 151], "set_temperatur": 31, "set_titl": [116, 152, 155], "set_transform": 148, "set_vis": 154, "set_xlabel": [150, 151, 153], "set_xtick": 151, "set_xticklabel": [150, 152], "set_ylabel": [150, 151, 153], "set_ytick": 151, "setattr": [95, 96], "seterr": 123, "setmaxpric": 94, "setosa": [9, 10, 14, 115, 139, 147, 157], "setstat": 74, "settabl": 44, "setter": 94, "setup": [14, 15, 18, 19], "seven": [40, 73], "sever": [4, 5, 9, 10, 14, 24, 28, 32, 38, 46, 58, 59, 64, 73, 87, 120, 150], "sevip": 136, "sewaddl": 136, "sex": [143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "sex_tim": 150, "sh": 94, "shade": [142, 144], "shadow": 143, "shall": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "shampoo": 116, "shampoosalesdata": 116, "shanghai": 50, "shape": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 94, 118, 119, 120, 121, 122, 125, 129, 139, 143, 147, 150], "sharabl": 94, "share": [9, 17, 19, 73, 95, 99, 125, 141, 142, 148, 153, 155], "sharei": [141, 143, 152, 155], "sharex": [116, 141, 143, 150, 152, 155], "sharpedo": 136, "sharpedomega": 136, "shayminland": 136, "shayminski": 136, "she": [65, 94], "shedinja": 136, "sheet": [117, 124, 125, 138], "sheet_nam": 61, "shelgon": 136, "shell": [28, 29, 30, 59, 80, 83, 143], "shellder": 136, "shello": 136, "shelmet": 136, "shelton": 139, "shieldon": 136, "shift": [24, 37, 40, 41, 42, 82, 88, 97, 154], "shiftri": 136, "shine": [145, 147, 150], "shinx": 136, "shirt": [17, 19], "shoot": 139, "short": [38, 40, 50, 67, 72, 77, 82, 83, 133, 152], "shortcut": 22, "shorten": 64, "shorthand": 115, "shortli": [143, 150, 154], "shot": [139, 151, 153], "should": [4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 28, 29, 30, 32, 33, 36, 37, 40, 44, 48, 50, 61, 62, 64, 67, 73, 77, 82, 83, 87, 91, 95, 99, 102, 115, 116, 120, 121, 125, 126, 129, 130, 133, 134, 135, 141, 142, 143, 144, 148, 149, 153, 155, 160, 162], "shouldn": [148, 153], "show": [4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 27, 41, 42, 45, 53, 54, 58, 68, 70, 71, 72, 73, 84, 91, 94, 95, 97, 101, 102, 105, 115, 125, 126, 128, 131, 132, 133, 135, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 160], "show_config": 123, "showcap": 147, "showflier": [147, 149], "shown": [3, 27, 30, 31, 37, 40, 42, 45, 46, 63, 76, 91, 94, 125, 126, 127, 129, 130, 131, 132, 133, 140, 149, 151, 156], "showroom": 125, "shroomish": 136, "shuckl": 136, "shuffl": [44, 73, 74], "shuffle_list": 73, "shuppet": 136, "shutil": 62, "sibl": 7, "sibsp": [149, 151], "side": [88, 96, 125, 140, 147, 149, 155], "sig": 148, "sight": 27, "sigilyph": 136, "sigma": [8, 74], "sigma_squar": 8, "sigmoid": [5, 7], "sign": [25, 70, 75, 82, 83, 100, 104, 143, 148], "signal": [0, 7, 153], "signatur": 99, "signific": [23, 44, 83, 125, 139, 142, 143], "significantli": [8, 11, 12, 13], "signs_of_mental_il": 139, "silcoon": 136, "silenc": 133, "silverman": 150, "simiar": 85, "similar": [0, 4, 7, 8, 11, 13, 28, 30, 32, 33, 40, 41, 45, 47, 50, 61, 67, 73, 76, 82, 89, 95, 101, 105, 120, 125, 140, 143, 144, 146, 147, 148, 150, 152, 153, 155, 156, 157], "similari": 88, "similarli": [31, 32, 44, 45, 49, 61, 62, 68, 69, 76, 84, 85, 89, 94, 95, 96, 97, 99, 128, 135, 139, 141, 142], "simipour": 136, "simisag": 136, "simisear": 136, "simmon": 142, "simpl": [7, 18, 19, 20, 22, 24, 27, 28, 29, 30, 31, 41, 45, 48, 52, 61, 64, 65, 73, 80, 84, 88, 90, 91, 95, 99, 101, 105, 127, 129, 132, 133, 135, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 162], "simpler": [24, 71, 143, 144, 150, 154], "simplest": [36, 40, 45, 73, 119, 121, 143, 149, 151], "simpli": [27, 28, 30, 31, 41, 45, 67, 76, 82, 88, 89, 95, 96, 121, 129, 152], "simplier": [11, 12, 13, 14, 15, 16, 17, 18, 19], "simplifi": [5, 7, 30, 129], "simul": 97, "simultan": [4, 5, 70, 144, 145, 150, 153], "sin": [11, 12, 13, 14, 15, 16, 17, 73, 75, 118, 121, 140, 153, 155], "sinc": [7, 8, 10, 11, 12, 13, 28, 30, 32, 37, 40, 42, 46, 47, 48, 49, 58, 59, 61, 64, 67, 70, 73, 74, 80, 85, 94, 95, 96, 97, 99, 120, 122, 139, 145, 146, 147], "sine": [73, 75, 118, 140, 153], "sing": [87, 94], "singapor": 47, "singl": [4, 11, 13, 26, 30, 32, 40, 45, 46, 49, 59, 64, 69, 72, 84, 85, 87, 91, 94, 99, 119, 120, 125, 127, 134, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 157], "singular": 121, "sinh": [44, 73, 75], "sinplot": 140, "sinusoid": [4, 11, 12, 13, 14, 15, 16, 17, 155], "sinusoid_degre": [11, 12, 13, 14, 15, 16, 17], "site": [73, 129, 132, 133, 134, 139, 142, 146, 148], "situat": [28, 39, 47, 64, 67, 70, 86, 140], "six": [30, 73, 99, 125, 126, 137, 142], "size": [4, 5, 8, 9, 11, 12, 13, 16, 17, 18, 19, 40, 41, 42, 45, 61, 76, 94, 118, 119, 121, 122, 125, 126, 134, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "size_func": 154, "skarmori": 136, "sketch": [94, 95], "skew": 153, "skiddo": 136, "skill": [0, 38, 40, 48, 61, 83, 94, 96, 115, 153, 154], "skinnier": 150, "skip": [36, 37, 40, 41, 42, 45, 64, 70], "skiploom": 136, "skitti": 136, "sklearn": 154, "skorupi": 136, "skrelp": 136, "skuntank": 136, "sky": 142, "slake": 136, "slakoth": 136, "slash": [45, 62, 150], "sleep": [22, 60, 73, 80], "slice": [49, 82, 85, 120, 125, 154], "slice_a": 120, "slidingtackl": 115, "sliggoo": 136, "slight": [20, 47, 101, 105, 155], "slightli": [59, 81, 139, 148], "slope": [50, 67, 88, 141, 151], "slot": 120, "slow": [121, 129], "slowbro": 136, "slowbromega": 136, "slower": 91, "slowk": 136, "slowli": [147, 148, 149, 153], "slowpok": 136, "slugma": 136, "slurpuff": 136, "small": [7, 11, 12, 13, 20, 42, 50, 65, 73, 78, 91, 101, 105, 143, 145, 147, 151, 153, 154, 155], "smaller": [38, 39, 67, 86, 118, 121, 128, 145, 147, 154], "smallest": [49, 75], "smallpox": 40, "smart": 83, "smart_divid": 30, "smeargl": 136, "smfyb": 73, "smim": 126, "smith": 126, "smoke": [153, 155], "smoker": [143, 146, 147, 148, 149, 150, 151, 152, 153, 155], "smoochum": 136, "smoot": 153, "smooth": [150, 153], "smoother": 143, "smoothli": 70, "sn": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "snake": 83, "snake_cas": 83, "sname": 132, "sneak": 139, "sneaker": [17, 19], "sneasel": 136, "snivi": 136, "snorlax": 136, "snorunt": 136, "snover": 136, "snow": 5, "snubbul": 136, "so": [1, 3, 6, 7, 14, 15, 17, 18, 19, 22, 27, 28, 29, 30, 31, 37, 38, 39, 40, 41, 42, 45, 46, 47, 49, 61, 63, 64, 67, 68, 70, 72, 73, 74, 78, 81, 82, 83, 84, 86, 88, 89, 91, 94, 95, 96, 97, 99, 102, 115, 118, 120, 121, 125, 126, 129, 131, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160], "soar": 152, "soccer": [115, 155], "social": [1, 8], "socket": 24, "sofifa": 115, "softwar": [22, 24, 38, 143], "sold": 116, "sole": [141, 142, 153], "solid": 140, "solosi": 136, "solrock": 136, "solut": [0, 29, 31, 33, 63, 67, 69, 86, 116, 121, 137, 150, 153, 155], "solv": [50, 69, 94, 127, 142, 143, 163], "solve_quadratic_eqn": 67, "some": [1, 5, 7, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 35, 38, 40, 41, 44, 45, 46, 47, 48, 49, 50, 61, 63, 64, 67, 69, 71, 73, 77, 80, 83, 85, 87, 88, 91, 94, 96, 99, 100, 101, 103, 104, 105, 106, 120, 121, 122, 125, 126, 129, 131, 132, 133, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 153, 154, 155, 159, 161, 163], "somedai": 153, "somehow": [143, 151], "someon": [78, 153], "someth": [17, 18, 19, 27, 28, 32, 37, 52, 53, 54, 55, 56, 57, 58, 59, 64, 65, 71, 73, 82, 87, 125, 139, 140, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155], "sometim": [40, 42, 45, 64, 65, 67, 70, 71, 80, 87, 94, 119, 125, 132, 133, 140, 148, 150, 154], "somewher": [42, 46, 142, 149], "song": [76, 94], "soon": [40, 63, 94, 95, 143, 145], "sort": [30, 40, 49, 73, 135, 147, 148, 150, 155], "sort_valu": [125, 136, 137, 150, 151, 155], "sorted_point": 32, "sought": 0, "sound": [141, 151], "soup": 84, "sourc": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 77, 80, 82, 87, 91, 118, 120, 122, 125, 130, 133, 136, 137, 139, 162], "south": 115, "southampton": [149, 151], "sp": [133, 136], "space": [26, 32, 35, 38, 40, 42, 45, 63, 67, 70, 77, 80, 82, 87, 108, 118, 122, 125, 142, 144, 146, 150, 153, 155], "spain": 115, "spam": [4, 5, 14, 15, 16, 17], "span": [101, 105, 147, 155], "spanish": 61, "spatial": [151, 153], "speak": [27, 28, 99, 151, 155], "speaker": 140, "spearow": 136, "speci": [9, 10, 14, 94, 95, 115, 139, 142, 145, 147, 148, 154, 157], "special": [4, 12, 27, 30, 33, 81, 82, 83, 95, 99, 101, 105, 125, 139, 140, 152, 154, 155], "specialattribut": 82, "specialidentifi": 82, "specialmethod": 82, "specif": [0, 4, 7, 11, 13, 16, 17, 18, 19, 33, 40, 41, 45, 61, 67, 73, 77, 78, 86, 87, 91, 94, 96, 101, 105, 116, 120, 125, 129, 132, 134, 135, 136, 137, 140, 141, 142, 143, 144, 148, 149, 150, 152, 153, 154, 155, 156], "specifi": [0, 30, 31, 40, 42, 45, 59, 61, 62, 64, 72, 74, 82, 83, 84, 96, 97, 115, 118, 119, 120, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 142, 144, 145, 153, 155], "spectral": 145, "spectral_r": 145, "speech": 61, "speech_barack_obama": 61, "speech_donald_trump": 61, "speech_melina_trump": 61, "speech_michelle_obama": 61, "speed": [96, 125, 136, 155], "speed_of_light": 83, "spewpa": 136, "spheal": 136, "sphere": 24, "sphinx": [20, 77, 101, 105], "spike": 153, "spinarak": 136, "spinda": 136, "spine": [140, 144, 149, 150], "spirit": 153, "spiritomb": 136, "split": [3, 9, 10, 15, 24, 30, 40, 45, 49, 87, 118, 125, 133, 140, 147, 148, 150, 154], "split_string_decor": 30, "splitlin": 61, "splitted_str": 30, "spoink": 136, "spoke": 140, "spoken": [30, 61, 67], "sport": 96, "sports_car_info": 96, "sportscar": 96, "spread": [143, 149, 150, 153, 155], "spreadsheet": [61, 125], "spring": [38, 67, 99, 145, 149, 151], "spring_r": 145, "sprintf": [45, 87], "spritze": 136, "spyder": 140, "sqaur": [16, 17, 18, 19], "sql": [46, 125, 133], "sqr": 72, "sqrt": [16, 17, 18, 19, 73, 75, 118, 121, 123], "squar": [3, 4, 16, 17, 18, 19, 28, 29, 30, 36, 40, 41, 42, 45, 46, 47, 48, 50, 72, 73, 75, 77, 94, 99, 118, 119, 121, 141, 144, 145, 154, 155, 156], "square_numb": [67, 70], "squeez": 46, "squirtl": 136, "sr": 132, "st": 48, "stabil": 152, "stack": [46, 71, 72, 121, 122, 123, 126, 139, 151, 152, 153, 155], "stackexchang": 5, "stackplot": 116, "stage": [141, 153], "stai": [126, 129, 141], "stakehold": 154, "stamp": [153, 154], "stan": 30, "stand": [20, 30, 61, 101, 105, 149], "standard": [24, 64, 65, 67, 73, 75, 77, 83, 87, 94, 118, 119, 122, 125, 128, 135, 141, 142, 143, 149, 151, 157], "standard_scal": 157, "standingtackl": 115, "stantler": 136, "star": [30, 40, 90], "staraptor": 136, "starat": 136, "staravia": 136, "starli": 136, "starmi": 136, "start": [0, 6, 7, 20, 22, 27, 28, 30, 35, 36, 40, 41, 45, 46, 47, 59, 61, 64, 67, 74, 76, 81, 82, 83, 85, 89, 101, 102, 105, 108, 118, 120, 122, 125, 126, 127, 128, 129, 131, 132, 134, 136, 140, 141, 142, 143, 147, 148, 149, 150, 151, 153, 155, 160, 163], "start_index": 24, "startindex": 120, "startswith": 45, "staryu": 136, "stat": [122, 139, 141, 144, 146, 150, 151, 153, 154], "stat_meth": 99, "state": [0, 25, 28, 61, 74, 89, 94, 100, 104, 115, 119, 139, 144, 148, 149], "statement": [22, 28, 43, 46, 48, 52, 59, 61, 63, 65, 72, 80, 87, 88, 91, 93, 94, 95, 120, 155], "static": [87, 99], "staticmethod": 99, "statist": [1, 4, 8, 12, 38, 44, 94, 137, 139, 141, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 158, 162, 163], "statistician": 154, "statsmodel": [145, 150], "statu": [46, 139], "std": [94, 95, 118, 122, 123, 125, 139, 144, 146, 151, 155], "std1": 95, "std2": 95, "std3": 95, "stderr": 141, "stdev": 73, "stdout": [77, 87], "steadi": 147, "steel": [136, 139], "steelix": 136, "steelixmega": 136, "step": [0, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 30, 40, 45, 46, 47, 61, 71, 74, 87, 89, 95, 118, 122, 125, 135, 154], "step3": 87, "step_siz": 40, "stephen": 154, "stepsiz": 120, "stetement": 38, "stick": [150, 151, 153], "still": [29, 45, 77, 82, 94, 95, 99, 126, 128, 129, 132, 135, 140, 141, 143, 151, 152, 153, 154], "sting": 61, "stochast": 153, "stock": [145, 150, 151], "stockprice_data": 125, "stoke": 155, "stop": [32, 40, 41, 42, 45, 46, 47, 61, 64, 67, 71, 74, 83, 118, 122, 125, 135, 153], "stopiter": [27, 28, 42, 63], "storag": 94, "store": [24, 27, 28, 29, 31, 40, 42, 44, 45, 46, 53, 57, 61, 64, 65, 69, 76, 83, 86, 87, 88, 89, 91, 94, 96, 121, 125, 126, 127, 133, 140, 145, 153], "store_and_fwd_flag": 153, "stori": 152, "stoutland": 136, "str": [10, 15, 24, 32, 42, 45, 46, 54, 61, 63, 67, 77, 85, 86, 87, 95, 96, 97, 115, 132, 136, 150, 151], "str1": 45, "str2": 45, "str3": 45, "str4": 45, "straight": [4, 63, 85, 144, 156], "straightforward": 142, "strat": 45, "strategi": 125, "strawberri": [84, 95], "stream": [61, 77], "street": [38, 40], "strength": 7, "stress": [95, 143], "strftime": [22, 54, 55, 56, 57, 59, 60], "strictli": 141, "stride_trick": 123, "string": [22, 27, 28, 29, 30, 31, 36, 42, 44, 47, 49, 51, 55, 56, 57, 58, 61, 62, 63, 64, 67, 72, 80, 82, 83, 86, 88, 94, 95, 97, 125, 126, 132, 134, 142, 143, 155], "string1": 45, "string2": 45, "stringifi": 61, "stringmethod": 82, "strip": [45, 115, 132, 139, 142, 147, 149, 152, 153, 158], "strip_data": 148, "stripplot": [139, 142, 147, 148, 149, 153], "strive": 121, "strlist": 150, "stroke": 137, "stronger": 144, "strptime": [22, 53, 60], "structur": [0, 9, 17, 19, 20, 24, 30, 35, 40, 46, 61, 63, 76, 77, 81, 94, 101, 105, 115, 116, 125, 126, 127, 133, 134, 135, 136, 137, 139, 147, 155, 162], "struggl": 148, "stuck": 150, "stud": 94, "stud1": 126, "stud2": 126, "stud3": 126, "stud_ag": 132, "stud_mark": 132, "stud_nam": 132, "student": [38, 40, 46, 48, 87, 94, 95, 125, 126, 128, 129, 133, 134, 135, 147, 148, 151, 155], "student_count": 95, "student_data": 133, "student_df": [125, 126, 128, 129, 130, 131, 132, 134, 135], "student_dict": [125, 126, 128, 129, 130, 131, 132, 134, 135], "student_id": 151, "student_nam": 40, "studentdf": 133, "studentdict": 133, "students_enrol": 150, "studentstud": 95, "studi": [23, 26, 28, 80, 94, 122, 144, 153, 155, 156, 162, 163], "studnet": 95, "stuff": 96, "stunfisk": 136, "stunki": 136, "style": [82, 83, 87, 115, 122, 125, 126, 129, 132, 136, 137, 140, 141, 142, 143, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "sub": [29, 47, 62, 67, 71, 76, 77, 118, 151, 153, 155], "subarrai": 120, "subcategori": 151, "subclass": [64, 77, 96], "subdirectori": [62, 76], "subdivid": 153, "subgroup": 32, "subject": [141, 153], "subplot": [8, 10, 16, 17, 18, 19, 25, 100, 104, 140, 141, 150, 152, 154, 155], "subplot_kw": 155, "subplots_adjust": [16, 17, 18, 19], "subscript": [82, 85], "subsequ": [0, 27, 46], "subset": [0, 11, 16, 17, 18, 19, 49, 59, 125, 130, 131, 143, 154, 155, 162], "substitut": [32, 96], "substr": [32, 45], "substract": [88, 118], "subtract": [26, 44, 67, 83, 88, 97, 118, 121], "success": [0, 28, 32, 153], "successful": [14, 15, 24], "successfulli": [31, 64, 148, 150], "sudden": 64, "sudowoodo": 136, "sugar": 30, "suggest": [52, 63, 143, 149, 155], "suicun": 136, "suit": [91, 94, 125, 142, 147, 148, 153], "suitabl": [28, 45, 143, 151], "sum": [3, 7, 14, 15, 16, 17, 18, 19, 28, 29, 33, 40, 41, 44, 46, 49, 52, 67, 70, 73, 75, 77, 78, 82, 86, 94, 97, 116, 118, 121, 122, 136, 137, 146, 149, 151], "sum1": 87, "sum_al": 64, "sum_all_num": 70, "sum_all_numb": 67, "sum_numb": 29, "sum_of_even": 67, "sum_of_five_num": 64, "sum_of_kd": 146, "sum_of_numb": 67, "sum_of_odd": 67, "sum_two_numb": 67, "summar": [29, 77, 126, 139, 148], "summari": [77, 115, 149, 150, 151, 154], "summat": [29, 121], "summer": [38, 67, 145], "summer_r": 145, "sun": [32, 53, 54, 143, 146, 148, 149, 150, 151, 155], "sundai": [53, 54], "sunflora": 136, "sunkern": 136, "sunni": 5, "sunroof": 95, "super": [65, 94, 99, 122, 129, 132, 155], "superclass": 96, "superhead": 155, "superior": 0, "supervis": [7, 18, 19, 162, 163], "suppli": [62, 64, 132], "support": [6, 15, 24, 40, 42, 44, 46, 47, 49, 61, 67, 75, 83, 84, 85, 91, 94, 96, 102, 121, 142, 143, 146, 151, 153, 155, 160], "support_word": 61, "suppos": [28, 31, 33, 35, 42, 50, 52, 73, 76, 77, 94, 97, 99, 121, 126, 127, 131, 132, 133, 134, 135, 153], "suppport": [10, 14], "supress": 129, "suptitl": [146, 150, 155], "sure": [4, 24, 25, 32, 33, 64, 69, 100, 104, 118, 140, 143, 147, 149, 150, 151, 153], "surfac": 67, "surfaceaxi": 11, "surnam": [70, 77, 128, 135], "surround": [0, 28, 82, 84], "surskit": 136, "survei": 142, "surviv": [149, 151], "suryansh": [4, 5], "suspect": 149, "suspend": [58, 59], "suspens": 59, "suspicion": 8, "svd": [26, 123], "sw": 64, "swablu": 136, "swadloon": 136, "swahili": 61, "swalot": 136, "swampert": 136, "swampertmega": 136, "swanna": 136, "swap": [45, 67], "swapcas": 45, "swapfil": 62, "swarm": [139, 149, 152], "swarmplot": [139, 142, 147, 148, 149], "sweden": [11, 13, 46, 64], "sweet": 42, "swellow": 136, "swim": [94, 96], "swinub": 136, "swirlix": 136, "switch": [140, 144, 153], "switzerland": [11, 13, 144], "swoobat": 136, "sx": 45, "sy": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 52, 62, 63, 64, 76, 77, 87], "syantax": 46, "sylveon": 136, "symbol": [30, 32, 33, 45, 73, 77, 81, 82, 83, 88, 97], "symmetr": 40, "symmetri": 7, "symmetric_differ": 49, "symmetric_difference_upd": 49, "synaps": 7, "sync": 118, "syntact": [30, 67, 80], "syntax": [20, 22, 28, 30, 31, 32, 45, 46, 47, 48, 49, 62, 64, 67, 72, 77, 81, 86, 87, 91, 94, 95, 96, 101, 105, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 140, 152, 153, 155], "syntaxerror": [45, 63, 70, 81, 83], "syntaxwarn": 88, "synthet": 155, "system": [7, 18, 19, 24, 27, 42, 44, 58, 61, 62, 63, 73, 82, 97, 162], "systemerror": 63, "systemexit": 63, "t": [7, 10, 11, 17, 18, 19, 25, 31, 38, 40, 41, 42, 45, 46, 47, 48, 49, 50, 52, 54, 56, 58, 61, 64, 67, 69, 73, 76, 80, 83, 84, 85, 86, 87, 91, 94, 95, 96, 97, 99, 100, 104, 118, 121, 122, 123, 125, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "t1": [47, 52, 56, 58, 59], "t10": 142, "t2": [47, 52, 56, 59], "t3": [47, 52, 56], "t4": [47, 52], "t5": 52, "t6": 52, "tab": [35, 45, 63, 82, 84, 142], "tab10": 145, "tab10_r": 145, "tab20": 145, "tab20_r": 145, "tab20b": 145, "tab20b_r": 145, "tab20c": 145, "tab20c_r": 145, "taberror": 63, "tabl": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 40, 42, 44, 53, 54, 73, 88, 97, 125, 126, 133, 147, 156], "table_nam": 125, "tableau": [142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "tableau_20": [144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "tabul": [46, 48, 97], "tabular": [61, 125, 134, 135], "tackl": [0, 143], "tag": [5, 24, 61], "tail": [7, 125, 136, 137, 153], "taillow": 136, "take": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 32, 33, 36, 40, 41, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 64, 67, 68, 69, 70, 71, 72, 73, 77, 82, 83, 87, 91, 94, 95, 96, 99, 121, 125, 126, 128, 129, 130, 131, 132, 134, 135, 139, 140, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 154, 155, 156], "taken": [61, 152, 153], "talk": [58, 59, 140, 145, 149, 155], "talli": 155, "talonflam": 136, "tamper": [45, 50, 83, 94], "tan": [73, 75], "tangela": 136, "tangent": [73, 75], "tangrowth": 136, "tanh": [73, 75], "tap": 154, "tar": 73, "target": [0, 5, 14, 15, 16, 17, 59, 91, 133, 142], "taser": 139, "task": [0, 7, 18, 19, 24, 30, 40, 41, 46, 48, 49, 55, 58, 59, 64, 67, 71, 73, 78, 80, 87, 88, 91, 97, 142, 152, 153, 162], "tau": 73, "tauro": 136, "taxi": 153, "tchapter": 45, "tchp": 45, "tdatatyp": 45, "te": 32, "tea": 32, "teach": [0, 30, 32, 45, 49, 123], "teacher": [32, 45, 49, 61], "teal": 142, "team": [70, 115, 153, 155], "tech": 163, "technic": [27, 99], "techniqu": [0, 7, 18, 19, 29, 73, 147, 148, 153, 154, 162, 163], "technologi": 0, "teddiursa": 136, "tell": [36, 37, 42, 61, 64, 80, 87, 120, 141], "temp": [67, 83], "temp_convert": 64, "temperatur": [31, 67], "tempor": 153, "temporari": [96, 150], "temporarili": 140, "ten": [29, 30, 40, 61, 67, 116], "tend": 96, "tendenc": [94, 139, 143, 147, 149, 150, 151], "tensor": 26, "tensordot": 123, "tensorflow": [7, 118, 162], "tentacool": 136, "tentacruel": 136, "tepig": 136, "terabyt": 155, "term": [4, 5, 28, 30, 71, 78, 140, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 155], "termin": [27, 28, 40, 41, 42, 63, 64, 80, 118], "terrain": 145, "terrain_r": 145, "terrakion": 136, "territori": 144, "ters": 83, "test": [12, 14, 15, 24, 32, 36, 37, 41, 42, 61, 62, 63, 64, 69, 73, 80, 88, 95, 136, 151, 153], "test1": 73, "test_1": [61, 62], "test_2": [61, 62], "test_cost": [11, 13], "test_data": [11, 13, 16, 17, 18, 19], "test_express": 41, "test_modul": 73, "test_precis": [16, 17, 18, 19], "test_predict": [11, 13], "test_predictions_t": [11, 13], "test_str": 32, "tester": 32, "testfil": [62, 64], "tex": [25, 100, 104], "text": [6, 20, 21, 32, 37, 45, 61, 67, 77, 88, 101, 102, 103, 105, 106, 125, 144, 146, 150, 151, 153, 155, 159, 160, 161, 162], "text_1": 61, "textcoord": 151, "textiobas": 61, "textiowrapp": 61, "textual": [45, 55], "textwrap": 45, "th": [1, 4, 5, 12, 32, 45], "tha": 32, "thailand": 47, "than": [4, 8, 10, 11, 16, 17, 18, 19, 22, 24, 28, 29, 32, 33, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 50, 52, 53, 59, 65, 71, 72, 73, 75, 83, 84, 85, 87, 88, 89, 91, 95, 96, 97, 99, 118, 120, 121, 125, 126, 128, 132, 134, 135, 140, 142, 145, 147, 149, 150, 151, 152, 153, 155], "thank": [87, 143], "that_particular_class": 151, "that_particular_class_men": 151, "thei": [0, 7, 8, 11, 13, 18, 19, 27, 28, 30, 31, 35, 37, 39, 42, 44, 45, 46, 47, 48, 49, 61, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 87, 88, 89, 91, 94, 95, 99, 101, 105, 119, 121, 125, 130, 134, 139, 140, 142, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155], "theirs": [13, 28, 38], "them": [8, 14, 15, 16, 17, 18, 19, 24, 27, 29, 44, 45, 46, 47, 48, 49, 59, 61, 62, 63, 64, 65, 67, 68, 70, 71, 72, 75, 83, 87, 88, 89, 94, 95, 96, 97, 108, 122, 125, 127, 139, 140, 142, 144, 145, 147, 148, 150, 153, 155, 156, 163], "theme": [140, 142], "themselv": [32, 162], "theorem": 0, "theoret": 27, "theori": [28, 149, 152], "therefor": [31, 32, 45, 91, 94], "thermodynam": 31, "theta": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19], "theta_index": 15, "theta_t": [11, 12, 13], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 108, 115, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 163], "thick": [140, 150, 151], "thicken": 140, "thin": 150, "thing": [6, 24, 28, 30, 35, 40, 42, 45, 50, 62, 73, 82, 89, 95, 96, 99, 102, 119, 122, 125, 141, 142, 143, 149, 155, 160, 163], "think": [57, 83, 94, 95, 119, 140, 143, 149, 151, 152], "third": [24, 45, 52, 73, 76, 85, 87, 96, 115, 122, 125, 128, 143, 149, 151], "thirti": 45, "this_is_a_long_vari": 81, "thise": 148, "those": [24, 35, 59, 68, 72, 73, 74, 78, 89, 94, 95, 101, 105, 123, 140, 142, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155], "though": [18, 19, 45, 64, 68, 77, 96, 121, 125, 126, 130, 139, 140, 141, 142, 148, 150, 151, 152, 153, 154, 155], "thought": [35, 142, 148, 149, 150, 151], "thousand": 31, "thread": [58, 59, 73], "threat": 139, "threat_level": 139, "threaten": 139, "three": [3, 7, 9, 10, 14, 15, 18, 19, 31, 32, 33, 35, 40, 41, 45, 46, 47, 50, 52, 61, 69, 70, 83, 86, 87, 89, 95, 96, 99, 125, 128, 131, 132, 133, 139, 143, 147, 148, 149, 153, 154, 155, 156], "thresh": [125, 131], "threshold": [1, 7], "thrice": 149, "throh": 136, "through": [0, 8, 16, 17, 18, 19, 28, 40, 41, 42, 44, 50, 64, 70, 71, 80, 97, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 155, 156, 162, 163], "throughout": [82, 141, 143, 147, 154], "throughput": [8, 9], "throughput_from": 8, "throughput_grid": 8, "throughput_rang": 8, "throughput_to": 8, "throw": [24, 64, 68, 91, 126, 128, 129, 132, 134], "thu": [10, 31, 40, 41, 45, 58, 64, 82, 91, 94, 99, 142, 143, 144, 149, 150, 151, 153, 154, 155, 156], "thumb": [148, 151], "thundurusincarn": 136, "thundurustherian": 136, "thur": [148, 151], "thursdai": 149, "ti": [61, 143], "tick": [140, 145, 146, 152, 154, 155], "tick_param": [16, 17, 18, 19], "ticket": 151, "ticklabel_format": 150, "tickmark": 115, "tidi": [143, 147, 148, 152], "tight": 163, "tightli": 144, "tile": 121, "till": [40, 41, 42, 61, 85, 126, 129, 132, 135, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155], "tim": 139, "timburr": 136, "time": [0, 5, 7, 24, 27, 28, 30, 35, 39, 40, 41, 42, 44, 45, 47, 54, 68, 71, 72, 73, 81, 82, 83, 89, 91, 95, 96, 97, 99, 115, 121, 125, 129, 130, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 162, 163], "time_left_for_newyear": 56, "time_str": 58, "timedelta": 56, "timedelta64": 123, "timepoint": 153, "times3": 29, "times5": 29, "timeseri": 158, "timestamp": [22, 60], "timplay": 24, "ting": 32, "tini": 150, "tip": [32, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 155], "tire": 147, "tirtouga": 136, "titan": [139, 141, 149, 153, 155], "titl": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 45, 115, 116, 143, 146, 155, 156], "tivat": 32, "tk": 24, "tkinter": 73, "tlc": 153, "tm_hour": 58, "tm_isdst": 58, "tm_mdai": 58, "tm_min": 58, "tm_mon": 58, "tm_sec": 58, "tm_wdai": 58, "tm_ydai": 58, "tm_year": 58, "tmp": 62, "to_csv": [125, 136, 137], "to_dict": 125, "to_excel": [125, 136], "to_fahreheit": 31, "to_fahrenheit": 31, "to_json": 125, "to_sql": 125, "todai": [0, 56, 57, 141, 144, 148, 149, 150, 151, 152, 153, 154], "togekiss": 136, "togepi": 136, "toget": 136, "togeth": [7, 8, 18, 19, 28, 45, 83, 91, 97, 121, 144, 147, 149, 153], "toi": 139, "told": [42, 144], "tolist": [115, 116, 150], "tomato": [64, 67, 88], "ton": [45, 73], "too": [4, 5, 30, 63, 65, 88, 89, 148], "took": 30, "tool": [32, 77, 101, 105, 115, 116, 118, 125, 136, 137, 144, 153, 154, 155, 162, 163], "toolkit": 24, "tooth": 116, "toothpastesalesdata": 116, "top": [6, 8, 16, 17, 18, 19, 83, 102, 118, 120, 121, 125, 140, 142, 143, 144, 149, 150, 151, 153, 155, 160], "topbar": 151, "topic": [45, 70, 116, 137, 141, 142, 145, 147, 149, 150, 151, 153, 154, 155, 163], "toprow": 128, "torchic": 136, "torkoal": 136, "tornadusincarn": 136, "tornadustherian": 136, "torterra": 136, "total": [7, 10, 14, 40, 41, 44, 52, 67, 70, 72, 83, 85, 95, 97, 119, 125, 136, 143, 144, 147, 148, 149, 150, 151, 152, 153, 155], "total_bil": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "total_expens": 94, "total_incom": 94, "total_profit": 116, "total_second": 52, "total_stud": 150, "total_women_per_class": 151, "totodil": 136, "touch": [122, 144, 155, 163], "toward": 163, "town": [149, 151], "toxicroak": 136, "toyotadf": 137, "tp": 1, "tpython": 45, "trace": [121, 143, 153], "traceback": [27, 28, 29, 30, 31, 33, 41, 45, 46, 47, 48, 49, 54, 59, 61, 63, 64, 65, 68, 69, 70, 71, 73, 82, 84, 85, 86, 87, 88, 94, 95, 96, 97, 99, 120, 129, 132, 134, 148, 153], "track": [28, 149, 151, 153], "tradit": [0, 108], "trail": [44, 45, 47], "train": [0, 1, 3, 4, 7, 9, 108], "train_cost": [11, 13], "train_data": [11, 13, 16, 17, 18, 19], "train_precis": [16, 17, 18, 19], "traingin": 12, "trainint": [12, 13], "tranform": 45, "tranquil": 136, "transact": [5, 14, 15, 16, 17], "transax": 154, "transcript": 61, "transfer": [28, 40, 41, 42, 162], "transform": [7, 26, 91, 142, 162], "translat": [63, 91, 95, 142], "transluc": 153, "transmit": 7, "transpar": [142, 144, 148], "transpos": [26, 50, 118, 121, 126, 127, 133, 147], "transposed_row": 50, "trapinch": 136, "travel": [7, 87, 151], "travers": [7, 40], "treat": [6, 29, 32, 63, 68, 69, 94, 102, 121, 160], "tree": [0, 10, 14, 61], "treecko": 136, "trekhleb": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "trelli": [154, 155], "trend": [143, 147, 149, 153], "treven": 136, "tri": [30, 63, 87, 94, 97, 119, 132, 141, 144, 149, 150, 153], "trial": 0, "triangl": [40, 88, 96, 154], "triangular": 74, "trick": [118, 120, 141, 148], "tricki": 47, "trigger": 42, "trignometr": 153, "trigonometri": 44, "trip": 153, "trip_dur": 153, "tripl": [45, 67, 77, 82, 84, 85], "triu_indices_from": 154, "tropiu": 136, "trouser": [17, 19], "trubbish": 136, "truck": [7, 96], "truck_info": 96, "true": [1, 12, 16, 17, 18, 19, 27, 28, 30, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 49, 59, 61, 63, 65, 67, 72, 73, 75, 81, 82, 83, 84, 85, 87, 88, 95, 96, 97, 115, 116, 119, 120, 122, 125, 129, 130, 131, 132, 134, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "true_divid": 121, "trump": 61, "trunc": [73, 75, 123], "truncat": [44, 61, 75, 85, 86, 88, 143], "trust": [11, 13], "trustworthi": 153, "truth": 88, "truthvalu": 82, "try": [0, 4, 8, 10, 14, 15, 17, 18, 19, 27, 29, 32, 36, 37, 38, 42, 45, 46, 47, 48, 50, 52, 61, 63, 65, 67, 68, 70, 81, 82, 83, 85, 86, 88, 89, 94, 95, 97, 99, 121, 126, 129, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "tryton": 24, "tsplot": 153, "tsv": 125, "tt": 54, "ttopic": 45, "tue": 53, "tuft": 154, "tukei": 153, "tumor": [5, 14, 15, 16, 17], "tune": [129, 153, 163], "tupl": [22, 24, 27, 28, 29, 30, 32, 33, 45, 49, 50, 51, 58, 61, 67, 70, 73, 82, 84, 86, 87, 88, 95, 96, 118, 119, 122, 126, 127, 137, 142, 144], "tuple1": 85, "tuple_1": 95, "tupleliter": 82, "tuppl": 119, "turn": [27, 44, 61, 64, 88, 91, 97, 147, 149, 150, 153, 154, 155], "turtwig": 136, "tutori": [22, 27, 30, 37, 45, 61, 83, 89, 96, 97, 118, 137, 141, 153], "tweak": [140, 142, 147, 152, 155], "twelv": 32, "twice": 96, "twilight": 142, "two": [6, 8, 10, 14, 15, 24, 27, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 46, 47, 48, 49, 50, 54, 59, 61, 63, 64, 65, 68, 70, 71, 73, 76, 77, 78, 82, 83, 84, 85, 86, 87, 88, 94, 95, 96, 97, 99, 101, 102, 105, 119, 120, 121, 125, 127, 128, 129, 132, 133, 135, 139, 140, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 160], "two_power_of_f": 50, "tworld": 80, "txt": [32, 62, 63, 64, 122, 136], "ty": 45, "tympol": 136, "tynamo": 136, "typ": 48, "type": [4, 5, 7, 10, 14, 17, 19, 24, 27, 29, 32, 33, 35, 40, 41, 42, 45, 49, 50, 52, 54, 56, 57, 63, 64, 68, 70, 71, 73, 80, 81, 82, 83, 88, 89, 91, 93, 94, 97, 99, 115, 118, 120, 121, 122, 125, 132, 133, 136, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "type1": 136, "typecast": 86, "typeerror": [33, 45, 46, 48, 49, 64, 70, 73, 85, 86, 97], "typeobject": 82, "typhlos": 136, "typic": [7, 42, 97, 121, 125, 150, 153], "typo": 63, "tyranitar": 136, "tyranitarmega": 136, "tyrantrum": 136, "tyrogu": 136, "tyrunt": 136, "tz_london": [52, 56], "tz_ny": [52, 56], "tzinfo": 52, "tzname": 54, "u": [0, 14, 15, 27, 29, 30, 31, 32, 33, 35, 37, 38, 40, 41, 42, 44, 45, 46, 47, 48, 49, 52, 53, 54, 61, 62, 63, 64, 67, 70, 73, 78, 80, 84, 87, 89, 91, 94, 95, 96, 97, 99, 115, 116, 121, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "u00dc": 84, "u00dcnic": 84, "u00f6": 84, "u00f6d": 84, "ubgxofi7uxswaykn": 73, "uci": 9, "ui": 24, "uk": 52, "ukool": 45, "ular": 32, "ultim": 152, "umbreon": 136, "umpteen": 148, "unari": [82, 88], "unarm": 139, "unauthor": 94, "unavail": 155, "unawar": 153, "unbound": 136, "unboundlocalerror": [63, 68, 69], "uncertainti": 153, "unchang": [49, 84], "unchart": 144, "unclear": 125, "uncom": 49, "uncommon": 149, "und": 32, "undefin": 95, "under": [0, 40, 42, 44, 52, 63, 75, 78, 85, 115, 135, 149, 150, 153, 154], "underli": [61, 75, 89, 91, 118, 125, 132, 142, 144, 147, 148, 150, 151, 152, 153, 155, 156], "undermin": 154, "underscor": [0, 31, 73, 81, 83, 94, 95, 96, 97], "understand": [0, 6, 11, 12, 13, 14, 15, 16, 17, 22, 23, 26, 29, 30, 32, 35, 40, 41, 42, 44, 50, 77, 78, 82, 89, 91, 94, 99, 102, 108, 115, 116, 125, 126, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 160, 162, 163], "understood": 91, "undetermin": 139, "undoubtedli": 140, "unexpect": [42, 64], "unfamiliar": 142, "unfez": 136, "unhandl": 63, "unhash": 49, "unicod": [32, 45, 63, 82, 83, 85], "unicodedecodeerror": 63, "unicodeencodeerror": 63, "unicodeerror": 63, "unicodetranslateerror": 63, "unifi": 84, "uniform": [45, 73, 74, 119, 122, 123, 153, 154], "uniform_data": 156, "unifrom": [16, 17], "unind": [36, 82], "unint": 116, "union": [40, 85], "uniqu": [40, 48, 49, 67, 73, 74, 85, 89, 99, 125, 127, 134, 153, 157], "unique_label": [14, 15, 16, 17], "unit": [18, 19, 61, 115, 116, 139, 143, 144, 150, 151, 152, 153, 155], "univari": [2, 4, 146, 148, 149, 152, 154, 155], "univers": [0, 7, 87, 150, 151], "university_nam": 150, "unix": [52, 57, 58], "unknowingli": 95, "unknown": [4, 10, 11, 12, 13, 16, 17, 18, 19, 38, 63, 129, 132, 134, 139, 149, 153], "unknowncol": 132, "unlabel": 0, "unless": [32, 39, 67, 82, 140, 143, 153], "unlik": [28, 46, 47, 61, 95, 119, 121, 125, 128, 143, 153], "unlimit": 64, "unnam": [115, 137, 152], "unnecessari": 31, "unobserv": 152, "unord": [40, 48, 49, 85, 125], "unorderd": 49, "unown": 136, "unpack": [45, 46, 47], "unpackbit": 123, "unpacking_person_info": 64, "unpickl": 77, "unravel": 0, "unravel_index": 123, "unreferenc": [61, 95], "unruffl": 150, "unsuccess": 32, "unsuervis": 10, "unsupervis": [10, 162, 163], "unsuperwis": 10, "unsupport": [63, 86, 97], "unsur": [32, 33], "until": [4, 27, 40, 41, 42, 61, 64, 65, 70, 71, 87, 121, 134], "unusu": [29, 44], "uolp": 45, "up": [11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 31, 35, 40, 41, 42, 44, 61, 64, 67, 68, 70, 71, 78, 80, 82, 85, 86, 87, 91, 118, 125, 136, 141, 142, 143, 144, 146, 149, 151, 154, 155, 163], "upcom": [139, 141, 147, 155], "updat": [4, 5, 31, 41, 46, 49, 69, 125, 128, 129, 130, 131, 132, 134, 135, 139, 141, 145, 148, 154], "upfront": 91, "upon": [0, 27, 42, 65, 96, 97, 99, 139, 148, 153, 154, 155, 163], "upper": [30, 32, 45, 87, 116, 132, 141, 149, 150, 153, 154], "uppercas": [30, 32, 45, 46, 73, 81, 83, 88], "uppercase_decor": 30, "uptil": 85, "upto": [148, 153, 155], "upward": 152, "urg": 145, "url": [125, 146], "ursar": 136, "us": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 30, 33, 35, 36, 37, 38, 39, 42, 45, 48, 49, 50, 54, 55, 57, 58, 59, 61, 62, 63, 65, 67, 68, 70, 71, 74, 75, 76, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 95, 96, 97, 102, 115, 119, 120, 121, 122, 125, 130, 131, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162], "usa": [30, 115], "usabl": [31, 77], "usag": [18, 19, 23, 31, 72, 91, 125, 126, 142, 143, 150, 155], "usd": [115, 150, 155], "useabl": 24, "useless": 7, "user": [22, 24, 27, 30, 35, 37, 38, 40, 41, 44, 48, 50, 62, 63, 64, 66, 67, 70, 73, 79, 82, 83, 86, 88, 97, 123, 129, 132, 137], "user_check": 38, "user_id_gen_by_us": 73, "userwarn": 139, "usless": 0, "usual": [0, 30, 41, 42, 50, 64, 67, 76, 83, 85, 91, 96, 119, 125, 131, 143, 149], "utc": [52, 53, 54, 57, 58], "utf": [61, 64], "util": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 50, 132, 151, 155], "utmost": [142, 149, 153, 154], "uxi": 136, "v": [7, 24, 26, 40, 45, 48, 61, 64, 83, 93, 121, 143, 145, 147, 148, 152, 158], "v0": 140, "v1": [97, 122, 155], "v2": [97, 122, 155], "v3": 24, "v_1": 155, "v_2": 155, "va": [141, 151], "vaccin": 40, "vagu": [7, 18, 19, 143], "vairabl": 87, "val": [31, 40, 42], "valid": [5, 11, 13, 15, 16, 17, 18, 19, 32, 45, 47, 67, 81, 82, 89, 99, 125, 142], "valu": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 27, 28, 30, 31, 32, 33, 36, 37, 39, 40, 41, 44, 45, 49, 50, 52, 58, 61, 63, 64, 65, 68, 69, 70, 72, 73, 74, 75, 77, 80, 82, 84, 85, 86, 88, 89, 95, 115, 118, 119, 120, 121, 122, 125, 127, 129, 130, 132, 134, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156], "valuabl": [0, 17, 18, 19], "value1": 46, "value2": 46, "value3": 46, "value_count": [115, 125, 137], "value_var": 155, "valueerror": [31, 64, 86, 87, 99, 120, 126, 134, 147], "valuen": 46, "valuetoolargeerror": 65, "valuetoosmallerror": 65, "vanillish": 136, "vanillit": 136, "vanillux": 136, "vaporeon": 136, "var": [64, 70, 94, 115, 145, 154], "var_1": 81, "var_nam": [147, 148, 149], "var_scope_test": 68, "vari": [8, 11, 13, 64, 81, 94, 125, 140, 142, 147, 155], "variabel": 156, "variabl": [1, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 22, 24, 28, 31, 32, 33, 36, 37, 38, 40, 41, 42, 44, 45, 46, 50, 52, 53, 55, 57, 63, 64, 67, 72, 73, 76, 77, 81, 84, 85, 86, 87, 88, 93, 95, 96, 99, 129, 131, 132, 134, 135, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155], "variable1": 81, "varianc": [1, 3, 94, 119, 122, 143], "variat": [1, 20, 37, 38, 40, 101, 105, 142, 144, 147, 148, 149, 150, 151, 152, 153, 155], "varieti": [24, 45, 147, 151, 154, 155], "variou": [0, 2, 24, 30, 32, 40, 41, 44, 45, 46, 47, 48, 50, 61, 73, 77, 84, 85, 88, 89, 118, 125, 130, 133, 140, 141, 144, 145, 151, 154, 155, 156, 163], "variti": 147, "vartupl": 70, "vast": [0, 118, 125, 128], "ve": [16, 17, 18, 19, 32, 64, 125, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155], "vector": [3, 4, 11, 16, 17, 18, 19, 26, 97, 121, 122, 147, 151, 153], "veg": 64, "veget": [47, 64], "vehicl": [96, 125, 153], "vehicle_info": 96, "vendor": 153, "vendor_id": 153, "veniped": 136, "venomoth": 136, "venonat": 136, "venusaur": 136, "venusaurmega": 136, "venv": 24, "verbos": 83, "verdana": 151, "veri": [0, 1, 4, 5, 8, 22, 24, 28, 35, 41, 45, 46, 48, 49, 50, 61, 72, 80, 82, 85, 91, 99, 108, 118, 121, 122, 125, 126, 128, 129, 131, 139, 141, 142, 143, 145, 146, 147, 149, 150, 151, 153, 154, 155], "veriabl": 68, "verifi": 96, "verify_integr": 134, "versatil": [45, 46, 154], "versicolor": [9, 10, 14, 139, 147], "version": [24, 59, 61, 72, 73, 74, 88, 121, 133, 141, 142, 146, 154], "vert": 148, "vertiac": 150, "vertic": [32, 45, 99, 121, 122, 147, 148, 149, 150, 151, 152, 155], "vespiquen": 136, "via": [31, 42, 96, 153], "vibrava": 136, "victini": 136, "victreebel": 136, "video": [24, 155, 163], "view": [63, 96, 120, 123, 128, 139, 141, 143, 151, 152, 156], "viewer": 142, "vigoroth": 136, "vijai": 95, "vileplum": 136, "violin": [142, 149, 151, 152, 153, 158], "violinplot": [147, 148, 150], "virginica": [9, 10, 14, 139, 147], "viridi": [142, 145, 151], "viridian": 142, "viridis_r": 145, "virizion": 136, "virtual": 149, "virtualenv": 24, "visibl": [68, 73, 87, 95, 143, 150, 153, 154, 155], "visibli": 141, "visit": [22, 27, 31, 32, 45, 52, 58, 59, 63, 65, 67, 68, 74, 75, 77, 82, 96, 97, 125, 143], "visual": [0, 11, 12, 13, 45, 46, 96, 108, 115, 116, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 163], "visuali": 143, "visualizaion": 155, "visualstudio": 24, "vividli": 153, "vivillon": 136, "vlag": 145, "vlag_r": 145, "vmax": [18, 19, 148, 156], "vmin": [18, 19, 148, 156], "volatil": 61, "volbeat": 136, "volcanion": 136, "volcarona": 136, "volkswagen": [125, 126, 137], "voltorb": 136, "volum": 62, "volvo": [125, 126, 137], "vonmis": 74, "vonmisesvari": 74, "vowel": [46, 47, 83, 84], "vpython": 24, "vscode": 24, "vstack": 118, "vullabi": 136, "vulpix": 136, "vv": 121, "w": [0, 40, 41, 42, 45, 46, 47, 49, 53, 54, 61, 64, 121, 139, 142, 154, 155], "wa": [0, 14, 15, 27, 28, 29, 30, 31, 32, 37, 40, 42, 45, 50, 61, 63, 64, 68, 73, 80, 83, 87, 96, 97, 99, 120, 121, 126, 139, 140, 141, 143, 149, 151, 153, 154, 155], "wage": 153, "wagon": [125, 126, 137], "wai": [0, 22, 24, 27, 28, 30, 31, 35, 39, 40, 41, 44, 45, 47, 48, 49, 50, 52, 55, 56, 61, 64, 65, 70, 73, 76, 78, 82, 85, 87, 88, 89, 97, 99, 115, 119, 120, 125, 126, 127, 128, 129, 133, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 153, 154, 156, 163], "wailmer": 136, "wailord": 136, "wait": [37, 59], "walk": 152, "walrein": 136, "want": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 28, 30, 31, 32, 35, 37, 39, 40, 41, 42, 44, 45, 46, 61, 62, 64, 68, 73, 76, 80, 82, 83, 87, 89, 94, 95, 96, 97, 99, 100, 104, 115, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 141, 142, 143, 145, 148, 149, 150, 153, 154, 155, 163], "warm": [96, 142], "warn": [91, 121, 133, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "wartortl": 136, "wash": 116, "washington": 139, "wast": 163, "wat": 145, "watch": [40, 163], "watchog": 136, "water": 136, "watev": 45, "watson": 40, "wave": [140, 155], "wb": 61, "we": [0, 1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 108, 115, 116, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 163], "weak": [63, 77], "weapon": [139, 153], "wear": 139, "weather": 5, "weavil": 136, "web": [22, 24, 91, 142], "web_tech": 45, "websit": [24, 83, 142], "weedl": 136, "week": [52, 53, 54, 56, 67, 148, 150, 151], "weekdai": [53, 54], "weekend": [149, 151], "weekli": [88, 115], "weep": 96, "weepinbel": 136, "weez": 136, "weibul": 74, "weibullvari": 74, "weight": [7, 67, 115, 129, 141, 145, 151, 153], "weight_of_object": 67, "weird": 125, "weirder": 30, "welcom": [30, 45, 61, 67, 73, 80, 94, 143, 148, 149, 150, 152, 153, 154, 155], "well": [4, 5, 11, 12, 13, 16, 17, 18, 19, 24, 25, 29, 35, 37, 38, 40, 41, 42, 44, 45, 56, 62, 64, 72, 76, 82, 83, 88, 89, 94, 95, 96, 97, 100, 104, 125, 127, 128, 129, 132, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155], "went": 64, "were": [9, 10, 14, 32, 33, 42, 61, 63, 64, 70, 87, 88, 96, 99, 121, 139, 147, 152], "what": [4, 5, 7, 11, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 30, 31, 32, 33, 36, 42, 44, 50, 57, 64, 68, 74, 77, 81, 82, 88, 95, 97, 116, 137, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 162], "whatev": [80, 95, 97, 143], "whatsoev": 155, "wheel": [125, 126, 136, 137, 153], "when": [4, 5, 6, 10, 14, 15, 16, 17, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 45, 47, 50, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 99, 101, 102, 105, 115, 116, 119, 121, 122, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 155, 160], "whenev": [31, 41, 63, 77, 95, 99, 129, 132, 134, 135, 150, 151], "where": [0, 1, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 29, 30, 31, 39, 41, 42, 44, 45, 46, 47, 50, 58, 61, 63, 64, 67, 68, 69, 73, 85, 86, 87, 88, 89, 91, 95, 96, 99, 120, 121, 123, 125, 127, 128, 129, 130, 132, 133, 134, 135, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "wherea": [32, 40, 44, 47, 52, 53, 68, 91, 94, 99, 101, 105, 126, 133, 134, 135, 140, 144, 153, 154], "whether": [0, 5, 14, 15, 16, 17, 18, 19, 20, 35, 36, 37, 42, 61, 64, 65, 69, 77, 88, 96, 101, 105, 120, 125, 129, 130, 131, 132, 134, 135, 143, 144, 145, 152, 153], "whi": [148, 149], "which": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 30, 31, 32, 33, 38, 40, 42, 44, 45, 47, 48, 49, 50, 55, 57, 59, 61, 62, 64, 65, 67, 68, 72, 73, 78, 82, 83, 84, 85, 86, 87, 89, 91, 94, 95, 96, 97, 99, 102, 115, 116, 118, 119, 120, 121, 122, 125, 126, 127, 129, 130, 132, 133, 134, 135, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 163], "whichev": [144, 150], "while": [22, 27, 28, 31, 33, 35, 43, 44, 45, 48, 49, 59, 61, 63, 65, 67, 70, 72, 73, 76, 81, 82, 86, 88, 89, 91, 94, 95, 96, 99, 120, 126, 127, 131, 133, 134, 139, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155], "whilst": 154, "whimsicott": 136, "whirliped": 136, "whiscash": 136, "whisker": [7, 11, 13, 148, 149, 151, 153], "whiskerprop": 147, "whismur": 136, "white": [7, 35, 42, 45, 139, 140, 150, 151], "whitegrid": [140, 142, 143, 144, 145, 148, 150, 151, 153, 155], "whitespac": [40, 45, 82], "who": [37, 45, 123, 139, 149, 151, 153, 163], "whoisthi": [94, 96], "whole": [24, 32, 42, 45, 59, 67, 73, 88, 125, 126, 128], "whoop": 30, "whose": [1, 8, 68, 72, 83, 95, 129, 132], "why": [28, 30, 31, 37, 44, 45, 63, 64, 77, 82, 121, 139, 147, 148, 149, 151], "wichita": 139, "wickham": 143, "wide": [24, 87, 122, 125, 132, 147, 148, 151], "wide_to_long": 147, "widen": 155, "wider": [150, 153], "widespread": 126, "width": [9, 10, 11, 14, 45, 88, 94, 116, 139, 144, 145, 147, 149, 150, 151, 153, 155], "width_ratio": 155, "wigglytuff": 136, "wiki": 146, "wikipedia": [1, 3, 4, 5, 7, 146], "wilder": 153, "win": 155, "win32": [24, 73], "window": [24, 61, 62, 80, 95, 139, 142, 153], "winerror": [61, 73], "wingul": 136, "winre_backup_partit": 62, "winreag": 62, "winter": [38, 67, 145], "winter_r": [145, 154], "wirh": 136, "wise": [116, 118, 125, 133, 136, 142, 145, 153], "wish": [31, 32, 42, 45, 67, 87, 142, 144, 149, 151, 153, 154, 155], "wistia": 145, "wistia_r": 145, "within": [0, 3, 24, 27, 32, 41, 42, 47, 61, 62, 67, 69, 76, 85, 94, 96, 122, 125, 139, 140, 141, 145, 147, 148, 149, 150, 151, 153, 155, 157], "without": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 30, 36, 42, 45, 47, 49, 50, 53, 54, 61, 64, 69, 70, 72, 73, 76, 88, 89, 91, 94, 95, 96, 97, 121, 122, 129, 131, 134, 136, 139, 140, 141, 142, 147, 149, 150, 151, 153, 154, 155, 162], "wobbuffet": 136, "wolpert": 0, "woman": [32, 149, 151], "won": [67, 96, 122, 125, 139, 140, 143, 147, 153, 155], "wonder": [52, 67, 153], "wont": 95, "woo": 94, "woobat": 136, "wooper": 136, "wor": 45, "word": [0, 5, 7, 40, 42, 45, 49, 50, 61, 73, 81, 83, 88, 94, 95, 96, 143, 144, 151, 154], "work": [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 29, 30, 32, 33, 40, 41, 42, 44, 46, 48, 50, 52, 61, 62, 64, 68, 71, 73, 78, 85, 87, 88, 91, 94, 95, 96, 97, 100, 104, 118, 120, 121, 125, 128, 132, 139, 140, 142, 143, 144, 145, 148, 150, 153, 154, 155, 163], "workabl": 163, "workbook": 153, "workflow": 155, "workload": 78, "workplac": 145, "works_for_al": 30, "world": [4, 10, 11, 13, 22, 23, 24, 37, 40, 45, 63, 67, 71, 73, 77, 83, 85, 88, 89, 93, 94, 95, 125, 140, 143, 148, 149, 153, 162], "world66": 45, "wormadampl": 136, "wormadamsandi": 136, "wormadamtrash": 136, "worri": [83, 146, 155], "worst": 1, "worth": [147, 148, 152], "would": [0, 6, 7, 23, 24, 27, 29, 30, 31, 33, 35, 40, 42, 50, 61, 62, 63, 64, 70, 71, 73, 76, 78, 81, 82, 83, 87, 95, 96, 99, 102, 108, 139, 141, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 163], "wouldn": [143, 151, 154], "wrangl": [138, 145, 153], "wrap": [70, 94, 132], "wrapper": [30, 132, 143, 148, 154], "wrapper_accepting_paramet": 30, "writ": 73, "writabl": 61, "write": [5, 6, 20, 22, 24, 32, 38, 40, 41, 42, 45, 47, 50, 63, 67, 68, 69, 73, 77, 78, 82, 83, 84, 85, 87, 88, 91, 94, 96, 99, 101, 102, 105, 119, 125, 140, 141, 150, 159, 160, 161], "writeabl": 123, "writelin": 61, "written": [6, 24, 36, 44, 45, 50, 61, 64, 67, 73, 77, 78, 80, 81, 83, 84, 85, 91, 101, 102, 105, 160], "wrong": [37, 38, 64, 65], "wrote": [61, 80, 82], "wspace": [16, 17, 18, 19], "wt": 147, "wtxmut": 147, "wurmpl": 136, "www": 24, "wxwidget": 24, "wynaut": 136, "x": [1, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 24, 28, 29, 30, 32, 33, 36, 37, 38, 39, 40, 44, 45, 46, 47, 48, 50, 53, 54, 61, 67, 68, 69, 70, 72, 73, 75, 77, 82, 83, 84, 85, 87, 88, 95, 96, 97, 99, 115, 116, 118, 119, 120, 121, 122, 125, 126, 132, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "x1": [11, 12, 13, 14, 15, 16, 17, 68, 88, 144], "x11": 142, "x2": [11, 12, 13, 14, 15, 16, 17, 88, 115, 144], "x3": 88, "x45": 45, "x48": 45, "x58": 45, "x61": 45, "x86": 62, "x_axi": [10, 11, 14, 15, 146], "x_bin": 143, "x_ci": 143, "x_data": 147, "x_estim": 143, "x_index": [11, 14, 15], "x_jitter": 143, "x_max": [11, 14, 15, 146], "x_med": 148, "x_min": [11, 14, 15, 146], "x_partial": 143, "x_predict": [11, 12, 13], "x_sum": 41, "x_test": [11, 13, 16, 17, 18, 19], "x_train": [10, 11, 13, 14, 15, 16, 17, 18, 19], "x_valu": 11, "x_var": [145, 154], "x_y_index": 11, "xatu": 136, "xavier": 150, "xaxi": [11, 151], "xernea": 136, "xhh": 45, "xkcd": 142, "xkcd_palett": 142, "xkcd_rgb": [142, 148], "xl": 61, "xlabel": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 115, 116, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 153], "xlim": [141, 155], "xlist": 150, "xlrd": 61, "xlsx": 136, "xmax": 147, "xmin": 147, "xml": 24, "xml_exampl": 61, "xor": [88, 97], "xtick": [115, 116, 151], "xticklabel": 155, "xy": [151, 154], "xycoord": [141, 154], "xytext": 151, "xyz": [40, 47, 62, 64, 87], "xyzvalu": 87, "xz": 32, "y": [4, 5, 8, 11, 12, 13, 14, 15, 28, 32, 33, 38, 39, 40, 44, 45, 46, 47, 50, 52, 53, 54, 55, 57, 58, 67, 68, 70, 72, 73, 75, 83, 84, 85, 87, 88, 95, 96, 97, 99, 115, 116, 118, 119, 121, 122, 125, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "y1": [88, 144], "y2": [88, 144], "y3": 88, "y_axi": [10, 11, 14, 15], "y_data": 147, "y_index": [11, 14, 15], "y_jitter": 143, "y_max": [11, 14, 15], "y_med": 148, "y_min": [11, 14, 15], "y_partial": 143, "y_predict": [11, 12, 13], "y_test": [11, 13, 16, 17, 18, 19], "y_test_predict": [16, 17, 18, 19], "y_train": [11, 13, 14, 15, 16, 17, 18, 19], "y_train_predict": [14, 15, 16, 17, 18, 19], "y_valu": 11, "y_var": [145, 154], "yamask": 136, "yanma": 136, "yanmega": 136, "yaxi": [11, 151], "ycarc5yrrupyg00": 73, "yd7efwnqkns7qxat": 73, "ye": [28, 30, 42, 48, 63, 126, 129, 132, 143, 149, 151, 154, 155], "year": [37, 40, 45, 53, 54, 55, 56, 57, 58, 64, 77, 88, 90, 94, 99, 115, 151, 155, 156], "year2021": 83, "year_2021": 83, "year_born": 64, "yellow": 153, "yesmail": 33, "yet": [24, 42, 151], "yield": [27, 28, 81, 120, 121, 140], "yj": [44, 85], "ylabel": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 115, 116, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 153], "ylgn": 145, "ylgn_r": 145, "ylgnbu": 145, "ylgnbu_r": 145, "ylim": [141, 146, 154, 155], "ylist": 150, "ylorbr": 145, "ylorbr_r": 145, "ylorrd": 145, "ylorrd_r": 145, "ymax": 147, "ymin": 147, "yo": [32, 141], "you": [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 40, 41, 42, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 95, 96, 97, 99, 100, 101, 102, 104, 105, 108, 116, 118, 119, 120, 121, 122, 125, 126, 127, 129, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 163], "your": [6, 20, 23, 25, 27, 29, 32, 35, 36, 37, 42, 45, 46, 47, 56, 61, 62, 64, 65, 67, 73, 75, 76, 80, 81, 82, 83, 87, 88, 91, 94, 95, 100, 101, 102, 104, 105, 108, 115, 118, 121, 125, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 160, 163], "your_ag": 37, "yourself": [50, 52, 67, 83, 87, 94, 153], "ytho": 45, "ython": 32, "ytick": [115, 116, 146, 154], "yveltal": 136, "yy": [52, 55], "yyyi": [52, 54], "z": [7, 11, 14, 15, 33, 40, 45, 46, 47, 53, 54, 70, 81, 83, 88, 96, 119, 125, 136, 154], "z_predict": 11, "z_score": 157, "z_setosa": 14, "z_versicolor": 14, "z_virginica": 14, "za": 45, "zalando": [9, 17, 19], "zangoos": 136, "zapdo": 136, "zaxi": 11, "zealand": [11, 13], "zebstrika": 136, "zekrom": 136, "zen": [89, 99], "zero": [7, 11, 14, 15, 27, 30, 31, 36, 37, 38, 39, 41, 42, 44, 45, 50, 53, 54, 63, 64, 84, 86, 88, 95, 99, 118, 119, 121, 122, 129, 132, 136, 151, 154], "zerodivisionerror": [30, 63, 64], "zfill": 45, "zigzagoon": 136, "zip": [40, 73, 85, 119, 127, 133, 148, 151, 154, 157], "zipcod": [38, 40], "zone": [53, 54, 56], "zoroark": 136, "zorua": 136, "zubat": 136, "zurich": 129, "zweilou": 136, "zxoyh": 73, "zygarde50": 136, "\u00f6": 84, "\u00fc": 84, "\u00fcnic\u00f6d": 84, "\u03c0": 67}, "titles": ["Introduction to Machine Learning! \ud83d\ude80", "Anomaly Detection Using Gaussian Distribution", "Concepts at glance", "K-Means Algorithm", "Linear Regression", "Logistic Regression", "Notebooks with MyST Markdown", "Neural Network", "Anomaly Detection Using Gaussian Distribution", "Datasets", "K-Means Algorithm Demo", "Multivariate Linear Regression Demo", "Non-linear Regression Demo", "Univariate Linear Regression Demo", "Logistic Regression With Linear Boundary Demo", "Logistic Regression With Non-Linear Boundary Demo", "Multivariate Logistic Regression Demo", "Multivariate Logistic Regression Demo", "Neural Network (Multilayer Perceptron) Demo", "Neural Network (Multilayer Perceptron) Demo", "Markdown Files", "Here\u2019s my sample title", "Learn Python Programming", "Mathematics for Machine Learning", "Getting Started with Python", "Content with notebooks", "Linear Algebra", "Python Iterators", "Python Python Generators", "Python Closures", "Python Decorators", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator", "Python RegEx", "Python <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code></strong>", "Python Advanced Topics", "Python Flow-Control (Decision-Making) Statements", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-else</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-elif-else</span></code> statement", "Python Nested <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Loops in Python", "Loops in Python", "Control Statements in Python", "Python Flow Control", "Python Numbers, Type Conversion and Mathematics", "Python Strings", "Python List", "Python Tuple", "Python Dictionary", "Python Sets", "Python List Comprehension", "Python Data Types", "Python datetime", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strftime()</span></code>", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strptime()</span></code>", "How to get current date and time in Python?", "Python Get Current time", "Python timestamp to datetime and vice-versa", "Python time Module", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">sleep()</span></code>", "Python Date &amp; Time Module", "Python File I/O", "Python Directory and Files Management", "Python Errors and Built-in Exceptions", "Python Exceptions Handling Using <code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">except</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">finally</span></code> statement", "Python Custom Exceptions", "Python Files", "Python Functions", "Python Global, Local and Nonlocal variables", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code> Keyword", "Function Argument and Parameter", "Python Recursion", "Python Anonymous/<strong><code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span></code></strong> Function", "Python Modules", "Python Random Module", "Python Mathematical Functions", "Python Package", "Python Docstrings", "Python User-defined Functions", "Python Functions", "Python Hello, World", "Python Keywords and Identifiers", "Python Statement, Indentation and Comments", "Python Variables and Constants", "Python Literals", "Python Data Types", "Python Type Conversion and Type Casting", "Python Input, Output and Import", "Python Operators", "Python Namespace and Scope", "Data structures and algorithms", "Differences Between Interpreter and Compiler", "&lt;no title&gt;", "Python Introduction", "Python OOPs Concepts", "Python  Classes and Objects", "Python Inheritance", "Python Operator Overloading", "Python Object Class", "self in Python, Demystified", "Content with notebooks", "Markdown Files", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "Content with notebooks", "Markdown Files", "Here\u2019s my sample title", "Introduction to HuggingFace", "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80", "Table of Contents", "Langchain modules", "LangGraphs", "LangServe", "LangSmith", "Langchain expression language", "Matplotlib", "Python Matplotlib", "Python Matplotlib", "Python NumPy", "Python NumPy Array:", "Array indexing", "Array math", "Arrays reorganizing", "Python NumPy Exercises", "Python Numpy Module", "Python Pandas", "Create Pandas DataFrame from Python Dictionary", "Create Pandas DataFrame from Python List", "Pandas DataFrame head, tail, at, iat", "Drop columns in pandas DataFrame", "Drop duplicates in pandas DataFrame", "Drop columns with NA in pandas DataFrame", "Rename columns in Pandas DataFrame", "Convert Pandas DataFrame to Python dictionary", "Set index in pandas DataFrame", "Reset index in pandas DataFrame", "Python Pandas", "Python Pandas", "Python Pandas Module", "Loading Datasets in Seaborn", "Controlling Aesthetics of Seaborn Plots", "Matplotlib vs. Seaborn Plotting Code", "Seaborn Color Palettes", "LM Plot and Reg Plot", "Scatter Plot and Joint Plot", "Additional Regression Plots", "What is Distribution Plots?", "Seaborn: Categorical Data Plots", "Seaborn: Strip Plot", "Seaborn: Box Plot", "Seaborn: Violin Plot", "Bar Plot, Point Plot and Count plot", "Factor Plot", "Time Series &amp; LV Plot", "PairGrid", "FacetGrid", "What is heat map?", "What is cluster map?", "Python Seaborn", "Here\u2019s my sample title", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "AI/ML Learning Path", "Welcome to my technical diary \ud83e\udd2f"], "titleterms": {"": [21, 32, 46, 48, 52, 53, 55, 80, 103, 106, 123, 137, 146, 159, 161], "0": [32, 123, 135], "1": [0, 28, 30, 32, 38, 39, 40, 42, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 61, 63, 64, 67, 73, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 109, 115, 116, 123, 129, 132, 135, 137, 146, 148, 151, 154], "10": [32, 52, 116, 123, 137], "100": 123, "100th": 123, "10x10": 123, "10x3": 123, "11": [32, 52, 123], "12": [52, 123], "13": [52, 123], "14": [52, 123], "15": [52, 123], "16": [52, 123], "16x16": 123, "17": 123, "18": 123, "19": 123, "1d": [120, 123], "2": [0, 28, 30, 32, 38, 39, 40, 42, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 61, 63, 67, 73, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 94, 109, 115, 116, 123, 137, 146, 151], "20": 123, "2016": 123, "2017": 9, "21": 123, "22": 123, "23": 123, "24": 123, "25": 123, "26": 123, "27": 123, "28": 123, "29": 123, "2d": [120, 123], "2x2x2": 123, "3": [0, 28, 30, 32, 38, 40, 42, 45, 46, 47, 49, 52, 53, 55, 56, 59, 61, 63, 67, 73, 77, 82, 83, 84, 85, 87, 88, 109, 115, 116, 123, 137, 146, 151], "30": 123, "31": 123, "32": 123, "33": 123, "34": 123, "35": 123, "36": 123, "37": 123, "38": 123, "39": 123, "3x3": 123, "3x4": 123, "4": [0, 28, 32, 52, 56, 59, 61, 63, 77, 82, 85, 88, 116, 123, 137, 146], "40": 123, "41": 123, "42": 123, "43": 123, "44": 123, "45": 123, "46": 123, "47": 123, "48": 123, "49": 123, "4x4": 123, "5": [32, 52, 56, 63, 77, 85, 88, 116, 123, 137, 146], "50": 123, "51": 123, "52": 123, "53": 123, "54": 123, "55": 123, "56": 123, "57": 123, "58": 123, "59": 123, "5x2": 123, "6": [32, 52, 56, 63, 85, 88, 116, 123, 137], "60": 123, "61": 123, "62": 123, "63": 123, "64": 123, "65": 123, "66": 123, "67": 123, "68": 123, "69": 123, "6x3": 123, "6x6": 123, "7": [32, 52, 63, 116, 123, 137], "70": 123, "71": 123, "72": 123, "73": 123, "74": 123, "75": 123, "76": 123, "77": 123, "78": 123, "79": 123, "8": [32, 52, 63, 116, 123, 137], "80": 123, "81": 123, "82": 123, "83": 123, "84": 123, "85": 123, "86": 123, "87": 123, "88": 123, "89": 123, "8x8": 123, "9": [32, 52, 63, 116, 123, 137], "90": 123, "91": 123, "92": 123, "93": 123, "94": 123, "95": 123, "96": 123, "97": 123, "98": 123, "99": 123, "9_": 32, "9x9": 123, "A": [32, 123], "Be": [99, 120], "By": 32, "For": 50, "If": [46, 48], "In": [24, 46, 73, 95], "Into": [11, 13, 16, 17, 18, 19], "No": 64, "Of": 96, "One": [5, 32, 37], "The": [3, 31, 36, 37, 45, 46, 47, 48, 61, 64, 73, 126, 129, 130, 131, 132, 133, 134, 135], "These": 146, "To": [99, 125], "With": [14, 15], "_": 32, "__doc__": 77, "__init__": 99, "__new__": 99, "about": 22, "accept": 87, "access": [40, 45, 46, 47, 48, 87, 95], "accumul": 123, "across": 69, "ad": [48, 118, 132], "add": [6, 46, 48, 102, 123, 160], "addit": 145, "advanc": [22, 34, 45, 122, 162], "advantag": [47, 71, 73, 78], "aesthet": 140, "aggreg": 136, "ai": 162, "algebra": 26, "algorithm": [1, 3, 7, 10, 90], "align": 87, "all": [5, 45, 46, 48, 73, 116, 123, 129, 130, 131, 132, 137], "allow": 146, "alphabet": 32, "alphanumer": 32, "alreadi": 48, "also": [32, 119], "altern": 32, "amount": 136, "an": [6, 27, 32, 46, 48, 49, 64, 95, 102, 123, 160], "analyz": [11, 12, 13, 14, 15, 16, 17], "anatomi": [149, 150], "ani": [32, 46, 48, 67, 123], "anomali": [1, 8], "anonym": 72, "anoth": 70, "anyth": 48, "appart": 45, "appear": 46, "append": 46, "appli": 125, "applic": 24, "appropri": 53, "ar": [32, 46, 48, 49, 72, 73, 76, 78, 123, 126, 131, 146], "arang": 122, "arbitrari": [70, 123], "area": [24, 123], "arg": 33, "argmax": 119, "argmin": 119, "argument": [46, 64, 67, 70, 87], "arithmat": 88, "arithmet": 88, "around": 123, "arrai": [118, 119, 120, 121, 122, 123], "artifici": 9, "asarrai": 122, "ascend": [46, 47, 48], "asctim": 58, "assign": [83, 88], "attribut": [61, 77, 95, 119, 123, 125], "attributeerror": 63, "audienc": 163, "avail": 48, "averag": [123, 137], "avoid": 99, "awai": 123, "axi": [123, 129, 132, 146], "b": [32, 40, 41, 123], "back": 30, "background": 147, "backpropag": 7, "backslash": 32, "backward": 40, "bar": [115, 116, 151], "base": 123, "basic": [45, 70, 115, 118, 119], "batch": [4, 5], "bath": 116, "becom": 123, "befor": 32, "begin": 32, "beginn": [2, 162], "below": 123, "best": 8, "better": 49, "between": [28, 52, 56, 91, 123], "binari": 123, "bincount": 123, "bit": [49, 123], "bitwis": 88, "blank": 80, "block": [25, 100, 104, 123], "boolean": [67, 84, 88, 120, 122, 123], "bootstrap": 123, "border": 123, "both": [87, 91, 123], "bottom": 128, "boundari": [14, 15], "box": [115, 148, 149], "boxplot": 151, "brace": 32, "bracket": 32, "break": [40, 41, 42, 45, 80], "breath": 24, "broadcast": [121, 122], "build": [27, 123, 142], "built": [30, 45, 46, 47, 48, 49, 63, 73, 95], "byte": 123, "c": [40, 41, 123], "calcul": [14, 15, 16, 17, 18, 19, 24, 116], "call": 67, "can": [50, 99, 123], "car": 137, "care": [120, 123], "caret": 32, "cart": 32, "cartesian": 123, "case": 163, "cast": 86, "catch": [42, 64], "categor": [147, 148], "cauchi": 123, "cell": [6, 102, 160], "center": 123, "chain": 30, "chang": [45, 46, 47, 48, 61, 62, 83, 123, 126, 127, 135, 136], "charact": [32, 45, 84], "chart": [115, 116], "chdir": 62, "check": [24, 118, 123], "checkerboard": 123, "choic": 24, "cij": 123, "class": [5, 7, 22, 30, 31, 32, 37, 38, 40, 45, 46, 47, 48, 49, 50, 52, 57, 58, 61, 63, 64, 65, 67, 73, 77, 83, 88, 94, 95, 96, 98, 123], "classif": [5, 7], "claus": 64, "clean": [125, 137], "clear": [46, 48], "clock": 59, "close": 61, "closest": 123, "closur": [29, 30], "cluster": [10, 157], "code": [24, 25, 53, 54, 80, 91, 100, 104, 141], "collect": 84, "color": [123, 142, 156], "column": [123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137], "combin": [50, 118, 123, 125], "comma": 83, "command": [80, 123], "comment": [77, 82], "common": [45, 116, 123], "compani": 137, "compar": [123, 129], "comparis": [73, 91], "comparison": [88, 97, 118], "compil": [46, 91], "complier": 47, "compon": 80, "compos": 123, "comprehens": [46, 48, 50], "comput": [7, 123], "concaten": [45, 137], "concept": [2, 24, 94, 163], "conclus": 109, "condit": [35, 50, 125, 136, 137], "confid": 123, "configur": 123, "consecut": 123, "consid": [32, 123], "constant": [73, 83], "construct": 123, "constructor": [94, 95, 99, 125, 126, 127], "consum": 123, "contain": [32, 123], "content": [25, 100, 104, 109], "contigu": 123, "continu": [40, 41, 42], "control": [22, 35, 40, 41, 42, 43, 140], "convent": 83, "convers": [44, 84, 86, 125], "convert": [47, 123, 133], "coordin": 123, "copi": [46, 48, 118, 120, 123], "core": 163, "correspond": 123, "cost": [3, 4, 5, 7], "count": [46, 137, 151], "cours": 163, "cover": 123, "cream": 116, "creat": [6, 28, 45, 46, 47, 48, 49, 50, 53, 59, 65, 73, 95, 102, 119, 123, 125, 126, 127, 135, 142, 160], "creation": 125, "csv": [61, 125, 137], "ctime": 58, "cubehelix": 142, "current": [52, 55, 56, 62], "custom": [27, 65, 125, 127], "d": [32, 123], "dai": 52, "data": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 44, 51, 85, 90, 95, 115, 116, 122, 125, 126, 127, 136, 137, 146, 147, 156, 162], "datafram": [125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "dataset": [9, 16, 17, 18, 19, 137, 139, 146, 151, 154], "datatyp": [24, 49, 119], "date": [22, 52, 53, 55, 57, 60, 123], "datetim": [52, 53, 54, 56, 57], "decim": [32, 44, 73], "decis": [14, 15, 35], "declar": 83, "decor": [30, 31], "deep": [0, 24], "default": [30, 32, 37, 38, 40, 45, 46, 47, 48, 49, 50, 57, 61, 63, 64, 67, 70, 73, 83, 88, 94], "defin": [29, 65, 67, 78, 95, 99, 126, 130, 131, 132], "definit": [3, 4, 5, 7], "degre": 123, "del": 129, "delet": [45, 46, 47, 61, 95, 129], "demo": [1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "demystifi": 99, "densiti": 1, "depend": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "descend": [46, 47, 48], "descent": [4, 5, 11, 12, 13, 14, 15, 16, 17], "describ": [123, 136], "descript": 3, "desir": 136, "detail": 137, "detect": [1, 8], "determin": 121, "diagon": 123, "diari": 163, "dict": [46, 47, 48, 125, 126, 133], "dict2": 48, "dictionari": [40, 48, 61, 64, 85, 126, 133], "differ": [0, 28, 36, 37, 49, 52, 55, 56, 80, 91, 123], "digit": [9, 32, 59], "dimens": 123, "dimension": 123, "dir": 73, "direct": [101, 105], "directori": 62, "disadvantag": 71, "discuss": 146, "disk": 116, "displai": [87, 116, 125], "distanc": 123, "distort": 3, "distplot": 146, "distribut": [1, 8, 123, 146], "dive": 24, "do": 29, "docstr": [67, 77, 82], "document": [122, 123], "doe": 48, "dollar": 32, "dot": 123, "down": 80, "draw": [14, 15, 123, 148, 154], "drop": [125, 129, 130, 131], "drop_dupl": 130, "dropna": 131, "dtype": 123, "duplic": [130, 131, 134], "durat": 52, "e": 123, "each": [116, 123, 137, 154], "easi": 28, "editor": 24, "effici": 28, "einsum": 123, "either": [46, 47, 48], "eleg": 46, "element": [46, 47, 48, 49, 118, 123], "elif": 38, "els": [37, 38, 40, 41, 42, 64], "empti": 49, "encapsul": 94, "end": [32, 46, 80], "engin": 163, "enjoi": 163, "enumer": [64, 123], "environ": 24, "equal": [48, 123], "equat": 4, "equidist": 123, "equival": [32, 123], "error": [46, 63, 109, 129, 132], "escap": [32, 45], "essenti": 163, "estim": 1, "etc": 46, "evalu": 1, "everi": 123, "everytim": 99, "exampl": [6, 7, 32, 39, 40, 41, 42, 52, 53, 54, 55, 56, 57, 59, 65, 69, 73, 80, 83, 88, 96, 102, 115, 133, 160], "except": [42, 63, 64, 65, 128], "exclud": 123, "exercis": [30, 32, 37, 38, 40, 45, 46, 47, 48, 49, 50, 57, 61, 63, 64, 67, 73, 83, 88, 94, 116, 123, 137], "exist": 123, "expens": 137, "expert": 162, "explicit": 86, "explicitli": 99, "export": [125, 136], "express": [28, 114, 123, 132], "extend": 46, "extens": 61, "extract": 123, "f": [32, 123], "face": 116, "facetgrid": 155, "facewash": 116, "factor": 152, "fals": [46, 48], "faq": [41, 42], "fashion": 9, "faster": 123, "featur": [4, 109], "feedforward": 7, "fifa": 115, "file": [20, 22, 61, 62, 66, 101, 105, 122, 123, 137], "fill": 123, "filter": [30, 72, 125, 136], "final": 64, "find": [8, 123, 137], "findal": 32, "fing": 8, "first": [21, 46, 103, 106, 123, 128, 129, 130, 137, 159, 161], "fit": 8, "five": 137, "fix": 123, "flatten": 122, "float": [44, 87, 123], "flow": [22, 35, 43], "flower": 9, "follow": [116, 123, 137], "format": [45, 52, 53, 54, 55, 77, 87, 136, 156], "forward": 7, "four": 123, "fraction": 44, "frame": 137, "frequent": 123, "from": [46, 47, 48, 49, 52, 53, 73, 76, 87, 122, 123, 125, 126, 127, 128, 129, 130, 131, 135, 137], "from_dict": 126, "fromkei": 48, "frozenset": 49, "function": [3, 4, 5, 7, 22, 28, 29, 30, 40, 45, 46, 47, 48, 49, 50, 67, 69, 70, 71, 72, 73, 75, 77, 78, 79, 87, 96, 97, 119, 121, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135], "g": 123, "game": 123, "gaussian": [1, 8, 123], "gener": [28, 50, 122, 123, 142], "get": [24, 30, 46, 48, 52, 55, 56, 62, 87, 108, 116, 123, 125], "getcwd": 62, "getter": 31, "give": 48, "given": [46, 47, 48, 123, 137], "glanc": 2, "global": [68, 69], "gmtime": 58, "good": 163, "gradient": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17], "graph": 115, "group": [32, 148], "groupbi": [125, 136], "h": 123, "ha": 123, "hand": [36, 37], "handl": [52, 64, 109], "handwritten": 9, "happen": 99, "happi": 9, "hard": 116, "have": 29, "head": 128, "header": 133, "heat": 156, "heatmap": 156, "hello": [64, 80], "help": [77, 82], "here": [21, 45, 99, 103, 106, 159, 161], "hidden": [17, 18, 19], "hide": 95, "hierarch": [96, 127], "higesht": 137, "high": 91, "higher": [29, 30], "histogram": [115, 116], "hold": 24, "hour": 52, "how": [22, 45, 46, 49, 53, 54, 55, 67, 73, 80, 118, 123, 128], "hstack": 122, "huggingfac": 107, "hybrid": 96, "hypothesi": [4, 5], "i": [0, 20, 32, 40, 41, 45, 46, 47, 48, 49, 61, 67, 69, 71, 75, 89, 91, 99, 101, 105, 122, 123, 125, 131, 146, 156, 157, 163], "iat": 128, "ident": [88, 123], "identifi": 81, "ignor": [45, 123], "illustr": [17, 18, 19], "iloc": 129, "imag": 123, "immut": 123, "implement": [7, 28, 123, 146], "implicit": 86, "import": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 73, 76, 87, 109, 118, 123, 125], "indent": 82, "index": [40, 46, 47, 120, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135], "indexerror": 63, "indic": 123, "infinit": [27, 28], "info": 125, "inform": 24, "inherit": [94, 96], "init": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "initi": [7, 109], "inlin": 82, "inner": 123, "inplac": 123, "input": 87, "insert": [46, 125], "insid": [24, 40, 41, 52, 123], "inspect": [45, 125], "instal": [24, 109, 118], "instanc": [50, 94, 95], "instead": 44, "int": 123, "integ": [87, 120, 123], "interact": 142, "interleav": 123, "intermedi": 162, "intern": 99, "interpret": [91, 123], "intersect": 49, "interv": 123, "introduct": [0, 22, 24, 33, 93, 107, 109], "iri": [9, 154], "issubclass": 96, "item": [46, 47, 48, 123], "iter": [27, 35, 40, 41, 45, 46, 47, 48, 49, 123, 125], "itm": 48, "its": 87, "j": 123, "januari": 123, "java": 91, "join": 125, "joint": 144, "jointplot": 146, "journei": 24, "json": 61, "jupyt": [1, 3, 4, 5, 7, 24], "just": 123, "justif": 87, "k": [3, 10], "kdeplot": 146, "keep": [130, 134], "kei": [48, 50, 67, 86, 91, 94, 126, 133], "keyerror": 63, "keyword": [69, 70, 81, 96], "kwarg": 33, "label": [30, 32, 37, 38, 40, 45, 46, 47, 48, 49, 50, 57, 61, 63, 64, 67, 73, 83, 88, 94, 128], "lambda": [50, 72, 132], "langchain": [109, 110, 114], "langgraph": 111, "langserv": 112, "langsmith": 113, "languag": [91, 114], "larg": [123, 136], "largest": 123, "last": [116, 123, 128, 129, 130, 137], "launch": 108, "layer": [17, 18, 19], "lead": 132, "learn": [0, 22, 23, 30, 162, 163], "least": 131, "len": [46, 47, 48], "length": [48, 70, 123, 126], "let": [80, 83, 146], "letter": 153, "level": [30, 32, 38, 40, 46, 47, 49, 57, 61, 64, 67, 73, 83, 91, 94, 132, 135, 162], "librari": [115, 119], "life": 123, "like": [94, 123], "line": [36, 37, 40, 77, 80, 82, 83, 87, 115, 116, 123], "linear": [4, 9, 11, 12, 13, 14, 15, 26], "linspac": 122, "list": [24, 37, 38, 40, 41, 45, 46, 47, 48, 50, 53, 54, 62, 64, 67, 73, 85, 123, 126, 127, 132, 133, 134], "listdir": 62, "liter": 84, "lm": 143, "lmplot": 143, "load": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 115, 119, 122, 136, 139], "loc": 129, "local": [53, 68], "localtim": 58, "logic": [38, 63, 88], "logist": [5, 7, 10, 14, 15, 16, 17], "logspac": 122, "look": 94, "loop": [27, 28, 40, 41, 42, 50], "lv": 153, "machin": [0, 23, 91, 162], "make": [35, 62, 123, 136, 137], "manag": [24, 62], "mani": 119, "manipul": 118, "map": [30, 72, 156, 157], "mark": 32, "markdown": [6, 20, 25, 100, 101, 102, 104, 105, 160], "mask": 122, "match": [32, 46], "math": [73, 75, 121], "mathemat": [23, 44, 75, 118, 121], "matplotlib": [22, 115, 116, 117, 141], "matric": [120, 123], "matrix": [121, 123], "max": [46, 47, 119], "maximum": [46, 47, 123], "mean": [3, 10, 123], "member": 96, "membership": [45, 46, 47, 48, 49, 88], "memori": [28, 123], "merg": 137, "metacharact": 32, "metadata": [6, 102, 125, 160], "method": [32, 45, 46, 47, 48, 49, 61, 94, 96, 119, 123], "microchip": 9, "microsecond": 52, "mileag": 137, "min": [46, 47, 119], "minimum": [47, 123], "minut": 52, "miscellan": 122, "miss": 131, "mkdir": 62, "mktime": 58, "ml": [0, 162], "mlp": [18, 19], "mnist": 9, "model": [5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "modif": 125, "modifi": [49, 94, 95], "modul": [22, 56, 58, 60, 69, 73, 74, 75, 76, 77, 110, 124, 138], "modulenotfounderror": 63, "month": [52, 116, 123], "more": [32, 45, 118], "most": [116, 123, 137], "mul": 123, "mulitpli": 123, "multi": [5, 7, 77, 82, 128, 129, 132, 134, 135], "multilay": [18, 19], "multilevel": 96, "multilin": [87, 116], "multinomi": 123, "multipl": [64, 67, 73, 83, 87, 96, 121, 127, 129, 132, 134], "multipli": 123, "multithread": 59, "multivari": [11, 16, 17], "my": [21, 103, 106, 159, 161, 163], "myst": [6, 20, 25, 100, 101, 102, 104, 105, 160], "n": [32, 123, 128, 129], "na": 131, "name": [73, 83, 87, 89, 123, 127, 135, 137], "nameerror": 63, "namespac": 89, "nearest": 123, "necessari": [115, 123], "need": 94, "neg": [46, 47, 52], "negat": 123, "nest": [29, 39, 40, 41, 42, 50, 69, 126], "network": [7, 18, 19], "neural": [7, 18, 19], "neuron": 7, "new": [46, 48, 62, 123, 135, 163], "non": [9, 12, 15, 32, 123], "nonloc": [29, 68], "normal": [1, 4, 28, 123], "notebook": [6, 24, 25, 100, 102, 104, 160], "np": 123, "nth": 123, "null": 123, "number": [41, 44, 46, 47, 48, 50, 84, 85, 87, 119, 122, 123, 131, 134, 135], "numer": [84, 123], "numpi": [22, 118, 119, 122, 123, 124], "o": [61, 73], "object": [22, 32, 52, 54, 56, 61, 91, 94, 95, 98, 125], "observ": 148, "old": [45, 134], "onc": 123, "one": [32, 36, 40, 83, 87, 123, 131, 133], "onli": [87, 123, 126], "oop": 94, "open": 61, "oper": [9, 38, 45, 46, 47, 48, 49, 73, 88, 97, 118, 121], "opposit": 32, "option": 125, "order": [29, 30, 46, 47, 48, 96, 123], "orient": 94, "other": [46, 47, 48, 49, 135], "otherwis": [46, 47], "our": 136, "outer": [42, 123], "outlier": 8, "output": [25, 87, 94, 100, 104, 123], "over": [47, 123], "overfit": [4, 5], "overload": 97, "overrid": [94, 96], "p": 123, "p0": 123, "p1": 123, "pack": 64, "packag": [24, 76, 77, 109, 123], "pad": 123, "pair": 48, "pairgrid": 154, "pairplot": 146, "pairwis": 154, "palett": 142, "panda": [22, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138], "paramet": [1, 4, 9, 29, 30, 67, 70, 95, 125, 133], "parent": [94, 96], "part": [123, 151, 154], "pass": [40, 41, 42, 46, 48, 67], "path": [73, 123, 162], "pattern": [32, 40, 41, 123], "per": 137, "percentil": 123, "perceptron": [17, 18, 19], "period": 32, "pie": [115, 116], "pipelin": 28, "place": [123, 129, 130, 131, 132, 134, 135], "placehold": 118, "plot": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 115, 116, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "plu": 32, "point": [50, 56, 86, 87, 94, 123, 151], "polar": 123, "polymorph": 94, "polynomi": 4, "pop": [46, 129], "posit": [61, 70, 87, 123, 128, 129, 132], "power": 123, "practic": 87, "precis": [8, 14, 15, 16, 17, 18, 19], "predict": [11, 12, 13, 16, 17, 18, 19], "prefix": [32, 132], "prepar": 15, "prepara": [10, 14], "prerequisit": 30, "price": 137, "print": [16, 17, 40, 41, 52, 80, 87, 123, 125, 137], "printabl": 48, "privat": 96, "problem": [4, 5, 87], "process": 45, "produc": [48, 123], "product": [116, 123], "profit": 116, "program": [22, 59, 64, 80, 91, 94, 123], "progress": [8, 11, 12, 13, 14, 15, 16, 17], "propag": 7, "properti": [31, 95, 116], "provid": 119, "python": [22, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 116, 117, 118, 119, 123, 124, 125, 126, 127, 133, 134, 136, 137, 138, 158], "python3": 46, "quantifi": 32, "question": [32, 116], "quickli": [6, 102, 160], "quiz": 120, "r": [32, 123], "rais": [64, 132], "rand": 119, "randint": 119, "randn": 119, "random": [7, 73, 74, 119, 122, 123], "randomli": 123, "rang": [40, 116, 123, 129, 134, 135], "rank": 123, "raw": 45, "re": 32, "read": [61, 116, 123, 136], "real": [115, 123, 163], "recal": 8, "recommend": 123, "record": 123, "recurs": 71, "reduc": 72, "refer": [1, 3, 4, 5, 7], "reg": 143, "regardless": 123, "regex": 32, "regplot": 143, "regress": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 145], "regular": [4, 5, 123], "reinforc": 0, "relat": [45, 88], "relationship": 154, "reload": 73, "rememb": [33, 50, 81, 86, 94], "remov": [46, 48, 49, 62, 118, 132], "renam": [62, 73, 125, 132], "reorgan": 122, "repeat": 123, "replac": 123, "replic": 45, "report": 9, "repres": [28, 52, 56, 123], "represent": [48, 123], "requir": 126, "resampl": 123, "reset": [130, 131, 135], "reset_index": 135, "reshap": 122, "residplot": 145, "resolut": 96, "resourc": [22, 117, 124, 138, 158], "result": [10, 16, 17, 123], "return": [29, 46, 47, 48, 67], "revers": [40, 41, 46, 123], "rmdir": 62, "role": [101, 105], "round": 123, "row": [123, 126, 127, 128, 131, 133, 137], "rugplot": 146, "rule": [69, 81, 83], "run": 80, "sale": 116, "same": [46, 47, 123], "sampl": [21, 101, 103, 105, 106, 123, 159, 161], "save": [61, 116, 136], "scalar": 123, "scale": 4, "scatter": [116, 144], "scatterplot": 154, "scienc": 162, "scope": 89, "script": [77, 123], "seaborn": [139, 140, 141, 142, 143, 147, 148, 149, 150, 158], "search": [32, 73], "second": [52, 123], "section": [21, 103, 106, 159, 161], "see": [83, 116], "segment": 123, "select": [8, 123, 125, 128], "self": [95, 99], "semicolon": 83, "separ": 90, "seq": [47, 48], "sequenc": [32, 45, 90], "sequenti": 142, "seri": [125, 133, 134, 153], "server": 9, "set": [5, 7, 11, 16, 17, 18, 19, 40, 48, 49, 85, 123, 128, 134], "set_axi": 132, "set_index": 134, "setdefault": 48, "setter": 31, "shallow": [46, 48], "shape": 123, "share": [69, 123], "shift": 123, "short": [36, 37], "shortcut": [36, 37], "should": [46, 47, 94, 123], "show": 116, "sign": [87, 123], "similar": [48, 91], "singl": [67, 77, 82, 96, 126, 129, 132], "sixth": 123, "size": 123, "sleep": [58, 59], "slice": [45, 46, 47, 118], "slide": 123, "small": 123, "soap": 116, "solut": [4, 5], "some": 146, "sort": [46, 47, 48, 118, 123, 125, 136, 137], "space": 132, "span": [30, 32, 37, 38, 40, 45, 46, 47, 48, 49, 50, 57, 61, 63, 64, 67, 73, 83, 88, 94], "special": [32, 84, 88, 97], "specif": [24, 46, 47, 48, 64, 128], "specifi": [32, 46, 87], "split": [11, 13, 16, 17, 18, 19, 32], "spread": 64, "squar": 32, "stack": 116, "stai": 99, "star": 32, "start": [24, 32, 135], "statement": [35, 36, 37, 38, 39, 40, 41, 42, 50, 64, 67, 73, 82], "statist": [73, 118, 122, 125, 136], "step": 91, "str": 48, "stream": 28, "strftime": [52, 53, 58], "string": [24, 32, 40, 41, 45, 46, 48, 50, 52, 53, 54, 73, 77, 84, 85, 87], "strip": 148, "strptime": [52, 54, 58], "struct_tim": 58, "structur": [90, 123, 163], "style": [45, 116], "sub": 32, "subclass": 123, "subn": 32, "subpart": 123, "subplot": 116, "subsequ": 123, "subset": [13, 118, 123], "subtract": 123, "suffix": 132, "sum": 123, "summari": [32, 45, 46, 47, 48, 49, 120, 125], "super": 96, "supervis": 0, "support": 45, "suppress": 129, "swap": 123, "swarm": [147, 148], "sy": 73, "symmetr": 49, "syntax": [36, 37, 38, 39, 40, 41, 50, 63], "system": 0, "t": 32, "tabl": 109, "tail": 128, "target": 163, "technic": 163, "tell": 123, "test": [9, 11, 13, 16, 17, 18, 19, 46, 47, 48, 49, 125], "text": 87, "than": [49, 123], "thei": 123, "them": 123, "thi": [46, 48, 94, 116], "thing": [33, 81], "threshold": 8, "through": [27, 45, 46, 47, 48, 49], "throw": [46, 47], "tile": 123, "time": [22, 32, 46, 52, 53, 55, 56, 57, 58, 59, 60, 120, 123, 153], "timedelata": 56, "timedelta": 52, "timestamp": [52, 53, 57], "timezon": [52, 56], "tip": [151, 154], "titan": 151, "titl": [21, 103, 106, 159, 161], "to_dict": 133, "todai": [52, 55, 123], "tomorrow": 123, "tool": 108, "toolbox": 163, "toothpast": 116, "top": [128, 148], "topic": [22, 34, 82, 162], "total": [48, 116, 123, 137], "toyota": 137, "trail": 132, "train": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "transfer": 35, "triangl": 123, "tricki": 49, "triplet": 123, "true": [46, 48, 123], "try": 64, "tupl": [40, 46, 47, 48, 64, 85], "tutori": 24, "two": [45, 52, 56, 67, 123, 134, 137], "txt": 61, "type": [0, 22, 44, 46, 47, 48, 51, 61, 67, 84, 85, 86, 87, 95, 96, 119, 123, 126, 127], "typeerror": [47, 63], "typic": 0, "u": [83, 146], "ubyt": 123, "under": 123, "underscor": 32, "unequ": 123, "unicod": 84, "union": 49, "uniqu": 123, "unit": 7, "univari": 13, "univers": 121, "unpack": [64, 90], "unsupervis": 0, "untidi": 156, "up": 73, "upcom": 24, "updat": [48, 137], "us": [1, 8, 24, 28, 29, 31, 32, 40, 41, 44, 46, 47, 52, 53, 56, 64, 69, 72, 73, 77, 83, 87, 94, 99, 109, 116, 118, 123, 126, 127, 128, 129, 132, 133, 134, 137, 163], "user": [65, 78, 87, 126], "util": 109, "v": [5, 32, 50, 77, 91, 126, 129, 141], "valid": 83, "valu": [29, 46, 47, 48, 67, 83, 87, 94, 123, 126, 128, 131, 133, 153], "valueerror": [54, 63], "variabl": [4, 29, 48, 68, 69, 70, 83, 89, 90, 94, 126, 148], "variou": 87, "vector": [7, 123], "versa": 57, "version": [118, 123], "vertic": [123, 146], "vice": 57, "view": 125, "violin": [148, 150], "violinplot": 151, "virtual": 24, "visual": [8, 146], "vstack": 122, "w": [32, 123], "wai": [32, 46], "want": 50, "warn": 123, "we": [24, 29, 47], "welcom": 163, "what": [0, 20, 40, 41, 45, 46, 47, 48, 49, 52, 67, 69, 71, 72, 73, 75, 76, 78, 89, 91, 99, 101, 105, 122, 123, 125, 146, 156, 157], "when": [29, 41, 44, 46, 48, 120, 123], "where": [32, 126, 131], "which": [46, 123], "while": [40, 41, 42, 87, 125, 132], "whisker": 115, "whitespac": 32, "whose": 123, "why": [0, 22, 40, 41, 47, 96, 99, 118], "wich": 123, "wide": 156, "widget": 142, "width": 87, "window": 123, "without": [31, 67, 123, 133, 135], "word": 32, "work": [27, 45, 53, 54, 136], "workflow": 0, "world": [9, 64, 80, 115, 163], "would": 48, "wrap": 73, "write": [61, 64, 80, 81, 123], "x": [9, 123], "xi": 123, "xlsx": 61, "xml": 61, "y": [9, 123], "yaml": [6, 102, 160], "year": [52, 116], "yesterdai": 123, "yj": 123, "you": [50, 94], "your": [24, 116], "z": [32, 123], "z0": 32, "za": 32, "zero": [32, 123], "zip": 64}})