Search.setIndex({"alltitles": {"0. Computer vision libraries in PyTorch": [[172, "computer-vision-libraries-in-pytorch"]], "0. Simple Input/Output Still works": [[129, "simple-input-output-still-works"]], "05. PyTorch Going Modular": [[181, "pytorch-going-modular"]], "1 distplot()": [[191, "distplot"]], "1. Arithmatic Operators": [[95, "arithmatic-operators"]], "1. Bar Plot": [[196, "bar-plot"]], "1. Basic Operators for concatenation of two or more strings": [[52, "basic-operators-for-concatenation-of-two-or-more-strings"]], "1. Changing a Tuple": [[54, "changing-a-tuple"]], "1. Chat Messages": [[129, "chat-messages"]], "1. Dictionary Membership Test": [[55, "dictionary-membership-test"]], "1. Docstrings for Python Modules": [[84, "docstrings-for-python-modules"]], "1. Easy to Implement": [[35, "easy-to-implement"]], "1. Getting a GPU": [[169, "getting-a-gpu"]], "1. Identity operators": [[95, "identity-operators"]], "1. Implicit Type Conversion": [[93, "implicit-type-conversion"]], "1. Import the numpy package under the name np and print the numpy version and the configuration (\u2605\u2606\u2606)": [[153, "import-the-numpy-package-under-the-name-np-and-print-the-numpy-version-and-the-configuration"]], "1. Indexing": [[54, "indexing"]], "1. List Membership Test": [[53, "list-membership-test"]], "1. Numeric Literals": [[91, "numeric-literals"]], "1. Opening Files in Python": [[68, "opening-files-in-python"]], "1. Python Keywords": [[88, "python-keywords"]], "1. Python Numbers": [[92, "python-numbers"]], "1. Python Output Using print() function": [[94, "python-output-using-print-function"]], "1. Python Statement": [[89, "python-statement"]], "1. Python Syntax Errors": [[70, "python-syntax-errors"]], "1. Python Variables": [[90, "python-variables"]], "1. Python break statement": [[49, "python-break-statement"]], "1. Set Membership Test": [[56, "set-membership-test"]], "1. Simple Sequential Chains": [[116, "simple-sequential-chains"]], "1. Single lined comment:": [[89, "single-lined-comment"]], "1. Strip Plot": [[193, "strip-plot"]], "1. Supervised Learning \ud83c\udf93": [[0, "supervised-learning"]], "1. Tuple Membership Test": [[54, "tuple-membership-test"]], "1. [] - Square brackets": [[39, "square-brackets"]], "1. break Statement in Nested Loop": [[49, "break-statement-in-nested-loop"]], "1. continue Statement in Nested Loop": [[49, "continue-statement-in-nested-loop"]], "1. match.group()": [[39, "match-group"]], "1. re.findall()": [[39, "re-findall"]], "10. () - Group": [[39, "group"]], "10. Creating FoodVision Big": [[178, "creating-foodvision-big"]], "10. Find indices of non-zero elements from [3,7,0,0,9,0] (\u2605\u2606\u2606)": [[153, "find-indices-of-non-zero-elements-from-3-7-0-0-9-0"]], "10.2 Getting data for FoodVision Big": [[178, "getting-data-for-foodvision-big"]], "10.3 Creating a subset of the Food101 dataset for faster experimenting": [[178, "creating-a-subset-of-the-food101-dataset-for-faster-experimenting"]], "10.4 Turning our Food101 datasets into DataLoaders": [[178, "turning-our-food101-datasets-into-dataloaders"]], "10.5 Training FoodVision Big model": [[178, "training-foodvision-big-model"]], "10.6 Inspecting loss curves of FoodVision Big model": [[178, "inspecting-loss-curves-of-foodvision-big-model"]], "10.7 Saving and loading FoodVision Big": [[178, "saving-and-loading-foodvision-big"]], "10.8 Checking FoodVision Big model size": [[178, "checking-foodvision-big-model-size"]], "100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (\u2605\u2605\u2605)": [[153, "compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1d-array-x-i-e-resample-the-elements-of-an-array-with-replacement-n-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means"]], "11. Create a 4x4 identity matrix (\u2605\u2606\u2606)": [[153, "create-a-4x4-identity-matrix"]], "11. Turning our FoodVision Big model into a deployable app": [[178, "turning-our-foodvision-big-model-into-a-deployable-app"]], "11. \\ - Backslash": [[39, "backslash"]], "11.1 Downloading an example image and moving it to the examples directory": [[178, "downloading-an-example-image-and-moving-it-to-the-examples-directory"]], "11.2 Saving Food101 class names to file (class_names.txt)": [[178, "saving-food101-class-names-to-file-class-names-txt"]], "11.3 Turning our FoodVision Big model into a Python script (model.py)": [[178, "turning-our-foodvision-big-model-into-a-python-script-model-py"]], "11.4 Turning our FoodVision Big Gradio app into a Python script (app.py)": [[178, "turning-our-foodvision-big-gradio-app-into-a-python-script-app-py"]], "11.5 Creating a requirements file for FoodVision Big (requirements.txt)": [[178, "creating-a-requirements-file-for-foodvision-big-requirements-txt"]], "11.6 Downloading our FoodVision Big app files": [[178, "downloading-our-foodvision-big-app-files"]], "11.7 Deploying our FoodVision Big app to HuggingFace Spaces": [[178, "deploying-our-foodvision-big-app-to-huggingface-spaces"]], "12. Create a 2x2x2 array with random values (\u2605\u2606\u2606)": [[153, "create-a-2x2x2-array-with-random-values"]], "13. Create a 9x9 array with random values and find the minimum and maximum values (\u2605\u2606\u2606)": [[153, "create-a-9x9-array-with-random-values-and-find-the-minimum-and-maximum-values"]], "15. Create a 2d array with 1 on the border and 0 inside (\u2605\u2606\u2606)": [[153, "create-a-2d-array-with-1-on-the-border-and-0-inside"]], "16. How to add a border (filled with 0\u2019s) around an existing array? (\u2605\u2606\u2606)": [[153, "how-to-add-a-border-filled-with-0s-around-an-existing-array"]], "17. What is the result of the following expression? (\u2605\u2606\u2606)": [[153, "what-is-the-result-of-the-following-expression"]], "18. Create a 6x6 matrix with values 1,2,3,4 just below the diagonal (\u2605\u2606\u2606)": [[153, "create-a-6x6-matrix-with-values-1-2-3-4-just-below-the-diagonal"]], "19. Create a 6x6 matrix and fill it with a checkerboard pattern (\u2605\u2606\u2606)": [[153, "create-a-6x6-matrix-and-fill-it-with-a-checkerboard-pattern"]], "2 jointplot()": [[191, "jointplot"]], "2. . - Period": [[39, "period"]], "2. Closing Files in Python": [[68, "closing-files-in-python"]], "2. Comparison/Relational operators": [[95, "comparison-relational-operators"]], "2. Constants": [[90, "constants"]], "2. Convert a list of numeric value into a one-dimensional NumPy array (\u2605\u2606\u2606)": [[153, "convert-a-list-of-numeric-value-into-a-one-dimensional-numpy-array"]], "2. Deleting a Tuple": [[54, "deleting-a-tuple"]], "2. Docstrings for Python Functions": [[84, "docstrings-for-python-functions"]], "2. Explicit Type Conversion": [[93, "explicit-type-conversion"]], "2. Getting PyTorch to run on the GPU": [[169, "getting-pytorch-to-run-on-the-gpu"]], "2. Inline comments": [[89, "inline-comments"]], "2. Iterating Through a Dictionary": [[55, "iterating-through-a-dictionary"]], "2. Iterating Through a List": [[53, "iterating-through-a-list"]], "2. Iterating Through a Set": [[56, "iterating-through-a-set"]], "2. Iterating Through a Tuple": [[54, "iterating-through-a-tuple"]], "2. Membership operators": [[95, "membership-operators"]], "2. Memory Efficient": [[35, "memory-efficient"]], "2. Negative Indexing": [[54, "negative-indexing"]], "2. Point Plot": [[196, "point-plot"]], "2. Python Identifiers": [[88, "python-identifiers"]], "2. Python Indentation": [[89, "python-indentation"]], "2. Python Input Using input() function": [[94, "python-input-using-input-function"]], "2. Python List []": [[92, "python-list"]], "2. Python Logical Errors (Exceptions)": [[70, "python-logical-errors-exceptions"]], "2. Python String Membership Operators": [[52, "python-string-membership-operators"]], "2. Python continue statement": [[49, "python-continue-statement"]], "2. SERP API": [[125, "serp-api"]], "2. String literals (unicode character strings)": [[91, "string-literals-unicode-character-strings"]], "2. Summarization Chain": [[116, "summarization-chain"]], "2. Unsupervised Learning \ud83e\udde9": [[0, "unsupervised-learning"]], "2. break Statement in Outer Loop": [[49, "break-statement-in-outer-loop"]], "2. continue Statement in Outer Loop": [[49, "continue-statement-in-outer-loop"]], "2. match.start(), match.end() and match.span()": [[39, "match-start-match-end-and-match-span"]], "2. re.split()": [[39, "re-split"]], "2.1 Getting PyTorch to run on Apple Silicon": [[169, "getting-pytorch-to-run-on-apple-silicon"]], "20. Consider a (8,9,10) shape array, what is the index (x,y,z) of the 100th element? (\u2605\u2606\u2606)": [[153, "consider-a-8-9-10-shape-array-what-is-the-index-x-y-z-of-the-100th-element"]], "21. Create a checkerboard 8x8 matrix using the tile function (\u2605\u2606\u2606)": [[153, "create-a-checkerboard-8x8-matrix-using-the-tile-function"]], "22. Normalize a 6x6 random matrix (\u2605\u2606\u2606)": [[153, "normalize-a-6x6-random-matrix"]], "23. find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements. (\u2605\u2606\u2606)": [[153, "find-the-number-of-elements-of-an-array-length-of-one-array-element-in-bytes-and-total-bytes-consumed-by-the-elements"]], "24. Multiply a 6x3 matrix by a 3x4 matrix (real matrix product) (\u2605\u2606\u2606)": [[153, "multiply-a-6x3-matrix-by-a-3x4-matrix-real-matrix-product"]], "25. Given a 1D array, negate all elements which are between 3 and 8, in place. (\u2605\u2606\u2606)": [[153, "given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place"]], "26. What is the output of the following script? (\u2605\u2606\u2606)": [[153, "what-is-the-output-of-the-following-script"]], "27. Write a Python program compare two arrays using numpy (\u2605\u2606\u2606)": [[153, "write-a-python-program-compare-two-arrays-using-numpy"]], "28. What are the result of the following expressions? (\u2605\u2606\u2606)": [[153, "what-are-the-result-of-the-following-expressions"]], "29. How to round away from zero a float array ? (\u2605\u2606\u2606)": [[153, "how-to-round-away-from-zero-a-float-array"]], "3 pairplot()": [[191, "pairplot"]], "3. Boolean literals": [[91, "boolean-literals"]], "3. Count Plot": [[196, "count-plot"]], "3. Create a null vector of size 9 (\u2605\u2606\u2606)": [[153, "create-a-null-vector-of-size-9"]], "3. Deep Learning \ud83e\udde0": [[0, "deep-learning"]], "3. Docstrings for Python Classes": [[84, "docstrings-for-python-classes"]], "3. Logical/Boolean operators": [[95, "logical-boolean-operators"]], "3. Multi lined comment:": [[89, "multi-lined-comment"]], "3. Other List Operations in Python": [[53, "id1"]], "3. Putting tensors (and models) on the GPU": [[169, "putting-tensors-and-models-on-the-gpu"]], "3. Python Comments": [[89, "python-comments"]], "3. Python Import function": [[94, "python-import-function"]], "3. Python NameError": [[70, "python-nameerror"]], "3. Python Relational Operators": [[52, "python-relational-operators"]], "3. Python Tuple ()": [[92, "python-tuple"]], "3. Python pass statement": [[49, "python-pass-statement"]], "3. Represent Infinite Stream": [[35, "represent-infinite-stream"]], "3. Slicing": [[54, "slicing"]], "3. Wolfram Alpha": [[125, "wolfram-alpha"]], "3. Writing to Files in Python": [[68, "writing-to-files-in-python"]], "3. ^ - Caret": [[39, "caret"]], "3. match.re and match.string": [[39, "match-re-and-match-string"]], "3. re.sub()": [[39, "re-sub"]], "3.2.2 Exploring the Four Equations": [[177, "exploring-the-four-equations"]], "3.3 Creating a training loop and training a model on batches of data": [[172, "creating-a-training-loop-and-training-a-model-on-batches-of-data"]], "30. How to find common values between two arrays? (\u2605\u2606\u2606)": [[153, "how-to-find-common-values-between-two-arrays"]], "31. How to ignore all numpy warnings (not recommended)? (\u2605\u2606\u2606)": [[153, "how-to-ignore-all-numpy-warnings-not-recommended"]], "32. Is the following expressions true? (\u2605\u2606\u2606)": [[153, "is-the-following-expressions-true"]], "33. How to get the dates of yesterday, today and tomorrow? (\u2605\u2606\u2606)": [[153, "how-to-get-the-dates-of-yesterday-today-and-tomorrow"]], "34. How to get all the dates corresponding to the month of January 2016? (\u2605\u2605\u2606)": [[153, "how-to-get-all-the-dates-corresponding-to-the-month-of-january-2016"]], "35. How to compute ((A+B)*(-A/2)) in place (without copy)? (\u2605\u2605\u2606)": [[153, "how-to-compute-a-b-a-2-in-place-without-copy"]], "36. Extract the integer part of a random array of positive numbers using 4 different methods (\u2605\u2605\u2606)": [[153, "extract-the-integer-part-of-a-random-array-of-positive-numbers-using-4-different-methods"]], "37. Create a 3x3 matrix with row values ranging from 0 to 2 (\u2605\u2605\u2606)": [[153, "create-a-3x3-matrix-with-row-values-ranging-from-0-to-2"]], "38. Consider a generator function that generates 9 integers and use it to build an array (\u2605\u2606\u2606)": [[153, "consider-a-generator-function-that-generates-9-integers-and-use-it-to-build-an-array"]], "39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (\u2605\u2605\u2606)": [[153, "create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded"]], "4 Levels Of Tone Matching Techniques:": [[138, "levels-of-tone-matching-techniques"]], "4 rugplot()": [[191, "rugplot"]], "4. $ - Dollar": [[39, "dollar"]], "4. Bitwise operators": [[95, "bitwise-operators"]], "4. Docstrings for Python Scripts": [[84, "docstrings-for-python-scripts"]], "4. Docstrings in Python": [[89, "docstrings-in-python"]], "4. How to find the memory size of any array (\u2605\u2606\u2606)": [[153, "how-to-find-the-memory-size-of-any-array"]], "4. Moving tensors back to the CPU": [[169, "moving-tensors-back-to-the-cpu"]], "4. Pipelining Generators": [[35, "pipelining-generators"]], "4. Python IndexError": [[70, "python-indexerror"]], "4. Python Strings": [[92, "python-strings"]], "4. Reading Files in Python": [[68, "reading-files-in-python"]], "4. Reinforcement Learning \ud83c\udfae": [[0, "reinforcement-learning"]], "4. re.subn()": [[39, "re-subn"]], "40. Create a random vector of size 10 and sort it (\u2605\u2605\u2606)": [[153, "create-a-random-vector-of-size-10-and-sort-it"]], "41. How to sum a small array faster than np.sum? (\u2605\u2605\u2606)": [[153, "how-to-sum-a-small-array-faster-than-np-sum"]], "42. Consider two random array A and B, check if they are equal (\u2605\u2605\u2606)": [[153, "consider-two-random-array-a-and-b-check-if-they-are-equal"]], "43. Make an array immutable (read-only) (\u2605\u2605\u2606)": [[153, "make-an-array-immutable-read-only"]], "44. Consider a random 5x2 matrix representing cartesian coordinates, convert them to polar coordinates (\u2605\u2605\u2606)": [[153, "consider-a-random-5x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates"]], "45. Create random vector of size 5 and replace the maximum value by 0 (\u2605\u2605\u2606)": [[153, "create-random-vector-of-size-5-and-replace-the-maximum-value-by-0"]], "46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (\u2605\u2605\u2606)": [[153, "create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area"]], "47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj)) (\u2605\u2605\u2606)": [[153, "given-two-arrays-x-and-y-construct-the-cauchy-matrix-c-cij-1-xi-yj"]], "48. Print the minimum and maximum representable value for each numpy scalar type (\u2605\u2605\u2606)": [[153, "print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type"]], "49. How to print all the values of an array? (\u2605\u2605\u2606)": [[153, "how-to-print-all-the-values-of-an-array"]], "5 Levels Of Summarization: Novice to Expert": [[130, "levels-of-summarization-novice-to-expert"]], "5 kdeplot()": [[191, "kdeplot"]], "5. * - Star": [[39, "star"]], "5. Assignment operators": [[95, "assignment-operators"]], "5. Docstrings for Python Packages": [[84, "docstrings-for-python-packages"]], "5. How to get the documentation of the numpy add function from the command line? (\u2605\u2606\u2606)": [[153, "how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line"]], "5. Python ModuleNotFoundError": [[70, "python-modulenotfounderror"]], "5. Python Set {}": [[92, "python-set"]], "5. re.search()": [[39, "re-search"]], "50. How to find the closest value (to a given scalar) in a vector? (\u2605\u2605\u2606)": [[153, "how-to-find-the-closest-value-to-a-given-scalar-in-a-vector"]], "51. Create a structured array representing a position (x,y) and a color (r,g,b) (\u2605\u2605\u2606)": [[153, "create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b"]], "52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (\u2605\u2605\u2606)": [[153, "consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances"]], "53. How to convert a float (32 bits) array into an integer (32 bits) in place?": [[153, "how-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"]], "54. How to read the following file? (\u2605\u2605\u2606)": [[153, "how-to-read-the-following-file"]], "55. What is the equivalent of enumerate for numpy arrays? (\u2605\u2605\u2606)": [[153, "what-is-the-equivalent-of-enumerate-for-numpy-arrays"]], "56. Generate a generic 2D Gaussian-like array (\u2605\u2605\u2606)": [[153, "generate-a-generic-2d-gaussian-like-array"]], "57. How to randomly place e elements in a 2D array? (\u2605\u2605\u2606)": [[153, "how-to-randomly-place-e-elements-in-a-2d-array"]], "58. Subtract the mean of each row of a matrix (\u2605\u2605\u2606)": [[153, "subtract-the-mean-of-each-row-of-a-matrix"]], "59. How to sort an array by the nth column? (\u2605\u2605\u2606)": [[153, "how-to-sort-an-array-by-the-nth-column"]], "6# 6# 14. Create a random vector of size 20 and find the mean value (\u2605\u2606\u2606)": [[153, "create-a-random-vector-of-size-20-and-find-the-mean-value"]], "6. + - Plus": [[39, "plus"]], "6. Create a null vector of size 12 but the sixth value which is 1 (\u2605\u2606\u2606)": [[153, "create-a-null-vector-of-size-12-but-the-sixth-value-which-is-1"]], "6. Python AttributeError": [[70, "python-attributeerror"]], "6. Python Dictionary {}": [[92, "python-dictionary"]], "6. Special operators": [[95, "special-operators"]], "60. How to tell if a given 2D array has null columns? (\u2605\u2605\u2606)": [[153, "how-to-tell-if-a-given-2d-array-has-null-columns"]], "61. Find the nearest value from a given value in an array (\u2605\u2605\u2606)": [[153, "find-the-nearest-value-from-a-given-value-in-an-array"]], "62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (\u2605\u2605\u2606)": [[153, "considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator"]], "63. Create an array class that has a name attribute (\u2605\u2605\u2606)": [[153, "create-an-array-class-that-has-a-name-attribute"]], "64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (\u2605\u2605\u2605)": [[153, "consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices"]], "65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (\u2605\u2605\u2605)": [[153, "how-to-accumulate-elements-of-a-vector-x-to-an-array-f-based-on-an-index-list-i"]], "66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (\u2605\u2605\u2606)": [[153, "considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors"]], "67. Considering a four dimensions array, how to get sum over the last two axis at once? (\u2605\u2605\u2605)": [[153, "considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once"]], "68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (\u2605\u2605\u2605)": [[153, "considering-a-one-dimensional-vector-d-how-to-compute-means-of-subsets-of-d-using-a-vector-s-of-same-size-describing-subset-indices"]], "69. How to get the diagonal of a dot product? (\u2605\u2605\u2605)": [[153, "how-to-get-the-diagonal-of-a-dot-product"]], "7. ? - Question Mark": [[39, "question-mark"]], "7. Create a vector with values ranging from 20 to 59 (\u2605\u2606\u2606)": [[153, "create-a-vector-with-values-ranging-from-20-to-59"]], "7. Python KeyError": [[70, "python-keyerror"]], "70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (\u2605\u2605\u2605)": [[153, "consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value"]], "71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (\u2605\u2605\u2605)": [[153, "consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5"]], "72. How to swap two rows of an array? (\u2605\u2605\u2605)": [[153, "how-to-swap-two-rows-of-an-array"]], "73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (\u2605\u2605\u2605)": [[153, "consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles"]], "74. Given a sorted array C that corresponds to a bincount, how to produce an array A such that np.bincount(A) == C? (\u2605\u2605\u2605)": [[153, "given-a-sorted-array-c-that-corresponds-to-a-bincount-how-to-produce-an-array-a-such-that-np-bincount-a-c"]], "75. How to compute averages using a sliding window over an array? (\u2605\u2605\u2605)": [[153, "how-to-compute-averages-using-a-sliding-window-over-an-array"]], "76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (\u2605\u2605\u2605)": [[153, "consider-a-one-dimensional-array-z-build-a-two-dimensional-array-whose-first-row-is-z-0-z-1-z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-z-3-z-2-z-1"]], "77. How to negate a boolean, or to change the sign of a float inplace? (\u2605\u2605\u2605)": [[153, "how-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace"]], "78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[153, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-p0-i-p1-i"]], "79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[153, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-set-of-points-p-how-to-compute-distance-from-each-point-j-p-j-to-each-line-i-p0-i-p1-i"]], "8. Python TypeError": [[70, "python-typeerror"]], "8. Reverse a vector (first element becomes last) (\u2605\u2606\u2606)": [[153, "reverse-a-vector-first-element-becomes-last"]], "8. {} - Braces": [[39, "braces"]], "80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (\u2605\u2605\u2605)": [[153, "consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary"]], "81. Consider an array a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], \u2026, [11,12,13,14]]? (\u2605\u2605\u2605)": [[153, "consider-an-array-a-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-b-1-2-3-4-2-3-4-5-3-4-5-6-11-12-13-14"]], "82. Compute a matrix rank (\u2605\u2605\u2605)": [[153, "compute-a-matrix-rank"]], "83. How to find the most frequent value in an array?": [[153, "how-to-find-the-most-frequent-value-in-an-array"]], "84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (\u2605\u2605\u2605)": [[153, "extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix"]], "85. Create a 2D array subclass such that a[i,j] == a[j,i] (\u2605\u2605\u2605)": [[153, "create-a-2d-array-subclass-such-that-a-i-j-a-j-i"]], "86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (\u2605\u2605\u2605)": [[153, "consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-how-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1"]], "87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (\u2605\u2605\u2605)": [[153, "consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4"]], "88. How to implement the Game of Life using numpy arrays? (\u2605\u2605\u2605)": [[153, "how-to-implement-the-game-of-life-using-numpy-arrays"]], "89. How to get the n largest values of an array (\u2605\u2605\u2605)": [[153, "how-to-get-the-n-largest-values-of-an-array"]], "9. Create a 3x3 matrix with values ranging from 12 to 20 (\u2605\u2606\u2606)": [[153, "create-a-3x3-matrix-with-values-ranging-from-12-to-20"]], "9. Python ValueError": [[70, "python-valueerror"]], "9. | - Alternation": [[39, "alternation"]], "9.1 Create transform with data augmentation": [[173, "create-transform-with-data-augmentation"]], "90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (\u2605\u2605\u2605)": [[153, "given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item"]], "91. How to create a record array from a regular array? (\u2605\u2605\u2605)": [[153, "how-to-create-a-record-array-from-a-regular-array"]], "92. Consider a large vector A, compute A to the power of 3 using 3 different methods (\u2605\u2605\u2605)": [[153, "consider-a-large-vector-a-compute-a-to-the-power-of-3-using-3-different-methods"]], "93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (\u2605\u2605\u2605)": [[153, "consider-two-arrays-a-and-b-of-shape-8-3-and-2-2-how-to-find-rows-of-a-that-contain-elements-of-each-row-of-b-regardless-of-the-order-of-the-elements-in-b"]], "94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (\u2605\u2605\u2605)": [[153, "considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3"]], "95. Convert a vector of ints into a matrix binary representation (\u2605\u2605\u2605)": [[153, "convert-a-vector-of-ints-into-a-matrix-binary-representation"]], "96. Given a two dimensional array, how to extract unique rows? (\u2605\u2605\u2605)": [[153, "given-a-two-dimensional-array-how-to-extract-unique-rows"]], "97. Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (\u2605\u2605\u2605)": [[153, "considering-2-vectors-a-b-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function"]], "98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (\u2605\u2605\u2605)?": [[153, "considering-a-path-described-by-two-vectors-x-y-how-to-sample-it-using-equidistant-samples"]], "99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (\u2605\u2605\u2605)": [[153, "given-an-integer-n-and-a-2d-array-x-select-from-x-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n"]], "AI/ML Learning Path": [[207, "ai-ml-learning-path"]], "About Python Programming": [[22, "about-python-programming"]], "Accept float input from User": [[94, "accept-float-input-from-user"]], "Accept multiline input from a user": [[94, "accept-multiline-input-from-a-user"]], "Accepting User Inputs (as both integer and string)": [[94, "accepting-user-inputs-as-both-integer-and-string"]], "Accepting User Inputs (only as integer)": [[94, "accepting-user-inputs-only-as-integer"]], "Access Tuple Elements": [[54, "access-tuple-elements"]], "Access elements from a list": [[53, "access-elements-from-a-list"]], "Accessing Attributes with self Parameter": [[102, "accessing-attributes-with-self-parameter"]], "Accessing Elements from Dictionary": [[55, "accessing-elements-from-dictionary"]], "Accessing output string arguments by name": [[94, "accessing-output-string-arguments-by-name"]], "Accessing the index in for loop": [[47, "accessing-the-index-in-for-loop"]], "Ad Hoc Example Financial Forecast Edit": [[137, "ad-hoc-example-financial-forecast-edit"]], "Add/Change List Elements": [[53, "add-change-list-elements"]], "Adding or Removing Elements": [[148, "adding-or-removing-elements"]], "Additional Regression Plots": [[190, "additional-regression-plots"]], "Adjust train() function to track results with SummaryWriter()": [[176, "adjust-train-function-to-track-results-with-summarywriter"]], "Adjusting model_1 to fit a straight line": [[171, "adjusting-model-1-to-fit-a-straight-line"]], "Advanced Level": [[207, "advanced-level"]], "Advanced Retrieval With LangChain": [[131, "advanced-retrieval-with-langchain"]], "Advanced string processing": [[52, "advanced-string-processing"]], "Advantage": [[80, "advantage"]], "Advantages of Recursion": [[78, "advantages-of-recursion"]], "Advantages of Tuple over List": [[54, "advantages-of-tuple-over-list"]], "Advantages of user-defined functions": [[85, "advantages-of-user-defined-functions"]], "Agents": [[116, "id1"], [117, "agents"]], "Agents - Make OpenAI Do Things For you": [[125, "agents-make-openai-do-things-for-you"]], "Agents \ud83e\udd16\ud83e\udd16": [[116, "agents"]], "Aggregate Statistics (Groupby)": [[166, "aggregate-statistics-groupby"]], "Algorithm Evaluation": [[1, "algorithm-evaluation"]], "An example cell": [[6, "an-example-cell"], [109, "an-example-cell"], [205, "an-example-cell"]], "Analyze Gradient Descent Progress": [[11, "analyze-gradient-descent-progress"], [12, "analyze-gradient-descent-progress"], [13, "analyze-gradient-descent-progress"], [14, "analyze-gradient-descent-progress"], [15, "analyze-gradient-descent-progress"], [16, "analyze-gradient-descent-progress"], [17, "analyze-gradient-descent-progress"]], "Anatomy of Box Plot": [[194, "anatomy-of-box-plot"]], "Anatomy of Violin Plot": [[195, "anatomy-of-violin-plot"]], "Angle between vectors": [[32, "angle-between-vectors"]], "Anomaly Detection Algorithm": [[1, "anomaly-detection-algorithm"]], "Anomaly Detection Using Gaussian Distribution": [[1, "anomaly-detection-using-gaussian-distribution"], [8, "anomaly-detection-using-gaussian-distribution"]], "Apply condition": [[155, "apply-condition"]], "Architecture of a classification neural network": [[171, "architecture-of-a-classification-neural-network"]], "Argument of an Exception": [[71, "argument-of-an-exception"]], "Array": [[148, "array"]], "Array Attributes and Methods": [[149, "array-attributes-and-methods"]], "Array Manipulation": [[148, "array-manipulation"]], "Array datatypes": [[149, "array-datatypes"]], "Array indexing": [[150, "array-indexing"]], "Array math": [[151, "array-math"]], "Arrays reorganizing": [[152, "arrays-reorganizing"]], "Assigning value to constant in Python": [[90, "assigning-value-to-constant-in-python"]], "Assigning values to Variables in Python": [[90, "assigning-values-to-variables-in-python"]], "Backpropagation": [[7, "backpropagation"]], "Backpropagation Algorithm": [[7, "backpropagation-algorithm"]], "Backward Iteration using the reversed() function": [[47, "backward-iteration-using-the-reversed-function"]], "Bar Chart": [[145, "bar-chart"]], "Bar Plot, Point Plot and Count plot": [[196, "bar-plot-point-plot-and-count-plot"]], "Basic Graph": [[145, "basic-graph"]], "Basic Statistics": [[148, "basic-statistics"]], "Basic operations": [[169, "basic-operations"]], "Batch Gradient Descent": [[4, "batch-gradient-descent"], [5, "batch-gradient-descent"]], "Batch Messages": [[129, "batch-messages"]], "Be careful when copying arrays!!!": [[150, "be-careful-when-copying-arrays"]], "Become one with the data (data preparation)": [[173, "become-one-with-the-data-data-preparation"]], "Beginner": [[2, "beginner"]], "Beginner Level": [[207, "beginner-level"]], "Bonus: Chapters With Timestamps": [[141, "bonus-chapters-with-timestamps"]], "Boolean Masking and Advanced Indexing": [[152, "boolean-masking-and-advanced-indexing"]], "Boolean array indexing": [[150, "boolean-array-indexing"]], "Box and Whiskers Chart": [[145, "box-and-whiskers-chart"]], "Box plot #1": [[145, "box-plot-1"]], "Box plot #2": [[145, "box-plot-2"]], "Breaking appart strings": [[52, "breaking-appart-strings"]], "Bringing FoodVision Mini to life by creating a Gradio demo": [[178, "bringing-foodvision-mini-to-life-by-creating-a-gradio-demo"]], "Broadcasting": [[151, "broadcasting"]], "Broadcasting with array reorganizing": [[152, "broadcasting-with-array-reorganizing"]], "Build model": [[170, "build-model"]], "Building Custom Iterators": [[34, "building-custom-iterators"]], "Building a Gradio interface": [[178, "building-a-gradio-interface"]], "Building a PyTorch linear model": [[170, "building-a-pytorch-linear-model"]], "Building a model": [[171, "building-a-model"]], "Building a model with non-linearity": [[171, "building-a-model-with-non-linearity"]], "Building a multi-class classification model in PyTorch": [[171, "building-a-multi-class-classification-model-in-pytorch"]], "Building a training and testing loop": [[171, "building-a-training-and-testing-loop"]], "Building color palettes:": [[187, "building-color-palettes"]], "Built-In Class Attributes": [[102, "built-in-class-attributes"]], "Built-in Functions with Set": [[56, "built-in-functions-with-set"]], "Built-in Higher Order Functions": [[37, "built-in-higher-order-functions"]], "Built-in functions to Work with Python": [[52, "built-in-functions-to-work-with-python"]], "Business idea: Job Data As A Service": [[135, "business-idea-job-data-as-a-service"], [136, "business-idea-job-data-as-a-service"]], "Calculate Model Training Precision": [[14, "calculate-model-training-precision"], [15, "calculate-model-training-precision"], [16, "calculate-model-training-precision"], [17, "calculate-model-training-precision"], [18, "calculate-model-training-precision"], [19, "calculate-model-training-precision"]], "Calculating patch embedding input and output shapes by hand": [[177, "calculating-patch-embedding-input-and-output-shapes-by-hand"]], "Calculus - Fourier Series": [[27, "calculus-fourier-series"]], "Canberra Distance": [[30, "canberra-distance"]], "Capital-pi notation": [[28, "capital-pi-notation"]], "Capital-sigma notation": [[29, "capital-sigma-notation"]], "Cart ^": [[39, "cart"]], "Catching Exceptions in Python": [[71, "catching-exceptions-in-python"]], "Catching Specific Exceptions in Python": [[71, "catching-specific-exceptions-in-python"]], "Catching exceptions with continue statement": [[49, "catching-exceptions-with-continue-statement"]], "Categorical Data Background": [[192, "categorical-data-background"]], "Cell mode vs. script mode": [[174, "cell-mode-vs-script-mode"]], "Chaining Decorators in Python": [[37, "chaining-decorators-in-python"]], "Chains \u26d3\ufe0f\u26d3\ufe0f\u26d3\ufe0f": [[116, "chains"]], "Change tensor datatype": [[169, "change-tensor-datatype"]], "Changing Dictionary to JSON": [[68, "changing-dictionary-to-json"]], "Changing Directory chdir() -": [[69, "changing-directory-chdir"]], "Changing JSON to Dictionary": [[68, "changing-json-to-dictionary"]], "Changing and Adding Dictionary elements": [[55, "changing-and-adding-dictionary-elements"]], "Chat Message History": [[116, "chat-message-history"]], "Chat Messages": [[116, "chat-messages"]], "Chat Model": [[116, "chat-model"]], "Chatbots": [[117, "chatbots"]], "Chebyshev Distance": [[30, "chebyshev-distance"]], "Check python datatypes": [[24, "check-python-datatypes"]], "Checking the contents of a PyTorch model": [[170, "checking-the-contents-of-a-pytorch-model"]], "Checking the size of EffNetB2 feature extractor": [[178, "checking-the-size-of-effnetb2-feature-extractor"]], "Checking the size of ViT feature extractor": [[178, "checking-the-size-of-vit-feature-extractor"]], "Chunk your data up into smaller documents": [[132, "chunk-your-data-up-into-smaller-documents"]], "Class": [[101, "class"]], "Class Constructor": [[101, "class-constructor"]], "Class Without Getters and Setters": [[38, "class-without-getters-and-setters"]], "Code Understanding": [[117, "code-understanding"]], "Code blocks and outputs": [[25, "code-blocks-and-outputs"], [107, "code-blocks-and-outputs"], [111, "code-blocks-and-outputs"]], "Collecting EffNetB2 feature extractor stats": [[178, "collecting-effnetb2-feature-extractor-stats"]], "Collecting ViT feature extractor stats": [[178, "collecting-vit-feature-extractor-stats"]], "Combining Arrays": [[148, "combining-arrays"]], "Common Python String Methods": [[52, "common-python-string-methods"]], "Compare DataFrame drop() vs. pop() vs. del": [[159, "compare-dataframe-drop-vs-pop-vs-del"]], "Compare model results": [[173, "compare-model-results"]], "Compare model results and training time": [[172, "compare-model-results-and-training-time"]], "Comparing model results, prediction times and size": [[178, "comparing-model-results-prediction-times-and-size"]], "Comparision operators in Python": [[80, "comparision-operators-in-python"]], "Comparison": [[148, "comparison"]], "Concepts": [[208, "concepts"]], "Concepts at glance": [[2, "concepts-at-glance"]], "Conditional Changes": [[166, "conditional-changes"]], "Conditional statements": [[42, "conditional-statements"]], "Conditionals in List Comprehension": [[57, "conditionals-in-list-comprehension"]], "Constants  -": [[80, "constants"]], "Construct and train Model 1": [[173, "construct-and-train-model-1"]], "Constructors in Python": [[102, "constructors-in-python"]], "Content with notebooks": [[25, "content-with-notebooks"], [107, "content-with-notebooks"], [111, "content-with-notebooks"]], "Contextual Compression": [[131, "contextual-compression"]], "Control Flow Statements": [[42, "control-flow-statements"]], "Control Statements in Python": [[49, "control-statements-in-python"]], "Control Statements in Python FAQs": [[49, "control-statements-in-python-faqs"]], "Controlling Aesthetics of Seaborn Plots": [[185, "controlling-aesthetics-of-seaborn-plots"]], "Convert Pandas DataFrame to Python dictionary": [[163, "convert-pandas-dataframe-to-python-dictionary"]], "Copying/Sorting": [[148, "copying-sorting"]], "Core engineering": [[208, "core-engineering"]], "Cosine Distance": [[30, "cosine-distance"]], "Cost Function": [[4, "cost-function"], [5, "cost-function"], [7, "cost-function"]], "Cost Function (Distortion)": [[3, "cost-function-distortion"]], "Course Structure": [[208, "course-structure"]], "Create DataFrame from Hierarchical lists as columns": [[157, "create-dataframe-from-hierarchical-lists-as-columns"]], "Create DataFrame from dict using constructor": [[156, "create-dataframe-from-dict-using-constructor"]], "Create DataFrame from hierarchical lists as rows": [[157, "create-dataframe-from-hierarchical-lists-as-rows"]], "Create DataFrame from list by changing data type": [[157, "create-dataframe-from-list-by-changing-data-type"]], "Create DataFrame from list of dict": [[156, "create-dataframe-from-list-of-dict"]], "Create DataFrame from list using constructor": [[157, "create-dataframe-from-list-using-constructor"]], "Create DataFrame from list with a customized column name": [[157, "create-dataframe-from-list-with-a-customized-column-name"]], "Create DataFrame from list with a customized index": [[157, "create-dataframe-from-list-with-a-customized-index"]], "Create DataFrame from multiple lists": [[157, "create-dataframe-from-multiple-lists"]], "Create DataLoaders for ViT": [[178, "create-dataloaders-for-vit"]], "Create DataLoaders using automatically created transforms": [[176, "create-dataloaders-using-automatically-created-transforms"]], "Create DataLoaders using manually created transforms": [[176, "create-dataloaders-using-manually-created-transforms"]], "Create Datasets and DataLoaders": [[175, "create-datasets-and-dataloaders"], [176, "create-datasets-and-dataloaders"], [177, "create-datasets-and-dataloaders"], [179, "create-datasets-and-dataloaders"], [180, "create-datasets-and-dataloaders"]], "Create Datasets and DataLoaders (data_setup.py)": [[174, "create-datasets-and-dataloaders-data-setup-py"]], "Create Datasets and DataLoaders (script mode)": [[180, "create-datasets-and-dataloaders-script-mode"]], "Create Generators in Python": [[35, "create-generators-in-python"]], "Create Pandas DataFrame from Python Dictionary": [[156, "create-pandas-dataframe-from-python-dictionary"]], "Create Pandas DataFrame from Python List": [[157, "create-pandas-dataframe-from-python-list"]], "Create Test Objects": [[155, "create-test-objects"]], "Create TinyVGG model class": [[173, "create-tinyvgg-model-class"]], "Create a NumPy Array": [[149, "create-a-numpy-array"]], "Create a custom Dataset to replicate ImageFolder": [[173, "create-a-custom-dataset-to-replicate-imagefolder"]], "Create a function to display random images": [[173, "create-a-function-to-display-random-images"]], "Create a helper function to build SummaryWriter() instances": [[176, "create-a-helper-function-to-build-summarywriter-instances"]], "Create a helper function to set seeds": [[176, "create-a-helper-function-to-set-seeds"]], "Create a notebook with MyST Markdown": [[6, "create-a-notebook-with-myst-markdown"], [109, "create-a-notebook-with-myst-markdown"], [205, "create-a-notebook-with-myst-markdown"]], "Create embeddings of your documents to get ready for semantic search": [[132, "create-embeddings-of-your-documents-to-get-ready-for-semantic-search"]], "Create experiments and set up training code": [[176, "create-experiments-and-set-up-training-code"]], "Create feature extractor models": [[176, "create-feature-extractor-models"]], "Create the Transformer Encoder": [[177, "create-the-transformer-encoder"]], "Create train & test loop functions": [[173, "create-train-test-loop-functions"]], "Create train and test Dataset\u2019s and DataLoader\u2019s": [[173, "create-train-and-test-datasets-and-dataloaders"]], "Creating Custom Exceptions": [[72, "creating-custom-exceptions"]], "Creating DataLoaders for EffNetB2": [[178, "creating-dataloaders-for-effnetb2"]], "Creating Instance Objects": [[102, "creating-instance-objects"]], "Creating Python Dictionary": [[55, "creating-python-dictionary"]], "Creating Python List": [[53, "creating-python-list"]], "Creating Python Sets": [[56, "creating-python-sets"]], "Creating Python Tuple": [[54, "creating-python-tuple"]], "Creating a Lambda Function": [[57, "creating-a-lambda-function"]], "Creating a Transformer Encoder by combining our custom made layers": [[177, "creating-a-transformer-encoder-by-combining-our-custom-made-layers"]], "Creating a Transformer Encoder with PyTorch\u2019s Transformer layers": [[177, "creating-a-transformer-encoder-with-pytorchs-transformer-layers"]], "Creating a ViT feature extractor": [[178, "creating-a-vit-feature-extractor"]], "Creating a demos folder to store our FoodVision Mini app files": [[178, "creating-a-demos-folder-to-store-our-foodvision-mini-app-files"]], "Creating a folder for storing Python scripts": [[180, "creating-a-folder-for-storing-python-scripts"]], "Creating a folder of example images to use with our FoodVision Mini demo": [[178, "creating-a-folder-of-example-images-to-use-with-our-foodvision-mini-demo"]], "Creating a function to make an EffNetB2 feature extractor": [[178, "creating-a-function-to-make-an-effnetb2-feature-extractor"]], "Creating a function to make predictions across the test dataset": [[178, "creating-a-function-to-make-predictions-across-the-test-dataset"]], "Creating a function to map our inputs and outputs": [[178, "creating-a-function-to-map-our-inputs-and-outputs"]], "Creating a function to save the model": [[179, "creating-a-function-to-save-the-model"], [180, "creating-a-function-to-save-the-model"]], "Creating a function to save the model (script mode)": [[180, "creating-a-function-to-save-the-model-script-mode"]], "Creating a function to save the model (utils.py)": [[174, "creating-a-function-to-save-the-model-utils-py"]], "Creating a function to time our experiments": [[172, "creating-a-function-to-time-our-experiments"]], "Creating a helper function to get class names": [[173, "creating-a-helper-function-to-get-class-names"]], "Creating a list of example images": [[178, "creating-a-list-of-example-images"]], "Creating a loss function": [[177, "creating-a-loss-function"]], "Creating a loss function and optimizer for a multi-class PyTorch model": [[171, "creating-a-loss-function-and-optimizer-for-a-multi-class-pytorch-model"]], "Creating a loss function and optimizer in PyTorch": [[170, "creating-a-loss-function-and-optimizer-in-pytorch"]], "Creating a model and transforms for FoodVision Big": [[178, "creating-a-model-and-transforms-for-foodvision-big"]], "Creating a module in Python": [[80, "creating-a-module-in-python"]], "Creating a range and tensors like": [[169, "creating-a-range-and-tensors-like"]], "Creating a requirements file for FoodVision Mini (requirements.txt)": [[178, "creating-a-requirements-file-for-foodvision-mini-requirements-txt"]], "Creating a train() function to combine train_step() and test_step()": [[173, "creating-a-train-function-to-combine-train-step-and-test-step"]], "Creating a training and testing loop for a multi-class PyTorch model": [[171, "creating-a-training-and-testing-loop-for-a-multi-class-pytorch-model"]], "Creating a transform for torchvision.models (auto creation)": [[175, "creating-a-transform-for-torchvision-models-auto-creation"]], "Creating a transform for torchvision.models (manual creation)": [[175, "creating-a-transform-for-torchvision-models-manual-creation"]], "Creating an EffNetB2 feature extractor": [[178, "creating-an-effnetb2-feature-extractor"]], "Creating an Object in Python": [[102, "creating-an-object-in-python"]], "Creating an empty set is a bit tricky.": [[56, "creating-an-empty-set-is-a-bit-tricky"]], "Creating an optimization loop in PyTorch": [[170, "creating-an-optimization-loop-in-pytorch"]], "Creating an optimizer": [[177, "creating-an-optimizer"]], "Creating image patches with torch.nn.Conv2d()": [[177, "creating-image-patches-with-torch-nn-conv2d"]], "Creating mutli-class classification data": [[171, "creating-mutli-class-classification-data"]], "Creating tensors": [[169, "creating-tensors"]], "Creating the class token embedding": [[177, "creating-the-class-token-embedding"]], "Creating the position embedding": [[177, "creating-the-position-embedding"]], "Creating train_step() and test_step() functions and train() to combine them": [[174, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [179, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [180, "creating-train-step-and-test-step-functions-and-train-to-combine-them"]], "Creating train_step() and test_step() functions and train() to combine them (script mode)": [[180, "creating-train-step-and-test-step-functions-and-train-to-combine-them-script-mode"]], "Creating transforms and loading data for Model 0": [[173, "creating-transforms-and-loading-data-for-model-0"]], "Custom Prompts": [[143, "custom-prompts"]], "Customizing Exception Classes": [[72, "customizing-exception-classes"]], "Data": [[170, "data"], [191, "data"]], "Data (preparing and loading)": [[170, "data-preparing-and-loading"]], "Data Cleaning": [[155, "data-cleaning"]], "Data Hiding": [[102, "data-hiding"]], "Data structures and algorithms": [[97, "data-structures-and-algorithms"]], "DataFrame Attributes": [[155, "dataframe-attributes"]], "DataFrame GroupBy": [[155, "dataframe-groupby"]], "DataFrame Iteration": [[155, "dataframe-iteration"]], "DataFrame Join": [[155, "dataframe-join"]], "DataFrame Options": [[155, "dataframe-options"]], "DataFrame Sorting": [[155, "dataframe-sorting"]], "DataFrame constructor": [[155, "dataframe-constructor"]], "DataFrame constructor vs from_dict()": [[156, "dataframe-constructor-vs-from-dict"]], "DataFrame conversion": [[155, "dataframe-conversion"]], "DataFrame creation": [[155, "dataframe-creation"]], "DataFrame filter columns": [[155, "dataframe-filter-columns"]], "DataFrame from dict by changing the column data type": [[156, "dataframe-from-dict-by-changing-the-column-data-type"]], "DataFrame from dict nested dict": [[156, "dataframe-from-dict-nested-dict"]], "DataFrame from dict where values are variable-length lists": [[156, "dataframe-from-dict-where-values-are-variable-length-lists"]], "DataFrame from dict with a single value": [[156, "dataframe-from-dict-with-a-single-value"]], "DataFrame from dict with dict keys as a row": [[156, "dataframe-from-dict-with-dict-keys-as-a-row"]], "DataFrame from dict with key and value as a column": [[156, "dataframe-from-dict-with-key-and-value-as-a-column"]], "DataFrame from dict with required columns only": [[156, "dataframe-from-dict-with-required-columns-only"]], "DataFrame from dict with user-defined indexes": [[156, "dataframe-from-dict-with-user-defined-indexes"]], "DataFrame metadata": [[155, "dataframe-metadata"]], "DataFrame modification": [[155, "dataframe-modification"]], "DataFrame rename columns": [[155, "dataframe-rename-columns"]], "DataFrame selection": [[155, "dataframe-selection"]], "DataFrame to dict by row": [[163, "dataframe-to-dict-by-row"]], "DataFrame to dict by row index": [[163, "dataframe-to-dict-by-row-index"]], "DataFrame to dict using into parameter": [[163, "dataframe-to-dict-using-into-parameter"]], "DataFrame to dict with a list of values": [[163, "dataframe-to-dict-with-a-list-of-values"]], "DataFrame to dict with one column as the key": [[163, "dataframe-to-dict-with-one-column-as-the-key"]], "DataFrame to dict with pandas series of values": [[163, "dataframe-to-dict-with-pandas-series-of-values"]], "DataFrame to dict without header and index": [[163, "dataframe-to-dict-without-header-and-index"]], "Dataframe from CSV": [[155, "dataframe-from-csv"]], "Dataframe from dict": [[155, "dataframe-from-dict"]], "Datasets": [[9, "datasets"]], "Decorating Functions with Parameters": [[37, "decorating-functions-with-parameters"]], "Decorators in Python": [[37, "decorators-in-python"]], "Defining a Class in Python": [[102, "defining-a-class-in-python"]], "Defining a Closure Function": [[36, "defining-a-closure-function"]], "Defining a Function": [[74, "defining-a-function"]], "Defining a function with parameters": [[74, "defining-a-function-with-parameters"]], "Defining a function with parameters and return value": [[74, "defining-a-function-with-parameters-and-return-value"]], "Defining a function without any parameters": [[74, "defining-a-function-without-any-parameters"]], "Defining a function without parameters and return value": [[74, "defining-a-function-without-parameters-and-return-value"]], "Definition": [[3, "definition"], [4, "definition"], [5, "definition"], [7, "definition"]], "Delete Objects": [[102, "delete-objects"]], "Delete object properties": [[102, "delete-object-properties"]], "Delete/Remove List Elements": [[53, "delete-remove-list-elements"]], "Deleting Files": [[68, "deleting-files"]], "Density Estimation": [[1, "density-estimation"]], "Deployed Gradio app structure": [[178, "deployed-gradio-app-structure"]], "Deploying our FoodVision Mini app to HuggingFace Spaces": [[178, "deploying-our-foodvision-mini-app-to-huggingface-spaces"]], "Description": [[3, "description"]], "Determinant": [[151, "determinant"]], "Dictionary Built-in Dictionary Functions": [[55, "dictionary-built-in-dictionary-functions"]], "Differences Between Interpreter and Compiler": [[98, "differences-between-interpreter-and-compiler"]], "Differences between Generator function and Normal function": [[35, "differences-between-generator-function-and-normal-function"]], "Different types of ML \ud83d\udcda": [[0, "different-types-of-ml"]], "Different types of machine learning model deployment": [[178, "different-types-of-machine-learning-model-deployment"]], "Different ways to track machine learning experiments": [[176, "different-ways-to-track-machine-learning-experiments"]], "Disadvantages of Recursion": [[78, "disadvantages-of-recursion"]], "Display numbers in floating-point format": [[94, "display-numbers-in-floating-point-format"]], "Display output Number in various type format": [[94, "display-output-number-in-various-type-format"]], "Dissimilarity Measure": [[30, "dissimilarity-measure"]], "Docstring Formats": [[84, "docstring-formats"]], "Docstrings": [[74, "docstrings"]], "Document Loaders": [[116, "document-loaders"]], "Documents": [[116, "documents"]], "Dot product": [[32, "dot-product"]], "Download different datasets": [[176, "download-different-datasets"]], "Downloading our FoodVision Mini app files": [[178, "downloading-our-foodvision-mini-app-files"]], "Draw Decision Boundaries": [[14, "draw-decision-boundaries"], [15, "draw-decision-boundaries"]], "Draw a scatterplot for each pairwise relationship": [[199, "draw-a-scatterplot-for-each-pairwise-relationship"]], "Draw strips of observations on top of a box plot": [[193, "draw-strips-of-observations-on-top-of-a-box-plot"]], "Draw strips of observations on top of a violin plot": [[193, "draw-strips-of-observations-on-top-of-a-violin-plot"]], "Draw swarm observations on top of a violin plot": [[193, "draw-swarm-observations-on-top-of-a-violin-plot"]], "Drop NA from defined rows": [[161, "drop-na-from-defined-rows"]], "Drop all duplicates": [[160, "drop-all-duplicates"]], "Drop all the columns using loc": [[159, "drop-all-the-columns-using-loc"]], "Drop column by index position": [[159, "drop-column-by-index-position"]], "Drop column by suppressing errors": [[159, "drop-column-by-suppressing-errors"]], "Drop column from multi-index DataFrame": [[159, "drop-column-from-multi-index-dataframe"]], "Drop column in place": [[159, "drop-column-in-place"]], "Drop column using a function": [[159, "drop-column-using-a-function"]], "Drop column using pandas DataFrame delete": [[159, "drop-column-using-pandas-dataframe-delete"]], "Drop column using pandas DataFrame.pop() function": [[159, "drop-column-using-pandas-dataframe-pop-function"]], "Drop column where all values are missing": [[161, "drop-column-where-all-values-are-missing"]], "Drop column where at least one value is missing": [[161, "drop-column-where-at-least-one-value-is-missing"]], "Drop column with missing values in place": [[161, "drop-column-with-missing-values-in-place"]], "Drop column with the number of NA": [[161, "drop-column-with-the-number-of-na"]], "Drop columns": [[155, "drop-columns"]], "Drop columns in pandas DataFrame": [[159, "drop-columns-in-pandas-dataframe"]], "Drop columns with NA in pandas DataFrame": [[161, "drop-columns-with-na-in-pandas-dataframe"]], "Drop duplicates and reset the index": [[160, "drop-duplicates-and-reset-the-index"], [161, "drop-duplicates-and-reset-the-index"]], "Drop duplicates but keep first": [[160, "drop-duplicates-but-keep-first"]], "Drop duplicates but keep last": [[160, "drop-duplicates-but-keep-last"]], "Drop duplicates from defined columns": [[160, "drop-duplicates-from-defined-columns"]], "Drop duplicates in pandas DataFrame": [[160, "drop-duplicates-in-pandas-dataframe"]], "Drop duplicates in place": [[160, "drop-duplicates-in-place"]], "Drop first n columns": [[159, "drop-first-n-columns"]], "Drop multiple columns": [[159, "drop-multiple-columns"]], "Drop range of columns using iloc": [[159, "drop-range-of-columns-using-iloc"]], "Drop single column": [[159, "drop-single-column"]], "Drop the last column": [[159, "drop-the-last-column"]], "Encapsulation": [[101, "encapsulation"]], "Enjoy Learning \ud83d\ude03": [[208, "enjoy-learning"]], "Ensemble Retriever": [[131, "ensemble-retriever"]], "Enumerate": [[71, "enumerate"]], "Equation 1 overview": [[177, "equation-1-overview"]], "Equation 1: Split data into patches and creating the class, position and patch embedding": [[177, "equation-1-split-data-into-patches-and-creating-the-class-position-and-patch-embedding"]], "Equation 2 overview": [[177, "equation-2-overview"]], "Equation 2: Multi-Head Attention (MSA)": [[177, "equation-2-multi-head-attention-msa"]], "Equation 3 overview": [[177, "equation-3-overview"]], "Equation 3: Multilayer Perceptron (MLP)": [[177, "equation-3-multilayer-perceptron-mlp"]], "Equation 4 overview": [[177, "equation-4-overview"]], "Escape Sequence": [[52, "escape-sequence"]], "Escape character \\": [[39, "escape-character"]], "Essentials": [[208, "essentials"]], "Estimating Parameters for a Gaussian": [[1, "estimating-parameters-for-a-gaussian"]], "Euclidian Distance": [[30, "euclidian-distance"]], "Evaluate model by plotting loss curves": [[175, "evaluate-model-by-plotting-loss-curves"]], "Evaluating a model trained with non-linear activation functions": [[171, "evaluating-a-model-trained-with-non-linear-activation-functions"]], "Evaluation": [[117, "evaluation"]], "Example 1. Even function": [[27, "example-1-even-function"]], "Example 10: Print year, month, hour, minute and timestamp": [[59, "example-10-print-year-month-hour-minute-and-timestamp"]], "Example 11: Difference between two dates and times": [[59, "example-11-difference-between-two-dates-and-times"]], "Example 12: Difference between two timedelta objects": [[59, "example-12-difference-between-two-timedelta-objects"]], "Example 13: Printing negative timedelta object": [[59, "example-13-printing-negative-timedelta-object"]], "Example 14: Time duration in seconds": [[59, "example-14-time-duration-in-seconds"]], "Example 15: Format date using strftime()": [[59, "example-15-format-date-using-strftime"]], "Example 16: strptime()": [[59, "example-16-strptime"]], "Example 1:": [[46, "example-1"], [87, "example-1"]], "Example 1: Current time using datetime object": [[63, "example-1-current-time-using-datetime-object"]], "Example 1: Declaring and assigning value to a constant": [[90, "example-1-declaring-and-assigning-value-to-a-constant"]], "Example 1: Declaring and assigning value to a variable": [[90, "example-1-declaring-and-assigning-value-to-a-variable"]], "Example 1: Get Current Date and Time": [[59, "example-1-get-current-date-and-time"]], "Example 1: Python get today\u2019s date": [[62, "example-1-python-get-todays-date"]], "Example 1: Python sleep()": [[66, "example-1-python-sleep"]], "Example 1: Python timestamp to datetime": [[64, "example-1-python-timestamp-to-datetime"]], "Example 1: datetime to string using strftime()": [[60, "example-1-datetime-to-string-using-strftime"]], "Example 1: string to datetime object": [[61, "example-1-string-to-datetime-object"]], "Example 2:": [[46, "example-2"], [87, "example-2"]], "Example 2: Creating string from a timestamp": [[60, "example-2-creating-string-from-a-timestamp"]], "Example 2: Current date in different formats": [[62, "example-2-current-date-in-different-formats"]], "Example 2: Current time using time module": [[63, "example-2-current-time-using-time-module"]], "Example 2: Declaring multiple variables in one line** using comma  ,  and semicolon ;": [[90, "example-2-declaring-multiple-variables-in-one-line-using-comma-and-semicolon"]], "Example 2: Get Current Date": [[59, "example-2-get-current-date"]], "Example 2: Python create a digital clock": [[66, "example-2-python-create-a-digital-clock"]], "Example 2: Python datetime to timestamp": [[64, "example-2-python-datetime-to-timestamp"]], "Example 2: string to datetime object": [[61, "example-2-string-to-datetime-object"]], "Example 3: Changing the value of a variable": [[90, "example-3-changing-the-value-of-a-variable"]], "Example 3: Current time of a timezone": [[63, "example-3-current-time-of-a-timezone"]], "Example 3: Date object to represent a date": [[59, "example-3-date-object-to-represent-a-date"]], "Example 3: Get the current date and time": [[62, "example-3-get-the-current-date-and-time"]], "Example 3: Locale\u2019s appropriate date and time": [[60, "example-3-locales-appropriate-date-and-time"]], "Example 3: Python multithreading": [[66, "example-3-python-multithreading"]], "Example 4: Get current date": [[59, "example-4-get-current-date"]], "Example 4: Time Objects to Represent Time": [[63, "example-4-time-objects-to-represent-time"]], "Example 4: sleep() in a multithreaded program": [[66, "example-4-sleep-in-a-multithreaded-program"]], "Example 5: Difference Between Two Points in Time Using": [[63, "example-5-difference-between-two-points-in-time-using"]], "Example 5: Get date from a timestamp": [[59, "example-5-get-date-from-a-timestamp"]], "Example 6: Difference Between Two Points in Time Using timedelata": [[63, "example-6-difference-between-two-points-in-time-using-timedelata"]], "Example 6: Print today\u2019s year, month and day": [[59, "example-6-print-todays-year-month-and-day"]], "Example 7: Time object to represent time": [[59, "example-7-time-object-to-represent-time"]], "Example 8: Print hour, minute, second and microsecond": [[59, "example-8-print-hour-minute-second-and-microsecond"]], "Example 9: Python datetime object": [[59, "example-9-python-datetime-object"]], "Example : Arithmetic operators in Python": [[95, "example-arithmetic-operators-in-python"]], "Example : Comparison operators in Python": [[95, "example-comparison-operators-in-python"]], "Example : Identity operators in Python": [[95, "example-identity-operators-in-python"]], "Example : Logical operators in Python": [[95, "example-logical-operators-in-python"]], "Example : Membership operators in Python": [[95, "example-membership-operators-in-python"]], "Example : Share a global Variable Across Python Modules": [[76, "example-share-a-global-variable-across-python-modules"]], "Example Selectors": [[116, "example-selectors"]], "Example Using decimal Module": [[80, "example-using-decimal-module"]], "Example Using math Module": [[80, "example-using-math-module"]], "Example Using operator Module": [[80, "example-using-operator-module"]], "Example Using os Module": [[80, "example-using-os-module"]], "Example Using random Module": [[80, "example-using-random-module"]], "Example Using statistics Module": [[80, "example-using-statistics-module"]], "Example Using string Module": [[80, "example-using-string-module"]], "Example Using sys Module": [[80, "example-using-sys-module"]], "Example of Inheritance in Python": [[103, "example-of-inheritance-in-python"]], "Example of Method Overriding in Python": [[103, "example-of-method-overriding-in-python"]], "Example of RegEx with Metacharacters": [[39, "example-of-regex-with-metacharacters"]], "Example to convert pandas DataFrame to dict": [[163, "example-to-convert-pandas-dataframe-to-dict"]], "Example:": [[49, "example"], [87, "example"]], "Example: Nested for loop": [[47, "example-nested-for-loop"]], "Example: Nested for loop to print pattern": [[47, "example-nested-for-loop-to-print-pattern"]], "Example: Nested while loop": [[48, "example-nested-while-loop"]], "Example: Nested while loop to print the pattern": [[48, "example-nested-while-loop-to-print-the-pattern"]], "Example: User-Defined Exception in Python": [[72, "example-user-defined-exception-in-python"]], "Examples": [[28, "examples"], [29, "examples"]], "Exceptions in Python": [[71, "exceptions-in-python"]], "Exercise 10: Merge two data frames using the following condition": [[167, "exercise-10-merge-two-data-frames-using-the-following-condition"]], "Exercise 1: From the given dataset print the first and last five rows": [[167, "exercise-1-from-the-given-dataset-print-the-first-and-last-five-rows"]], "Exercise 1: Read Total profit of all months and show it using a line plot": [[146, "exercise-1-read-total-profit-of-all-months-and-show-it-using-a-line-plot"]], "Exercise 2: Clean the dataset and update the CSV file": [[167, "exercise-2-clean-the-dataset-and-update-the-csv-file"]], "Exercise 2: Get total profit of all months and show line plot with the following Style properties": [[146, "exercise-2-get-total-profit-of-all-months-and-show-line-plot-with-the-following-style-properties"]], "Exercise 3: Find the most expensive car company name": [[167, "exercise-3-find-the-most-expensive-car-company-name"]], "Exercise 3: Read all product sales data and show it  using a multiline plot": [[146, "exercise-3-read-all-product-sales-data-and-show-it-using-a-multiline-plot"]], "Exercise 4: Print All Toyota Cars details": [[167, "exercise-4-print-all-toyota-cars-details"]], "Exercise 4: Read toothpaste sales data of each month and show it using a scatter plot": [[146, "exercise-4-read-toothpaste-sales-data-of-each-month-and-show-it-using-a-scatter-plot"]], "Exercise 5: Count total cars per company": [[167, "exercise-5-count-total-cars-per-company"]], "Exercise 5: Read face cream and facewash product sales data and show it using the bar chart": [[146, "exercise-5-read-face-cream-and-facewash-product-sales-data-and-show-it-using-the-bar-chart"]], "Exercise 6: Find each company\u2019s Higesht price car": [[167, "exercise-6-find-each-companys-higesht-price-car"]], "Exercise 6: Read sales data of bathing soap of all months and show it using a bar chart. Save this plot to your hard disk": [[146, "exercise-6-read-sales-data-of-bathing-soap-of-all-months-and-show-it-using-a-bar-chart-save-this-plot-to-your-hard-disk"]], "Exercise 7: Find the average mileage of each car making company": [[167, "exercise-7-find-the-average-mileage-of-each-car-making-company"]], "Exercise 7: Read the total profit of each month and show it using the histogram to see the most common profit ranges": [[146, "exercise-7-read-the-total-profit-of-each-month-and-show-it-using-the-histogram-to-see-the-most-common-profit-ranges"]], "Exercise 8: Calculate total sale data for last year for each product and show it using a Pie chart": [[146, "exercise-8-calculate-total-sale-data-for-last-year-for-each-product-and-show-it-using-a-pie-chart"]], "Exercise 8: Sort all cars by Price column": [[167, "exercise-8-sort-all-cars-by-price-column"]], "Exercise 9: Concatenate two data frames using the following conditions": [[167, "exercise-9-concatenate-two-data-frames-using-the-following-conditions"]], "Exercise 9: Read Bathing soap facewash of all months and display it using the Subplot": [[146, "exercise-9-read-bathing-soap-facewash-of-all-months-and-display-it-using-the-subplot"]], "Exercise Question 10: Read all product sales data and show it using the stack plot": [[146, "exercise-question-10-read-all-product-sales-data-and-show-it-using-the-stack-plot"]], "Exercises \u279e <span class='label label-default'>Level 1</span>": [[37, "exercises-level-1"], [39, "exercises-level-1"], [45, "exercises-level-1"], [47, "exercises-level-1"], [53, "exercises-level-1"], [54, "exercises-level-1"], [56, "exercises-level-1"], [64, "exercises-level-1"], [68, "exercises-level-1"], [71, "exercises-level-1"], [74, "exercises-level-1"], [80, "exercises-level-1"], [90, "exercises-level-1"], [101, "exercises-level-1"]], "Exercises \u279e <span class='label label-default'>Level 2</span>": [[37, "exercises-level-2"], [39, "exercises-level-2"], [45, "exercises-level-2"], [47, "exercises-level-2"], [53, "exercises-level-2"], [54, "exercises-level-2"], [56, "exercises-level-2"], [68, "exercises-level-2"], [74, "exercises-level-2"], [80, "exercises-level-2"], [90, "exercises-level-2"], [101, "exercises-level-2"]], "Exercises \u279e <span class='label label-default'>Level 3</span>": [[37, "exercises-level-3"], [39, "exercises-level-3"], [45, "exercises-level-3"], [47, "exercises-level-3"], [56, "exercises-level-3"], [74, "exercises-level-3"], [80, "exercises-level-3"]], "Expert Level": [[207, "expert-level"]], "Exploring Figure 1": [[177, "exploring-figure-1"]], "Exploring Table 1": [[177, "exploring-table-1"]], "Exporting Data": [[155, "exporting-data"]], "Extra Credit: Loop this process through many twitter accounts": [[138, "extra-credit-loop-this-process-through-many-twitter-accounts"]], "Extra learning": [[170, "extra-learning"]], "Extra resources": [[171, "extra-resources"], [172, "extra-resources"], [173, "extra-resources"], [174, "extra-resources"], [176, "extra-resources"], [178, "extra-resources"]], "Extra rsources": [[177, "extra-rsources"]], "Extra-curriculum": [[175, "extra-curriculum"]], "Extract Data From Calls & Video Transcripts/Interviews": [[143, "extract-data-from-calls-video-transcripts-interviews"]], "Extract Structured Data From Text: Expert Mode (Using Function Calling)": [[135, "extract-structured-data-from-text-expert-mode-using-function-calling"]], "Extract Structured Data From Text: Expert Mode (Using Kor)": [[136, "extract-structured-data-from-text-expert-mode-using-kor"]], "Extraction": [[117, "extraction"]], "FacetGrid": [[200, "facetgrid"], [200, "id1"]], "Factor Plot": [[197, "factor-plot"]], "Fashion MNIST": [[9, "fashion-mnist"]], "Feature Scaling": [[4, "feature-scaling"]], "Features (variables)": [[4, "features-variables"]], "File Positions": [[68, "file-positions"]], "File Types": [[68, "file-types"]], "File with csv Extension": [[68, "file-with-csv-extension"]], "File with json Extension": [[68, "file-with-json-extension"]], "File with txt Extension": [[68, "file-with-txt-extension"]], "File with xlsx Extension": [[68, "file-with-xlsx-extension"]], "File with xml Extension": [[68, "file-with-xml-extension"]], "Files": [[68, "files"]], "Filter, Sort, and Groupby": [[155, "filter-sort-and-groupby"]], "Filtering Data": [[166, "filtering-data"]], "Find Anomalies Using Gaussian Distribution": [[8, "find-anomalies-using-gaussian-distribution"]], "Finding the min, max, mean, sum, etc (aggregation)": [[169, "finding-the-min-max-mean-sum-etc-aggregation"]], "Fing Outliers": [[8, "fing-outliers"]], "Flatten Data": [[152, "flatten-data"]], "Flattening the patch embedding with torch.nn.Flatten()": [[177, "flattening-the-patch-embedding-with-torch-nn-flatten"]], "FoodVision Mini model deployment experiment outline": [[178, "foodvision-mini-model-deployment-experiment-outline"]], "For instance if you want to generate a list of numbers": [[57, "for-instance-if-you-want-to-generate-a-list-of-numbers"]], "Format Code List": [[60, "format-code-list"], [61, "format-code-list"]], "Format output strings by its positions": [[94, "format-output-strings-by-its-positions"]], "Forward (or Feedforward) Propagation": [[7, "forward-or-feedforward-propagation"]], "Forward Propagation Example": [[7, "forward-propagation-example"]], "Freezing the base model and changing the output layer to suit our needs": [[175, "freezing-the-base-model-and-changing-the-output-layer-to-suit-our-needs"]], "Frozenset methods": [[56, "frozenset-methods"]], "Function Argument and Parameter": [[77, "function-argument-and-parameter"]], "Function Calling Hello World Example": [[135, "function-calling-hello-world-example"]], "Function Calling Models": [[116, "function-calling-models"]], "Function Calling with OpenAI\u2019s GPT Models: An Interactive Tutorial": [[137, "function-calling-with-openais-gpt-models-an-interactive-tutorial"]], "Function as a Parameter": [[36, "function-as-a-parameter"]], "Function as a Parameter of Another Function": [[77, "function-as-a-parameter-of-another-function"]], "Function as a Return Value": [[36, "function-as-a-return-value"]], "Function pass Statement": [[74, "function-pass-statement"]], "Function return Statement": [[74, "function-return-statement"]], "Functionizing training and test loops": [[172, "functionizing-training-and-test-loops"]], "Functions in Python Math Module": [[82, "functions-in-python-math-module"]], "Gaussian (Normal) Distribution": [[1, "gaussian-normal-distribution"]], "General form": [[27, "general-form"]], "Generate Random Numbers": [[152, "generate-random-numbers"]], "Generators in Python": [[35, "generators-in-python"]], "Generic Seaborn Plots:": [[187, "generic-seaborn-plots"]], "Get Current Directory getcwd() -": [[69, "get-current-directory-getcwd"]], "Get Data": [[177, "get-data"]], "Get a users Tweets": [[138, "get-a-users-tweets"]], "Get data": [[173, "get-data"], [174, "get-data"], [175, "get-data"], [176, "get-data"], [179, "get-data"], [180, "get-data"]], "Get multiple input values from a user in one line": [[94, "get-multiple-input-values-from-a-user-in-one-line"]], "Get the statistics of DataFrame": [[155, "get-the-statistics-of-dataframe"]], "Getting Started with Python": [[24, "getting-started-with-python"]], "Getting a dataset": [[172, "getting-a-dataset"]], "Getting a pretrained ViT model and creating a feature extractor": [[177, "getting-a-pretrained-vit-model-and-creating-a-feature-extractor"]], "Getting a pretrained model": [[175, "getting-a-pretrained-model"]], "Getting a pretrained model, freezing the base layers and changing the classifier head": [[176, "getting-a-pretrained-model-freezing-the-base-layers-and-changing-the-classifier-head"]], "Getting a summary of our model with torchinfo.summary()": [[175, "getting-a-summary-of-our-model-with-torchinfo-summary"]], "Getting a visual summary of our ViT model": [[177, "getting-a-visual-summary-of-our-vit-model"]], "Getting back to Decorators": [[37, "getting-back-to-decorators"]], "Getting data": [[178, "getting-data"]], "Getting information from tensors": [[169, "getting-information-from-tensors"]], "Getting prediction probabilities for a multi-class PyTorch model": [[171, "getting-prediction-probabilities-for-a-multi-class-pytorch-model"]], "Getting setup": [[175, "getting-setup"], [176, "getting-setup"], [177, "getting-setup"], [178, "getting-setup"]], "Getting specific: What\u2019s ViT made of?": [[177, "getting-specific-whats-vit-made-of"]], "Global Variables": [[75, "global-variables"]], "Global Variables Across Python Modules": [[76, "global-variables-across-python-modules"]], "Global and local variables": [[75, "global-and-local-variables"]], "Global in Nested Functions": [[76, "global-in-nested-functions"]], "Going Modular Scripts": [[182, "going-modular-scripts"]], "Going Modular: Part 1 (cell mode)": [[179, "going-modular-part-1-cell-mode"]], "Going Modular: Part 2 (script mode)": [[180, "going-modular-part-2-script-mode"]], "Going from raw model outputs to predicted labels (logits -> prediction probabilities -> prediction labels)": [[171, "going-from-raw-model-outputs-to-predicted-labels-logits-prediction-probabilities-prediction-labels"]], "Good news is \ud83d\ude0d": [[208, "good-news-is"]], "Gradient Computation": [[7, "gradient-computation"]], "Gradio overview": [[178, "gradio-overview"]], "Group the strips by a categorical variable": [[193, "group-the-strips-by-a-categorical-variable"]], "HIGH-LEVEL LANGUAGES": [[98, "high-level-languages"]], "Hamming Distance": [[30, "hamming-distance"]], "Handling timezone in Python": [[59, "handling-timezone-in-python"]], "Help topics": [[89, "help-topics"]], "Here is a list of all the escape sequences supported by Python.": [[52, "here-is-a-list-of-all-the-escape-sequences-supported-by-python"]], "Here\u2019s my first section": [[21, "heres-my-first-section"], [110, "heres-my-first-section"], [113, "heres-my-first-section"], [204, "heres-my-first-section"]], "Here\u2019s my sample title": [[21, "heres-my-sample-title"], [110, "heres-my-sample-title"], [113, "heres-my-sample-title"], [204, "heres-my-sample-title"]], "Hierarchical Inheritance": [[103, "hierarchical-inheritance"]], "Higher Order Functions": [[36, "higher-order-functions"]], "Histogram": [[145, "histogram"]], "How Are Sets Better Than Other DataTypes?": [[56, "how-are-sets-better-than-other-datatypes"]], "How strftime() works?": [[60, "how-strftime-works"]], "How strptime() works?": [[61, "how-strptime-works"]], "How to Install NumPy?": [[148, "how-to-install-numpy"]], "How to access characters in a string?": [[52, "how-to-access-characters-in-a-string"]], "How to call a function in python?": [[74, "how-to-call-a-function-in-python"]], "How to change or delete a string?": [[52, "how-to-change-or-delete-a-string"]], "How to create a string in Python?": [[52, "how-to-create-a-string-in-python"]], "How to deal with overfitting": [[173, "how-to-deal-with-overfitting"]], "How to deal with underfitting": [[173, "how-to-deal-with-underfitting"]], "How to get current date and time in Python?": [[62, "how-to-get-current-date-and-time-in-python"]], "How to import modules in Python?": [[80, "how-to-import-modules-in-python"]], "How to learn Python?": [[22, "how-to-learn-python"]], "How to print blank lines": [[87, "how-to-print-blank-lines"]], "How to slice a string in Python?": [[52, "how-to-slice-a-string-in-python"]], "How to slice lists in Python?": [[53, "how-to-slice-lists-in-python"]], "How to use DataFrame.head() function": [[158, "how-to-use-dataframe-head-function"]], "How to use DataFrame.tail() function": [[158, "how-to-use-dataframe-tail-function"]], "How\u2019s it going to function?": [[178, "hows-it-going-to-function"]], "Hybrid Inheritance": [[103, "hybrid-inheritance"]], "Hypothesis": [[4, "hypothesis"]], "Hypothesis (the Model)": [[5, "hypothesis-the-model"]], "Identity matrix": [[31, "identity-matrix"]], "Illustrate Hidden Layers Perceptrons": [[17, "illustrate-hidden-layers-perceptrons"], [18, "illustrate-hidden-layers-perceptrons"], [19, "illustrate-hidden-layers-perceptrons"]], "Import Dependencies": [[8, "import-dependencies"], [10, "import-dependencies"], [11, "import-dependencies"], [12, "import-dependencies"], [13, "import-dependencies"], [14, "import-dependencies"], [15, "import-dependencies"], [16, "import-dependencies"], [17, "import-dependencies"], [18, "import-dependencies"], [19, "import-dependencies"]], "Import NumPy and Check Version": [[148, "import-numpy-and-check-version"]], "Importing Data": [[155, "importing-data"]], "Importing PyTorch": [[169, "importing-pytorch"]], "Importing PyTorch and setting up device-agnostic code": [[173, "importing-pytorch-and-setting-up-device-agnostic-code"]], "Importing module from a package": [[83, "importing-module-from-a-package"]], "Importing the Package": [[118, "importing-the-package"]], "Improving a model (from a model perspective)": [[171, "improving-a-model-from-a-model-perspective"]], "In the upcoming tutorials, we will deep dive into specific concepts of Python, hold on your breath and start your journey": [[24, "in-the-upcoming-tutorials-we-will-deep-dive-into-specific-concepts-of-python-hold-on-your-breath-and-start-your-journey"]], "Index": [[155, "index"]], "Indexes - Structuring documents to LLMs can work with them": [[116, "indexes-structuring-documents-to-llms-can-work-with-them"]], "Indexing": [[155, "indexing"]], "Indexing (selecting data from tensors)": [[169, "indexing-selecting-data-from-tensors"]], "Indexing a 1D array": [[150, "indexing-a-1d-array"]], "Indexing a 2D array (matrices)": [[150, "indexing-a-2d-array-matrices"]], "Informal introduction to python: using python as calculator": [[24, "informal-introduction-to-python-using-python-as-calculator"]], "Inheritance": [[101, "inheritance"]], "Inheritance in Python": [[103, "inheritance-in-python"]], "Init and Train Linear Regression Model": [[11, "init-and-train-linear-regression-model"], [12, "init-and-train-linear-regression-model"], [13, "init-and-train-linear-regression-model"]], "Init and Train Logistic Regression Model": [[10, "init-and-train-logistic-regression-model"], [14, "init-and-train-logistic-regression-model"], [15, "init-and-train-logistic-regression-model"], [16, "init-and-train-logistic-regression-model"], [17, "init-and-train-logistic-regression-model"]], "Init and Train MLP Model": [[18, "init-and-train-mlp-model"], [19, "init-and-train-mlp-model"]], "Input and output shapes": [[171, "input-and-output-shapes"]], "Input and output shapes of a computer vision model": [[172, "input-and-output-shapes-of-a-computer-vision-model"]], "Inputs and outputs, layers and blocks": [[177, "inputs-and-outputs-layers-and-blocks"]], "Insert columns": [[155, "insert-columns"]], "Inspecting EffNetB2 loss curves": [[178, "inspecting-effnetb2-loss-curves"]], "Inspecting Strings": [[52, "inspecting-strings"]], "Inspecting ViT loss curves": [[178, "inspecting-vit-loss-curves"]], "Installation": [[118, "installation"]], "Instance Variables and Methods": [[101, "instance-variables-and-methods"]], "Instructing LLMs To Match Tone": [[138, "instructing-llms-to-match-tone"]], "Integer array indexing": [[150, "integer-array-indexing"]], "Interacting with APIs": [[117, "interacting-with-apis"]], "Interactive widget to create a sequential cubehelix palette:": [[187, "interactive-widget-to-create-a-sequential-cubehelix-palette"]], "Interesting User Feedback (Persona: Investor):": [[135, "interesting-user-feedback-persona-investor"], [136, "interesting-user-feedback-persona-investor"]], "Intermediate Level": [[207, "intermediate-level"]], "Interpreter Vs Compiler": [[98, "interpreter-vs-compiler"]], "Introduction": [[118, "introduction"]], "Introduction to *args and **kwargs in Python": [[40, "introduction-to-args-and-kwargs-in-python"]], "Introduction to HuggingFace": [[114, "introduction-to-huggingface"]], "Introduction to Machine Learning! \ud83d\ude80": [[0, "introduction-to-machine-learning"]], "Introduction to tensors": [[169, "introduction-to-tensors"]], "Iris Flowers": [[9, "iris-flowers"]], "Iterate Dictionary using for loop": [[47, "iterate-dictionary-using-for-loop"]], "Iterate List using for loop": [[47, "iterate-list-using-for-loop"]], "Iterate List using while loop": [[48, "iterate-list-using-while-loop"]], "Iterate Numbers using while loop": [[48, "iterate-numbers-using-while-loop"]], "Iterate Set using for loop": [[47, "iterate-set-using-for-loop"]], "Iterate String using for loop": [[47, "iterate-string-using-for-loop"]], "Iterate String using while loop": [[48, "iterate-string-using-while-loop"]], "Iterate Tuple using for loop": [[47, "iterate-tuple-using-for-loop"]], "Iterating Through a string": [[52, "iterating-through-a-string"]], "Iterating Through an Iterator": [[34, "iterating-through-an-iterator"]], "Iterative statements": [[42, "iterative-statements"]], "Iterators in Python": [[34, "iterators-in-python"]], "Java is both Compiled and Interpreted.": [[98, "java-is-both-compiled-and-interpreted"]], "Join/Combine": [[155, "join-combine"]], "Jupyter Demos": [[1, "jupyter-demos"], [3, "jupyter-demos"], [4, "jupyter-demos"], [5, "jupyter-demos"], [7, "jupyter-demos"]], "K-Means Algorithm": [[3, "k-means-algorithm"]], "K-Means Algorithm Demo": [[10, "k-means-algorithm-demo"]], "KEY DIFFERENCE": [[98, "key-difference"]], "KEY SIMILARITIES": [[98, "key-similarities"]], "Key Points to Remember": [[57, "key-points-to-remember"], [93, "key-points-to-remember"]], "Key Points to Remember:": [[101, "key-points-to-remember"]], "Kor Hello World Example": [[136, "kor-hello-world-example"]], "LM Plot and Reg Plot": [[188, "lm-plot-and-reg-plot"]], "Lambda Function": [[57, "lambda-function"]], "LangChain Components": [[116, "langchain-components"]], "LangChain Cookbook Part 2: Use Cases\ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73": [[117, "langchain-cookbook-part-2-use-cases"]], "LangChain Cookbook \ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73": [[116, "langchain-cookbook"]], "LangChain Magic": [[139, "langchain-magic"]], "LangChain Support For Functions": [[137, "langchain-support-for-functions"]], "LangChain Use Cases": [[117, "langchain-use-cases"]], "LangGraphs": [[121, "langgraphs"]], "LangServe": [[122, "langserve"]], "LangSmith": [[123, "langsmith"]], "Langchain": [[120, "langchain"]], "Langchain expression language": [[124, "langchain-expression-language"]], "Langchain modules": [[119, "langchain-modules"]], "Langchain projects gallery": [[120, "langchain-projects-gallery"], [144, "langchain-projects-gallery"]], "Language Model": [[116, "language-model"]], "Learn Python Programming": [[22, "learn-python-programming"]], "Let us see valid variable names": [[90, "let-us-see-valid-variable-names"]], "Letter Value (LV) Plot": [[198, "letter-value-lv-plot"]], "Let\u2019s break down the different components of the code.": [[87, "lets-break-down-the-different-components-of-the-code"]], "Let\u2019s discuss some plots that allow us to visualize the distribution of a dataset. These plots are:": [[191, "lets-discuss-some-plots-that-allow-us-to-visualize-the-distribution-of-a-dataset-these-plots-are"]], "Let\u2019s implement with dataset": [[191, "lets-implement-with-dataset"]], "Level 1: Basic Prompt - Summarize a couple sentences": [[130, "level-1-basic-prompt-summarize-a-couple-sentences"]], "Level 2: Prompt Templates - Summarize a couple paragraphs": [[130, "level-2-prompt-templates-summarize-a-couple-paragraphs"]], "Level 3: Map Reduce - Summarize a couple pages multiple pages": [[130, "level-3-map-reduce-summarize-a-couple-pages-multiple-pages"]], "Level 4: Best Representation Vectors - Summarize an entire book": [[130, "level-4-best-representation-vectors-summarize-an-entire-book"]], "Level 5: Agents - Summarize an unknown amount of text": [[130, "level-5-agents-summarize-an-unknown-amount-of-text"]], "Line Graph": [[145, "line-graph"]], "Linear Algebra": [[26, "linear-algebra"]], "Linear Algebra - Matrices": [[31, "linear-algebra-matrices"]], "Linear Algebra - Vectors": [[32, "linear-algebra-vectors"]], "Linear Regression": [[4, "linear-regression"]], "Linspace": [[152, "linspace"]], "List Comprehension vs String vs For Loop in Python": [[57, "list-comprehension-vs-string-vs-for-loop-in-python"]], "List Comprehension: Elegant way to create new List": [[53, "list-comprehension-elegant-way-to-create-new-list"]], "List Comprehensions vs Lambda functions": [[57, "list-comprehensions-vs-lambda-functions"]], "List Directories and Files listdir() -": [[69, "list-directories-and-files-listdir"]], "List Index": [[53, "list-index"]], "List comprehension can be combined with if statement": [[57, "list-comprehension-can-be-combined-with-if-statement"]], "List of Tools": [[125, "list-of-tools"]], "Literal Collections": [[91, "literal-collections"]], "Load Data from File": [[152, "load-data-from-file"]], "Load Documents": [[128, "load-documents"]], "Load Fifa Data": [[145, "load-fifa-data"]], "Load Necessary Libraries": [[145, "load-necessary-libraries"]], "Load Your LLM": [[128, "load-your-llm"]], "Load in NumPy Library": [[149, "load-in-numpy-library"]], "Load in the best model and make predictions with it": [[176, "load-in-the-best-model-and-make-predictions-with-it"]], "Load the Data": [[8, "load-the-data"], [10, "load-the-data"], [11, "load-the-data"], [12, "load-the-data"], [13, "load-the-data"], [14, "load-the-data"], [15, "load-the-data"], [16, "load-the-data"], [17, "load-the-data"], [18, "load-the-data"], [19, "load-the-data"]], "Load up our texts and documents": [[131, "load-up-our-texts-and-documents"]], "Load up your HTML from your company page": [[139, "load-up-your-html-from-your-company-page"]], "Load your data": [[132, "load-your-data"]], "Loading Datasets in Seaborn": [[184, "loading-datasets-in-seaborn"]], "Loading a saved PyTorch model\u2019s state_dict()": [[170, "loading-a-saved-pytorch-models-state-dict"]], "Loading data into Pandas": [[166, "loading-data-into-pandas"]], "Loading in a custom image with PyTorch": [[173, "loading-in-a-custom-image-with-pytorch"]], "Local Variables": [[75, "local-variables"]], "LogSpace": [[152, "logspace"]], "Logistic Regression": [[5, "logistic-regression"]], "Logistic Regression With Linear Boundary Demo": [[14, "logistic-regression-with-linear-boundary-demo"]], "Logistic Regression With Non-Linear Boundary Demo": [[15, "logistic-regression-with-non-linear-boundary-demo"]], "Loops in Python": [[47, "loops-in-python"], [48, "loops-in-python"]], "MACHINE CODE": [[98, "machine-code"]], "MNIST (Handwritten Digits)": [[9, "mnist-handwritten-digits"]], "Main Use Cases": [[117, "main-use-cases"]], "Main takeaways": [[173, "main-takeaways"], [175, "main-takeaways"], [176, "main-takeaways"], [177, "main-takeaways"], [178, "main-takeaways"]], "Make a prediction on a custom image": [[173, "make-a-prediction-on-a-custom-image"]], "Make and evaluate random predictions with best model": [[172, "make-and-evaluate-random-predictions-with-best-model"]], "Make classification data and get it ready": [[171, "make-classification-data-and-get-it-ready"]], "Make predictions and evaluate the model": [[171, "make-predictions-and-evaluate-the-model"]], "Make predictions and get Model 0 results": [[172, "make-predictions-and-get-model-0-results"]], "Make predictions on a custom image": [[177, "make-predictions-on-a-custom-image"]], "Make predictions on images from the test set": [[175, "make-predictions-on-images-from-the-test-set"]], "Making a New Directory mkdir() -": [[69, "making-a-new-directory-mkdir"]], "Making a confusion matrix for further prediction evaluation": [[172, "making-a-confusion-matrix-for-further-prediction-evaluation"]], "Making a model (TinyVGG)": [[179, "making-a-model-tinyvgg"], [180, "making-a-model-tinyvgg"]], "Making a model (TinyVGG) (script mode)": [[180, "making-a-model-tinyvgg-script-mode"]], "Making a model (model_builder.py)": [[174, "making-a-model-model-builder-py"]], "Making and evaluating predictions with a PyTorch multi-class model": [[171, "making-and-evaluating-predictions-with-a-pytorch-multi-class-model"]], "Making and timing predictions with EffNetB2": [[178, "making-and-timing-predictions-with-effnetb2"]], "Making and timing predictions with ViT": [[178, "making-and-timing-predictions-with-vit"]], "Making changes to the data": [[166, "making-changes-to-the-data"]], "Making predictions": [[170, "making-predictions"]], "Making predictions on a custom image": [[175, "making-predictions-on-a-custom-image"]], "Making predictions using torch.inference_mode()": [[170, "making-predictions-using-torch-inference-mode"]], "Making predictions with a trained PyTorch model (inference)": [[170, "making-predictions-with-a-trained-pytorch-model-inference"]], "Making predictions with our trained models and timing them": [[178, "making-predictions-with-our-trained-models-and-timing-them"]], "Manhattan Distance": [[30, "manhattan-distance"]], "Manipulating tensors (tensor operations)": [[169, "manipulating-tensors-tensor-operations"]], "Markdown + notebooks": [[25, "markdown-notebooks"], [107, "markdown-notebooks"], [111, "markdown-notebooks"]], "Markdown Files": [[20, "markdown-files"], [108, "markdown-files"], [112, "markdown-files"]], "Match object": [[39, "match-object"]], "Mathematics": [[148, "mathematics"]], "Mathematics essentials": [[33, "mathematics-essentials"]], "Mathematics for Machine Learning": [[23, "mathematics-for-machine-learning"]], "Matplotlib": [[145, "matplotlib"]], "Matplotlib vs. Seaborn Plotting Code": [[186, "matplotlib-vs-seaborn-plotting-code"]], "Matrices": [[169, "matrices"]], "Matrix Multiplication": [[151, "matrix-multiplication"]], "Matrix addition": [[31, "matrix-addition"]], "Matrix determinant": [[31, "matrix-determinant"]], "Matrix inverse": [[31, "matrix-inverse"]], "Matrix multiplication": [[31, "matrix-multiplication"]], "Matrix multiplication (is all you need)": [[169, "matrix-multiplication-is-all-you-need"]], "Matrix operations": [[31, "matrix-operations"]], "Matrix subtraction": [[31, "matrix-subtraction"]], "Matrix transpose": [[31, "matrix-transpose"]], "Memory": [[116, "memory"]], "MetaCharacters": [[39, "metacharacters"]], "Metadata info of DataFrame": [[155, "metadata-info-of-dataframe"]], "Method #1: Simple - Describe the tone you would like": [[138, "method-1-simple-describe-the-tone-you-would-like"]], "Method #2: Intermediate - Specify your tone description + examples": [[138, "method-2-intermediate-specify-your-tone-description-examples"]], "Method #3: AI-Assisted: Ask the LLM help with tone descriptions": [[138, "method-3-ai-assisted-ask-the-llm-help-with-tone-descriptions"]], "Method 4 - Technique Fusion: Combine multiple techniques to mimic tone": [[138, "method-4-technique-fusion-combine-multiple-techniques-to-mimic-tone"]], "Method Overriding": [[103, "method-overriding"]], "Method Resolution Order in Python": [[103, "method-resolution-order-in-python"]], "Method to Modify Class Default Values": [[101, "method-to-modify-class-default-values"]], "Microchips Tests (Artificial)": [[9, "microchips-tests-artificial"]], "Minkowski Distance": [[30, "minkowski-distance"]], "Miscellaneous": [[152, "miscellaneous"]], "Model 0: Build a baseline model": [[172, "model-0-build-a-baseline-model"]], "Model 0: TinyVGG without data augmentation": [[173, "model-0-tinyvgg-without-data-augmentation"]], "Model 1: Building a better model with non-linearity": [[172, "model-1-building-a-better-model-with-non-linearity"]], "Model 1: TinyVGG with Data Augmentation": [[173, "model-1-tinyvgg-with-data-augmentation"]], "Model 2: Building a Convolutional Neural Network (CNN)": [[172, "model-2-building-a-convolutional-neural-network-cnn"]], "Models - The interface to the AI brains": [[116, "models-the-interface-to-the-ai-brains"]], "Modify Object Properties": [[102, "modify-object-properties"]], "Modifying a set in Python": [[56, "modifying-a-set-in-python"]], "More": [[148, "more"], [148, "id2"]], "More classification evaluation metrics": [[171, "more-classification-evaluation-metrics"]], "Moving our trained EffNetB2 model to our FoodVision Mini demo directory": [[178, "moving-our-trained-effnetb2-model-to-our-foodvision-mini-demo-directory"]], "Multi-class Classification": [[7, "multi-class-classification"]], "Multi-class Classification (One-vs-All)": [[5, "multi-class-classification-one-vs-all"]], "Multi-line Docstrings in Python": [[84, "multi-line-docstrings-in-python"]], "Multi-line statement": [[89, "multi-line-statement"]], "MultiQuery": [[131, "multiquery"]], "Multidimensional": [[28, "multidimensional"], [29, "multidimensional"]], "Multiple Fields": [[136, "multiple-fields"]], "Multiple Results": [[135, "multiple-results"]], "Multithreading in Python": [[66, "multithreading-in-python"]], "Multivariate Linear Regression Demo": [[11, "multivariate-linear-regression-demo"]], "Multivariate Logistic Regression Demo": [[16, "multivariate-logistic-regression-demo"], [17, "multivariate-logistic-regression-demo"]], "My workflow": [[174, "my-workflow"]], "My workflow for replicating papers": [[177, "my-workflow-for-replicating-papers"]], "MyST markdown": [[25, "myst-markdown"], [107, "myst-markdown"], [111, "myst-markdown"]], "Need of Encapsulation": [[101, "need-of-encapsulation"]], "Negative indexing": [[53, "negative-indexing"]], "Nested Loops in List Comprehension": [[57, "nested-loops-in-list-comprehension"]], "Nested break loops": [[49, "nested-break-loops"]], "Nested continue loops": [[49, "nested-continue-loops"]], "Nested for loops": [[47, "nested-for-loops"]], "Nested while loops": [[48, "nested-while-loops"]], "Network Model (Set of Neurons)": [[7, "network-model-set-of-neurons"]], "Neural Network": [[7, "neural-network"]], "Neural Network (Multilayer Perceptron) Demo": [[18, "neural-network-multilayer-perceptron-demo"], [19, "neural-network-multilayer-perceptron-demo"]], "Neuron Model (Logistic Unit)": [[7, "neuron-model-logistic-unit"]], "Non-Linear Y(X) Dependency (Artificial)": [[9, "non-linear-y-x-dependency-artificial"]], "Non-linear Regression Demo": [[12, "non-linear-regression-demo"]], "Nonlocal Variables": [[75, "nonlocal-variables"]], "Nonlocal variable in a nested function": [[36, "nonlocal-variable-in-a-nested-function"]], "Normal Equation": [[4, "normal-equation"]], "Notebooks with MyST Markdown": [[6, "notebooks-with-myst-markdown"], [109, "notebooks-with-myst-markdown"], [205, "notebooks-with-myst-markdown"]], "NumPy Array Types:": [[149, "numpy-array-types"]], "NumPy Basics": [[148, "numpy-basics"], [148, "id1"]], "Number Data Type in Python": [[51, "number-data-type-in-python"]], "Numpy Array basics": [[149, "numpy-array-basics"]], "Numpy Documentation": [[152, "numpy-documentation"]], "Numpy also provides many functions to create arrays:": [[149, "numpy-also-provides-many-functions-to-create-arrays"]], "OBJECT CODE": [[98, "object-code"]], "Object": [[101, "object"]], "Object Default Methods": [[101, "object-default-methods"]], "Object Method": [[101, "object-method"]], "Object Oriented Programming": [[101, "object-oriented-programming"]], "Object Properties": [[102, "object-properties"]], "Old style formatting": [[52, "old-style-formatting"]], "One of the most common errors in deep learning (shape errors)": [[169, "one-of-the-most-common-errors-in-deep-learning-shape-errors"]], "One or more times +": [[39, "one-or-more-times"]], "OpenAI Vanilla Example": [[137, "openai-vanilla-example"]], "Opening Attributes - Real World Example": [[135, "opening-attributes-real-world-example"], [136, "opening-attributes-real-world-example"]], "Operations": [[148, "operations"]], "Option #1: Chroma (for local)": [[132, "option-1-chroma-for-local"]], "Option #1: Pinecone": [[141, "option-1-pinecone"]], "Option #2: Chroma": [[141, "option-2-chroma"]], "Option #2: Pinecone (for cloud)": [[132, "option-2-pinecone-for-cloud"]], "Option 1: Loading Image Data Using ImageFolder": [[173, "option-1-loading-image-data-using-imagefolder"]], "Option 2: Loading Image Data with a Custom Dataset": [[173, "option-2-loading-image-data-with-a-custom-dataset"]], "Orthogonality and Parallelism": [[32, "orthogonality-and-parallelism"]], "Other Dictionary Operations": [[55, "other-dictionary-operations"]], "Other Frozenset methods": [[56, "other-frozenset-methods"]], "Other List Operations in Python": [[53, "other-list-operations-in-python"]], "Other Python Set Methods": [[56, "other-python-set-methods"]], "Other Set Operations": [[56, "other-set-operations"]], "Other Tuple Operations": [[54, "other-tuple-operations"]], "Other forms of transforms (data augmentation)": [[173, "other-forms-of-transforms-data-augmentation"]], "Other topics": [[120, "other-topics"]], "Output Parsers Method 1: Prompt Instructions & String Parsing": [[116, "output-parsers-method-1-prompt-instructions-string-parsing"]], "Output Parsers Method 2: OpenAI Fuctions": [[116, "output-parsers-method-2-openai-fuctions"]], "Output String justification": [[94, "output-string-justification"]], "Output formatting": [[94, "output-formatting"]], "Output text alignment specifying a width": [[94, "output-text-alignment-specifying-a-width"]], "Overfitting Problem": [[4, "overfitting-problem"], [5, "overfitting-problem"]], "Overloading Comparison Operators": [[104, "overloading-comparison-operators"]], "Overloading the + Operator": [[104, "overloading-the-operator"]], "Overriding parent method": [[101, "overriding-parent-method"]], "Package manager and virtual environment": [[24, "package-manager-and-virtual-environment"]], "Packing": [[71, "packing"]], "Packing Dictionaries": [[71, "packing-dictionaries"]], "Packing Lists": [[71, "packing-lists"]], "Packing and Unpacking Arguments in Python": [[71, "packing-and-unpacking-arguments-in-python"]], "PairGrid": [[199, "pairgrid"]], "Pandas DataFrame head, tail, at, iat": [[158, "pandas-dataframe-head-tail-at-iat"]], "Parameters": [[4, "parameters"]], "Parameters:": [[155, "parameters"]], "Parent Document Retriever": [[131, "parent-document-retriever"]], "Part 1: with Iris dataset": [[199, "part-1-with-iris-dataset"]], "Part 1: with Tips dataset": [[199, "part-1-with-tips-dataset"]], "Part 1: with Titanic dataset": [[196, "part-1-with-titanic-dataset"]], "Part 2: with Tips dataset": [[196, "part-2-with-tips-dataset"]], "Pass the tweets as examples": [[138, "pass-the-tweets-as-examples"]], "Passing Arguments with Key and Value": [[74, "passing-arguments-with-key-and-value"]], "Performance-speed tradeoff": [[172, "performance-speed-tradeoff"]], "Period .": [[39, "id3"]], "Personalized email generation": [[139, "personalized-email-generation"]], "Pie Chart": [[145, "pie-chart"]], "Pie Chart #1": [[145, "pie-chart-1"]], "Pie Chart #2": [[145, "pie-chart-2"]], "Pie Chart #3": [[145, "pie-chart-3"]], "Placeholders": [[148, "placeholders"]], "Plot Precision/Recall Progress": [[8, "plot-precision-recall-progress"]], "Plot Test Dataset Predictions": [[16, "plot-test-dataset-predictions"], [17, "plot-test-dataset-predictions"], [18, "plot-test-dataset-predictions"], [19, "plot-test-dataset-predictions"]], "Plot feature extractor ViT model loss curves": [[177, "plot-feature-extractor-vit-model-loss-curves"]], "Plot the Clustering Results": [[10, "plot-the-clustering-results"]], "Plot the Data": [[8, "plot-the-data"], [10, "plot-the-data"], [12, "plot-the-data"], [14, "plot-the-data"], [15, "plot-the-data"], [16, "plot-the-data"], [17, "plot-the-data"], [18, "plot-the-data"], [19, "plot-the-data"]], "Plot the Model Predictions": [[11, "plot-the-model-predictions"], [12, "plot-the-model-predictions"], [13, "plot-the-model-predictions"]], "Plot the distribution on the vertical axis:": [[191, "plot-the-distribution-on-the-vertical-axis"]], "Plot the loss curves of Model 0": [[173, "plot-the-loss-curves-of-model-0"]], "Plot the loss curves of Model 1": [[173, "plot-the-loss-curves-of-model-1"]], "Plot the loss curves of our ViT model": [[177, "plot-the-loss-curves-of-our-vit-model"]], "Polymorphism": [[101, "polymorphism"]], "Polynomial Regression": [[4, "polynomial-regression"]], "Positional Arguments (Basic)": [[77, "positional-arguments-basic"]], "Positional min/max": [[169, "positional-min-max"]], "Practice Problem": [[94, "practice-problem"]], "Predict on a custom image with the best model": [[176, "predict-on-a-custom-image-with-the-best-model"]], "Predicting on custom images with a trained PyTorch model": [[173, "predicting-on-custom-images-with-a-trained-pytorch-model"]], "Prepara the Data for Training": [[10, "prepara-the-data-for-training"], [14, "prepara-the-data-for-training"]], "Prepare DataLoader": [[172, "prepare-dataloader"]], "Prepare the Data for Training": [[15, "prepare-the-data-for-training"]], "Prepare transforms for images": [[177, "prepare-transforms-for-images"]], "Preparing data for the pretrained ViT model": [[177, "preparing-data-for-the-pretrained-vit-model"]], "Preparing data to see if our model can model a straight line": [[171, "preparing-data-to-see-if-our-model-can-model-a-straight-line"]], "Prerequisites for learning decorators": [[37, "prerequisites-for-learning-decorators"]], "Print Training Results": [[16, "print-training-results"], [17, "print-training-results"]], "Print end command": [[87, "print-end-command"]], "Private members of parent class": [[103, "private-members-of-parent-class"]], "Product notation": [[28, "product-notation"]], "Programming Steps Comparision:": [[98, "programming-steps-comparision"]], "Prompt": [[116, "prompt"]], "Prompt Template": [[116, "prompt-template"]], "Prompt Templates": [[129, "prompt-templates"]], "Promptless changes": [[143, "promptless-changes"]], "Prompts - Text generally used as instructions to your model": [[116, "prompts-text-generally-used-as-instructions-to-your-model"]], "Properties": [[28, "properties"], [29, "properties"]], "Properties of identity matrix": [[31, "properties-of-identity-matrix"]], "Properties of matrix addition": [[31, "properties-of-matrix-addition"]], "Properties of matrix determinant": [[31, "properties-of-matrix-determinant"]], "Properties of matrix multiplication": [[31, "properties-of-matrix-multiplication"]], "Properties of matrix subtraction": [[31, "properties-of-matrix-subtraction"]], "Properties of matrix transpose": [[31, "properties-of-matrix-transpose"]], "Properties of scalar multiplication": [[31, "properties-of-scalar-multiplication"]], "Pros and cons of notebooks vs Python scripts": [[174, "pros-and-cons-of-notebooks-vs-python-scripts"]], "Pulling Data From Twitter": [[142, "pulling-data-from-twitter"]], "Pulling Data From Websites": [[142, "pulling-data-from-websites"]], "Pulling Data From YouTube": [[142, "pulling-data-from-youtube"]], "Putting custom image prediction together: building a function": [[173, "putting-custom-image-prediction-together-building-a-function"]], "Putting it all together": [[170, "putting-it-all-together"]], "Putting it all together to create ViT": [[177, "putting-it-all-together-to-create-vit"]], "Putting it all together: from image to embedding": [[177, "putting-it-all-together-from-image-to-embedding"]], "Putting things together by building a multi-class PyTorch model": [[171, "putting-things-together-by-building-a-multi-class-pytorch-model"]], "PyTorch Computer Vision": [[172, "pytorch-computer-vision"]], "PyTorch Custom Datasets": [[173, "pytorch-custom-datasets"]], "PyTorch Experiment Tracking": [[176, "pytorch-experiment-tracking"]], "PyTorch Fundamentals": [[169, "pytorch-fundamentals"]], "PyTorch Going Modular": [[174, "pytorch-going-modular"]], "PyTorch Model Deployment": [[178, "pytorch-model-deployment"]], "PyTorch Neural Network Classification": [[171, "pytorch-neural-network-classification"]], "PyTorch Paper Replicating": [[177, "pytorch-paper-replicating"]], "PyTorch Transfer Learning": [[175, "pytorch-transfer-learning"]], "PyTorch Workflow Fundamentals": [[170, "pytorch-workflow-fundamentals"]], "PyTorch in the wild": [[174, "pytorch-in-the-wild"], [180, "pytorch-in-the-wild"]], "PyTorch model building essentials": [[170, "pytorch-model-building-essentials"]], "PyTorch tensors & NumPy": [[169, "pytorch-tensors-numpy"]], "PyTorch testing loop": [[170, "pytorch-testing-loop"]], "PyTorch training loop": [[170, "pytorch-training-loop"]], "Pydantic Model": [[135, "pydantic-model"]], "Python  Classes and Objects": [[102, "python-classes-and-objects"]], "Python **kwargs": [[40, "python-kwargs"]], "Python *args": [[40, "python-args"]], "Python *args and **kwargs": [[40, "python-args-and-kwargs"]], "Python - filter Function": [[37, "python-filter-function"]], "Python - map Function": [[37, "python-map-function"]], "Python @property decorator": [[38, "python-property-decorator"]], "Python Advanced Topics": [[22, "python-advanced-topics"], [41, "python-advanced-topics"]], "Python Anonymous/lambda Function": [[79, "python-anonymous-lambda-function"]], "Python Applications Area": [[24, "python-applications-area"]], "Python Arbitrary/Variable-length Arguments": [[77, "python-arbitrary-variable-length-arguments"]], "Python Built-In Modules Examples": [[80, "python-built-in-modules-examples"]], "Python Built-in Exceptions": [[70, "python-built-in-exceptions"]], "Python Built-in List Functions": [[53, "python-built-in-list-functions"]], "Python Built-in Tuple Functions": [[54, "python-built-in-tuple-functions"]], "Python Classes and Objects": [[102, "id1"]], "Python Closures": [[36, "python-closures"]], "Python Comments": [[84, "python-comments"]], "Python Comments Using Strings": [[84, "python-comments-using-strings"]], "Python Comments vs Docstrings": [[84, "python-comments-vs-docstrings"]], "Python Custom Exceptions": [[72, "python-custom-exceptions"]], "Python Data Types": [[22, "python-data-types"], [58, "python-data-types"], [92, "python-data-types"]], "Python DataFrame": [[155, "python-dataframe"]], "Python Date & Time Module": [[22, "python-date-time-module"], [67, "python-date-time-module"]], "Python Decimal": [[51, "python-decimal"]], "Python Decorators": [[37, "python-decorators"]], "Python Default Arguments": [[77, "python-default-arguments"]], "Python Dictionary": [[55, "python-dictionary"]], "Python Dictionary Comprehension": [[55, "python-dictionary-comprehension"]], "Python Dictionary Methods": [[55, "python-dictionary-methods"]], "Python Directory": [[69, "python-directory"]], "Python Directory and Files Management": [[69, "python-directory-and-files-management"]], "Python Docstrings": [[84, "python-docstrings"]], "Python Errors and Built-in Exceptions": [[70, "python-errors-and-built-in-exceptions"]], "Python Exceptions Handling Using try, except and finally statement": [[71, "python-exceptions-handling-using-try-except-and-finally-statement"]], "Python File I/O": [[68, "python-file-i-o"]], "Python File Methods": [[68, "python-file-methods"]], "Python Files": [[22, "python-files"], [73, "python-files"]], "Python Flow Control": [[22, "python-flow-control"], [50, "python-flow-control"]], "Python Flow-Control (Decision-Making) Statements": [[42, "python-flow-control-decision-making-statements"]], "Python Fractions": [[51, "python-fractions"]], "Python Frozenset": [[56, "python-frozenset"]], "Python Function Arguments": [[77, "python-function-arguments"]], "Python Functions": [[22, "python-functions"], [74, "python-functions"], [86, "python-functions"]], "Python Generator Expression": [[35, "python-generator-expression"]], "Python Generators with a Loop": [[35, "python-generators-with-a-loop"]], "Python Get Current time": [[63, "python-get-current-time"]], "Python Global, Local and Nonlocal variables": [[75, "python-global-local-and-nonlocal-variables"]], "Python Hello, World": [[87, "python-hello-world"]], "Python Infinite Iterators": [[34, "python-infinite-iterators"]], "Python Inheritance": [[103, "python-inheritance"]], "Python Input, Output and Import": [[94, "python-input-output-and-import"]], "Python Installation": [[24, "python-installation"]], "Python Introduction": [[22, "python-introduction"], [100, "python-introduction"]], "Python Iterators": [[34, "python-iterators"]], "Python Keyword Arguments": [[77, "python-keyword-arguments"]], "Python Keywords and Identifiers": [[88, "python-keywords-and-identifiers"]], "Python List": [[53, "python-list"]], "Python List Comprehension": [[57, "python-list-comprehension"]], "Python List Methods": [[53, "python-list-methods"]], "Python List Operations": [[53, "python-list-operations"]], "Python Literals": [[91, "python-literals"]], "Python Mathematical Functions": [[82, "python-mathematical-functions"]], "Python Mathematics": [[51, "python-mathematics"]], "Python Matplotlib": [[146, "python-matplotlib"], [147, "python-matplotlib"]], "Python Matplotlib Module": [[22, "python-matplotlib-module"]], "Python Module Search Path": [[80, "python-module-search-path"]], "Python Modules": [[80, "python-modules"]], "Python Modules List": [[80, "python-modules-list"]], "Python Multilevel Inheritance": [[103, "python-multilevel-inheritance"]], "Python Multiple Inheritance": [[103, "python-multiple-inheritance"]], "Python Namespace and Scope": [[96, "python-namespace-and-scope"]], "Python Nested if statement": [[46, "python-nested-if-statement"]], "Python NumPy": [[148, "python-numpy"]], "Python NumPy Array:": [[148, "python-numpy-array"], [149, "python-numpy-array"]], "Python NumPy Exercises": [[153, "python-numpy-exercises"]], "Python Numbers, Type Conversion and Mathematics": [[51, "python-numbers-type-conversion-and-mathematics"]], "Python Numpy Module": [[22, "python-numpy-module"], [154, "python-numpy-module"]], "Python OOPs Concepts": [[101, "python-oops-concepts"]], "Python Object Class": [[22, "python-object-class"], [105, "python-object-class"]], "Python Operator Overloading": [[104, "python-operator-overloading"], [104, "id1"]], "Python Operators": [[95, "python-operators"]], "Python Package": [[83, "python-package"]], "Python Pandas": [[155, "python-pandas"], [166, "python-pandas"], [167, "python-pandas"]], "Python Pandas Module": [[22, "python-pandas-module"], [168, "python-pandas-module"]], "Python Python Generators": [[35, "python-python-generators"]], "Python Random Module": [[81, "python-random-module"]], "Python Recursion": [[78, "python-recursion"]], "Python Recursive Function": [[78, "python-recursive-function"]], "Python RegEx": [[39, "python-regex"]], "Python RegEx Methods": [[39, "python-regex-methods"]], "Python Resources": [[22, "python-resources"]], "Python Seaborn": [[203, "python-seaborn"]], "Python Set Operations": [[56, "python-set-operations"]], "Python Sets": [[56, "python-sets"]], "Python Single Inheritance": [[103, "python-single-inheritance"]], "Python Special Functions": [[104, "python-special-functions"]], "Python Statement, Indentation and Comments": [[89, "python-statement-indentation-and-comments"]], "Python String Formatting": [[52, "python-string-formatting"]], "Python String Replication Operator (*)": [[52, "python-string-replication-operator"]], "Python Strings": [[24, "python-strings"], [52, "python-strings"]], "Python Strings Operations": [[52, "python-strings-operations"]], "Python Tuple": [[54, "python-tuple"]], "Python Type Conversion and Type Casting": [[93, "python-type-conversion-and-type-casting"]], "Python User-defined Functions": [[85, "python-user-defined-functions"]], "Python Variable Scope": [[96, "python-variable-scope"]], "Python Variables and Constants": [[90, "python-variables-and-constants"]], "Python __doc__ attribute": [[84, "python-doc-attribute"]], "Python datetime": [[59, "python-datetime"]], "Python docstrings": [[84, "id1"]], "Python for Loop": [[47, "python-for-loop"]], "Python format datetime": [[59, "python-format-datetime"]], "Python from-import statement": [[80, "python-from-import-statement"]], "Python global Keyword": [[76, "python-global-keyword"]], "Python if statement": [[43, "python-if-statement"]], "Python if-elif-else statement": [[45, "python-if-elif-else-statement"]], "Python if-else statement": [[44, "python-if-else-statement"]], "Python import statement": [[80, "python-import-statement"]], "Python lists": [[24, "python-lists"]], "Python sleep()": [[66, "python-sleep"]], "Python strftime()": [[60, "python-strftime"]], "Python strftime() - datetime object to string": [[59, "python-strftime-datetime-object-to-string"]], "Python strptime()": [[61, "python-strptime"]], "Python strptime() - string to datetime": [[59, "python-strptime-string-to-datetime"]], "Python super() function": [[103, "python-super-function"]], "Python time Module": [[65, "python-time-module"]], "Python time.asctime()": [[65, "python-time-asctime"]], "Python time.ctime()": [[65, "python-time-ctime"]], "Python time.gmtime()": [[65, "python-time-gmtime"]], "Python time.localtime()": [[65, "python-time-localtime"]], "Python time.mktime()": [[65, "python-time-mktime"]], "Python time.sleep()": [[65, "python-time-sleep"]], "Python time.strftime()": [[65, "python-time-strftime"]], "Python time.strptime()": [[65, "python-time-strptime"]], "Python time.time()": [[65, "python-time-time"]], "Python timestamp to datetime and vice-versa": [[64, "python-timestamp-to-datetime-and-vice-versa"]], "Python try with else clause": [[71, "python-try-with-else-clause"]], "Python try-finally Clause": [[71, "python-try-finally-clause"]], "Python while Loop": [[48, "python-while-loop"]], "Pytorch": [[183, "pytorch"]], "Q&A: Map Re-Rank": [[128, "q-a-map-re-rank"]], "Quantifier {}": [[39, "quantifier"]], "Query those docs to get your answer back": [[132, "query-those-docs-to-get-your-answer-back"]], "Querying Tabular Data": [[117, "querying-tabular-data"]], "Question & Answering Using Documents As Context": [[117, "question-answering-using-documents-as-context"]], "Quickly add YAML metadata for MyST Notebooks": [[6, "quickly-add-yaml-metadata-for-myst-notebooks"], [109, "quickly-add-yaml-metadata-for-myst-notebooks"], [205, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Quiz time": [[150, "quiz-time"]], "Raise error while renaming a column": [[162, "raise-error-while-renaming-a-column"]], "Raising Exceptions in Python": [[71, "raising-exceptions-in-python"]], "Raising an Exception": [[71, "raising-an-exception"]], "Random Initialization": [[7, "random-initialization"]], "Random number": [[149, "random-number"]], "Random tensors": [[169, "random-tensors"]], "Raw String to ignore escape sequence": [[52, "raw-string-to-ignore-escape-sequence"]], "Reading Data in Pandas": [[166, "reading-data-in-pandas"]], "Real World Examples": [[145, "real-world-examples"]], "Real world use cases": [[208, "real-world-use-cases"]], "Recreating non-linear data (red and blue circles)": [[171, "recreating-non-linear-data-red-and-blue-circles"]], "References": [[1, "references"], [3, "references"], [4, "references"], [5, "references"], [7, "references"]], "Regularization": [[4, "regularization"], [5, "regularization"]], "Reloading a module": [[80, "reloading-a-module"]], "Removing a Directory or a File remove() and rmdir() -": [[69, "removing-a-directory-or-a-file-remove-and-rmdir"]], "Removing elements from Dictionary": [[55, "removing-elements-from-dictionary"]], "Removing elements from a set": [[56, "removing-elements-from-a-set"]], "Rename a single column": [[162, "rename-a-single-column"]], "Rename all columns with a list": [[162, "rename-all-columns-with-a-list"]], "Rename column by adding prefix/suffix": [[162, "rename-column-by-adding-prefix-suffix"]], "Rename column by index position": [[162, "rename-column-by-index-position"]], "Rename column in multi-index DataFrame": [[162, "rename-column-in-multi-index-dataframe"]], "Rename column using DataFrame.set_axis()": [[162, "rename-column-using-dataframe-set-axis"]], "Rename column using a function": [[162, "rename-column-using-a-function"]], "Rename columns by removing leading and trailing spaces": [[162, "rename-columns-by-removing-leading-and-trailing-spaces"]], "Rename columns in Pandas DataFrame": [[162, "rename-columns-in-pandas-dataframe"]], "Rename columns in all levels": [[162, "rename-columns-in-all-levels"]], "Rename columns in defined level": [[162, "rename-columns-in-defined-level"]], "Rename columns in place": [[162, "rename-columns-in-place"]], "Rename multiple columns": [[162, "rename-multiple-columns"]], "Renaming a Directory or a File rename() -": [[69, "renaming-a-directory-or-a-file-rename"]], "Replicating Equation 2 with PyTorch layers": [[177, "replicating-equation-2-with-pytorch-layers"]], "Replicating Equation 3 with PyTorch layers": [[177, "replicating-equation-3-with-pytorch-layers"]], "Replicating non-linear activation functions": [[171, "replicating-non-linear-activation-functions"]], "Replicating the ViT paper: an overview": [[177, "replicating-the-vit-paper-an-overview"]], "Reset index and change column name": [[165, "reset-index-and-change-column-name"]], "Reset index and creates new column in level": [[165, "reset-index-and-creates-new-column-in-level"]], "Reset index and name other level": [[165, "reset-index-and-name-other-level"]], "Reset index by level": [[165, "reset-index-by-level"]], "Reset index in pandas DataFrame": [[165, "reset-index-in-pandas-dataframe"]], "Reset index in place": [[165, "reset-index-in-place"]], "Reset index starts from 1": [[165, "reset-index-starts-from-1"]], "Reset index to starts at 0": [[165, "reset-index-to-starts-at-0"]], "Reset index to the range of numbers": [[165, "reset-index-to-the-range-of-numbers"]], "Reset index without new column": [[165, "reset-index-without-new-column"]], "Reset multi-level index": [[165, "reset-multi-level-index"]], "Reshape Data": [[152, "reshape-data"]], "Reshaping, stacking, squeezing and unsqueezing": [[169, "reshaping-stacking-squeezing-and-unsqueezing"]], "Residplot()": [[190, "residplot"]], "Resources": [[147, "resources"], [154, "resources"], [168, "resources"], [183, "resources"], [203, "resources"]], "Retrievers": [[116, "retrievers"]], "Return Boolean Values": [[74, "return-boolean-values"]], "Return Multiple Values": [[74, "return-multiple-values"]], "Return Single Value": [[74, "return-single-value"]], "Return a List": [[74, "return-a-list"]], "Reverse for loop": [[47, "reverse-for-loop"]], "Reverse for loop using range()": [[47, "reverse-for-loop-using-range"]], "Reverse while loop": [[48, "reverse-while-loop"]], "Rinse and Repeat: Loop Through Companies": [[139, "rinse-and-repeat-loop-through-companies"]], "Rules and Naming Convention for Variables and constants": [[90, "rules-and-naming-convention-for-variables-and-constants"]], "Rules for writing identifiers": [[88, "rules-for-writing-identifiers"]], "Rules of global Keyword": [[76, "rules-of-global-keyword"]], "Running a notebook in cell mode": [[179, "running-a-notebook-in-cell-mode"]], "Running our FoodVision Mini demo locally": [[178, "running-our-foodvision-mini-demo-locally"]], "Running tensors on GPUs (and making faster computations)": [[169, "running-tensors-on-gpus-and-making-faster-computations"]], "Running the \u201cHello, World!\u201d Program": [[87, "running-the-hello-world-program"]], "Salary": [[136, "salary"]], "Sample Roles and Directives": [[108, "sample-roles-and-directives"], [112, "sample-roles-and-directives"]], "Save and load best performing model": [[172, "save-and-load-best-performing-model"]], "Save feature extractor ViT model and check file size": [[177, "save-feature-extractor-vit-model-and-check-file-size"]], "Saving EffNetB2 feature extractor": [[178, "saving-effnetb2-feature-extractor"]], "Saving ViT feature extractor": [[178, "saving-vit-feature-extractor"]], "Saving a PyTorch model\u2019s state_dict()": [[170, "saving-a-pytorch-models-state-dict"]], "Saving and loading a PyTorch model": [[170, "saving-and-loading-a-pytorch-model"]], "Saving and loading a model": [[170, "saving-and-loading-a-model"]], "Saving as JSON File": [[68, "saving-as-json-file"]], "Saving our Data (Exporting into Desired Format)": [[166, "saving-our-data-exporting-into-desired-format"]], "Scalar": [[169, "scalar"]], "Scalar multiplication": [[31, "scalar-multiplication"], [32, "scalar-multiplication"]], "Scatter Plot and Joint Plot": [[189, "scatter-plot-and-joint-plot"]], "Schema - Nuts and Bolts of working with Large Language Models (LLMs)": [[116, "schema-nuts-and-bolts-of-working-with-large-language-models-llms"]], "Seaborn Color Palettes": [[187, "seaborn-color-palettes"]], "Seaborn Lmplots:": [[188, "seaborn-lmplots"]], "Seaborn Regplots:": [[188, "seaborn-regplots"]], "Seaborn: Box Plot": [[194, "seaborn-box-plot"]], "Seaborn: Categorical Data Plots": [[192, "seaborn-categorical-data-plots"]], "Seaborn: Strip Plot": [[193, "seaborn-strip-plot"]], "Seaborn: Violin Plot": [[195, "seaborn-violin-plot"]], "Select best threshold": [[8, "select-best-threshold"]], "Select bottom n rows in pandas DataFrame": [[158, "select-bottom-n-rows-in-pandas-dataframe"]], "Select bottom rows except for first n rows": [[158, "select-bottom-rows-except-for-first-n-rows"]], "Select bottom rows from the multi index DataFrame": [[158, "select-bottom-rows-from-the-multi-index-dataframe"]], "Select top n rows in pandas DataFrame": [[158, "select-top-n-rows-in-pandas-dataframe"]], "Select top rows except for last n rows": [[158, "select-top-rows-except-for-last-n-rows"]], "Select top rows from multi-index DataFrames": [[158, "select-top-rows-from-multi-index-dataframes"]], "Select value using row and column labels using DataFrame.at": [[158, "select-value-using-row-and-column-labels-using-dataframe-at"]], "Select value using row and column position using DataFrame.iat": [[158, "select-value-using-row-and-column-position-using-dataframe-iat"]], "Selection": [[155, "selection"]], "Self Can Be Avoided": [[106, "self-can-be-avoided"]], "Self Is Here To Stay": [[106, "self-is-here-to-stay"]], "Self Querying": [[131, "self-querying"]], "Series": [[155, "series"]], "Server Operational Parameters": [[9, "server-operational-parameters"]], "Set Difference": [[56, "set-difference"]], "Set Intersection": [[56, "set-intersection"]], "Set Symmetric Difference": [[56, "set-symmetric-difference"]], "Set Union": [[56, "set-union"]], "Set index but keep column": [[164, "set-index-but-keep-column"]], "Set index by column number": [[164, "set-index-by-column-number"]], "Set index by keeping old index": [[164, "set-index-by-keeping-old-index"]], "Set index in pandas DataFrame": [[164, "set-index-in-pandas-dataframe"]], "Set index in place": [[164, "set-index-in-place"]], "Set index using a Python range": [[164, "set-index-using-a-python-range"]], "Set index using a column": [[164, "set-index-using-a-column"]], "Set index using a column with duplicates": [[164, "set-index-using-a-column-with-duplicates"]], "Set index using a list": [[164, "set-index-using-a-list"]], "Set index using multiple columns": [[164, "set-index-using-multiple-columns"]], "Set multi-index using a list and column": [[164, "set-multi-index-using-a-list-and-column"]], "Set multi-index using two Python series": [[164, "set-multi-index-using-two-python-series"]], "Set specific value in pandas DataFrame": [[158, "set-specific-value-in-pandas-dataframe"], [158, "id1"]], "Setting up a pretrained model": [[175, "setting-up-a-pretrained-model"]], "Setting up a series of modelling experiments": [[176, "setting-up-a-series-of-modelling-experiments"]], "Setting up training code for our ViT model": [[177, "setting-up-training-code-for-our-vit-model"]], "Setup a loss function and optimizer for model_2": [[172, "setup-a-loss-function-and-optimizer-for-model-2"]], "Setup device agnostic-code (for using a GPU if there is one)": [[172, "setup-device-agnostic-code-for-using-a-gpu-if-there-is-one"]], "Setup loss function and optimizer": [[171, "setup-loss-function-and-optimizer"]], "Setup loss, optimizer and evaluation metrics": [[172, "setup-loss-optimizer-and-evaluation-metrics"], [172, "id1"]], "Shortcut for if statement (Short-hand if or one-line if)": [[43, "shortcut-for-if-statement-short-hand-if-or-one-line-if"]], "Shortcut of if else (Short Hand if \u2026 else or One line if else)": [[44, "shortcut-of-if-else-short-hand-if-else-or-one-line-if-else"]], "Significance of random seeding": [[169, "significance-of-random-seeding"]], "Simple Q&A Example": [[117, "simple-q-a-example"]], "Single Parameter:": [[74, "single-parameter"]], "Single-line docstrings in Python": [[84, "single-line-docstrings-in-python"]], "Slicing and Subsetting": [[148, "slicing-and-subsetting"]], "Solution to Overfitting": [[4, "solution-to-overfitting"], [5, "solution-to-overfitting"]], "Sorting/Describing Data": [[166, "sorting-describing-data"]], "Sources": [[134, "sources"]], "Special Sequences": [[39, "special-sequences"]], "Special literals": [[91, "special-literals"]], "Specify Pattern Using RegEx": [[39, "specify-pattern-using-regex"]], "Specifying a sign while displaying output numbers": [[94, "specifying-a-sign-while-displaying-output-numbers"]], "Split data into training and test sets": [[170, "split-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Sets": [[11, "split-the-data-into-training-and-test-sets"], [16, "split-the-data-into-training-and-test-sets"], [17, "split-the-data-into-training-and-test-sets"], [18, "split-the-data-into-training-and-test-sets"], [19, "split-the-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Subsets": [[13, "split-the-data-into-training-and-test-subsets"]], "Spreading in Python": [[71, "spreading-in-python"]], "Square Brackets []": [[39, "id2"]], "Statistics": [[152, "statistics"], [155, "statistics"]], "Step 1: Extract Topic Titles & Short Description": [[141, "step-1-extract-topic-titles-short-description"]], "Step 2: Expand on the topics you found": [[141, "step-2-expand-on-the-topics-you-found"]], "Stepping through nn.Conv2d()": [[172, "stepping-through-nn-conv2d"]], "Stepping through nn.MaxPool2d()": [[172, "stepping-through-nn-maxpool2d"]], "String Concatenation Operator (+)": [[52, "string-concatenation-operator"]], "Structured Data - Turn your LLM output into structured data": [[141, "structured-data-turn-your-llm-output-into-structured-data"]], "Summaries Of Longer Text": [[117, "summaries-of-longer-text"]], "Summaries Of Short Text": [[117, "summaries-of-short-text"]], "Summarization": [[117, "summarization"]], "Summarize: Map Reduce": [[128, "summarize-map-reduce"]], "Summarize: Refine": [[128, "summarize-refine"]], "Summarize: Stuff": [[128, "summarize-stuff"]], "Summary": [[52, "summary"], [53, "summary"], [54, "summary"], [55, "summary"], [56, "summary"], [155, "summary"]], "Summary - MetaCharacters": [[39, "summary-metacharacters"]], "Summary:": [[150, "summary"], [155, "id1"]], "Summation notation": [[29, "summation-notation"]], "Swarm Plot": [[192, "swarm-plot"], [193, "swarm-plot"]], "Syntax :": [[44, "syntax"], [47, "syntax"]], "Syntax of List Comprehension": [[57, "syntax-of-list-comprehension"]], "Syntax:": [[43, "syntax"], [45, "syntax"], [46, "syntax"], [48, "syntax"]], "Table of Contents": [[118, "table-of-contents"]], "Target Audience \ud83e\uddd0": [[208, "target-audience"]], "Tensor datatypes": [[169, "tensor-datatypes"]], "Tensors": [[169, "tensors"]], "Terminology": [[177, "terminology"]], "Text": [[116, "text"]], "Text Embedding Model": [[116, "text-embedding-model"]], "Text Splitters": [[116, "text-splitters"]], "The @property Decorator": [[38, "the-property-decorator"]], "The Algorithm": [[3, "the-algorithm"]], "The Custom Prompts - Customize your prompt to fit your use case": [[141, "the-custom-prompts-customize-your-prompt-to-fit-your-use-case"]], "The DataFrame.drop() function": [[159, "the-dataframe-drop-function"]], "The DataFrame.drop_duplicates() function": [[160, "the-dataframe-drop-duplicates-function"]], "The DataFrame.dropna() function": [[161, "the-dataframe-dropna-function"]], "The DataFrame.rename() function": [[162, "the-dataframe-rename-function"]], "The DataFrame.reset_index() function": [[165, "the-dataframe-reset-index-function"]], "The DataFrame.set_index() function": [[164, "the-dataframe-set-index-function"]], "The DataFrame.to_dict() function": [[163, "the-dataframe-to-dict-function"]], "The Difference\u2026": [[43, "the-difference"]], "The First Pass - Run through your text and extract the topics per your custom prompts": [[141, "the-first-pass-run-through-your-text-and-extract-the-topics-per-your-custom-prompts"]], "The LayerNorm (LN) layer": [[177, "the-layernorm-ln-layer"]], "The MLP layer(s)": [[177, "the-mlp-layer-s"]], "The Multi-Head Self Attention (MSA) layer": [[177, "the-multi-head-self-attention-msa-layer"]], "The Set Up - Create your LLMs and get data": [[141, "the-set-up-create-your-llms-and-get-data"]], "The balance between overfitting and underfitting": [[173, "the-balance-between-overfitting-and-underfitting"]], "The difference\u2026": [[44, "the-difference"]], "The dir() built-in function": [[80, "the-dir-built-in-function"]], "The except Clause with Multiple Exceptions": [[71, "the-except-clause-with-multiple-exceptions"]], "The except Clause with No Exceptions": [[71, "the-except-clause-with-no-exceptions"]], "The file Object Attributes": [[68, "the-file-object-attributes"]], "The format() Method for Formatting Strings": [[52, "the-format-method-for-formatting-strings"]], "The from_dict() function": [[156, "the-from-dict-function"]], "The missing piece: non-linearity": [[171, "the-missing-piece-non-linearity"]], "The property Class": [[38, "the-property-class"]], "Things to Remember": [[88, "things-to-remember"]], "Things to Remember:": [[40, "things-to-remember"]], "Things to note": [[174, "things-to-note"]], "Time Series & LV Plot": [[198, "time-series-lv-plot"]], "Time-Series Plot": [[198, "time-series-plot"]], "To Do": [[133, "to-do"]], "To customize the display of DataFrame while printing": [[155, "to-customize-the-display-of-dataframe-while-printing"]], "Toolbox": [[208, "toolbox"]], "Toolkit": [[116, "toolkit"]], "Tools": [[116, "tools"]], "Tools required to work with neural networks": [[206, "tools-required-to-work-with-neural-networks"]], "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80": [[115, "tools-to-get-a-launch"]], "Top-K Similarity Search - Ask A Book A Question": [[132, "top-k-similarity-search-ask-a-book-a-question"]], "Topic Modeling With Language Models": [[141, "topic-modeling-with-language-models"]], "Topics on Learning Data Science and Machine Learning": [[207, "topics-on-learning-data-science-and-machine-learning"]], "Train and Evaluate Model 0": [[173, "train-and-evaluate-model-0"]], "Train feature extractor ViT model": [[177, "train-feature-extractor-vit-model"]], "Train model": [[171, "train-model"], [175, "train-model"]], "Train model and track results": [[176, "train-model-and-track-results"]], "Train the model": [[170, "train-the-model"]], "Train, evaluate and save the model": [[179, "train-evaluate-and-save-the-model"], [180, "train-evaluate-and-save-the-model"]], "Train, evaluate and save the model (script mode)": [[180, "train-evaluate-and-save-the-model-script-mode"]], "Train, evaluate and save the model (train.py)": [[174, "train-evaluate-and-save-the-model-train-py"]], "Training": [[170, "training"]], "Training EffNetB2 feature extractor": [[178, "training-effnetb2-feature-extractor"]], "Training Set": [[5, "training-set"]], "Training ViT feature extractor": [[178, "training-vit-feature-extractor"]], "Training a model with non-linearity": [[171, "training-a-model-with-non-linearity"]], "Training and testing model_2 using our training and test functions": [[172, "training-and-testing-model-2-using-our-training-and-test-functions"]], "Training our ViT model": [[177, "training-our-vit-model"]], "Transfer statements": [[42, "transfer-statements"]], "Transform Datasets and create DataLoaders": [[176, "transform-datasets-and-create-dataloaders"]], "Transforming data": [[173, "transforming-data"]], "Transforming data with torchvision.transforms": [[173, "transforming-data-with-torchvision-transforms"]], "Try a forward pass on a single image (to test the model)": [[173, "try-a-forward-pass-on-a-single-image-to-test-the-model"]], "Tuple Methods": [[54, "tuple-methods"]], "Tuple Operations": [[54, "tuple-operations"]], "Turn custom loaded images into DataLoader\u2019s": [[173, "turn-custom-loaded-images-into-dataloaders"]], "Turn data into tensors and create train and test splits": [[171, "turn-data-into-tensors-and-create-train-and-test-splits"]], "Turn images into DataLoader\u2019s": [[177, "turn-images-into-dataloaders"]], "Turn loaded images into DataLoader\u2019s": [[173, "turn-loaded-images-into-dataloaders"]], "Turning a single image into patches": [[177, "turning-a-single-image-into-patches"]], "Turning our EffNetB2 model into a Python script (model.py)": [[178, "turning-our-effnetb2-model-into-a-python-script-model-py"]], "Turning our FoodVision Mini Gradio Demo into a deployable app": [[178, "turning-our-foodvision-mini-gradio-demo-into-a-deployable-app"]], "Turning our FoodVision Mini Gradio app into a Python script (app.py)": [[178, "turning-our-foodvision-mini-gradio-app-into-a-python-script-app-py"]], "Turning the ViT patch embedding layer into a PyTorch module": [[177, "turning-the-vit-patch-embedding-layer-into-a-pytorch-module"]], "Twitter Reply Bot": [[127, "twitter-reply-bot"]], "Two Parameter:": [[74, "two-parameter"]], "Type Conversion": [[51, "type-conversion"]], "Type Conversion of Numbers in Python": [[91, "type-conversion-of-numbers-in-python"]], "Types Of Inheritance": [[103, "types-of-inheritance"]], "Types of Constructors": [[102, "types-of-constructors"]], "Types of Functions": [[74, "types-of-functions"]], "Typical workflow for a ML system": [[0, "typical-workflow-for-a-ml-system"]], "Unit vector": [[32, "unit-vector"]], "Univariate Linear Regression Demo": [[13, "univariate-linear-regression-demo"]], "Universal  Array Functions (Mathematical operations)": [[151, "universal-array-functions-mathematical-operations"]], "Unpacking": [[71, "unpacking"]], "Unpacking Dictionaries": [[71, "unpacking-dictionaries"]], "Unpacking List or a Tuple": [[71, "unpacking-list-or-a-tuple"]], "Unpacking Lists": [[71, "unpacking-lists"]], "Unpacking a sequence into separate variables": [[97, "unpacking-a-sequence-into-separate-variables"]], "Update the train() function to include a writer parameter": [[176, "update-the-train-function-to-include-a-writer-parameter"]], "Uploading to Hugging Face": [[178, "uploading-to-hugging-face"]], "Use Cases:": [[141, "use-cases"]], "Use __new__ or __init__?": [[106, "use-new-or-init"]], "Use lambda expressions to rename": [[162, "use-lambda-expressions-to-rename"]], "Use of Python Generators": [[35, "use-of-python-generators"]], "Use of global Keyword": [[76, "use-of-global-keyword"]], "Use of inheritance": [[101, "use-of-inheritance"]], "Use of lambda Function in python": [[79, "use-of-lambda-function-in-python"]], "Use torchinfo to get an idea of the shapes going through our model": [[173, "use-torchinfo-to-get-an-idea-of-the-shapes-going-through-our-model"]], "Using An Agent": [[126, "using-an-agent"]], "Using Control Statement in for loops in Python": [[47, "using-control-statement-in-for-loops-in-python"]], "Using Control Statement in while loops in Python": [[48, "using-control-statement-in-while-loops-in-python"]], "Using Embeddings": [[117, "using-embeddings"]], "Using Getters and Setters": [[38, "using-getters-and-setters"]], "Using LLMs To Summarize Personal Research": [[142, "using-llms-to-summarize-personal-research"]], "Using LangChain\u2019s Response Schema": [[117, "using-langchains-response-schema"]], "Using Langchain": [[118, "using-langchain"]], "Using Python inside Jupyter notebook": [[24, "using-python-inside-jupyter-notebook"]], "Using a code editor of your choice": [[24, "using-a-code-editor-of-your-choice"]], "Using a pretrained ViT from torchvision.models on the same dataset": [[177, "using-a-pretrained-vit-from-torchvision-models-on-the-same-dataset"]], "Using drop with axis='columns' or axis=1": [[159, "using-drop-with-axis-columns-or-axis-1"]], "Using python in a jupyter notebook": [[24, "using-python-in-a-jupyter-notebook"]], "Using r prefix before RegEx": [[39, "using-r-prefix-before-regex"]], "Using rename with axis='columns' or axis=1": [[162, "using-rename-with-axis-columns-or-axis-1"]], "Using the help() Function for Docstrings": [[84, "using-the-help-function-for-docstrings"]], "ValueError in strptime()": [[61, "valueerror-in-strptime"]], "Vanilla Extraction": [[117, "vanilla-extraction"]], "Variable Function Arguments": [[77, "variable-function-arguments"]], "Vector addition": [[32, "vector-addition"]], "Vector operations": [[32, "vector-operations"]], "Vector subtraction": [[32, "vector-subtraction"]], "VectorStores": [[116, "vectorstores"]], "Vectorized Implementation of Forward Propagation": [[7, "vectorized-implementation-of-forward-propagation"]], "Vectors": [[169, "vectors"]], "View experiments in TensorBoard": [[176, "view-experiments-in-tensorboard"]], "View our model\u2019s results in TensorBoard": [[176, "view-our-models-results-in-tensorboard"]], "Viewing/Inspecting Data": [[155, "viewing-inspecting-data"]], "Visualize a single image": [[177, "visualize-a-single-image"]], "Visualize an image": [[173, "visualize-an-image"]], "Visualize the Fit": [[8, "visualize-the-fit"]], "Visualizing our data": [[172, "visualizing-our-data"]], "Visualizing the speed vs. performance tradeoff": [[178, "visualizing-the-speed-vs-performance-tradeoff"]], "Ways to deploy a machine learning model": [[178, "ways-to-deploy-a-machine-learning-model"]], "Welcome to my technical diary \ud83e\udd2f": [[208, "welcome-to-my-technical-diary"]], "What Happens Internally?": [[106, "what-happens-internally"]], "What are lambda functions in Python?": [[79, "what-are-lambda-functions-in-python"]], "What are modules in Python?": [[80, "what-are-modules-in-python"]], "What are packages?": [[83, "what-are-packages"]], "What are user-defined functions in Python?": [[85, "what-are-user-defined-functions-in-python"]], "What can PyTorch be used for?": [[169, "what-can-pytorch-be-used-for"]], "What experiments are we going to run?": [[176, "what-experiments-are-we-going-to-run"]], "What has script mode got to do with PyTorch?": [[180, "what-has-script-mode-got-to-do-with-pytorch"]], "What is Compiler?": [[98, "what-is-compiler"]], "What is DataFrame in Pandas": [[155, "what-is-dataframe-in-pandas"]], "What is Dictionary in Python?": [[55, "what-is-dictionary-in-python"]], "What is Distribution Plots?": [[191, "what-is-distribution-plots"]], "What is Hugging Face Spaces?": [[178, "what-is-hugging-face-spaces"]], "What is Interpreter?": [[98, "what-is-interpreter"]], "What is LangChain?": [[116, "what-is-langchain"], [117, "what-is-langchain"]], "What is List in Python?": [[53, "what-is-list-in-python"]], "What is Machine Learning? \ud83e\udde0": [[0, "what-is-machine-learning"]], "What is MyST?": [[20, "what-is-myst"], [108, "what-is-myst"], [112, "what-is-myst"]], "What is Name in Python?": [[96, "what-is-name-in-python"]], "What is PyTorch?": [[169, "what-is-pytorch"]], "What is Set in Python?": [[56, "what-is-set-in-python"]], "What is String in Python?": [[52, "what-is-string-in-python"]], "What is Tuple in Python?": [[54, "what-is-tuple-in-python"]], "What is a Namespace in Python?": [[96, "what-is-a-namespace-in-python"]], "What is a classification problem?": [[171, "what-is-a-classification-problem"]], "What is a custom dataset?": [[173, "what-is-a-custom-dataset"]], "What is a function in Python?": [[74, "what-is-a-function-in-python"]], "What is a machine learning research paper?": [[177, "what-is-a-machine-learning-research-paper"]], "What is a matrix?": [[31, "what-is-a-matrix"]], "What is a vector?": [[32, "what-is-a-vector"]], "What is cell mode?": [[179, "what-is-cell-mode"]], "What is cluster map?": [[202, "what-is-cluster-map"]], "What is experiment tracking?": [[176, "what-is-experiment-tracking"]], "What is for loop in Python?": [[47, "what-is-for-loop-in-python"]], "What is global keyword?": [[76, "what-is-global-keyword"]], "What is going modular?": [[174, "what-is-going-modular"]], "What is heat map?": [[201, "what-is-heat-map"]], "What is hstack?": [[152, "what-is-hstack"]], "What is machine learning model deployment?": [[178, "what-is-machine-learning-model-deployment"]], "What is math module in Python?": [[82, "what-is-math-module-in-python"]], "What is paper replicating?": [[177, "what-is-paper-replicating"]], "What is recursion?": [[78, "what-is-recursion"]], "What is script mode?": [[180, "what-is-script-mode"]], "What is self in Python?": [[106, "what-is-self-in-python"]], "What is transfer learning?": [[175, "what-is-transfer-learning"]], "What is vstack?": [[152, "what-is-vstack"]], "What is while loop in Python?": [[48, "what-is-while-loop-in-python"]], "What kind of experiments should you run?": [[176, "what-kind-of-experiments-should-you-run"]], "What model should I use?": [[172, "what-model-should-i-use"]], "What our training setup is missing": [[177, "what-our-training-setup-is-missing"]], "What should an ideal loss curve look like?": [[173, "what-should-an-ideal-loss-curve-look-like"]], "What we\u2019re going to cover": [[170, "what-were-going-to-cover"], [171, "what-were-going-to-cover"], [172, "what-were-going-to-cover"], [173, "what-were-going-to-cover"], [174, "what-were-going-to-cover"], [175, "what-were-going-to-cover"], [176, "what-were-going-to-cover"], [177, "what-were-going-to-cover"], [178, "what-were-going-to-cover"], [180, "what-were-going-to-cover"]], "What we\u2019re going to cover in this module": [[169, "what-were-going-to-cover-in-this-module"]], "What we\u2019re working towards": [[174, "what-were-working-towards"]], "What\u2019s inside datetime?": [[59, "whats-inside-datetime"]], "What\u2019s the difference between this notebook (Part 1) and the script mode notebook (Part 2)?": [[179, "whats-the-difference-between-this-notebook-part-1-and-the-script-mode-notebook-part-2"]], "What\u2019s the difference between this notebook (Part 2) and the cell mode notebook (Part 1)?": [[180, "whats-the-difference-between-this-notebook-part-2-and-the-cell-mode-notebook-part-1"]], "When do we have closures?": [[36, "when-do-we-have-closures"]], "When to use Decimal instead of float?": [[51, "when-to-use-decimal-instead-of-float"]], "When to use closures?": [[36, "when-to-use-closures"]], "Where can you find code examples for machine learning research papers?": [[177, "where-can-you-find-code-examples-for-machine-learning-research-papers"]], "Where can you get help?": [[174, "where-can-you-get-help"], [175, "where-can-you-get-help"]], "Where does computer vision get used?": [[172, "where-does-computer-vision-get-used"]], "Where to find pretrained models": [[175, "where-to-find-pretrained-models"]], "Where\u2019s it going to go?": [[178, "wheres-it-going-to-go"]], "Which pretrained model should you use?": [[175, "which-pretrained-model-should-you-use"]], "While loop in Python FAQs": [[48, "while-loop-in-python-faqs"]], "Who uses PyTorch?": [[169, "who-uses-pytorch"]], "Why LangChain?": [[116, "why-langchain"], [117, "why-langchain"]], "Why Learn Machine Learning? \ud83e\udd14": [[0, "why-learn-machine-learning"]], "Why Learn Python?": [[22, "why-learn-python"]], "Why and When to use while loop in Python": [[48, "why-and-when-to-use-while-loop-in-python"]], "Why deploy a machine learning model?": [[178, "why-deploy-a-machine-learning-model"]], "Why is self explicitly defined everytime?": [[106, "why-is-self-explicitly-defined-everytime"]], "Why replicate a machine learning research paper?": [[177, "why-replicate-a-machine-learning-research-paper"]], "Why should we use Tuple? (Advantages of Tuple)": [[54, "why-should-we-use-tuple-advantages-of-tuple"]], "Why super() keyword": [[103, "why-super-keyword"]], "Why track experiments?": [[176, "why-track-experiments"]], "Why two parts?": [[174, "why-two-parts"]], "Why use NumPy?": [[148, "why-use-numpy"]], "Why use PyTorch?": [[169, "why-use-pytorch"]], "Why use a pretrained model?": [[177, "why-use-a-pretrained-model"]], "Why use for loop?": [[47, "why-use-for-loop"]], "Why use transfer learning?": [[175, "why-use-transfer-learning"]], "Why would you want to go modular?": [[174, "why-would-you-want-to-go-modular"]], "Wide format (untidy)": [[201, "wide-format-untidy"]], "With Streaming": [[129, "with-streaming"]], "Working With Lists": [[136, "working-with-lists"]], "Working of for loop for Iterators": [[34, "working-of-for-loop-for-iterators"]], "Working with large amounts of data": [[166, "working-with-large-amounts-of-data"]], "World Happiness Report 2017": [[9, "world-happiness-report-2017"]], "Wrap up": [[80, "wrap-up"]], "Write your custom prompt templates": [[139, "write-your-custom-prompt-templates"]], "Writing the \u201cHello, World!\u201d Program": [[71, "writing-the-hello-world-program"], [87, "writing-the-hello-world-program"]], "Zapier Natural Language Actions API": [[126, "zapier-natural-language-actions-api"]], "Zero or more times *": [[39, "zero-or-more-times"]], "Zero or one time ?": [[39, "zero-or-one-time"]], "Zeros and ones": [[169, "zeros-and-ones"]], "Zip": [[71, "zip"]], "[] . ^ $ * + ? {} () \\ |": [[39, "id1"]], "\\A - Matches if the specified characters are at the start of a string.": [[39, "a-matches-if-the-specified-characters-are-at-the-start-of-a-string"]], "\\B - Opposite of \\b. Matches if the specified characters are not at the beginning or end of a word.": [[39, "b-opposite-of-b-matches-if-the-specified-characters-are-not-at-the-beginning-or-end-of-a-word"]], "\\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \\t\\n\\r\\f\\v].": [[39, "s-matches-where-a-string-contains-any-non-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\W - Matches any non-alphanumeric character. Equivalent to [^a-zA-Z0-9_].": [[39, "w-matches-any-non-alphanumeric-character-equivalent-to-a-za-z0-9"]], "\\Z - Matches if the specified characters are at the end of a string.": [[39, "z-matches-if-the-specified-characters-are-at-the-end-of-a-string"]], "\\b - Matches if the specified characters are at the beginning or end of a word.": [[39, "b-matches-if-the-specified-characters-are-at-the-beginning-or-end-of-a-word"]], "\\d - Matches any non-decimal digit. Equivalent to [^0-9]": [[39, "d-matches-any-non-decimal-digit-equivalent-to-0-9"]], "\\s - Matches where a string contains any whitespace character. Equivalent to [ \\t\\n\\r\\f\\v].": [[39, "s-matches-where-a-string-contains-any-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.": [[39, "w-matches-any-alphanumeric-character-digits-and-alphabets-equivalent-to-a-za-z0-9-by-the-way-underscore-is-also-considered-an-alphanumeric-character"]], "__init__() is not a constructor": [[106, "init-is-not-a-constructor"]], "a) break in for loop": [[47, "a-break-in-for-loop"]], "a) break in while loop": [[48, "a-break-in-while-loop"]], "all(dict) - The all() function returns True when all elements in the given iterable are true. If not, it returns False.": [[55, "all-dict-the-all-function-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "all(list) - The method all() method returns True when all elements in the given iterable are true. If not, it returns False.": [[53, "all-list-the-method-all-method-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "any(dict) - The any() function returns True if any element of an iterable is True. If not, any() returns False.": [[55, "any-dict-the-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "any(list) - any() function returns True if any element of an iterable is True. If not, any() returns False.": [[53, "any-list-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "append() - The append() method adds an item to the end of the list.": [[53, "append-the-append-method-adds-an-item-to-the-end-of-the-list"]], "arange()": [[152, "arange"]], "asarray()": [[152, "asarray"]], "b) continue in for loop": [[47, "b-continue-in-for-loop"]], "b) continue in while loop": [[48, "b-continue-in-while-loop"]], "boxplot() and violinplot()": [[196, "boxplot-and-violinplot"]], "c) pass in for loop": [[47, "c-pass-in-for-loop"]], "c) pass in while loop": [[48, "c-pass-in-while-loop"]], "clear() - The clear() method removes all items from the list.": [[53, "clear-the-clear-method-removes-all-items-from-the-list"]], "clear() - The method clear() removes all items from the dictionary.": [[55, "clear-the-method-clear-removes-all-items-from-the-dictionary"]], "continue statement in while loop": [[49, "continue-statement-in-while-loop"]], "continue statement with else statements": [[49, "continue-statement-with-else-statements"]], "copy()  - The copy() method returns a shallow copy of the list.": [[53, "copy-the-copy-method-returns-a-shallow-copy-of-the-list"]], "copy() - The method copy() returns a shallow copy of the dictionary.": [[55, "copy-the-method-copy-returns-a-shallow-copy-of-the-dictionary"]], "count() - The count() method returns the number of times the specified element appears in the list.": [[53, "count-the-count-method-returns-the-number-of-times-the-specified-element-appears-in-the-list"]], "datetime.date Class": [[59, "datetime-date-class"]], "datetime.datetime": [[59, "datetime-datetime"]], "datetime.time": [[59, "datetime-time"]], "datetime.timedelta": [[59, "datetime-timedelta"]], "extend() - The extend() method adds all the elements of an iterable (list, tuple, string etc.) to the end of the list.": [[53, "extend-the-extend-method-adds-all-the-elements-of-an-iterable-list-tuple-string-etc-to-the-end-of-the-list"]], "for  loop in one line": [[47, "for-loop-in-one-line"]], "for loop inside for loop": [[47, "for-loop-inside-for-loop"]], "for loop inside while loop": [[48, "for-loop-inside-while-loop"]], "for loop with else": [[47, "for-loop-with-else"]], "for loop with if-else": [[47, "for-loop-with-if-else"]], "for loop with range() function": [[47, "for-loop-with-range-function"]], "fromkeys() - The method fromkeys() creates a new dictionary with keys from seq and values set to value.": [[55, "fromkeys-the-method-fromkeys-creates-a-new-dictionary-with-keys-from-seq-and-values-set-to-value"]], "heatmap": [[201, "heatmap"]], "heatmap colors": [[201, "heatmap-colors"]], "heatmap data": [[201, "heatmap-data"]], "if-elif-else statements and Logical Operator": [[45, "if-elif-else-statements-and-logical-operator"]], "if-elif-else statements or Logical Operator": [[45, "if-elif-else-statements-or-logical-operator"]], "if-elif-else statements with logical operators": [[45, "if-elif-else-statements-with-logical-operators"]], "import all names": [[80, "import-all-names"]], "import multiple modules": [[80, "import-multiple-modules"]], "import with renaming": [[80, "import-with-renaming"]], "index() - The index() method returns the index of the specified element in the list.": [[53, "index-the-index-method-returns-the-index-of-the-specified-element-in-the-list"]], "insert() - The insert() method inserts an element to the list at the specified index.": [[53, "insert-the-insert-method-inserts-an-element-to-the-list-at-the-specified-index"]], "issubclass()": [[103, "issubclass"]], "itmes() - The method items() returns a list of dict\u2019s (key, value) tuple pairs.": [[55, "itmes-the-method-items-returns-a-list-of-dicts-key-value-tuple-pairs"]], "keys() - The method keys() returns a list of all the available keys in the dictionary.": [[55, "keys-the-method-keys-returns-a-list-of-all-the-available-keys-in-the-dictionary"]], "lambda function use with filter()": [[79, "lambda-function-use-with-filter"]], "lambda function with map()": [[79, "lambda-function-with-map"]], "lambda function with reduce()": [[79, "lambda-function-with-reduce"]], "len(dict) - The len() function gives the total length of the dictionary. This would be equal to the number of items in the dictionary.": [[55, "len-dict-the-len-function-gives-the-total-length-of-the-dictionary-this-would-be-equal-to-the-number-of-items-in-the-dictionary"]], "len(list) - The len() method returns the number of elements in the list.": [[53, "len-list-the-len-method-returns-the-number-of-elements-in-the-list"]], "len(tuple) - The len() method returns the number of elements in the tuple.": [[54, "len-tuple-the-len-method-returns-the-number-of-elements-in-the-tuple"]], "math module Functions:": [[80, "math-module-functions"]], "max(list) - The max() method returns the elements from the list with maximum value.": [[53, "max-list-the-max-method-returns-the-elements-from-the-list-with-maximum-value"]], "max(tuple) - The max() method returns the elements from the tuple with maximum value. Type of element should be same otherwise complier throw TypeError.": [[54, "max-tuple-the-max-method-returns-the-elements-from-the-tuple-with-maximum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "max, min, argmax, argmin": [[149, "max-min-argmax-argmin"]], "min(list) - this method is used to get min value from the list. In Python3 lists element\u2019s type should be same otherwise compiler throw type Error.": [[53, "min-list-this-method-is-used-to-get-min-value-from-the-list-in-python3-lists-elements-type-should-be-same-otherwise-compiler-throw-type-error"]], "min(tuple) - The min() method returns the elements from the tuple with minimum value. Type of element should be same otherwise complier throw TypeError.": [[54, "min-tuple-the-min-method-returns-the-elements-from-the-tuple-with-minimum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "pop() - The pop() method removes the item at the given index from the list and returns the removed item.": [[53, "pop-the-pop-method-removes-the-item-at-the-given-index-from-the-list-and-returns-the-removed-item"]], "rand": [[149, "rand"]], "randint": [[149, "randint"]], "randn": [[149, "randn"]], "remove() - The remove() method removes the first matching element (which is passed as an argument) from the list.": [[53, "remove-the-remove-method-removes-the-first-matching-element-which-is-passed-as-an-argument-from-the-list"]], "reverse()  - The reverse() method reverses the elements of the list.": [[53, "reverse-the-reverse-method-reverses-the-elements-of-the-list"]], "self in Python, Demystified": [[106, "self-in-python-demystified"]], "setdefault() - The method setdefault() is similar to get but will set dict[key] = default if key is not already in dict.": [[55, "setdefault-the-method-setdefault-is-similar-to-get-but-will-set-dict-key-default-if-key-is-not-already-in-dict"]], "sort()  - The sort() method sorts the elements of a given list in a specific ascending or descending order.": [[53, "sort-the-sort-method-sorts-the-elements-of-a-given-list-in-a-specific-ascending-or-descending-order"]], "sorted(dict) - The sorted() function sorts the elements of a given iterable in a specific order (either ascending or descending) and returns the sorted iterable as a list.": [[53, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [54, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [55, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"]], "str(dict) - The str() function produces a printable string representation of a dictionary.": [[55, "str-dict-the-str-function-produces-a-printable-string-representation-of-a-dictionary"]], "time.sleep() in multithreaded programs": [[66, "time-sleep-in-multithreaded-programs"]], "time.struct_time Class": [[65, "time-struct-time-class"]], "tuple(seq) - The tuple() method converts a list of items into tuples.": [[54, "tuple-seq-the-tuple-method-converts-a-list-of-items-into-tuples"]], "type() - The type() function returns the type of the passed variable. If passed variable is dictionary then it would return a dictionary type.": [[55, "type-the-type-function-returns-the-type-of-the-passed-variable-if-passed-variable-is-dictionary-then-it-would-return-a-dictionary-type"]], "update() - The method update() adds dictionary dict2\u2019s key-values pairs in to dict. This function does not return anything.": [[55, "update-the-method-update-adds-dictionary-dict2s-key-values-pairs-in-to-dict-this-function-does-not-return-anything"]], "value() - The method values() returns a list of all the values available in a given dictionary.": [[55, "value-the-method-values-returns-a-list-of-all-the-values-available-in-a-given-dictionary"]], "while loop inside for loop": [[47, "while-loop-inside-for-loop"]], "while loop inside while loop": [[48, "while-loop-inside-while-loop"]], "while loop with else": [[48, "while-loop-with-else"]], "while loop with if-else": [[48, "while-loop-with-if-else"]], "you output should look like this:": [[101, "you-output-should-look-like-this"]], "\ud83d\udcbb Exercises  \u279e <span class='label label-default'>List</span>": [[44, "exercises-list"], [53, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Date and Time</span>": [[64, "exercises-date-and-time"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Dictionary</span>": [[55, "exercises-dictionary"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Exceptions Handling</span>": [[71, "exercises-exceptions-handling"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Files</span>": [[68, "exercises-files"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Functions</span>": [[74, "exercises-functions"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Higher order functions, Closure and Decorators</span>": [[37, "exercises-higher-order-functions-closure-and-decorators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List Comprehension</span>": [[57, "exercises-list-comprehension"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List</span>": [[45, "exercises-list"], [47, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Module</span>": [[80, "exercises-module"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Objects and Classes</span>": [[101, "exercises-objects-and-classes"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Operators</span>": [[95, "exercises-operators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Python Errors</span>": [[70, "exercises-python-errors"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>RegEx</span>": [[39, "exercises-regex"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Sets</span>": [[56, "exercises-sets"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>String</span>": [[52, "exercises-string"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Tuple</span>": [[54, "exercises-tuple"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Variables</span>": [[90, "exercises-variables"]]}, "docnames": ["content/concepts/Introduction_to_ml", "content/concepts/anomaly-detection", "content/concepts/concepts", "content/concepts/k-means", "content/concepts/linear-regression", "content/concepts/logistic-regression", "content/concepts/markdown-notebooks", "content/concepts/neural-networks", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo", "content/concepts/notebooks/data/README", "content/concepts/notebooks/k_means/k_means_demo", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo", "content/concepts/notebooks/linear_regression/non_linear_regression_demo", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo", "content/core/markdown", "content/core/mymarkdown", "content/essentials/000_Intro_to_Python", "content/essentials/intro_mathematics", "content/essentials/intro_python", "content/essentials/intro_statistics", "content/essentials/mathematics/1_linear_algebra", "content/essentials/mathematics/calculus_fourier-series", "content/essentials/mathematics/capital-pi-notation", "content/essentials/mathematics/capital-sigma-notation", "content/essentials/mathematics/dissimilarity_measures", "content/essentials/mathematics/linear-algebra_matrices", "content/essentials/mathematics/linear-algebra_vectors", "content/essentials/mathematics/mathematics_toc", "content/essentials/python/advanced/001_Python_Iterators", "content/essentials/python/advanced/002_Python_Generators", "content/essentials/python/advanced/003_Python_Closure", "content/essentials/python/advanced/004_Python_Decorators", "content/essentials/python/advanced/005_Python_Property", "content/essentials/python/advanced/006_Python_RegEx", "content/essentials/python/advanced/Python_args_and_kwargs", "content/essentials/python/advanced/advanced_toc", "content/essentials/python/controlflow/000_Python_Flow_Control_statement", "content/essentials/python/controlflow/001_Python_if_statement", "content/essentials/python/controlflow/002_Python_if_else_statement", "content/essentials/python/controlflow/003_Python_if_elif_else_statement", "content/essentials/python/controlflow/004_Python_Nested_if_statement", "content/essentials/python/controlflow/005_Python_for_Loop", "content/essentials/python/controlflow/006_Python_while_Loop", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements", "content/essentials/python/controlflow/controlflow_toc", "content/essentials/python/datatypes/001_Python_Numbers", "content/essentials/python/datatypes/002_Python_String", "content/essentials/python/datatypes/003_Python_List", "content/essentials/python/datatypes/004_Python_Tuple", "content/essentials/python/datatypes/005_Python_Dictionary", "content/essentials/python/datatypes/006_Python_Sets", "content/essentials/python/datatypes/Python_List_Comprehension", "content/essentials/python/datatypes/datatypes_toc", "content/essentials/python/datetime/001_Python_datetime_Module", "content/essentials/python/datetime/002_Python_strftime", "content/essentials/python/datetime/003_Python_strptime", "content/essentials/python/datetime/004_Python_current_date_and_time", "content/essentials/python/datetime/005_Python_get_current_time", "content/essentials/python/datetime/006_Python_timestamp_to_datetime", "content/essentials/python/datetime/007_Python_time_Module", "content/essentials/python/datetime/008_Python_sleep", "content/essentials/python/datetime/datetime_toc", "content/essentials/python/files/001_Python_File_Input_Output", "content/essentials/python/files/002_Python_File_Directory", "content/essentials/python/files/003_Python_File_Exception", "content/essentials/python/files/004_Python_Exceptions_Handling", "content/essentials/python/files/005_Python_User_defined_Exceptions", "content/essentials/python/files/files_toc", "content/essentials/python/functions/001_Python_Functions", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal", "content/essentials/python/functions/003_Python_Function_global_Keywords", "content/essentials/python/functions/004_Python_Function_Arguments", "content/essentials/python/functions/005_Python_Function_Recursion", "content/essentials/python/functions/006_Python_Function_Anonymous", "content/essentials/python/functions/007_Python_Function_Module", "content/essentials/python/functions/008_Python_Function_random_Module", "content/essentials/python/functions/009_Python_Function_math_Module", "content/essentials/python/functions/010_Python_Function_Package", "content/essentials/python/functions/Python_Docstrings", "content/essentials/python/functions/Python_User_defined_Functions", "content/essentials/python/functions/functions_toc", "content/essentials/python/introduction/002_Hello_World", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments", "content/essentials/python/introduction/005_Python_Variables_&_Constants", "content/essentials/python/introduction/006_Python_Literals", "content/essentials/python/introduction/007_Python_Data_Types", "content/essentials/python/introduction/008_Python_Type_Conversion", "content/essentials/python/introduction/009_Python_Input_Output_Import", "content/essentials/python/introduction/010_Python_Operators", "content/essentials/python/introduction/011_Python_Namespace_and_Scope", "content/essentials/python/introduction/1_data_structures_and_agorithms", "content/essentials/python/introduction/Interpreter_Vs_Compiler", "content/essentials/python/introduction/constant", "content/essentials/python/introduction/intro_toc", "content/essentials/python/objects/001_Python_OOPs_Concepts", "content/essentials/python/objects/002_Python_Classes_and_Objects", "content/essentials/python/objects/003_Python_Inheritance", "content/essentials/python/objects/004_Python_Operator_Overloading", "content/essentials/python/objects/objects_toc", "content/essentials/python/objects/self_in_Python_Demystified", "content/essentials/statistics/statistics", "content/markdown", "content/markdown-notebooks", "content/mymarkdown", "content/notebooks", "content/real-world/markdown", "content/real-world/mymarkdown", "content/tools/hf/intro", "content/tools/intro_tools", "content/tools/langchain/LangChain Cookbook Part 1 - Fundamentals", "content/tools/langchain/LangChain Cookbook Part 2 - Use Cases", "content/tools/langchain/intro", "content/tools/langchain/langchain-modules", "content/tools/langchain/langchain_toc", "content/tools/langchain/langgraph", "content/tools/langchain/langserve", "content/tools/langchain/langsmith", "content/tools/langchain/lcel", "content/tools/langchain/projects/agents/Agents", "content/tools/langchain/projects/agents/Agents + ZapierToolkit", "content/tools/langchain/projects/bots/Twitter_Reply_Bot/Twitter Reply Bot Notebook", "content/tools/langchain/projects/chains/Chain Types", "content/tools/langchain/projects/chatapi/ChatAPI + LangChain Basics", "content/tools/langchain/projects/data_generation/5 Levels Of Summarization - Novice To Expert", "content/tools/langchain/projects/data_generation/Advanced Retrieval With LangChain", "content/tools/langchain/projects/data_generation/Ask A Book Questions", "content/tools/langchain/projects/data_generation/Clean and Standardize Data", "content/tools/langchain/projects/data_generation/Custom Files Question & Answer", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Function Calling)", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Kor)", "content/tools/langchain/projects/data_generation/Exploring ChatGPT Function Calling", "content/tools/langchain/projects/data_generation/Instructing LLMs To Match Tone", "content/tools/langchain/projects/data_generation/Personalized Email Generation", "content/tools/langchain/projects/data_generation/Retrieval_With_MMR", "content/tools/langchain/projects/data_generation/Topic Modeling With Language Models", "content/tools/langchain/projects/data_generation/Using LLMs To Summarize Personal Research", "content/tools/langchain/projects/data_generation/Working With Call or Video Transcripts", "content/tools/langchain/projects/project_toc", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2", "content/tools/matplotlib/matplotlib_toc", "content/tools/numpy/001_Python_NumPy", "content/tools/numpy/002_Python_NumPy_Array_Part1", "content/tools/numpy/003_Python_NumPy_Array_Part2", "content/tools/numpy/004_Python_NumPy_Array_Part3", "content/tools/numpy/005_Python_NumPy_Array_Part4", "content/tools/numpy/Python_Numpy_Exercises_with_hints", "content/tools/numpy/numpy_toc", "content/tools/pandas/001_Python_Pandas_DataFrame", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index", "content/tools/pandas/002_Python_Pandas_Exercise_1", "content/tools/pandas/003_Python_Pandas_Exercise_2", "content/tools/pandas/pandas_toc", "content/tools/pytorch/00_pytorch_fundamentals", "content/tools/pytorch/01_pytorch_workflow", "content/tools/pytorch/02_pytorch_classification", "content/tools/pytorch/03_pytorch_computer_vision", "content/tools/pytorch/04_pytorch_custom_datasets", "content/tools/pytorch/05_pytorch_going_modular", "content/tools/pytorch/06_pytorch_transfer_learning", "content/tools/pytorch/07_pytorch_experiment_tracking", "content/tools/pytorch/08_pytorch_paper_replicating", "content/tools/pytorch/09_pytorch_model_deployment", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode", "content/tools/pytorch/going_modular/README", "content/tools/pytorch/going_modular/going_modular/README", "content/tools/pytorch/pytorch_toc", "content/tools/seaborn/001_Seaborn_Loading_Dataset", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics", "content/tools/seaborn/003_Matplotlib_vs_Seaborn", "content/tools/seaborn/004_Seaborn_Color_Palettes", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots", "content/tools/seaborn/008_Seaborn_Distribution_Plots", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot", "content/tools/seaborn/016_Seaborn_PairGrid_Plot", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot", "content/tools/seaborn/018_Seaborn_Heat_Map", "content/tools/seaborn/019_Seaborn_Cluster_Map", "content/tools/seaborn/seaborn_toc", "content/tools/tools-for-llms", "content/tools/tools-for-ml", "content/tools/tools-for-nn", "curriculum", "intro"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["content/concepts/Introduction_to_ml.md", "content/concepts/anomaly-detection.md", "content/concepts/concepts.md", "content/concepts/k-means.md", "content/concepts/linear-regression.md", "content/concepts/logistic-regression.md", "content/concepts/markdown-notebooks.md", "content/concepts/neural-networks.md", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo.ipynb", "content/concepts/notebooks/data/README.md", "content/concepts/notebooks/k_means/k_means_demo.ipynb", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/non_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo.ipynb", "content/core/markdown.md", "content/core/mymarkdown.md", "content/essentials/000_Intro_to_Python.ipynb", "content/essentials/intro_mathematics.ipynb", "content/essentials/intro_python.ipynb", "content/essentials/intro_statistics.ipynb", "content/essentials/mathematics/1_linear_algebra.ipynb", "content/essentials/mathematics/calculus_fourier-series.ipynb", "content/essentials/mathematics/capital-pi-notation.ipynb", "content/essentials/mathematics/capital-sigma-notation.ipynb", "content/essentials/mathematics/dissimilarity_measures.ipynb", "content/essentials/mathematics/linear-algebra_matrices.ipynb", "content/essentials/mathematics/linear-algebra_vectors.ipynb", "content/essentials/mathematics/mathematics_toc.md", "content/essentials/python/advanced/001_Python_Iterators.ipynb", "content/essentials/python/advanced/002_Python_Generators.ipynb", "content/essentials/python/advanced/003_Python_Closure.ipynb", "content/essentials/python/advanced/004_Python_Decorators.ipynb", "content/essentials/python/advanced/005_Python_Property.ipynb", "content/essentials/python/advanced/006_Python_RegEx.ipynb", "content/essentials/python/advanced/Python_args_and_kwargs.ipynb", "content/essentials/python/advanced/advanced_toc.md", "content/essentials/python/controlflow/000_Python_Flow_Control_statement.ipynb", "content/essentials/python/controlflow/001_Python_if_statement.ipynb", "content/essentials/python/controlflow/002_Python_if_else_statement.ipynb", "content/essentials/python/controlflow/003_Python_if_elif_else_statement.ipynb", "content/essentials/python/controlflow/004_Python_Nested_if_statement.ipynb", "content/essentials/python/controlflow/005_Python_for_Loop.ipynb", "content/essentials/python/controlflow/006_Python_while_Loop.ipynb", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements.ipynb", "content/essentials/python/controlflow/controlflow_toc.md", "content/essentials/python/datatypes/001_Python_Numbers.ipynb", "content/essentials/python/datatypes/002_Python_String.ipynb", "content/essentials/python/datatypes/003_Python_List.ipynb", "content/essentials/python/datatypes/004_Python_Tuple.ipynb", "content/essentials/python/datatypes/005_Python_Dictionary.ipynb", "content/essentials/python/datatypes/006_Python_Sets.ipynb", "content/essentials/python/datatypes/Python_List_Comprehension.ipynb", "content/essentials/python/datatypes/datatypes_toc.md", "content/essentials/python/datetime/001_Python_datetime_Module.ipynb", "content/essentials/python/datetime/002_Python_strftime.ipynb", "content/essentials/python/datetime/003_Python_strptime.ipynb", "content/essentials/python/datetime/004_Python_current_date_and_time.ipynb", "content/essentials/python/datetime/005_Python_get_current_time.ipynb", "content/essentials/python/datetime/006_Python_timestamp_to_datetime.ipynb", "content/essentials/python/datetime/007_Python_time_Module.ipynb", "content/essentials/python/datetime/008_Python_sleep.ipynb", "content/essentials/python/datetime/datetime_toc.md", "content/essentials/python/files/001_Python_File_Input_Output.ipynb", "content/essentials/python/files/002_Python_File_Directory.ipynb", "content/essentials/python/files/003_Python_File_Exception.ipynb", "content/essentials/python/files/004_Python_Exceptions_Handling.ipynb", "content/essentials/python/files/005_Python_User_defined_Exceptions.ipynb", "content/essentials/python/files/files_toc.md", "content/essentials/python/functions/001_Python_Functions.ipynb", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal.ipynb", "content/essentials/python/functions/003_Python_Function_global_Keywords.ipynb", "content/essentials/python/functions/004_Python_Function_Arguments.ipynb", "content/essentials/python/functions/005_Python_Function_Recursion.ipynb", "content/essentials/python/functions/006_Python_Function_Anonymous.ipynb", "content/essentials/python/functions/007_Python_Function_Module.ipynb", "content/essentials/python/functions/008_Python_Function_random_Module.ipynb", "content/essentials/python/functions/009_Python_Function_math_Module.ipynb", "content/essentials/python/functions/010_Python_Function_Package.ipynb", "content/essentials/python/functions/Python_Docstrings.ipynb", "content/essentials/python/functions/Python_User_defined_Functions.ipynb", "content/essentials/python/functions/functions_toc.md", "content/essentials/python/introduction/002_Hello_World.ipynb", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers.ipynb", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments.ipynb", "content/essentials/python/introduction/005_Python_Variables_&_Constants.ipynb", "content/essentials/python/introduction/006_Python_Literals.ipynb", "content/essentials/python/introduction/007_Python_Data_Types.ipynb", "content/essentials/python/introduction/008_Python_Type_Conversion.ipynb", "content/essentials/python/introduction/009_Python_Input_Output_Import.ipynb", "content/essentials/python/introduction/010_Python_Operators.ipynb", "content/essentials/python/introduction/011_Python_Namespace_and_Scope.ipynb", "content/essentials/python/introduction/1_data_structures_and_agorithms.ipynb", "content/essentials/python/introduction/Interpreter_Vs_Compiler.ipynb", "content/essentials/python/introduction/constant.ipynb", "content/essentials/python/introduction/intro_toc.md", "content/essentials/python/objects/001_Python_OOPs_Concepts.ipynb", "content/essentials/python/objects/002_Python_Classes_and_Objects.ipynb", "content/essentials/python/objects/003_Python_Inheritance.ipynb", "content/essentials/python/objects/004_Python_Operator_Overloading.ipynb", "content/essentials/python/objects/objects_toc.md", "content/essentials/python/objects/self_in_Python_Demystified.ipynb", "content/essentials/statistics/statistics.ipynb", "content/markdown.md", "content/markdown-notebooks.md", "content/mymarkdown.md", "content/notebooks.ipynb", "content/real-world/markdown.md", "content/real-world/mymarkdown.md", "content/tools/hf/intro.md", "content/tools/intro_tools.ipynb", "content/tools/langchain/LangChain Cookbook Part 1 - Fundamentals.ipynb", "content/tools/langchain/LangChain Cookbook Part 2 - Use Cases.ipynb", "content/tools/langchain/intro.md", "content/tools/langchain/langchain-modules.md", "content/tools/langchain/langchain_toc.md", "content/tools/langchain/langgraph.md", "content/tools/langchain/langserve.md", "content/tools/langchain/langsmith.md", "content/tools/langchain/lcel.md", "content/tools/langchain/projects/agents/Agents.ipynb", "content/tools/langchain/projects/agents/Agents + ZapierToolkit.ipynb", "content/tools/langchain/projects/bots/Twitter_Reply_Bot/Twitter Reply Bot Notebook.ipynb", "content/tools/langchain/projects/chains/Chain Types.ipynb", "content/tools/langchain/projects/chatapi/ChatAPI + LangChain Basics.ipynb", "content/tools/langchain/projects/data_generation/5 Levels Of Summarization - Novice To Expert.ipynb", "content/tools/langchain/projects/data_generation/Advanced Retrieval With LangChain.ipynb", "content/tools/langchain/projects/data_generation/Ask A Book Questions.ipynb", "content/tools/langchain/projects/data_generation/Clean and Standardize Data.ipynb", "content/tools/langchain/projects/data_generation/Custom Files Question & Answer.ipynb", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Function Calling).ipynb", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Kor).ipynb", "content/tools/langchain/projects/data_generation/Exploring ChatGPT Function Calling.ipynb", "content/tools/langchain/projects/data_generation/Instructing LLMs To Match Tone.ipynb", "content/tools/langchain/projects/data_generation/Personalized Email Generation.ipynb", "content/tools/langchain/projects/data_generation/Retrieval_With_MMR.ipynb", "content/tools/langchain/projects/data_generation/Topic Modeling With Language Models.ipynb", "content/tools/langchain/projects/data_generation/Using LLMs To Summarize Personal Research.ipynb", "content/tools/langchain/projects/data_generation/Working With Call or Video Transcripts.ipynb", "content/tools/langchain/projects/project_toc.md", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1.ipynb", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2.ipynb", "content/tools/matplotlib/matplotlib_toc.md", "content/tools/numpy/001_Python_NumPy.ipynb", "content/tools/numpy/002_Python_NumPy_Array_Part1.ipynb", "content/tools/numpy/003_Python_NumPy_Array_Part2.ipynb", "content/tools/numpy/004_Python_NumPy_Array_Part3.ipynb", "content/tools/numpy/005_Python_NumPy_Array_Part4.ipynb", "content/tools/numpy/Python_Numpy_Exercises_with_hints.ipynb", "content/tools/numpy/numpy_toc.md", "content/tools/pandas/001_Python_Pandas_DataFrame.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index.ipynb", "content/tools/pandas/002_Python_Pandas_Exercise_1.ipynb", "content/tools/pandas/003_Python_Pandas_Exercise_2.ipynb", "content/tools/pandas/pandas_toc.md", "content/tools/pytorch/00_pytorch_fundamentals.ipynb", "content/tools/pytorch/01_pytorch_workflow.ipynb", "content/tools/pytorch/02_pytorch_classification.ipynb", "content/tools/pytorch/03_pytorch_computer_vision.ipynb", "content/tools/pytorch/04_pytorch_custom_datasets.ipynb", "content/tools/pytorch/05_pytorch_going_modular.md", "content/tools/pytorch/06_pytorch_transfer_learning.ipynb", "content/tools/pytorch/07_pytorch_experiment_tracking.ipynb", "content/tools/pytorch/08_pytorch_paper_replicating.ipynb", "content/tools/pytorch/09_pytorch_model_deployment.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode.ipynb", "content/tools/pytorch/going_modular/README.md", "content/tools/pytorch/going_modular/going_modular/README.md", "content/tools/pytorch/pytorch_toc.md", "content/tools/seaborn/001_Seaborn_Loading_Dataset.ipynb", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics.ipynb", "content/tools/seaborn/003_Matplotlib_vs_Seaborn.ipynb", "content/tools/seaborn/004_Seaborn_Color_Palettes.ipynb", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot.ipynb", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot.ipynb", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots.ipynb", "content/tools/seaborn/008_Seaborn_Distribution_Plots.ipynb", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot.ipynb", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot.ipynb", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot.ipynb", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot.ipynb", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot.ipynb", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot.ipynb", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot.ipynb", "content/tools/seaborn/016_Seaborn_PairGrid_Plot.ipynb", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot.ipynb", "content/tools/seaborn/018_Seaborn_Heat_Map.ipynb", "content/tools/seaborn/019_Seaborn_Cluster_Map.ipynb", "content/tools/seaborn/seaborn_toc.md", "content/tools/tools-for-llms.md", "content/tools/tools-for-ml.md", "content/tools/tools-for-nn.md", "curriculum.md", "intro.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 30, 31, 34, 35, 36, 37, 38, 42, 43, 46, 47, 48, 49, 51, 52, 54, 57, 61, 63, 64, 65, 66, 68, 70, 71, 74, 75, 76, 78, 79, 80, 82, 84, 85, 89, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 116, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 149, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 169, 171, 172, 174, 175, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 205, 208], "0": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 88, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 106, 107, 111, 116, 117, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "00": [59, 60, 61, 63, 65, 66, 94, 117, 131, 136, 139, 141, 155, 156, 158, 169, 171, 172, 180, 188, 189, 195, 198], "000": [51, 128, 130, 136, 141, 143, 172, 173, 175, 178, 189, 194], "0000": [14, 65, 95, 170, 171, 172, 177], "00000": 155, "000000": [52, 60, 61, 94, 135, 136, 155, 166, 167, 184, 189, 200], "00000000": 169, "0000003": 52, "000007": 16, "000013": 17, "000032": 16, "000036": 17, "000066": 16, "000079": 16, "0000a3": 196, "0000e": 171, "0001": [51, 59, 65, 170, 172], "000110011001100110011": 51, "000112": 16, "000126": 16, "000155": 16, "00015641732898075134": 116, "000174": 17, "000191": 16, "00019600906371495047": 116, "000214": 16, "000216": 16, "000238": 17, "000269": 17, "000285": 17, "0003": 172, "000301": 17, "000325": 17, "00035465431654651654": 116, "000367": 17, "000385": 16, "000410": 17, "000456": 17, "000465": 17, "000550": 17, "0006": 178, "000683": 11, "000743": 17, "0007734206914647714": 116, "0009": 172, "000917": 16, "000a": 51, "001": [60, 61, 116, 170, 173, 174, 175, 176, 179, 180], "0010": [95, 180], "001058628615053026": 116, "0011": [95, 172], "001100": 17, "001139": 17, "001178": 17, "00121062e": 198, "001232": 17, "001262": 17, "0012645035749301314": 170, "001270": 16, "001354": 17, "00140327e": 198, "0016": 172, "001619": 17, "001665": 17, "0017": 172, "0018": 172, "001835": 16, "001868": 200, "001873": 16, "001899": 17, "0019": [179, 180], "001_python_file_input_output": 69, "002": [60, 61], "0020": 172, "002108": 17, "002177": 17, "002200": 17, "0023": 177, "002327879593869": 152, "00232788": 152, "0024": 172, "002464": 17, "002513": 17, "0027": 172, "0028": 177, "002841": 17, "002895": 17, "002940": 17, "002_python_file_directori": 69, "003": [13, 116, 117, 177], "0030": 172, "003029": 17, "0031": 172, "003152": 17, "003165106289088726": 116, "0031846734422911363": 116, "003456": 16, "003478": 17, "0035": 172, "00357518e": 198, "0037": 172, "003780": 17, "003845": 17, "0039": 172, "003_python_file_except": 69, "004": 175, "004079": 16, "004274": 17, "004291": 17, "0043": 172, "004785": 13, "004838": 16, "0049": 172, "004_python_exceptions_handl": 69, "005": 198, "0051": 172, "0052": 172, "005294": 17, "005308": 17, "005356": 200, "005408": 17, "005436": 16, "0055": [169, 172], "0056": 172, "0057": 172, "005742": 17, "005743": 16, "0058": 172, "005837": 16, "005978": 17, "005_python_user_defined_except": 69, "0060": 172, "00603": 171, "00615": 171, "00616708": 149, "006191": 196, "0062": 172, "006201": 17, "006215683650225401": 170, "0063": 172, "0065": 172, "0067": 179, "006730": 16, "0069": 172, "007": [94, 175, 198], "007120": 16, "0072": 177, "007234": 200, "0073": 172, "007320": 17, "0075": 172, "007525": 16, "00778181e": 198, "0078": 172, "007860": 17, "00786338": 152, "007995": 16, "007_python_function_modul": 68, "0080": 172, "00826323e": 198, "0083": 172, "0084": 172, "00856914e": 198, "0086": 171, "008831": 17, "0089": 172, "009": 52, "0090": [172, 179], "009066": 17, "0092": 172, "0094": 172, "009417": 16, "0095": [172, 177, 179, 180], "009509": 17, "009529": 17, "00960206e": 198, "009757": 17, "009783552028238773": 178, "00_pytorch_fundament": 169, "01": [11, 13, 52, 59, 60, 61, 63, 65, 66, 94, 117, 169, 170, 171, 172, 173, 178, 180, 184, 188, 191, 193, 194, 195, 196, 198, 200], "010": [52, 198], "0100": [95, 171], "010000": 155, "0101": [95, 172], "0102": [172, 179], "010289": 17, "0103": 172, "010311": 16, "01032310e": 198, "01051775e": 198, "010527": 17, "01061": 171, "0107": [171, 172], "010755": 17, "0109": 172, "011": [175, 176], "0110": 172, "01118234211553424": 116, "011255": 16, "0114": 172, "011523": 196, "011630": 17, "01169557310640812": 178, "011743": 17, "0118": 172, "01183409e": 198, "0119": 172, "012098": 17, "012345": 52, "0123456789": 80, "0124": 172, "0125": 172, "0126": 172, "0127": 172, "012874804746266883": 116, "012986": 17, "0131": 172, "013148": 17, "01326": 171, "013316": 17, "013350": 17, "0134": 172, "01345985e": 198, "013474": 17, "0135": 172, "013555": 17, "013648": 171, "013763": 17, "013801801018416882": 170, "013853": 17, "0140": 172, "014086711220443249": 170, "0141": [172, 180], "014127": 17, "0142": [171, 172], "01426": 171, "0143": 172, "014374": 16, "0146": 172, "014745": 17, "0148": 172, "0149": [171, 172], "0150": 172, "015092319017854244": 116, "0152": 172, "0155": 172, "0156": 172, "015672": 16, "0157": [172, 173], "01580": 177, "015862": 17, "015877": 17, "0160": [172, 173], "0161": [172, 177], "016288": 17, "0163": 172, "016412": 178, "0165": 172, "0167": 172, "016705": 15, "0168": 171, "0169": 172, "0170": 172, "0171": 172, "01710843e": 198, "0173": 172, "0177": 172, "017837": 17, "0180": 172, "0181": 172, "0182": 172, "0187": 172, "0188": 172, "0190": 172, "019028": 16, "01919923e": 198, "0192": 172, "0193": 172, "0194": 172, "019404": 17, "019472001962491232": 116, "019542": 17, "019561": 16, "0196": [172, 173], "019608": 155, "019675": 17, "019745": 17, "0198": 172, "0199": 172, "019922": 12, "019968": 172, "01996805111821": 172, "01_learn_python4data": [69, 80, 167], "01_pytorch_workflow_model_0": 170, "01_pytorch_workflow_model_1": 170, "01x345": 52, "02": [12, 59, 60, 61, 65, 66, 117, 170, 171, 172, 173, 180, 184, 198], "0200": [170, 171], "02004": 171, "0201": 172, "0203": 172, "020391": 16, "0204": 172, "020408": 166, "0205": 172, "0207": 172, "0208": [179, 180], "0209": 172, "0210": [172, 180], "021069": 196, "02127": 171, "0213": 172, "0214": 179, "021509": 171, "0216": 172, "021708": 15, "0218": 172, "021838": 17, "021854": 16, "02210": [45, 47], "0222": 179, "0223": [172, 174, 179, 180], "022326": 16, "0225": 172, "0226": 172, "022727": 166, "0228": 172, "0229": 172, "022960": 17, "0231": 172, "02319487": 152, "0232": 172, "0233": 172, "0235": [172, 177], "0236": 172, "023622": 17, "0237": 172, "0238": 172, "0240": 172, "024045": 17, "024052": 15, "0241": 172, "0242": 172, "02423": 171, "024253": 17, "0244": 172, "0245": 172, "0247": 172, "0248": 172, "0249": 172, "025000": 189, "0252": 172, "0253": 172, "025347": 17, "025388": 17, "02539500e": 198, "0254": 172, "025531": 17, "025549": 16, "0256": [172, 178], "025678": 17, "0257": 172, "0258": 172, "02587": 171, "0259": 172, "0260": 172, "026005": 17, "026023": 17, "0261": 172, "0262": 172, "0263": [172, 178], "026366": 17, "0264": [172, 178], "0266": 172, "026648": 17, "0268": 172, "02683718e": 198, "0269": 178, "027": 178, "0271": 172, "0272": 172, "0273": 172, "0274": 172, "027404": 17, "0275": 172, "027513": 17, "0277": 172, "0278": 172, "02788739837706089": 170, "02799": 171, "0280": 172, "028090": 17, "0283": 172, "0284": 172, "028452": 15, "0285": 172, "02850": 171, "0286": 172, "0288": 172, "028944": 17, "028969": 17, "0290": 172, "02901": 171, "0291": 172, "02919730e": 198, "0292": 172, "02928161e": 198, "029371": 17, "029398": 17, "0294": 172, "0295": 172, "0297": 172, "02989209e": 198, "0299": 172, "02f": 32, "03": [24, 52, 66, 117, 130, 141, 169, 171, 172, 173, 174, 178, 180, 184, 198], "0300": 171, "030114": 196, "0304": 172, "0306": 172, "03068156e": 198, "0307": 172, "030774": 184, "03083": 171, "030971": 17, "030e2eec799d": 37, "031": 178, "0310": 172, "031250": 166, "0313": 172, "03132382780313492": 170, "0314": [172, 173], "03145352": 152, "0314fd17": 131, "0315": 172, "0316": 172, "0318": 172, "0319": 172, "032258": 166, "0323": 172, "0324": 172, "032475": 16, "03247675": 152, "0326": 172, "032878": 16, "0330": 172, "03300": 171, "033011": 17, "033088": 17, "033175": 16, "033192": 17, "0333": 172, "033395": 17, "03348578e": 198, "0335": 172, "0336": 172, "03387531e": 198, "033911": 17, "0342": 172, "0343": 172, "034357": 15, "0344": 172, "03448": 171, "0345": 172, "03461004": 152, "03476089984178543": 170, "03486": 171, "0349": 172, "035009": 17, "03505598723366": 80, "0351": 169, "035149": 16, "0352": [172, 173], "0353": [172, 173], "0354": 172, "0355": 172, "0356": [172, 177], "035714": 166, "0359": 172, "0360": 172, "036166": 17, "036300": 17, "0364": 172, "03643": 171, "0365": 172, "0366": 172, "0367": 172, "0369": 172, "0370": 172, "0371": 171, "037224": 16, "0373": 172, "0374": 172, "037445": 17, "0375": 172, "0376": 172, "0377": 172, "037732": 17, "037747": 17, "0381": 172, "03818932920694351": 170, "038202": 17, "0383": 172, "0384": 172, "0385": 172, "038580": 16, "0386": 172, "0388": 172, "0389": 172, "0390": 172, "03910": 171, "0392": [172, 173], "0395": 172, "039631": 196, "039698": 17, "0397": 172, "0398": 172, "0399": 172, "039919": 17, "03_daniels_macbook_pro": 176, "03_pytorch_computer_vision_model_2": 172, "03ed55": 80, "03pm": 60, "04": [59, 65, 66, 117, 135, 136, 141, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 188], "0400": [170, 171], "040000": 155, "0401": 172, "0402": 172, "0404": 172, "0406": 172, "0408": 172, "0409": 172, "04098": 171, "040986": 17, "0411": 172, "0412": 172, "0413": 172, "0415": 172, "04167863354086876": 170, "041750": 17, "0420": [171, 172], "042011": 16, "0421": [171, 172], "042190": 15, "0422": 172, "0424": 172, "0426": 172, "0427": 172, "0428": 172, "042849": 8, "042857": 166, "0429": 172, "04295": 171, "042991": 17, "0430": 172, "0431": [172, 173], "0432": 172, "04324": 171, "043293": 17, "0433": 172, "0440": 172, "0441": 172, "0443": 172, "044382": 17, "0444": 172, "0446": 172, "0447": 172, "0448": 172, "0449": 172, "0450": 172, "045016": 17, "045149999999999996": 135, "0452": 172, "04543796554207802": 170, "0455": 172, "0457": 172, "0458": 172, "0459": 172, "045985": 17, "0461": 177, "04617067e": 198, "0462": 172, "0463": 172, "046456": [11, 13], "046484": 17, "0465": 177, "0467": 172, "0468": 172, "046815": 8, "0469": 172, "0470": 172, "04702762e": 198, "0471": 172, "0472": 172, "047295": 16, "0473": 172, "047347": 17, "0474": 172, "04763428": 149, "0477": 172, "0478": 172, "0481": 172, "048227": 17, "0485": 172, "04857": 171, "0486": 172, "048779": 17, "0488": 172, "048819": 12, "0489": 172, "04892": 171, "0494": 178, "0496": 172, "0497": 172, "049796": 17, "0498": 172, "04_custom_data_cr": [173, 178], "04_python_funct": [68, 80], "05": [8, 60, 61, 66, 117, 126, 132, 141, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184], "0500": [194, 196], "05017144e": 198, "050218": 17, "0505": 172, "050755": 17, "05082974": 149, "0510": [172, 173], "051020": 166, "051179": 17, "0512": 172, "051267": 15, "05133": 171, "0515": 172, "0516": 172, "051891": 17, "0521": 172, "05233094e": 198, "052387": 12, "0524": 172, "0525": 172, "0527": 172, "0528": 176, "0529": 172, "0530": 172, "053148526698350906": 170, "0532": 172, "0533": 172, "053369999999999994": 136, "0534": 172, "0535": 172, "0537": [174, 176, 179, 180], "053816": 17, "0539": 172, "0540": 172, "0541": 172, "0542": [172, 177], "0544": 172, "0546": 172, "05473060e": 198, "0549": [172, 173], "0551": 172, "0552": 172, "055217": 17, "0553": 172, "0554": 172, "0555": 172, "0556": 172, "0557": 172, "05571": 171, "0558": 172, "0559": 172, "055903": 17, "05599": 171, "0560": 172, "0562": 172, "0563": 172, "056380": 16, "0564": 172, "05655136772680869": 81, "0566": 172, "05669558e": 198, "0567": 172, "0568": 172, "05698": 171, "0570": 172, "057333": 184, "0574": 172, "0577": 172, "0578": 173, "0579": 172, "0580": 172, "0583": 172, "0584": 172, "058497": 16, "0585": 172, "0586": 172, "0587": 172, "058710": 17, "0588": [172, 173], "058824": 166, "058849": 17, "0590": 172, "05908a030c74": 102, "0592": 172, "05924": 171, "0594": 172, "0595": 172, "059554": 17, "0596": 172, "0597": 172, "0598": [171, 172], "0599": 172, "05_going_modular_cell_mode_tinyvgg_model": [174, 179, 180], "05_going_modular_script_mode_tinyvgg_model": [174, 180], "05_going_modular_tingvgg_model": [174, 179, 180], "05_python_fil": 69, "05_pytorch_going_modular_cell_mod": 181, "05_pytorch_going_modular_script_mod": 181, "05t22": 136, "06": [59, 60, 61, 62, 63, 65, 66, 141, 176, 177, 178, 180, 182, 184, 186], "0600": 170, "0602": 172, "0603": 172, "0605": 172, "0607": 172, "061065": 17, "06107": 171, "06109": 171, "0613": [116, 135, 137, 141, 172], "0616": [172, 174, 176, 179, 180], "06161913e": 198, "061689": 17, "0617": 172, "0618": 172, "061915": 17, "0620": 172, "0622": 172, "0623": 172, "0624": 172, "062439": 17, "062500": 166, "0627": [173, 178, 179], "0629": 172, "0630": 180, "0631": 172, "0632": 178, "0633": 172, "0634": [172, 173], "0635": 172, "063577": 200, "0636": 172, "0637": 172, "0638": [172, 178], "0639": 172, "0641": 178, "064182": 178, "06418210905976593": 178, "0642": 178, "0643": 172, "0645": 172, "064516": 166, "0646": [169, 172], "0647": 172, "06473556160926819": 170, "0649": 172, "0650": 177, "0651": 172, "065211": [11, 13], "065444": 17, "06563599e": 198, "0657": 172, "065897": 17, "0659": 172, "065937": 17, "0661": 172, "0662": 178, "0663": 172, "0665": 172, "0666": 172, "06663512e": 198, "066667": 155, "0667": [172, 173], "0669": 172, "0672": 172, "0673": 172, "0674": 172, "06745": 171, "0676": 172, "0677": 172, "0678": 172, "0680": 172, "068044": 12, "0681": 172, "0684": 172, "0685": 172, "068645": 15, "0688": 172, "0689": 172, "0690": 172, "0691": 172, "0692": 172, "0693": [172, 178], "0694": 172, "06947804e": 198, "0696": 172, "069723": 12, "0699": 172, "06_pytorch_transfer_learn": 176, "07": [60, 61, 63, 66, 117, 169, 170, 172, 176, 178], "0700": 126, "0701": 172, "070254": 17, "070279": 17, "0704": 172, "070574": 17, "0706": [172, 173], "0708": 194, "0709": 172, "0711": 172, "0713": 172, "0714": 172, "0717": 172, "07216": 171, "072182": 15, "0722": 172, "07232122868299484": 170, "0724": 172, "0726": 171, "0729": 178, "0730": 172, "0731": 172, "073129": 11, "073160": 16, "0734": 172, "0735": 172, "073595": 17, "0736": 172, "073709": 198, "07376": 171, "0738": 172, "073953": 17, "0740": 177, "074074": 166, "0742": 172, "0745": [172, 173], "07450952e": 198, "0747": 172, "0750": [172, 194], "0752": 172, "0754": 172, "0755": [171, 172], "0757": 177, "0758": 172, "0759": 178, "0761": 177, "0763": 172, "07659773e": 198, "0766": 172, "0769": 172, "076923": 166, "077036": 196, "0772": 172, "0773": 172, "0774": 172, "0775": 172, "0776": [172, 177], "0777": [172, 178], "0778": 171, "0779": 172, "0780": 172, "078020": 17, "0781": 172, "0782": 172, "0783": 172, "0785": 172, "0786": 172, "0787": 172, "0788": 172, "0789": 172, "0790": 172, "0791": 173, "0793": 172, "079365": 17, "0796": 172, "0797": [172, 177], "0799": 172, "07_": 176, "07_effnetb0_data_10_percent_10_epoch": 176, "07_effnetb0_data_10_percent_5_epoch": 176, "07_effnetb0_data_20_percent_10_epoch": 176, "07_effnetb0_data_20_percent_5_epoch": 176, "07_effnetb2_data_10_percent_10_epoch": 176, "07_effnetb2_data_10_percent_5_epoch": 176, "07_effnetb2_data_20_percent_10_epoch": 176, "07_effnetb2_data_20_percent_5_epoch": 176, "08": [59, 63, 65, 66, 117, 141, 169, 172, 178], "0800": 170, "080169": 198, "0803": [172, 173], "0804": 172, "0805": 172, "0805937647819519": 170, "0806": 172, "08062": 171, "0808": 172, "0808e": 172, "0810": 172, "0813": 172, "0814": 172, "08143941": 149, "0816": 172, "0817": 172, "0818": 172, "0820": 172, "0823": 172, "0824": 173, "0825": 172, "083": 175, "0830": [172, 178], "08309749e": 198, "083132": 15, "083174": 17, "083261": 17, "0833": 180, "08333022e": 198, "083333": [155, 166], "0835": 172, "0837": [172, 180], "0838": 172, "0840": 172, "0842": 172, "0843": 172, "0844": 178, "084423": 17, "0845": 172, "0847": [172, 173], "084713": 173, "0848": 172, "0850": 172, "0851": [172, 180], "0853": 172, "0855": [172, 177], "08553692": 151, "085536923187668": 80, "0857": 172, "0859": 172, "0861": 172, "0862": 172, "0863": [172, 173], "086334": 17, "0864": 172, "086505": 17, "0866": 172, "086688": 12, "086780": 16, "087": 11, "0871": 172, "0872": 172, "087328": 17, "0875": 172, "0876": 172, "087777": 17, "0878": 172, "0880": 173, "0881": 172, "0882": 172, "0883": [172, 180], "0886": 172, "0888": 172, "08886633068323135": 170, "0890": 172, "08908725529909134": 170, "0891": 172, "089286": 166, "0894": 172, "0896": 172, "0897": 172, "0899": 178, "08_pretrained_vit_feature_extractor_pizza_steak_sushi": 177, "09": [60, 61, 66, 117, 135, 141, 169, 175, 178], "0901": 172, "0902": [172, 173], "0903": 172, "0904": 172, "0905": 172, "090909": 166, "09090909090909": 80, "0911": 172, "0913": 172, "0914": 172, "0915": 172, "0916": 172, "091695": 17, "0918": 172, "091864": 11, "0919": 169, "09199": 172, "0920": 172, "0923754647374153": 176, "0924": [175, 176], "0926": 172, "0927": 172, "092742": 15, "0928": [172, 176, 178], "0929": 172, "09309": 171, "0932": 172, "0933": [172, 178], "093484": 17, "0936": 172, "0937": 172, "0938": [172, 177], "0939": 172, "0940": 172, "0941": 173, "0945": 172, "0947": 172, "0948": 172, "0949": 172, "0950": [172, 178], "0953": 172, "0955": 179, "095564": 173, "0956": [173, 180], "0957": 172, "0958": 172, "0959": 172, "0960": 172, "0961": 172, "096154": 166, "096220": 17, "0963": 172, "0964": 172, "0965": 172, "0968": 172, "096812": 17, "0969": 172, "09708521e": 198, "0972": 172, "0974": 172, "097538": [11, 13], "0977": 172, "0978": 172, "09790012e": 198, "098": 11, "0980": [172, 173], "0981": 172, "098383": 17, "0984": 172, "0985": 173, "098520": 173, "098661": 17, "0987": 172, "098811": 17, "0989": [171, 172], "09919948130846024": 170, "0992": 172, "0993": 172, "099350157876355": 152, "09935016": 152, "0994": 172, "09_pretrained_effnetb2_feature_extractor_food101_20_perc": 178, "09_pretrained_effnetb2_feature_extractor_pizza_steak_sushi_20_perc": 178, "09_pretrained_vit_feature_extractor_pizza_steak_sushi_20_perc": 178, "09_pytorch_model_deploy": 178, "0_": 52, "0a4959e7a13b": 53, "0b": 51, "0b0001": 51, "0b10": [51, 95], "0b1010": 91, "0b1101011": 51, "0d17a834dca2": 77, "0ef33cc3a94d": 70, "0f": 117, "0f0f0f": 187, "0f0f0f0f": 187, "0f73a35e8ce2": 88, "0j": [91, 95], "0m": [116, 117, 126, 128, 139, 143, 172], "0mib": 169, "0o": 51, "0o12": 51, "0o15": 51, "0o310": 91, "0qgx4kh": 116, "0th": [169, 177], "0x": 51, "0x0000012c87c0af70": 36, "0x000001d284b3b430": 35, "0x000001d8aec3ac10": 102, "0x000001d8aec44eb0": 102, "0x000001d8aec7e1f0": 102, "0x000001d8aec7e4c0": 102, "0x000001d8aec7e5e0": 102, "0x00000218ffc65220": 104, "0x0000021e45765b20": 101, "0x0000021e45765dc0": 101, "0x00007ffad7cb2770": 36, "0x000a": 51, "0x12c": 91, "0x12c4cb88d90": 199, "0x12c4df5c1c0": 199, "0x12c4e273c70": 199, "0x12c50e26c10": 199, "0x12c53a52d60": 199, "0x12c53affc10": 199, "0x163ca247070": 202, "0x163cdf926d0": 202, "0x163ce3245e0": 202, "0x163cfcc79d0": 202, "0x163d0288250": 202, "0x163d05bfa60": 202, "0x163d0f2ae20": 202, "0x1662f00ac70": 190, "0x16633986eb0": 190, "0x166339f84c0": 190, "0x16635a26b80": 190, "0x16635a63550": 190, "0x170b84f24a0": 38, "0x1a11b1a6e80": 193, "0x1a11b2e7a00": 193, "0x1a11b349eb0": 193, "0x1a2186f5940": 200, "0x1a21896cac0": 200, "0x1a218c77d30": 200, "0x1a218d2d6a0": 200, "0x1a218de36a0": 200, "0x1a21a1a7310": 200, "0x1a21a449490": 200, "0x1a21a492c70": 200, "0x1a21b6eba00": 200, "0x1be276a14a8": 202, "0x1bfbd546670": 191, "0x1bfbe8c42b0": 191, "0x1bfbe8d2640": 191, "0x1bfbeacc8b0": 191, "0x1bfbf65d610": 191, "0x1ce07cb24f0": 196, "0x1ce07cc58e0": 196, "0x1da1f804700": 197, "0x1da1f8bf520": 197, "0x1da209c66d0": 197, "0x1da20f86b20": 197, "0x1da20fa4c10": 197, "0x1da214a06d0": 197, "0x1edcdfafd30": 198, "0x219288a7220": 189, "0x2192d5bb3a0": 189, "0x2192de12c70": 189, "0x2192dfa48b0": 189, "0x2192e06b910": 189, "0x2192e0be9d0": 189, "0x2192e328640": 189, "0x22c3a5e3ac0": 195, "0x22c3a722fd0": 195, "0x22c3b278670": 195, "0x22c3c78df40": 195, "0x22c3c8f1040": 195, "0x263397171f0": 187, "0x264e0145a90": 186, "0x26bc28689d0": 188, "0x26bc65bb8b0": 188, "0x26bc7611700": 188, "0x26bc7dd6cd0": 188, "0x26bc7eaf0a0": 188, "0x26bc8131250": 188, "0x26bc81b38b0": 188, "0x26bc81e5730": 188, "0x29872f94b20": 194, "0x7f122dd0f0d0": 178, "0x7f17f3f5f520": 177, "0x7f18845ff0d0": 177, "0x7f53c0b9dca0": 173, "0x7f53c0b9de50": 173, "0x7f53c6d64040": 173, "0x7f5460ab8400": 173, "0x7f5460ab8490": 173, "0x7f5460ad23d0": 173, "0x7f5460ad2f70": 173, "0x7f5461f70c40": 173, "0x7f5461f70c70": 173, "0x7f8389169070": 116, "0x7f853747b550": 179, "0x7f853747bbe0": 179, "0x7fa942951460": 175, "0x7fa942951550": 175, "0x7fa9429a37c0": 175, "0x7fa9429a3a60": 175, "0x7fc991463cd0": 172, "0x7fc991475120": 172, "0x7fca2e3445b0": 180, "0x7fca2e344760": 180, "0x7febf1d213a0": 176, "0x7febf1d21490": 176, "0x7febf1d216a0": 176, "0x7febf1d218e0": 176, "0xfb": 51, "1": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32, 34, 36, 38, 40, 43, 44, 48, 51, 57, 65, 72, 75, 76, 77, 78, 79, 81, 82, 85, 96, 98, 102, 103, 104, 106, 107, 111, 117, 126, 128, 131, 133, 135, 136, 139, 140, 142, 143, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 160, 161, 163, 164, 166, 168, 170, 171, 174, 175, 176, 181, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 197, 198, 200, 201, 202], "10": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 29, 31, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 60, 63, 66, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 82, 88, 89, 90, 91, 92, 93, 94, 95, 97, 101, 102, 104, 106, 107, 111, 116, 117, 128, 130, 132, 135, 136, 138, 141, 142, 143, 145, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "100": [13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 29, 35, 39, 45, 47, 48, 49, 53, 55, 57, 74, 79, 80, 91, 95, 103, 104, 107, 111, 126, 128, 131, 133, 138, 142, 145, 149, 150, 152, 155, 156, 157, 166, 167, 169, 170, 171, 172, 173, 176, 177, 178, 180, 185, 186, 189, 190, 191, 194, 195, 199, 200], "1000": [12, 14, 19, 48, 51, 57, 78, 90, 95, 101, 116, 117, 130, 131, 133, 134, 135, 136, 146, 152, 170, 171, 173, 175, 177, 178, 188, 194, 195, 196, 197, 198], "10000": [9, 16, 17, 18, 57, 130, 141, 146, 152, 155, 172], "100000": [15, 57, 146, 184], "1000000000000000055511151231257827021181583404541015625": 51, "1001": 172, "1002": 172, "10026431e": 198, "1003": 172, "1004": 172, "1005": 172, "1006": 172, "1008": 172, "100k": 130, "100th": 138, "101": [77, 102, 165, 166, 173, 176, 178, 195, 196, 199, 200], "1010": [95, 171, 172], "1011": 172, "1012": 177, "1016": 172, "1017": 172, "1018": 172, "101803": 13, "102": [77, 102, 155, 156, 165, 166, 167, 173, 175], "1020": [172, 173], "1021": 172, "1024": [57, 176, 177, 178], "10276143": 149, "1029": 172, "103": [102, 165, 166, 167, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1031": 172, "1034": 172, "1039": 172, "104": [31, 102, 155, 156, 166, 167, 173], "1041": 172, "1043": 172, "1044": 172, "104504": 16, "1046": 172, "1049": 172, "105": [11, 39, 80, 135, 166], "1050": [52, 172], "1051": 172, "1052": 172, "1053": [162, 172], "1054": [162, 172], "1055": [162, 172], "1056": 162, "1057": [162, 172], "1058": 173, "1059": [172, 173], "106": [166, 169], "1060": 172, "1061": [169, 172], "1062": 172, "1063": [170, 172], "1065": 172, "106628291529549": 80, "1067": 177, "106846": 17, "10696289e": 198, "107": [51, 166, 173], "1070": 172, "107072": 17, "1070e": 172, "1072": 178, "107221": 14, "107353": 13, "1074": [172, 173], "1077": 172, "1078": [172, 173], "107833": 173, "108": [166, 173], "1080": 172, "108178": 17, "1082": 172, "1084": [172, 177], "1086": 172, "1087": 172, "1088": 172, "109": [77, 155, 166, 176, 178], "1092": 172, "109299": 196, "1093": 172, "1095": 172, "1095522857580948": 192, "109553": 17, "1096": 172, "1097": [172, 177], "1097501": 149, "1098": [126, 173, 177], "1099": [126, 172], "1099_file": 90, "10_epoch": 176, "10_python_pandas_modul": 167, "10ffff_": 52, "10fp": 178, "10k": [128, 177], "10mb": 178, "10x256": 173, "11": [12, 15, 17, 31, 35, 38, 44, 47, 49, 51, 52, 53, 55, 57, 61, 65, 66, 75, 79, 89, 91, 92, 95, 97, 101, 102, 117, 128, 130, 132, 136, 138, 142, 145, 149, 150, 151, 152, 155, 159, 164, 166, 167, 169, 171, 172, 173, 175, 177, 184, 186, 194, 199, 200], "110": [166, 167, 169, 178], "1100": [52, 126], "1101": [126, 172], "110110": 98, "1102": 126, "1104": 180, "1105": 169, "110560": 17, "1105e": 171, "111": [95, 126, 155, 156, 166, 167, 173, 178], "1110": [95, 172], "1111": [39, 95, 172], "111111": [94, 166], "11111111": 152, "1112": [172, 174, 179, 180], "1114": 172, "1115": 172, "1117": 172, "112": [126, 136, 166, 167, 172, 175], "1120": 172, "1121": 172, "11222578": 8, "1123": 172, "112300": 136, "1124": 172, "112483": 17, "1126": 173, "1127": 173, "1128": 173, "11289431e": 198, "1129": 173, "113": [126, 166, 172, 173], "1130": [172, 173], "1131": [173, 180], "1132": [172, 173], "1134": 193, "1135": [172, 193], "113538": 17, "1136": 193, "11360953003168106": 170, "1137": [172, 173, 193], "1138": [172, 180, 193], "1139": 172, "114": [126, 155, 156, 166, 167, 172, 173], "1140": 172, "1141748": 117, "11421774e": 198, "1143": 172, "1144": 172, "1145": 172, "1146": 172, "1147": 172, "1148": 172, "1149": 172, "115": [126, 128, 155, 156, 166, 167, 172], "1150": 172, "1151515151515152": 186, "1154": 172, "115551": 17, "115697": 173, "1157": [173, 177], "115799": 11, "1158": 193, "1159": 193, "115971": 17, "116": [126, 128, 166, 172], "1160": 193, "1161": 193, "1162": 193, "1163": 178, "117": [126, 128, 166, 169], "1170": 172, "1172": 173, "11734513e": 198, "117543": 17, "1176": 173, "117647": 166, "117668": 17, "118": [126, 128, 166], "1181": 172, "11818328e": 198, "119": [126, 128, 166, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "119e50d96cfb": 70, "11x": [177, 178], "12": [8, 10, 12, 14, 16, 18, 19, 24, 29, 31, 32, 35, 39, 40, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 57, 60, 61, 63, 64, 65, 66, 70, 72, 74, 75, 79, 80, 91, 92, 94, 95, 97, 101, 106, 116, 117, 128, 136, 138, 141, 142, 149, 150, 151, 152, 159, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 186, 187, 188, 193, 195, 196, 198, 200, 201], "120": [4, 49, 77, 80, 126, 130, 155, 157, 166, 167, 169, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1200": [95, 170], "12000": 146, "120027": 117, "120k": 139, "121": [126, 128, 130, 166], "1212": 97, "121486": 171, "121492": 17, "1216": [173, 177], "122": [12, 126, 166], "1224": [172, 177], "122967": 17, "123": [12, 52, 93, 97, 126, 128, 166], "12336799": 149, "123456789": 52, "1234567890": [40, 91], "1234567890123456789": [51, 92], "12345678901234568": [51, 92], "12345678910": 48, "123774": 11, "1238": 180, "123xyz": 178, "124": [12, 93, 128, 166, 173], "1240": [126, 171], "1241": 126, "1242": 126, "1243": 126, "124377": 17, "1244": 126, "1246": 177, "125": [12, 48, 57, 80, 117, 128, 145, 151, 166], "125000": 166, "1251": 177, "1252": 184, "1255": 173, "12551": 128, "1257": 172, "1258": [172, 177], "12587": 195, "126": [12, 128, 166, 175], "1262": 172, "126257": 196, "126960000": 68, "127": [12, 128, 145, 166, 178, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1270": 178, "12751": 128, "1277": [172, 178], "1278387305019275": 186, "128": [12, 53, 57, 128, 166, 172], "1280": [175, 176, 177], "12800": 172, "128440": 155, "1285": [172, 173], "12872044e": 198, "1288": [170, 172], "128x": 177, "129": [12, 128, 166], "1294": 173, "12940": [155, 156, 167, 189], "12945": 167, "1295": 135, "1295210000": 68, "1296": [57, 184], "129861": 11, "12k": 128, "13": [8, 12, 15, 28, 29, 31, 35, 38, 48, 51, 52, 53, 55, 57, 60, 61, 63, 66, 70, 75, 77, 79, 80, 91, 93, 95, 101, 116, 128, 138, 141, 142, 145, 150, 151, 152, 159, 166, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 189, 196, 198, 200], "130": [12, 117, 128, 155, 166, 169, 173, 175], "1300": 172, "13037": 171, "1309": 169, "131": [12, 31, 166], "1313": 178, "1316": 172, "1318": 180, "131910": 15, "132": [12, 128, 166], "1320": 172, "1322": 172, "1324": 171, "1325": 172, "1326244364": 59, "1328": 177, "133": [12, 128, 166, 178], "1331": 177, "1332": 169, "1333": [173, 194], "1336": 169, "134": [12, 128, 166], "13409426e": 198, "13415": [155, 156, 167], "1345": 39, "13495": [155, 156, 167], "13499": 167, "135": [12, 128, 166], "135432": 178, "135925": 167, "136": [12, 128, 166, 173], "1360": 173, "136041": 173, "1366": 177, "13680419e": 198, "137": [12, 128, 130, 166, 173], "1373": [172, 173], "1375": [126, 177], "13756537093": 94, "1376": 126, "1377": [126, 177], "137723281": 12, "1377422166": 68, "1378": 126, "1379": 126, "138": [12, 128, 145, 166, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1382": 173, "138264": 155, "1383": 177, "138373": 173, "1384": 173, "139": [12, 128, 166, 173], "13914421e": 198, "13915538e": 198, "139472": 130, "13950": [155, 156, 167], "1396": 178, "13960670e": 198, "1399": 172, "14": [8, 12, 13, 15, 17, 19, 24, 31, 32, 38, 39, 47, 49, 52, 53, 54, 55, 57, 62, 64, 66, 70, 74, 75, 90, 91, 92, 95, 99, 101, 102, 106, 128, 138, 141, 142, 145, 150, 151, 152, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "140": [12, 126, 128, 136, 166, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1400": [135, 170], "140000": 136, "14003": 189, "1401": 128, "1403": 172, "1403916": 117, "1404": 172, "140708960741200": 96, "140708960741232": 96, "140708960741424": 96, "1408": [176, 178], "141": [12, 126, 128, 166, 167, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "14112001": 151, "1412": 172, "1415": 52, "14159": [80, 82], "141592653589793": [51, 80, 94], "14183273e": 198, "142": [12, 126, 128, 136, 166, 178], "14204329": 152, "1425": 173, "1426": 173, "142631": 173, "142705": 17, "142857": 166, "143": [12, 126, 128, 166, 173], "1437": 177, "14398": 171, "144": [12, 28, 48, 95, 126, 128, 166, 173], "1445": [184, 193], "1446": 193, "14464017748832703": 170, "1447": [177, 193], "1448": 193, "1449": 193, "145": [12, 166, 173, 178], "1453": 184, "14577043e": 198, "1459": 180, "146": [12, 35, 166, 169, 173], "146124": 17, "14613738e": 198, "1465": 172, "146599183": 68, "147": [12, 166, 173], "1472": 173, "14770535": 149, "147751": 17, "147760": 171, "148": [12, 151, 166, 173, 178, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "148148": 166, "14847551e": 198, "149": [12, 166, 173], "1490": 173, "149320": 17, "1495": 171, "1499": 172, "14it": 172, "14j": 91, "14m": 177, "15": [8, 12, 15, 16, 17, 18, 19, 29, 31, 36, 38, 39, 40, 43, 44, 46, 47, 49, 51, 52, 53, 54, 55, 57, 60, 61, 65, 66, 71, 72, 74, 80, 92, 95, 101, 102, 126, 128, 135, 136, 138, 142, 145, 150, 151, 166, 167, 172, 173, 175, 176, 177, 178, 184, 186, 188, 193, 194, 196, 197, 198], "150": [12, 14, 15, 91, 104, 116, 128, 145, 146, 155, 166, 173, 178, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1500": [131, 172, 188, 190], "15000": [72, 146], "150000": 146, "1501": 172, "1502": 172, "1503": 172, "1505": 172, "1506": 171, "15097": 12, "151": [12, 128, 166], "151165": 196, "1511893559": 59, "1513": 172, "15150": 178, "151786": 166, "152": [12, 128, 166, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "152862": 17, "1528797322": 60, "153": [48, 128, 166], "1531": 171, "15325888": 171, "153259": 171, "1533": 171, "153319": 11, "153527": [11, 13], "1536": [116, 130], "153883": 17, "154": [128, 155, 156, 166, 167, 173], "1541": 172, "1545730073": 64, "1545925769": 65, "1545966844": 65, "1549": 163, "155": [128, 135, 166], "15514180e": 198, "1554": 177, "1556": 177, "156": [24, 166, 167, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "156250": 166, "156586": 16, "1568291": 195, "15687723e": 198, "1569": 172, "157": [166, 169], "15750": 167, "1576": 177, "158": [166, 167, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "158023": 145, "1582568": 195, "1589": [172, 177], "159": 166, "1590": 172, "159689": 13, "159790": 17, "16": [8, 12, 15, 27, 30, 31, 32, 34, 37, 38, 47, 48, 49, 51, 53, 54, 55, 57, 66, 72, 79, 80, 85, 90, 91, 92, 95, 101, 102, 103, 128, 138, 141, 142, 150, 151, 152, 166, 167, 169, 170, 173, 175, 177, 178, 184, 188, 189, 191, 193, 194, 195, 196, 199, 200], "160": [155, 166, 167, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1600": 170, "1608": [172, 173], "161": 166, "161006790": 68, "161290": 166, "161491": 16, "16188": 155, "16189161": 172, "162": [74, 166], "1620": [172, 173], "162014": 173, "1623": 173, "1624370069": 64, "1624370297": 65, "16280mib": 169, "162875": 8, "163": [166, 173], "163778": 17, "164": [132, 166], "1640": 177, "1647": [173, 191], "1648": 169, "165": [136, 166, 173], "16500": [155, 156, 167], "165000": 136, "1652": 177, "166": [17, 19, 166], "1664": 172, "1666": 171, "1669": 178, "167": 166, "167204": 17, "168": [155, 156, 166, 167], "1680013019": 116, "16807": 57, "168321": 60, "1685": 173, "1686": 173, "169": [166, 167], "1690": [179, 180], "169322": 171, "1695": 177, "1697": 173, "169704": 173, "16j": 91, "16pt": 196, "16x": 173, "16x16": 177, "17": [12, 15, 38, 47, 48, 51, 53, 55, 57, 65, 66, 71, 72, 92, 101, 102, 103, 128, 130, 138, 142, 150, 158, 166, 167, 171, 173, 177, 178, 184, 192, 196, 200, 201], "170": [117, 166], "1700": 18, "1701": 177, "170215": 17, "17041474e": 198, "171": [155, 156, 166, 167, 169, 173], "1711e": 172, "17137357e": 198, "171588": 17, "171995": 167, "172": [65, 166, 173], "1725": [172, 173], "17254901960784313": 189, "173": [166, 173], "173282": 171, "17328203": 171, "1733": 171, "1734": 172, "173469": 166, "1736": 171, "174": [166, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "174260": 8, "17450": [155, 156, 167], "175": [80, 117, 145, 166], "175000": 146, "1751": 172, "1752011936438014": 51, "1757": 136, "176": [77, 80, 155, 156, 166, 167, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "176471": 166, "1765": 173, "1766": 178, "1768": 136, "177": 166, "1772": 177, "177mib": 169, "178": 166, "179": 166, "179027": 17, "17951135e": 198, "179585": 11, "1796": 47, "17995": 167, "17th": 116, "18": [12, 15, 27, 29, 32, 34, 38, 43, 44, 47, 49, 55, 56, 57, 59, 60, 62, 63, 66, 68, 72, 94, 95, 97, 102, 103, 116, 128, 138, 141, 142, 145, 150, 155, 156, 158, 166, 167, 171, 173, 177, 178, 184, 195, 199, 200], "180": [48, 141, 166, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1800": 170, "18000": 146, "1802": 172, "1804": [171, 173, 177], "18089902e": 198, "181": [166, 173], "1815": 172, "18176766975113706": 186, "1819": [74, 77], "182": [166, 167, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1821": 74, "1822565": 195, "183": [80, 166, 178], "18324209e": 198, "18344": 167, "184": [166, 167, 173], "184080": 12, "1843": 173, "1845": 172, "185": [166, 178], "1850": 172, "1855": 116, "186": 166, "18644463e": 198, "1865": 172, "1867": 172, "1869": 172, "186988000": 68, "186e9069bdbf14a9": 126, "187": [166, 167, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1872": 171, "187264": [11, 13], "1873": 172, "1875": 172, "187500": 166, "188": [155, 156, 166, 167, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "18812": 128, "1882": [172, 173], "1882615260180538": 192, "188828": 17, "1889": 171, "189": [166, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "18920": 167, "19": [12, 15, 34, 38, 40, 47, 48, 52, 53, 56, 57, 65, 66, 72, 74, 75, 77, 91, 95, 102, 128, 138, 142, 145, 150, 151, 155, 156, 158, 160, 161, 162, 164, 165, 166, 167, 169, 172, 173, 175, 177, 186, 189, 192, 195], "190": [166, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1900": 155, "19000": 103, "1902": 172, "190337": 15, "190504": 194, "19068": 128, "190871": 145, "191": 166, "1910": 172, "19116": 102, "1913": 171, "192": [166, 175], "1920e": 171, "1922": 173, "192250": 15, "1926": 71, "1927": 172, "1928": 47, "192985": 145, "193": [166, 167, 173], "19305918e": 198, "193080": 145, "193451495": 169, "1937": 24, "194": [166, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "194125062": 68, "1942": 39, "1945": 171, "195": 166, "1953": 47, "1955": 177, "19566591e": 198, "195915": 8, "196": [145, 152, 166, 177, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1960": [128, 134], "1961": 173, "196526332130161": 152, "1966": 52, "19680801": [25, 107, 111], "19692239e": 198, "197": [166, 167, 177, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1970": [59, 64, 65, 169], "1973": 172, "19735756e": 198, "197483": 15, "1976713240146637": 170, "1977": 198, "19789154e": 198, "1979": [173, 177, 180], "197917": 173, "198": 166, "1980": 128, "1984": [116, 172, 177], "1985": 128, "1988": [116, 128], "1989": [116, 177], "199": [137, 166, 167, 178, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "1990": 128, "199128": 16, "1992": 128, "1993": [128, 131], "199333": 184, "1994": 128, "1995": [128, 131], "1996": [0, 128, 130], "1997": [0, 128], "1998": 128, "1999": [128, 172], "19a": 70, "19th": 128, "1a2": 39, "1ab34": 39, "1b9ae9b69587": 151, "1d": [148, 149, 172, 177], "1e": [30, 172, 173, 177, 178], "1e100": 91, "1e6": [28, 29], "1e8": 195, "1ee33d": 80, "1erejibdqeccqncb1pbz7w": 116, "1f": [52, 146, 196], "1first_nam": 39, "1gcsgplmabavqz26": 80, "1j": [31, 91, 153], "1k": [130, 171, 177], "1m": [31, 116, 117, 126, 128, 139, 143, 145], "1min": 176, "1n": 31, "1num": 90, "1p": 93, "1st": [37, 53, 75, 76, 77, 78, 80, 117, 138, 141, 169], "1variabl": 88, "1x": 178, "1x1": [16, 18], "1x2": [16, 18], "1x3": [16, 18], "1x4": [16, 18], "1x5": [16, 18], "1x6": [16, 18], "1x7": [16, 18], "1x8": [16, 18], "1x9": [16, 18], "2": [3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 30, 31, 32, 34, 36, 40, 42, 43, 44, 48, 51, 57, 65, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 96, 98, 102, 103, 104, 106, 109, 126, 128, 129, 131, 133, 139, 140, 142, 143, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 174, 175, 176, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 201, 202, 205], "20": [11, 12, 13, 15, 16, 17, 18, 19, 28, 29, 32, 34, 36, 38, 40, 46, 47, 48, 49, 51, 52, 53, 56, 57, 59, 63, 66, 71, 72, 74, 75, 77, 79, 80, 92, 95, 101, 102, 116, 117, 128, 132, 134, 138, 142, 145, 148, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 175, 176, 177, 178, 180, 186, 188, 189, 194, 196], "200": [55, 74, 77, 80, 91, 103, 116, 117, 127, 128, 132, 135, 136, 145, 150, 166, 170, 171, 177, 178, 189, 198, 200], "2000": [128, 131, 135, 136, 140, 142, 143, 146], "20000": 142, "200000": [146, 155], "200000000000003": 85, "2001": 134, "2003": 128, "20040757": 152, "2005": 128, "200555": 63, "2005in": 131, "2006": [128, 131], "2006i": 131, "2008": 117, "200882": 17, "2009": 128, "201": [59, 128, 166], "2010": 128, "2011": [145, 171], "2012": [59, 97, 128], "2013": [60, 61, 128], "201300": 196, "2014": [128, 136], "2015": [128, 177, 184, 200], "2016": [128, 198, 200], "2016life": 132, "2017": [11, 13, 59, 132, 171, 177, 186, 200], "2017becaus": 116, "2018": [39, 59, 60, 61, 64, 65, 117, 145, 200], "2019": [59, 60, 61, 63, 64, 65, 77, 117, 128, 169, 177], "202": [74, 128, 166], "2020": [63, 128, 155], "20200": 178, "2020when": 130, "2021": [52, 59, 60, 62, 65, 74, 116, 135, 169, 178], "2021befor": [116, 128], "2021pythondatatyp": 52, "2021pythondatayp": 52, "2022": [71, 135, 137, 139, 169, 172, 173, 175, 176, 177, 178], "2023": [24, 126, 130, 134, 135, 136, 137, 139, 142, 169], "20240789e": 198, "202563": 189, "2028": 172, "202998": 8, "203": [17, 19, 128, 166], "2032": 177, "2039": [172, 173], "204": [128, 166], "2044": 177, "204451": 17, "20491465": 152, "205": [128, 130, 166], "2050": 177, "2052": 172, "205306": 15, "2056": 191, "206": [128, 166], "206135893": 68, "2064": 177, "207": [128, 166, 167, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "2074": 177, "2076": 177, "20784702e": 198, "208": [128, 166, 167, 175], "20800138e": 198, "20801": 145, "20843398e": 198, "2086": 130, "2087a9c41308": 38, "209": 166, "209539": 15, "209800": 15, "20994144e": 198, "20it": 180, "20th": 128, "20x20": 7, "21": [12, 15, 31, 38, 40, 47, 48, 49, 52, 53, 56, 57, 59, 61, 62, 65, 66, 72, 77, 80, 103, 138, 141, 145, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 172, 173, 175, 188, 191, 193, 194, 195, 196, 200], "210": [166, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "2102": 39, "2106": 172, "2109": 169, "211": [126, 166, 185], "211349": [11, 13], "211538": 166, "2117351": 178, "2118": [171, 172], "212": [126, 166, 185], "2124579": 173, "2126": 184, "21260800e": 198, "2129": 177, "213": [126, 166, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "21330910940589698": 192, "2134": 172, "21355": 12, "2137": 177, "213710": 15, "21379529e": 198, "214": [17, 19, 126, 166, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "214286": 166, "214695": 198, "214782": 12, "2148": 116, "215": [126, 143, 166, 172], "2150": 177, "2154": 152, "2157": [172, 173], "216": [48, 57, 80, 166, 172], "2162": 169, "217": [166, 172], "21728": 12, "21729660034179688": 170, "217391": 166, "21741122e": 198, "21748794e": 198, "218": [166, 172, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "2181": 172, "2183": 172, "21855997e": 198, "2189884": 12, "219": [136, 151, 166, 172, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "2191": 172, "2196": 172, "21987980e": 198, "21k": 177, "22": [12, 15, 24, 29, 31, 52, 53, 56, 57, 59, 60, 62, 63, 65, 66, 72, 77, 79, 80, 95, 128, 150, 151, 152, 156, 166, 169, 172, 173, 177, 184, 194, 196, 200], "220": 166, "2200": [141, 177], "220087": 196, "22026": 51, "2205": 177, "220657": 17, "2209": 172, "221": [166, 176, 178], "2210": 171, "2211": 172, "222": 166, "222222": 166, "22222222": 152, "22291790e": 198, "223": [166, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "223188": 8, "2235": 172, "22357762": 152, "22389": 189, "223905": [11, 13], "22397933e": 198, "224": [166, 169, 173, 175, 176, 177, 178], "22417715e": 198, "224369": 11, "2244": 171, "224x224": 175, "225": [128, 166, 173, 175, 176, 177, 178, 179, 180], "225000": 146, "2251799813685248": 51, "2256": 171, "2258": 172, "225806": 166, "22592182e": 198, "226": [128, 145, 166], "2261": 177, "226677": 13, "22672978": 149, "227": [128, 166, 176, 178, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "2270": 171, "22709318e": 198, "22722896e": 198, "2275": [172, 173], "2279": 177, "228": [128, 145, 166], "2281": 177, "228173": 178, "228434": 196, "22897": 195, "229": [128, 166, 169, 175, 176, 177, 178, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "22911": 189, "2292": [169, 177], "22931538e": 198, "22949": 189, "2298": 128, "23": [12, 15, 31, 39, 47, 48, 52, 53, 59, 60, 61, 63, 65, 66, 80, 93, 102, 116, 126, 128, 135, 137, 138, 145, 150, 155, 156, 166, 167, 169, 172, 173, 176, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "230": [136, 166], "230000": 136, "2303": 172, "2305ca5": 24, "231": 166, "2314": 173, "23148074": 171, "231481": 171, "2315": 171, "23180804": 149, "2319": 172, "232": [166, 175, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "23250": 141, "2328": 172, "233": [48, 166], "2331": 172, "233336": 11, "233423": 59, "23379671": 152, "2339e": 171, "234": 166, "234234": 116, "2344": 177, "2345": 172, "234566": 59, "2347": [172, 177], "234922": 11, "235": 166, "2351": 177, "2352": 177, "2353": 173, "2354": 172, "2358": 177, "236": 166, "2360": 172, "23600": 167, "23606798": 151, "23611012e": 198, "2368": 169, "237": [128, 166], "2377": 177, "238": [128, 166], "2381": 171, "23845": 167, "2389": 177, "239": [128, 166], "2391": 177, "2392": [172, 173], "24": [12, 15, 29, 40, 47, 49, 53, 55, 56, 57, 60, 61, 66, 68, 79, 80, 101, 102, 128, 141, 145, 150, 155, 156, 166, 167, 172, 173, 175, 177, 178, 188, 191, 193, 194, 195, 196, 200], "240": [128, 166, 175], "2400": 171, "2401": [57, 172], "241": [128, 166], "2412": 177, "2418": 177, "242": 166, "2422": 177, "24271445e": 198, "24299133e": 198, "242b77ef2a87": 92, "243": [57, 166], "2431": [172, 173], "2432": 172, "244": [80, 166], "2445": 177, "2446": 177, "244898": 200, "2449": 172, "245": 166, "2454": 177, "245426098662": 159, "245483": [11, 13], "2456": 172, "245614": 166, "2457": 28, "24576mib": 169, "2458": 184, "246": 166, "246154": 155, "2465": 172, "24674836e": 198, "24677": 189, "247": [166, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "2471": 172, "247597": [11, 13], "2476979795053773": 51, "248": [166, 177], "24813498e": 198, "248490": [11, 13], "24865": 195, "249": 166, "2493": 177, "249765": 172, "2499": 172, "25": [12, 16, 17, 18, 19, 24, 30, 37, 40, 47, 48, 49, 51, 53, 55, 56, 57, 60, 64, 66, 68, 71, 80, 91, 92, 94, 95, 101, 102, 128, 139, 142, 145, 146, 150, 151, 155, 166, 171, 173, 178, 184, 186, 188, 189, 191, 195, 196, 200], "250": [104, 117, 130, 143, 166, 172, 173, 177, 178], "2500": [47, 173, 194, 196], "250000": [146, 155, 166, 189], "2505": 171, "250fe64180f3": 102, "250k": 139, "250w": 169, "251": [51, 166], "2510": [172, 173], "2518868": 136, "252": 166, "2521": 172, "25231985e": 198, "25250": 178, "2526": 177, "252785": 13, "253": [51, 166], "2531": 178, "2534156": 195, "2535": 184, "2536": 172, "254": [101, 166], "2541": 177, "2549": [171, 172], "25490048e": 198, "255": [9, 11, 16, 17, 18, 19, 80, 166, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "2550": 47, "2557": 191, "2558": 172, "2559205": 149, "256": [30, 53, 57, 128, 166, 172, 173, 175, 176, 177], "2560": [172, 173], "25600": 172, "2560x3": 173, "2566": 169, "2569": 172, "257": [84, 128, 166], "2573": 177, "2578": 173, "257812": 173, "258": [128, 166], "2581": 172, "2582289": 178, "258364": 15, "2587": 172, "258705000": 68, "258745": 195, "2588": 172, "259": [128, 166], "259259": 166, "259490": 184, "25hmlxtend": 172, "25th": 155, "26": [12, 52, 53, 54, 56, 57, 63, 66, 80, 101, 128, 130, 135, 141, 145, 150, 155, 156, 166, 167, 184, 188, 194, 196], "260": [128, 166], "2604": [173, 177, 180], "260417": 173, "2606": 177, "2609": 172, "261": [128, 166], "2617": 177, "261842": 189, "262": [166, 175], "262144": 52, "262680": 16, "2627": 172, "263": 166, "2633": 177, "2635": 177, "263600": 15, "2637": 177, "2638": 172, "264": 166, "2641": [174, 176, 179, 180], "26421880": 172, "264672": 17, "265": 166, "265008": 12, "2652958": 135, "26568259e": 198, "26571389e": 198, "266": 166, "2660": 177, "2664": 172, "2669": 172, "267": 166, "2671131": 169, "2671256": 169, "268": 166, "2686": 172, "2688": 172, "269": 166, "2694": 177, "2697": 177, "269809": 172, "26t12": 135, "27": [12, 36, 40, 47, 48, 49, 56, 57, 63, 65, 68, 77, 79, 94, 95, 101, 128, 139, 141, 145, 150, 151, 155, 156, 166, 167, 169, 172, 173, 175, 194], "270": 166, "2706": 172, "2707": 177, "271": 166, "2711": 171, "2713": 172, "2714": 178, "271429": 166, "272": 166, "27216990e": 198, "272699": 196, "272727": 166, "273": [38, 166], "2738": 177, "274": 166, "2741": 172, "2748": 171, "275": [166, 193], "27500": 155, "2751": 177, "2752603": 178, "2753": 172, "2754": 177, "27541": 178, "275510": 166, "275862": 178, "276": 166, "2761": 11, "2766": 177, "276716": [11, 13], "27672348": 149, "277": [130, 166], "277027": [11, 13], "2771": 177, "2772": 177, "2773": 177, "27764243": 149, "2779": 172, "278": 166, "2780": 176, "2782": 177, "278711": 17, "27891384e": 198, "279": [126, 166], "2793": 177, "2795": [169, 177], "27j": 91, "27w": 169, "28": [12, 15, 31, 38, 47, 48, 49, 56, 57, 59, 65, 71, 80, 101, 135, 140, 145, 150, 166, 167, 172, 173, 175, 176, 196], "280": [126, 131, 141, 166, 173], "2801": 141, "2804": 177, "2805": 178, "280702": 166, "2809": [172, 177], "280w": 169, "281": [126, 166, 175], "281250": 166, "28128674924373626": 178, "281287": 178, "2813": 178, "2815": 171, "2817": 193, "2818": 193, "2819": 193, "282": [126, 166], "2820": 193, "2821": 193, "2822": 184, "2824": [171, 172, 173], "28254475e": 198, "282662": [11, 13], "283": [126, 166], "2833": [172, 194, 196], "28366219": 151, "284": [11, 13, 166], "2840": [172, 177], "28418980453852622603883856494709731311218158362293224700445543940796643776911788129508577246309929258069598467896008287596053863082109746801947722280783720032649818198464452375358348619120021135797251857019557032565638659667745421115194468559021541269027438746788486392649581405327516658718317011453858465218779880972140612551504149701082164179367484198570734230003528355826545644223794779911723917115845213739921327820409005460708547942445234906498880588411276755120002108963510955276534630522965966177951626038063994937181228938844252668098515385045718428663547788122173798704717510979319749834083419004355222012043715855123615249682039587844431246269017612728291710718821388840627277407189863509789929339102406655115786899696829902032282666983426897111750208839152830573688512831984602085360572485861376": 95, "2842": [171, 172], "2848": 177, "285": [117, 166], "2852": 180, "286": 166, "2863": 172, "28675168e": 198, "2869": 178, "287": [128, 166], "287372": [11, 13], "2874848": 178, "288": [128, 166, 175, 176, 178], "2881": 171, "2883": 173, "28883356e": 198, "289": [128, 166], "2890": 171, "289000": 145, "2891": 177, "289474": 189, "28th": 128, "28x19": [16, 18], "28x20": [16, 18], "28x21": [16, 18], "28x22": [16, 18], "28x23": [16, 18], "28x24": [16, 18], "28x25": [16, 18], "28x26": [16, 18], "28x27": [16, 18], "28x28": [5, 7, 9, 16, 17, 18, 19, 172], "29": [12, 15, 19, 38, 47, 48, 65, 68, 101, 117, 150, 151, 166, 167, 173, 176, 177, 178, 187, 188, 193, 195, 200], "290": [128, 166, 175], "2902": 172, "290549": [11, 13], "2906": 171, "291": [128, 166], "291667": 166, "2917": 172, "2918": 171, "291853": 14, "292": 166, "2920": 172, "2920e": 172, "29235": 12, "292969": 173, "293": 166, "2930": [173, 180], "293987": 12, "294": 166, "29402596": 152, "2941": 172, "29431485e": 198, "2946014910624595": 80, "294804": [11, 13], "294850": 13, "295": 166, "29515": 172, "29534113": 152, "295455": 166, "29560668e": 198, "295817": 11, "296": 166, "2969": 177, "297": 166, "2972": 176, "2973": [174, 176, 179, 180], "298": 166, "2981": 172, "298226": 11, "299": 166, "2992": 177, "29995": 167, "29ajdjehni": 138, "2a721b8800df": 131, "2ac45d11f3db": 131, "2b7b22686f73744e616d65223a22544954414e2d525458227d": 169, "2d": [15, 145, 146, 148, 149, 155, 171, 172, 177, 192, 201], "2d7f5e": 196, "2darrai": [159, 162], "2f": [11, 12, 13, 52, 94, 103, 145, 171, 172, 196, 199], "2f7f4e5fdb49": 66, "2j": [31, 51, 91, 92], "2k": 172, "2m": 130, "2min": 176, "2n": 31, "2nd": [37, 52, 53, 54, 75, 76, 78, 117, 138, 141, 169], "2p": 27, "2rgxf": 80, "2x": [95, 145, 177, 178], "2x2": [149, 200], "3": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 43, 44, 46, 48, 51, 55, 57, 61, 65, 71, 72, 75, 76, 77, 78, 79, 82, 85, 87, 88, 93, 96, 98, 99, 101, 102, 103, 104, 106, 116, 117, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 139, 141, 142, 143, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 170, 171, 173, 174, 175, 176, 179, 180, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 202], "30": [14, 17, 19, 28, 29, 36, 37, 38, 44, 47, 48, 49, 52, 53, 57, 59, 60, 61, 63, 65, 71, 74, 75, 76, 77, 80, 90, 92, 95, 96, 101, 117, 128, 131, 139, 145, 150, 155, 166, 169, 170, 171, 172, 175, 177, 178, 186, 189, 191, 193, 194, 197], "300": [18, 38, 53, 90, 91, 117, 128, 130, 136, 138, 142, 145, 166, 170, 171, 177, 187], "3000": [17, 18, 72, 117, 130, 131, 170, 171], "300000": [146, 184], "3000000000000003": 51, "300000e": 94, "3008": 177, "301": 166, "301184": [11, 13], "30119580e": 198, "3013": 172, "3015": 172, "302": 166, "3020": 172, "302078": 11, "3024": 173, "3025": 170, "303": [166, 178], "3031": 172, "30378713e": 198, "3038": 178, "303m": 177, "304": 166, "3047": 173, "305": 166, "305880": 15, "306": 166, "3061": 169, "306264": 196, "30668723": 149, "307": [166, 177], "3070": 171, "3072": 177, "3076": 172, "307m": 177, "308": 166, "3083": 172, "308492": 15, "3087": 177, "309": [166, 178], "30911403e": 198, "3092": 176, "30920635": 149, "30c": 169, "30fp": 178, "31": [31, 38, 47, 48, 59, 60, 61, 65, 80, 101, 145, 166, 167, 172, 173, 175, 178, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "310": [162, 166], "31002414e": 198, "3100563": 178, "3102": 169, "310634": 15, "3106e": 171, "3107": 171, "311": [13, 162, 166], "311099": 16, "3112": 177, "3114": 177, "312": [128, 162, 166], "3125": [57, 171], "312500": 166, "31287314e": 198, "31288138031959534": 170, "3129": 178, "313": [128, 162, 166, 172], "313125": 14, "3137": 172, "313707": [11, 13], "31390556e": 198, "314": [11, 13, 74, 128, 162, 166], "3140": [170, 171], "3141": 177, "3142": 171, "3143": 13, "3145": 177, "3149": 177, "315": [128, 166], "315317": 11, "3153600000": 95, "31576734e": 198, "3159": 177, "315964": [11, 13], "316": [11, 13, 128, 166], "3169": 171, "317": 166, "31701798e": 198, "31708111e": 198, "318": [126, 166], "3187": 176, "318750": 155, "319": [126, 166], "3191": 172, "31dc": 131, "31m10": 172, "31m54": 172, "31x31": 172, "32": [15, 31, 32, 34, 38, 47, 49, 53, 57, 61, 74, 101, 116, 117, 126, 128, 130, 131, 139, 141, 143, 151, 155, 166, 169, 172, 173, 174, 175, 176, 177, 178, 180, 184, 196, 200], "320": [126, 166, 175], "3208": 177, "320879": 13, "3209": 177, "321": [126, 166], "3210": 171, "321004": 196, "32105794e": 198, "3212": [172, 177], "3216": 172, "322": [126, 166], "322715": [11, 13], "323": 166, "3230": 169, "32354": 172, "323947000": 68, "324": 166, "324129": 196, "3242": 172, "3246": 171, "3248": 172, "325": 166, "325394": 11, "326": 166, "3261": 177, "3263": 177, "326574": [11, 13], "3268": 178, "327": [166, 177, 178], "3275": 177, "32768": 57, "3277": 173, "3278": 177, "328": 166, "3280": [170, 171], "3285697102546692": 172, "32857": 172, "328570": 172, "329": 166, "3295": [179, 180], "3298": 177, "329871": 11, "32k": 130, "32m1": 172, "32m519": 172, "33": [13, 15, 29, 31, 47, 52, 59, 66, 77, 80, 93, 94, 101, 103, 116, 117, 126, 145, 152, 166, 167, 169, 176, 178], "330": [49, 166], "3301": 177, "3307": 177, "3308": 176, "33094796e": 198, "331": 166, "33114510e": 198, "331191": 62, "33142653": 149, "332": 166, "33205527e": 198, "3323": 177, "333": [52, 59, 95, 166], "3333": [179, 180], "333333": 167, "33333333": [51, 151, 152], "333333333333333": 95, "333333333333333481363069950020872056484222412109375": 80, "3333333333333335": 80, "334": 166, "3345": 177, "334694": 17, "3349": 176, "335": 166, "3350": 171, "33516842e": 198, "3352": 173, "3353": 177, "336": 166, "33662976e": 198, "3367": [170, 172], "337": 166, "3371": [173, 179, 180], "3372": 177, "3374": 177, "33768743e": 198, "3377": [171, 172, 177], "3378": 173, "338": 166, "3380": 171, "3383": 176, "33856867e": 198, "338695217273813": 152, "339": 166, "3393": 172, "3399": 172, "33it": 180, "34": [39, 48, 59, 66, 80, 95, 101, 116, 150, 152, 166, 167, 169, 172, 177, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "340": [47, 48, 166], "3400": [174, 176, 179, 180], "3401": 169, "3407": 172, "340730": 12, "3409": 172, "340909": 166, "341": 166, "3410": 177, "3412": 173, "3417": 171, "342": 166, "3420": 170, "34238": 59, "342380": 59, "3428": 177, "343": [48, 57, 166], "343280": 11, "343750": 166, "3438": 177, "344": [13, 166], "344095": [11, 13], "34422627": 116, "34425779": 117, "34435993e": 198, "3448": [171, 177], "345": 166, "345081": 15, "3451": 172, "3452": 175, "3454": 176, "3456": 39, "345673": 39, "3456789": 52, "34567890": 94, "3457": [52, 178], "3458": 177, "346": [94, 166], "3463551998138428": 170, "3464": 177, "347": [61, 166], "348": [61, 166], "3483": 176, "3486": [172, 177], "3487": 175, "348722": 172, "349": [61, 166, 172], "3492": 175, "3493": 172, "349540": 14, "3496": 177, "35": [8, 32, 39, 47, 49, 52, 53, 62, 65, 92, 94, 116, 145, 150, 166, 167, 173, 175, 184, 193, 194, 195, 196], "350": [19, 61, 117, 166, 175], "350000": [146, 184], "351": [61, 166], "3512": 178, "3513": 170, "352": 166, "35266299": 149, "352682": 11, "353": 166, "3535e": 171, "3539": 171, "354": 166, "3547": 178, "354839": 166, "35488217e": 198, "3549": 171, "355": 166, "3551": 176, "355280": [11, 13], "356": [39, 166], "3560": 170, "356651": [11, 13], "3567": 177, "3568": 176, "357": 166, "3570": 177, "35713": 172, "357143": 166, "357150": 13, "3572": 177, "35731444e": 198, "357765": 11, "358": 166, "3581": 177, "3582": 172, "359": 166, "3594": 177, "35994688e": 198, "35c": 169, "35it": 180, "36": [35, 47, 48, 49, 52, 57, 74, 88, 94, 116, 117, 128, 145, 166, 172, 184, 187], "360": 166, "36000": 167, "3606": 177, "3608": 172, "360856": 194, "3609": 172, "361": [65, 166], "3610895313": 128, "361467": 11, "36149": 172, "362": [65, 166], "3620": 176, "362012": [11, 13], "3622237": 178, "3624": 172, "362880": 28, "363": 166, "363636": 166, "364": 166, "3649": 169, "36492380e": 198, "365": [52, 166], "366": [60, 61, 65, 166], "3662": 172, "3664": 177, "36699927e": 198, "367": 166, "367007": [11, 13], "3673": 172, "3677": 177, "36782780e": 198, "368": 166, "3681b3969e27": 72, "36880": 167, "369": 166, "36938945e": 198, "3694": 172, "36m0": 172, "37": [15, 38, 47, 48, 101, 141, 155, 156, 166, 167, 171, 175, 200], "370": 166, "3700": [170, 177], "3702": 177, "37028": 167, "370370": 166, "3705": 176, "371": 166, "3711": 176, "3712": 180, "37144872e": 198, "3715": 171, "37181743e": 198, "372": 166, "3723": 171, "3726": 177, "3727": [172, 177], "373": [166, 175], "3733": 172, "3736": [172, 177], "3738": 173, "37380679e": 198, "374": 166, "3741": 177, "3742": 177, "3743": 169, "3745": [172, 176], "3749": 178, "375": [68, 166], "375000": [15, 166], "3752": 172, "3757": [171, 178], "3759": 172, "376": 166, "37644": 189, "377": [11, 13, 48, 128, 166], "3770514": 178, "3776": 177, "37796264e": 198, "378": [128, 166], "3781": 177, "378594": 172, "37859424920129": 172, "3787": 177, "379": [128, 166], "379273": 11, "379510": [11, 13], "38": [15, 63, 101, 145, 166, 171, 172, 173, 189, 194, 196, 198, 200], "380": [128, 166, 177], "3801": 171, "381": [128, 166], "382": [128, 166], "3820": 177, "38209653": 149, "38223": 189, "38224839e": 198, "382612": [11, 13], "382817": [11, 13], "3829": [169, 178], "383": [128, 166], "38336447": 152, "3835": 172, "38385823e": 198, "384": [128, 166, 173], "3840": 170, "38400": 172, "3841": 172, "384232": 15, "38429280e": 198, "3843": 172, "384398": 11, "384399": [11, 13], "384403": [11, 13], "3849": 172, "385": [131, 166], "385399": [11, 13], "38568225e": 198, "38575866e": 198, "385965": 166, "385970": [11, 13], "386": 166, "3860": 171, "3862": 176, "3864": 169, "3867": [179, 180], "387": 166, "3870": 172, "387097": 166, "38787858e": 198, "388": 166, "3882": 172, "3889": 176, "389": [128, 166], "3890561": 151, "389559": 13, "3897": 178, "39": [47, 52, 59, 66, 136, 145, 166, 173, 184, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "390": [128, 166], "3904": 169, "3906": [176, 177], "3909": 176, "391": [117, 128, 166, 175, 176], "39119225e": 198, "3913": 177, "3915": 178, "39169378e": 198, "392": [128, 166], "392857": 166, "393": [128, 166], "393174": 11, "3934": 177, "393413": 196, "3937": 171, "39373073": 171, "393731": 171, "3938": 172, "394": 166, "3945": [174, 176, 179, 180], "3946": 171, "39461": 178, "395": 166, "39594634e": 198, "396": 166, "3961": 173, "397": 166, "3970": 117, "39764517e": 198, "39771": 172, "398": 166, "3980": [170, 177], "39801": 39, "398040": 15, "3982": [170, 177], "3984": [175, 176, 177], "3984375": 176, "39878883": 149, "399": [53, 166], "39957927e": 198, "3bfaa309574d": 56, "3blue1brown": [7, 170], "3d": [8, 11, 24, 150, 169, 172], "3da34cc7641": 52, "3e": 177, "3e859d37287a": 88, "3ec8c6652eef": 78, "3f": [52, 94, 172, 173, 175, 179, 180], "3j": [24, 51, 91, 92, 102], "3m": [116, 117, 126, 139, 177], "3mabout": 117, "3mbelow": 139, "3misl": 116, "3mlook": 117, "3mnull": 126, "3mselect": 117, "3msystem": 143, "3mthere": 117, "3muse": 128, "3mwrite": [116, 128, 143], "3myour": 128, "3n": 31, "3pm": 126, "3rd": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 53, 76, 78, 141, 143, 148, 188], "3x2": 169, "4": [3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 71, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 90, 93, 94, 98, 101, 102, 103, 106, 107, 111, 116, 117, 127, 128, 129, 131, 132, 133, 135, 136, 137, 139, 141, 142, 143, 145, 148, 149, 150, 151, 152, 154, 155, 156, 158, 160, 162, 164, 166, 170, 171, 172, 173, 174, 175, 176, 179, 180, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "40": [12, 15, 28, 29, 47, 49, 57, 66, 71, 77, 92, 94, 95, 117, 128, 137, 141, 145, 150, 157, 166, 169, 170, 171, 173, 175, 180, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "400": [7, 117, 128, 131, 135, 136, 142, 166, 170, 171, 172, 189], "4000": [141, 146, 172, 173], "400000": [146, 167, 184], "40015831": 149, "400770": [11, 13], "4008": 177, "4009": 177, "401": 166, "4012e": 172, "402": 166, "4023": 177, "4027": 171, "403": [11, 166], "4032": 173, "4033": 177, "403509": 166, "403846": 166, "4039": 173, "404": 166, "404206": 14, "404240": 15, "4044": 177, "4049": 170, "405": 166, "4054": 172, "405706": [11, 13], "406": [166, 175, 176, 177, 178], "40603744": 152, "4061": 171, "40636423e": 198, "4064": 172, "406469": 8, "407": 166, "4071": 169, "4078": 173, "408": 166, "408520": 8, "408781": 11, "409": [166, 175, 193], "40904134e": 198, "409091": 166, "4092": 172, "4094": 172, "4096": [57, 177], "40960": 167, "4097": 128, "40it": 180, "41": [32, 47, 48, 65, 66, 136, 145, 166, 167, 171, 172, 173, 175, 178, 198], "410": [166, 193], "4102": 180, "410458": [11, 13], "41083552e": 198, "411": [166, 193], "411377": 15, "4114": 172, "4115": 177, "4116": 170, "412": [166, 193], "4120": [170, 177], "41276190e": 198, "4128131430": 126, "4129": 177, "41292267e": 198, "413": [166, 193], "41315": 167, "4131591": 151, "4133": [179, 180], "4134": 171, "414": 166, "41405704e": 198, "41406033e": 198, "414062": 173, "4141": [173, 180], "41421356": 151, "414368": 198, "4147": 171, "415": 166, "4151": 159, "4152": 159, "4153": 159, "4154": [159, 171], "4155": 159, "4157": 172, "416": 166, "41614684": 151, "416667": 166, "417": 166, "4175e": 172, "4178": 177, "418": 166, "4184": 170, "4186": 159, "4187": 159, "4188": [159, 177], "4189": 159, "419": 166, "4190": 159, "4196": [172, 173], "419745": 13, "42": [47, 49, 55, 59, 66, 103, 130, 152, 166, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 190], "420": 166, "421": [126, 166], "422": [11, 126, 166], "4224": 169, "4227": 176, "4228": 172, "4229": 177, "423": [126, 166], "4235": 173, "423522": 12, "423851": 15, "424": [126, 166], "4242": 176, "4245": 178, "42477796076938": 80, "42499377e": 198, "425": [126, 166], "4251": 170, "42530": 195, "42538101e": 198, "4256": 172, "425781": 173, "4258": [173, 177], "426": 166, "4260": 170, "42612988": 152, "426227": [11, 13], "42651757188499": 172, "426518": 172, "427": 166, "4271": 172, "4272": 177, "427426": [11, 13], "4275": 172, "4277": 172, "4279": 171, "428": 166, "428571": 166, "42857143": 151, "4286f4": 145, "428939": [11, 13], "429": 166, "4290": 178, "43": [17, 19, 32, 47, 48, 66, 141, 151, 166, 171, 172, 173, 178], "430": 166, "430182": [11, 13], "4306": 159, "4307": 159, "4308": 159, "4309": 159, "430905": 13, "431": 166, "4310": 159, "4312": 171, "4318": 170, "43186c7d3555": 88, "4319": 172, "43196619e": 198, "432": 166, "433": 166, "4330": 172, "4332": 171, "433627": 11, "434": 166, "4340020aef34": 102, "4344": 176, "43469003": 152, "435": 166, "4353": 173, "4355": 178, "435540": [11, 13], "43563027": 149, "435633": 59, "435866": 184, "436": 166, "4364": 172, "4366": 177, "4368": 177, "437": [128, 166], "4372": 172, "437500": 166, "4378": 177, "438": [128, 166], "4381": 178, "4386": 170, "4388": [172, 178], "439": [128, 166], "439305": 15, "43e7": 131, "44": [29, 65, 66, 166, 172, 173, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "440": [128, 166], "4400": [179, 180], "4404": 176, "441": [128, 166], "4411": 172, "44120621e": 198, "4414": 172, "4417": 172, "442": [126, 166], "4422": 171, "44220765": 171, "442208": 171, "4422102": 172, "44225798": 149, "442308": [155, 166], "4428": [169, 177], "443": [126, 166, 178], "443572": [11, 13], "443705": 15, "4439": 162, "444": [126, 166], "4440": 162, "4441": [162, 171], "4442": 162, "4443": 162, "444444": 166, "44444444": 152, "445": [126, 166], "4451": 172, "4453": 170, "4455": 172, "4458": 176, "446": [126, 166], "4462": 176, "44666284e": 198, "4469": 169, "447": [126, 166], "4474": 178, "44794755e": 198, "448": [126, 166, 175], "4482": 177, "449": [126, 166, 173], "4492": 177, "4493": 172, "449489742783178": 80, "4496": 193, "4497": 193, "4498": 193, "4499": 193, "45": [14, 15, 47, 48, 49, 66, 68, 80, 89, 97, 117, 143, 145, 163, 166, 169, 171, 173, 184, 193, 200], "450": [126, 166, 169, 173, 178], "4500": [16, 193], "45000": 155, "451": [126, 166, 173], "4510": 172, "45103300e": 198, "4515": 177, "452": [166, 173], "4520": 170, "4522": 177, "453": [166, 173], "4533": [179, 180], "4535": 177, "45359369": 149, "454": [166, 173], "4540": 177, "45400": 167, "45409876e": 198, "454545": 166, "45468093e": 198, "455": 166, "45503": 172, "455357": 166, "4555": 176, "4559": 171, "456": [52, 93, 166, 173, 175, 176, 177, 178], "456140": 166, "4566": 169, "4569": 172, "457": [166, 173], "4570": 177, "4575": 176, "458": 166, "4583": 194, "458333": 166, "4584": 177, "458614": 14, "4588": [170, 172], "459": 166, "4592": 177, "45d582f31548": 102, "46": [15, 40, 66, 74, 117, 145, 166, 167, 169, 171, 173, 176, 193, 200], "460": [166, 169], "4601": 172, "46063092e": 198, "46075265e": 198, "4609": 172, "461": [166, 180], "4618": 170, "462": 166, "462272": [11, 13], "463": 166, "4631": 177, "4637": 131, "464": 166, "4640": 176, "4641": 152, "4644": 177, "4647": 172, "465": 166, "4651": 171, "4653": 178, "4654131651654516546": 116, "465640": 15, "465794806718": 51, "4658": 177, "466": 166, "466366": 13, "4666666666666668": 186, "4667": [172, 173, 179], "466b90e7ef2f": 92, "467": 166, "4678": 176, "468": 166, "468750": 166, "4688": 169, "469": [11, 13, 166], "4691": 170, "469388": 166, "4694": 177, "46be": 131, "47": [47, 48, 59, 66, 166, 167, 171, 173, 178, 184, 193], "470": 166, "47016730e": 198, "4702": 176, "470490": [11, 13], "470689": 13, "471": [131, 166], "4714": 169, "4717": 177, "472": 166, "4722": 177, "4726e": 171, "473": 166, "473137c03db7": 88, "4732": 177, "47320909e": 198, "474": 166, "4740": 171, "474232": 17, "4744512": 172, "4745": 172, "475": 166, "475540": [11, 13], "476": 166, "476004": 15, "47633": 172, "4764": 170, "47663894295692444": 172, "476639": 172, "47664": 172, "477": 166, "4770": 172, "4771": 177, "477273": 166, "477699": [11, 13], "4777": [164, 169], "4778": 164, "4779": 164, "477962": 15, "477f": 131, "478": 166, "4780": 164, "4781": [164, 177], "478125": 196, "478162": [11, 13], "4784": 172, "4785": 177, "4787": 177, "479": 166, "479139": 11, "479204": [11, 13], "4794": 176, "4795": 171, "479556": [11, 13], "479646": 171, "47989": 172, "4799": 172, "47e4": 131, "48": [31, 47, 49, 52, 59, 66, 95, 103, 117, 156, 158, 165, 166, 167, 169, 171, 173, 178, 193], "480": 166, "48013283e": 198, "48048431": 149, "480633": [11, 13], "4807": [169, 172], "481": 166, "48106518387794495": 170, "48122198e": 198, "481349": [11, 13], "4814": 172, "482": 166, "482383": [11, 13], "4824": 172, "4825": 177, "483": 166, "4830": 172, "4836": 170, "48383283e": 198, "484": 166, "4840": 177, "4844": 178, "484415": [11, 13], "4846": 172, "485": [166, 175, 176, 177, 178], "4854": 171, "4858414": 136, "486": 166, "4863": 173, "4868": 177, "487": [126, 166], "4873": 172, "48755100e": 198, "4876": 172, "488": [126, 166], "488215": 13, "488412": 11, "4886": 176, "489": [126, 166], "4895": 35, "489796": 155, "48df7f551452": 131, "49": [45, 47, 48, 49, 55, 57, 65, 66, 80, 131, 166, 167, 171, 173], "490": [126, 166, 172], "490625": 189, "4908": 176, "4909": [170, 178], "490946": 11, "491": [126, 166], "491228": 166, "4915": 177, "4917": 172, "491723": 16, "4919": 169, "492": [166, 175], "4920": 177, "492727": 11, "492754": 166, "4928": 177, "49291": 189, "493": [13, 166], "4930": [176, 177], "49332966e": 198, "4937": 178, "494": [11, 13, 166], "494387": [11, 13], "495": [130, 166, 169], "4950701": 172, "4951": 172, "49521424": 152, "49529338e": 198, "49574452": 152, "4958": [169, 177], "49587": 189, "496": 166, "4961": 176, "496714": 155, "49690158e": 198, "497": [126, 166], "4970": 177, "4972": 177, "49769501e": 198, "4977199": 136, "49798680e": 198, "498": [126, 166], "4980": 172, "4982": 170, "4982726": 136, "49890664e": 198, "499": [126, 166, 169], "4999": 19, "49e421f2057c": 93, "4a9f159cd120": 52, "4b26ab49e29c": 34, "4c10": 131, "4c669126467b": 52, "4c6e": 131, "4d": 172, "4d4a0e714c73": 88, "4ed3868a9a2": 53, "4f": [14, 15, 16, 17, 18, 19, 52, 173, 174, 176, 179, 180], "4fd1": 131, "4k": [139, 141], "4m": 145, "4n": 28, "4oz": 116, "4th": [53, 54], "4x": 178, "5": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 93, 94, 96, 98, 101, 102, 103, 104, 106, 107, 111, 116, 117, 120, 127, 128, 129, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 145, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 162, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "50": [10, 39, 43, 45, 47, 48, 49, 51, 52, 55, 57, 63, 66, 68, 74, 75, 80, 97, 116, 128, 132, 143, 145, 151, 152, 155, 157, 158, 166, 167, 169, 170, 171, 173, 176, 184, 188, 189, 191, 193, 194, 195, 196, 198, 200], "500": [11, 12, 13, 126, 128, 130, 132, 157, 166, 170, 171, 198], "5000": [9, 17, 19, 72, 117, 131, 198], "50000": [12, 145], "500000": [146, 155, 166, 167, 184], "500005": [11, 13], "5003": 172, "5006": 178, "501": [126, 166], "5012": 172, "502": 166, "502190": 15, "502418": 12, "503": 166, "5032": 177, "503945": [11, 13], "504": [11, 13, 166], "505": 166, "5050": [47, 74, 178], "5054": 170, "50547116e": 198, "506": 166, "50628105e": 198, "5069": 177, "507": 166, "507192": 17, "5078": 171, "508": 166, "5081": 177, "5085": 177, "50882884": 117, "509": 166, "5095": 176, "50954": 172, "5098": [172, 173], "50b154750974": 88, "50th": 155, "51": [12, 66, 74, 117, 145, 166, 167, 171, 194], "510": 166, "5100": 172, "510042": [11, 13], "51026454": 149, "511": 166, "5111": 180, "5113": 177, "5114": 172, "5116": 178, "512": [48, 53, 57, 79, 166, 171, 172, 173], "5120": 177, "51200": 172, "5127": 170, "512x512": 173, "513": 166, "5132": 172, "513250": 15, "513433": 198, "513890": 15, "514": 166, "51479": 12, "5148": 172, "515": [166, 169], "5157": 169, "5158": 177, "515941f58fe7": 76, "516": 166, "51601397e": 198, "516129": 166, "5166": 172, "51681": 189, "516912": [11, 13], "517": 166, "5176": 176, "51782e52f201": 71, "517857": 166, "518": 166, "518519": 166, "5188": 177, "519": [95, 166, 172], "5197": 172, "5199": 172, "52": [31, 66, 132, 145, 155, 156, 166, 167, 171, 173], "520": 166, "5200": [170, 179], "5202": 176, "52037": 12, "52063": 189, "521": 166, "522": [11, 13, 166], "5220": 169, "523": 166, "5239": 178, "524": 166, "524770": 15, "525": [13, 166], "5255": 172, "5257e": 171, "52580": 189, "526": 166, "526373": 200, "527": [11, 166], "5272": 170, "527393": 59, "527542": [11, 13], "5276": 177, "528": 166, "5283": 177, "5285": 169, "529": 166, "529412": 166, "5299914": 135, "53": [47, 48, 55, 60, 61, 64, 66, 166, 167, 171, 184, 193, 194, 196], "530": 166, "53037048e": 198, "530624": 13, "5308": 177, "5309": 171, "531": 166, "531250": 166, "5313": 172, "531874": 12, "532": 166, "5326": 172, "533": 166, "5333": [172, 173], "5334": 177, "53341062e": 198, "533524": [11, 13], "53360752e": 198, "534": 166, "5347": 177, "5348": 167, "5349": 177, "535": 166, "535714": 166, "53590397e": 198, "536": 166, "536747": 11, "536997": 15, "537": [11, 13, 166], "53783010e": 198, "538": 166, "5384": 172, "5387": 178, "5388": 171, "539": 166, "53901780e": 198, "53909609": 149, "5394": 177, "5396": 172, "5397727272727273": 176, "5398": [175, 176], "5398e": 171, "5399": 172, "53mib": 169, "54": [47, 48, 49, 59, 66, 79, 90, 101, 128, 145, 151, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 171, 178, 194], "540": 166, "540222": 16, "540247": [11, 13], "54030231": 151, "5404": 172, "5406e": 172, "5409": 172, "541": 166, "5412": 173, "54143": 171, "5416": 177, "541667": 166, "5417": 177, "5418903291546293": 192, "542": 166, "5425": [176, 195], "542734": 198, "54275813": 149, "543": 166, "5432": 177, "54321": 47, "5435": 176, "5439": 171, "544": 166, "545": 166, "54507446": 169, "54510477e": 198, "5455131": 195, "5458": 171, "546": 166, "546523": 14, "5467": 180, "54682": 195, "547": 166, "547083": 198, "547509": 11, "54777888": 149, "5478": 177, "548": [166, 175, 176], "5480": 177, "548052": 15, "54808": 195, "548195": [11, 13], "5483": 169, "5485": 177, "5486": 172, "5489": 172, "549": 166, "54902750e": 198, "5493": 169, "5494": [177, 178], "55": [47, 48, 59, 66, 74, 80, 128, 152, 157, 159, 162, 166, 171, 173, 192, 200], "550": [135, 136, 166], "551": 166, "551020": 166, "55109787e": 198, "551122": [11, 13], "5513833499989991": 192, "551695": 117, "551792": 12, "552": 166, "5521": 176, "5523": 177, "55283762": 149, "5529": [172, 173], "553": 166, "5531": 171, "553519": 196, "55360672": 149, "55382448e": 198, "554": 166, "555": [48, 52, 97, 166], "5550161930871431": 152, "555108164c58": 55, "5551779866218567": 170, "55555556": 152, "5557": 177, "5558": 172, "555816": 196, "556": 166, "5566": 176, "557": 166, "5570": 177, "5573": 176, "558": 166, "5581": 177, "5589": [159, 172], "559": 166, "5590": 159, "5591": 159, "5592": 159, "5593": 159, "5595": 172, "55965906e": 198, "5599": [171, 172], "56": [24, 28, 46, 47, 49, 55, 59, 63, 66, 80, 128, 141, 155, 156, 158, 165, 166, 167, 171, 175, 178, 200], "560": [166, 175], "5604": 178, "5606": 177, "56077258e": 198, "5608": 173, "561": 166, "5610": 172, "5611": 176, "561772": [11, 13], "562": 166, "5622": 176, "562500": 166, "563": 166, "5630": 172, "56348096e": 198, "564": 166, "5644": 180, "5645": 177, "5646e": 172, "5647": [172, 173], "5649": 178, "564980": [11, 13], "565": 166, "56580759e": 198, "566": [61, 166], "56650192e": 198, "567": [61, 166, 177], "56705": 12, "5671": 177, "5676": 176, "5678": 177, "5679": 176, "568": [61, 166], "5686": [172, 173], "569": [61, 166], "5692": 177, "5696": 171, "5698": 195, "57": [13, 32, 64, 66, 128, 145, 155, 156, 166, 167, 178], "570": [61, 130, 166], "57057605": 152, "5706": [174, 176, 179, 180], "571": [166, 177], "571429": 166, "572": [166, 175], "5720": 177, "572094": 13, "5721": 177, "5722": 177, "5724": 177, "5725": [172, 173], "5728": 176, "57292499e": 198, "573": 166, "57330710e": 198, "57367853e": 198, "5739": 177, "5739762187004089": 170, "574": 166, "5745": 169, "575": 166, "5750": 177, "5753": 177, "5755": 178, "5757": 177, "576": 166, "5764": 177, "5765": 173, "5767": 172, "576700": 8, "5768": 177, "5768efa4a35f": 103, "577": 166, "5778": 180, "578": [117, 166], "5783": 177, "5784": 170, "5785": 177, "57861": 171, "579": [93, 166], "5790": 177, "5793": 177, "57953b0b580c": 38, "5796": 177, "5798": 176, "5799": 171, "58": [11, 59, 60, 65, 66, 126, 128, 145, 155, 156, 166, 167, 171, 176, 200], "580": 166, "5804": 173, "5808771025513102": 192, "58099293e": 198, "581": 166, "5810": 178, "5816": 177, "581728": [11, 13], "582": [117, 166], "5822": 179, "5823": 177, "5824": 177, "5826": 177, "5828025": 65, "583": 166, "584": 166, "5843": [173, 177], "5844": 171, "5845": 177, "5847": 177, "5849": 177, "585": 166, "5850": 177, "5853": 177, "585384": [11, 13], "5854679515581645": 51, "58556641e": 198, "586": 166, "5866": 172, "58662330e": 198, "5867": 179, "5868": 177, "5869": 178, "587": [166, 175], "5870": [176, 177], "5876": [177, 178], "5877": 177, "58776": 12, "588": 166, "5880": 177, "5882": [172, 173], "588235": 166, "5885": 171, "588767": 11, "5888": 177, "58883361": 152, "58899709e": 198, "589": 166, "58900": 167, "5897": [176, 177], "58it": 172, "59": [11, 18, 45, 59, 60, 61, 63, 65, 66, 128, 155, 156, 166, 167, 171, 173, 177, 188, 191, 193, 194, 195, 196, 200], "590": 166, "5900": 177, "59039": 172, "59049": 57, "59068226": 152, "591": 166, "5918": 171, "592": 166, "5920": 172, "5924": 172, "592799": 178, "593": 166, "59302": 172, "5932": 172, "5935": 178, "5936": 169, "59362951e": 198, "59371929e": 198, "594": 166, "594445": [11, 13], "5949": [172, 176], "595": 166, "5951": 171, "596": 166, "5961": 173, "59621339e": 198, "597": 166, "5975": 171, "598": 166, "5980": 176, "59815003": 151, "599": 166, "5990": 171, "5997": 172, "5998": 171, "59b7b8cc9b5b": 102, "5_epoch": 176, "5aa728677edf": 80, "5b2db8c64782": 52, "5b50fb5d02c4": 77, "5c": [126, 128], "5e2": 91, "5f": [171, 172], "5f195de51d93": 104, "5k": [130, 141], "5m": 145, "5th": [52, 53], "5x": [128, 178], "6": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 85, 87, 88, 89, 90, 91, 93, 94, 101, 102, 103, 106, 128, 131, 133, 136, 138, 139, 140, 142, 145, 148, 149, 150, 151, 152, 155, 156, 158, 162, 166, 169, 171, 172, 173, 175, 176, 177, 182, 184, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "60": [12, 44, 45, 47, 48, 49, 57, 77, 80, 94, 96, 128, 145, 155, 156, 157, 166, 167, 169, 170, 171, 172, 173, 180, 189, 190, 192], "600": [48, 95, 128, 135, 136, 166, 170, 171, 175], "6000": [16, 19, 146], "60000": [9, 16, 17, 18, 19, 101, 145, 172], "600000": 184, "60000000000001": 38, "6002": 169, "60059908": 152, "6009": 169, "601": 166, "6010": 171, "60124": 189, "60154": 189, "6016": 171, "601607": [11, 13], "602": 166, "6020": 171, "6022": 176, "603": 166, "60332219e": 198, "603704": 196, "6039": [172, 173], "604": 166, "605": 166, "605370": 184, "6055": 169, "6058": 172, "6059": 172, "606": 166, "60600": 178, "60631cbc73b0": 75, "60683359e": 198, "607": 166, "6078": 172, "60786967": 149, "608": 166, "60811794e": 198, "60818266e": 198, "609": [11, 166], "609060": 17, "60966": 12, "61": [55, 65, 128, 155, 156, 166, 167, 169, 172, 173, 188, 191, 193, 194, 195, 196, 200], "610": [48, 116, 166], "610574": [11, 13], "611": [13, 166], "6111": 176, "611101": [11, 13], "611172": 196, "6117": 171, "6118": 172, "612": 166, "6127": 176, "612924": [11, 13], "613": 166, "614": 166, "614062": [11, 13], "614349": 12, "61440440e": 198, "614655": 15, "615": 166, "6150": 177, "61500": 167, "616": 166, "616463": [11, 13], "6167": 176, "61670566e": 198, "61675899e": 198, "6168": 169, "617": 166, "617722": 12, "6177e": 172, "61784629": 149, "617951": [11, 13], "618": [128, 166], "6186": 171, "619": [128, 166], "6194": 169, "6197751905438615": 80, "62": [74, 166, 167, 171, 172, 195], "620": [128, 166], "6200": 176, "620071": [11, 13], "6203": 176, "621": [128, 166], "621415": 196, "62145": 171, "622": [128, 166], "622030": [11, 13], "622167": 196, "6223": 172, "62242956e": 198, "6227": 176, "623": 166, "62311335e": 198, "6235": 172, "62362": 171, "624": 166, "625": [57, 166], "62500": 155, "62503489e": 198, "6254": 175, "626": 166, "6260": 175, "626007": [11, 13], "62636": 189, "6267": 180, "627": 166, "627163": [11, 13], "6274509803921569": 189, "62792336e": 198, "628": 166, "6286": 169, "6289": 172, "629": 166, "629630": 166, "62996541e": 198, "62it": 131, "62x62": 172, "63": [47, 49, 70, 71, 74, 93, 94, 117, 166, 193, 200], "630": 166, "63033250e": 198, "6306": 172, "631": 166, "6311": 179, "6314": 172, "631579": 166, "63158859": 149, "6317": 178, "6319": 171, "632": 166, "63212579e": 198, "63238643": 152, "6325": 176, "632m": 177, "633": [77, 166], "6335": 172, "6338": 167, "633974": 13, "634": 166, "6345": 172, "63465586e": 198, "635": [13, 166], "635423": [11, 13], "635457": 16, "635574": 15, "636": 166, "637": 166, "6372": 175, "6377": 167, "638": 166, "6380": 172, "6386": 172, "639": 166, "6392": [172, 173], "63it": 172, "64": [16, 17, 18, 19, 24, 47, 48, 49, 53, 57, 79, 151, 166, 169, 171, 172, 173, 174, 175, 179, 180, 200], "640": 166, "64000": 145, "64034418e": 198, "6404": 176, "641": 166, "64154651": 195, "642": 166, "643": 166, "6430": 177, "6431": 172, "6436": 172, "64387910e": 198, "644": 166, "6445": 176, "645": 166, "645161": 166, "6454": 172, "646": 166, "647": 166, "6471": 173, "64757": 171, "647689": 155, "648": 166, "6485e": 172, "6488": 167, "649": [166, 177], "6494": 171, "64x64": 173, "65": [43, 44, 45, 52, 93, 117, 156, 158, 165, 166, 171, 172, 173, 200], "650": 166, "65000": 145, "650667": 13, "651": 166, "6510": 172, "651253": 200, "65160": 171, "652": [13, 166], "65235094": 152, "653": 166, "65364362": 151, "6538": 169, "654": 166, "6541": [169, 172], "6542": 177, "6545": 176, "654593": 64, "6549": 172, "654x": 175, "655": 166, "65575249e": 198, "65596512e": 198, "656": [166, 177], "6561": 57, "6562": 176, "65625": 176, "65628077": 149, "656404": 196, "657": 166, "6575": 167, "6579": 171, "658": 166, "6585": 178, "6588": 172, "659": 166, "65903086e": 198, "66": [46, 47, 52, 76, 94, 126, 166, 167, 173, 188, 191, 193, 194, 195, 196, 200], "660": 166, "66000": 145, "660125": 15, "6608": 169, "661": 166, "6610": 176, "6611852": 195, "6612": 172, "662": 166, "6627": 172, "663": 166, "66322": 171, "664": 166, "665": 166, "666": [55, 166], "666451": 8, "66659": 171, "66666667": 152, "6667": 172, "667": 166, "6673": 176, "667565": 196, "668": 166, "669": 166, "6698": 176, "6698453426361084": 176, "6699": 171, "67": [48, 52, 117, 126, 151, 166, 167, 171, 200], "670": 166, "67027": 172, "670396": 200, "6705": 169, "6706": [172, 173], "671": 166, "672": 166, "6722926497459412": 176, "6723": 176, "67285": 171, "673": 166, "6737": 172, "67391582": 117, "674": 166, "6745": [172, 173], "6746": 176, "6746167540550232": 176, "675": 166, "67515": 171, "67526014e": 198, "676": 166, "67631096e": 198, "676366": 8, "676435": 171, "6766": 178, "6768": 177, "6769": 176, "6769256368279457": 176, "677": 166, "67761063e": 198, "678": [128, 166], "6784": [172, 173], "6785": 167, "678571": 166, "679": [128, 166], "67941": 171, "67it": 172, "68": [126, 145, 159, 162, 166, 167, 169, 188, 191, 193, 194, 195, 196, 198, 200], "680": [128, 166], "680027": 13, "681": [128, 166], "68102": 171, "681159": 166, "682": [128, 166], "682091": 200, "6826": 169, "683": [166, 173], "6833": 16, "68334519e": 198, "683673": 166, "6839": 172, "684": 166, "68411": 171, "684211": 166, "684940": 15, "685": 166, "68500": 172, "6850008964538574": 172, "685001": 172, "6851": 176, "68517": 171, "6852": 171, "68572271": 152, "686": 166, "68602648": 149, "68603251e": 198, "6863": 172, "68671849e": 198, "687": 166, "68723": 171, "68744134": 149, "68747069e": 198, "68795": 171, "688": 166, "6881": [172, 176], "689": 166, "6891": 171, "68940": 171, "6894e": 171, "68977": 171, "69": [45, 47, 126, 156, 166, 167, 200], "690": 166, "69001671e": 198, "6902": 172, "691": 166, "69102": 171, "69115": 171, "6918": 167, "692": 166, "692250": 15, "69258130e": 198, "69261": 171, "69272794e": 198, "69288277": 171, "692883": 171, "6928e": 172, "6929": 171, "69295": 171, "69298": 171, "69299": 171, "6929e": 171, "693": [166, 173], "69301": 171, "69302": 171, "69303": 171, "69305": 171, "69308": 171, "6931471805599453": 80, "69319": 171, "69343173": 149, "69349": 171, "693597": 13, "69361323e": 198, "69379": 171, "69396": 171, "694": 166, "6940": 172, "6941": 172, "69432": 171, "69437": 171, "69458": 171, "69465": 171, "69467": 171, "69468": 171, "695": 166, "69537": 171, "69543": 171, "69551": 171, "69563": 171, "69583": 171, "696": 166, "69623": 171, "69659": 171, "6968": 170, "697": 166, "69714": 171, "69736459e": 198, "69791535": 149, "698": 166, "6980": 172, "6984": 171, "698874": 15, "699": [126, 166], "69901020e": 198, "6992": 176, "69942": 171, "699560": 15, "6ab0f28c63a7": 72, "6ac8e81b6f0c": 70, "6f47904706aa": 151, "6f8260f6f5bb": 75, "6j": [51, 92, 102], "6k": 128, "6m": 145, "6p": 94, "6th": 52, "6x": [95, 178], "7": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 34, 37, 38, 40, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 66, 68, 71, 74, 75, 76, 77, 79, 80, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 106, 116, 117, 128, 130, 131, 132, 133, 138, 139, 142, 145, 149, 150, 151, 152, 155, 156, 162, 166, 169, 170, 171, 172, 173, 175, 176, 177, 184, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202], "70": [43, 45, 47, 49, 57, 77, 126, 128, 138, 143, 145, 156, 158, 163, 165, 166, 167, 169, 170, 171, 188, 189, 200], "700": [116, 126, 166, 170, 171, 199], "700557": 15, "7008": 169, "701": [126, 166], "7010": 172, "7011": 172, "70166723e": 198, "702": [126, 166], "7020": 172, "7023": 178, "70291": 171, "703": [126, 166], "703704": 166, "704": [126, 128, 166], "7043": 172, "7044": 171, "704545": 166, "705": [126, 166, 176, 178], "70542": 171, "7055": 172, "705882": 166, "7059": 172, "706": [126, 166], "706461": 13, "7064960040152073": 176, "7065": 176, "706585": 11, "707": 166, "707107": 155, "7076": 176, "708": 166, "70805473e": 198, "709": 166, "7091468499697177e": 186, "7097": 176, "70974533": 8, "7098": [172, 173], "7099": 172, "71": [117, 126, 166, 167, 172, 188, 194, 195, 196], "710": [166, 175], "7108": 175, "711": 166, "7113": 178, "712": 166, "713": 166, "7134": 172, "7137": [172, 173], "714": 166, "71400": 167, "714286": 167, "71432477e": 198, "715": 166, "7150": 176, "715070": 194, "716": 166, "71671100e": 198, "7168": 171, "717": [166, 175], "7173": 172, "7175": [176, 178], "71755233e": 198, "7176": 172, "718": 166, "71828": [80, 82], "718281828459045": 80, "71828183": 151, "71875": 176, "7188": 176, "719": 166, "7191": [172, 176], "7196": 177, "7197": 171, "72": [28, 47, 49, 74, 117, 126, 137, 155, 158, 166, 173, 178, 200], "720": [51, 78, 80, 166], "7200": 172, "7205": 172, "72090": 171, "721": 166, "7216": 173, "7219": 172, "72196": 171, "722": 166, "72223991e": 198, "72227": 172, "72247358e": 198, "7227": 177, "723": 166, "72352380e": 198, "724": 166, "724490": 166, "724638": 166, "725": 166, "7255": 172, "726": 166, "72638167e": 198, "727": [166, 177], "72708198e": 198, "727273": 166, "72765023e": 198, "728": 166, "7280": 172, "7283": 172, "72888392e": 198, "729": [48, 57, 79, 166], "7294": 172, "72964213e": 198, "7298": 176, "73": [39, 126, 166, 172], "730": 166, "730464": 178, "730982": 12, "731": 166, "731755": 184, "7318": 172, "732": 166, "73205081": 151, "733": 166, "7333": 172, "73370838": 152, "734": [166, 177], "7342": 172, "734673": 200, "7347": 171, "735": 166, "73524094": 152, "7359b7dba965": 48, "736": 166, "7360": 177, "7367": 171, "737": 166, "73712819e": 198, "7373": 172, "738": 166, "739": 166, "74": [117, 166, 171], "740": 166, "7402e": 172, "7408": 178, "7409": 172, "74098031e": 198, "741": 166, "741152": 8, "7412": 172, "74149939e": 198, "741935": 166, "742": 166, "7426e": 171, "7427": 177, "743": 166, "74304829e": 198, "74307119e": 198, "74371246e": 198, "744": [101, 166], "74400348e": 198, "744281": 200, "7444": 177, "744415": 11, "74486871e": 198, "745": 166, "74509907e": 198, "7451": [172, 173], "746": 166, "746011": 200, "74609375": 176, "7461": 176, "7463": 175, "74663": 117, "7469": 169, "746921": 178, "747": 166, "748": 166, "7489": 177, "749": 166, "7490": 172, "7498": 177, "74m": 178, "75": [66, 130, 145, 152, 155, 156, 166, 169, 171, 172, 173, 178, 179, 180, 184, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "750": [166, 173, 178], "7500": 178, "750000": [155, 166, 167, 189, 200], "750615": 194, "75075a70c90": 150, "7507bdc665d5": 37, "751": 166, "7511": 176, "751712": 12, "752": 166, "75209323e": 198, "7524": 172, "7529": 172, "753": 166, "7532": 178, "7539": 175, "754": 166, "7542": 171, "754246": 171, "75424625": 171, "7548e": 172, "755": 166, "755102": 200, "7553": 172, "756": 166, "75615888": 171, "756159": 171, "7562": 171, "75665366e": 198, "7568025": 151, "7569": [172, 173], "757": 166, "75750": 178, "7578": 176, "758": [166, 177], "758000": 184, "7589": 177, "759": 166, "75986": 171, "75th": 155, "76": [39, 116, 152, 166, 195, 200], "760": [166, 177], "7601": 171, "7604": 176, "7608": 172, "76093000e": 198, "761": 166, "761378": 12, "762": 166, "762238": 184, "762329": 200, "7624": 177, "76249894": 152, "763": 166, "763270": 8, "76344": 12, "764": 166, "7642": 171, "7645": 170, "7647": 172, "7648": 175, "765": 166, "765298": 184, "765539": 11, "7656": 176, "766": [152, 166], "7661": 171, "766294": 14, "7665": [171, 177], "767": 166, "7670": 178, "768": [166, 177, 178, 184], "7685": 178, "7686": 172, "7687": 169, "769": 166, "769231": 166, "7695": 176, "76a0a5ce1450": 66, "76bf7a927991": 77, "77": [47, 77, 92, 94, 150, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 175, 188, 195], "770": 166, "7705221": 178, "7708": 177, "771": 166, "7711": 171, "7712": 172, "7714": 171, "771513": 171, "772": 166, "77237368": 152, "7725": 172, "772579": 16, "772900": 17, "773": [97, 166, 169], "7736742424242425": 176, "7737": 176, "774": 166, "775": [16, 17, 166], "7754": 172, "775403": 13, "776": [16, 17, 141, 166], "7765": 172, "7767": 176, "77678046e": 198, "777": [16, 17, 166], "7773": [175, 176], "7776": 57, "77777778": 152, "777778": 166, "778": [16, 17, 166], "779": [16, 17, 166], "78": [79, 116, 130, 152, 155, 166, 172, 173, 188, 200], "780": [16, 17, 166], "7804": 172, "780573": 12, "781": [16, 17, 166], "78101": 172, "7812": 176, "781250": 166, "782": [16, 17, 166], "782dbd1412fe": 162, "783": [16, 17, 166], "7833": 172, "7837507526079813": 176, "7838": 176, "7839": 172, "784": [9, 16, 17, 18, 19, 166, 172], "7843": 172, "784433": 15, "7849e": 172, "785": [9, 16, 17, 18, 19, 166], "7852": 175, "785269": 195, "785280": 195, "785714": 166, "786": 166, "7860": 178, "7861e": 172, "78673234e": 198, "787": 166, "7870": 172, "788": 166, "78883111e": 198, "789": [52, 166], "7898": 167, "78993856e": 198, "79": [80, 155, 166, 167, 171], "790": 166, "7900723": 169, "79018354e": 198, "79025614": 152, "791": 166, "7912": 175, "792": 166, "7922": 172, "792566": [11, 13], "79270929e": 198, "793": 166, "7930": [175, 176], "793456": 171, "7935": 172, "7936": 169, "794": [166, 184], "795": 166, "795455": 166, "795521": 15, "7956": 172, "796": 166, "7961": 172, "7963": 172, "796667": [11, 13], "79671774e": 198, "797": 166, "797101": 166, "7975": [155, 156, 167], "7978": 172, "798": 166, "79823164": 149, "7986e": 171, "799": 166, "7993": 171, "7994": 171, "7995": [155, 156, 167], "79998373e": 198, "79rhbrct01": 138, "7c9145eb11e9": 95, "7e786bcbd078": 72, "7f1fefd4d3f0": 55, "7fce570bf337": 92, "7m": 178, "7w": 169, "7x": 128, "8": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 30, 31, 32, 34, 37, 38, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 87, 89, 90, 92, 93, 94, 95, 99, 101, 102, 104, 106, 116, 117, 127, 128, 131, 132, 136, 138, 140, 141, 142, 145, 149, 150, 151, 152, 155, 156, 158, 159, 162, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 184, 185, 186, 187, 188, 189, 193, 194, 195, 196, 197, 198, 199, 200, 201], "80": [11, 13, 16, 17, 18, 19, 45, 47, 49, 57, 80, 128, 130, 133, 135, 136, 142, 145, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 171, 175, 178, 180, 189, 193, 197, 200], "800": [139, 141, 166, 170, 171, 177, 178, 189], "8000": [17, 19, 146, 172], "80000": 155, "800000": [166, 184], "8008": 176, "801": 39, "801005": 12, "8016": 169, "803349": 171, "8036360430009386": 51, "8037": 176, "803724929690361": 176, "8039": 172, "804460": 178, "8049": 176, "8049242424242425": 176, "806452": 166, "8069e": 172, "807018": 166, "8078": 172, "8080e": 171, "8086": 176, "809158": [11, 13], "80966303e": 198, "8099": 176, "81": [43, 47, 48, 49, 55, 57, 74, 93, 155, 156, 166, 167], "810696": [11, 13], "8111": 172, "8112": 171, "8117": 172, "8118": 172, "8125": 176, "812500": 166, "8127": 172, "8138": 176, "8138b0729954": 55, "8141": 170, "8144": 176, "814809": 198, "8153": [175, 176], "81539193": 171, "815392": 171, "8154": 171, "8157": 172, "816327": 166, "816653826391969": 106, "816760": [11, 13], "81788758": 152, "8189": 167, "81893678": 149, "81945073e": 198, "8196": 172, "82": [155, 156, 166, 167, 172, 173], "8201e": 171, "8206": 172, "821429": 166, "822132": 8, "8235": 172, "8236": 172, "8242": 176, "8256": 170, "8258": 176, "82636160e": 198, "82647438e": 198, "82701252e": 198, "827153": 198, "8275": 172, "828066": 184, "82974801e": 198, "83": [17, 74, 155, 156, 166, 169, 172], "8300": 170, "8303a512b8c1": 131, "830770": 196, "830875": [11, 13], "83098322e": 198, "8314": 172, "831415": 11, "83161031e": 198, "831681": 178, "8324": 177, "83263141": 8, "83288998e": 198, "83319662e": 198, "8333333333333334": 95, "833552": [11, 13], "834558": [11, 13], "8346": 172, "83464298e": 198, "835299": 189, "8353": 172, "8354": 176, "8365": 172, "8372": 170, "83727878e": 198, "83770503": 149, "83847501e": 198, "8392": 172, "84": [103, 155, 166], "8400": 171, "840201": 11, "84147098": 151, "8421": 172, "8424": 177, "84254180e": 198, "843": [175, 176, 178], "8431": 172, "843333": 184, "8436": 172, "843750": 166, "8438": [176, 178], "843887": [11, 13], "8446": 172, "8458": 176, "8466": [172, 176], "846939": 166, "846976": 196, "847": 97, "8471": 172, "8474": 169, "8479": 176, "8484": 172, "8488": 170, "84915141e": 198, "85": [11, 94, 133, 145, 149, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 175, 177, 178, 189, 190, 197], "8500": 176, "850000": 189, "85051737e": 198, "8510": 172, "8515": 172, "8515625": 176, "8516": 176, "851852": 166, "8524": 172, "853181": 8, "8549": 172, "85505447": 149, "8551": 169, "855366": 13, "8560606060606061": 176, "8561": [175, 176], "8563": 172, "8564": 172, "857142857142854": 94, "857143": 166, "85800963": 178, "858131": [11, 13], "8588": 172, "858904": 14, "859": 179, "85956433e": 198, "85mb": 178, "86": [63, 155, 156, 166, 167, 172, 177, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "8600": 170, "8603": 170, "8604": [176, 178], "8608": 179, "8613": 169, "8615": 178, "8620": 169, "8625": 194, "8627": 172, "86299475e": 198, "863636": 166, "864": 175, "8646": 176, "8652": 180, "8655": [171, 175, 176], "86635ab2cc7": 102, "8665": 177, "8667": 172, "868809": 15, "869565": 166, "8698": 171, "86m": 177, "87": [117, 128, 138, 145, 155, 156, 158, 165, 166, 167, 172, 173, 195], "8705": 172, "8706": 172, "8711": [172, 176], "871429": 166, "8717": 175, "8719": 170, "872": 11, "87236687": 149, "87285499e": 198, "87380356": 152, "8739": 170, "8743": [174, 179, 180], "8745": 172, "8747": 176, "875000": 166, "8759": [176, 177], "87646883e": 198, "8769": 176, "8771": [176, 178], "8778": [167, 177], "87786341e": 198, "877976": 172, "878": 172, "8784": 172, "87853325e": 198, "87970769e": 198, "88": [15, 128, 145, 152, 155, 156, 163, 166, 167, 171, 172, 178, 188, 197], "8804": 172, "8812": 178, "88165065e": 198, "8823": 169, "8824": 172, "8835": 170, "884058": 166, "8843": 177, "8854": 176, "8856": 172, "8859": 126, "885bc9be9cd": 172, "88618684": 152, "8863": 172, "8863636363636364": 176, "8864": 176, "8867": 176, "8873": 176, "8878": 170, "8883": 177, "88888889": 152, "8896": [176, 178], "88d1d80d": 131, "89": [12, 18, 39, 45, 48, 80, 128, 138, 145, 155, 166, 167, 195], "8902": 172, "8904402624046048": 192, "8913": 179, "891691": 8, "8917": 178, "8935": 172, "8938": 176, "89380846e": 198, "8941": 172, "8948": 171, "894992": 198, "8950": 170, "8958": 178, "8959": 178, "89632087": 149, "8967": 171, "896723": 171, "89672343": 171, "8974628075957298": 176, "8975": 176, "8977": [176, 177], "8979": 176, "8980": 172, "8983": 172, "8984": 176, "8985": [174, 179, 180], "8988": 169, "899084": 8, "8994": 180, "8b5cab780f33": 75, "8c3c435d663c": 131, "8cc0f1bdc5ed": 90, "8de2d37fa505": 131, "8f0bbdfdf6e5": 53, "8f1c": 131, "8oz": 116, "8th": 54, "9": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 31, 32, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 104, 106, 116, 117, 126, 128, 130, 131, 138, 142, 145, 148, 149, 150, 151, 152, 155, 156, 158, 162, 163, 164, 166, 169, 171, 172, 175, 176, 177, 178, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "90": [12, 16, 28, 32, 45, 47, 48, 49, 52, 57, 74, 75, 77, 90, 91, 94, 96, 101, 117, 128, 131, 133, 141, 143, 145, 156, 158, 163, 165, 166, 169, 170, 171, 176, 177, 178, 189, 193, 197], "900": [75, 101, 130, 170, 171, 175, 178], "900000": 184, "900000e": 52, "9007": 172, "90093797e": 198, "9013": 172, "901514": 15, "9018": 170, "9020": 172, "90264482e": 198, "90328251e": 198, "903846": 166, "9042": 176, "9062": 178, "906250": 166, "9066": 170, "9072": 176, "907975": 11, "9081": [176, 177], "90891100e": 198, "909091": 166, "90929743": 151, "9096": 172, "909784": 13, "9098": 172, "90m": 172, "91": [12, 68, 93, 128, 145, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 173, 184], "910": 173, "9104": [176, 178], "91174698": 152, "9131": 178, "9132757981618246": 176, "9133": [175, 176], "91348997e": 198, "9137": 172, "9138": 171, "9141": 176, "9143": 171, "9145": 177, "914559": 13, "914701": 8, "9150": 169, "9155": 132, "9157": 170, "91703708e": 198, "9176": [172, 176, 177], "9179": 171, "917c66cfdb68": 131, "9182": 170, "9186": 176, "919264": 16, "91940167": 149, "92": [12, 145, 166, 197], "9200": 169, "9216": 172, "9217": 176, "922403": 8, "922826": 17, "9239": 131, "924": 173, "9247": 176, "9250": [176, 194, 196], "9255": 172, "925579": 13, "925926": 166, "9260": 177, "9269": 172, "9271": 176, "927536": 166, "9280": [176, 177], "928539": 13, "928571": 166, "9290": 178, "9293": 178, "9294": 172, "9296": 170, "92fab552c144": 80, "93": [17, 19, 47, 145, 166, 172, 197], "930": 117, "93054890e": 198, "93082264e": 198, "93102691": 149, "9312": 172, "93143051": 149, "932169": 13, "932537": 13, "932585": 16, "9331e": 171, "9333": 172, "9336": 176, "9346": 169, "9347": 178, "935": 173, "9352": 171, "9354": 172, "9369": 169, "9373": 172, "9375": 178, "9381": 178, "9384": [176, 177], "9396": 176, "93fed76e63a5": 172, "94": [145, 155, 156, 166, 167, 172, 197], "9401": 172, "9408": 169, "9409": 178, "9412": [18, 172], "9416": 172, "9436": 170, "9443": 178, "944681": 11, "9451": 172, "9453": 177, "9456e": 172, "946429": 166, "947368": [166, 189], "9478274870593494": 81, "948141": 15, "9485": 172, "9486": 172, "9489": 176, "9490": 172, "9492": 176, "9499": 178, "95": [12, 133, 145, 155, 166, 167, 169, 171, 178, 187, 188, 195, 196, 197, 198], "9500": 178, "9508": 171, "952": 175, "9521": 171, "9529": 172, "9531": 177, "9534": 178, "9536": 169, "9537": 172, "9539e": 172, "954": 187, "9542": 178, "95501935e": 198, "9552": 179, "9557": 176, "956": 11, "9560342718892494": 81, "9563": 178, "95636": 172, "9565": 130, "9569": 172, "9570": 177, "9571": 172, "9575": 170, "9576": [171, 172], "9577": 176, "95892427": 151, "9591": 180, "9593": 169, "95966987": 149, "96": [12, 14, 16, 18, 44, 45, 46, 47, 48, 52, 55, 70, 71, 77, 90, 101, 128, 145, 155, 166, 178, 188], "9602": 178, "96052f3c0c69": 52, "9608": 172, "96139878e": 198, "9618232": 65, "96238081e": 198, "96248829": 152, "9625": 178, "963": [177, 178], "963404": 194, "964286": 166, "9646": 178, "9647": 172, "965323": 17, "9663": 169, "966365e": 52, "96652011": 152, "9666": [169, 171], "96671753e": 198, "966907": 15, "96875": 178, "9688": 178, "9693": 178, "97": [12, 52, 68, 155, 156, 166, 167, 197], "9704": 177, "97087710e": 198, "971014": 166, "9714": 170, "9716": 169, "9717076499418887": 186, "97187673e": 198, "9722": 178, "9725": 172, "9727": 177, "97305419e": 198, "9739": 171, "9752e": 172, "9753e": 171, "9754": 169, "976073": 196, "9765": 172, "9766": 177, "977": 175, "9771": 178, "97739775e": 198, "9775": 172, "977733270": 178, "977974": 17, "978": 176, "9784": 178, "9785208702087402": 178, "9792": 178, "97964329e": 198, "97mib": 169, "98": [38, 52, 155, 166, 178, 191, 200], "9804": 172, "980769": 166, "981": 74, "9812": 178, "98237187e": 198, "9830": 176, "9831": 15, "9833": 178, "9834262422606419": 192, "9838": 169, "9839": 177, "9844": 177, "984659090909091": 178, "9847": 178, "98514058e": 198, "9854": 170, "98547": 195, "9856": 178, "986095083415364e": 8, "986e6d871071": 40, "987": 48, "98749888": 149, "9883": 177, "9893": 178, "9894": 171, "9899925": 151, "98a1ccc168e9": 77, "99": [29, 31, 44, 47, 52, 55, 60, 61, 89, 91, 92, 94, 128, 149, 155, 156, 166, 167, 171, 178, 188, 191, 192, 193, 194, 195, 196, 200], "9909e": 171, "9924": 172, "99262966e": 198, "9932": 172, "9933": 178, "994": [176, 193], "994177": 63, "9942": 171, "994667": 13, "995": 193, "9950": 171, "996": [177, 193], "9960": 169, "9961": 180, "9966e": 171, "997": 193, "9971": 178, "99714633e": 198, "9976563219": 40, "997677": 200, "99771051": 8, "998": 193, "9986": [172, 180], "9988e": 171, "999": [52, 55, 75, 76, 152, 177], "9992e": 172, "9995": [155, 156, 167], "999703": 200, "9999": [18, 59, 65, 80], "999926": 200, "999999": [60, 61, 94], "999999999999998": 48, "999999999999999": 151, "9b450cb47d30": 53, "9b9247988596": 70, "9d80": 131, "9dea": 131, "9df797f83624": 52, "9e77": 131, "9e95083e441a": 52, "9mib": 169, "9th": 128, "9yzf8kj6rp": 138, "A": [0, 1, 7, 8, 9, 18, 19, 24, 31, 32, 34, 35, 36, 37, 38, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 66, 68, 69, 70, 71, 74, 75, 77, 78, 80, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 106, 116, 120, 125, 126, 127, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 148, 149, 150, 152, 155, 156, 158, 159, 162, 163, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 187, 192, 193, 194, 195, 196, 197, 198, 200, 201], "AND": [104, 117, 125], "And": [0, 34, 35, 47, 52, 71, 91, 95, 116, 117, 128, 132, 141, 143, 156, 157, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "As": [24, 25, 27, 32, 34, 36, 38, 39, 40, 47, 48, 49, 51, 54, 55, 66, 68, 70, 71, 74, 76, 77, 83, 84, 87, 90, 91, 93, 94, 95, 98, 101, 102, 106, 107, 111, 128, 130, 131, 134, 137, 138, 141, 142, 155, 156, 157, 158, 160, 161, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 186, 188, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201], "At": [39, 96, 98, 106, 116, 128, 130, 132, 135, 136, 138, 139, 141, 143, 173, 177, 185, 189, 196, 198, 200], "BUT": [187, 189, 192, 194, 195, 196, 198], "Be": [18, 19, 34, 138, 139, 143, 169], "Being": 56, "But": [4, 5, 7, 10, 25, 35, 36, 37, 42, 45, 48, 49, 51, 52, 54, 56, 57, 71, 77, 79, 80, 85, 89, 90, 92, 94, 95, 101, 102, 104, 107, 111, 116, 117, 127, 128, 130, 131, 132, 135, 137, 138, 143, 155, 156, 157, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 186, 187, 188, 189, 195, 196, 197, 198], "By": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 47, 48, 49, 59, 62, 78, 80, 87, 102, 106, 128, 131, 155, 156, 157, 159, 160, 161, 162, 164, 165, 167, 169, 173, 174, 176, 177, 180, 187, 189, 194, 195, 196, 198], "For": [3, 4, 5, 7, 12, 14, 15, 16, 17, 20, 23, 24, 25, 28, 29, 31, 32, 35, 37, 38, 39, 40, 42, 46, 47, 48, 49, 51, 52, 61, 65, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 94, 95, 96, 98, 101, 102, 103, 104, 107, 108, 111, 112, 116, 117, 126, 128, 130, 131, 133, 135, 136, 138, 139, 142, 149, 150, 151, 152, 155, 156, 157, 158, 160, 161, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "IN": [57, 139], "IT": [94, 102, 133, 156], "If": [1, 4, 5, 6, 24, 27, 28, 34, 35, 37, 39, 42, 43, 44, 45, 47, 48, 49, 52, 54, 56, 57, 59, 61, 62, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 89, 90, 94, 96, 98, 101, 102, 103, 106, 109, 115, 116, 117, 125, 126, 127, 128, 130, 131, 132, 135, 136, 138, 139, 141, 142, 143, 148, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 189, 190, 195, 196, 197, 198, 199, 200, 205, 208], "In": [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 103, 104, 106, 115, 116, 117, 127, 128, 130, 131, 132, 134, 135, 136, 137, 141, 142, 143, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "Into": 130, "It": [0, 7, 9, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 56, 57, 59, 60, 64, 68, 69, 70, 71, 74, 76, 78, 79, 80, 82, 84, 85, 88, 89, 90, 91, 92, 94, 95, 98, 101, 102, 103, 104, 106, 108, 112, 116, 117, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 149, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 190, 191, 192, 195, 197, 198, 199, 200, 201, 207, 208], "Its": [7, 18, 19, 22, 24, 117, 128, 208], "NO": 56, "NOT": [10, 95, 104, 187, 188, 208], "Near": 178, "No": [0, 39, 43, 47, 48, 70, 74, 89, 92, 98, 116, 117, 128, 135, 136, 138, 141, 143, 155, 156, 159, 162, 169, 177, 178, 188, 191, 193, 194, 195, 196, 200], "Not": [53, 54, 55, 71, 81, 82, 95, 98, 104, 106, 128, 133, 136, 138, 143, 148, 149, 161, 171, 172, 173, 175, 176, 178, 184, 193], "OF": [138, 141, 142], "OR": [39, 95, 104, 131, 184, 195], "Of": [131, 171, 177, 178], "On": [4, 8, 16, 17, 18, 19, 34, 36, 48, 55, 56, 68, 75, 77, 80, 98, 102, 128, 131, 148, 169, 178, 189, 196, 200], "One": [0, 7, 28, 35, 38, 52, 59, 66, 80, 83, 89, 90, 101, 106, 116, 117, 128, 131, 132, 137, 142, 143, 150, 170, 171, 172, 173, 175, 176, 177, 178, 179, 185, 186, 187, 188, 194, 196, 198], "Or": [7, 48, 117, 130, 138, 162, 163, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 186, 198], "Such": [7, 18, 19, 37, 48, 155, 156, 159, 163, 173, 176, 178], "THE": 139, "TO": [37, 138, 166, 198], "That": [6, 24, 36, 42, 45, 52, 54, 68, 71, 104, 109, 116, 128, 130, 131, 132, 138, 141, 143, 169, 170, 171, 172, 173, 175, 176, 177, 178, 186, 193, 195, 196, 197, 199, 200, 201, 205], "The": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 42, 45, 46, 47, 48, 49, 51, 56, 57, 59, 60, 61, 65, 66, 69, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 109, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 150, 151, 152, 153, 155, 157, 158, 167, 169, 170, 172, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205], "Their": [128, 169, 192], "Then": [1, 49, 53, 62, 63, 64, 66, 72, 75, 76, 80, 90, 91, 101, 102, 103, 116, 117, 127, 128, 130, 131, 132, 137, 138, 141, 142, 143, 156, 170, 171, 172, 173, 174, 177, 178, 187, 193, 194, 195, 198, 200], "There": [0, 4, 24, 25, 31, 34, 35, 38, 39, 40, 42, 47, 48, 52, 53, 54, 56, 62, 63, 68, 70, 77, 80, 84, 88, 90, 91, 92, 95, 102, 104, 106, 107, 111, 116, 117, 128, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 155, 156, 158, 159, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 185, 186, 187, 188, 190, 192, 193, 194, 196, 197, 198, 200], "These": [0, 14, 15, 16, 17, 23, 37, 38, 51, 52, 66, 70, 71, 77, 78, 80, 81, 87, 89, 96, 101, 104, 128, 130, 132, 134, 136, 137, 138, 139, 142, 162, 169, 171, 172, 173, 175, 177, 178, 184, 187, 188, 189, 192, 194, 196, 198, 208], "To": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 34, 35, 38, 39, 40, 42, 44, 48, 49, 51, 52, 56, 57, 59, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 80, 82, 84, 89, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 117, 118, 126, 128, 130, 134, 135, 136, 143, 148, 149, 151, 152, 156, 157, 159, 160, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 188, 190, 191, 192, 194, 196, 197, 199, 200], "Will": [77, 171, 173, 176], "With": [0, 5, 6, 24, 43, 54, 57, 71, 104, 109, 128, 142, 152, 169, 170, 171, 172, 175, 176, 177, 185, 186, 187, 188, 190, 191, 192, 193, 194, 196, 198, 199, 200, 205], "_": [27, 28, 29, 30, 31, 35, 38, 80, 88, 90, 97, 101, 102, 103, 126, 128, 162, 176, 177, 178, 193, 195, 199], "_0": 177, "_1": 30, "_2": [30, 32], "__": [101, 102, 104], "___________": 138, "__add__": 104, "__and__": 104, "__bases__": 102, "__builtins__": [59, 70, 80], "__cached__": [59, 80], "__call__": [37, 126, 128], "__class__": [71, 101, 102, 126, 172], "__closure__": 36, "__d": 103, "__dict__": [38, 84, 102], "__div__": 104, "__doc__": [59, 74, 80, 89, 102], "__eq__": 104, "__file__": [59, 80], "__floordiv__": 104, "__ge__": 104, "__get_result": 128, "__getitem__": [47, 155, 173], "__gt__": 104, "__iadd__": 104, "__idiv__": 104, "__imod__": 104, "__imul__": 104, "__init__": [34, 35, 38, 72, 83, 84, 101, 102, 103, 104, 128, 170, 171, 172, 173, 174, 177, 179, 180, 193], "__invert__": 104, "__ipow__": 104, "__isub__": 104, "__iter__": [34, 35], "__le__": 104, "__len__": 173, "__loader__": [59, 80], "__lshift__": 104, "__lt__": 104, "__main__": [84, 101, 102, 103, 104, 106, 173], "__maxpric": 101, "__mod__": 104, "__module__": 102, "__mro__": 103, "__mul__": 104, "__name__": [59, 80, 102, 172, 193], "__ne__": 104, "__next__": [34, 35], "__or__": 104, "__package__": [59, 80], "__peg_parser__": 88, "__pow__": 104, "__pycache__": 178, "__rshift__": 104, "__salari": 101, "__secretcount": 102, "__spec__": [59, 80], "__str__": [72, 104], "__sub__": 104, "__truediv__": 104, "__version__": [84, 148, 153, 169, 170, 172, 173, 175, 176, 177, 178], "__weakref__": [84, 102], "__xor__": 104, "_acal": 128, "_add_numeric_oper": 155, "_age": 90, "_age_": 162, "_arun": 126, "_ax": 193, "_backward_hook": 173, "_base": 128, "_call": [126, 128], "_call_impl": [172, 173], "_classname__attrnam": 102, "_completion_with_retri": [128, 138], "_condit": 128, "_conv_forward": 173, "_decor": [162, 187, 193], "_drop_axi": 159, "_epoch": 176, "_except": 128, "_forward_hook": 173, "_forward_pre_hook": 173, "_gener": 128, "_get_action_request": 126, "_get_input": 128, "_get_sess": 126, "_global_backward_hook": [172, 173], "_global_backward_pre_hook": 172, "_global_forward_hook": [172, 173], "_global_forward_pre_hook": [172, 173], "_if": 90, "_indentation_": 42, "_init_": 71, "_input": 133, "_interpret_respons": 128, "_interpret_response_lin": 128, "_io": 68, "_justcounter__secretcount": 102, "_m": 87, "_m_m_m_m_m_m_m_m_m": 87, "_make_request": 126, "_marks_": 162, "_maxlin": 126, "_name_": 162, "_output": 30, "_p": 30, "_pair": 173, "_prompt": 128, "_raise_timeout": 126, "_read_statu": 126, "_reversed_padding_repeated_twic": 173, "_run": 126, "_should_continu": 126, "_sinplot_": 185, "_sock": 126, "_sslobj": 126, "_state": 128, "_strptime": 61, "_strptime_datetim": 61, "_take_next_step": 126, "_temperatur": 38, "_timeout_occur": 126, "_transform_index": 162, "_y": 196, "a04242241123": 52, "a1": 192, "a2": 192, "a3": 192, "a3e12f": 80, "a4372dda": 131, "a46e692b8bdd": 172, "a8dfd56d4d8": 70, "a_": 31, "a_0": 27, "a_copi": 150, "a_g_": 90, "a_n": 27, "aa": 39, "aabbcc": 145, "aabc": 39, "aaron": 128, "ab": [24, 39, 53, 59, 68, 153, 177, 190, 196, 199], "ab123csd": 39, "abacu": 39, "abandon": 128, "abbrevi": [52, 60, 61, 62, 163, 187, 193, 194], "abc": [39, 47, 53, 54, 94, 139], "abc12d": 39, "abc12de23f456": 39, "abcdef": 145, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 80, "abhai": 139, "abil": [52, 101, 103, 117, 131, 135, 136, 138, 141, 171, 174, 176, 177, 178, 193], "abl": [4, 7, 23, 34, 36, 77, 93, 96, 103, 117, 128, 130, 131, 139, 141, 143, 170, 171, 173, 175, 177, 178, 180, 185, 188, 192, 194, 195, 196, 198, 199], "abnorm": 49, "abomasnow": 166, "abomasnowmega": 166, "abort": 49, "about": [6, 7, 8, 10, 20, 24, 25, 30, 34, 36, 37, 38, 39, 40, 42, 47, 51, 52, 53, 54, 55, 56, 57, 59, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 82, 84, 88, 89, 90, 91, 92, 93, 94, 96, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 116, 117, 125, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 149, 150, 152, 155, 156, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 205], "abov": [4, 5, 7, 24, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 89, 90, 91, 93, 96, 101, 102, 103, 104, 106, 116, 128, 130, 131, 136, 138, 141, 142, 148, 150, 155, 157, 158, 159, 160, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "abra": 166, "abraham": 173, "abruptli": [47, 48], "absenc": 51, "absol": 166, "absolmega": 166, "absolut": [24, 30, 36, 38, 42, 74, 82, 128, 143, 170, 171, 172], "absolute_url": [135, 136], "absolute_valu": 74, "abstract": [70, 101, 116, 117, 128, 130, 135, 138, 143, 177, 192, 194, 195, 198], "abund": 128, "abus": 36, "abxz": 39, "abyss": 39, "ac": 39, "academ": [117, 156], "acc": [150, 171, 172, 178], "accademia": 128, "acceler": [139, 169, 170, 172, 173, 175, 176, 177, 178, 180], "accelgor": 166, "accent": 190, "accent_r": 190, "accept": [52, 72, 102, 108, 112, 128, 135, 136, 137, 143, 172, 177, 178, 184, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "access": [24, 36, 38, 45, 56, 60, 65, 68, 70, 74, 75, 76, 79, 80, 82, 83, 84, 89, 92, 95, 96, 101, 103, 106, 116, 128, 135, 136, 138, 139, 148, 149, 150, 155, 156, 157, 158, 169, 170, 174, 175, 177, 178, 187, 188, 195], "access_level": 45, "accessor": 155, "accid": 128, "accident": 101, "acco": 166, "accomod": 169, "accompani": 128, "accomplish": [52, 56, 57, 62, 94, 138], "accord": [45, 74, 85, 95, 104, 116, 128, 177, 198, 200, 201], "accordingli": [48, 68, 96, 172, 176, 178, 185, 187, 188, 189, 198], "account": [15, 37, 126, 128, 132, 135, 143, 175, 176, 177, 178, 192, 196], "account_bal": 101, "account_info": 101, "accounts_to_mim": 138, "accum": 172, "accumul": [170, 171, 172, 173, 174, 179, 180], "accur": [0, 4, 5, 11, 13, 16, 17, 18, 19, 44, 45, 51, 82, 92, 128, 131, 139, 141, 143, 169, 189], "accuraci": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 128, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "accuracy_fn": [171, 172], "accuracy_scor": 171, "acd": 39, "acdbea": 39, "ach": 39, "achiev": [49, 101, 104, 116, 138, 141, 163, 169, 171, 173, 175, 176, 177, 178, 185, 186, 189, 190, 195, 198], "achiv": 52, "acm": [97, 143], "acme_co_v2": 143, "acmico": 143, "acn": 143, "aco": [80, 82], "acombine_doc": 128, "acompletion_with_retri": 128, "acordingli": 198, "acosh": [80, 82], "acquaint": [188, 189, 197, 198, 199, 200], "acquir": [101, 103, 131, 177], "acquisit": 131, "acrobat": 128, "acronym": [52, 177], "across": [0, 106, 117, 128, 136, 142, 143, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 200], "act": [24, 37, 42, 75, 84, 95, 101, 102, 117, 142, 193, 199], "action": [0, 42, 54, 71, 74, 87, 101, 106, 116, 117, 125, 128, 130, 136, 137, 138, 139, 155, 169, 172, 173, 175, 177, 178, 186, 200], "action_id": 126, "activ": [7, 18, 19, 24, 64, 127, 128, 130, 135, 136, 138, 139, 143, 169, 172, 173, 175, 176, 177, 178, 200, 207], "actual": [10, 14, 15, 16, 17, 18, 19, 34, 35, 37, 38, 52, 66, 68, 72, 77, 90, 92, 102, 103, 104, 106, 117, 128, 130, 131, 132, 137, 138, 141, 143, 146, 151, 155, 163, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208], "actviat": 171, "ad": [4, 5, 11, 12, 13, 14, 15, 16, 17, 24, 37, 38, 39, 47, 49, 51, 53, 54, 56, 64, 70, 74, 93, 94, 103, 116, 128, 151, 152, 155, 156, 157, 163, 165, 169, 171, 172, 173, 174, 175, 177, 179, 180, 184, 185, 186, 188, 193, 194, 195, 196, 198], "ad7c0de6": 131, "ada": [116, 132], "adam": [170, 171, 173, 174, 175, 176, 177, 178, 179, 180], "adapt": [126, 138, 175, 176, 177, 191, 195, 198, 199, 200], "adaptiveavgpool2d": [175, 176], "add": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 36, 37, 39, 40, 44, 45, 47, 48, 54, 56, 57, 70, 71, 74, 76, 77, 79, 80, 85, 89, 90, 91, 93, 94, 95, 101, 102, 103, 104, 116, 128, 129, 130, 131, 132, 134, 135, 136, 137, 141, 143, 145, 146, 148, 151, 152, 155, 156, 157, 162, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 185, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 202], "add_": [25, 107, 111], "add_6_and_3": 88, "add_ai_messag": 116, "add_all_num": 74, "add_binari": 84, "add_collect": 193, "add_docu": 131, "add_expens": 101, "add_graph": 176, "add_incom": 101, "add_item": 74, "add_legend": [199, 200], "add_legend_data": 193, "add_patch": 192, "add_prefix": 162, "add_scalar": 176, "add_skil": 101, "add_subplot": 172, "add_suffix": 162, "add_ten": [36, 74], "add_two_num": 57, "add_two_numb": [74, 77], "add_user_messag": 116, "add_video_info": 142, "addbackward0": 177, "adder": 40, "addict": 131, "addit": [7, 11, 12, 13, 14, 15, 16, 17, 24, 26, 29, 40, 51, 71, 74, 77, 79, 84, 90, 93, 94, 95, 101, 103, 104, 116, 117, 128, 131, 143, 148, 169, 177, 185, 186, 188, 189, 193, 195, 198, 203], "addition": [23, 101, 131, 189, 196, 198, 199, 200], "additional_kwarg": [116, 129, 135, 137], "additoinal_kwarg": 137, "addmmbackward0": [169, 177], "address": [4, 5, 45, 47, 55, 68, 90, 143, 196], "adher": [128, 176], "adienc": 199, "adject": 128, "adjust": [7, 95, 130, 136, 141, 169, 170, 172, 173, 174, 175, 177, 178, 179, 180, 192, 193, 194, 197, 198], "admin": 45, "administr": 133, "admir": 128, "admiss": 128, "admit": 141, "adopt": [90, 178], "adorn": 128, "adrish": 177, "adult_mal": [194, 196], "advanc": [10, 24, 49, 77, 90, 116, 117, 120, 128, 136, 138, 171, 172, 176, 177, 178, 185, 196], "advantag": [10, 34, 98, 116, 117, 128, 131, 135, 136, 141, 142, 185, 195], "adventur": 128, "advers": 196, "adversari": 207, "advic": [128, 131, 141, 142, 196], "advis": [80, 90, 128, 131, 141, 142, 189, 196], "advisor": [128, 142], "advisori": 142, "aegislashblad": 166, "aegislashshield": 166, "aerodactyl": 166, "aerodactylmega": 166, "aesthet": [178, 184, 186, 187, 188, 189, 193, 196, 198, 200, 203], "af0f59439c9b": 36, "affect": [75, 128, 142, 155, 189], "affili": [117, 139], "afford": [128, 139, 185], "afhuu987u3": 138, "afmhot": 190, "afmhot_r": 190, "afoo": 39, "afootbal": 39, "afootest": 39, "after": [0, 7, 31, 34, 39, 45, 47, 48, 49, 51, 52, 53, 54, 65, 66, 68, 70, 71, 74, 75, 76, 77, 80, 84, 88, 89, 90, 92, 93, 94, 98, 102, 104, 106, 116, 117, 128, 135, 136, 138, 139, 141, 143, 150, 151, 152, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 190, 195, 200], "afternoon": 138, "afterward": [128, 131, 143], "ag": [40, 44, 45, 47, 52, 53, 55, 70, 71, 74, 77, 80, 84, 90, 94, 95, 101, 102, 103, 106, 116, 128, 132, 145, 155, 156, 158, 159, 160, 161, 162, 164, 165, 171, 172, 184, 186, 189, 193, 194, 196, 200], "again": [43, 48, 53, 66, 68, 70, 72, 78, 80, 101, 103, 104, 106, 117, 128, 131, 137, 138, 141, 143, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "against": [39, 128, 133, 141, 151, 156, 163, 172, 186, 188, 189, 193, 199, 200], "agarw": 139, "age_": 90, "agenc": [116, 117, 133, 139], "agenda": [184, 186, 188, 195, 198], "agent": [0, 120, 128, 144], "agent_executor": 130, "agent_toolkit": 126, "agentexecutor": [116, 117, 126], "agg": [155, 167], "aggfunc": 155, "aggreg": [7, 128, 198], "aggron": 166, "aggronmega": 166, "agil": [139, 143], "agnost": [143, 169, 170, 171, 174, 175, 176, 177, 178, 180], "ago": [116, 128, 134], "agonistc": 177, "agre": [117, 128, 186], "agricultur": [133, 169], "ah": 127, "ahead": [132, 143, 178, 186, 189], "ai": [24, 115, 117, 128, 129, 135, 139, 141, 142, 143, 169, 174, 175, 176, 177, 178, 196, 208], "ai_respons": 116, "ai_response_messag": 137, "aid": [117, 128, 141, 142, 178, 199], "aim": [0, 3, 10, 117, 138, 142, 155, 159, 197], "aimessag": [116, 129, 133, 135, 137, 143], "aimessageprompttempl": [127, 129, 143], "aipom": 166, "air": [128, 130, 133, 138], "airbnb": 142, "airlin": [133, 201], "airmark": 141, "airport": 131, "airtabl": 142, "ak": 177, "akin": [0, 173], "al": 177, "ala": 128, "alakazam": 166, "alakazammega": 166, "alammar": 177, "alan": [47, 48, 74, 77, 156], "alan99": 49, "alan99whit": 48, "alarm": 128, "album": 116, "alchemi": 116, "alexhormozi": 138, "alfa": [155, 156, 167], "algebra": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 148, 189, 207], "algorithm": [0, 2, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 28, 29, 47, 103, 130, 139, 169, 170, 177, 188, 199, 207, 208], "alia": [39, 178], "alic": 136, "alien": 128, "align": [0, 25, 27, 28, 29, 31, 32, 52, 107, 111, 146, 155, 175, 177, 189], "alina": 145, "aliv": [194, 196], "all": [0, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 45, 46, 47, 48, 49, 51, 54, 56, 59, 60, 61, 66, 68, 69, 70, 71, 72, 74, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 106, 109, 116, 117, 125, 126, 128, 130, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 148, 149, 150, 151, 152, 155, 156, 157, 158, 163, 164, 165, 166, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208], "all_even": 35, "all_kei": 55, "alla": 116, "allan": 52, "allclos": 153, "allianc": [116, 128], "alliter": 129, "alll": 146, "alloc": [79, 101, 198], "allow": [11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 36, 37, 38, 39, 40, 42, 45, 47, 48, 51, 53, 54, 70, 71, 76, 77, 89, 90, 91, 94, 95, 101, 102, 103, 104, 106, 108, 112, 116, 117, 126, 128, 129, 137, 138, 139, 142, 150, 151, 155, 156, 162, 163, 164, 169, 171, 173, 174, 175, 176, 177, 178, 180, 187, 190, 194, 195, 199, 200], "allus": 138, "almost": [24, 128, 138, 169, 170, 171, 173, 174, 175, 176, 177, 178, 188, 197, 198], "aloha": 184, "alomomola": 166, "alon": [128, 130, 177, 192, 194, 196], "along": [8, 10, 11, 14, 15, 37, 47, 70, 71, 74, 77, 79, 80, 84, 102, 103, 106, 116, 128, 137, 138, 148, 149, 151, 169, 171, 173, 177, 178, 185, 188, 190, 192, 193, 195, 197, 198, 208], "alongisd": 170, "alongsid": [129, 171, 172, 173, 178], "alot": 177, "alow": 49, "alp": 128, "alpha": [8, 18, 19, 31, 32, 81, 90, 178, 187, 189, 190, 191, 192, 193, 195, 200], "alphabet": [28, 29, 48, 49, 52, 76, 80, 91], "alphanumer": 52, "alpin": 128, "alreadi": [8, 23, 36, 37, 45, 52, 53, 56, 68, 70, 80, 85, 98, 106, 117, 128, 130, 131, 132, 133, 138, 142, 143, 155, 156, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 188, 189, 190, 192, 193, 194, 195, 197, 198, 200], "alright": [170, 171, 172, 173, 175, 177, 178, 191], "also": [0, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 34, 35, 36, 37, 38, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 83, 84, 87, 89, 90, 91, 93, 94, 95, 96, 98, 101, 102, 103, 106, 107, 109, 111, 116, 117, 125, 128, 130, 131, 132, 135, 136, 137, 138, 139, 141, 143, 146, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 208], "alt": 117, "altaria": 166, "altariamega": 166, "alter": [37, 42, 92, 155, 173, 177, 178, 185, 188, 190, 192, 193, 195, 196, 197, 198], "altern": [27, 29, 31, 36, 52, 68, 77, 80, 91, 117, 128, 159, 162, 177, 178, 195, 198, 200], "although": [4, 12, 28, 29, 36, 74, 75, 79, 83, 95, 96, 102, 128, 130, 171, 178, 185, 186, 187, 193, 194, 198, 199], "altman": [116, 128, 130], "altspel": 117, "alu": 68, "alumni": 128, "alwai": [24, 27, 29, 34, 42, 43, 71, 72, 74, 80, 81, 82, 85, 87, 88, 89, 93, 95, 96, 102, 103, 106, 128, 130, 131, 135, 136, 143, 150, 155, 169, 170, 171, 173, 175, 176, 177, 178, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198], "alzheim": 138, "am": [37, 39, 52, 56, 60, 61, 75, 84, 94, 106, 138, 142, 143, 173, 185, 188, 190, 192, 193, 194, 195, 196, 198, 200], "amateurish": 128, "amaura": 166, "amax": [18, 19], "amaz": [51, 175, 200], "amazingli": 129, "amazon": [52, 178], "amazonaw": 172, "amber": 187, "ambigi": 117, "ambigu": 85, "ambipom": 166, "ambit": 128, "ambiti": 128, "amd": [98, 137, 176], "amd64": 24, "amelia": 106, "america": [59, 63, 68, 117], "american": [116, 128, 184], "ami": [40, 47, 102, 135], "amid": 128, "amin": [18, 19], "among": [45, 66, 102, 128, 141, 187, 188, 196, 197, 200], "amongst": 173, "amoonguss": 166, "amount": [0, 42, 44, 72, 89, 92, 98, 128, 131, 135, 136, 137, 143, 148, 169, 170, 171, 172, 175, 176, 177, 178, 189, 193, 194, 195, 200], "amp": 133, "ampharo": 166, "ampharosmega": 166, "ampl": 198, "amusingli": 128, "an": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 31, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 57, 60, 64, 65, 66, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 106, 112, 116, 117, 125, 127, 128, 129, 131, 132, 133, 134, 135, 136, 138, 139, 141, 142, 143, 148, 149, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 175, 176, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "anaconda": [80, 148, 185], "anaconda3": [61, 80, 116, 117, 126, 128, 130, 131, 159, 162, 163, 164, 184, 187, 191, 193], "analog": [83, 155], "analogi": 141, "analys": [5, 14, 15, 16, 17, 98, 115, 185], "analysi": [0, 3, 4, 5, 12, 14, 15, 16, 17, 64, 98, 117, 155, 156, 159, 166, 167, 178, 184, 185, 187, 188, 192, 193, 194, 196, 197, 198, 200, 201, 207], "analyst": [155, 163, 186], "analyt": [0, 136, 155, 188], "analyz": [7, 71, 98, 140, 145, 146, 155, 156, 157, 160, 161, 163, 166, 167, 192, 200], "analyze_list_overlap": 140, "anana": 39, "anathema": 131, "anatomi": 117, "ancient": 128, "andorra": 117, "andreessen": [116, 141], "andrej": 169, "android": 178, "anduril": 142, "angel": [116, 128, 131], "angl": 82, "angri": 128, "ani": [4, 6, 7, 18, 19, 22, 24, 27, 31, 32, 34, 35, 37, 38, 46, 47, 48, 49, 51, 52, 54, 56, 57, 64, 70, 71, 75, 76, 77, 78, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 109, 116, 117, 125, 128, 131, 132, 135, 136, 138, 139, 141, 142, 143, 148, 149, 151, 152, 155, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208], "anim": [7, 18, 19, 103, 128, 143, 177], "anisotrop": [28, 29], "ankl": [17, 19, 172], "anlayt": 208, "ann": [7, 18, 19], "anniversari": 39, "annoi": [131, 152], "annot": [178, 186, 195, 196, 199], "annotate_ax": 193, "announc": 128, "annual": [24, 156, 189], "anoint": 128, "anomal": 1, "anomali": [2, 130, 134, 207], "anomaly_detect": 8, "anon": 128, "anonym": [22, 35, 57, 86], "anorith": 166, "anoth": [3, 7, 22, 28, 29, 31, 32, 35, 36, 37, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 57, 62, 68, 70, 74, 75, 76, 80, 83, 84, 88, 89, 91, 93, 94, 95, 96, 101, 102, 103, 116, 117, 126, 128, 130, 131, 135, 136, 137, 138, 143, 145, 150, 151, 155, 156, 157, 164, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "anscomb": [188, 190], "ansi": 128, "answer": [51, 116, 125, 127, 128, 130, 131, 134, 138, 139, 141, 172, 173, 174, 175, 176, 177, 178, 180, 198], "answer_kei": 117, "antialia": [173, 176, 177, 179, 180], "antibiot": 47, "antiqu": 128, "anuko": 52, "anukool": [52, 69], "any_fun": 84, "anybodi": 143, "anymor": [128, 199], "anyof": 137, "anyon": [52, 90, 128, 135, 136, 141, 176, 178], "anyth": [24, 43, 52, 74, 102, 106, 116, 117, 128, 136, 141, 143, 159, 162, 164, 165, 169, 170, 171, 172, 173, 176, 177, 178, 185, 192, 195, 200], "anytim": [177, 186], "anywai": [44, 128, 131, 141, 173, 178, 194, 195, 199], "anywher": [39, 128, 135, 136, 169, 176, 178, 190], "aord": 131, "ap": 143, "apart": [4, 24, 53, 128, 131, 142, 151, 189, 192, 198], "apex": 128, "api": [116, 120, 128, 130, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 159, 162, 169, 175, 176, 177, 178], "api_bas": 128, "api_doc": 117, "api_kei": [128, 132, 137, 141], "api_requestor": 128, "api_resourc": 128, "api_typ": 128, "api_vers": 128, "api_wrapp": 126, "apichain": 117, "apolog": 128, "app": [127, 128, 132, 135, 136, 141, 142, 143, 172, 173, 174, 175, 176, 187], "appart": 49, "appdata": 80, "appeal": [128, 130, 185, 186, 196], "appear": [52, 75, 76, 79, 84, 89, 103, 117, 128, 136, 171, 172, 177, 178, 185, 187, 188, 189, 196, 200], "appen": 152, "append": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 47, 57, 68, 71, 74, 79, 80, 84, 94, 101, 130, 138, 141, 142, 148, 152, 155, 162, 164, 167, 170, 172, 173, 174, 176, 178, 179, 180, 188, 190, 191, 192, 193, 200], "appendex": 177, "appendix": 177, "appet": 129, "appl": [39, 47, 52, 53, 55, 56, 91, 92, 95, 102, 117, 128, 129, 157, 178, 196], "apple_pi": 178, "appli": [24, 31, 32, 37, 38, 70, 79, 117, 128, 130, 131, 139, 141, 142, 158, 159, 161, 162, 163, 165, 169, 171, 172, 173, 175, 177, 187, 188, 192, 195, 197, 198, 199, 200], "applic": [0, 22, 28, 29, 31, 32, 39, 51, 52, 64, 68, 80, 83, 101, 102, 116, 117, 118, 125, 128, 131, 135, 136, 138, 142, 151, 156, 162, 169, 170, 174, 177, 178, 180, 192, 207, 208], "appreci": [128, 138], "approach": [7, 26, 101, 117, 128, 138, 141, 142, 151, 159, 162, 170, 176, 199, 200], "appropri": [0, 5, 14, 15, 16, 17, 43, 44, 45, 46, 51, 61, 74, 175, 176, 177, 178, 187, 192], "approx": 32, "approxim": [4, 5, 51, 126, 128, 130, 177, 197, 198], "apr": 87, "apredict": 128, "april": [45, 49, 117, 128, 131, 136, 173, 178], "apython": 39, "ar": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 108, 109, 112, 115, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 149, 150, 151, 152, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 208], "ara": 117, "arab": 68, "arang": [8, 28, 29, 145, 148, 150, 151, 153, 169, 170, 171, 200, 201], "arbitrari": [27, 55, 56, 71, 74, 106, 129, 150, 155, 173, 187], "arbok": 166, "arc": [82, 128], "arcanin": 166, "arcco": 32, "arceu": 166, "arch": 128, "archen": 166, "archeop": 166, "architectur": [7, 128, 172, 173, 174, 175, 176, 177, 178, 179, 180], "architecur": 177, "architecutur": 175, "architetur": 177, "archiv": [173, 177], "arctan2": 153, "arcx": 52, "arcxarcx": 52, "area": [0, 74, 90, 95, 101, 103, 116, 117, 130, 138, 143, 173, 177, 178, 189, 195, 198, 199], "area_of_circl": [74, 90], "aren": [57, 128, 130, 131, 132, 137, 142, 143, 169, 170, 172, 173, 175, 176, 177, 178, 194, 196, 198], "arg": [37, 41, 49, 61, 71, 77, 106, 126, 128, 162, 171, 172, 173, 174, 176, 177, 178, 179, 180, 187, 190, 193, 199], "arg1": [57, 77], "arg2": 57, "arg3": 57, "argentina": 145, "argmax": [153, 169, 171, 172, 173, 174, 175, 178, 179, 180], "argmin": [130, 153, 169], "argpars": [174, 180], "argpartit": 153, "argsort": 153, "argu": [117, 141, 171], "arguabl": 128, "argument": [22, 34, 35, 37, 38, 39, 40, 52, 56, 57, 59, 60, 61, 65, 66, 68, 69, 70, 72, 75, 79, 80, 84, 86, 90, 102, 106, 116, 117, 126, 128, 130, 135, 137, 145, 149, 152, 172, 173, 174, 175, 185, 186, 187, 188, 189, 191, 194, 198, 200], "argument1": 80, "argument2": 80, "argument_list": 79, "argv": 80, "ariado": 166, "aris": [37, 48], "arithmet": [38, 51, 70, 74, 101, 104, 151], "arm": [98, 184], "armaldo": 166, "arnold": 184, "aromatiss": 166, "aron": 166, "around": [52, 77, 84, 92, 117, 125, 126, 128, 130, 131, 132, 138, 141, 142, 143, 169, 175, 178, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200], "arr": [37, 149, 151], "arrai": [14, 15, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32, 47, 52, 55, 57, 68, 74, 80, 107, 111, 128, 130, 154, 155, 169, 171, 173, 188, 189, 190, 192, 198, 199, 200, 201], "arrang": [31, 69, 128, 138, 166, 169, 188, 193, 196, 197], "array_equ": [148, 153], "arriv": [128, 192, 195], "arrow": [70, 177], "arrrai": 155, "arsen": [198, 199, 200], "art": [0, 49, 128, 133, 139, 171, 172, 173, 174, 175, 177, 178], "arthur": [37, 40, 45, 47, 55, 57, 74, 77, 94, 101, 102, 103], "arthurhunt": 40, "arti": 128, "articl": [9, 17, 19, 48, 63, 64, 65, 66, 76, 77, 106, 117, 128, 130, 134, 155, 156, 159, 161, 162, 171, 177, 178, 189], "articuno": 166, "artif": 15, "artifici": [0, 7, 12, 15, 18, 19, 128, 138, 139, 169, 172, 173, 178, 196, 207], "artificial_intellig": 196, "artist": [117, 128, 176, 193], "arxiv": 177, "as_cmap": 187, "as_retriev": [116, 117, 131, 134, 140, 141], "as_strid": 153, "asabeneh": [24, 68], "asarrai": 173, "ascend": [128, 155, 166, 167], "ascii": [52, 68], "ascii_lett": 80, "ascontiguousarrai": 153, "asian": [54, 184], "asian_countri": 54, "asid": [128, 129, 169, 196], "asin": [80, 82], "asinh": [80, 82], "ask": [24, 35, 42, 51, 72, 94, 116, 117, 120, 128, 130, 131, 134, 137, 139, 141, 142, 143, 144, 171, 173, 174, 175, 177, 178, 198], "asp": 128, "aspect": [101, 116, 117, 138, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 197, 198, 199, 200], "aspra": 128, "assaria": 184, "assemblyai": 141, "assert": [70, 71, 88, 89, 172, 174, 175, 176, 177, 178, 179, 180], "assert_same_host": 126, "assertionerror": 70, "assess": 197, "asset": [117, 139, 141], "assign": [3, 7, 17, 19, 36, 37, 38, 47, 52, 53, 54, 55, 56, 57, 62, 70, 75, 76, 77, 79, 84, 89, 91, 92, 93, 96, 97, 101, 104, 106, 117, 131, 138, 155, 156, 159, 162, 164, 165, 171, 173, 185, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200], "assist": [128, 137, 141, 143, 187, 199], "associ": [0, 9, 17, 19, 28, 29, 55, 80, 84, 89, 90, 96, 102, 117, 126, 128, 186, 189, 193, 194, 198, 200], "assosci": [175, 178], "assum": [1, 4, 7, 11, 13, 38, 95, 116, 128, 130, 131, 159, 173, 178, 187], "assumpt": [128, 141, 189, 198], "assur": [128, 177, 192, 194, 198], "asterisk": [40, 77, 80], "asterix": 128, "asthenospher": 125, "astonish": 128, "astrai": 128, "astyp": [148, 152, 153, 155, 195, 200], "async": [88, 126, 128], "atan": [80, 82], "atan2": [80, 82], "atanh": [80, 82], "ate": 138, "ateli": 128, "ath": 39, "atk": 166, "atlanta": [103, 117], "atlanti": 40, "atleast": 190, "atleast_2d": 153, "atmospher": [138, 186], "atol": 172, "attach": [36, 38, 49, 90, 101, 128, 155, 169, 175, 177, 186, 187, 188, 189, 190, 193, 195, 197, 198, 200], "attachment_count": 126, "attack": [166, 184], "attain": 196, "attempt": [128, 175, 178, 186, 194, 198], "attend": [128, 141], "attent": [128, 131, 141, 173, 178, 193, 195, 200], "attic": 128, "attir": 128, "attitud": 138, "attn_dropout": 177, "attn_output": 177, "attr": [102, 103], "attract": [94, 128, 185], "attrib": 68, "attribut": [36, 37, 38, 39, 56, 59, 65, 70, 72, 74, 80, 82, 89, 94, 101, 103, 106, 125, 131, 138, 140, 151, 159, 162, 169, 172, 173, 175, 176, 177, 178, 180, 190, 192, 193, 198], "attributeerror": [56, 101, 102, 103, 193, 198], "attributeinfo": 131, "attributemethod": 89, "au": 32, "audi": [155, 156, 167], "audienc": [128, 199], "audino": 166, "audinomega": 166, "audio": [24, 141, 169, 170, 172, 173, 175, 178, 200], "aug": 87, "augment": [125, 172, 175, 176, 178], "augmentedassign": 89, "august": [45, 128], "auli": 177, "auroru": 166, "australia": [11, 13, 145, 189], "australian": 143, "austrian": 128, "auth": [138, 142], "authent": [135, 136], "author": [116, 117, 128, 131, 138, 177], "authorit": 138, "authors_str": 138, "authors_tone_descript": 138, "auto": [117, 137, 141, 166, 167, 172, 173, 174, 176, 177, 178, 179, 180], "auto_transform": 175, "autogener": [116, 117], "autogpt": 117, "autograd": 170, "autom": [0, 24, 47, 48, 117, 130, 135, 136, 137, 139], "automat": [0, 7, 34, 35, 38, 51, 80, 90, 93, 101, 102, 106, 116, 127, 130, 135, 136, 139, 155, 170, 171, 173, 175, 177, 178, 185, 186, 189, 191], "automatic_transform": 176, "automobil": 155, "automobile_data": [155, 156, 167], "automobile_data1": 167, "autonom": [117, 138], "autonotebook": 132, "autopct": [145, 146], "autoregress": 198, "autoreload": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "autumn": [45, 74, 116, 184, 190], "autumn_r": 190, "ava": 68, "avail": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 51, 52, 53, 54, 56, 68, 80, 82, 84, 87, 89, 91, 92, 94, 96, 103, 104, 116, 117, 128, 130, 131, 139, 143, 151, 155, 161, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 188, 189, 195, 196, 198, 199, 200], "availalbl": 170, "avalanch": 128, "avalugg": 166, "averag": [1, 4, 47, 53, 74, 117, 128, 131, 138, 143, 146, 155, 156, 172, 173, 174, 175, 176, 178, 179, 180, 189, 194, 198, 200], "averaged_perceptron_tagg": 134, "avg": 166, "avgpool": 175, "avgpool2d": 172, "aviat": 133, "avocado": 95, "avoid": [36, 45, 46, 49, 56, 57, 68, 78, 83, 93, 101, 128, 131, 143, 149, 159, 169, 172, 177, 189, 198], "avov": [189, 190], "aw": [116, 128, 135, 136, 169, 178], "awai": [11, 12, 13, 14, 15, 16, 17, 24, 39, 90, 128, 143, 172, 176, 180, 185, 188, 189, 194, 196], "await": [88, 178, 186], "awar": [18, 19, 68, 128, 131, 137, 143, 169, 170, 172, 177, 178, 189, 193], "award": 198, "awesom": [24, 116, 117, 127, 130, 131, 132, 135, 136, 137, 138, 141, 142, 143, 190], "awhil": 90, "awk": 24, "ax": [8, 11, 14, 15, 25, 30, 107, 111, 128, 159, 162, 169, 172, 173, 177, 178, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "ax1": [199, 201], "ax2": 199, "ax4": 199, "ax5": 199, "ax6": 199, "ax_joint": 189, "axarr": 146, "axes_styl": [185, 196], "axessubplot": [184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198, 201], "axew": 166, "axhlin": 200, "axi": [11, 14, 15, 16, 17, 18, 19, 27, 30, 39, 128, 130, 145, 146, 148, 149, 151, 152, 155, 161, 166, 169, 172, 173, 175, 177, 178, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200], "axiomat": 128, "axis_nam": 159, "axisgrid": [186, 188, 189, 190, 191, 194, 197, 198, 199, 200], "axz": 39, "ax\u00b2": 74, "az": 184, "azelf": 166, "azumaril": 166, "azur": [169, 178], "azuril": 166, "b": [11, 30, 37, 45, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 65, 68, 69, 71, 74, 75, 76, 77, 80, 81, 82, 84, 90, 91, 92, 94, 95, 96, 102, 103, 104, 106, 126, 131, 135, 136, 139, 145, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 165, 169, 170, 177, 178, 184, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "b1": 104, "b2": 104, "b2b": [117, 139, 143], "b312893cfb9a": 55, "b334ef": 80, "b3ac65e67ae9": 75, "b4c816180ad9": 94, "b712": 131, "b72af0bfcd83": 53, "b8ab82a1062c": 77, "b8eab4452d4b": 102, "b902": 128, "b942612e6b6a": 53, "b951d4fef2c8": 71, "b977fb738e16": 101, "b_0": 27, "b_n": 27, "ba": 177, "baat": 138, "baby_back_rib": 178, "babyagi": 117, "babydog": 103, "bac": 39, "back": [8, 52, 69, 77, 94, 98, 104, 115, 116, 117, 126, 128, 130, 131, 133, 135, 136, 137, 138, 139, 141, 142, 148, 155, 159, 162, 163, 164, 165, 166, 170, 172, 173, 176, 177, 178, 186, 193, 194, 195, 196, 197, 198], "back_end": 53, "backbon": [175, 176, 177], "backend": [169, 185, 188, 200], "background": [35, 116, 142, 170, 177, 185, 187, 189, 195, 196, 198], "backlash": 39, "backlog": 139, "backoff": [135, 136], "backpropag": [18, 19, 170, 171], "backquot": 130, "backslash": [52, 69, 89, 91], "backspac": 52, "backtick": 130, "backward": [38, 48, 52, 69, 92, 106, 170, 171, 172, 173, 174, 175, 178, 179, 180, 195], "bacon": 129, "bad": [71, 128, 130, 131, 135, 138, 141, 143, 155, 170, 172, 175, 178, 194], "bad_str": 116, "badli": 128, "baevski": 177, "bag": [17, 19, 90, 172], "bagon": 166, "bai": 143, "baidu": [77, 90], "baklava": 178, "balanc": [128, 131, 142, 171, 175], "bald": 128, "ball": [47, 55, 91, 127], "baltoi": 166, "ban": 128, "banana": [39, 45, 47, 53, 56, 71, 91, 92, 94, 95, 117, 157], "band": [116, 117, 128, 198], "bandwidth": [191, 195, 198], "banett": 166, "banettemega": 166, "bang": 169, "bangladesh": [68, 189], "bank": [117, 126, 128, 178, 193], "baptisteri": 128, "bar": [39, 53, 55, 76, 137, 172, 173, 186, 192, 193, 194, 195, 197, 198, 200, 203], "bar1": 196, "bar2": 196, "bar3": 196, "barack": 68, "barbaracl": 166, "barboach": 166, "barcelona": 145, "barchart": 145, "bare": [128, 171, 208], "barebon": 172, "bargain": 128, "barh": 172, "bark": 103, "barn": 40, "barplot": [185, 192, 196, 197], "barrier": 138, "basculin": 166, "base": [0, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 19, 24, 27, 31, 32, 47, 48, 49, 51, 52, 57, 59, 60, 61, 65, 70, 71, 72, 78, 80, 82, 83, 93, 94, 95, 98, 101, 102, 103, 106, 109, 115, 116, 117, 126, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 152, 155, 156, 158, 159, 166, 167, 169, 170, 171, 172, 173, 174, 177, 178, 187, 189, 190, 195, 196, 198, 200, 201, 204, 205], "base1": 103, "base2": 103, "base_compressor": 131, "base_retriev": 131, "baseclass": [101, 103], "baseexcept": [126, 128], "basel": 29, "baselin": [177, 196], "basement": 128, "basemodel": [116, 135], "basesslerror": 126, "baseto": 80, "basi": [24, 52, 53, 141, 175, 177, 188, 190, 191, 192, 194], "basic": [23, 28, 29, 32, 37, 38, 39, 49, 51, 65, 72, 76, 80, 101, 116, 128, 132, 133, 141, 151, 155, 170, 171, 173, 187, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 207, 208], "basicconfig": 131, "basicli": 54, "basicmethod": 89, "basil": 116, "basin": 128, "basketbal": 131, "bastiodon": 166, "bat": 103, "batch": [128, 133, 139, 173, 174, 175, 176, 177, 178, 179, 180], "batch_first": 177, "batch_messag": 129, "batch_siz": [172, 173, 174, 175, 176, 177, 178, 179, 180], "batchmat": 128, "batchnorm2d": 175, "bath": 128, "bathingsoap": 146, "bathingsoapsalesdata": 146, "bathroom": 169, "battl": 52, "bayleef": 166, "baz": 53, "bb": 39, "bb99b9cebaa8": 55, "bbb1": 131, "bbox_inch": 30, "bc9e07fcbe69": 56, "bcaaeab6bf17": 93, "bce": 130, "bceloss": [170, 171], "bcelosswithlogit": 171, "bcewithlogitsloss": 171, "beach": [116, 178], "beak": 47, "bear": [44, 128], "bearabl": 128, "beartic": 166, "beat": 178, "beaten": 116, "beauti": [39, 87, 128, 138, 142, 143, 173, 176, 177, 178, 184, 198], "beautifi": 68, "beautifli": 166, "beautifulli": [128, 178, 193], "beautifulsoup": [24, 135, 136, 142], "becam": [116, 117, 128], "becasu": 88, "becauas": 132, "becaus": [7, 24, 27, 35, 37, 47, 48, 49, 52, 60, 70, 71, 74, 75, 76, 77, 79, 87, 88, 89, 90, 91, 92, 93, 95, 101, 102, 103, 106, 116, 117, 125, 128, 130, 131, 134, 136, 137, 138, 141, 142, 143, 156, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "becom": [35, 38, 47, 48, 52, 75, 106, 116, 117, 128, 131, 134, 138, 155, 156, 157, 170, 171, 178, 198], "becuas": 138, "bed": 128, "bedroom": [0, 128, 169], "bee": 192, "beedril": 166, "beedrillmega": 166, "beef_carpaccio": 178, "beef_tartar": 178, "been": [3, 7, 14, 15, 16, 17, 18, 19, 39, 49, 52, 53, 54, 55, 56, 68, 70, 71, 84, 90, 102, 106, 115, 116, 117, 128, 130, 131, 132, 134, 137, 140, 141, 153, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 186, 187, 188, 189, 192, 193, 195, 197, 198, 199, 200], "beeswarm": [192, 193], "beet_salad": 178, "befor": [0, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 40, 47, 48, 51, 57, 59, 65, 66, 69, 71, 75, 76, 77, 79, 84, 93, 98, 102, 103, 106, 117, 128, 129, 131, 138, 139, 142, 143, 152, 155, 156, 157, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 184, 186, 187, 188, 189, 190, 194, 195, 196, 198, 199, 200, 208], "beforehand": 48, "began": 200, "begin": [25, 27, 28, 29, 31, 32, 38, 47, 52, 53, 54, 65, 68, 80, 84, 89, 90, 102, 104, 106, 107, 111, 116, 117, 126, 128, 131, 141, 142, 164, 165, 166, 169, 171, 172, 173, 175, 176, 177, 178, 184, 185, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 200], "beginn": [22, 87, 98, 178, 188, 194, 195, 208], "begun": [128, 131], "behav": [68, 91, 104, 106, 151], "behavior": [0, 27, 51, 84, 101, 102, 103, 106, 160, 164, 165, 169, 175, 188], "behaviour": [27, 95], "beheeyem": 166, "behind": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 78, 79, 117, 138, 143, 169, 170, 172, 173, 176, 177, 192, 195, 197, 200], "behold": 128, "beignet": 178, "being": [0, 7, 14, 15, 18, 19, 24, 27, 38, 39, 48, 53, 55, 56, 74, 77, 92, 101, 103, 108, 112, 117, 127, 128, 130, 131, 134, 138, 141, 142, 143, 169, 170, 171, 172, 173, 175, 176, 177, 178, 185, 188, 189, 190, 192, 194, 196, 198, 199], "bel": [117, 128], "beldum": 166, "belgium": [117, 145, 189], "belief": 128, "believ": [128, 130, 131, 136, 139, 141, 193, 198], "bell": [52, 116], "bella": [47, 101, 102, 106], "belli": 128, "bellossom": 166, "bellsprout": 166, "belong": [3, 10, 51, 91, 92, 101, 102, 128, 171, 177], "belov": 128, "below": [3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 35, 37, 38, 43, 44, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 77, 78, 80, 83, 84, 87, 88, 90, 91, 92, 94, 95, 101, 103, 104, 116, 117, 128, 130, 131, 132, 135, 136, 138, 139, 141, 142, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 178, 185, 189, 191, 199, 200, 201], "ben": 101, "bench": 128, "benchmark": [9, 17, 19, 171, 173, 175, 177, 178], "bend": [128, 188], "beneath": 128, "benedictevan": 138, "benefici": [90, 130, 158, 175], "benefit": [52, 80, 103, 135, 136, 171, 172, 173, 174, 175, 177, 178, 179, 180], "benevol": 117, "bengaluru": 135, "benignli": 128, "bent": 128, "benz": 167, "beret": 176, "bergman": 116, "bergmit": 166, "bergum": 178, "berkelei": 139, "bert": [177, 207], "bertop": 141, "besid": [116, 117, 128, 131, 138, 148], "best": [0, 1, 4, 24, 35, 37, 47, 49, 52, 53, 68, 85, 98, 116, 117, 128, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 146, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 187, 188, 189, 190, 192, 195, 198], "best_match": 117, "best_model": 176, "best_model_path": 176, "bet": [116, 128], "beta": [31, 81, 173, 175, 177, 188], "beta_": 177, "betavari": 81, "betoken": 128, "better": [11, 13, 36, 39, 42, 47, 48, 66, 84, 89, 98, 103, 104, 106, 116, 128, 130, 131, 132, 135, 136, 137, 138, 142, 143, 145, 146, 155, 169, 170, 171, 173, 175, 176, 177, 178, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 207], "betw": 11, "between": [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 19, 29, 37, 39, 47, 48, 49, 51, 52, 53, 54, 56, 64, 68, 78, 80, 81, 84, 94, 95, 102, 106, 116, 117, 128, 131, 133, 136, 138, 140, 141, 142, 143, 151, 152, 155, 169, 170, 171, 172, 174, 175, 176, 177, 178, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201], "beverag": 54, "bewar": [173, 176, 177], "beyond": [171, 194, 198], "bfa": 128, "bfc5aa62a0ff": 95, "bfee": 131, "bfoo": 39, "bia": [7, 138, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 207], "bias": [170, 176], "bibarel": 166, "bibimbap": 178, "bibl": 186, "bicub": [175, 176, 178], "bidirect": 177, "bidoof": 166, "big": [11, 12, 13, 116, 117, 128, 131, 138, 140, 141, 142, 143, 170, 172, 173, 175, 176, 177, 179, 198, 199, 200, 207, 208], "bigger": [4, 7, 8, 10, 16, 17, 18, 19, 38, 44, 56, 94, 130, 138, 150, 176, 177, 178, 190, 192, 199], "biggest": [128, 131, 138, 149, 172, 173, 175, 176, 177, 178, 185], "biggr": 27, "bilinear": [173, 176, 177, 179, 180], "bill": [37, 47, 52, 57, 74, 77, 128, 138, 188, 189, 192, 193, 194, 195, 198, 200], "billgat": 138, "billion": 169, "billionair": 128, "bin": [69, 84, 95, 134, 145, 169, 178, 186, 189, 191, 195, 196, 200], "binacl": 166, "binari": [5, 14, 15, 16, 17, 51, 52, 68, 84, 89, 91, 94, 95, 98, 170, 171, 172, 190], "binary_r": 190, "binary_sum": 84, "bind": [96, 102, 193], "binder": 24, "binomi": 189, "biographi": 116, "biolog": [7, 18, 19], "biologi": [117, 138], "bird": [55, 101, 103, 116, 128], "birth": [39, 128, 189], "birth_year": [74, 77, 90], "birthdai": 74, "bisharp": 166, "bit": [4, 5, 8, 10, 16, 17, 18, 19, 24, 54, 81, 95, 98, 116, 128, 129, 130, 131, 135, 136, 137, 141, 142, 143, 169, 170, 171, 173, 175, 176, 177, 178, 186, 190, 201], "bitter": [175, 176], "bitwis": [89, 104], "bivarait": 189, "bivari": [191, 197, 200], "bizarr": 128, "bject": 68, "blab": 141, "black": [7, 10, 116, 184, 192, 193, 196], "blackwel": 128, "blank": [84, 142], "blastois": 166, "blastoisemega": 166, "blaziken": 166, "blazikenmega": 166, "bleakest": 128, "blend": 200, "blind": 187, "blissei": 166, "blister": 128, "blitzl": 166, "blob": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 171, 178, 199], "blobmodel": 171, "block": [6, 42, 43, 44, 45, 46, 47, 48, 49, 68, 71, 74, 89, 101, 109, 128, 130, 142, 155, 169, 170, 173, 178, 191, 198, 201, 205], "block_1": [172, 179, 180], "block_2": [172, 179, 180], "blog": [64, 106, 139, 141, 142, 174, 176, 177, 178], "blood": [103, 128, 198], "blood_pressur": 198, "bloom": 128, "bloomberg": 139, "blow": 128, "blown": 128, "blu": 101, "blue": [47, 89, 117, 128, 136, 145, 169, 170, 172, 176, 178, 187, 188, 190, 193, 201], "blueprint": [101, 102, 106], "blues_r": 190, "blurt": [128, 131], "bm25": 131, "bm25_retriev": 131, "bm25retriev": 131, "bmatrix": [28, 29, 31, 32], "bmv": 167, "bmw": [103, 136, 167], "board": [135, 136], "board_token": [135, 136], "boat": 128, "bob": [90, 117, 136], "bobbi": 136, "bodi": [34, 43, 44, 45, 46, 47, 48, 49, 74, 75, 79, 89, 101, 103, 117, 126, 130, 155, 156, 166, 167, 177, 184], "body_camera": 184, "body_plain": 126, "body_po": 126, "bog": 177, "bogot\u00e1": 117, "boi": 128, "boil": 116, "bokeh": 189, "bold": [128, 145, 177, 195, 196, 198, 200], "bolder": 200, "boldor": 166, "bolt": 141, "bonafid": 117, "bonapart": 130, "bond": [52, 94, 128], "bone": 190, "bone_r": 190, "bonefi": [135, 136], "bonsli": 166, "bonu": [136, 143, 178, 196], "book": [6, 20, 25, 90, 104, 107, 108, 109, 111, 112, 116, 117, 120, 128, 131, 138, 141, 144, 178, 182, 187, 196, 204, 205], "bookmark": 197, "bool": [102, 103, 172, 173, 176], "bool_a": 150, "bool_idx": 150, "boolean": [16, 17, 18, 19, 37, 45, 52, 80, 89, 102, 137, 148, 149, 155, 159, 160, 161, 162, 164, 165], "boom": 128, "boost": [54, 172], "booster": 186, "boot": [17, 19, 136, 172], "boot_trac": 198, "bootstrap": [142, 196, 198], "boottel": 69, "border": 117, "bore": [49, 128, 131, 178], "born": [39, 71, 116, 177], "borrow": 106, "boss": 128, "boston": [116, 117, 128, 137], "bot": [32, 116, 117, 120, 135, 138, 142, 143, 144], "both": [16, 17, 18, 19, 35, 37, 39, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57, 59, 65, 68, 69, 71, 75, 76, 80, 89, 91, 95, 96, 101, 103, 106, 108, 112, 116, 117, 128, 131, 134, 142, 151, 155, 156, 157, 159, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 189, 193, 195, 196, 200], "bother": [128, 177, 186, 188], "bottl": [52, 131], "bottleneck": [139, 172, 176], "bottom": [16, 17, 18, 19, 24, 116, 128, 135, 136, 150, 155, 171, 172, 178, 186, 194, 196, 198], "bottom_plot": 196, "bottombar": 196, "bottomrow": 158, "bouffal": 166, "bought": [128, 131, 173], "bounc": 128, "bound": [28, 29, 36, 37, 70, 81, 98, 102, 128, 155, 170, 193], "boundari": [5, 9, 171], "bowl": 116, "bowlder": 128, "box": [108, 112, 116, 117, 135, 136, 141, 195, 196, 197, 198, 200, 203], "boxen": 198, "boxenplot": 198, "boxplot": [145, 185, 187, 192, 193, 194, 195, 198, 200], "boxprop": [145, 192], "boyc": 117, "bp": 145, "br": [135, 136], "bra": 117, "brace": [52, 55, 56, 89, 92, 94, 128], "bracket": [35, 43, 47, 48, 52, 53, 54, 55, 57, 89, 91, 92, 133, 149, 150, 169], "braden": 126, "brain": [7, 18, 19, 128, 138, 199], "braixen": 166, "branch": 128, "brand": [131, 136, 143, 200], "bratwurst": 129, "brave": 117, "braviari": 166, "brazil": [68, 145], "brbg": 190, "brbg_r": 190, "bre": 117, "bread": [52, 133, 178], "bread_pud": 178, "break": [7, 22, 34, 42, 50, 71, 72, 74, 80, 88, 89, 91, 94, 116, 126, 128, 138, 170, 171, 172, 173, 176, 177, 178, 199, 200], "breakdown": [178, 181, 182, 192], "breakeven": 128, "breakfast_burrito": 178, "breakthrough": 138, "breathless": 128, "breed": 55, "breez": 194, "breloom": 166, "breviti": [150, 176, 177], "brew": 187, "brewer": 187, "brex": 142, "brg": 190, "brg_r": 190, "brick": 177, "bridg": [128, 177, 178], "brief": [27, 28, 29, 65, 68, 81, 82, 102, 139, 141, 152], "briefli": [128, 129, 187], "bright": [128, 187], "brighten": 128, "brighter": 138, "brilliant": [52, 131], "bring": [52, 68, 116, 117, 127, 128, 131, 132, 138, 142, 169, 172, 177, 188, 190, 194, 196, 200], "british": 128, "broad": 177, "broader": [193, 198], "broadli": 70, "brochur": 143, "brock": 184, "broke": 128, "broken": [38, 78, 128, 134], "bronzong": 166, "bronzor": 166, "brooklyn": 193, "broswer": 178, "broth": 129, "brother": [101, 116, 136], "brought": 128, "brown": [116, 136, 184, 187], "brows": 117, "browser": [24, 128, 178, 187], "brrrr": [173, 177], "bruce": 77, "brush": 128, "bruyn": 145, "brv": 130, "bs4": [135, 136, 142], "bsd": [155, 166, 167], "btw": [116, 148], "bu": 169, "bubbl": 128, "buchheit": 130, "buck": 184, "bucket": 187, "bud": 134, "budew": 166, "budget": 128, "bue": 201, "buffer": [68, 126], "bug": [126, 128, 131, 166], "bugn": 190, "bugn_d": 196, "bugn_r": 190, "bui": [128, 131], "build": [8, 11, 13, 14, 15, 24, 35, 38, 39, 101, 102, 108, 112, 116, 117, 127, 128, 129, 130, 131, 134, 135, 136, 139, 141, 142, 143, 155, 169, 175, 177, 185, 191, 193, 207], "builder": 128, "built": [6, 24, 34, 36, 38, 47, 49, 51, 57, 68, 71, 72, 74, 79, 84, 85, 87, 89, 90, 94, 96, 101, 103, 104, 109, 117, 127, 128, 139, 141, 143, 146, 155, 159, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 205], "builtin": [24, 84, 169], "builtwith": [135, 136], "buizel": 166, "bulbasaur": 166, "bulk": [141, 192], "bulldoz": 128, "bullet": [130, 141, 142, 143, 173], "bullet_point": 143, "bullshit": 132, "bunch": [0, 52, 116, 117, 128, 131, 138, 142, 169, 170, 171, 172, 173, 175, 176, 178, 186], "buneari": 166, "bunnelbi": 166, "bupu": 190, "bupu_r": 190, "bureaucrat": 128, "burger": 135, "buri": 128, "burlington": 184, "burmi": 166, "burn": [128, 138], "burndown": 139, "bush": 128, "busi": [0, 24, 117, 128, 131, 138, 139, 141, 142, 143, 155, 188, 193, 196], "bussi": 24, "butter": [52, 129], "butterfre": 166, "button": [128, 143], "buyer": 128, "bw": [195, 197], "bwmeq": 80, "bwr": [190, 197], "bwr_r": 190, "bx": [74, 189], "bye": 143, "bylaw": 128, "byo": 117, "bypass": 49, "byte": [68, 69, 155, 176, 177, 178], "bytetensor": 173, "c": [8, 10, 22, 24, 29, 37, 38, 39, 45, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 68, 69, 70, 71, 74, 79, 80, 82, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 106, 128, 130, 134, 138, 145, 146, 149, 150, 151, 152, 155, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 176, 177, 178, 184, 187, 189, 191, 192, 193, 194, 196, 201], "c0": [186, 187], "c00e5d7d3c3": 70, "c014293b63c7478c": 116, "c02acf54079b": 167, "c1": [102, 103, 187], "c2": 187, "c3": 187, "c3f637926d7e": 68, "c4": 187, "c454c1331524": 72, "c5": 187, "c6": 187, "c7": 187, "c761920b81b0": 71, "c8": 187, "c8f749f7a9ca": 167, "c9": 187, "c92d9f2b36de": 92, "c_name": 103, "ca": [39, 116, 117, 137, 139, 184], "cab": [39, 198], "cabbag": 71, "cabin": 128, "cabxz": 39, "cach": [116, 178, 193], "cacnea": 166, "cacturn": 166, "cacul": [170, 171], "cad": 24, "cadenc": [135, 136], "caffein": 131, "cake": [128, 178], "calcuat": 171, "calcul": [4, 7, 8, 11, 13, 27, 32, 43, 47, 49, 51, 64, 74, 82, 89, 90, 94, 95, 101, 103, 106, 128, 155, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 185, 187, 189, 191, 192, 193, 195, 196, 198], "calcula": 23, "calculate_ag": [74, 77], "calculate_area": 101, "calculate_mean": 74, "calculate_median": 74, "calculate_mod": 74, "calculate_rang": 74, "calculate_slop": 74, "calculate_std": 74, "calculate_vari": 74, "calculu": [128, 207], "calculus_fourierseries__util": 27, "calendar": [126, 139, 198], "califonya": 116, "california": [116, 128], "californian": 128, "call": [1, 7, 8, 18, 19, 20, 24, 34, 35, 36, 37, 38, 39, 40, 42, 46, 47, 48, 52, 53, 54, 55, 56, 57, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 108, 112, 117, 120, 126, 128, 130, 132, 133, 134, 138, 139, 141, 144, 150, 157, 158, 159, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 185, 187, 193, 195, 196, 198, 199, 200, 201], "callabl": [34, 37, 55, 80, 162, 193, 195], "callablemethod": 89, "callback": [37, 129, 135, 136], "callback_manag": [126, 128, 129], "callbackmanag": 129, "caller": 35, "calm": 128, "calul": 170, "cambridg": [128, 195], "came": [117, 128, 132, 137, 173, 175], "camelcas": 90, "camera": [128, 172, 184], "camerupt": 166, "cameruptmega": 166, "can": [0, 4, 6, 7, 11, 13, 18, 19, 22, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 109, 111, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 170, 172, 173, 176, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 207, 208], "canada": [11, 13, 117, 145], "canadian": 117, "canb": 30, "canberra_dist": 30, "cancellederror": 128, "cancer": 128, "candi": [102, 128], "candid": 178, "canidaefamili": 103, "cannon": 95, "cannot": [35, 37, 38, 40, 47, 49, 51, 52, 54, 55, 56, 61, 68, 70, 71, 75, 76, 77, 79, 80, 88, 90, 91, 92, 93, 94, 95, 98, 101, 106, 152, 156, 159, 161, 169, 173, 184, 190, 196], "canon": [24, 128], "canva": 128, "canvas": 128, "cap": [169, 173, 196], "capabl": [0, 39, 116, 137, 169, 170, 171, 172, 173, 175, 177, 178, 200], "capac": [138, 171, 178], "caper": 128, "capit": [30, 37, 52, 74, 80, 90, 116, 117, 128, 131, 141], "capita": [11, 13], "capital_c": 90, "capitalinfo": 117, "capitalis": 52, "capitalist": 131, "capitalize_list_item": 74, "capres": 116, "capsiz": 196, "captial": 52, "caption": 172, "captur": [71, 81, 95, 136, 177, 180], "capword": [80, 90], "car": [0, 7, 102, 103, 116, 117, 128, 136, 155, 156, 169, 172, 175, 177, 178, 184], "car_horsepow": 167, "car_info": 103, "car_manufactur": 167, "car_park": 169, "car_pric": 167, "caramel": 129, "carbink": 166, "carbonara": 116, "card": [117, 128, 171], "care": [34, 68, 128, 130, 131, 133, 136, 138, 151, 155, 169, 173, 176, 177, 188, 189, 198, 201], "career": [0, 135, 136, 139, 141], "carefulli": 49, "carnegi": [7, 128], "carnivin": 166, "carolin": 116, "carpricedf": 167, "carracosta": 166, "carri": [51, 56, 95, 104, 117, 128, 131, 165], "carriag": 52, "carrot": [71, 129, 178], "cars_schema": 136, "carsdf": 167, "carsdf1": 167, "carsdf2": 167, "carshorsepowerdf": 167, "carson": [77, 128], "cart": 128, "carter": [101, 138], "cartesian": 11, "cartoon": 128, "carvanha": 166, "cascoon": 166, "case": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 36, 37, 39, 42, 43, 44, 47, 49, 51, 52, 55, 56, 66, 70, 71, 80, 88, 89, 90, 91, 94, 95, 96, 98, 101, 103, 106, 116, 120, 128, 130, 131, 133, 134, 135, 136, 139, 142, 143, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 177, 178, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 207], "cash": [117, 142], "cast": [128, 149], "castform": 166, "cat": [7, 47, 91, 92, 106, 171, 172, 177, 190], "cat1": 106, "cat2": 106, "cat_po": 193, "catalyz": 138, "catbackward0": 177, "catch": [42, 72, 128, 136, 195, 200], "cateat": 145, "categor": [0, 5, 14, 15, 16, 17, 80, 141, 155, 156, 184, 187, 188, 191, 194, 195, 196, 197, 198, 199, 200, 203], "categori": [10, 14, 15, 17, 19, 42, 51, 70, 92, 116, 130, 135, 137, 141, 166, 171, 178, 184, 187, 190, 192, 196, 199], "categoricalindex": 155, "categorize_countri": 37, "category_point": [188, 190], "caterpi": 166, "cathi": 47, "catplot": 198, "caught": [34, 49, 71], "caus": [37, 38, 49, 56, 68, 70, 71, 72, 87, 128, 131, 171, 173, 178], "caution": 141, "cautiou": 200, "cayenn": 129, "cb": [135, 136], "cb8ac02fbcd3": 70, "cbar": 201, "cbook": 193, "cca2": 117, "cca3": 117, "ccn3": 117, "cd": [80, 178], "cde": 39, "cdn": 145, "cdot": [27, 28, 29, 31, 32, 169, 171, 177], "cdotp": 30, "ce": [117, 141], "ceil": [16, 17, 18, 19, 80, 82, 128, 153], "ceil_mod": [172, 173, 179, 180], "celebi": 166, "celebr": [135, 136], "celeri": 129, "cell": [16, 17, 18, 19, 24, 36, 75, 117, 169, 170, 172, 173, 176, 177, 178, 181, 185, 201], "cell_cont": 36, "celsiu": [38, 116, 137], "center": [27, 52, 71, 94, 128, 130, 136, 138, 152, 171, 177, 186, 191, 194, 195, 196, 199], "centimet": [9, 10, 14], "centimetr": 184, "centr": 188, "central": [101, 138, 172, 184, 188, 192, 194, 195, 196, 198], "centric": 142, "centroid": [3, 10, 130], "centroid_id": 10, "centuri": [60, 61, 116, 128], "ceo": [125, 128, 131, 141, 143], "cert": 126, "certain": [1, 11, 12, 13, 14, 15, 16, 17, 31, 39, 42, 49, 52, 53, 54, 61, 63, 70, 71, 80, 85, 90, 128, 137, 155, 169, 171, 172, 173, 175, 176, 178, 185, 194], "certainli": [90, 128, 177, 178, 186, 189, 192, 195, 196, 198, 199], "certainti": 128, "cezann": 128, "ch": [47, 57], "chaang": 166, "chain": [45, 90, 95, 103, 117, 120, 125, 126, 128, 130, 131, 132, 134, 135, 136, 139, 141, 142, 143, 156, 159, 160, 165], "chain_new": 117, "chain_typ": [116, 117, 128, 130, 132, 134, 139, 141, 142, 143], "chain_type_kwarg": 141, "chair": 128, "chairman": 198, "challeng": [52, 102, 138, 142, 172, 176, 177, 178, 199], "champion": 143, "chanc": [128, 138, 169, 170, 171, 172, 173, 176, 177, 180], "chandelur": 166, "chandler": 184, "chang": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 37, 43, 47, 48, 51, 56, 57, 64, 70, 71, 74, 75, 76, 77, 80, 92, 93, 94, 98, 101, 102, 103, 104, 116, 117, 128, 130, 131, 135, 136, 137, 138, 145, 149, 150, 152, 155, 158, 159, 160, 161, 162, 164, 170, 171, 172, 173, 174, 177, 178, 179, 180, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "changabl": 178, "change_to_upp": 37, "changelog": 171, "channel": [126, 128, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180], "chansei": 166, "chaotic": 128, "chapter": [52, 138, 174, 175, 176, 177, 178], "char": [35, 47, 91], "charact": [24, 37, 42, 47, 48, 49, 60, 61, 68, 80, 87, 89, 90, 92, 94, 117, 127, 128, 130, 132, 138, 141, 162, 185], "character": 138, "characterist": [0, 5, 7, 56, 101, 166, 167, 178, 198], "charactertextsplitt": 117, "charcter": 52, "charg": [128, 178], "charizard": 166, "charizardmega": 166, "charm": [116, 128], "charmand": 166, "charmeleon": 166, "chart": [139, 196, 198, 199], "chase": [128, 131, 184], "chat": [117, 120, 127, 128, 135, 136, 137, 138, 141, 142, 143], "chat_histori": 117, "chat_model": [116, 117, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143], "chat_prompt": [127, 129, 141, 143], "chat_prompt_combin": [141, 143], "chat_prompt_map": [141, 143], "chat_prompt_with_valu": 129, "chatbas": 117, "chatbot": [137, 139], "chatcomplet": 137, "chatgener": 129, "chatgpt": [116, 120, 130, 137, 141], "chatmessag": [129, 137], "chatmessagehistori": 116, "chatopenai": [116, 117, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143], "chatot": 166, "chatpdf": 117, "chatprompttempl": [116, 117, 127, 129, 133, 141, 143], "chdir": 80, "che": [39, 117], "cheap": [116, 128, 131], "cheaper": [135, 136], "cheapli": 128, "cheat": [147, 154, 168, 170], "cheatham": 128, "cheatsheet": 170, "cheb": 30, "chebyshev_dist": 30, "check": [11, 13, 14, 15, 16, 17, 18, 19, 25, 35, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 68, 71, 74, 76, 80, 90, 92, 95, 101, 102, 103, 107, 111, 116, 117, 127, 128, 130, 131, 132, 135, 136, 138, 141, 142, 143, 152, 155, 160, 164, 169, 171, 172, 173, 174, 175, 176, 179, 180, 185, 187, 189, 190, 193, 198, 200], "check_latest_vers": [116, 130, 131], "check_season": 74, "check_text_similar": 68, "checkbox": 24, "checkout": [169, 177], "checkpoint": 166, "checkr": 142, "chees": 116, "chef": 176, "chelsea": 200, "chemistri": 138, "cher": 39, "cherbourg": [194, 196], "cherrim": 166, "cherubi": 166, "chesnaught": 166, "chespin": 166, "chess": 141, "chevrolet": 167, "chicago": 117, "chicken": [129, 171, 172], "chikorita": 166, "child": [68, 101, 103, 131, 132, 194], "child_splitt": 131, "childbirth": 138, "childmethod": 103, "children": [128, 132, 138, 141, 196], "chimchar": 166, "chimecho": 166, "china": [37, 53, 54, 57, 68], "chinchou": 166, "chines": 68, "ching": 39, "chingl": 166, "chip": [138, 178], "chirag": 102, "chocol": 178, "choic": [45, 51, 80, 81, 116, 117, 128, 129, 131, 137, 138, 153, 173, 187, 188, 189, 191, 192, 193, 194, 198], "choos": [1, 8, 71, 117, 128, 130, 135, 136, 137, 141, 149, 155, 156, 170, 171, 172, 175, 176, 178, 187, 188, 193, 194, 196, 198, 199, 201], "choose_colorbrewer_palett": 187, "choose_cubehelix_palett": 187, "chop": 116, "chopper": 128, "chore": 128, "chose": [0, 24, 128, 130, 175, 177, 189], "chosen": [81, 128, 176, 193, 200], "chp": 52, "chracter": 94, "christina": 143, "christma": 132, "chroma": [116, 131, 140], "chromadb": 134, "chronometri": 198, "chunk": [74, 116, 117, 126, 128, 130, 131, 139, 140, 141, 142, 143, 166, 172, 177, 187, 188, 194, 198], "chunk_overlap": [116, 117, 128, 130, 131, 132, 134, 139, 140, 141, 142, 143], "chunk_siz": [116, 117, 128, 130, 131, 132, 134, 139, 140, 141, 142, 143], "chunk_summari": 130, "chunksiz": 166, "church": 128, "churn": 128, "chw": [172, 173], "ci": [169, 188, 190, 196, 197, 198], "ci_band": 198, "ci_bar": 198, "cider": 129, "cinccino": 166, "cioc": 117, "cir": 101, "circl": [74, 82, 90, 95, 101, 128, 146, 176], "circlemodelv0": 171, "circlemodelv1": 171, "circlemodelv2": 171, "circu": 128, "circular": 171, "circum_of_circl": 90, "circumfer": [82, 90, 95], "circumst": [71, 194], "cirqu": 128, "citi": [52, 55, 57, 68, 71, 90, 101, 116, 117, 128, 136, 137, 141, 145, 156, 159, 184, 193], "citizen": [36, 128], "cividi": [187, 190, 193], "cividis_r": 190, "civil": 128, "cl": [61, 106, 128], "cl100k_base": 142, "claim": [128, 130, 184], "clamperl": 166, "clara": 128, "clarifi": [39, 71, 96, 136, 141, 185], "clariti": [130, 135, 136, 141, 177], "clark": [37, 74, 77, 94], "clasess": 15, "class": [9, 10, 14, 15, 16, 17, 18, 19, 24, 34, 35, 36, 40, 48, 49, 51, 60, 61, 62, 63, 69, 75, 76, 78, 79, 83, 85, 88, 89, 92, 93, 94, 96, 98, 104, 106, 116, 117, 125, 128, 131, 133, 135, 136, 148, 149, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 169, 170, 172, 174, 175, 176, 179, 180, 188, 192, 194, 195, 196, 198, 199, 200, 201], "class1": 103, "class2": 103, "class_1": 173, "class_2": 173, "class_dict": [173, 179, 180], "class_embed": 177, "class_idx": 173, "class_nam": [172, 173, 174, 175, 176, 177, 179, 180], "class_names_found": 173, "class_suit": 101, "class_to_idx": [173, 179, 180], "class_token": 177, "class_token_embedding_expand": 177, "class_token_embedding_singl": 177, "class_token_posit": 177, "classic": [116, 129, 141, 173, 208], "classif": [0, 10, 138, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 199, 207], "classifi": [0, 5, 10, 14, 15, 16, 17, 18, 19, 70, 171, 172, 173, 174, 175, 177, 178, 179, 180, 196], "classification_report": 171, "classifici": 171, "classinfo": 103, "classmethod": [59, 64], "classnam": [101, 173], "classon": 101, "classtwo": 101, "clauncher": 166, "claus": 145, "clawitz": 166, "claydol": 166, "clayton": 77, "clean": [0, 39, 68, 71, 78, 83, 89, 117, 120, 128, 133, 134, 135, 136, 137, 142, 143, 160, 161, 179, 207, 208], "clean_text": [39, 68], "cleaned_text": 39, "cleaner": [35, 151], "cleans": 198, "clear": [14, 15, 35, 56, 83, 106, 128, 131, 138, 172, 176, 186, 196], "clearer": [72, 89, 186, 200], "clearest": 128, "clearli": [38, 128, 169], "clefabl": 166, "clefairi": 166, "cleffa": 166, "clever": [128, 137], "clich": 39, "click": [24, 128, 172, 178, 208], "client": [126, 128, 199], "climat": 138, "climax": 138, "climb": 128, "clip": 177, "clipboard": 155, "cllose": 188, "clni": 30, "cloak": 166, "clock": [60, 61, 198], "clone": [128, 175, 176, 177, 178], "close": [4, 36, 70, 71, 84, 98, 103, 117, 126, 128, 130, 132, 133, 134, 137, 138, 142, 143, 155, 170, 171, 172, 173, 176, 177, 178, 186, 189, 192, 193, 195, 196, 197, 198, 199], "closer": [34, 93, 106, 128, 131, 170, 171, 173, 189], "closest": [128, 130, 133, 178], "closest_centroids_id": 10, "closest_index": 130, "closest_indic": 130, "closeup": 128, "closur": [22, 41, 128], "closure_result": 36, "clot": 128, "cloth": [5, 7, 17, 19, 131, 172], "cloud": [117, 135, 136, 141, 143, 169, 174, 177, 178, 198], "cloudi": [5, 128], "clove": 116, "cloyster": 166, "cls_name": 173, "club": [128, 131, 145, 200], "clue": 138, "clung": 117, "clunki": 128, "cluster": [0, 3, 130, 171, 194, 195, 199, 201, 203, 207], "cluster_centers_": 130, "cluster_std": 171, "clustergrid": 202, "clustermap": 202, "cm": [10, 14, 25, 107, 111, 171], "cmap": [16, 17, 18, 19, 25, 107, 111, 171, 172, 187, 190, 193, 199, 201, 202], "cmap_cycl": 190, "cmath": 82, "cmd": [87, 176], "cmo": 143, "cmp": [53, 54, 55], "cmrmap": 190, "cmrmap_r": 190, "cmu": 128, "cn": 187, "cnn": [173, 174, 177, 179, 180], "cnt": 47, "co": [27, 32, 51, 80, 82, 96, 117, 138, 139, 142, 143, 148, 151, 175, 178, 184, 200], "coach": 139, "coars": 128, "coast": [128, 131], "coat": [7, 17, 19, 172, 176], "coatofarm": 117, "coats_of_arm": 117, "cobalion": 166, "code": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 57, 59, 65, 68, 69, 71, 74, 75, 77, 78, 79, 80, 83, 84, 85, 88, 89, 90, 91, 94, 95, 101, 103, 106, 109, 116, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 148, 151, 169, 170, 171, 174, 175, 178, 179, 180, 181, 184, 185, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 200, 205], "codeobject": 89, "coeffici": [27, 148, 186, 188, 199], "coefici": 27, "coerc": [51, 201], "coercion": 51, "coexist": 189, "cofagrigu": 166, "coffe": [132, 196], "cofound": 128, "cognat": 128, "coher": 138, "coin": [130, 173], "coinbas": 142, "col": [117, 150, 155, 159, 162, 164, 166, 172, 186, 188, 190, 192, 194, 195, 197, 198, 200], "col1": [155, 156, 157, 159, 160, 163], "col2": [155, 156, 157, 159, 160, 163], "col3": 155, "col_clust": 202, "col_fil": 165, "col_l": 192, "col_label": [155, 157, 159], "col_label1": 164, "col_label2": 164, "col_level": 165, "col_nam": [159, 175, 176, 177, 178, 197], "col_ord": [188, 197, 200], "col_posit": 155, "col_r1": 150, "col_r2": 150, "col_var": 197, "col_width": [175, 176, 177, 178], "col_wrap": [188, 190, 197, 200], "colab": [23, 24, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 208], "cold": [25, 52, 107, 111, 128, 131], "coldest": 128, "coldest_th": 38, "collabor": [0, 126, 128, 139], "collar": 128, "colleagu": [128, 141], "collect": [0, 7, 24, 34, 47, 48, 55, 56, 66, 69, 70, 80, 92, 96, 102, 128, 130, 134, 135, 136, 141, 153, 163, 171, 173, 175, 177, 192, 193, 200], "collection_nam": 131, "collector": [68, 141], "colleg": [101, 116, 128, 130, 131, 141], "collid": [83, 96], "collison": 128, "colombi": 117, "colombia": 117, "colombian": 117, "colombien": 117, "colombienn": 117, "colon": [43, 52, 53, 54, 55, 70, 74, 128], "coloni": 128, "color": [3, 7, 11, 25, 47, 55, 80, 101, 102, 107, 111, 125, 126, 128, 130, 135, 136, 142, 145, 146, 172, 173, 177, 179, 180, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203], "color_channel": [169, 172, 173, 175, 176, 177, 179, 180], "color_cod": [190, 200], "color_map": [16, 17, 18, 19, 126], "color_palett": [187, 196], "colorbrew": 187, "colormap": [187, 196, 202], "colosseum": 116, "colour": [169, 171, 172, 175, 176, 177, 178, 199, 201], "colour_channel": 169, "column": [8, 12, 14, 15, 16, 17, 18, 19, 31, 47, 57, 68, 116, 117, 145, 148, 149, 150, 151, 152, 166, 169, 172, 175, 177, 178, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202], "column_1": 200, "column_2": 200, "column_current_nam": 162, "column_label": [155, 163], "column_nam": 155, "column_on": 155, "column_posit": 155, "col\u00f4mbia": 117, "com": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 40, 74, 77, 90, 97, 116, 117, 126, 128, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180], "comb": 80, "combe": 166, "combin": [4, 8, 10, 11, 13, 14, 52, 53, 54, 71, 88, 90, 95, 103, 116, 117, 128, 129, 130, 131, 139, 141, 142, 143, 149, 157, 164, 169, 170, 171, 172, 175, 176, 178, 191, 192, 195, 197, 198, 200], "combine_doc": 128, "combine_docu": 128, "combine_prompt": [130, 139, 141, 142, 143], "combine_prompt_templ": [130, 139, 142], "combusken": 166, "come": [24, 35, 38, 48, 49, 51, 52, 57, 71, 74, 85, 87, 96, 104, 106, 116, 117, 125, 128, 130, 131, 134, 137, 138, 142, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 185, 188, 189, 191, 193, 195, 196, 198, 199, 200], "comedi": 134, "comfort": [37, 57, 128, 141, 197], "comic": [128, 145], "comma": [52, 53, 54, 55, 56, 74, 92, 138, 169, 175, 177], "command": [6, 24, 48, 71, 79, 80, 84, 98, 102, 109, 117, 125, 128, 136, 139, 148, 169, 174, 176, 178, 180, 185, 188, 205], "commenc": [197, 200], "comment": [22, 38, 74, 90, 100, 116, 117, 127, 128, 141, 148, 169, 170, 173], "commentari": 170, "commerc": [24, 131], "commerci": [22, 139, 141], "commiss": [139, 198], "commit": [131, 178], "committe": [117, 143], "commod": 128, "common": [1, 7, 8, 28, 37, 53, 56, 59, 64, 68, 70, 80, 101, 102, 106, 116, 117, 125, 128, 130, 134, 135, 136, 141, 142, 150, 155, 157, 170, 171, 172, 173, 174, 175, 177, 178, 185, 187, 188, 192, 194, 196, 198, 199, 200], "commonli": [0, 28, 29, 39, 52, 53, 55, 56, 59, 65, 103, 117, 128, 172, 187, 188, 189, 190, 191, 196, 198], "commonmark": [20, 108, 112], "commun": [116, 117, 128, 130, 133, 138, 139, 169, 177, 178], "communit": 116, "commut": [28, 29], "comonli": 200, "compact": [57, 128], "compani": [52, 53, 55, 77, 103, 117, 128, 131, 135, 136, 142, 143, 146, 155, 156, 169, 174, 175, 177], "companion": [128, 199, 200], "company_grp": 167, "company_info": 103, "company_inform": 139, "company_nam": 103, "company_path": 139, "company_sales_data": 146, "compar": [0, 10, 22, 35, 44, 51, 52, 53, 54, 55, 56, 90, 95, 98, 104, 116, 117, 128, 131, 132, 138, 140, 170, 171, 175, 176, 177, 185, 186, 189, 191, 192, 195, 196], "compare_result": 172, "comparis": [186, 189], "comparison": [52, 89, 131, 140, 145, 156, 159, 170, 172, 176, 178, 194, 196, 199], "comparit": 192, "compat": [38, 93, 104, 106, 151, 156, 169, 173, 174, 177, 178, 195], "compatible_format": 84, "compens": [136, 175, 193], "compet": [141, 156, 197], "competit": [142, 143, 186], "competitor": [128, 130], "compil": [22, 24, 37, 39, 89, 100, 128, 173, 190, 198], "complain": [106, 132], "complement": [39, 95, 185, 193], "complementari": 82, "complet": [47, 48, 49, 52, 54, 56, 68, 80, 81, 84, 96, 103, 125, 127, 128, 135, 136, 142, 143, 146, 152, 167, 173, 176, 178, 192, 196, 198], "completion_token": [135, 136], "completion_with_retri": [128, 138], "complex": [0, 7, 18, 19, 24, 47, 48, 51, 78, 82, 89, 91, 92, 95, 102, 103, 115, 116, 125, 131, 138, 145, 146, 155, 156, 166, 167, 172, 186, 188, 199], "complex128": 152, "complex_number1": 91, "complex_number2": 91, "complexnumb": 102, "compli": 98, "complianc": 139, "complic": [102, 116, 117, 128, 130, 136, 155, 172, 173, 185, 187], "complier": 98, "compon": [11, 12, 13, 14, 15, 16, 17, 31, 32, 74, 101, 117, 128, 171, 177, 178, 187, 188, 197, 198, 200], "compos": [53, 117, 173, 174, 175, 176, 177, 178, 179, 180], "composit": [128, 173], "composur": 145, "compound": [24, 53, 95, 128], "comprehend": [194, 199], "comprehens": [34, 35, 47, 141, 178, 189], "compress": [172, 173, 174, 177, 178, 179, 180], "compress_docu": 131, "compressed_doc": 131, "compression_retriev": 131, "compressor": 131, "compris": [173, 177, 189], "comput": [0, 1, 18, 19, 24, 31, 46, 51, 52, 56, 57, 66, 68, 71, 83, 87, 89, 95, 98, 101, 103, 116, 128, 131, 134, 138, 139, 148, 151, 166, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 183, 186, 189, 192, 193, 194, 195, 196, 198, 200], "computation": [169, 172, 188], "comstock": 128, "con": [169, 173, 176, 178], "concat": [80, 155, 166, 167, 177, 190, 194, 199, 200], "concaten": [53, 54, 57, 80, 94, 101, 104, 148, 155, 169, 172, 177, 194], "conceal": 187, "concentr": [131, 192], "concept": [22, 23, 26, 72, 89, 96, 103, 105, 116, 117, 128, 138, 141, 148, 171, 174, 177, 178, 187, 188, 189, 191, 194, 196, 198, 199, 200, 207], "conceptu": [83, 116, 117, 194, 195, 197, 208], "concern": [141, 143, 177, 178, 186, 194], "concis": [7, 35, 53, 55, 57, 72, 79, 116, 127, 128, 130, 138, 139, 141, 143, 150, 151, 177], "conclud": [36, 128, 138, 196, 198, 200], "conclus": [106, 138, 175, 177], "concret": [177, 198], "concurr": [66, 128], "conda": [24, 148], "condens": [127, 174, 177, 179, 180], "condit": [31, 34, 35, 37, 43, 44, 45, 46, 47, 48, 49, 55, 56, 68, 70, 78, 79, 89, 93, 95, 128, 150, 159, 161, 198, 199, 200], "condition": 128, "condition_inn": 46, "conditon_out": 46, "conduct": [5, 14, 15, 16, 17, 98, 143, 177], "conf_mat": 172, "confer": 128, "confid": [138, 175, 176, 178, 188, 190, 192, 194, 195, 196, 198], "config": [76, 131], "configur": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "confin": 166, "confirm": [87, 117, 171], "confis": 172, "conflict": [138, 155], "confluenc": 117, "confmat": 172, "confmat_tensor": 172, "confus": [35, 46, 83, 90, 106, 117, 128, 169, 171, 178, 186, 187, 193, 194, 196, 199], "confusing_text": 117, "confusionmatrix": [171, 172], "congratul": [72, 87, 115, 138, 177], "conjuct": 198, "conjunct": [52, 94], "conkeldurr": 166, "conn": 126, "connect": [7, 71, 117, 126, 131, 136, 139, 169, 173, 175, 177, 178, 193, 194, 196, 198, 208], "connection_object": 155, "connectionerror": 126, "connectionist": [7, 18, 19], "connectionpool": 126, "conscious": [128, 132], "consequ": 0, "consid": [4, 7, 12, 18, 19, 27, 42, 48, 52, 53, 55, 56, 60, 61, 71, 77, 83, 98, 104, 106, 141, 142, 143, 151, 152, 156, 160, 161, 170, 171, 172, 173, 174, 176, 177, 178, 186, 192, 194, 197, 199, 200], "consider": [10, 14, 24, 57, 128, 173, 176, 178, 188, 194, 198, 207], "consist": [4, 7, 9, 10, 14, 16, 17, 18, 19, 31, 53, 55, 70, 84, 85, 89, 103, 130, 134, 136, 139, 150, 171, 172, 175, 176, 177, 188, 196, 201], "consol": [24, 94, 132, 141, 155], "consolid": 142, "conspicu": 128, "constant": [4, 5, 22, 29, 39, 82, 91, 100, 128, 149, 151, 177, 197, 198], "constantli": [130, 142, 197, 199], "constitut": [7, 18, 19], "constrain": 128, "constraint": [38, 128, 139, 172, 178], "construct": [37, 38, 44, 49, 71, 78, 83, 84, 87, 101, 117, 133, 134, 149, 150, 155, 170, 171, 177, 178], "constructor": [59, 72, 84, 103, 171], "consult": 128, "consum": [133, 139, 141, 198], "consumpt": 178, "contact": [138, 139, 141, 143], "contain": [7, 9, 14, 15, 34, 35, 37, 45, 47, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 68, 69, 71, 79, 80, 83, 84, 90, 91, 93, 94, 96, 101, 102, 117, 128, 131, 136, 137, 141, 143, 146, 152, 155, 156, 160, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 195, 196, 198, 201, 208], "contempl": [128, 138], "contend": 178, "content": [6, 20, 24, 39, 68, 69, 71, 80, 108, 109, 112, 116, 117, 125, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 155, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 205], "content_attr": 140, "contest": 24, "context": [52, 76, 104, 116, 128, 131, 132, 138, 141, 170, 172, 173, 174, 175, 179, 180, 185], "contextmanag": 89, "contextualcompressionretriev": 131, "contigu": [52, 194], "contin": 117, "continu": [1, 8, 22, 35, 42, 50, 71, 88, 89, 102, 103, 126, 128, 132, 138, 142, 169, 171, 175, 176, 177, 178, 179, 189, 193, 196, 197, 200], "contour": [8, 14, 15, 187, 189, 190], "contract": [128, 143], "contractor": 139, "contradict": 128, "contrast": [0, 128, 150, 177], "contrastingli": 0, "contribut": [4, 5, 136, 142, 177, 196, 207], "control": [7, 24, 35, 43, 44, 51, 52, 89, 101, 104, 106, 117, 128, 136, 139, 141, 177, 184, 186, 187, 189, 193, 194, 195, 196, 198, 200, 203], "conttinu": 190, "conv": [172, 173], "conv1d": 172, "conv2d": [173, 174, 175, 179, 180], "conv2dnormactiv": 175, "conv3d": 172, "conv_block_1": [173, 174, 179, 180], "conv_block_2": [173, 174, 179, 180], "conv_lay": 172, "conv_layer_2": 172, "convei": [138, 196, 198], "conveni": [4, 5, 28, 29, 128, 132, 148, 177, 186, 188, 189, 192, 195], "convent": [39, 84, 102, 106, 116, 117, 128, 159, 162, 170, 198], "convention": 102, "conver": 138, "converg": [3, 4, 28, 29, 128, 173, 188], "convers": [22, 52, 89, 100, 117, 128, 137, 138, 143, 187, 192, 195], "conversationbuffermemori": 117, "convert": [6, 7, 16, 17, 18, 19, 31, 38, 51, 52, 53, 56, 57, 59, 60, 61, 64, 68, 70, 74, 82, 91, 93, 94, 95, 98, 109, 117, 128, 130, 132, 135, 136, 141, 142, 148, 149, 152, 155, 156, 157, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 192, 196, 205], "convert_celsius_2_fahrenheit": 74, "convert_dictionary_to_python_object": 102, "convient": 155, "convinc": 128, "convini": [149, 152], "convnet": [152, 172], "convnext": 175, "convnext_smal": [175, 176], "convnext_tini": [175, 176], "convolu": 177, "convolut": [128, 175, 177, 207], "convolv": 172, "conwai": 128, "cook": [94, 116, 128, 129, 173, 176], "cool": [116, 117, 126, 128, 131, 137, 138, 142, 143, 152, 176, 177, 178, 187, 190], "cool_r": 190, "cooler": 35, "coolest": 128, "coolwarm": [25, 107, 111, 190, 191, 194, 195, 196, 199], "coolwarm_r": 190, "coon": 128, "coordin": 104, "cop": 117, "cope": 71, "copi": [24, 52, 56, 69, 80, 101, 128, 130, 142, 151, 152, 155, 159, 160, 161, 162, 164, 165, 169, 170, 172, 173, 177, 178, 193], "copper": [190, 196], "copper_r": 190, "copy2": 178, "copyreg": 84, "copyright": 24, "copysign": [80, 82, 153], "cord": 128, "core": [18, 19, 102, 128, 134, 142, 148, 153, 155, 159, 162, 163, 164, 172, 173, 177, 178, 179, 188, 195, 200], "coremltool": 178, "corg": 53, "cori": [47, 52, 74, 77], "cornel": [128, 195], "corner": [128, 150], "cornic": 128, "corpdev": 131, "corphish": 166, "corpor": 133, "corr": [155, 201], "corr_func": 199, "corrcoef": 148, "corrctli": [16, 17], "correct": [5, 7, 14, 15, 16, 17, 18, 19, 44, 48, 53, 70, 77, 80, 87, 98, 117, 128, 131, 138, 152, 156, 157, 171, 172, 176, 177, 178, 186, 188, 194, 200], "correctli": [0, 4, 14, 15, 16, 17, 18, 19, 47, 72, 116, 171, 172, 176, 177, 178, 199], "correl": [0, 130, 148, 155, 186, 189, 190, 192, 197, 199, 200, 202], "correspond": [0, 7, 11, 31, 32, 55, 65, 70, 72, 80, 90, 96, 98, 102, 106, 116, 133, 150, 189, 192, 195, 196, 197, 198, 200], "correspondingli": 128, "corridor": 128, "corrupt": [11, 13], "corsola": 166, "cosh": [80, 82], "cosin": [27, 80, 82, 148, 177], "cosine_dist": 30, "coss": 30, "cost": [11, 12, 13, 14, 15, 16, 17, 18, 19, 128, 130, 131, 135, 136, 139, 141, 142, 169, 171, 172, 175, 176, 177, 178], "cost_histori": [11, 12, 13], "cottone": 166, "couch": 173, "could": [7, 8, 24, 34, 49, 52, 68, 71, 83, 85, 96, 101, 102, 106, 116, 117, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 151, 152, 159, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 186, 187, 192, 193, 195, 196, 198], "couldn": [106, 128, 131, 169, 173, 175, 176, 177, 178, 190], "council": 143, "counsel": 143, "count": [7, 8, 39, 47, 48, 49, 52, 54, 68, 74, 88, 101, 102, 106, 117, 128, 131, 135, 136, 138, 140, 142, 145, 155, 166, 169, 173, 177, 178, 184, 189, 192, 195, 198, 200, 203], "counter": [47, 48, 102], "counterbalanc": 128, "counterintuit": [35, 131], "counterpart": [35, 52, 82, 169], "counti": 70, "countless": 138, "countplot": [192, 195, 196], "countri": [4, 9, 11, 13, 37, 40, 45, 47, 52, 53, 54, 55, 57, 68, 70, 71, 74, 90, 101, 117, 128, 138, 143, 145, 189, 198], "countries_data": 68, "countries_details_data": 37, "countries_to_look_at": 145, "country_lst_on": 71, "country_lst_two": 71, "coupl": [4, 5, 68, 117, 128, 141, 143, 171, 172, 173, 176, 177, 178, 187, 193, 194, 195, 196], "cours": [23, 24, 52, 74, 80, 88, 95, 128, 131, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 184, 186, 188, 189, 190, 192, 193, 194, 196, 198], "course_nam": 74, "coursera": [1, 3, 4, 5, 7, 9], "cous": [11, 12, 13], "cov": [188, 199], "covari": 188, "cover": [36, 37, 39, 68, 70, 116, 117, 125, 128, 130, 141, 155, 156, 157, 161, 162, 164, 184, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 207], "coverd": 171, "coverg": 188, "covert": 98, "cow": 177, "cowork": 128, "cp1252": 68, "cplai": 24, "cpu": [128, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "cpu_count": [173, 174, 178, 180], "crack": 128, "cradili": 166, "craft": [138, 175, 176, 178, 192], "cram": 199, "cramer": 31, "cranido": 166, "crank": 128, "crap": 128, "crash": [71, 178], "crawdaunt": 166, "crawl": 128, "crazi": [116, 143, 169, 177], "cream": 135, "creat": [0, 8, 11, 17, 19, 22, 24, 25, 34, 36, 37, 38, 39, 47, 48, 51, 59, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 76, 78, 84, 85, 87, 88, 90, 91, 92, 96, 98, 101, 103, 104, 106, 107, 111, 116, 117, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 142, 143, 148, 150, 151, 152, 158, 159, 160, 161, 162, 163, 164, 167, 182, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208], "create_dataload": [174, 175, 176, 177, 178, 180], "create_docu": [116, 117, 130, 141, 142, 143], "create_effnetb0": 176, "create_effnetb2": 176, "create_effnetb2_model": 178, "create_extraction_chain": [136, 141], "create_extraction_chain_pydant": 135, "create_output": 128, "create_structured_output_chain": 116, "create_vit_model": 178, "create_writ": 176, "creation": [68, 116, 138, 149, 171, 173, 174, 177, 178, 207], "creativ": [127, 129, 133, 139, 142, 171, 176], "creator": [106, 173], "credenti": 138, "credit": [24, 117, 128, 171, 185], "cresselia": 166, "cript": 68, "crisi": 141, "crisp": 128, "crispi": 129, "cristiano": 145, "criteria": [0, 36, 37, 143, 178], "criterion": [171, 172, 177], "critic": [71, 130, 198, 199], "crm": [116, 135, 136], "croagunk": 166, "crobat": 166, "croconaw": 166, "crop": 173, "crop_siz": [175, 176, 177, 178], "cross": [7, 78, 128, 170, 171, 198, 200], "crossentropi": 171, "crossentropyloss": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "crowd": 128, "crucial": [131, 138], "cruis": 136, "crush": 128, "crust": 125, "crustl": 166, "cruz": 128, "cryogon": 166, "crystal": 128, "crystallin": 128, "csjfqsk97xz704h7v3fzjqph0000gn": [126, 128], "css": [52, 53, 101], "css4": 187, "csv": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 117, 133, 145, 146, 156, 163, 164, 165, 166, 176, 184, 189, 195, 196, 198, 200], "csv_exampl": 68, "csv_reader": 68, "ctitl": 30, "ctrl": [24, 48, 70], "cu102": 177, "cu113": [170, 173, 175, 176, 178], "cu116": 169, "cu118": [172, 177], "cub": 117, "cubchoo": 166, "cube": [36, 48, 57, 77, 79, 94, 128], "cubehelix": 190, "cubehelix_palett": 187, "cubehelix_r": 190, "cubic": 4, "cubon": 166, "cuda": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "cue": 128, "cuisin": [116, 129], "cultur": [125, 128, 136, 141], "cum": [52, 56], "cumbersom": 188, "cumhuriyeti": 117, "cumsum": [148, 153], "cumul": [0, 148], "cup": [116, 196], "curat": [0, 116, 117, 177, 188, 208], "curios": 128, "curiou": [128, 143, 177, 188], "curious": 200, "curl": 128, "curli": [39, 52, 55, 56, 94], "currect": 117, "currenc": 117, "current": [0, 3, 4, 5, 11, 12, 13, 18, 19, 22, 36, 47, 48, 49, 60, 64, 65, 66, 67, 68, 71, 76, 80, 81, 84, 87, 96, 101, 102, 103, 116, 117, 125, 128, 137, 138, 139, 141, 142, 164, 165, 170, 171, 172, 173, 175, 176, 177, 178, 186, 187, 188, 190, 192, 200], "current_datetime_hostnam": 176, "current_examples_indic": 10, "current_file_nam": 69, "current_palett": 187, "current_salari": 90, "current_tim": 63, "current_year": [74, 77], "current_year_2021": 90, "curri": [57, 101], "curriculum": [170, 172, 178], "cursor": [68, 138, 142], "curtain": 200, "curv": [11, 12, 13, 14, 15, 16, 17, 170, 176, 189, 195], "custom": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 80, 84, 116, 117, 120, 125, 128, 130, 135, 136, 138, 142, 144, 156, 170, 171, 172, 174, 178, 179, 185, 186, 187, 188, 190, 192, 193, 195, 196, 197, 198, 199, 200], "custom_imag": 173, "custom_image_path": [173, 175, 176, 177], "custom_image_pr": 173, "custom_image_pred_class": 173, "custom_image_pred_label": 173, "custom_image_pred_prob": 173, "custom_image_transform": 173, "custom_image_transformed_with_batch_s": 173, "custom_image_uint8": 173, "custom_lin": [25, 107, 111], "customari": 128, "customerror": 72, "customis": [175, 176], "customiz": [139, 175, 178, 185, 198, 200], "cut": [9, 16, 17, 18, 19, 52, 128, 130, 143, 171, 194, 195, 197], "cute": 143, "cyan": 187, "cycl": [128, 187, 190], "cycler": [25, 107, 111], "cylind": [155, 156, 167], "cym": 117, "cyndaquil": 166, "cython": 193, "d": [0, 3, 30, 45, 47, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 68, 71, 74, 90, 91, 92, 94, 102, 103, 104, 117, 126, 128, 130, 131, 135, 136, 137, 138, 139, 141, 143, 146, 149, 152, 155, 160, 161, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 189, 193, 195, 199, 201], "d1": [62, 103], "d2": 62, "d3": 62, "d4": 62, "d75c9779269a": 72, "d7cfabc8": 131, "d9e056c8": 131, "d_model": 177, "da": [30, 117, 196], "daaaat": 39, "daaat": 39, "daat": 39, "dad": [173, 175, 176, 177, 178], "daddi": 132, "dai": [23, 39, 51, 52, 60, 61, 62, 63, 64, 65, 74, 76, 116, 127, 128, 138, 141, 143, 169, 175, 176, 177, 178, 185, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 200], "daili": [135, 136, 188], "dam": 128, "damn": 117, "dan": 128, "danc": [101, 117, 128, 141, 177], "dandelion": 128, "danger": [128, 129, 131], "daniel": [128, 169, 170], "dar": 125, "dark": [116, 128, 166, 172, 185, 187, 190, 196], "dark2": 190, "dark2_r": 190, "darken": 128, "darkest": 128, "darkgrid": [185, 192, 194, 195, 198], "darkrai": 166, "darmanitanstandard": 166, "darmanitanzen": 166, "darumaka": 166, "dash": 191, "dashboard": [192, 193], "dat": [39, 69], "data": [0, 4, 5, 7, 9, 24, 25, 34, 35, 36, 37, 39, 40, 47, 48, 52, 53, 54, 55, 56, 61, 68, 69, 71, 74, 77, 80, 84, 90, 91, 93, 94, 95, 98, 101, 103, 107, 111, 115, 116, 120, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 148, 150, 151, 158, 159, 160, 161, 162, 163, 165, 168, 182, 184, 185, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 208], "data1": [53, 155, 189], "data2": 189, "data_1": [68, 69], "data_10_perc": 176, "data_10_percent_path": 176, "data_20_perc": 176, "data_20_percent_path": [176, 178], "data_analysi": 196, "data_compli": [135, 136], "data_dir": 178, "data_fold": 173, "data_folder_1": 180, "data_folder_2": 180, "data_load": [172, 173], "data_path": [173, 174, 175, 176, 179, 180], "data_point": 191, "data_setup": [175, 176, 177, 178, 179, 180, 182], "data_str": 61, "data_transform": [173, 174, 179, 180], "data_typ": 156, "databas": [64, 68, 116, 117, 125, 155, 178], "datafam": 157, "datafram": [11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 117, 133, 145, 149, 166, 167, 168, 171, 172, 173, 176, 178, 184, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "dataindepend": [126, 141, 143], "dataload": 170, "dataloader_nam": 176, "datalod": 176, "datapoint": [173, 179, 180, 186, 187, 192, 195, 197, 198, 200], "datasci": [52, 75, 95], "dataseri": 155, "dataset": [0, 8, 10, 11, 12, 13, 15, 117, 120, 144, 145, 152, 155, 158, 159, 160, 161, 162, 163, 165, 166, 170, 171, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 200, 201, 202, 203], "datatyp": [22, 52, 54, 82, 92, 93, 100, 155, 156, 170, 173, 175, 200], "date": [11, 61, 63, 116, 117, 126, 155, 175, 176, 184, 188, 190, 198, 200], "date_object": [59, 61], "date_rang": 155, "date_str": [59, 61], "date_tim": 60, "date_time1": 60, "date_time2": 60, "dateclass": 59, "datetim": [22, 62, 67, 80, 135, 136, 155, 176], "datetime64": 153, "datetime_capi": 59, "datetime_london": [59, 63], "datetime_ni": [59, 63], "datetime_object": 59, "datetimeindex": 155, "daughter": 101, "dave": 97, "david": [77, 94, 139], "daviddeutschoxf": 138, "davinci": [116, 117], "dawn": 128, "dazzl": 128, "db": [30, 116, 117], "db_chain": 117, "dbb7": 131, "dbt": 142, "dct": 71, "dd": [59, 61, 62, 176], "dd6f749658a4": 38, "ddot": 31, "de": [27, 39, 117, 128, 145], "dead": [128, 131], "deadlin": 128, "deal": [26, 38, 49, 51, 52, 68, 93, 128, 131, 139, 141, 143, 152, 155, 169, 170, 171, 172, 177, 178, 184, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200], "dealer": 128, "dealt": [184, 188, 192], "dear": 139, "death": 128, "debat": [117, 172, 174, 178], "debug": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 70, 78, 85, 89, 136, 178], "debut": 116, "dec": [24, 37, 60, 61, 65, 87, 139], "decad": [128, 129, 138], "decai": [173, 177], "decemb": [45, 64], "decend": 166, "decent": [128, 192, 195, 196], "decept": 194, "decid": [0, 4, 5, 8, 11, 13, 38, 42, 55, 116, 117, 128, 131, 137, 162, 169, 171, 173, 178, 188, 189, 194, 195, 196, 198, 200], "decim": [38, 52, 60, 61, 84, 90, 91, 92, 94, 95, 149, 176, 178], "decis": [0, 9, 46, 116, 117, 143, 171, 176], "deck": [143, 194, 196, 200], "declar": [36, 37, 48, 52, 53, 68, 70, 72, 74, 75, 76, 80, 92, 95, 96, 101, 102, 106, 149, 188, 196, 198, 199, 200], "decliv": 128, "decod": [52, 70, 128], "decompos": [27, 85], "decomposit": [26, 151], "decor": [22, 36, 41, 106, 198, 200], "decorator_with_paramet": 37, "decreas": [7, 11, 12, 13, 14, 15, 16, 17, 48, 78, 173, 184, 187, 189, 194], "decrement": 104, "dedenn": 166, "dedic": [2, 128, 138, 139, 174, 180, 182, 200], "deduc": [188, 195], "dedupl": 141, "deel": 142, "deem": 132, "deep": [7, 26, 49, 117, 128, 137, 148, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 187, 207], "deepak": [69, 80], "deeper": [59, 117, 170, 171, 177, 184, 188, 190, 195, 197, 198, 200], "deeplak": [116, 130, 131], "deepli": [49, 128, 188], "deerl": 166, "def": [30, 34, 35, 36, 37, 38, 40, 44, 45, 46, 49, 57, 66, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 85, 88, 89, 91, 94, 96, 101, 102, 103, 104, 106, 117, 126, 127, 128, 135, 136, 137, 138, 139, 140, 142, 162, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 188, 190, 192, 193, 199, 200], "default": [6, 8, 10, 16, 17, 18, 19, 36, 59, 76, 78, 82, 84, 87, 94, 102, 103, 109, 116, 117, 128, 131, 132, 143, 145, 148, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 185, 187, 188, 190, 191, 194, 195, 197, 198, 200, 201, 205], "default_ord": 52, "default_tim": [172, 173, 175, 178, 179, 180], "default_valu": 155, "defect": 172, "defens": [142, 166], "defer": 164, "defin": [0, 4, 5, 6, 18, 19, 22, 27, 31, 34, 35, 37, 38, 39, 40, 47, 48, 51, 52, 53, 54, 55, 57, 59, 65, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 101, 103, 104, 109, 116, 117, 128, 130, 131, 134, 137, 152, 155, 159, 163, 170, 171, 172, 173, 175, 176, 177, 178, 185, 186, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205], "definit": [24, 32, 37, 47, 74, 77, 79, 80, 84, 89, 94, 101, 102, 103, 106, 128, 130, 135, 136, 141, 177], "defint": [171, 177, 178], "deflat": 178, "degrad": [106, 175, 176], "degre": [4, 11, 12, 13, 14, 15, 16, 17, 38, 80, 82, 116, 128], "dei": 177, "deino": 166, "del": [36, 52, 53, 54, 55, 88, 102], "delai": [65, 66, 128, 178, 186, 192], "delattr": 102, "delcatti": 166, "deleg": 103, "delelop": 24, "delet": [36, 38, 55, 56, 69, 70, 89, 131, 141, 148, 155, 161, 164, 173], "delete_al": 141, "delete_collect": 131, "deliber": 70, "delibird": 166, "delici": [116, 129, 138, 178], "delight": [128, 138], "delimit": [68, 130, 152, 155, 166], "deliv": [139, 169], "delphox": 166, "delta": 177, "delv": [0, 185, 186, 189, 190], "demand": [35, 129, 130, 185], "demo": [2, 8, 9, 116, 128, 138, 143, 173, 177, 190], "demonstr": [34, 53, 89, 103, 117, 157, 170, 174, 177, 180, 189, 192, 199, 200], "demonym": 117, "demor": 128, "den": 30, "deni": 45, "denim": [187, 193], "denmark": [11, 13, 37, 53, 71, 189], "denomin": 51, "denot": [28, 29, 38, 40, 52, 77, 78, 92, 101, 169], "dens": [131, 177], "densii": 195, "densiti": [8, 131, 186, 187, 189, 190, 191, 193, 195, 198], "deoxysattack": 166, "deoxysdefens": 166, "deoxysnorm": 166, "deoxysspe": 166, "depart": [102, 128, 135, 136, 198], "depat": 102, "depend": [0, 4, 5, 24, 27, 36, 42, 49, 68, 72, 80, 81, 104, 108, 112, 116, 128, 130, 131, 134, 135, 136, 141, 148, 155, 170, 171, 172, 173, 174, 175, 176, 178, 180, 184, 186, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200], "depict": [187, 192, 194, 198], "deploi": [127, 142, 169, 176, 177], "deploy": [177, 183, 207], "deposit": 128, "deprec": [117, 131, 163, 167, 169, 175, 176, 186, 191, 193], "deprecation_addendum": 193, "depress": 128, "depth": [78, 90, 103, 128, 173, 176, 184, 188, 189, 192], "deriv": [4, 5, 7, 71, 72, 101, 103, 106, 117, 128, 131, 198], "derived1": 103, "derived2": 103, "derivedclass": [101, 103], "desc": 172, "descend": [68, 74, 155], "descent": [7, 18, 19, 128, 170, 171, 172, 173, 177, 208], "describ": [4, 5, 7, 14, 15, 16, 17, 31, 74, 77, 80, 89, 95, 101, 116, 117, 128, 130, 131, 136, 141, 143, 155, 169, 170, 171, 172, 177, 178, 184, 189, 194, 196, 197, 198, 199, 200], "describejob": [135, 136], "descript": [49, 52, 53, 54, 55, 56, 68, 74, 80, 81, 82, 84, 101, 102, 116, 117, 125, 126, 128, 130, 131, 133, 135, 136, 137, 139, 148, 155, 162, 169, 176, 177, 178, 184, 194, 198], "descriptor": [68, 84], "deseri": 170, "deserv": 195, "desgin": 91, "design": [24, 37, 116, 117, 128, 133, 136, 139, 155, 171, 176, 177, 178, 188, 196, 197, 208], "desir": [37, 49, 53, 116, 128, 138, 152, 169, 172, 173, 177, 178, 200, 207], "desk": [24, 128], "desktop": [24, 69, 128], "desper": [128, 142], "despin": [185, 195, 196, 197, 199, 200], "despit": [116, 128, 141, 173, 177, 178], "destin": [137, 176, 177, 178], "destination_path": 137, "destini": 128, "destroi": [35, 75, 102, 128, 131, 141], "destruct": [102, 128], "destructur": 71, "det": [31, 151], "detach": [68, 170, 177], "detail": [0, 6, 35, 38, 65, 70, 77, 89, 94, 101, 102, 103, 109, 116, 128, 137, 141, 150, 155, 157, 159, 164, 165, 169, 176, 177, 178, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198, 200, 204, 205], "detect": [0, 2, 4, 5, 18, 19, 70, 141, 150, 172, 178, 187, 207], "determin": [0, 52, 56, 125, 128, 131, 160, 161, 165, 188, 189, 190, 192, 194, 196, 198, 199, 200], "determinist": [81, 117], "detour": 116, "deu": 117, "dev": [174, 176], "dev20220620": [175, 176], "dev20220824": 178, "devcon": 169, "develop": [10, 14, 22, 24, 39, 45, 72, 83, 90, 98, 101, 106, 116, 117, 118, 128, 130, 131, 134, 135, 136, 138, 139, 142, 169, 174, 175, 176, 178], "deviat": [1, 8, 74, 101, 148, 152, 155, 175, 177, 194, 196], "devic": [94, 98, 135, 136, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180], "device_count": 169, "devop": [139, 178], "dewgong": 166, "dewott": 166, "df": [117, 133, 145, 146, 155, 159, 162, 163, 164, 165, 166, 167, 178, 184, 186, 188, 190, 193, 195, 198, 200, 201], "df1": [155, 189], "df2": [155, 189], "df6ce7ede1dc": 70, "df_compani": 139, "df_xlsx": 166, "dfca0b041b3d": 72, "dharmesh": 138, "dhl": 52, "di": [39, 47, 116, 117, 128], "diag": [153, 199], "diag_ax": 199, "diag_indic": 199, "diag_kind": [190, 199], "diag_kw": 190, "diag_sharei": 199, "diagnol": 171, "diagnost": 117, "diagon": [31, 172, 190, 199], "diagram": [96, 158, 162, 165, 177, 191], "dial": 127, "dialect": [128, 134], "dialga": 166, "dialogu": [47, 138], "diamet": [82, 128], "dianci": 166, "dianciemega": 166, "dice": [116, 129], "dichotom": [5, 14, 15, 16, 17], "dict": [24, 40, 56, 68, 71, 74, 80, 91, 92, 93, 102, 117, 128, 140, 145, 157, 158, 159, 160, 161, 162, 164, 165, 167, 170, 172, 173, 174, 176, 178, 179, 180, 186, 195, 200, 202], "dict1": [47, 55], "dict2": 47, "dict_1": 102, "dict_item": 55, "dict_kei": [55, 173], "dict_valu": 55, "dictat": 169, "diction": 138, "dictionair": 178, "dictionari": [22, 24, 37, 38, 40, 45, 52, 53, 54, 56, 57, 58, 70, 74, 84, 89, 91, 93, 95, 102, 117, 135, 136, 138, 140, 142, 155, 157, 162, 167, 170, 172, 173, 174, 176, 177, 178, 179, 180, 185, 187, 200], "dictionaryliter": 89, "did": [35, 37, 43, 70, 71, 75, 94, 95, 101, 103, 116, 128, 130, 131, 134, 141, 142, 143, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 198], "didn": [52, 101, 104, 116, 117, 128, 131, 132, 169, 171, 172, 173, 178, 185, 194, 195, 200], "die": [131, 200], "diet": [197, 198], "diff": [11, 13, 63], "differ": [7, 8, 11, 18, 19, 36, 37, 39, 40, 42, 47, 48, 49, 51, 52, 53, 54, 55, 60, 64, 65, 66, 68, 69, 70, 71, 74, 75, 77, 79, 80, 83, 85, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 108, 112, 116, 117, 128, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 150, 151, 155, 156, 157, 160, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208], "difference_upd": 56, "differenti": [88, 138], "differnt": 175, "difficult": [98, 117, 128, 185, 192, 193, 194, 195, 196], "difficulti": [128, 130, 169], "dig": [59, 169, 198, 200], "digest": 117, "diggersbi": 166, "digit": [5, 7, 16, 17, 18, 19, 28, 29, 47, 52, 61, 80, 84, 88, 90, 95, 101, 135, 136, 152, 172, 198], "digit_label": [16, 17, 18, 19], "digit_pixel": [16, 17, 18, 19], "diglett": 166, "dilat": [172, 173, 179, 180], "dilig": [128, 129], "dim": [169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180], "dim0": 169, "dim1": 169, "dim_feedforward": 177, "dimenion": 169, "dimens": [130, 148, 149, 150, 151, 155, 169, 170, 171, 172, 173, 175, 177, 178, 188, 199, 200], "dimension": [0, 3, 26, 47, 57, 130, 148, 149, 155, 157, 169, 172, 173, 175, 177, 188, 199, 200, 207], "diner": 128, "dinner": [74, 128, 188, 191, 192, 193, 194, 195, 196, 200], "dip": 129, "diploma": 128, "dir": [39, 59, 70, 175, 176], "dir_nam": 69, "dir_path": 173, "dir_with_log": 176, "direct": [4, 5, 6, 9, 17, 19, 20, 32, 39, 48, 52, 57, 59, 60, 61, 65, 79, 101, 109, 116, 126, 131, 169, 175, 177, 196, 205], "direction": 130, "directli": [24, 35, 53, 72, 74, 80, 83, 96, 98, 101, 102, 117, 131, 141, 151, 171, 173, 174, 177, 178, 180, 185, 191, 197, 198, 208], "directori": [22, 68, 70, 73, 80, 83, 94, 117, 139, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182], "directory_nam": 80, "directoryload": [131, 134, 140], "dirichlet": 198, "dirnam": [117, 173], "dirpath": [117, 173], "dirti": 117, "disadvantag": [98, 143, 170, 195], "disagre": 51, "disallowed_speci": 117, "disappear": 128, "disappoint": 128, "disast": 130, "disastr": 128, "disc": 116, "discard": 56, "discern": 173, "disclosur": 200, "disconcertingli": 128, "disconnect": 71, "discontinu": 27, "discord": [116, 117], "discourag": [106, 128], "discours": 200, "discov": [0, 128, 130, 131, 134, 169, 170, 171], "discoverd": 170, "discovered": 128, "discoveri": 116, "discret": [132, 187, 188, 195, 196, 198, 200], "discrimin": [10, 14], "discuss": [39, 44, 51, 52, 54, 80, 85, 89, 94, 103, 130, 138, 139, 141, 143, 155, 156, 157, 158, 159, 164, 165, 171, 173, 174, 175, 177, 178, 179, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208], "diseas": 171, "disengag": 198, "dish": [116, 129], "disjoint": 56, "disk": [68, 98, 127, 128, 170, 172], "dislik": [117, 128], "dismai": 128, "disp": 169, "dispar": 198, "dispers": [184, 194], "displai": [1, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 45, 46, 47, 48, 49, 52, 59, 69, 71, 72, 84, 87, 91, 95, 98, 102, 103, 109, 117, 141, 143, 145, 152, 158, 178, 185, 187, 189, 192, 193, 194, 195, 196, 198, 199, 200, 201, 205], "display_random_imag": 173, "display_shap": 173, "displaystyl": [27, 30], "displot": 191, "dispos": 198, "dispsid": 103, "disput": [128, 130], "disregard": [49, 172], "disrupt": 71, "dissatisfi": 128, "dissert": 128, "dissimilarity__util": 30, "dist": [80, 172, 203], "distac": 47, "distanc": [39, 47, 95, 106, 130, 134, 194, 195], "distant": 128, "distil": [130, 131], "distinct": [0, 117, 128, 150, 198], "distinguish": [7, 10, 14, 15, 18, 19, 56, 68, 106, 134, 187], "distort": 198, "distplot": [186, 199], "distract": [128, 131], "distribut": [15, 22, 81, 101, 128, 130, 145, 148, 149, 152, 175, 176, 177, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200], "district": 128, "distriut": 194, "ditribut": 189, "ditto": [131, 166], "div": [135, 136], "div0ssutgadkwstr": 80, "dive": [117, 128, 137, 170, 184, 188, 194, 196, 197, 200], "diverg": 187, "divers": [130, 173, 178], "divid": [37, 42, 48, 53, 59, 70, 80, 82, 83, 85, 90, 94, 95, 148, 151, 153, 155, 156, 159, 171, 172, 173, 178, 192, 194, 196, 197, 198], "dividend": [77, 117], "divis": [31, 32, 37, 42, 48, 49, 57, 70, 71, 74, 90, 95, 104, 148, 151, 169, 177, 178], "divisbl": 177, "divisor": 77, "divorc": 128, "django": [24, 52], "dll": 80, "dm": [135, 136, 143], "do": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 34, 35, 38, 39, 42, 43, 44, 47, 48, 49, 52, 53, 54, 56, 57, 63, 70, 71, 72, 74, 77, 80, 81, 82, 84, 85, 89, 90, 92, 94, 95, 96, 98, 101, 102, 103, 104, 106, 107, 108, 111, 112, 115, 116, 117, 126, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208], "do_someth": 77, "doattempt": 128, "doc": [38, 74, 84, 116, 117, 126, 128, 130, 131, 137, 139, 140, 141, 142, 151, 170, 172], "doc_id": 131, "doc_summari": 128, "docker": 136, "docsearch": [117, 132, 134, 141], "docstor": [117, 131], "docstr": [22, 52, 86, 102, 174, 179, 180], "doctor": 39, "document": [6, 25, 68, 69, 74, 84, 89, 101, 102, 107, 109, 111, 112, 125, 129, 130, 134, 137, 139, 140, 141, 142, 143, 149, 150, 151, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185, 188, 194, 204, 205], "document_compressor": 131, "document_content_descript": 131, "document_load": [116, 117, 128, 130, 131, 132, 134, 139, 140, 142], "documentari": 128, "dodg": [167, 192, 193, 194, 195, 196, 197, 198], "dodrio": 166, "doduo": 166, "doe": [4, 11, 13, 35, 37, 38, 39, 43, 47, 48, 49, 52, 53, 54, 56, 57, 61, 68, 70, 71, 74, 75, 77, 80, 82, 84, 89, 90, 92, 94, 95, 96, 98, 101, 102, 103, 104, 116, 117, 128, 130, 131, 137, 139, 141, 142, 143, 149, 151, 155, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 175, 176, 177, 178, 187, 188, 190, 192, 193, 195, 200], "does_exist": 53, "doesn": [10, 38, 45, 47, 48, 49, 52, 54, 55, 61, 80, 93, 102, 128, 130, 131, 135, 136, 137, 142, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 193, 195, 196, 200], "dog": [54, 103, 128, 129, 136, 143, 171, 172, 175, 177, 178], "dohc": [155, 156, 167], "dollar": [25, 107, 111, 128, 143, 145, 146, 176], "domain": [0, 24, 126, 128, 141, 171, 173, 175, 186, 188, 193, 196, 198, 200], "dominantli": 188, "don": [7, 10, 38, 48, 49, 53, 57, 68, 74, 76, 80, 83, 90, 101, 103, 106, 116, 117, 127, 128, 130, 131, 132, 134, 137, 138, 139, 141, 142, 143, 155, 162, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 189, 191, 193, 194, 195, 196, 198, 199, 200], "donald": 68, "done": [24, 31, 32, 35, 37, 38, 43, 44, 47, 48, 49, 52, 57, 68, 83, 87, 93, 94, 98, 103, 106, 128, 130, 131, 132, 137, 138, 139, 143, 156, 160, 163, 169, 170, 171, 172, 173, 176, 177, 178, 182, 185, 186, 187, 190, 192, 193, 195, 196, 197, 198, 199, 200], "dong": [4, 5], "donotpai": 141, "donphan": 166, "door": [0, 102, 128], "doshi": 139, "dot": [23, 26, 28, 31, 80, 83, 101, 102, 145, 146, 148, 151, 169, 170, 171, 173, 178, 189, 192, 193, 194, 195, 196, 198, 208], "dotenv": [116, 117, 127, 129, 130, 131, 132, 135, 137, 138, 140, 141, 142], "doubl": [40, 52, 74, 79, 89, 91, 92, 95, 101, 102, 103, 104, 116, 128, 138, 141, 169, 175, 176, 177, 178, 185], "doublad": 166, "doubt": [128, 131, 141, 172, 189, 192, 193, 194], "down": [4, 5, 38, 49, 78, 80, 95, 117, 128, 131, 135, 136, 141, 143, 170, 171, 172, 173, 176, 177, 178, 179, 184, 185, 187, 189, 199, 200], "download": [24, 80, 117, 134, 145, 146, 152, 171, 172, 173, 174, 175, 177, 179, 180, 182], "download_data": [176, 177, 178], "downsid": [173, 196], "downtown": 55, "dozen": [172, 176], "dpi": [145, 146], "dr": [68, 80, 101, 116], "draft": [126, 128, 195, 196, 197, 198, 199, 200], "drag": [128, 192], "dragalg": 166, "dragon": 166, "dragonair": 166, "dragonit": 166, "drain": 116, "dramat": [169, 178], "drapion": 166, "dratini": 166, "drave": 128, "draw": [8, 16, 17, 128, 169, 171, 186, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 200], "draw_fram": 196, "draw_stripplot": 193, "drawn": [106, 128, 190, 193, 194, 198, 200], "dream": 128, "dress": [7, 17, 19, 129, 172], "drifblim": 166, "drifloon": 166, "drift": 128, "drilbur": 166, "drill": [187, 188], "drink": 91, "drive": [0, 44, 116, 128, 136, 138, 142, 169, 175, 177, 208], "driven": [128, 142], "driver": [77, 116, 128, 169, 178, 198], "drop": [9, 11, 13, 16, 17, 18, 19, 35, 128, 138, 142, 143, 164, 165, 166, 187, 188, 200], "drop_dupl": [161, 165], "drope": 159, "droplet": 128, "dropna": [155, 165, 186, 188, 190, 199, 200], "dropoff_datetim": 198, "dropoff_latitud": 198, "dropoff_longitud": 198, "dropout": [173, 175, 176, 177, 178], "dropout1": 177, "dropout2": 177, "drowze": 166, "druddigon": 166, "dry": [74, 101, 128], "dst": 178, "dt": [27, 30], "dt_object": 64, "dt_object1": 61, "dt_object2": 61, "dt_string": [61, 62], "dtype": [18, 19, 145, 148, 149, 151, 152, 155, 156, 157, 163, 164, 166, 167, 169, 170, 171, 173, 178, 189, 190, 199], "duc": 39, "ducklett": 166, "due": [27, 38, 40, 49, 51, 53, 68, 71, 96, 98, 117, 128, 129, 130, 131, 141, 151, 170, 172, 173, 176, 177, 178, 180, 192], "dugtrio": 166, "duh": 138, "dull": [128, 185], "dummi": [137, 180, 189, 196, 200], "dump": [68, 84, 126, 135, 136, 137], "dumpstack": 69, "dunsparc": 166, "duo": 116, "duomo": 128, "duosion": 166, "duplic": [47, 56, 80, 92, 96, 131, 135, 136, 155, 159, 165], "durant": 166, "durat": 198, "dure": [24, 57, 70, 71, 77, 79, 80, 98, 106, 128, 131, 141, 142, 170, 171, 173, 175, 176, 177, 178, 185, 188, 192, 197], "dusclop": 166, "duski": 187, "dusknoir": 166, "duskul": 166, "dust": 128, "dusti": 187, "dustox": 166, "dutch": 68, "duti": [125, 184], "dwebbl": 166, "dwell": 128, "dweller": 128, "dylan": 128, "dynam": [22, 92, 96, 98, 116, 126, 130, 141, 143], "dynamicfeatur": 89, "dystopia": [11, 13], "e": [3, 4, 5, 7, 11, 12, 13, 23, 24, 30, 35, 39, 47, 48, 49, 51, 52, 53, 54, 55, 56, 68, 69, 71, 75, 76, 80, 82, 87, 90, 91, 93, 94, 95, 101, 103, 116, 117, 126, 128, 132, 137, 146, 149, 151, 152, 155, 156, 157, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208], "e0e0e0": 145, "e15e5601926f": 106, "e2e604bf92d": 70, "e32e417070a1": 92, "e53a": 131, "e8fb9ed4ccdc": 198, "each": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 35, 37, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 71, 74, 78, 79, 80, 84, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 106, 117, 126, 128, 129, 130, 131, 132, 138, 139, 140, 141, 143, 148, 149, 150, 151, 155, 156, 157, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 200, 201, 207], "eachoth": 177, "ear": [128, 131], "earli": [23, 128, 131, 173], "earlier": [131, 169, 170, 176, 178, 184, 185, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "earliest": 141, "earn": [95, 117, 128, 141], "earnest": 128, "earplug": 131, "earth": [74, 128], "eas": [128, 178], "easi": [22, 24, 34, 47, 48, 52, 68, 83, 85, 87, 98, 101, 116, 117, 128, 131, 132, 138, 141, 142, 143, 155, 156, 169, 174, 176, 177, 178, 185, 190, 192, 194, 196, 198, 200, 208], "easier": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 34, 38, 39, 57, 78, 83, 88, 94, 98, 106, 116, 117, 130, 139, 143, 157, 171, 172, 174, 177, 192, 197, 199], "easiest": [128, 175, 178], "easili": [28, 29, 35, 59, 64, 84, 90, 103, 116, 128, 139, 141, 142, 159, 173, 176, 177, 178, 185, 189, 192, 200, 208], "east": 128, "east1": 132, "eastern": 128, "eat": [87, 103, 116, 128, 131, 138, 175, 177, 178], "eaten": [128, 131], "eaxh": 11, "eb3d2b": 80, "ec3d": 131, "ecc": 169, "eccentr": 131, "ecommerc": [128, 136], "econom": 138, "economi": [4, 11, 13], "ecosystem": [20, 108, 112, 142, 178], "ecu": 117, "ed": 47, "ed7c4dc05b92": 75, "edg": [0, 7, 128, 134, 135, 136, 146, 178, 186, 195, 196, 199], "edgecolor": [186, 192, 193, 196, 199, 200], "edit": [116, 128, 130, 131, 138, 177, 178], "edit_financial_forecast": 137, "editor": [45, 128, 185], "edu": 9, "educ": [39, 133, 138, 176, 177, 192, 198], "educa": 39, "education_level": 195, "edward": 199, "ee": 39, "ee4e8ee8c904": 70, "ee80ca1a52c8": 91, "eec": 139, "eelektrik": 166, "eelektross": 166, "eeve": 166, "effect": [52, 68, 76, 80, 101, 128, 137, 139, 172, 173, 175, 177, 178, 187, 189, 192, 196], "effici": [38, 47, 48, 51, 68, 74, 80, 83, 96, 98, 101, 139, 148, 155, 157, 172, 186, 193, 198], "efficientnet": 175, "efficientnet_b0": [175, 176], "efficientnet_b0_weight": [175, 176], "efficientnet_b1": 175, "efficientnet_b2": [175, 176, 178], "efficientnet_b2_weight": [176, 178], "efficientnet_b7": 175, "efficientnet_bx": 175, "efficientnetb0": 176, "efficientnetb2": [176, 178], "effnetb0": 176, "effnetb2": [176, 177], "effnetb2_average_time_per_pr": 178, "effnetb2_food101": 178, "effnetb2_food101_model_path": 178, "effnetb2_food101_result": 178, "effnetb2_foodvision_mini_model_destin": 178, "effnetb2_foodvision_mini_model_path": 178, "effnetb2_model_s": 176, "effnetb2_result": 178, "effnetb2_stat": 178, "effnetb2_test_pred_df": 178, "effnetb2_test_pred_dict": 178, "effnetb2_total_param": 178, "effnetb2_transform": 178, "effnetb2_weight": [176, 178], "effort": [128, 177, 178, 199], "eg": [37, 39, 90, 98], "egg": [80, 116, 129], "egregi": 128, "eh": 81, "eigenvalu": [26, 151], "eigenvector": 26, "eight": [128, 141, 167, 176], "eighti": 39, "einstein": 39, "either": [39, 42, 43, 45, 65, 71, 72, 84, 89, 95, 98, 103, 116, 125, 128, 131, 138, 155, 156, 162, 169, 170, 171, 172, 173, 174, 179, 180, 184, 185, 187, 188, 191, 192, 194, 195, 196, 198, 199, 200], "ekan": 166, "el": 52, "elabor": [84, 142, 177], "elad": 142, "eladgil": 142, "elaps": 126, "elast": 128, "elasticsearch": 136, "eldest": 128, "electabuzz": 166, "electivir": 166, "electr": [138, 166], "electrik": 166, "electrod": 166, "eleg": [22, 34, 35, 36, 55, 57, 78, 128], "elegantli": 34, "elekid": 166, "element": [27, 28, 29, 31, 34, 47, 48, 51, 52, 65, 69, 74, 79, 80, 81, 87, 92, 93, 94, 95, 97, 102, 149, 150, 151, 152, 155, 157, 158, 169, 171, 176, 177, 178, 185, 196, 198, 200], "elementari": 194, "elementtre": 68, "elementwis": [31, 32, 151, 152], "elementwise_affin": 177, "elemnet": [55, 92], "elemtnt": 92, "elev": 128, "elgyem": 166, "elif": [14, 22, 36, 42, 46, 49, 50, 72, 88, 128, 169], "elig": 117, "elimin": [49, 92, 106], "elisabeth": 141, "eliza": 143, "elizabeth": 141, "ell": 177, "elliot": [116, 184], "ellipsi": 89, "ello": 52, "elonmusk": 138, "els": [16, 17, 18, 19, 22, 34, 36, 39, 42, 43, 46, 50, 52, 53, 55, 57, 68, 74, 77, 78, 80, 85, 88, 91, 94, 101, 102, 116, 117, 126, 128, 133, 135, 136, 138, 141, 142, 143, 145, 156, 159, 161, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 190, 193, 196, 198, 199], "elsewher": [128, 131, 141, 169, 170], "elucid": 196, "emac": 128, "email": [5, 14, 15, 16, 17, 24, 39, 40, 68, 97, 120, 126, 135, 136, 138, 144], "email_exchanges_big": 68, "emath": 153, "emb": [25, 107, 111, 117, 130, 131, 132, 178], "embark": [194, 196], "embark_town": [194, 196], "embed": [51, 84, 128, 130, 131, 134, 140, 141, 143], "embed_dim": 177, "embed_docu": [116, 130], "embed_queri": 116, "embedd": [116, 177], "embedding_dim": 177, "embedding_dimens": 177, "embedding_dropout": 177, "embedding_funct": 131, "embedding_layer_input_shap": 177, "embedding_layer_output_shap": 177, "embedding_list": 116, "embedding_s": 177, "emboar": 166, "embodi": 128, "embosom": 128, "emerg": 130, "emili": 101, "emmett": 128, "emoji": [117, 127, 138], "emolga": 166, "emot": [128, 138, 142], "emp": [39, 102, 103], "emp_data": 77, "emp_id": [55, 77], "emp_nam": 55, "emphas": [116, 128, 131, 138, 143], "emphasi": [102, 116, 138, 178, 197, 200], "employe": [101, 102, 103, 128, 131, 136, 143, 198], "employee_info": 103, "empoleon": 166, "empow": [0, 39, 52, 187], "empower": 138, "empoye": 77, "empti": [11, 38, 39, 47, 48, 49, 52, 53, 54, 55, 68, 69, 74, 76, 81, 83, 101, 102, 128, 130, 148, 151, 155, 156, 161, 163, 170, 173, 174, 176, 178, 179, 180, 191], "empty_lik": 151, "emul": 178, "en": [131, 134, 171, 191], "enabl": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 103, 117, 135, 136, 137, 139, 143, 169, 170, 173, 174, 178, 199, 207], "enable_limit": 131, "encapsul": 36, "enclos": [36, 47, 48, 52, 54, 70, 87, 92, 130, 193], "encod": [31, 52, 68, 70, 71, 117, 136, 142, 172, 184, 200, 201], "encoder_lay": 177, "encoder_or_encoder_class": 136, "encompass": [128, 130], "encount": [70, 71, 128, 151, 171, 198], "encourag": [116, 128, 130, 141, 177, 178, 195], "encrypt": [81, 128], "end": [25, 27, 28, 29, 31, 32, 34, 35, 43, 47, 48, 49, 52, 54, 61, 66, 68, 70, 71, 74, 78, 84, 89, 92, 94, 98, 107, 111, 117, 125, 128, 130, 131, 136, 138, 139, 141, 142, 143, 148, 152, 155, 156, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 187, 188, 189, 190, 193, 196, 198, 199, 200, 208], "end_dim": [172, 173, 177, 179, 180], "end_index": 24, "end_tim": [173, 175, 178, 179, 180], "endindex": 150, "endless": [0, 195], "endors": 141, "endpoint": [117, 152], "endswith": [52, 174, 179, 180], "endur": 128, "energet": 128, "energi": [128, 130, 133], "enforc": [89, 93, 178], "eng": 117, "engag": [128, 138, 198], "engin": [24, 39, 102, 116, 117, 125, 128, 132, 136, 138, 139, 155, 156, 166, 167, 174, 175, 176, 177, 178, 180, 182, 198], "engine_api_resourc": 128, "engine_rotation_spe": 90, "england": [68, 70, 71, 101, 128, 145], "english": [52, 55, 68, 91, 98, 128, 130, 185], "enhanc": [172, 186, 192, 193, 200], "enjoi": [52, 80, 116, 117, 128, 129, 138, 141, 143, 190, 195], "enlarg": 185, "enough": [44, 53, 54, 90, 116, 126, 128, 131, 134, 171, 172, 173, 176, 177, 178, 184, 186, 192, 194, 195, 196, 197, 198, 199], "enrol": [141, 196], "enron": 131, "ensembl": [172, 207, 208], "ensemble_doc": 131, "ensemble_retriev": 131, "ensembleretriev": 131, "ensur": [57, 68, 89, 103, 143, 170, 173, 175, 176, 177, 178, 187, 190, 192, 196, 198, 199], "ensure_ascii": 68, "entangl": 128, "entei": 166, "enter": [43, 44, 45, 46, 48, 49, 71, 72, 74, 85, 89, 94, 95, 103, 116, 117, 126, 128, 139, 142, 143, 198, 200], "enterpris": [24, 128, 177], "entertain": [131, 133], "enthusiast": [128, 138], "entir": [34, 35, 52, 53, 54, 55, 68, 98, 103, 128, 131, 132, 141, 158, 170, 177, 178, 191, 195, 196, 198, 200], "entireti": 200, "entiti": [32, 88, 101, 135], "entranc": 128, "entrepreneur": [139, 142], "entri": [18, 19, 45, 47, 55, 71, 128, 138, 155, 156, 163, 173], "entropi": [170, 171], "enuemer": 47, "enum": [116, 135, 137, 141, 175], "enumer": [10, 11, 14, 15, 16, 17, 30, 47, 52, 56, 130, 172, 173, 174, 177, 179, 180, 193, 196], "env": [24, 116, 132, 173, 178], "enviou": 128, "environ": [23, 80, 98, 116, 117, 125, 126, 128, 132, 135, 136, 137, 138, 141, 142, 143, 173, 174, 176, 178, 188, 200], "envis": 142, "eof": 68, "eoferror": 70, "ep": [153, 177], "epar": 68, "epic": 178, "episod": [138, 141], "epitom": 199, "epoch": [65, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "epoch_count": 170, "epsilon": [8, 18, 19], "epub": 116, "eq": [80, 131, 171, 177], "equal": [27, 31, 32, 34, 43, 44, 45, 46, 47, 48, 49, 51, 53, 77, 78, 80, 82, 87, 90, 91, 95, 104, 116, 117, 128, 130, 146, 148, 151, 155, 162, 169, 171, 172, 173, 177, 178, 191, 194, 196, 198], "equal1": 80, "equat": [5, 7, 12, 31, 74, 143, 171, 186], "equip": [152, 189], "equival": [35, 37, 38, 47, 49, 52, 53, 55, 57, 59, 60, 61, 68, 79, 91, 95, 102, 103, 106, 128, 150, 151, 169, 171, 175, 176, 177], "er": [39, 128], "era": [128, 200], "eras": [68, 173], "erf": [80, 82], "erfc": [80, 82], "eric": 77, "erp": 24, "err": 126, "err_kw": 198, "err_palett": 198, "err_styl": 198, "errcolor": 196, "errno": 70, "error": [0, 7, 24, 34, 37, 38, 49, 51, 52, 55, 56, 68, 71, 72, 74, 75, 77, 82, 88, 89, 92, 93, 94, 98, 101, 102, 103, 104, 117, 128, 130, 135, 136, 138, 142, 151, 156, 164, 170, 171, 172, 173, 174, 175, 177, 178, 186, 187, 196, 197], "errstat": 153, "errwidth": 196, "escap": [25, 69, 107, 111, 141], "escavali": 166, "esp": 117, "especi": [26, 98, 106, 128, 148, 169, 171, 178], "espeon": 166, "espurr": 166, "esqu": 117, "essai": [116, 117, 128, 130, 131, 132, 134, 176], "essenc": [134, 169, 170, 172, 173, 175, 176, 177, 178, 180], "essenti": [23, 103, 148, 152, 171, 172, 173, 174, 175, 177, 196], "essesnti": 115, "est": 117, "establish": [142, 178, 190, 198], "estat": [128, 133, 141], "estim": [4, 8, 12, 128, 143, 170, 173, 175, 186, 188, 189, 190, 191, 192, 195, 196, 197, 198], "estonia": 71, "et": [68, 177], "eta": 172, "etc": [4, 7, 16, 17, 18, 19, 24, 25, 34, 35, 47, 48, 49, 51, 52, 54, 55, 56, 59, 60, 61, 65, 74, 79, 80, 88, 89, 90, 93, 95, 96, 98, 101, 102, 107, 111, 116, 117, 127, 128, 135, 136, 138, 148, 150, 151, 152, 155, 163, 166, 167, 170, 177, 184, 189, 190, 193, 197, 198, 208], "ethan": [57, 74, 77, 94], "ethic": 207, "etr": 128, "etre": 68, "eu": 172, "eucl": 30, "euclid": 134, "euclidean": [32, 82, 95], "euclidean_dist": 30, "eugen": 136, "eur": 117, "euro": 117, "europ": [59, 63, 117], "eva": 138, "eval": [24, 74, 94, 117, 137, 170, 171, 172, 173, 174, 175, 178, 179, 180], "eval_chain": 117, "eval_model": 172, "evalu": [42, 43, 44, 45, 48, 49, 68, 79, 94, 95, 98, 142, 143, 169, 170, 176, 178], "evalut": [172, 178], "evan": 184, "even": [22, 24, 35, 36, 37, 38, 42, 44, 45, 47, 48, 49, 51, 52, 53, 57, 68, 71, 74, 75, 77, 78, 79, 84, 89, 90, 93, 94, 95, 98, 102, 103, 106, 116, 128, 130, 131, 135, 136, 138, 139, 141, 143, 151, 152, 156, 157, 160, 161, 169, 170, 171, 172, 173, 175, 176, 177, 178, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "even_list": 79, "even_no": 79, "even_num": 74, "even_numb": [37, 47, 57, 79], "even_odd": 74, "evenli": [128, 148, 152], "evenodd": 77, "evens_and_odd": 74, "event": [8, 71, 117, 125, 138, 139, 141, 142], "eventu": [128, 177, 197, 199], "ever": [39, 47, 52, 96, 127, 128, 132, 135, 136, 141, 169, 170, 190, 193, 200], "everest": 130, "everi": [0, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 24, 44, 47, 49, 51, 52, 56, 57, 61, 71, 78, 80, 92, 96, 98, 101, 102, 103, 104, 106, 117, 128, 135, 136, 138, 141, 149, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 187, 188, 189, 191, 193, 194, 198, 199, 200], "everon": 173, "everybodi": 52, "everydai": [125, 128, 134], "everyon": [77, 117, 128, 132, 135, 136, 138, 143, 189], "everyth": [37, 53, 54, 55, 56, 72, 80, 92, 96, 101, 102, 128, 130, 169, 170, 171, 173, 176, 177, 178, 193, 196, 197], "everytim": [169, 180, 193], "everywher": [34, 169, 172, 178], "evid": [90, 186, 188, 192], "evoc": [117, 138], "evok": 187, "evolut": 128, "evolutionari": 117, "evolv": [117, 131, 142, 178], "ew": 52, "eward": 39, "ex": [0, 39, 98, 116, 117, 135, 138], "exact": [4, 51, 128, 131, 170, 185, 192, 194], "exactli": [37, 39, 49, 52, 71, 106, 128, 134, 136, 138, 171, 176, 178, 179, 185, 192], "exagger": 128, "exam": [128, 170], "examin": 188, "exampl": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 31, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 65, 68, 70, 71, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 94, 96, 97, 101, 102, 104, 106, 107, 111, 126, 127, 128, 130, 131, 132, 134, 141, 142, 143, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 185, 186, 187, 189, 190, 191, 192, 196, 197, 198, 200, 201, 208], "example_1": 178, "example_2": 178, "example_3": 178, "example_list": 178, "example_prompt": 116, "example_selector": 116, "example_text": 138, "example_tweet": 138, "example_writ": 176, "exaplan": [70, 101], "exc_info": [71, 128], "excadril": 166, "exce": 128, "exceed": [78, 128], "excel": [22, 35, 68, 125, 135, 136, 155, 170, 171, 172, 175, 176, 178], "excel_book": 68, "except": [7, 18, 19, 22, 24, 34, 37, 39, 52, 53, 68, 73, 80, 84, 88, 89, 102, 117, 126, 128, 135, 136, 142, 160, 169, 170, 171, 172, 173, 175, 176, 177, 178, 185, 187, 188, 192, 194, 196], "exception": 189, "exception1": 71, "exception2": 71, "exceptioni": 71, "exceptionii": 71, "exceptionn": 71, "excercis": 154, "exceric": 208, "excess": 128, "exchang": [139, 178], "excit": [0, 117, 128, 138, 142, 143, 176, 177], "exclud": [40, 56, 116, 128, 139, 142, 178, 184, 198, 199], "exclude_repli": [138, 142], "exclus": [68, 80, 128, 149, 155, 159], "excurs": 128, "excus": 200, "exect": 138, "execut": [6, 24, 34, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 57, 65, 66, 68, 71, 74, 75, 80, 85, 87, 89, 94, 96, 98, 101, 102, 109, 117, 125, 126, 128, 143, 159, 162, 164, 165, 170, 178, 200, 205, 208], "exeggcut": 166, "exeggutor": 166, "exercis": [22, 75, 76, 128, 130, 138, 141, 166, 168, 170, 171, 172, 173, 175, 177, 178, 184, 197, 198], "exerics": 169, "exert": 128, "exhaust": [34, 47, 98, 128, 177, 188], "exhilar": 128, "exist": [4, 31, 37, 38, 39, 45, 52, 53, 54, 55, 56, 57, 68, 70, 80, 96, 101, 102, 103, 106, 117, 128, 130, 133, 143, 155, 158, 159, 160, 161, 162, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 196, 200, 201], "exist_ok": [170, 172, 173, 174, 175, 176, 178, 179, 180], "exit": [47, 48, 49, 68, 70, 80, 87], "exmapl": [138, 177], "exmpl": 52, "exp": [30, 51, 80, 82, 90, 151, 153, 171], "expand": [31, 79, 84, 128, 152, 173, 177, 197], "expanded_top": 141, "expandtab": 52, "expect": [7, 11, 13, 27, 39, 71, 95, 125, 128, 130, 131, 155, 163, 169, 170, 171, 172, 173, 175, 178, 192, 194, 195, 198, 200], "expectantli": [128, 131], "expens": [78, 101, 128, 131, 141, 169, 178], "experi": [0, 24, 116, 127, 128, 129, 130, 132, 135, 136, 138, 141, 142, 143, 169, 170, 171, 173, 174, 175, 177, 183, 185, 188, 189, 192, 193, 194, 196, 200, 207], "experien": 136, "experiment": [24, 138, 169, 174, 176, 178, 208], "experiment_nam": 176, "experiment_numb": 176, "expert": [0, 117, 128, 195], "expertis": [130, 138], "expir": 178, "explain": [5, 14, 15, 16, 17, 37, 56, 78, 89, 96, 106, 116, 117, 128, 130, 134, 143, 152, 160, 163, 170, 171, 172, 173, 174, 179, 180, 184, 185, 187, 188, 189, 193, 198], "explan": [40, 43, 44, 45, 47, 48, 49, 52, 57, 59, 62, 64, 66, 71, 72, 75, 76, 77, 79, 81, 82, 85, 93, 95, 101, 102, 103, 104, 106, 116, 117, 151, 152, 177, 182, 193], "explanatori": 186, "explicit": [0, 28, 29, 89, 106, 128, 143, 151, 187, 193, 195, 196], "explicitli": [0, 36, 51, 57, 68, 74, 90, 117, 126, 128, 149, 178, 185, 196], "explin": 138, "explod": 145, "exploit": 98, "explor": [0, 39, 65, 115, 116, 128, 130, 134, 135, 136, 137, 138, 141, 143, 169, 170, 171, 172, 173, 174, 175, 176, 185, 188, 190, 193, 195], "exploratori": [0, 185], "explos": 177, "exploud": 166, "expm1": [80, 82], "expon": [34, 47, 52, 82, 94], "exponenti": [28, 52, 80, 81, 91, 95, 128, 151, 171, 195, 198], "export": [84, 170], "expos": [126, 128, 143], "expovari": 81, "express": [28, 29, 38, 39, 43, 44, 45, 48, 49, 52, 53, 55, 57, 74, 77, 79, 89, 91, 93, 94, 95, 97, 104, 117, 128, 141, 155, 169, 198], "expression1": 46, "expression2": 46, "expression3": 46, "expression4": 46, "exract": 141, "extempor": 197, "extend": [38, 52, 74, 89, 101, 103, 117, 128, 138, 142, 164, 187, 194, 195, 196], "extens": [8, 20, 24, 36, 80, 84, 87, 89, 94, 108, 112, 145, 146, 172, 174, 176, 177, 178, 179, 180, 189, 198], "extent": [128, 193, 198], "extern": [49, 71, 116, 117, 132, 176], "extra": [38, 69, 70, 89, 116, 131, 135, 136, 143, 162, 169, 179, 180, 182, 193, 194, 197], "extra_repr": 172, "extra_return_dict": 128, "extrac": [16, 17], "extract": [0, 8, 10, 14, 15, 16, 17, 18, 19, 39, 68, 92, 116, 120, 131, 137, 138, 140, 144, 155, 172, 173, 175, 176, 177, 178, 193, 201], "extractal": [116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 173, 174, 175, 176, 179, 180], "extracton": 117, "extractor": 175, "extrapol": 189, "extravag": 128, "extrem": [128, 131, 138, 141, 143, 155, 178, 185, 186, 187, 188, 193, 195, 198, 200], "ey": [31, 128, 149, 153, 178, 196], "f": [27, 32, 36, 45, 46, 51, 52, 60, 61, 68, 71, 72, 74, 77, 80, 84, 94, 97, 101, 102, 106, 116, 117, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 146, 151, 152, 159, 162, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 190, 193, 195, 198], "f09af94986b4": 54, "f1": [1, 8, 171], "f1_histori": 8, "f1_score": 171, "f1score": 171, "f2db54e8947c": 193, "f3f4b74da706": 54, "f45": 39, "f49307ce4aaa": 56, "f6b2789c4214": 164, "f6df5dfa": 131, "f7b055f5764d": 35, "f7d40ce0c112": 38, "f7ffd6347533": 70, "fab": [80, 82], "fab2e1af2c65": 106, "fabric": 200, "fabul": [138, 143, 192], "face": [7, 78, 116, 128, 138, 142, 173, 184, 199], "facebook": [52, 141, 143, 169], "facebookfacebook": 139, "facecolor": [145, 192, 196], "facecream": 146, "facecremsalesdata": 146, "faceprep": 49, "facet": [185, 188, 197, 199, 200], "facet_kw": 197, "facetgrid": [188, 189, 190, 194, 197, 198, 199, 203], "facewashsalesdata": 146, "facil": [80, 141], "facilit": [31, 136, 194, 196], "fact": [34, 37, 53, 54, 90, 116, 117, 128, 131, 134, 143, 148, 177, 178, 188, 195, 197, 198], "facto": 128, "factor": [26, 29, 49, 142, 178, 186, 190, 194, 195, 196, 198, 203], "factori": [28, 51, 74, 78, 80, 82, 84, 128], "factorplot": [192, 194, 195, 197, 198], "faculti": 128, "fade": [187, 194], "fahrenheit": [38, 116, 137], "fail": [4, 5, 44, 45, 48, 68, 70, 128, 131, 155, 169, 170, 173, 187], "fair": [128, 170, 171, 172, 173, 175, 176, 177, 178, 190, 198], "fairi": [128, 166], "fairli": [35, 128, 172, 177], "faiss": [116, 117, 130, 131, 134], "faith": [175, 178], "fake": [128, 198], "falcon": 52, "fall": [43, 51, 70, 85, 92, 128, 192, 198], "fallback": 149, "fallen": 128, "fals": [1, 8, 11, 13, 16, 17, 18, 19, 30, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 68, 74, 80, 84, 88, 90, 91, 94, 95, 103, 104, 117, 128, 135, 136, 137, 149, 150, 152, 153, 155, 159, 160, 161, 162, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "falsi": 95, "falsifi": 128, "famili": [5, 11, 13, 84, 138, 178, 189, 196, 198], "familiar": [38, 52, 54, 102, 128, 146, 167, 170, 171, 173, 190, 193, 195, 196, 197], "famou": [116, 128], "fan": [169, 177, 193, 200], "fanci": [116, 117, 128, 133, 150, 155], "fandango": 24, "fanstast": 178, "fantast": [171, 174, 176, 177, 178], "faq": 139, "far": [39, 45, 90, 106, 128, 131, 152, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 185, 186, 187, 188], "fare": [194, 196, 198], "farfetch": 166, "farm": [128, 133], "fasewash": 146, "fashion": [5, 7, 17, 19, 103, 128, 172, 176, 178], "fashionmnist": [172, 173], "fashionmnistmodelv0": 172, "fashionmnistmodelv1": 172, "fashionmnistmodelv2": 172, "fast": [68, 116, 117, 128, 131, 148, 155, 159, 169, 174, 175, 176, 177, 178, 198], "fastai": 175, "fastapi": 178, "faster": [51, 54, 57, 92, 98, 101, 103, 139, 151, 170, 172, 176, 177], "fastest": [178, 208], "fat": [129, 197], "fatal": [128, 131, 184], "father": 128, "fatherhood": 128, "fatigu": 128, "fatorplot": 192, "faustomoral": 178, "fav_food": 116, "favor": [128, 138], "favorit": [54, 116, 117, 129, 138, 142, 143], "favorite_count": [138, 142], "favour": 177, "favourit": 178, "fbf7cddd4b2a": 70, "fc": [145, 196], "fdel": 38, "fe": 132, "fear": [128, 131], "fearow": 166, "feasibl": [128, 164], "feat": [176, 177], "featheri": 128, "featur": [0, 1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 37, 101, 103, 104, 116, 117, 128, 134, 137, 139, 159, 169, 170, 171, 172, 173, 175, 184, 186, 187, 188, 189, 190, 192, 194, 195, 198, 199, 200, 208], "feature_map_height": 177, "feature_map_width": 177, "feb": [60, 61, 87], "februari": [45, 60, 61, 116, 128, 169], "fed": [0, 128, 130, 134, 177], "feder": 68, "fee": 141, "fee1": 131, "feeba": 166, "feebl": 128, "feed": [44, 138, 169, 175, 195, 207], "feedback": [44, 74, 131, 143, 178], "feedforward": [18, 19, 177], "feedpars": 24, "feel": [45, 116, 128, 130, 132, 133, 138, 141, 142, 177, 178, 184, 188, 189, 190, 192, 193, 194], "feet": [117, 128], "felic": 128, "felici": 139, "fell": 128, "fellow": 139, "felt": [128, 141], "femal": [68, 101, 166, 184, 188, 191, 193, 194, 195, 196, 200], "female_dinn": 195, "female_lunch": 195, "fenc": [177, 194], "fennekin": 166, "feraligatr": 166, "ferrose": 166, "ferrothorn": 166, "fervent": 128, "fetch": [12, 80, 131, 137, 155, 185, 188, 189, 192, 194, 196, 198, 199, 200], "few": [36, 37, 38, 47, 48, 51, 52, 55, 59, 115, 116, 117, 128, 130, 131, 132, 138, 141, 142, 143, 152, 155, 158, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "fewer": [22, 177, 198, 199], "fewshotprompttempl": 116, "fffbe51149a7": 61, "fget": 38, "fh": 71, "fi": 57, "fib": 80, "fibo": 80, "fibo1": 80, "fibonacci": [35, 48, 80], "fibonacci_numb": 35, "fickl": 131, "fiction": 196, "fiddl": 197, "field": [11, 13, 52, 68, 91, 116, 117, 128, 130, 131, 132, 135, 137, 138, 155, 158, 177, 178, 187, 198], "fierc": 128, "fifa": 117, "fifa_data": 145, "fifteen": 128, "fifti": 128, "fig": [25, 30, 53, 56, 107, 111, 172, 173, 177, 178, 186, 191, 195], "fight": [11, 12, 13, 14, 15, 16, 17, 18, 19, 128, 138, 166], "fighth": [16, 17, 18, 19], "figma": [139, 142], "fignam": 30, "figsiz": [8, 10, 11, 13, 16, 17, 18, 19, 25, 27, 107, 111, 145, 170, 171, 172, 173, 177, 178, 187, 195, 196, 198, 202], "figur": [8, 10, 11, 16, 17, 18, 19, 27, 46, 72, 83, 88, 89, 95, 103, 116, 117, 128, 130, 131, 134, 138, 145, 146, 170, 171, 172, 173, 175, 176, 178, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 202], "file": [6, 24, 34, 35, 37, 52, 70, 71, 72, 76, 77, 80, 83, 84, 87, 88, 90, 94, 98, 109, 116, 117, 120, 128, 130, 131, 137, 141, 143, 144, 146, 155, 163, 164, 165, 166, 170, 173, 174, 175, 176, 179, 180, 181, 182, 200, 205], "file_data": 68, "file_extens": 178, "file_nam": [130, 155], "file_path": 132, "filedata": 152, "fileexistserror": 80, "filemoveinput": 137, "filenam": [68, 80, 94, 117, 131, 155, 170, 173, 174, 176, 178, 179, 180, 189], "fileno": 68, "filenotfounderror": [68, 70, 173], "filepath": [170, 173, 175, 176, 177, 178], "files": [176, 178], "fill": [126, 128, 145, 148, 149, 152, 169, 173, 174, 176, 178, 179, 180, 189, 208], "fillna": 155, "filter": [53, 55, 57, 128, 130, 131, 138, 165, 172], "filter_cond": 155, "filterwarn": [186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "fin": [71, 117], "final": [7, 27, 35, 37, 47, 48, 49, 52, 53, 68, 70, 75, 76, 88, 90, 94, 96, 106, 116, 117, 125, 127, 128, 130, 131, 133, 138, 139, 141, 142, 151, 165, 170, 172, 173, 176, 177, 178, 180, 187, 190, 194, 195, 196, 198, 199, 200], "final_prompt": [116, 117, 127, 138], "finali": 152, "finaltext": 94, "financ": [133, 148], "financi": [51, 117, 128, 135, 136], "find": [1, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 35, 37, 39, 47, 48, 52, 53, 56, 57, 59, 63, 68, 71, 74, 78, 80, 85, 90, 92, 95, 101, 103, 106, 116, 117, 126, 127, 128, 130, 131, 132, 133, 136, 138, 139, 140, 141, 142, 150, 151, 152, 155, 159, 161, 170, 171, 172, 173, 174, 176, 178, 179, 180, 187, 188, 189, 190, 192, 193, 195, 196, 197, 198, 208], "find_class": 173, "find_even_numb": 74, "find_most_common_word": 68, "find_most_frequent_word": 68, "findarea": 103, "findli": 139, "fine": [88, 94, 116, 117, 128, 138, 170, 171, 173, 175, 177, 198], "finer": [135, 136, 185], "finfo": 153, "finish": [36, 47, 89, 116, 117, 128, 139, 143, 172, 176, 177, 178, 179, 180, 188, 191], "finit": [27, 34, 51, 132], "finland": [11, 13, 37, 45, 47, 52, 53, 54, 57, 68, 71, 90, 101], "finneon": 166, "fintech": 193, "fir": 186, "fire": [128, 166, 178], "firelight": 128, "firesid": 128, "firm": [128, 141, 194], "firmer": 199, "firmli": 128, "first": [0, 7, 8, 9, 16, 17, 18, 19, 27, 31, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 52, 54, 57, 59, 60, 61, 65, 68, 69, 70, 71, 74, 75, 77, 80, 84, 85, 87, 89, 90, 94, 96, 98, 101, 102, 103, 104, 106, 116, 117, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 140, 142, 143, 145, 150, 151, 155, 162, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 185, 187, 188, 190, 192, 194, 195, 196, 197, 198, 199, 200, 208], "first_lett": 52, "first_nam": [37, 39, 45, 47, 52, 55, 74, 90, 93, 136], "first_name_to_list": 93, "first_nm": 77, "first_numb": 94, "first_respons": 137, "firstnam": [39, 40, 74, 77, 90, 94, 101], "fisher": [10, 14, 128], "fit": [0, 1, 4, 5, 11, 12, 13, 84, 116, 128, 130, 133, 170, 172, 173, 177, 178, 179, 180, 186, 188, 189, 190, 191, 194, 195, 198], "fit_fn": 186, "fit_reg": 188, "fit_transform": 130, "fitit": 141, "fitler": 131, "five": [39, 47, 71, 103, 128, 145, 155, 156, 158, 169, 171, 172, 177, 178], "fix": [25, 47, 70, 77, 98, 107, 111, 116, 117, 128, 155, 170, 171, 172, 173, 177, 188, 198], "flaaffi": 166, "flab\u00e9b\u00e9": 166, "flag": [12, 16, 17, 18, 19, 39, 117, 126, 145, 153, 159, 160, 161, 162, 164, 165, 166, 174, 178, 184, 190, 198], "flag_r": 190, "flagcdn": 117, "flake": 128, "flamer": 166, "flank": 128, "flaot": 51, "flareon": 166, "flase": 95, "flask": [24, 52], "flat": 153, "flat_latency_grid": 8, "flat_prob": 8, "flat_throughput_grid": 8, "flatten": [8, 10, 11, 12, 13, 14, 15, 57, 148, 172, 173, 174, 179, 180, 192], "flatten_model": 172, "flattened_list": 57, "flattn": 177, "flavor": [20, 108, 112, 116, 129], "flavour": [169, 176], "flee": [128, 184], "fleme": 47, "fletchind": 166, "fletchl": 166, "flexibl": [24, 40, 92, 94, 135, 136, 155, 169, 170, 186, 188, 191, 192, 193], "flexibli": 191, "flexport": 142, "flierprop": 194, "fliersiz": 194, "flight": [128, 184, 201, 202], "fligth": 201, "flip": [173, 185], "float": [24, 38, 46, 49, 52, 53, 54, 56, 59, 66, 70, 71, 80, 81, 82, 85, 89, 91, 92, 93, 95, 103, 128, 149, 155, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 187, 192, 193, 195, 196], "float16": 169, "float32": [169, 170, 171, 173, 175], "float64": [145, 149, 151, 155, 156, 157, 163, 169], "float64index": 155, "float_1": 91, "float_16_tensor": 169, "float_2": 91, "float_32_tensor": 169, "float_numb": 94, "floatingpointerror": 70, "floattensor": 173, "floatzel": 166, "floett": 166, "flood": [128, 131], "floor": [80, 82, 90, 95, 102, 104, 128, 153, 171, 192], "floor_divis": 90, "floppi": 127, "florenc": 128, "florg": 166, "flounder": 128, "flow": [10, 47, 48, 49, 52, 68, 71, 128, 138, 170, 177, 199], "flowchart": 0, "flower": [3, 5, 10, 14, 15, 47, 128, 184, 192], "floyd": 47, "fluctuat": 198, "fluff": 131, "fluoresc": 128, "flush": [48, 66, 68, 84, 94], "fly": [35, 101, 102, 103, 128, 133, 166, 178], "flygon": 166, "flying_test": 101, "fmod": [80, 82], "fmri": 198, "fmt": 145, "fn": [1, 128, 178], "fo": 39, "focu": [116, 117, 127, 128, 138, 142, 169, 170, 177, 178, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200], "focus": [94, 101, 116, 125, 128, 130, 138, 139, 141, 143, 171, 173, 174, 176, 177, 178], "foe": 80, "folder": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 37, 69, 80, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 155, 166, 167, 172, 173, 174, 175, 176, 179, 187, 189, 190, 195, 196, 198], "folk": 116, "follow": [0, 1, 3, 4, 5, 6, 7, 17, 19, 22, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 42, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 68, 70, 71, 72, 74, 77, 78, 80, 81, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96, 98, 101, 102, 103, 104, 106, 109, 115, 116, 117, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 143, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 185, 187, 198, 199, 200, 201, 205], "fom": 48, "font": [128, 136, 145, 185, 193, 196, 198], "font_scal": [185, 195], "fontdict": 145, "fontnam": 145, "fontsiz": [145, 172, 173, 177, 178, 195, 200], "fontweight": [145, 195, 196, 200], "foo": [39, 53, 55, 137], "food": [91, 92, 116, 129, 135, 138, 171, 173, 174, 177, 178], "food101": [173, 176], "food101_class_nam": 178, "food101_class_names_load": 178, "food101_train_transform": 178, "food_1": 129, "food_2": 129, "food_imag": 173, "food_list": 54, "food_nam": 178, "food_staff": 74, "food_tupl": 54, "foodextractor": 135, "foodvis": [175, 176, 177], "foodvision_big": 178, "foodvision_big_class_names_path": 178, "foodvision_big_demo_path": 178, "foodvision_mini": 178, "foodvision_mini_demo_path": 178, "foodvision_mini_exampl": 178, "foodvision_mini_examples_path": 178, "foongu": 166, "foot": [128, 145], "footbal": [39, 200], "football_plot": 200, "footer": 139, "footnot": 128, "footprint": [177, 178], "forbid": 128, "forc": [72, 132, 138, 149, 156, 178, 184], "force_edgecolor": 199, "forcibli": 84, "ford": [103, 167], "forecast": [135, 136], "foreign": 128, "forese": 142, "foreshadow": 138, "forest": [128, 172], "forev": 48, "forget": [7, 89, 177, 178], "forgot": [70, 128, 173], "forgotten": [48, 128], "form": [4, 7, 8, 10, 12, 14, 36, 43, 47, 51, 52, 55, 57, 60, 61, 68, 69, 77, 79, 80, 85, 89, 92, 98, 101, 117, 128, 130, 131, 136, 138, 142, 148, 149, 151, 155, 159, 160, 163, 166, 171, 172, 174, 175, 176, 177, 178, 179, 180, 192, 193, 194, 195, 196, 197, 198, 199, 200], "formal": [77, 106, 128, 177], "format": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 37, 40, 45, 47, 54, 55, 64, 65, 68, 80, 89, 101, 102, 104, 116, 117, 127, 128, 129, 130, 133, 136, 137, 138, 139, 143, 155, 156, 163, 169, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "format_instruct": [116, 117, 133], "format_prompt": [117, 127, 129, 131, 133, 136], "format_regex": 61, "format_tool_to_openai_funct": 137, "format_vers": 84, "former": [89, 103, 128, 139], "formfe": 52, "formul": 47, "formula": [1, 4, 5, 39, 74, 170, 171, 177], "forretress": 166, "fortan": 152, "forth": [80, 117], "forth_respons": 137, "forti": [128, 134], "fortran": 128, "fortun": [22, 51, 128], "forum": [128, 171, 174, 175, 178, 192, 193, 194, 196], "forward": [47, 52, 69, 70, 92, 128, 139, 143, 169, 170, 171, 172, 174, 175, 177, 179, 180, 198, 201], "forward_cal": [172, 173], "found": [32, 36, 39, 47, 49, 52, 55, 61, 70, 71, 80, 95, 98, 103, 116, 128, 130, 131, 135, 136, 138, 139, 142, 143, 149, 159, 162, 169, 170, 171, 172, 173, 175, 176, 177, 178, 187, 194, 196, 198, 201], "foundat": [128, 173, 177, 197], "founder": [128, 130, 131, 139, 142, 175, 177], "fountain": [116, 128], "four": [9, 10, 14, 39, 42, 47, 61, 74, 89, 91, 94, 103, 106, 128, 131, 138, 143, 152, 155, 156, 167, 170, 171, 172, 178, 184, 185, 194, 200], "fourth": [39, 48, 94, 117, 131, 159], "fp": [1, 126], "fr": 117, "fra": 117, "frac": [11, 13, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 95, 171], "fractal": 134, "fraction": [61, 82, 141, 186], "fradul": 178, "fragrant": [116, 128], "frame": [15, 16, 17, 18, 19, 78, 89, 128, 155, 159, 162, 163, 164, 172, 178, 194, 199, 200], "frameobject": 89, "framework": [7, 18, 19, 24, 116, 117, 118, 137, 141, 169, 177, 200], "franc": [116, 117], "frances": 117, "francesa": 117, "franchis": 141, "franci": 117, "francia": 117, "franciaorsz\u00e1g": 117, "francisco": [116, 117, 137, 139, 141, 143, 184], "francja": 117, "francouzsk\u00e1": 117, "francuska": 117, "franc\u00e9": 117, "franc\u00fazska": 117, "franc\u00fazsko": 117, "frank": 77, "frankreich": 117, "frankrijk": 117, "frankrik": 117, "frans": 117, "fransa": 117, "franz\u00f6sisch": 117, "fran\u00e7a": 117, "fran\u00e7ai": 117, "fran\u00e7ais": 117, "fraud": [171, 178], "fraudul": [5, 14, 15, 16, 17, 178], "fraxur": 166, "fra\u00f1": 117, "free": [0, 22, 45, 68, 116, 128, 130, 131, 132, 135, 136, 138, 142, 169, 176, 177, 178, 189, 190, 192, 193, 194, 196, 198, 208], "freecodecamp": 178, "freed": 68, "freedom": [4, 11, 13, 136, 176, 199], "freelanc": 128, "freeli": [22, 198], "freez": [128, 177, 178], "french": [68, 116, 117, 178], "freq_dist": 101, "frequenc": [101, 155, 194, 195], "frequent": [39, 49, 53, 68, 80, 130, 150, 151, 155, 177, 178, 194, 197], "fresh": [116, 129, 131, 138, 170, 171], "fresher": [128, 200], "frexp": [80, 82], "fri": [65, 135, 193, 195, 196], "friction": [116, 117, 128], "fridai": 116, "fridman": 175, "friend": [5, 117, 128, 131, 132, 136, 169, 175, 177, 178], "friendli": [35, 57, 178], "frighten": 128, "frighteningli": 128, "frillish": 166, "frist": 171, "froaki": 166, "frogadi": 166, "frolick": 128, "from": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 45, 47, 48, 49, 51, 52, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 84, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 106, 107, 111, 115, 116, 117, 120, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 137, 138, 140, 141, 144, 145, 146, 148, 149, 150, 151, 162, 163, 164, 170, 172, 173, 174, 176, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "from__email": 126, "from__nam": 126, "from_arrai": [159, 162], "from_chain_typ": [117, 134, 141], "from_dict": [155, 167], "from_docu": [116, 117, 131, 132, 134, 140, 141], "from_exampl": 116, "from_llm": [117, 131], "from_llm_and_api_doc": 117, "from_messag": [127, 129, 141, 143], "from_numpi": [169, 171], "from_response_schema": [116, 117, 133], "from_templ": [117, 127, 129, 133, 141, 143], "from_text": 132, "from_tupl": [158, 165], "from_uri": 117, "from_valu": 126, "from_youtube_url": 142, "from_zapier_nla_wrapp": 126, "fromarrai": 153, "fromisoformat": [135, 136], "fromit": 153, "fromtimestamp": [59, 60, 64], "fron": [11, 13], "front": [39, 52, 128, 130, 131, 169, 176, 177, 196], "front_end": 53, "frontend": 185, "frontier": [130, 134], "froslass": 166, "frosti": 128, "frown": 106, "froze": 175, "frozen": [175, 176, 177, 178], "frugal": 128, "fruit": [39, 45, 47, 53, 54, 56, 71, 89, 91, 102, 117, 128, 131, 157, 196], "fruit1": 157, "fruit2": 157, "fruit3": 157, "fruit4": 157, "fruit_nam": 117, "fruit_output": 117, "fruit_queri": 117, "fruits1": 91, "fruits2": 91, "fruits3": 91, "fruits4": 91, "fruits_and_veg": 71, "fruits_df": 157, "fruits_dict": 157, "fruits_list": 157, "fruits_veget": 54, "fset": 38, "fsize": 30, "fsum": [80, 82], "fucntion": [75, 76], "fulfil": [132, 169, 188], "full": [9, 16, 17, 18, 19, 24, 59, 60, 61, 68, 69, 74, 80, 83, 90, 95, 116, 117, 126, 127, 128, 130, 131, 134, 138, 149, 151, 169, 170, 171, 173, 176, 177, 178, 180, 195], "full_backward_hook": [172, 173], "full_data": 68, "full_lik": 149, "full_nam": [74, 77, 90], "full_stack": 53, "full_text": [138, 142], "fulli": [125, 128, 130, 169, 176, 177, 178, 196], "fun": [39, 74, 75, 76, 77, 80, 90, 95, 128, 131, 135, 138, 170, 172, 175, 177, 178, 180, 187, 199], "fun1": [75, 76, 103], "fun2": [75, 76, 103], "fun3": [76, 103], "func": [37, 117, 130, 162, 193], "func1": 101, "func2": 101, "function": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 28, 29, 34, 38, 39, 40, 42, 48, 49, 51, 59, 65, 66, 68, 69, 70, 71, 75, 81, 83, 87, 88, 89, 90, 91, 92, 93, 96, 101, 102, 106, 108, 112, 117, 120, 125, 127, 130, 134, 136, 138, 141, 142, 144, 146, 148, 152, 155, 157, 169, 175, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200], "function_cal": [116, 135, 137], "function_descript": 137, "function_nam": [74, 137], "function_respons": 137, "functionis": 176, "functionnam": 71, "functool": [79, 128], "fund": [116, 117, 126, 128, 131, 178], "fundament": [101, 120, 128, 130, 138, 155, 176, 177, 178, 183, 187], "fundrais": 131, "fungi": 74, "fungu": 117, "funni": 128, "fur": 7, "furfrou": 166, "furret": 166, "further": [3, 11, 12, 13, 14, 15, 16, 17, 35, 52, 68, 70, 72, 74, 94, 96, 98, 139, 155, 156, 164, 170, 171, 173, 176, 177, 178, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208], "furthermor": [35, 37, 38, 53, 74, 80, 96, 101, 106, 131, 185], "furthest": 39, "furtur": 175, "fusion": [173, 174, 179, 180], "fut": 128, "futher": 117, "futur": [47, 49, 68, 90, 106, 117, 127, 128, 130, 131, 136, 138, 142, 163, 169, 170, 171, 172, 173, 174, 176, 178, 180, 187, 191, 197, 198, 200, 208], "futurewarn": [130, 163, 167, 187, 191], "fuzz": 117, "fuzzywuzzi": 117, "g": [0, 4, 5, 7, 11, 13, 23, 37, 49, 53, 54, 68, 90, 116, 132, 137, 145, 146, 149, 151, 152, 155, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "g53c4ty0qi": 138, "g7qxxsfswytpkuzd7": 117, "ga": 145, "gabit": 166, "gackl": 128, "gai": 128, "gain": [128, 143, 177, 188, 189, 197, 198], "gallad": 166, "gallademega": 166, "galleri": [117, 128], "galvantula": 166, "gam": 198, "game": [24, 83, 116, 128, 170], "gamma": [80, 81, 82, 198], "gammavari": 81, "gap": [88, 128, 130, 134], "garbag": [68, 70, 102, 134, 160], "garbodor": 166, "garchomp": 166, "garchompmega": 166, "garden": 128, "gardevoir": 166, "gardevoirmega": 166, "gari": 77, "garlic": [116, 129, 178], "gas_pric": 145, "gas_price_figur": 145, "gastli": 166, "gastrodon": 166, "gate": [57, 138], "gatesfound": 138, "gather": [116, 128, 135, 136, 142, 155, 156, 160, 177, 193], "gaug": [192, 193], "gaul": 128, "gauss": 81, "gaussian": [81, 152, 177, 188, 189, 191, 198], "gaussian_anomali": 8, "gaussian_anomaly_detect": 8, "gaussiananomalydetect": 8, "gaussiankd": 195, "gave": [68, 117, 128, 131, 132, 141], "gca": [193, 199, 200], "gcd": 80, "gcp": [132, 136, 169], "gdp": [4, 11, 13, 128, 198], "gdpr": [135, 136], "gea": 145, "geeksforgeek": [4, 5], "gelu": 177, "gem": 128, "gender": [55, 68, 101, 184, 188, 192, 193, 195, 196, 200], "gender_domin": 195, "gener": [4, 5, 7, 11, 14, 15, 18, 19, 22, 24, 29, 32, 34, 37, 41, 42, 47, 48, 51, 52, 54, 70, 71, 72, 74, 78, 79, 80, 81, 83, 84, 89, 92, 95, 98, 101, 102, 103, 106, 115, 117, 120, 126, 127, 128, 129, 130, 131, 138, 141, 142, 144, 146, 149, 150, 159, 162, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208], "generaliz": [172, 173], "generate_color": 80, "generate_full_nam": 74, "generate_group": 77, "generate_respons": 127, "generatig": 186, "generatingdata": [188, 190], "generation_info": 129, "generatorexit": 70, "generos": [11, 13], "genesect": 166, "genexpr": 35, "genfromtxt": [152, 153], "gengar": 166, "gengarmega": 166, "genius": 128, "genotyp": 192, "genr": 116, "genteel": 128, "gentleman": 198, "gentli": 128, "genuin": [128, 138], "geociti": 128, "geodud": 166, "geograph": 198, "geometr": 32, "geophys": 117, "georg": 177, "geq": 27, "gereet": 74, "germain": 145, "german": [68, 129], "germancar": 167, "germani": [117, 129, 167], "get": [4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 31, 34, 35, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 77, 79, 80, 89, 90, 95, 96, 101, 102, 103, 104, 106, 108, 109, 112, 116, 117, 125, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 139, 142, 143, 149, 150, 152, 156, 158, 162, 163, 165, 167, 170, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208], "get_authors_tone_descript": 138, "get_company_pag": 139, "get_cost": [11, 13], "get_current_weath": [116, 137], "get_data": 102, "get_first_ten_countri": 37, "get_food_ment": 135, "get_format_instruct": [116, 117, 133], "get_group": 167, "get_height": 196, "get_last_ten_countri": 37, "get_num_token": [117, 130, 141], "get_offset": 192, "get_openai_callback": [135, 136], "get_original_tweet": [138, 142], "get_relevant_docu": [116, 131, 140], "get_similar_public_figur": 138, "get_string_list": 37, "get_temperatur": 38, "get_text": [135, 136, 142], "get_tool": 126, "get_video_transcript": 142, "get_width": 196, "get_x": 196, "get_xlim": 193, "get_xticklabel": 196, "get_yticklabel": 196, "getattr": [102, 103, 140, 193], "getcwd": 80, "getcwdb": 69, "getdata": 102, "getdatalim": 192, "getenv": [116, 117, 127, 129, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142], "getidea": [130, 134], "getlogg": 131, "getrandbit": 81, "getrespons": 126, "getroot": 68, "getstat": 81, "ggplot": 145, "gh_jid": [135, 136], "ghost": 166, "gi": 169, "giant": [128, 131], "gibl": 166, "giddi": 128, "gif": 126, "giffin": 128, "gift": 37, "gigabyt": 200, "gigalith": 166, "gil": 142, "gini": 117, "giphi": 126, "girafarig": 166, "giratinaalt": 166, "giratinaorigin": 166, "gist": [130, 189], "gist_earth": 190, "gist_earth_r": 190, "gist_grai": 190, "gist_gray_r": 190, "gist_heat": 190, "gist_heat_r": 190, "gist_ncar": 190, "gist_ncar_r": 190, "gist_rainbow": 190, "gist_rainbow_r": 190, "gist_stern": 190, "gist_stern_r": 190, "gist_yarg": 190, "gist_yarg_r": 190, "git": [174, 175, 176, 177, 178], "gitattribut": 178, "github": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 90, 116, 141, 145, 146, 172, 173, 174, 175, 176, 177, 178, 179, 180], "githubusercont": 178, "gitlab": [139, 142], "give": [14, 15, 24, 34, 37, 39, 43, 44, 45, 47, 49, 51, 52, 71, 74, 80, 82, 88, 90, 95, 101, 102, 115, 116, 117, 127, 128, 130, 131, 132, 135, 136, 137, 138, 141, 142, 143, 148, 149, 151, 152, 155, 156, 157, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200], "giveawai": 190, "given": [1, 3, 4, 27, 28, 29, 32, 35, 37, 40, 42, 43, 47, 48, 49, 52, 56, 59, 61, 65, 66, 70, 71, 74, 77, 80, 84, 87, 88, 91, 94, 96, 103, 106, 116, 117, 127, 128, 130, 131, 133, 134, 137, 141, 142, 143, 148, 149, 152, 156, 169, 171, 172, 173, 174, 175, 176, 177, 178, 188, 192, 193, 195, 198, 200], "gkdive": 145, "gkhandl": 145, "gkkick": 145, "gkposit": 145, "gkreflex": 145, "gl": 117, "glaceon": 166, "glacial": 128, "glacier": 128, "glad": 143, "glali": 166, "glaliemega": 166, "glameow": 166, "glanc": 90, "glare": 128, "glass": 128, "glassi": 128, "gleam": 128, "glean": [135, 136], "glenbrook": 128, "gligar": 166, "glimps": [170, 195], "gliscor": 166, "glob": [131, 134, 173, 175, 176, 178], "global": [22, 36, 70, 79, 86, 88, 96, 131, 138, 177], "global_lang": 75, "global_step": 176, "global_var": [75, 76], "globalglob": 75, "gloom": 166, "glori": 128, "gloriou": 128, "glove": 143, "glu": 186, "gmail": 126, "gmtoff": 61, "gmtoff_fract": 61, "gnbu": 190, "gnbu_r": 190, "gnome": 169, "gnuplot": 190, "gnuplot2": 190, "gnuplot2_r": 190, "gnuplot_r": 190, "go": [4, 5, 7, 8, 11, 16, 17, 18, 19, 24, 27, 37, 38, 46, 47, 49, 51, 71, 74, 78, 89, 95, 96, 98, 101, 104, 106, 116, 117, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 141, 142, 143, 148, 166, 183, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208], "goal": [0, 117, 127, 128, 130, 131, 132, 136, 138, 139, 141, 142, 143, 153, 172, 173, 176, 177, 178, 181, 185, 188, 189, 197, 208], "god": [55, 128], "goe": [11, 12, 13, 14, 15, 16, 17, 36, 66, 70, 71, 72, 80, 101, 106, 135, 136, 138, 143, 159, 162, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 189, 195], "gogh": 24, "gogoat": 166, "going_modular": [174, 175, 176, 177, 178, 180, 181], "goku": [176, 178], "golbat": 166, "gold": [128, 135, 136], "goldeen": 166, "goldman": 128, "golduck": 166, "golem": 166, "golett": 166, "golurk": 166, "gone": [128, 143, 169, 173, 176, 177, 178, 188, 192, 198], "gonna": [143, 198], "goo": 117, "good": [16, 17, 18, 19, 36, 47, 52, 54, 68, 71, 72, 74, 77, 80, 85, 89, 94, 116, 117, 126, 127, 128, 130, 131, 133, 134, 135, 138, 139, 141, 142, 143, 145, 146, 155, 169, 170, 171, 172, 173, 175, 176, 177, 178, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200], "good_or_bad": 135, "good_str": 116, "goodorbad": 135, "goodra": 166, "googl": [24, 52, 84, 103, 116, 117, 125, 126, 131, 142, 143, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 198], "google_api_kei": 117, "google_cse_id": 117, "googlemap": 117, "googlesearchapiwrapp": 117, "googol": 91, "goomi": 166, "gorebyss": 166, "got": [37, 40, 76, 80, 92, 93, 104, 128, 131, 141, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 194, 195, 208], "got_stream": 128, "gothita": 166, "gothitel": 166, "gothorita": 166, "gotten": [128, 176], "gourgeistaverag": 166, "gourgeistlarg": 166, "gourgeistsmal": 166, "gourgeistsup": 166, "govern": [11, 13, 128, 192, 198], "gpt": [116, 117, 127, 130, 131, 134, 135, 136, 138, 141, 142, 143, 207], "gpt3": 141, "gpt4": [116, 117, 130, 135, 136, 141, 143], "gpt_index": 116, "gpu": [170, 171, 173, 174, 175, 176, 177, 178, 180], "gr": 178, "grab": [132, 136, 138, 141, 196], "gracefulli": [49, 164], "grad": [116, 128, 139, 170, 171, 172, 173, 174, 179, 180], "grad_fn": [169, 171, 172, 177], "grade": [43, 44, 45, 117, 128, 145, 156, 192], "graded_output": 117, "gradient": [18, 19, 170, 171, 172, 173, 175, 177, 208], "gradual": [128, 177], "graduat": [128, 195], "graham": [116, 128, 130, 131, 132], "grai": [172, 187, 190, 192, 193, 200], "graido": 178, "grain": 141, "granbul": 166, "grand": 128, "grandeur": 128, "grandli": 128, "grandpar": 103, "grant": [45, 128, 139], "granul": 128, "grape": 47, "graph": [0, 4, 130, 146, 170, 176, 189, 192, 196, 198], "graph_obj": 11, "graphic": [24, 71, 128, 169, 174, 177, 193, 195, 199, 201], "grasp": 130, "grass": 166, "grate": [116, 138], "grather": 138, "gravel": 166, "graviti": [74, 90, 93, 99], "gray_r": 190, "grayscal": [9, 17, 19, 172, 173, 187], "great": [42, 96, 104, 116, 117, 126, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 172, 173, 175, 177, 186, 192, 193, 198, 199, 200, 201], "greater": [43, 45, 46, 48, 49, 72, 80, 82, 90, 95, 104, 128, 148, 151, 155], "greatest": [175, 177, 178], "greatli": 128, "greek": [28, 29, 101, 130], "green": [16, 17, 18, 19, 47, 89, 128, 136, 169, 170, 172, 176, 187, 190, 191, 193], "greenhous": [135, 136], "greens_r": 190, "greet": [37, 74, 77, 94, 102], "greet_modul": 80, "greg": [126, 135, 136, 138, 139, 143], "gregori": [135, 136], "gregorykamradt": [116, 117, 130, 131], "grei": [16, 17, 18, 19, 138, 185, 187, 190, 191, 196], "greninja": 166, "gretta": 77, "grew": [128, 139], "greyish": 187, "greys_r": 190, "grid": [8, 11, 13, 146, 148, 149, 178, 185, 190, 195, 197, 198, 199, 200], "grid_kw": 190, "gridlin": 146, "gridsiz": 195, "gridspec": 200, "gridspec_kw": [195, 200], "grill": 129, "grim": 128, "grimer": 166, "grind": 128, "grip": [194, 199], "grotl": 166, "groudon": 166, "groudonprim": 166, "ground": [101, 116, 117, 128, 134, 166, 170, 171, 177, 178], "group": [0, 24, 116, 128, 131, 141, 155, 167, 173, 177, 185, 188, 192, 194, 195, 196, 198], "groupbi": [167, 193, 195], "grouper": 195, "grove": 128, "grovyl": 166, "grow": [22, 74, 83, 94, 116, 128, 131, 132, 134, 143, 177], "growlith": 166, "grown": [134, 141], "growth": [11, 12, 13, 128, 131, 135, 136, 142, 198], "gruesom": 128, "grumpig": 166, "gt": [80, 135, 136], "gti": 128, "gtm": 136, "guancial": 116, "guarante": [54, 68, 71, 117, 128, 138, 176, 200], "guard": 128, "guava": [47, 53, 56, 196], "guess": [14, 15, 38, 72, 131, 138, 143, 149, 155, 170, 171, 173, 175, 176, 177, 184, 193, 194, 196, 197], "guest": [45, 128], "guestim": 141, "gui": [24, 71, 128, 131, 186, 190, 192, 196, 198], "guid": [0, 22, 25, 107, 111, 117, 132, 139, 169, 170, 172, 173, 174, 176, 178, 179, 180, 186, 187, 189], "guidanc": [0, 187], "guidebook": 178, "guidelin": 169, "guilti": 128, "gulpin": 166, "gun": 184, "gunmet": 187, "gurdurr": 166, "gusti": 116, "gusto": 142, "gutenberg": 116, "gutenbergload": 116, "guthri": 184, "gweriniaeth": 117, "gyarado": 166, "gyaradosmega": 166, "gz": [80, 172], "h": [0, 35, 39, 47, 48, 49, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 93, 95, 151, 172, 173, 175, 177, 184, 194, 196], "h1": 152, "h2": 152, "ha": [3, 7, 11, 13, 16, 17, 18, 19, 22, 24, 27, 28, 29, 32, 34, 36, 37, 38, 39, 40, 42, 44, 45, 47, 49, 51, 52, 55, 56, 57, 59, 65, 66, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 83, 87, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 106, 116, 117, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 145, 150, 151, 152, 155, 156, 157, 158, 161, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200], "habit": 198, "hack": [128, 195], "hackathon": [116, 117], "hacker": [128, 139], "hacker_new": 68, "hackernew": 116, "hackl": 117, "had": [36, 37, 70, 74, 77, 80, 116, 128, 130, 131, 132, 138, 141, 142, 143, 151, 171, 172, 173, 175, 177, 178, 179, 180, 185, 189, 190, 193, 194, 195, 196, 197, 198, 200], "hadlei": [188, 198], "hadn": [128, 131, 173], "hale": 128, "half": [53, 116, 128, 141, 143, 169, 171, 176, 187, 197], "halfwai": 128, "hall": 141, "hallucin": 142, "halt": 71, "halv": [116, 128, 172], "hamm": 30, "hamming_distance_a": 30, "hamming_distance_b": 30, "hamper": 80, "hamster": 177, "hand": [0, 47, 55, 56, 68, 75, 77, 98, 101, 102, 128, 131, 132, 134, 137, 138, 143, 169, 170, 171, 173, 175, 176, 178, 185, 188, 189, 190, 193, 196, 198, 200], "handcraft": [173, 177], "handel": [22, 73], "handi": [24, 116, 131, 145, 146, 155, 166, 167, 173, 177, 180, 188, 189, 192, 193, 195, 198, 199, 200], "handl": [5, 24, 34, 35, 36, 49, 52, 65, 66, 68, 69, 70, 72, 77, 117, 128, 130, 142, 148, 150, 156, 164, 171, 173, 175, 176, 177, 178, 189, 196, 198], "handle_error_respons": 128, "handler": 49, "handwritten": [5, 7, 16, 18, 172], "hang": [128, 169], "hank": 77, "happen": [27, 34, 35, 36, 40, 47, 48, 96, 98, 103, 104, 116, 117, 128, 130, 131, 132, 138, 139, 143, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186], "happi": [4, 11, 13, 49, 52, 53, 74, 87, 94, 101, 126, 138, 143, 170, 189, 194, 198], "happin": 13, "happind": [11, 13], "happini": 166, "har": [173, 177], "hard": [22, 39, 68, 78, 89, 94, 117, 125, 128, 130, 131, 132, 135, 136, 138, 141, 143, 169, 170, 171, 174, 176, 177, 178, 200], "hardcod": [170, 178], "hardcor": 141, "harder": [128, 173, 176], "hardli": [116, 128], "hardtop": 167, "hardwar": [18, 19, 51, 98, 116, 128, 131, 133, 169, 170, 172, 173, 175, 176, 177, 178, 180], "hariyama": 166, "harj": 128, "harmless": 186, "harmon": [1, 27], "harper": 77, "harri": [102, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165], "harsh": 128, "harvard": [128, 131, 195], "has_w2": 90, "hasattr": [102, 138, 142], "hash": [52, 84, 89, 128], "hashabl": 56, "hashtag": 138, "hasn": [170, 171, 173, 176], "hassl": 116, "hat": [32, 173, 176], "hatch": 145, "hatchback": [155, 156, 167], "hate": [129, 131], "haunt": 128, "haunter": 166, "have": [0, 1, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 23, 27, 31, 32, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 104, 106, 109, 115, 116, 117, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208], "haven": [59, 128, 131, 170, 171, 175, 177, 190, 192, 193, 198], "hawk": 39, "hawlucha": 166, "haxoru": 166, "hazard": 128, "hazel": 128, "hazi": 200, "he": [39, 45, 52, 68, 71, 72, 101, 116, 117, 128, 131, 134, 141, 142, 143, 173, 177, 199], "head": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 117, 128, 134, 138, 143, 145, 155, 166, 167, 169, 171, 175, 178, 184, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 202], "headcount": 137, "header": [74, 77, 126, 128, 158, 159, 162, 164, 165, 166, 195, 200], "headlin": [125, 141], "headquart": 128, "heal": 128, "health": [11, 13, 128, 133, 138, 141, 142, 171], "healthcar": [138, 142], "healthi": 128, "healthkit": 117, "heap": 128, "hear": [128, 135, 136, 139, 141], "heard": [128, 143, 178], "heart": [26, 135, 136, 171, 177], "hearti": [128, 129], "heat": [116, 129, 200, 203], "heathkit": [117, 128], "heatmap": [200, 202], "heatmor": 166, "heatran": 166, "heaven": 128, "heavi": [145, 173, 195, 198], "heavier": 128, "heaviest": 128, "heavili": [128, 141, 190, 191], "hedg": 128, "heedless": 128, "heel": 128, "hei": [39, 54, 126, 135, 136, 143, 177], "height": [53, 95, 117, 128, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 186, 189, 190, 196], "height_ratio": 195, "heinlein": 128, "held": [117, 198], "heliolisk": 166, "helioptil": 166, "hello": [22, 24, 35, 36, 37, 39, 43, 44, 47, 52, 53, 54, 56, 66, 70, 74, 77, 80, 84, 89, 90, 92, 93, 94, 95, 96, 100, 102, 103, 126, 180, 192], "hello009": 52, "hello99": 52, "hello99world66": 52, "hello_world": 180, "hellohellohello": 52, "helloworld": [47, 48, 49, 52, 53, 54, 56], "help": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 39, 42, 47, 48, 49, 53, 59, 60, 61, 64, 65, 71, 72, 74, 78, 80, 85, 88, 90, 96, 101, 106, 108, 112, 116, 117, 126, 128, 129, 130, 131, 132, 134, 135, 136, 139, 141, 142, 143, 145, 146, 148, 155, 156, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 182, 185, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 208], "helper": [47, 117, 127, 132, 135, 136, 171, 172, 174, 181], "helper_funct": [171, 172, 175, 177, 178], "helpless": 128, "helsinki": 68, "henc": [42, 43, 47, 48, 49, 51, 52, 53, 54, 57, 59, 68, 75, 79, 80, 92, 94, 95, 96, 98, 101, 104, 131, 150, 169, 170, 171, 177, 184, 185, 188, 189, 196, 197, 198, 200], "her": [94, 116, 128, 138, 141, 143, 197], "heracross": 166, "heracrossmega": 166, "herb": 129, "herdier": 166, "here": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 34, 35, 36, 37, 38, 39, 45, 47, 48, 49, 51, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 101, 102, 103, 104, 107, 108, 111, 112, 115, 116, 117, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 141, 142, 143, 150, 151, 152, 156, 157, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208], "herebi": 128, "hereon": 200, "heroku": 128, "heterogen": [54, 155, 157, 163], "hex": [51, 52, 187, 189, 191], "hexa": 80, "hexadecim": [51, 52, 80, 91, 94], "hexagon": 189, "hexpoint": 106, "hf": 178, "hh": 52, "hhmm": [60, 61], "hi": [39, 55, 66, 71, 94, 116, 117, 128, 130, 134, 138, 141, 142, 177, 197, 198], "hiberfil": 69, "hibern": 136, "hidden": [0, 7, 34, 101, 116, 128, 171, 172, 173, 174, 176, 177, 179, 180], "hidden_unit": [171, 172, 173, 174, 179, 180], "hide": [36, 38, 101, 128, 187, 195], "hiden": 172, "hierarch": [155, 156, 158, 165, 202], "hierarchi": 83, "high": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 81, 116, 128, 134, 136, 138, 139, 141, 142, 145, 146, 148, 149, 155, 169, 172, 173, 175, 176, 177, 185, 189, 194, 195, 196, 197, 199], "high_end": 136, "higher": [11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 79, 93, 98, 128, 139, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 188, 189, 195, 197], "higher_order_funct": 36, "highest": [8, 80, 125, 128, 155, 169, 171, 172, 173, 176, 184, 189, 192, 194, 196], "highli": [0, 68, 102, 106, 117, 128, 148, 172, 177, 178, 185, 189, 190, 192, 193, 194, 195, 196, 199], "highlight": [128, 138, 143, 177, 178, 186, 188, 200, 202], "hike": 143, "hill": [4, 5], "hilltop": 128, "him": [116, 128, 132, 142], "himself": [106, 117, 128, 141, 142], "hint": [72, 127, 138, 153, 167, 169, 171, 172, 173, 175, 177, 196], "hip": 128, "hippopota": 166, "hippowdon": 166, "hire": [128, 131, 141], "hispan": 184, "hist": [8, 11, 13, 145, 146, 190, 191, 199, 200], "hist_kw": 186, "histogram": [8, 11, 13, 186, 189, 190, 191, 193, 196, 199], "histohram": [8, 11, 13], "histori": [8, 117, 128, 134, 137, 143], "histplot": 191, "histtyp": 199, "hit": [70, 178], "hitch": 128, "hitmonchan": 166, "hitmonle": 166, "hitmontop": 166, "hl": 187, "hls_palett": 187, "hmm": [138, 177, 178, 195, 199], "hmmm": [176, 197], "hmph": 128, "hn": 128, "hnloader": 116, "ho": [52, 166, 175, 176, 177, 178], "hoax": 128, "hobbi": 156, "hoffman": 184, "hold": [16, 17, 18, 19, 53, 76, 77, 90, 106, 116, 130, 132, 135, 136, 149, 173, 178, 180, 192, 195, 197, 200], "holder": [141, 142], "hole": 128, "holi": 177, "hollow": 128, "home": [101, 116, 128, 137, 139, 169], "home_print": 137, "homebrew": 132, "homemad": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "homepag": [142, 178], "homework": [189, 190, 193, 196, 198], "homogen": [54, 149], "hon": 24, "honchkrow": 166, "honda": 167, "honedg": 166, "honei": 49, "honest": 192, "honestli": [128, 190, 194, 195, 198], "honk": 96, "honor": 198, "hood": [117, 136, 194, 195], "hook": [117, 173], "hoopahoopa": 166, "hoorai": 43, "hoothoot": 166, "hootsuit": 143, "hope": [47, 52, 74, 95, 128, 131, 138, 169, 184, 188, 190, 196, 198, 199], "hopefulli": [128, 130, 131, 138, 141, 172, 173, 175, 177, 178], "hoppip": 166, "horac": [173, 177], "horitzont": 152, "horizon": [128, 173, 197], "horizont": [31, 39, 52, 117, 148, 152, 173, 177, 185, 192, 193, 194, 195, 196, 198, 200], "horizontalalign": 177, "horowitz": 141, "horrai": 43, "horribl": 128, "horrifi": [128, 131], "hors": 128, "horsea": 166, "horsepow": [155, 156, 166, 167], "hose": 170, "hospit": 128, "host": [127, 128, 141, 169, 176, 178], "hostnam": [71, 176], "hot": [25, 107, 111, 128, 129, 178, 190], "hot_r": 190, "hottest": 117, "hotz": 177, "houndoom": 166, "houndoommega": 166, "houndour": 166, "hour": [60, 61, 63, 64, 65, 95, 103, 128, 143, 145, 170, 177, 178, 197, 208], "hous": [0, 102, 128, 131, 143, 169, 198], "how": [0, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 35, 36, 37, 38, 39, 42, 44, 47, 48, 49, 51, 54, 55, 57, 59, 65, 68, 70, 71, 72, 75, 76, 77, 79, 81, 82, 84, 93, 94, 95, 98, 101, 102, 103, 104, 109, 116, 117, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 155, 156, 157, 159, 161, 162, 163, 164, 165, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 188, 189, 193, 195, 196, 197, 198, 199, 200, 205, 208], "how_to_describe_ton": 138, "howard": [170, 175], "howdi": 39, "howev": [38, 39, 43, 44, 47, 54, 56, 57, 66, 71, 72, 76, 89, 90, 92, 93, 96, 98, 101, 102, 103, 104, 106, 128, 131, 137, 141, 142, 143, 149, 150, 151, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 201], "hp": 166, "hr": 131, "href": 169, "hrv": 117, "hspace": [16, 17, 18, 19, 195], "hstack": [8, 11, 148, 199], "hsv": [188, 190, 193, 194, 196, 197], "hsv_r": [190, 193], "html": [24, 25, 52, 53, 68, 101, 107, 111, 117, 128, 134, 135, 136, 140, 141, 142, 143, 151, 155, 170, 171, 172, 187, 198, 202], "http": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 116, 117, 126, 128, 131, 132, 134, 135, 136, 138, 139, 140, 142, 143, 145, 151, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 191, 198, 202], "httplib": 126, "httplib_request_kw": 126, "httplib_respons": 126, "hu": 49, "hub": [116, 175, 177], "hubspot": 143, "hue": [187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "hue_kw": [199, 200], "hue_ord": [188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "hug": 173, "huge": [32, 92, 116, 128, 131, 165, 175, 177, 187, 192, 195, 198, 200], "huggingfac": [172, 175, 177], "huggingface_hub": 178, "huh": 128, "human": [0, 38, 39, 57, 89, 98, 116, 117, 128, 129, 137, 138, 141, 143, 170, 178, 199, 207], "human_input": 117, "human_message_prompt": [127, 129, 143], "human_message_prompt_combin": 143, "human_message_prompt_map": [141, 143], "human_templ": [127, 129, 141, 143], "humanmessag": [116, 117, 129, 133, 135, 137, 143], "humanmessageprompttempl": [116, 117, 127, 129, 133, 141, 143], "humili": 128, "hun": 117, "hundr": [38, 95, 128, 169, 200], "hung": 128, "hungari": 189, "hungri": [44, 175], "hunt": [40, 57, 74, 94, 177], "huntail": 166, "hunter": 128, "husband": [128, 143], "hush": 128, "husl": [187, 196], "hustl": 141, "huyen": 178, "hwc": [172, 173], "hwchase17": 138, "hybrid": [131, 177, 195], "hydreigon": 166, "hyperbol": 82, "hyperparamat": 208, "hyperparamet": [170, 171, 172, 174, 176, 177, 180], "hypno": 166, "hypot": [80, 82], "hypothesi": 7, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 49, 51, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 107, 109, 110, 111, 113, 118, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 148, 149, 150, 151, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 170, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 207], "i1": 31, "i2": 31, "i3": 31, "i9": 178, "i_1": 31, "i_2": 31, "i_3": 31, "i_m": 31, "i_n": 31, "i_num": 72, "ia": [37, 184], "iat": 155, "ibm": [52, 128], "ic": [9, 128, 135, 166], "icefir": [190, 192, 193, 194, 195, 198, 199, 200], "icefire_r": 190, "iceland": [11, 13, 71], "ici": 128, "icon": [24, 177, 208], "id": [43, 74, 77, 80, 96, 102, 116, 117, 131, 135, 136, 145, 165, 169, 174, 184, 185, 196, 197, 198], "id_var": [194, 200], "idd": 117, "idea": [28, 29, 34, 35, 85, 89, 94, 96, 106, 117, 126, 128, 130, 131, 134, 138, 139, 141, 143, 170, 171, 172, 174, 175, 176, 177, 178, 190, 192, 193, 194, 198, 199, 200], "ideal": [48, 133, 142, 170, 171, 172, 175, 176, 177, 178, 184, 185, 187, 192, 195, 196, 198, 199], "idel": 128, "ident": [28, 29, 128, 135, 136, 148, 149, 151, 155, 165, 189, 196, 197, 199], "identif": 8, "identifi": [0, 7, 22, 37, 39, 52, 57, 71, 74, 79, 80, 83, 89, 90, 95, 96, 100, 101, 116, 128, 135, 136, 138, 139, 155, 156, 157, 160, 162, 164, 172, 178, 196, 198], "identitytransform": 193, "ideologi": 177, "idual": 177, "idx": [173, 177], "idx1": 172, "idx3": 172, "ieee754_realbin": 30, "ifetch": 194, "ifram": 178, "igglybuff": 166, "igma": 29, "ignor": [47, 48, 49, 84, 89, 128, 130, 136, 159, 162, 170, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "ignore_index": [160, 161], "igor": 174, "ii": [25, 107, 111, 128, 188], "iii": 184, "iinfo": 153, "ij": [28, 29, 31], "ill": [90, 128], "illeg": [70, 89], "illumin": 187, "illumis": 166, "illustr": [3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 35, 47, 48, 56, 71, 72, 85, 94, 106, 128, 173, 177, 184, 185, 186, 193, 195, 199, 200], "iloc": [117, 155, 166], "imag": [0, 4, 5, 7, 9, 16, 17, 18, 19, 24, 25, 68, 78, 91, 102, 107, 111, 117, 128, 138, 169, 170, 171, 172, 174, 179, 180, 182, 185, 187, 189, 198, 199, 200], "image01": [173, 174, 180], "image02": 173, "image101": 173, "image102": 173, "image154": 173, "image155": 173, "image167": 173, "image24": 173, "image25": 173, "image37": 173, "image_batch": 177, "image_class": 173, "image_conv_feature_map": 177, "image_out_of_conv": 177, "image_out_of_conv_flatten": 177, "image_out_of_conv_flattened_reshap": 177, "image_patch_1": 177, "image_patch_1_posit": 177, "image_patch_2": 177, "image_patch_2_posit": 177, "image_patch_3": 177, "image_patch_3_posit": 177, "image_path": [173, 174, 175, 176, 177, 178, 179, 180], "image_path_list": 173, "image_permut": 177, "image_resolut": 177, "image_s": [16, 17, 18, 19, 175, 176], "image_transform": 175, "imageclassif": [175, 176, 177, 178], "imagefold": [174, 179, 180], "imagefoldercustom": 173, "imagenet": [171, 173, 175, 176, 177, 178], "imagenet1k_v1": 175, "imagenet_v1": 175, "imagenet_v2": 175, "imageri": 138, "imagin": [39, 96, 128, 131, 137, 155, 170, 171, 172, 176, 177, 178], "imaginari": [51, 56, 70, 91, 92, 153, 188], "imbal": 186, "imdisk": 69, "img": [69, 172, 173, 175, 178, 179, 180, 189], "img_as_arrai": 173, "img_batch": [173, 179, 180], "img_custom": 173, "img_permut": 173, "img_singl": [173, 179, 180], "img_siz": 177, "imgseek": 24, "imit": [12, 128], "immedi": [35, 44, 47, 48, 65, 66, 71, 74, 87, 106, 128, 177, 178, 184, 208], "immens": [139, 186], "immers": 141, "immut": [47, 52, 53, 54, 55, 56, 74, 91, 92, 152], "imp": 80, "impa": 142, "impact": [116, 117, 138, 141, 188, 193], "imperfect": 51, "implement": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 36, 37, 38, 49, 51, 53, 54, 72, 74, 80, 89, 98, 101, 103, 104, 106, 125, 128, 142, 143, 151, 169, 170, 171, 172, 175, 177, 188, 189, 190, 200, 207, 208], "impli": [52, 53, 68, 69, 89, 95, 128], "implic": [128, 142, 193], "implicit": [52, 106, 138], "implicitli": [51, 89, 106, 128, 167], "import": [0, 1, 22, 24, 25, 27, 28, 29, 30, 31, 32, 37, 39, 42, 48, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 79, 81, 82, 84, 88, 89, 90, 92, 96, 98, 100, 101, 106, 107, 111, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "import_ipynb": 80, "importantli": 172, "importerror": 70, "importlib": 80, "imposs": [94, 132, 177, 178, 195], "impress": [116, 128, 138, 141], "improp": 70, "improv": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 74, 117, 130, 131, 138, 139, 142, 155, 164, 169, 170, 172, 173, 175, 176, 177, 178, 207], "impur": 128, "imshow": [16, 17, 18, 19, 172, 173, 175, 177], "in_channel": [172, 173, 174, 177, 179, 180], "in_featur": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "inan": 195, "inbox": [126, 128, 131], "inbuilt": [91, 152, 159], "inc": 37, "incas": 169, "inch": [128, 145], "incid": [184, 196], "incit": 128, "includ": [6, 24, 25, 34, 39, 44, 47, 48, 49, 52, 53, 68, 71, 80, 84, 85, 87, 92, 98, 102, 106, 107, 109, 111, 116, 117, 125, 126, 127, 128, 130, 131, 138, 139, 141, 142, 143, 146, 149, 152, 155, 156, 167, 170, 172, 173, 174, 175, 177, 178, 179, 180, 184, 185, 190, 194, 200, 201, 205, 208], "inclus": [80, 81, 149, 155, 187], "incom": [68, 77, 101, 117, 133, 189], "incompat": 177, "incomplet": 89, "inconsist": [70, 169], "incorpor": [128, 129, 172, 173, 176, 177, 185], "incorport": 129, "incorrect": [44, 48, 70, 89, 98, 116, 117, 178], "increas": [7, 11, 12, 13, 14, 15, 16, 17, 48, 49, 53, 89, 130, 131, 135, 136, 141, 142, 171, 172, 173, 175, 176, 177, 178, 187, 189, 193, 194, 197, 198, 200], "incred": [138, 176], "incredibli": 127, "increment": [47, 48, 49, 76, 104], "ind": 53, "inde": [128, 193, 194, 195, 196, 200], "indefinit": 48, "indent": [22, 43, 44, 46, 47, 49, 68, 70, 74, 76, 100, 135, 136], "indentationerror": [70, 89], "independ": [4, 5, 12, 14, 15, 16, 17, 98, 117, 126, 128, 139, 185, 188, 196, 197], "index": [3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 28, 29, 30, 35, 39, 48, 52, 55, 56, 65, 70, 71, 80, 92, 94, 131, 132, 134, 141, 148, 149, 166, 167, 170, 171, 172, 173, 175, 176, 177, 178, 189, 196, 198, 199, 200], "index1": 156, "index2": 156, "index_nam": [132, 141], "index_on": 155, "indexerror": [52, 53, 54], "indi": 117, "india": [37, 53, 54, 57, 68, 135, 138], "indianr": 191, "indic": [1, 8, 12, 16, 17, 18, 19, 43, 52, 53, 54, 65, 68, 70, 89, 128, 130, 150, 159, 160, 163, 170, 174, 175, 176, 177, 178, 179, 180, 184, 188, 190, 192, 194, 195, 196, 198], "indirect": 103, "indirectli": 72, "individu": [52, 55, 68, 80, 128, 136, 138, 141, 150, 171, 174, 177, 186, 190, 192, 194, 195, 196, 197, 198, 199, 201], "indivis": 198, "indonesia": [54, 68], "indulg": 116, "industri": [0, 128, 131, 133, 141, 142, 156, 157, 169], "ineff": 128, "ineffici": [47, 78], "inexpens": 128, "inexplic": 134, "inf": [34, 80, 151, 153, 193], "infam": 177, "infer": [90, 131, 137, 141, 152, 155, 156, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 189, 193, 195, 197, 198, 199, 200], "inference_mod": [171, 172, 173, 174, 175, 178, 179, 180], "inferior": 128, "infernap": 166, "inferno": 190, "inferno_r": 190, "infin": [27, 28, 29, 82, 151, 153], "infinit": [28, 29, 48, 51, 66, 78, 95, 169, 172, 175], "infit": 34, "inflow": 128, "influenc": [128, 136, 171, 178], "influenti": 176, "info": [18, 19, 84, 102, 103, 106, 131, 153, 174, 175, 176, 177, 178, 179, 180, 191], "inform": [0, 6, 8, 25, 45, 59, 68, 69, 71, 76, 90, 106, 107, 109, 111, 116, 117, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 155, 156, 172, 173, 175, 176, 177, 178, 192, 194, 196, 197, 198, 199, 200, 205], "informatin": 117, "infrastructur": 128, "infti": [27, 28, 29, 30], "ing": 39, "ingredi": [116, 171, 173], "inher": [0, 187], "inheret": 176, "inherit": [22, 71, 72, 105, 106, 173, 177], "inhomogen": 150, "inimit": 128, "init": [6, 8, 106, 109, 116, 130, 132, 141, 176, 205], "init_notebook_mod": 11, "initi": [3, 11, 12, 13, 18, 19, 34, 35, 47, 48, 49, 52, 53, 56, 68, 75, 81, 83, 90, 96, 101, 102, 103, 106, 117, 128, 130, 131, 132, 141, 148, 149, 161, 170, 171, 173, 177, 188, 191, 199, 200], "initialize_ag": [116, 117, 125, 126, 130], "initialzi": 170, "inkai": 166, "inlcud": 177, "inlin": [11, 27, 30, 79, 112, 145, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "inmemorystor": 131, "inner": [2, 7, 36, 37, 47, 48, 49, 75, 130, 151, 155, 169, 193, 194, 195], "inner_arg": 193, "inner_f": 193, "inner_fun": 75, "inner_func": 96, "inner_funct": 96, "inner_kwarg": 193, "innermost": [48, 49], "innov": [117, 138, 142], "innumer": 128, "inplac": [155, 159, 160, 161, 162, 164, 165, 166, 175, 176, 177, 178, 196], "input": [0, 4, 5, 7, 11, 13, 17, 18, 19, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 85, 88, 90, 91, 92, 93, 95, 98, 101, 102, 103, 104, 106, 108, 112, 116, 117, 125, 126, 128, 133, 136, 137, 138, 150, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 173, 174, 175, 176, 179, 180, 182, 188, 192, 193, 194, 198, 199, 200, 201], "input_docu": [128, 132, 139, 141, 142, 143], "input_featur": 171, "input_formatt": 136, "input_i": 171, "input_industri": 133, "input_kei": [117, 128], "input_list": 128, "input_param_nam": 13, "input_param_name_1": 11, "input_param_name_2": 11, "input_s": [173, 175, 176, 177, 178], "input_shap": [172, 173, 174, 175, 176, 179, 180], "input_to_model": 176, "input_vari": [116, 117, 129, 130, 131, 133, 138, 139, 142], "inputsid": 103, "insan": [116, 117, 128], "insert": [52, 55, 56, 84, 102, 116, 117, 126, 139, 148, 156, 165], "insid": [34, 36, 37, 38, 39, 40, 43, 44, 46, 49, 52, 53, 54, 55, 56, 57, 66, 68, 69, 71, 74, 75, 76, 77, 80, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 101, 102, 103, 104, 106, 128, 141, 143, 155, 169, 170, 172, 174, 175, 176, 177, 178, 180, 189, 194, 195, 196, 197, 200], "insight": [0, 128, 138, 139, 141, 142, 189, 193, 194, 196], "inspect": [106, 162, 170, 172, 173, 176, 177], "inspir": [7, 18, 19, 56, 128, 138, 141, 177], "insrantli": 24, "inst_creat": 106, "insta": 150, "instacart": 142, "instagraminstagram": 139, "instal": [68, 80, 87, 116, 125, 130, 131, 132, 134, 137, 142, 169, 171, 172, 173, 175, 176, 177, 178, 186], "instanc": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 37, 47, 51, 53, 61, 68, 70, 71, 80, 84, 89, 90, 92, 96, 103, 106, 128, 151, 152, 155, 162, 163, 170, 171, 172, 173, 174, 177, 178, 179, 180, 192, 195, 200, 201], "instant": 79, "instanti": [51, 59, 101, 102, 106, 117, 170, 171, 172, 174, 176, 177, 178, 179, 180], "instantli": 49, "instead": [7, 9, 16, 17, 18, 19, 24, 35, 36, 38, 40, 44, 48, 70, 80, 90, 98, 101, 102, 103, 104, 128, 129, 131, 132, 139, 151, 155, 157, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 184, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200], "instens": 173, "instinct": 128, "institut": [128, 172], "instruct": [0, 6, 43, 66, 71, 89, 109, 117, 126, 130, 135, 136, 137, 141, 142, 143, 174, 185, 204, 205], "insur": 131, "int": [16, 17, 18, 19, 24, 34, 36, 37, 47, 48, 51, 52, 53, 54, 70, 71, 72, 84, 91, 92, 93, 94, 95, 102, 103, 116, 135, 145, 161, 162, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "int32": [149, 151, 152], "int64": [18, 19, 149, 152, 155, 156, 166, 167, 171, 178], "int8": [169, 175], "int_": 27, "int_1": 91, "int_2": 91, "intact": [128, 188], "intead": 117, "integ": [43, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 59, 68, 71, 74, 78, 80, 81, 82, 84, 89, 91, 92, 93, 95, 137, 148, 149, 155, 156, 157, 169, 171, 173, 174, 176, 179, 180], "integr": [116, 117, 125, 128, 174, 176], "intel": [98, 128, 178], "intellectu": 128, "intellig": [128, 138, 139, 169, 172, 188, 196, 207], "intellij": 185, "intend": [9, 17, 19, 128, 189, 200], "intens": [128, 138, 173, 188], "intent": [84, 116, 126, 188, 196], "inter": [194, 196, 197], "interac": 178, "interact": [0, 7, 11, 23, 24, 25, 35, 68, 80, 87, 94, 102, 107, 111, 116, 128, 129, 141, 142, 155, 169, 176, 178, 185], "intercept": [57, 95, 186], "intercept_stderr": 186, "interchang": [155, 169, 193], "interest": [0, 35, 37, 39, 71, 96, 102, 128, 130, 134, 139, 141, 143, 161, 170, 177, 180, 185, 186, 187, 195, 196, 197, 198, 199], "interfac": [24, 38, 71, 101, 117, 125, 128, 137, 185, 187], "interg": 93, "interleaf": 128, "intermedi": 98, "intermediari": [98, 177], "intermediate_step": [126, 128], "intern": [34, 35, 38, 49, 52, 53, 68, 70, 77, 81, 101, 102, 104, 128, 156, 170, 171, 172, 187], "internal_job_id": [135, 136], "internet": [24, 125, 128, 138, 178, 190], "interp": 153, "interpol": [173, 175, 176, 177, 178, 179, 180, 189, 198], "interpolationmod": [173, 175, 176, 177, 178], "interpret": [22, 24, 35, 39, 43, 47, 48, 49, 52, 70, 71, 74, 77, 78, 80, 84, 87, 88, 89, 93, 94, 95, 96, 100, 128, 171, 173, 188, 196, 197, 198, 199], "interquartil": 195, "interrelationship": 200, "interrupt": 70, "intersect": [47, 92], "intersect1d": 153, "intersection_upd": 56, "interspers": 171, "interst": 130, "interv": [5, 14, 15, 16, 17, 27, 28, 29, 128, 145, 148, 152, 185, 188, 190, 192, 194, 195, 196, 197, 198], "intervent": 207, "interview": [128, 142, 198, 207], "intim": 128, "intimid": [177, 178], "intiuit": 24, "intothinairbook": 130, "intrigu": [0, 184], "intrins": [184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "intro": [40, 128, 135, 136, 204], "introduc": [7, 38, 52, 87, 141, 170, 171, 172, 176, 177, 194, 195, 199, 200], "introduct": [2, 52, 117, 126, 171, 172, 176, 177, 207], "introductori": 189, "intrud": 172, "intuit": [8, 23, 38, 155, 170, 172, 173, 176, 192], "inuit": 138, "inv": [31, 148], "invalid": [15, 46, 52, 70, 71, 80, 88, 90, 93, 94, 151], "invalidrequesterror": 128, "invent": [116, 128], "inventor": 47, "inventori": 135, "invers": [26, 49, 65, 82, 130, 148, 151], "invert": [31, 39], "invest": [128, 131, 139, 141, 142, 196], "investig": [171, 176], "investor": [128, 131, 139, 142], "invis": 195, "invit": [128, 141, 143], "invitingli": 128, "invoc": [79, 188], "invok": [37, 57, 102, 104], "involv": [0, 51, 93, 95, 103, 128, 138, 142, 143, 169, 170, 171, 172, 173, 174, 177, 178, 184, 189, 192, 194, 198, 207], "io": [132, 135, 136, 141, 171, 172, 173, 174, 178, 179, 180, 182], "ioerror": 71, "ion": [25, 107, 111], "iot": 208, "ip": [141, 198], "ipad": 117, "iphon": 117, "iplot": 11, "ipo": 131, "ipod": 117, "ipykernel_28927": 126, "ipykernel_3695928": 169, "ipykernel_4303": 128, "ipynb": [20, 24, 69, 80, 108, 112, 169, 173, 176, 178, 181], "ipynb_checkpoint": [69, 178], "ipython": [24, 34, 35, 36, 37, 38, 40, 48, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 88, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 117, 141, 143, 150, 151, 159, 162, 164, 167, 172, 178, 185, 187, 189, 193, 198], "iqr": 194, "ireland": 189, "iri": [3, 5, 10, 14, 145, 184, 187, 189, 190, 192, 193, 194, 202], "iris_data": [145, 202], "iris_typ": [10, 14], "iron": 34, "ironi": 138, "irrespect": 49, "irrespons": 128, "is_avail": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "is_cal": 37, "is_dir": [173, 174, 175, 176, 179, 180], "is_empti": 74, "is_even": [37, 74], "is_explicit_retri": 128, "is_fil": [171, 172, 173, 175, 176, 177], "is_light_on": 90, "is_mar": [45, 47], "is_marri": 90, "is_name_long": 37, "is_odd": 37, "is_prim": 74, "is_return": 37, "is_uniqu": 164, "is_valid_vari": 39, "isalnum": 52, "isalpha": [48, 52], "isatti": 68, "isclos": [80, 172], "isdecim": [48, 52], "isdigit": 52, "isdisjoint": 56, "isfinit": [80, 82], "ish": 130, "ishan": 139, "isidentifi": 52, "isin": [194, 196], "isinf": [80, 82], "isinst": [51, 92, 102, 103, 128], "isl": 116, "island": [37, 131], "islow": 52, "isn": [7, 18, 19, 127, 128, 130, 136, 138, 141, 142, 155, 162, 169, 170, 172, 173, 174, 176, 177, 178, 180, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "isnan": [80, 82], "isnul": 155, "isnumer": 52, "iso": 126, "isol": [24, 96, 128], "isotrop": [28, 29], "isprint": 52, "isqrt": 80, "isspac": [49, 52], "issu": [5, 51, 57, 76, 130, 136, 138, 143, 146, 169, 170, 171, 172, 173, 178, 187, 195, 199], "issubset": 56, "issuecom": 178, "issuperset": 56, "istitl": 52, "isupp": 52, "isuzu": 167, "ita": 117, "ital": 170, "itali": 117, "italian": 128, "item": [8, 11, 13, 16, 17, 18, 19, 34, 35, 37, 39, 40, 47, 48, 52, 56, 57, 70, 71, 74, 79, 80, 84, 92, 102, 116, 117, 128, 135, 136, 138, 140, 142, 148, 156, 159, 169, 170, 171, 172, 173, 174, 176, 178, 179, 180, 196], "items": [149, 152, 153], "iter": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 35, 37, 41, 49, 57, 70, 78, 80, 82, 94, 97, 117, 126, 128, 138, 141, 142, 156, 172, 173, 174, 176, 177, 178, 179, 180, 185, 196, 198, 200], "iter_obj": 34, "iteract": 178, "iterrow": [139, 155, 166, 178], "itertool": 190, "its": [0, 1, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 59, 60, 61, 68, 74, 75, 77, 80, 84, 92, 95, 96, 98, 101, 102, 103, 106, 117, 125, 128, 130, 131, 132, 134, 135, 136, 138, 141, 142, 143, 155, 156, 157, 158, 159, 161, 163, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 189, 193, 194, 195, 200, 201, 202], "itself": [7, 18, 19, 34, 36, 38, 47, 52, 54, 55, 56, 68, 72, 74, 78, 98, 101, 102, 103, 106, 117, 128, 131, 134, 169, 170, 177, 188, 195, 196, 199, 207], "iv": 39, "ivan": 77, "ivysaur": 166, "j": [4, 5, 7, 28, 29, 30, 37, 47, 48, 49, 52, 53, 60, 61, 68, 90, 91, 102, 117, 148, 149, 156, 177, 186, 199], "jab": 132, "jack": 158, "jaguar": 167, "jai": 177, "jaltma": 138, "jam": [52, 131], "jan": [60, 61, 87, 169, 184], "jane": [102, 158], "januari": [39, 45, 49, 59, 60, 61, 64, 65, 116, 128, 130, 132, 134], "japan": [68, 167], "japanesecar": 167, "jargon": 95, "jason": 93, "java": [22, 47, 48, 52, 53, 55, 68, 89, 101, 106, 136], "javascrip": 68, "javascript": [39, 52, 57, 68, 71, 98, 101, 116, 117], "jeep": 136, "jellic": 166, "jenner": 47, "jeremi": [170, 175], "jerryjliu": 116, "jessica": 128, "jet": [187, 190], "jet_r": 190, "jetbrain": 185, "jft": 177, "jigglypuff": 166, "jill": 158, "jirachi": 166, "jit": [172, 173], "jitter": [193, 198], "jlufe": 55, "jo": [8, 39, 178], "job": [0, 39, 52, 98, 116, 117, 128, 131, 139, 141, 142, 169, 187, 188, 192, 195, 199], "job_descript": [135, 136], "job_id": [135, 136], "job_index": [135, 136], "joe": [136, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 184], "joei": 116, "john": [28, 54, 77, 128, 134, 145, 184, 198], "joi": 132, "join": [30, 52, 53, 54, 56, 68, 94, 116, 117, 130, 133, 138, 141, 142, 143, 176, 177, 178, 195], "joined_df": 155, "joint": [188, 197, 203], "jointgrid": [189, 191], "jointplot": [189, 190], "joke": [116, 117, 128], "jokingli": 128, "jolteon": 166, "joltik": 166, "jose": 158, "journal": 188, "journei": [117, 128, 176, 188, 200, 208], "jpeg": [173, 174, 175, 176, 177, 178, 180], "jpg": [173, 175, 176, 178], "jpn": 117, "jr": [145, 166], "json": [24, 80, 116, 117, 126, 133, 135, 136, 137, 138, 155], "json_exampl": 68, "json_str": [133, 155], "jude": 39, "judg": 117, "judgment": 116, "judson": 116, "juic": 91, "juicebox": 139, "jul": 87, "juli": [45, 128, 131, 177, 178], "julian": 128, "jumbl": [171, 188], "jump": [27, 49, 52, 131, 135, 136, 138, 141, 177, 188, 194, 196, 200], "jumpluff": 166, "jun": [60, 62, 87], "jun21_00": 176, "june": [45, 49, 59, 60, 61, 62, 65, 128, 176, 186], "junior": 128, "jupyt": [6, 9, 20, 22, 25, 70, 94, 107, 108, 109, 111, 112, 116, 132, 173, 174, 176, 179, 180, 185, 187, 204, 205, 207, 208], "jupytext": [6, 109, 205], "just": [5, 9, 16, 17, 18, 19, 34, 35, 37, 49, 52, 79, 83, 84, 87, 89, 92, 94, 106, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 155, 157, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "justcount": 102, "justifi": [52, 94], "justin": [128, 139], "juventu": 145, "jvm": 98, "jynx": 166, "k": [2, 28, 29, 32, 47, 48, 52, 81, 116, 128, 130, 131, 140, 141, 145, 146, 172, 173, 175, 176, 177, 178, 184, 186, 187, 192, 193], "k_depth": 198, "k_mean": 10, "kabuto": 166, "kabutop": 166, "kadabra": 166, "kaggl": [9, 197], "kakuna": 166, "kamradt": 126, "kan": 128, "kanban": 139, "kangaskhan": 166, "kangaskhanmega": 166, "kappa": 81, "kapur": 5, "karen": 198, "karpathi": 169, "karrablast": 166, "kate": 54, "kb": [80, 172], "kcsy2": 80, "kde": [186, 189, 191, 195, 199], "kdeplot": [187, 189, 190, 199, 200], "kecleon": 166, "keen": [37, 197], "keenli": 128, "keep": [4, 5, 25, 27, 35, 39, 48, 77, 83, 102, 107, 111, 116, 128, 130, 131, 132, 135, 136, 137, 138, 140, 156, 161, 169, 171, 172, 173, 175, 176, 177, 178, 184, 186, 187, 188, 189, 195, 196, 197, 198, 199, 200], "keepdim": 153, "kei": [37, 40, 42, 45, 47, 53, 54, 56, 70, 71, 89, 91, 92, 95, 116, 117, 128, 130, 131, 132, 134, 135, 136, 138, 141, 142, 143, 155, 157, 162, 164, 167, 170, 171, 173, 174, 176, 177, 178, 179, 180, 190, 199], "keldeoordinari": 166, "keldeoresolut": 166, "kenel": 191, "kenneth": [184, 187], "kenya": 138, "kept": [83, 128, 130, 170, 172, 177, 187], "kera": [178, 207], "kernel": [6, 24, 109, 172, 177, 185, 187, 190, 191, 195, 198, 205], "kernel_density_estim": 191, "kernel_list": 191, "kernel_s": [172, 173, 174, 177, 179, 180], "kevin": [117, 128], "keyboard": 22, "keyboardinterrupt": [48, 66, 70, 71, 126, 128], "keyerror": [55, 56, 158, 159, 162, 164], "keystrok": 128, "keyword": [22, 36, 37, 40, 43, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 71, 74, 75, 79, 80, 84, 86, 90, 94, 96, 100, 101, 102, 106, 131, 135, 136, 145, 187, 189, 198, 200], "keyword_ord": 52, "kg": 51, "kgmid": 116, "ki": 138, "kick": [128, 130], "kid": [128, 131, 132, 186], "kidnei": 128, "kilcher": 177, "kill": 200, "killer": 131, "kind": [7, 34, 35, 71, 74, 77, 89, 108, 112, 116, 117, 128, 131, 139, 143, 145, 155, 162, 163, 169, 170, 171, 172, 173, 174, 175, 177, 178, 180, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200], "kindl": 128, "kindli": 200, "king": 128, "kingdra": 166, "kingler": 166, "kingma": 177, "kirlia": 166, "kit": [117, 128, 178], "kivi": 24, "kiwi": [47, 56, 117], "klang": 166, "klefki": 166, "klink": 166, "klinklang": 166, "km": [103, 117], "kmean": [10, 130], "knew": [116, 117, 128, 137, 173], "know": [10, 23, 35, 36, 37, 38, 45, 47, 48, 49, 51, 71, 74, 77, 78, 80, 87, 90, 92, 94, 98, 103, 104, 106, 116, 117, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 143, 148, 150, 152, 158, 159, 162, 164, 169, 170, 171, 173, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208], "knowledg": [7, 72, 117, 128, 130, 134, 136, 173, 175, 198, 199], "known": [1, 8, 10, 11, 13, 24, 28, 29, 36, 47, 48, 51, 54, 55, 75, 79, 90, 93, 98, 101, 102, 104, 128, 131, 138, 151, 169, 170, 171, 172, 173, 174, 177, 178, 184, 188, 190, 192, 193, 194, 196, 198, 199, 200], "knoxvil": 184, "koehrsen": 171, "kof": 166, "kolombia": 117, "kolombiya": 117, "kolumbi": 117, "kolumbia": 117, "kolumbiai": 117, "kolumbian": 117, "kolumbien": 117, "kolumbii": 117, "kolumbija": 117, "kolumbijsk\u00e1": 117, "kool": 52, "kor": [117, 120, 135, 144], "korea": 145, "krabbi": 166, "kricketot": 166, "kricketun": 166, "kristian": 178, "krokorok": 166, "krookodil": 166, "kubernet": 136, "kw": [128, 193, 199, 200], "kwarg": [37, 41, 71, 106, 126, 128, 162, 172, 173, 190, 193, 199, 200], "kwiatkowski": 170, "kyogr": 166, "kyogreprim": 166, "kyurem": 166, "kyuremblack": 166, "kyuremwhit": 166, "k\u00f6zt\u00e1rsas\u00e1g": 117, "l": [7, 11, 27, 35, 39, 47, 48, 49, 52, 53, 54, 55, 56, 71, 79, 93, 128, 145, 170, 177, 178, 196], "l1": 171, "l1loss": [170, 171], "l2": 171, "la": 141, "la_": [25, 107, 111], "lab": [128, 139, 142], "label": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 110, 117, 145, 146, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 170, 172, 173, 175, 177, 178, 179, 180, 188, 195, 196, 198, 199, 200, 202, 204], "label_batch": [173, 177, 179, 180], "label_custom": 173, "label_dist": 191, "label_map": [17, 19], "label_out": 177, "label_singl": [173, 179, 180], "label_smooth": 178, "labelbottom": [16, 17, 18, 19], "labelleft": [16, 17, 18, 19], "labels": 178, "labels_": 130, "labl": [155, 171], "labour": 189, "lack": [0, 128, 143, 175], "laden": 128, "laet": [17, 19], "lai": 128, "lair": 128, "lairon": 166, "lake": 128, "lam": 192, "lambd": 81, "lambda": [27, 30, 35, 37, 88, 128, 138, 142, 155, 195], "lame": 128, "lampent": 166, "lampi\u00e3o": 30, "lanc": 117, "land": [37, 115, 128], "landladi": 128, "landlock": 117, "landmark": 134, "landorusincarn": 166, "landorustherian": 166, "landscap": [128, 142], "lane": 172, "langchain": [125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 207], "langchainai": 127, "langchaintest": 132, "langsmithhub": 116, "languag": [22, 24, 37, 38, 39, 47, 48, 49, 52, 53, 55, 57, 68, 70, 74, 87, 88, 89, 90, 94, 95, 101, 102, 106, 108, 112, 117, 125, 127, 128, 130, 131, 134, 135, 136, 137, 138, 139, 142, 169, 172, 175, 177, 199, 207], "lanturn": 166, "laod": 202, "lapra": 166, "larg": [0, 24, 27, 28, 29, 30, 31, 32, 35, 53, 69, 70, 72, 80, 85, 95, 98, 128, 129, 130, 131, 142, 145, 146, 149, 151, 155, 158, 165, 167, 169, 170, 172, 173, 175, 176, 177, 178, 185, 186, 193, 194, 198], "larger": [24, 36, 74, 83, 93, 98, 127, 128, 131, 151, 169, 170, 172, 173, 174, 175, 176, 177, 178, 198], "larger_chunk_relevant_doc": 131, "largest": [56, 80, 82, 117, 141, 169, 177, 178], "lark": 131, "larvesta": 166, "larvitar": 166, "last": [7, 24, 34, 35, 36, 37, 38, 40, 47, 48, 49, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 84, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 116, 126, 128, 131, 132, 138, 142, 143, 150, 151, 152, 155, 162, 164, 165, 169, 172, 173, 176, 177, 178, 185, 189, 190, 193, 195, 196, 198, 200], "last_index": [52, 159], "last_lett": 52, "last_nam": [37, 45, 47, 52, 55, 74, 90], "last_nm": 77, "lastli": [68, 194, 196, 200], "lastnam": [40, 74, 77, 90, 94, 101], "late": [128, 142, 184, 186], "latenc": [1, 8, 9, 141, 172, 178], "latency_from": 8, "latency_grid": 8, "latency_rang": 8, "latency_to": 8, "latent": [177, 197], "later": [35, 38, 49, 72, 84, 89, 90, 94, 95, 102, 116, 117, 128, 131, 132, 138, 141, 142, 143, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 188, 190, 192, 193, 194, 197, 200], "latest": [24, 116, 117, 126, 130, 131, 134, 137, 139, 169, 173, 175, 176, 177, 178, 186, 198], "latex": 177, "latia": 166, "latiasmega": 166, "latin": 128, "latio": 166, "latiosmega": 166, "latitud": 198, "latlng": 117, "latter": [103, 128, 169, 176], "lattic": 199, "latvia": 189, "lauder": 138, "launch": [24, 128, 139, 141, 176, 178], "lavish": 128, "lavishli": 128, "law": [128, 130, 131], "layer": [0, 7, 101, 125, 131, 169, 170, 171, 172, 173, 174, 178, 179, 180], "layer_1": 171, "layer_2": 171, "layer_3": 171, "layer_norm": 177, "layer_numb": [18, 19], "layer_stack": 172, "layout": [11, 128, 174, 178, 180, 200], "lazi": [35, 47], "lb": 145, "lc": [116, 117], "ldexp": [80, 82], "ldot": [52, 177], "lead": [52, 70, 80, 116, 117, 128, 130, 141, 171, 172, 175, 176, 177], "leader": 117, "leadership": 143, "leaf": 128, "leafeon": 166, "leap": 197, "learn": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 34, 35, 36, 38, 39, 40, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 115, 117, 128, 131, 134, 138, 139, 141, 142, 143, 146, 148, 155, 157, 158, 160, 162, 163, 164, 165, 167, 171, 172, 173, 174, 179, 180, 182, 183, 184, 188, 189, 190, 194, 196, 197, 198, 199, 200, 201], "learnabl": [176, 177], "learnable_embed": 177, "learner": [135, 136, 169, 176], "learning_r": [11, 12, 13, 174, 180], "learnpytorch": 182, "learnt": [18, 19, 192, 193, 194, 198, 200], "least": [7, 18, 19, 24, 35, 39, 53, 55, 66, 89, 96, 102, 106, 128, 130, 132, 138, 151, 171, 172, 173, 175, 177, 178, 186, 189, 190, 192, 193, 194, 196, 198], "leather": 128, "leav": [48, 56, 117, 128, 131, 142, 170, 171, 172, 173, 175, 176, 178, 190, 192, 193, 195, 196, 198, 200], "leavanni": 166, "lectur": [52, 139, 172, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "lecun": 177, "led": [116, 131, 138, 141], "ledft": 186, "ledian": 166, "ledyba": 166, "lee": [128, 145, 184], "left": [16, 17, 18, 19, 27, 28, 30, 32, 34, 39, 47, 52, 60, 61, 63, 83, 94, 95, 103, 104, 128, 131, 145, 146, 150, 155, 171, 172, 173, 175, 176, 177, 178, 185, 186, 189, 193, 195, 196, 197], "leftov": [128, 172], "leg": [55, 103], "legal": [117, 128, 133, 141, 143], "legandari": 166, "legend": [8, 10, 13, 14, 15, 16, 17, 25, 107, 111, 145, 146, 170, 173, 178, 188, 190, 193, 195, 196, 197, 198, 199, 200], "legend_": 193, "legend_el": 178, "legend_out": [188, 197, 200], "legendari": 166, "legit": 128, "lego": [170, 177], "leisur": 138, "lembk": 184, "lemon": [47, 71], "len": [14, 15, 16, 17, 18, 19, 28, 29, 30, 35, 37, 47, 48, 49, 52, 56, 57, 61, 90, 95, 116, 117, 126, 128, 130, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 148, 159, 162, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "lenght": 130, "length": [9, 10, 14, 35, 39, 40, 47, 51, 52, 53, 56, 81, 90, 92, 95, 101, 103, 116, 128, 130, 145, 148, 151, 155, 162, 164, 166, 167, 171, 172, 173, 175, 176, 177, 178, 179, 180, 184, 186, 188, 189, 192, 196, 200], "length_1": 178, "length_2": 178, "lengthi": [35, 83, 195], "leq": 27, "lesli": 184, "less": [8, 11, 13, 35, 43, 44, 45, 48, 49, 57, 66, 72, 82, 95, 98, 104, 116, 127, 128, 131, 135, 136, 138, 141, 155, 169, 170, 171, 173, 175, 176, 177, 178, 188, 199], "lesser": [44, 155], "lesson": [128, 131, 141, 142, 155, 175, 176], "let": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 56, 57, 59, 65, 66, 68, 70, 71, 74, 75, 76, 78, 79, 80, 84, 93, 94, 95, 96, 101, 102, 103, 104, 106, 109, 116, 117, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 149, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205], "letter": [28, 29, 37, 39, 47, 48, 49, 52, 56, 57, 70, 80, 88, 90, 117, 128, 169], "lettervalu": [197, 203], "level": [5, 8, 14, 15, 16, 17, 22, 24, 46, 51, 83, 115, 117, 120, 125, 128, 139, 141, 143, 145, 155, 156, 158, 159, 164, 172, 173, 176, 178, 180, 184, 185, 187, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "level_0": 156, "level_index": 159, "levelsio": 138, "leverag": [137, 142, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 198], "lewi": 184, "lex": 175, "lf": 178, "lfloor": 95, "lg_doc": 128, "lg_loader": 128, "lgamma": [80, 82], "li": [26, 117, 128], "lib": [52, 61, 80, 116, 117, 126, 128, 130, 131, 132, 153, 159, 162, 163, 164, 169, 172, 173, 184, 187, 191, 193], "librari": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 52, 82, 85, 89, 116, 117, 129, 130, 136, 139, 141, 146, 148, 155, 156, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 207, 208], "licens": [24, 139, 155, 166, 167, 178], "lichen": 117, "lichtenstein": 128, "lickilicki": 166, "lickitung": 166, "lie": [106, 128], "liepard": 166, "life": [11, 13, 23, 75, 125, 128, 130, 131, 132, 134, 138, 141, 143, 177, 199, 208], "lifecycl": 176, "lifelong": [135, 136], "lifestyl": 128, "light": [128, 138, 145, 176, 177, 178, 187], "light_medium": 145, "lightblu": 186, "lighter": 200, "lightest": 128, "lightli": 116, "lightn": 128, "like": [0, 1, 3, 4, 5, 6, 7, 14, 15, 16, 17, 22, 24, 31, 32, 34, 35, 37, 38, 39, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 77, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 106, 108, 109, 112, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 148, 151, 152, 155, 156, 157, 158, 159, 163, 164, 165, 166, 170, 171, 172, 174, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 208], "likelihood": 191, "likewis": [163, 165], "lileep": 166, "lili": 136, "lillig": 166, "lillipup": 166, "lim_": [27, 28, 29, 30], "limb": 128, "lime": 71, "limit": [47, 51, 72, 75, 78, 92, 104, 117, 128, 130, 131, 138, 139, 142, 169, 173, 175, 176, 177, 178, 184, 186, 192, 195, 198, 199, 200, 202], "limitless": 188, "limousin": 198, "linalg": [31, 130, 148, 151, 153], "lindayacc": 138, "line": [4, 6, 11, 12, 13, 14, 15, 16, 17, 22, 24, 25, 26, 36, 38, 39, 42, 48, 49, 52, 56, 57, 68, 70, 71, 74, 75, 77, 79, 80, 88, 91, 92, 95, 96, 98, 102, 107, 108, 109, 111, 112, 116, 117, 126, 128, 138, 143, 151, 152, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 184, 185, 186, 188, 189, 192, 193, 194, 195, 196, 198, 199, 200, 205], "line2d": [25, 107, 111], "line_count": 68, "line_kw": [188, 189], "linear": [2, 5, 7, 8, 10, 16, 17, 18, 19, 23, 57, 74, 103, 148, 169, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 192, 194, 197, 198, 200, 207], "linear1": 177, "linear2": 177, "linear_lay": [170, 177], "linear_layer_stack": 171, "linear_regress": [11, 12, 13], "linearli": [7, 18, 19, 188, 198], "linearregress": [11, 12, 13], "linearregressionmodel": 170, "linearregressionmodelv2": 170, "linearsegmentedcolormap": 187, "linecollect": 193, "linefe": 52, "lineplot": 198, "liner": 5, "linestyl": [145, 146, 196], "linetoolong": 126, "linewidth": [145, 146, 185, 186, 192, 193, 194, 195, 198, 199, 200, 201], "linez": 133, "linger": 128, "link": [24, 98, 116, 117, 127, 128, 135, 136, 138, 139, 169, 173, 174, 175, 176, 177, 178, 187, 188, 189, 197, 198, 200], "linkedin": [142, 143], "linkedinindustri": 133, "linkedinlinkedin": 139, "linoon": 166, "linregress": 186, "linregressresult": 186, "linspac": [11, 12, 13, 14, 15, 25, 107, 111, 148, 153, 185, 191, 198, 200], "linux": 68, "liquid": 129, "lisp": [128, 134], "list": [9, 10, 14, 22, 34, 35, 37, 39, 40, 51, 56, 58, 59, 68, 70, 79, 81, 82, 83, 84, 88, 89, 91, 93, 94, 95, 101, 102, 103, 104, 106, 116, 117, 126, 128, 130, 131, 133, 134, 135, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 155, 159, 161, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200], "list1": [47, 53, 74, 79, 80, 92, 140, 157], "list2": [53, 79, 140, 157], "list3": 53, "list_": 35, "list_1": 102, "list_enumer": 52, "list_nam": 53, "list_of_class_nam": 173, "list_of_cmap": 199, "list_of_hexa_color": 80, "list_of_list": [47, 57], "list_of_rgb_color": 80, "list_siz": 47, "listdir": 178, "listedcolormap": 196, "listen": [139, 141], "listliter": 89, "lit": 128, "liter": [22, 52, 60, 61, 70, 71, 77, 84, 89, 90, 93, 94, 95, 100, 138], "literatur": 138, "lithuania": 189, "litleo": 166, "littl": [8, 10, 16, 17, 18, 19, 96, 103, 116, 128, 129, 131, 132, 143, 150, 169, 171, 172, 176, 177, 178, 186, 188, 192, 193, 195, 196, 197, 199, 200], "litwick": 166, "live": [37, 45, 52, 68, 71, 95, 101, 116, 117, 128, 131, 132, 136, 138, 143, 170, 176, 177, 178], "liverpool": 200, "livestream": 177, "livingston": 128, "ljust": [30, 52, 94], "ll": [20, 35, 36, 47, 49, 51, 53, 54, 55, 56, 68, 69, 71, 74, 75, 76, 79, 83, 87, 101, 102, 108, 112, 116, 117, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 141, 142, 143, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 201], "llama": 116, "llc": 128, "llm": [117, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 143, 207], "llm3": [130, 141], "llm4": [130, 141], "llm_chain": [117, 128], "llm_output": [116, 129], "llm_prefix": 126, "llmchain": [116, 117, 128, 129, 131, 139, 143], "llmchainextractor": 131, "llmresult": 129, "lm": [187, 198, 203], "lmax": 30, "lmk": 131, "lmplot": [189, 190], "ln_layer": 177, "lo": [39, 116], "load": [68, 80, 84, 98, 116, 117, 130, 133, 134, 137, 138, 140, 141, 142, 143, 175, 177, 179, 180, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 203], "load_and_split": 117, "load_dataset": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "load_dotenv": [116, 117, 127, 129, 130, 131, 132, 135, 137, 138, 140, 141, 142], "load_ext": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 176], "load_imag": 173, "load_qa_chain": [128, 132], "load_state_dict": [170, 172, 176, 178], "load_summarize_chain": [116, 117, 128, 130, 139, 141, 142, 143], "load_tool": [116, 117, 125], "loaded_effnetb2_food101": 178, "loaded_model_0": 170, "loaded_model_1": 170, "loaded_model_1_pr": 170, "loaded_model_2": 172, "loaded_model_2_result": 172, "loaded_model_pr": 170, "loader": [117, 130, 131, 132, 134, 139, 140, 142, 173, 174, 176, 177, 179, 180], "loan": 128, "lobbi": 131, "loc": [145, 146, 152, 155, 166, 178, 193, 195, 196], "loc_var": 75, "local": [4, 5, 22, 24, 35, 36, 59, 61, 62, 63, 64, 65, 66, 70, 76, 79, 86, 96, 102, 103, 106, 116, 117, 128, 138, 141, 155, 169, 170, 172, 175, 190], "local_lang": 75, "local_tim": 65, "localtim": [63, 66], "locat": [0, 37, 39, 52, 53, 68, 70, 80, 83, 90, 94, 95, 103, 116, 117, 132, 135, 136, 137, 139, 146, 166, 171, 173, 175, 176, 178, 179, 180, 193, 194, 195, 198], "location_chain": 116, "locator_param": 186, "lock": 128, "locket": 80, "locomot": 128, "log": [69, 80, 81, 82, 127, 128, 131, 136, 148, 152, 176], "log10": [51, 80, 82], "log1p": [80, 82], "log2": [80, 82], "log_dir": 176, "logarithm": [51, 80, 82], "logdir": 176, "logger": 128, "logic": [42, 44, 78, 104, 106, 116, 138, 155, 159, 162, 173, 178, 208], "logical_and": 153, "logical_not": 153, "logist": [2, 133, 188, 189], "logistic_regress": [8, 10, 14, 15, 16, 17], "logisticregress": [14, 15, 16, 17], "logit": [172, 173, 175, 177, 178, 179, 180], "lognormvari": 81, "logo": [68, 69, 128], "logo1": 69, "logos22": 139, "logspac": [25, 107, 111], "logx": 188, "lombr": 166, "london": [37, 59, 63, 68, 71, 101, 159], "lone": 128, "long": [37, 42, 48, 49, 51, 52, 57, 88, 89, 91, 96, 106, 116, 117, 128, 130, 131, 132, 136, 138, 141, 143, 152, 170, 172, 173, 175, 176, 177, 178, 179, 180, 186, 192, 193, 208], "long_nam": 37, "longer": [11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 52, 80, 101, 128, 131, 141, 143, 170, 171, 172, 173, 175, 176, 177, 178, 191], "longest": 172, "longitud": 198, "longtensor": 171, "look": [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 36, 37, 38, 39, 42, 49, 51, 68, 70, 75, 78, 80, 83, 84, 88, 89, 93, 94, 96, 103, 104, 106, 117, 126, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 166, 169, 170, 171, 172, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "looker": [135, 136], "lookuna": 52, "lookup": [125, 155, 172], "loom": 128, "loop": [4, 22, 37, 40, 42, 50, 52, 53, 54, 55, 56, 66, 68, 71, 74, 77, 89, 94, 117, 126, 130, 142, 151, 155, 169, 174, 176, 177, 178, 179, 180, 196], "loos": [7, 116, 138], "loosen": 131, "lopunni": 166, "lopunnymega": 166, "lose": [68, 128, 131, 143, 170], "loss": [93, 130, 138, 174, 176, 179, 180, 200], "loss_fn": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "lossfunct": 173, "lost": [52, 128], "lot": [4, 5, 22, 25, 35, 47, 48, 52, 78, 80, 83, 98, 107, 111, 116, 117, 125, 128, 130, 131, 132, 133, 138, 142, 143, 150, 169, 170, 171, 172, 173, 175, 176, 177, 186, 188, 196, 198], "lotad": 166, "loud": 128, "loudr": 166, "love": [24, 37, 39, 56, 94, 116, 126, 128, 129, 130, 135, 136, 138, 139, 143, 169, 170, 178], "low": [11, 12, 13, 14, 15, 16, 17, 18, 19, 81, 116, 128, 135, 136, 141, 146, 149, 173, 189, 194, 197], "low_end": 136, "lower": [28, 29, 39, 52, 93, 125, 128, 146, 150, 151, 169, 170, 172, 173, 176, 177, 178, 186, 194, 195, 197, 198, 199], "lowercas": [39, 52, 80, 88, 90, 169], "lowess": [188, 190], "lowest": [80, 155, 169, 172, 173, 176, 194, 196], "lowland": [128, 134], "lp": 128, "lr": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "lsr": [186, 189], "lst": [36, 57, 71], "lst_one": 71, "lst_two": 71, "lstrip": 52, "lt": [135, 136], "lucario": 166, "lucariomega": 166, "lucia": 102, "lucidrain": 177, "luck": [128, 130], "lucki": 128, "luckili": [117, 177], "lucr": 0, "ludicolo": 166, "lugia": 166, "luke": [125, 195], "lumber": 128, "lumineon": 166, "lump": 194, "lunaton": 166, "lunch": [0, 128, 131, 138, 178, 188, 192, 193, 195, 200], "lure": 128, "lusti": 128, "lut": 202, "luvdisc": 166, "lux": 117, "luxembourg": [117, 189], "luxio": 166, "luxrai": 166, "luxuri": [116, 128], "lvplot": 198, "lw": [25, 107, 111, 192, 193, 196, 198, 200], "ly": 128, "m": [3, 4, 5, 8, 28, 29, 31, 39, 47, 49, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 80, 82, 87, 88, 90, 93, 94, 95, 103, 116, 117, 128, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 169, 170, 172, 173, 175, 176, 177, 178, 184, 187, 192, 194, 196, 200], "m1": [31, 169], "m2": [31, 169], "m3": 169, "m_": [28, 29, 31], "ma": [39, 116, 172], "maaan": 39, "mac": 169, "machamp": 166, "machin": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 45, 103, 115, 128, 129, 139, 169, 170, 171, 172, 173, 174, 175, 180, 188, 196, 197, 199, 200, 208], "machine_learn": 196, "machineri": 155, "machok": 166, "machop": 166, "maco": [69, 169], "macreadi": 0, "macro": 128, "macro_cas": 90, "mad": 127, "made": [39, 70, 72, 80, 96, 98, 102, 116, 117, 128, 129, 131, 137, 138, 141, 143, 170, 171, 172, 173, 174, 175, 176, 178, 198], "madrid": 145, "mae": [170, 171], "magazin": 128, "magbi": 166, "magcargo": 166, "magic": [37, 104, 117, 127, 128, 132, 134, 176, 177, 178, 180, 185], "magikarp": 166, "magma": [187, 188, 190], "magma_r": 190, "magmar": 166, "magmortar": 166, "magnemit": 166, "magnet": 198, "magneton": 166, "magnezon": 166, "magnific": 128, "magnitud": [4, 5, 32, 103, 104, 173, 188, 196], "mai": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 35, 39, 45, 49, 51, 52, 53, 54, 56, 59, 60, 66, 68, 71, 72, 74, 76, 77, 83, 87, 93, 96, 98, 101, 102, 103, 106, 116, 117, 128, 130, 131, 132, 134, 135, 136, 138, 141, 142, 143, 150, 155, 156, 157, 159, 160, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "mail": [39, 126, 153], "mailbox": 80, "main": [28, 29, 31, 39, 51, 54, 75, 76, 80, 84, 90, 101, 102, 103, 106, 116, 128, 131, 139, 169, 170, 171, 172, 174, 179, 180, 181, 182, 192, 196, 198, 201], "main1": 76, "main_tab_text": 116, "main_tag": 176, "mainfact": 117, "mainli": [47, 116, 128, 177, 180], "maintain": [85, 142, 188], "mainten": 207, "major": [8, 35, 94, 128, 171, 174, 177, 179, 180, 192, 193, 196, 197], "majorli": [155, 156, 188, 192, 193, 197, 198, 200], "make": [0, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28, 29, 35, 36, 37, 38, 39, 40, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 68, 70, 71, 72, 74, 75, 76, 78, 80, 83, 85, 88, 89, 90, 93, 94, 95, 96, 98, 101, 103, 104, 106, 107, 111, 116, 117, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 155, 156, 157, 159, 160, 162, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208], "make_blob": [171, 199], "make_circl": 171, "make_kd": 190, "make_multiplier_of": 36, "make_predict": 172, "make_pretti": 37, "make_sound": 106, "make_uppercas": 37, "makedir": 180, "maker": 117, "mako": [190, 198, 202], "mako_r": 190, "makuhita": 166, "malamar": 166, "male": [68, 101, 166, 184, 188, 191, 193, 194, 195, 196, 200], "male_dinn": 195, "male_lunch": 195, "malign": [5, 14, 15, 16, 17], "maltreat": 128, "mammal": 103, "mammalnam": 103, "mamoswin": 166, "man": [38, 39, 116, 117, 128, 138, 194, 196], "manadatori": 188, "manag": [39, 74, 80, 83, 117, 128, 129, 135, 136, 139, 170, 172, 173, 174, 175, 176, 177, 179, 180, 198], "manaphi": 166, "manchest": [101, 145], "mandatori": [54, 59, 74, 77, 89, 102, 106, 188, 192, 193, 200], "mandibuzz": 166, "manectr": 166, "manectricmega": 166, "mango": [45, 47, 53, 56, 71, 74, 91, 94, 157, 196], "manh": 30, "manhattan": 193, "manhattan_dist": 30, "mani": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 28, 29, 39, 47, 48, 49, 52, 54, 56, 68, 69, 71, 72, 80, 84, 90, 95, 101, 102, 106, 108, 109, 112, 116, 117, 128, 130, 131, 132, 136, 141, 142, 143, 145, 151, 152, 155, 160, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 186, 187, 193, 198, 199, 201, 205, 208], "manifold": 130, "manipul": [38, 52, 59, 80, 102, 128, 131, 151, 155, 165, 172, 173, 177, 200], "mankei": 166, "mann": 138, "manner": [37, 42, 47, 48, 103, 117, 130, 192, 198], "manner_of_death": 184, "mantin": 166, "mantissa": 82, "mantyk": 166, "manual": [0, 4, 5, 7, 34, 71, 72, 130, 132, 152, 170, 177, 178], "manual_se": [169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180], "manual_transform": [175, 176, 177], "manufactur": [102, 133, 172], "map": [0, 7, 17, 19, 26, 57, 89, 96, 116, 117, 133, 139, 141, 142, 143, 155, 162, 170, 171, 173, 177, 187, 189, 190, 193, 195, 199, 200, 203], "map_chain": 130, "map_datafram": 200, "map_diag": [190, 199], "map_loc": 178, "map_low": [190, 199], "map_offdiag": 199, "map_prompt": [130, 139, 141, 142, 143], "map_prompt_templ": [130, 139, 142], "map_reduc": [116, 117, 128, 130, 139, 141, 142, 143], "map_rerank": 128, "map_upp": [190, 199], "mapper": 162, "mappingmethod": 89, "mapreduc": 142, "mapreducedocumentschain": [116, 128, 139, 143], "maprerankdocumentschain": 128, "mapsto": 30, "maptplotlib": 200, "mar": [87, 126], "maractu": 166, "marathon": 128, "marc": 116, "march": [39, 45, 49, 128, 172], "marco": 128, "mareep": 166, "margin": [11, 128, 173, 189, 192], "margin_titl": [197, 200], "maria": 128, "maril": 166, "marin": [129, 143], "marit": 53, "marital_statu": 55, "mariya": 47, "mark": [42, 43, 47, 55, 74, 84, 87, 89, 94, 102, 116, 128, 145, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 191, 193, 196], "markdown": [24, 116, 117, 133, 135, 136, 142, 174, 177, 204], "markdownfil": [6, 109, 205], "markdownifi": [135, 136, 142], "markedli": [20, 108, 112], "marker": [10, 11, 69, 145, 146, 184, 188, 189, 190, 193, 194, 196, 198, 199, 200], "markeredgecolor": 145, "markerfacecolor": 146, "markers": 145, "market": [0, 101, 117, 128, 130, 131, 139, 141, 142, 143], "marketplac": [135, 139, 141], "marks_df": 155, "marks_dict": 155, "marksaroufim": 169, "markup": [108, 112, 128], "maroon": 128, "marowak": 166, "marri": [45, 90], "marshtomp": 166, "martin": 117, "martrix": 169, "martyr": 128, "marvel": 128, "mask": [159, 200], "masquerain": 166, "mass": [74, 90, 128, 155], "massachusett": 128, "massiv": [155, 158], "master": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 141], "masterstudentclass": 102, "mat": 150, "mat1": [169, 172, 173], "mat2": [169, 173], "match": [61, 77, 117, 120, 126, 128, 131, 133, 136, 139, 144, 159, 162, 164, 169, 170, 171, 173, 175, 176, 177, 178, 189, 191, 194, 195, 200], "match_replac": 39, "match_scor": 133, "matching_tone_sampl": 138, "materi": [7, 170, 174, 175, 177, 181], "matern": 138, "math": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 51, 55, 70, 86, 94, 107, 111, 116, 125, 128, 177], "mathbb": [31, 32, 177], "mathbf": [171, 177], "mathemat": [24, 28, 29, 32, 47, 56, 57, 80, 90, 95, 104, 134, 155, 171, 177, 186, 189, 194, 196, 198, 207, 208], "mathemet": 115, "mathew": 145, "mathpix": 177, "matlab": [45, 47, 68, 90, 98, 101, 150, 151], "matmul": [151, 169], "matplotlib": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 30, 107, 111, 130, 170, 171, 172, 173, 175, 176, 177, 178, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "matric": [26, 33, 151], "matrix": [7, 8, 16, 17, 18, 19, 26, 28, 29, 57, 148, 149, 150, 152, 155, 171, 176, 199, 200, 201, 202], "matrixmultipl": 169, "matruc": 151, "matter": [37, 49, 71, 74, 77, 90, 128, 131, 132, 138, 169, 173, 176, 192], "matthew": 184, "mattress": 128, "mawil": 166, "mawilemega": 166, "max": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 30, 34, 35, 56, 101, 103, 148, 151, 152, 153, 155, 167, 172, 173, 175, 178, 184, 189, 191, 192, 200], "max_inst": 106, "max_iter": [10, 14, 15, 16, 17, 18, 19], "max_pool_lay": 172, "max_pool_tensor": 172, "max_row": 155, "max_siz": [173, 176, 177, 179, 180], "max_spe": 103, "max_token": [130, 133, 135, 136], "maxim": 0, "maximum": [10, 14, 15, 16, 17, 18, 19, 39, 48, 78, 101, 128, 131, 145, 148, 151, 152, 155, 169, 171, 172, 173, 191, 194, 195], "maxpoo2d": 172, "maxpool2d": [173, 174, 179, 180], "maxsiz": 80, "maxsplit": 39, "maxyear": 59, "maya": 139, "mayb": [47, 116, 128, 131, 135, 136, 141, 170, 198], "mazda": 167, "maze": 0, "mb": [8, 18, 19, 172, 173, 175, 176, 177, 178], "mba": [128, 131, 139], "mbconv": 175, "mbox": [25, 107, 111], "mccarthi": [128, 134], "mckinnei": 128, "mco": 117, "md": [6, 20, 108, 109, 112, 135, 136, 142, 205], "mdkir": 178, "mdoel": 176, "me": [44, 52, 94, 117, 127, 128, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 174, 175, 185, 186, 187, 188, 189, 190, 192, 193, 195, 196, 198, 199, 200], "meadow": 128, "meal": [116, 128, 129, 138], "meal_chain": 116, "mealtim": 178, "mean": [1, 2, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 31, 32, 36, 38, 39, 43, 44, 47, 48, 49, 52, 53, 54, 56, 59, 60, 61, 65, 70, 75, 77, 80, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 104, 106, 107, 111, 116, 117, 128, 130, 131, 132, 133, 137, 138, 141, 148, 149, 152, 155, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 186, 188, 189, 192, 193, 194, 196, 197, 198, 199, 200], "meaning": [157, 172, 200], "meant": [117, 128, 134, 175, 184], "meantim": [128, 172], "meantin": 171, "meanwhil": [116, 128, 131, 189, 193, 196, 198, 200], "measur": [0, 9, 10, 14, 33, 101, 116, 128, 170, 171, 172, 184, 186, 189, 192, 193, 194, 197, 198], "meat": [135, 136, 137], "mechan": [23, 84, 151, 177, 188, 198, 201], "media": [117, 133, 143], "median": [53, 80, 101, 145, 148, 152, 155, 193, 194, 195, 196, 198], "medianprop": 145, "medic": [117, 128, 130], "medicham": 166, "medichammega": 166, "medicin": 128, "medit": 116, "meditit": 166, "medium": [25, 35, 107, 111, 116, 128, 129, 145, 169, 187], "medium_heavi": 145, "meet": [43, 116, 117, 126, 128, 141, 142, 143, 193, 194], "mega": 166, "megabyt": [176, 177, 178], "meganium": 166, "melbourn": 136, "melina": 68, "mellon": 7, "meloettaaria": 166, "meloettapirouett": 166, "melt": [128, 192, 193, 194, 200], "melt_df": 194, "member": [38, 56, 101, 102, 128, 141, 189, 195], "membership": [117, 141], "memor": [28, 29, 188], "memori": [18, 19, 34, 47, 51, 52, 53, 68, 70, 78, 90, 92, 95, 96, 98, 101, 102, 117, 128, 148, 152, 155, 169, 170, 172, 173, 177, 185, 198], "memory_kei": 117, "memoryerror": [70, 71], "men": [128, 187], "mennen": 47, "mental": [138, 141], "mention": [7, 35, 52, 71, 84, 116, 127, 128, 131, 135, 136, 141, 143, 155, 176, 177, 185, 189, 193, 196, 197, 198, 200], "mentioned_parent_tweet_text": 127, "mentor": 138, "menu": [91, 139, 173, 187], "meow": 106, "meowsticfemal": 166, "meowsticmal": 166, "meowth": 166, "merced": 167, "mercenari": 128, "merchant": [117, 128], "merci": [116, 128], "mercuri": 128, "mere": [106, 128], "merg": [104, 155, 177, 178, 195], "merrili": 128, "meshgrid": [8, 153, 171], "mesprit": 166, "mess": [128, 166], "messag": [4, 5, 36, 43, 44, 45, 46, 70, 71, 72, 74, 77, 84, 117, 126, 127, 133, 135, 137, 138, 139, 141, 143, 169, 178], "message_id": 126, "message_text": 126, "message_url": 126, "messageprompttempl": 129, "messi": [47, 48, 128, 142, 145], "met": [36, 44, 48, 117, 128, 161], "meta": [39, 169], "metadata": [116, 131, 134, 135, 136, 143, 173], "metadata_field_info": 131, "metagross": 166, "metagrossmega": 166, "metal": 117, "metang": 166, "metaphor": 128, "metapod": 166, "metaprogram": 37, "meteo": 125, "meter": [90, 198], "meth": 106, "method": [24, 28, 29, 31, 34, 35, 36, 37, 38, 47, 48, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 77, 80, 83, 84, 89, 94, 98, 102, 104, 106, 117, 126, 128, 130, 131, 135, 136, 141, 143, 151, 155, 156, 159, 162, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 184, 188, 189, 194, 195, 196, 197, 198, 199, 200, 202, 208], "method_4_prompt_templ": 138, "methodologi": 139, "meticul": 176, "metric": [0, 136, 169, 170, 173, 174, 175, 176, 178, 179, 180, 202], "metropolitan": 117, "mew": 166, "mewtwo": 166, "mewtwomega": 166, "mfm": 141, "mfm_pod_alex": 141, "mfm_pod_rob": 141, "mfm_pod_steph": 141, "mfmpod": 141, "mib": 177, "michael": [139, 184], "michel": 68, "microchip": [5, 15], "microcomput": [117, 128], "microphon": 116, "microprocessor": 138, "microsecond": [60, 61, 63], "microsoft": [52, 128, 135, 136, 138, 139, 169, 178], "mid": [95, 128, 142], "middai": 128, "middl": [45, 53, 54, 71, 128, 141, 150, 171, 173, 192, 194, 195, 196], "midnight": 128, "midwiv": 138, "mienfoo": 166, "mienshao": 166, "mig": 169, "might": [1, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 36, 42, 48, 49, 51, 66, 71, 89, 94, 106, 128, 130, 131, 132, 135, 136, 141, 143, 149, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 186, 188, 192, 193, 194, 195, 196, 197, 199, 200], "mighti": 128, "mightyena": 166, "mike": 128, "milaan": [37, 45, 47, 52, 55, 57, 68, 70, 71, 74, 77, 80, 90, 93, 95, 101, 103, 167], "milan": [52, 68, 102], "mild": 128, "mile": [117, 128, 196], "mileag": [155, 156, 166, 190, 192], "mileagedf": 167, "mileston": [176, 177, 178], "milk": 74, "mill": 128, "million": [128, 135, 141, 175, 176], "milot": 166, "miltank": 166, "mime": 166, "mimic": [172, 177], "mimick": 138, "min": [4, 11, 12, 13, 14, 15, 56, 101, 148, 151, 152, 153, 155, 184, 189, 191, 192, 197, 200], "min_row": 155, "minc": 116, "minccino": 166, "mind": [27, 42, 57, 77, 128, 130, 131, 132, 135, 136, 138, 141, 172, 173, 174, 176, 177], "mine": [116, 128, 133, 135, 136, 169, 170, 177, 178], "mini": [128, 141, 143, 172, 174, 175, 176, 177, 195], "miniatur": 128, "minim": [3, 7, 79, 128, 131, 138, 174, 176, 179, 180, 184], "minimum": [4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 53, 128, 145, 148, 152, 155, 169, 171, 186, 194, 195, 208], "mink": [30, 128], "minkowski_distance_a": 30, "minkowski_distance_b": 30, "minor": 131, "minu": [95, 194], "minun": 166, "minut": [18, 19, 60, 61, 63, 64, 65, 128, 139, 169, 170, 171, 172, 173, 175, 176, 178, 192, 193, 197], "minyear": 59, "miracul": 128, "mirror": [78, 136, 199], "misc": 84, "misdreavu": 166, "misinterpret": [128, 187], "mislead": 189, "mismagiu": 166, "mismatch": [106, 169, 171, 172], "miss": [11, 12, 13, 14, 15, 16, 17, 44, 70, 71, 77, 126, 128, 130, 131, 132, 134, 149, 156, 165, 178, 196, 198], "missing_label": 162, "mission": 94, "mistak": [53, 70, 98, 116, 128, 131, 194], "mistakenli": 128, "mistress": 128, "mit": [128, 171, 172, 178, 195], "mitchel": 138, "mitsubishi": 167, "mix": [53, 54, 55, 56, 77, 129, 149, 150, 169, 176, 178, 192, 193, 194, 198], "mix_fruit": [47, 53, 56], "mixtur": [116, 129], "mkdir": [80, 170, 172, 173, 174, 175, 176, 178, 179, 180], "ml": [2, 23, 139, 174, 176, 178, 196, 208], "mlc": 193, "mlflow": 176, "mlop": [176, 178], "mlp": 7, "mlp_block": 177, "mlp_block_output": 177, "mlp_dropout": 177, "mlp_layer": 177, "mlp_size": 177, "mlpblock": 177, "mlxtend": 172, "mm": [59, 61, 62, 169, 176], "mmr": 140, "mmr_relevant_doc": 140, "mmxxiii": 116, "mn": [31, 39], "mnemon": 90, "mnist": [5, 7, 16, 17, 18, 19, 172], "mo": 39, "moat": 142, "mobil": [138, 141, 169, 175, 178], "mock": 143, "mod": [80, 153], "modal": 195, "mode": [11, 24, 68, 71, 80, 81, 101, 102, 132, 166, 170, 171, 172, 173, 175, 178, 181, 182, 193, 194], "model": [0, 4, 8, 98, 101, 102, 115, 117, 120, 125, 127, 128, 130, 131, 132, 134, 136, 138, 139, 142, 143, 144, 181, 182, 183, 186, 188, 190, 197, 198, 199, 207, 208], "model_": 199, "model_0": [170, 171, 172, 173, 174, 179, 180], "model_0_df": 173, "model_0_result": [172, 173, 179, 180], "model_1": [170, 172, 173, 180], "model_1_df": 173, "model_1_result": [172, 173], "model_2": [171, 173, 180], "model_2_result": 172, "model_3": 171, "model_4": 171, "model_acc": 172, "model_build": [180, 182], "model_loss": 172, "model_nam": [116, 117, 127, 130, 135, 136, 138, 141, 142, 170, 172, 174, 176, 177, 178, 179, 180], "model_path": [170, 172], "model_s": 178, "model_save_path": [170, 172, 174, 179, 180], "model_select": 171, "model_size_legend": 178, "model_weight": 176, "moder": [128, 138], "modern": [138, 172, 175, 176, 177], "modf": [80, 82], "modif": [38, 101, 103, 152, 159, 162, 164, 165, 193, 196, 197, 198, 200], "modifi": [36, 37, 38, 45, 47, 48, 52, 53, 54, 55, 57, 66, 68, 75, 76, 80, 92, 94, 95, 128, 141, 150, 155, 160, 166, 172, 176, 193, 195, 197, 198, 207], "modul": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 75, 77, 78, 79, 86, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 126, 128, 134, 150, 151, 159, 162, 164, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 188, 193, 198, 200], "modula": 106, "modular": [74, 142, 175, 176, 177, 178, 183], "modulo": [70, 104], "modulu": [90, 95, 104], "mohanda": [176, 178], "moistur": [146, 193], "moisturizersalesdata": 146, "moltr": 166, "moment": [96, 128, 138, 173, 193, 200], "momentum": [131, 171, 177], "mon": [49, 60, 61, 138, 176], "monaco": 117, "mondai": [60, 61, 65, 116, 117], "monei": [128, 131, 139, 141, 142, 192, 193], "monetari": 177, "monferno": 166, "mongodb": 53, "monitor": [143, 178, 207], "monkei": 195, "monologu": 141, "monoton": 103, "monster": 128, "month": [49, 60, 61, 62, 63, 64, 65, 74, 89, 116, 117, 128, 130, 141, 142, 143, 177, 196, 198, 201], "month_numb": 146, "monthli": 178, "monthlist": 146, "montreal": 117, "mood": 138, "moon": [74, 128, 129], "moor": [128, 131], "morain": 128, "moral": [117, 186], "mordern": 22, "more": [0, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 28, 29, 31, 34, 35, 36, 37, 38, 40, 42, 44, 45, 47, 49, 51, 53, 54, 55, 56, 57, 59, 60, 65, 66, 68, 69, 70, 71, 72, 74, 75, 77, 79, 80, 81, 84, 88, 89, 90, 91, 96, 98, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 116, 117, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 149, 150, 151, 152, 155, 156, 161, 164, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 204, 205, 208], "moreland": 187, "moreov": [0, 68, 128], "mormon": 141, "morn": [74, 77, 94, 128], "morphism": 101, "morri": 128, "mortal": 138, "most": [0, 22, 24, 26, 28, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 89, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 106, 108, 112, 116, 117, 126, 128, 129, 130, 131, 132, 133, 135, 136, 138, 141, 142, 150, 151, 155, 157, 159, 162, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 187, 192, 193, 194, 195, 196, 197, 198, 200, 201], "most_frequent_word": 39, "most_populated_countri": [68, 74], "most_spoken_languag": [68, 74], "mostli": [48, 52, 128, 142, 176, 177, 178, 187, 200], "mother": 128, "mothim": 166, "motion": 128, "motiv": [39, 128, 131, 142], "motorcycl": 7, "motto": [117, 169, 170, 171, 172, 176, 177], "mountain": [128, 131], "mous": [53, 54], "move": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 43, 47, 49, 68, 96, 127, 128, 131, 134, 135, 136, 137, 138, 141, 142, 162, 171, 172, 173, 174, 177, 185, 186, 189, 192, 193, 194, 196, 198, 199, 200], "move_fil": 137, "movefiletool": 137, "movement": [0, 136], "movi": [125, 141, 199], "mozzarella": 116, "mp": 169, "mpimg": [16, 17, 18, 19], "mpl": 196, "mr": [128, 166], "mrdbourk": [173, 174, 175, 176, 177, 178, 179, 180], "mri": 198, "mro": 103, "mrr": 141, "msa_block": 177, "msa_block_output": 177, "msa_lay": 177, "msablock": 177, "msc": 24, "mse": 171, "mseloss": 171, "msg": [36, 37, 74, 77, 184, 191], "mt": 31, "mtransform": 193, "mu": [8, 81], "mu_param": 8, "much": [0, 4, 7, 11, 12, 13, 22, 24, 28, 29, 35, 38, 55, 80, 116, 117, 128, 129, 130, 131, 134, 135, 136, 141, 143, 152, 169, 170, 171, 172, 173, 174, 177, 178, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200], "mudkip": 166, "muir": 128, "muir_lake_tahoe_in_wint": 128, "muk": 166, "mul": [80, 169], "mulitpl": 169, "mult": [173, 175], "multi": [91, 92, 101, 131, 156, 157, 172, 173, 175, 176, 178, 195, 199, 200], "multi_queri": 131, "multiclass": [171, 172], "multideriv": 103, "multidimension": [148, 150, 155], "multihead": 177, "multihead_attn": 177, "multihead_self_attention_block": 177, "multiheadattent": 177, "multiheadselfattentionblock": 177, "multiindex": [155, 158, 159, 162, 165], "multilay": 7, "multilayer_perceptron": [18, 19], "multilayerperceptron": [18, 19], "multilevel": 196, "multilin": [39, 52, 79, 89, 91, 92], "multiline_str": [52, 91], "multimedia": 24, "multip": 26, "multipl": [0, 4, 7, 12, 18, 19, 24, 28, 29, 35, 37, 45, 47, 49, 52, 53, 56, 57, 68, 75, 77, 79, 88, 89, 91, 95, 98, 101, 102, 104, 106, 116, 117, 128, 131, 143, 148, 149, 155, 156, 158, 160, 161, 165, 167, 170, 171, 172, 176, 177, 178, 186, 187, 188, 192, 193, 194, 195, 198, 199, 200], "multiple_vari": 57, "multipli": [11, 12, 13, 14, 15, 16, 17, 31, 36, 47, 48, 54, 59, 74, 78, 84, 85, 90, 94, 95, 148, 151, 169, 173], "multiqueryretriev": 131, "multitouch": 24, "multivari": [2, 4, 5, 8, 200], "multivariate_gaussian": 8, "multivariate_norm": [187, 188, 189, 199], "mumbai": 57, "munch": 138, "munchlax": 166, "munger": 141, "munna": 166, "murdoch": 141, "murkrow": 166, "musharna": 166, "mushroom": 54, "music": [83, 117, 131], "musk": 141, "must": [27, 31, 34, 36, 37, 46, 47, 51, 52, 53, 54, 55, 56, 68, 69, 71, 74, 75, 77, 78, 80, 81, 83, 84, 88, 89, 90, 92, 93, 96, 98, 102, 103, 106, 117, 126, 128, 132, 136, 146, 150, 156, 160, 161, 169, 170, 171, 177, 178, 185, 186, 193, 200], "mustard": 129, "mut": 192, "mutabl": [47, 53, 54, 55, 56, 92, 155], "mutat": 150, "mute": 195, "mutlipl": [169, 178], "mv": [175, 176, 177, 178], "mx": 169, "my": [5, 48, 51, 52, 68, 71, 75, 76, 84, 90, 92, 102, 106, 116, 117, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 141, 142, 143, 145, 146, 169, 171, 172, 173, 175, 176, 178, 187, 192, 194, 195, 196, 198], "my_addit": 85, "my_ag": 44, "my_data": 69, "my_dict": 55, "my_dict1": 55, "my_dict2": 55, "my_dict3": 55, "my_document_create_tim": 116, "my_document_id": 116, "my_document_sourc": 116, "my_func": 75, "my_gen": 35, "my_info": 53, "my_it": 34, "my_list": [34, 35, 53, 79, 149, 155], "my_list1": [53, 149], "my_list2": [53, 149], "my_list3": 53, "my_list4": 53, "my_list5": 53, "my_matrix": 149, "my_modul": 80, "my_nam": 90, "my_noun": 116, "my_set": [47, 56], "my_str": [35, 52], "my_text": 116, "my_tupl": 54, "my_tuple1": 54, "my_tuple2": 54, "my_tuple3": 54, "my_tuple4": 54, "my_vaccin": 47, "mychesstutor": 141, "myclass": 88, "mygraph": 145, "mymethod": 103, "mynewclass": 102, "myself": [128, 131, 134, 143], "myspac": 127, "myst": 204, "mysteri": [96, 128], "mystifi": 128, "n": [3, 4, 5, 8, 10, 12, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 43, 44, 47, 48, 49, 52, 53, 54, 57, 68, 71, 72, 74, 77, 78, 79, 80, 84, 87, 89, 90, 91, 93, 94, 97, 101, 102, 103, 107, 111, 116, 117, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 149, 152, 155, 156, 157, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 184, 192, 194, 195, 196, 198, 199], "n0": 47, "n1": 47, "n10": 47, "n21": 47, "n28": 47, "n3": 47, "n36": 47, "n45": 47, "n6": 47, "n_": 31, "n_boot": [188, 196, 197, 198], "n_cluster": 130, "n_color": 187, "n_compon": 130, "n_featur": [171, 199], "n_list": 53, "n_sampl": [171, 199], "n_tupl": 54, "na": [131, 155, 159, 160, 165], "na_valu": 167, "nacho": 178, "nafter": [159, 160, 161, 164, 165], "nag": 128, "nail": 184, "naiv": [106, 128, 176], "name": [11, 17, 19, 24, 35, 36, 37, 38, 39, 40, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 61, 65, 66, 68, 69, 70, 71, 74, 75, 77, 79, 83, 84, 85, 88, 89, 91, 92, 93, 95, 97, 101, 102, 103, 104, 106, 116, 117, 126, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 155, 156, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 184, 187, 188, 189, 191, 192, 196, 198, 200], "name_to_tool_map": 126, "named_tupl": 65, "nameerror": [36, 38, 52, 53, 54, 55, 71, 75, 91, 92, 102], "nameless": 79, "names_upper_cas": 37, "namespac": [22, 36, 38, 79, 80, 83, 89, 100, 102, 106, 148, 171], "nan": [80, 82, 149, 151, 153, 156, 161, 165, 166, 167, 184, 188, 194, 196], "nanci": 128, "nand": [131, 170], "nangalo": 138, "nangel": 131, "nanoth": 131, "nanswer": 134, "nanyon": 134, "nanywher": 131, "napoleon": 130, "napr": 87, "narendramodi": 138, "narrat": 128, "narrow": [128, 143, 177, 195], "nat": [155, 156, 158, 159, 160, 161, 162, 163, 164, 165], "natali": 116, "nation": [117, 128, 145, 172], "nativ": [95, 176, 184, 185], "nativenam": 117, "natu": 166, "natur": [1, 8, 24, 37, 48, 80, 82, 96, 116, 117, 125, 128, 130, 131, 135, 136, 137, 138, 139, 148, 170, 175, 177, 178, 198, 207], "naug": 87, "navan": 142, "navi": 128, "navig": [0, 177], "nayron": [18, 19], "nb": 174, "nbagg": 185, "nbe": 131, "nbecaus": [131, 134], "nbest": 131, "nbetween": 134, "nbin": 186, "nbook": 131, "nbraden": 126, "nbubbl": 131, "nbug": 131, "nbuild": 134, "nbusi": 131, "nbut": [131, 134], "nbyte": [126, 149], "ncalifornia": 129, "ncan": 131, "nceo": 131, "nchat": 126, "ncheaper": 131, "nchw": [172, 173], "ncode": 134, "ncol": [172, 177, 186, 195, 196], "ncolumn": 162, "ncompani": 131, "ncongratul": 72, "ncontain": 68, "ncontradict": 131, "nconv_layer_2": 172, "ndarrai": [148, 149, 152, 155, 156, 157, 169, 201], "ndata": [40, 134], "ndatafram": 165, "ndebug": 131, "ndec": 87, "ndenumer": [153, 186], "ndepart": 131, "ndestroi": 131, "ndframe": 155, "ndim": [30, 148, 149, 169], "ndindex": 153, "ndo": [52, 131], "ne": 145, "nearbi": 143, "nearest": [3, 10, 173, 178], "nearli": [52, 79, 95, 128, 148, 176], "neat": 89, "neatli": 188, "necessari": [24, 34, 46, 48, 84, 116, 117, 138, 143, 164, 170, 173, 174, 176, 177, 178, 179, 180, 181, 185, 190], "necessarili": [132, 155, 172, 177, 178, 184, 188, 193, 194, 200], "necessit": 0, "neck": 128, "need": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 35, 38, 39, 42, 44, 47, 48, 51, 52, 53, 54, 57, 59, 61, 62, 63, 65, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 85, 87, 90, 92, 93, 94, 98, 102, 103, 104, 106, 109, 115, 116, 117, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 192, 193, 194, 196, 197, 198, 199, 201, 205, 208], "need_weight": 177, "needl": 128, "neg": [1, 4, 5, 15, 29, 39, 43, 44, 45, 46, 52, 57, 68, 82, 91, 94, 128, 153, 158, 171, 173, 189, 195], "negat": [39, 95], "negative_numb": 94, "neighbor": 128, "neighborhood": 128, "neither": [27, 46, 52, 75, 82, 128, 175, 195], "neliza": 143, "nenter": 72, "nenuemer": 47, "neq": [30, 31], "nervou": 128, "nescessarili": 151, "nest": [22, 28, 29, 37, 42, 44, 45, 50, 53, 54, 55, 75, 78, 96, 116, 136, 148, 149, 157, 193, 195, 196], "nestl": 128, "net": [128, 143], "netflix": 174, "netherland": [11, 13], "netscap": 131, "netsuit": [135, 136], "network": [0, 2, 71, 115, 128, 133, 141, 152, 169, 170, 173, 174, 175, 177, 178, 179, 180, 207, 208], "networkerror": 71, "neural": [0, 2, 115, 152, 169, 170, 173, 175, 177, 178, 207, 208], "neural_network": [18, 19, 171], "neuron": [18, 19, 171, 172], "never": [34, 48, 49, 51, 71, 90, 95, 98, 116, 128, 131, 141, 155, 170, 177, 178, 185, 187, 192], "nevertheless": 128, "new": [0, 1, 4, 5, 11, 12, 13, 16, 17, 18, 19, 23, 24, 37, 38, 39, 42, 48, 52, 54, 56, 57, 60, 61, 63, 64, 68, 72, 76, 79, 87, 90, 94, 96, 101, 102, 103, 104, 106, 116, 117, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 143, 145, 150, 152, 155, 156, 159, 160, 161, 162, 164, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200], "new_": 155, "new_ag": 162, "new_axi": 159, "new_col": 162, "new_col_nam": 155, "new_df": 166, "new_dict": 55, "new_file_nam": 69, "new_head": 165, "new_index": 162, "new_list": 79, "new_mark": 162, "new_nam": 162, "new_sig": 193, "new_str": 39, "new_valu": 155, "new_year": 63, "new_york": [59, 63], "newaxi": [30, 199], "newdir": 69, "newer": [116, 130, 131, 170, 172, 176, 177], "newli": [106, 165, 170], "newlin": [39, 52, 68, 84, 87, 89, 91, 94, 178], "newshap": 152, "newslett": [139, 178], "newspap": 128, "newton": [74, 116], "nexampl": 116, "nexpens": 131, "nexplicit": 131, "next": [7, 34, 35, 43, 45, 47, 48, 49, 52, 68, 70, 71, 80, 81, 89, 98, 116, 117, 128, 130, 131, 132, 138, 139, 141, 142, 143, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "next_step_output": 126, "nexusgpt": 117, "neymar": [47, 48, 145], "nf": 155, "nfar": 134, "nfeb": 87, "nfirst": [131, 171], "nfor": [47, 131, 134], "nfounder": 131, "nfrom": 134, "ng": 39, "ngeometr": 131, "ngeometri": 134, "nglhx4b33_o": 142, "ngo": 131, "ngood": 52, "ngreg": 143, "nha": 134, "nhand": 131, "nhappen": 131, "nhave": 131, "nhe": 134, "nhead": 177, "nhow": [94, 116, 131], "nhwc": 172, "ni": [47, 131, 134], "nice": [116, 117, 127, 128, 130, 137, 138, 143, 169, 170, 171, 173, 175, 176, 177, 178, 185, 187, 192, 193, 198], "nicer": [52, 196], "nicest": 128, "nichol": 184, "nidok": 166, "nidoqueen": 166, "nidoran": 166, "nidorina": 166, "nidorino": 166, "nif": 131, "nigeria": 68, "night": [77, 128, 135, 195], "nightclub": 141, "nightli": [175, 176, 177, 178], "nikla": [4, 5], "nin": [52, 131], "nincada": 166, "nine": [39, 128], "ninetal": 166, "nineti": 52, "ninjask": 166, "ninvest": 131, "ninvestor": 131, "nipy_spectr": 190, "nipy_spectral_r": [190, 192], "nissan": 167, "nit": [131, 134], "nj": 31, "njam": 131, "njul": 87, "njun": 87, "njust": [131, 134], "nknow": 131, "nla": 126, "nlabel": 171, "nld": 117, "nlike": 134, "nlist": 163, "nloosen": 131, "nlp": [175, 177], "nltk": 134, "nm": 31, "nmai": 87, "nman": 131, "nmar": 87, "nmarket": 131, "nmatter": 131, "nmax": 172, "nmccarthi": 134, "nmillion": 131, "nmore": 131, "nmulti": 89, "nn": [169, 170, 171, 173, 174, 175, 176, 178, 179, 180, 195], "nnew": 169, "nnois": 131, "nnorm": 131, "nnotat": 134, "nnov": 87, "nnumber": 177, "no_grad": 170, "no_of_nonna_valu": 161, "no_of_sid": 103, "nob": 186, "nobl": 128, "noct": 87, "noctowl": 166, "node": [7, 18, 19, 53, 136], "nof": [131, 134], "noften": 131, "nohtyp": 52, "noibat": 166, "nois": [128, 131, 132, 135, 136, 141, 142, 171, 188, 193], "noisi": 131, "noisier": 195, "noivern": 166, "nomin": [5, 14, 15, 16, 17], "non": [2, 4, 5, 7, 10, 18, 19, 31, 36, 40, 43, 48, 52, 68, 69, 77, 81, 102, 116, 126, 131, 155, 161, 173, 175, 177, 178, 184, 185, 188, 190, 192, 198], "non_full_backward_hook": [172, 173], "noncommitt": 138, "nondynamicallyquantizablelinear": 177, "none": [37, 38, 39, 43, 47, 48, 55, 65, 68, 71, 74, 77, 81, 84, 88, 89, 91, 102, 116, 126, 128, 129, 131, 136, 137, 152, 153, 155, 156, 159, 160, 161, 162, 164, 165, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "nonlinear": [4, 7, 12, 18, 19, 188], "nonloc": [22, 76, 86, 88, 96], "nonlov": 75, "nonmarinemamm": 103, "nonneg": [148, 149], "nonparametr": [188, 190], "nonprofit": [133, 143], "nonwingedmamm": 103, "nonzero": 153, "noob": [128, 130], "noodl": 129, "nook": 128, "noondai": 128, "noper": 134, "noqa": 128, "nor": [27, 46, 52, 71, 75, 82, 128, 131, 134, 195], "noraml": 177, "nordic_countri": 71, "nordinari": 131, "norigin": 134, "norm": [32, 38, 82, 130, 151, 177, 186, 191, 193], "norm1": 177, "norm2": 177, "norm_first": 177, "normal": [8, 12, 16, 17, 18, 19, 32, 36, 37, 39, 48, 49, 52, 57, 71, 72, 75, 79, 80, 81, 102, 117, 128, 131, 137, 149, 152, 158, 166, 174, 175, 176, 177, 178, 179, 186, 188, 189, 190, 191, 194, 195, 202], "normal_arrai": 152, "normalis": 201, "normalize_data": [12, 16, 17, 18, 19], "normalized_shap": 177, "normalvari": 81, "north": [128, 143, 196], "northeast": 117, "northern": 128, "norwai": [11, 13, 53, 71], "norwegian": 128, "nose": 128, "nosepass": 166, "notabl": [135, 136], "notaion": 150, "notat": [4, 5, 56, 94, 134, 145, 150, 170, 195], "notation3": 94, "notch": [170, 172, 173, 176, 178, 194], "note": [4, 5, 28, 29, 34, 35, 36, 38, 42, 48, 49, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 75, 77, 80, 84, 89, 90, 91, 94, 95, 96, 101, 102, 103, 108, 112, 116, 117, 128, 130, 131, 132, 135, 136, 137, 138, 141, 143, 146, 149, 150, 151, 155, 156, 158, 159, 162, 163, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 184, 185, 187, 188, 189, 190, 193, 194, 195, 196, 198, 199, 200, 208], "notebook": [9, 11, 20, 26, 70, 94, 108, 112, 116, 125, 127, 131, 132, 137, 169, 171, 172, 173, 175, 176, 177, 178, 181, 182, 185, 187, 188, 189, 190, 197, 198, 200, 204, 207, 208], "notecard": 128, "notepad": 87, "noth": [39, 43, 47, 48, 49, 56, 74, 90, 101, 117, 128, 130, 138, 141, 151, 173, 178, 193, 194, 195, 201], "notic": [27, 28, 29, 37, 49, 51, 55, 57, 59, 70, 92, 94, 102, 103, 116, 117, 128, 130, 131, 134, 136, 138, 141, 142, 155, 169, 170, 172, 173, 174, 175, 176, 177, 178, 180, 185, 186, 188, 190, 192, 193, 194, 195, 196, 198, 199], "notif": [7, 24], "notimplementederror": 70, "notion": [51, 104, 117, 142], "notnul": 155, "notpad": 87, "notwithstand": 128, "noun": [116, 128], "nour": 134, "noutput": [44, 116, 169], "nov": [87, 170], "novel": 128, "novemb": [45, 128, 131], "now": [5, 7, 8, 10, 11, 12, 13, 14, 15, 22, 27, 35, 36, 37, 38, 39, 42, 43, 44, 47, 48, 57, 59, 60, 62, 63, 64, 68, 70, 71, 74, 75, 76, 77, 79, 80, 83, 84, 87, 89, 91, 93, 94, 96, 101, 102, 103, 104, 106, 116, 117, 126, 127, 128, 130, 131, 132, 135, 137, 138, 139, 141, 142, 143, 151, 162, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 208], "nowher": 155, "np": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 28, 29, 30, 31, 32, 107, 111, 130, 145, 148, 149, 150, 151, 152, 155, 161, 165, 167, 169, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "npack": 131, "npaid": 131, "npatch": 177, "npen": 131, "npeopl": 131, "nperfect": 89, "nprior": 128, "nqualiti": 134, "nquestion": 134, "nquicker": 131, "nread": [116, 131], "nresult": 163, "nrow": [172, 177, 186, 195], "nsaturdai": 116, "nsell": 131, "nsep": 87, "nshape": 173, "nsheet": 68, "nshould": 131, "nsilicon": 131, "nsimplest": 134, "nsize": 173, "nso": 131, "nsoftwar": 131, "nsome": 131, "nsourc": 131, "nspur": 131, "nsqueez": 131, "nstartup": 131, "nsteadili": 134, "nstick": 131, "nstill": 131, "nt": 27, "ntake": 131, "ntell": 131, "ntest": [172, 173, 179, 180], "nthat": 131, "nthe": [131, 134], "nthei": 131, "nthem": [131, 134], "ntheoret": 134, "nthese": 134, "nthi": [68, 72, 126], "nthink": 131, "ntnkvx7sbx": 138, "nto": [126, 131, 134], "ntoo": 131, "ntorchvis": 172, "ntotal": 177, "ntrain": 172, "ntruth": 116, "ntwo": 134, "nuanc": 116, "nuclear": 128, "nude": 128, "null": [27, 47, 48, 56, 126, 135, 136, 137, 155, 161, 188, 200], "num": [30, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 52, 56, 71, 74, 77, 78, 79, 89, 90, 94, 102, 152, 155, 156, 167, 176, 178, 191], "num1": [43, 44, 45, 46, 74, 77, 85, 90, 94, 102], "num2": [43, 44, 45, 46, 74, 77, 85, 90, 94, 102], "num3": 94, "num4": 94, "num_1": [45, 90], "num_2": [45, 90], "num_cel": [16, 17, 18, 19], "num_class": [171, 172, 177, 178], "num_clust": [10, 130], "num_doc": 130, "num_docu": 130, "num_epoch": [173, 174, 176, 179, 180], "num_exampl": [8, 10, 14, 15], "num_featur": 171, "num_flo": 93, "num_float": 93, "num_head": 177, "num_images_to_plot": [175, 176], "num_int": 93, "num_iter": [11, 12, 13], "num_lay": 177, "num_list": [57, 79], "num_magnitude_bin": [173, 178], "num_new": 93, "num_on": 74, "num_param": [175, 176, 177, 178], "num_patch": 177, "num_perceptron": [18, 19], "num_point": [188, 190], "num_str": 93, "num_sum": 93, "num_token": [117, 130], "num_tokens_first_doc": 130, "num_top_class": 178, "num_total_charact": 117, "num_training_exampl": [16, 17, 18, 19], "num_transformer_lay": 177, "num_two": 74, "num_word": 128, "num_work": [173, 174, 178, 179, 180], "numb": 11, "number": [0, 1, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 88, 89, 90, 93, 95, 97, 102, 103, 104, 106, 116, 117, 128, 130, 131, 136, 137, 138, 140, 141, 142, 143, 145, 146, 148, 155, 156, 157, 158, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "number33": 94, "number_arithmet": 46, "number_list": 57, "number_of_paramet": 178, "number_of_patch": 177, "number_of_token": 177, "numbermethod": 89, "numbers_int": 37, "numbers_squar": 37, "numbers_str": 37, "numbers_to_displai": [16, 17, 18, 19], "numel": [166, 178], "numer": [17, 19, 24, 47, 48, 51, 52, 72, 80, 90, 94, 104, 116, 137, 148, 149, 155, 169, 171, 173, 177, 187, 189, 191, 192, 194, 195, 196, 198, 201], "numpi": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 47, 84, 107, 111, 130, 145, 146, 150, 151, 155, 161, 165, 170, 171, 172, 173, 177, 178, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207], "numpy_array_from_list": 149, "numpy_tensor": 169, "nundergrad": 131, "nunderstand": 134, "nunlik": 134, "nurs": 128, "nut": 141, "nutjob": 128, "nutrifi": [173, 175, 178], "nuzleaf": 166, "nvar": 186, "nvidia": [169, 175], "nwa": 131, "nwant": [116, 131], "nwe": [126, 131, 134], "nweekend": 131, "nwhat": [126, 134], "nwhen": 131, "nwhere": 131, "nwhich": 134, "nwhole": 134, "nwill": [116, 134], "nworst": 131, "nx": 134, "ny": [59, 63, 117], "nyc": 198, "nyc_taxi": 198, "nyear": [65, 131], "nyou": 131, "nzip": 47, "o": [22, 24, 35, 39, 47, 49, 52, 53, 54, 55, 56, 57, 69, 73, 91, 92, 93, 94, 100, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 137, 138, 140, 141, 142, 143, 145, 146, 165, 173, 174, 175, 176, 178, 179, 180, 184, 185, 188, 196, 199], "oauthhandl": [138, 142], "ob": 102, "obama": 68, "obj": [24, 34, 38, 57, 101, 102, 106, 159, 170, 172, 174, 179, 180], "obj1": 103, "obj2": 103, "object": [0, 3, 24, 28, 29, 34, 35, 36, 37, 38, 47, 51, 52, 53, 54, 55, 56, 60, 62, 64, 65, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 84, 89, 90, 92, 93, 94, 95, 96, 103, 104, 106, 116, 117, 125, 126, 128, 129, 131, 133, 135, 136, 137, 138, 140, 141, 142, 148, 149, 151, 152, 156, 157, 162, 163, 164, 166, 170, 172, 175, 177, 187, 188, 189, 190, 192, 193, 196, 199, 200], "object1": 103, "object_nam": 102, "obscur": 128, "observ": [0, 3, 8, 10, 37, 38, 43, 49, 101, 116, 117, 125, 126, 128, 142, 155, 165, 177, 185, 186, 188, 189, 191, 192, 194, 195, 196, 197, 198, 200, 201], "obsolet": 128, "obtain": [52, 80, 128, 176, 177, 189, 196, 200], "obviou": [38, 52, 95, 116, 128, 131, 134, 178], "obvious": [128, 193], "occas": 152, "occasion": [128, 138], "occass": [188, 192], "occup": 128, "occupi": 128, "occur": [39, 48, 49, 52, 68, 70, 71, 72, 76, 85, 93, 128, 131, 138, 152, 169, 172, 178, 194], "occurr": [39, 52, 56, 102, 160, 196], "ocean": [190, 199], "ocean_r": 190, "ocr": 178, "oct": 87, "octadecim": 51, "octal": [51, 52, 91, 94], "octilleri": 166, "octob": [45, 128], "od": 101, "odd": [27, 34, 42, 47, 48, 53, 55, 57, 71, 74, 77, 106, 152], "odd_numb": [37, 57], "odd_squar": 55, "oddish": 166, "ofcours": [196, 198, 200], "ofen": 178, "off": [6, 20, 52, 68, 108, 109, 112, 116, 117, 128, 130, 131, 135, 136, 138, 141, 142, 143, 155, 169, 170, 171, 172, 173, 174, 175, 176, 178, 180, 185, 196, 198, 205], "offer": [0, 24, 51, 53, 81, 95, 117, 128, 136, 137, 139, 143, 150, 153, 169, 171, 172, 174, 178, 184, 187, 190, 192, 193, 195, 196, 197, 198, 199, 200], "offic": [128, 131, 141, 184], "office_print": 137, "offici": [22, 84, 116, 117, 128, 129, 177, 178, 188, 192, 194, 197, 198], "offlin": [11, 178, 195], "offset": [27, 60, 61, 68, 169, 185, 196], "offspr": 192, "often": [1, 5, 8, 48, 52, 53, 87, 94, 101, 106, 116, 128, 131, 135, 136, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 189, 190, 192, 193, 194, 196, 198, 199, 200], "oh": [166, 173, 196], "ohc": [155, 156, 167], "ohcf": 167, "ohcv": [155, 156, 167], "ohh": 178, "oil": [116, 129], "ok": [52, 89, 117, 128, 130, 131, 134, 138, 139, 142, 177, 178, 184], "okai": [89, 170, 171, 173, 176, 177, 178, 189, 190, 192, 193, 195], "okta": [135, 136], "ol": 127, "old": [39, 44, 71, 84, 94, 101, 106, 116, 117, 127, 128, 130, 131, 132, 138, 153, 155, 162, 175, 176, 186, 189], "old_col": 162, "old_nam": 155, "older": [44, 95, 116, 128, 130, 170], "oldest": [128, 132], "oliv": [116, 129, 187], "olli": 139, "omanyt": 166, "omastar": 166, "omit": [39, 116, 138, 177], "omma": 68, "on_chain_end": [126, 128], "on_chain_error": [126, 128], "on_llm_end": 128, "on_llm_error": 128, "on_tool_end": 126, "on_tool_error": 126, "onc": [4, 5, 24, 35, 39, 47, 49, 52, 54, 55, 56, 59, 68, 71, 74, 75, 77, 80, 87, 90, 92, 98, 116, 117, 128, 130, 131, 141, 158, 159, 162, 169, 170, 171, 172, 173, 174, 176, 177, 178, 184, 185, 187, 190, 193, 194, 195, 196, 197, 198, 199, 200, 208], "one": [0, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 24, 34, 35, 36, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 66, 68, 71, 75, 77, 78, 79, 80, 83, 84, 87, 88, 89, 91, 92, 93, 95, 96, 98, 102, 103, 104, 106, 108, 112, 115, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 141, 142, 143, 149, 150, 151, 152, 155, 156, 157, 159, 160, 162, 164, 165, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202], "one_sent": 143, "onedr": 69, "onedrivetemp": 69, "ones": [5, 52, 80, 116, 128, 130, 131, 132, 133, 138, 142, 148, 149, 151, 152, 153, 162, 164, 171, 172, 173, 174, 175, 176, 177, 178, 192, 194], "ones_lik": 169, "ongo": 198, "onion": [71, 129], "onix": 166, "onli": [7, 13, 22, 27, 35, 36, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 84, 87, 89, 90, 92, 95, 96, 98, 101, 102, 103, 104, 106, 116, 117, 125, 126, 128, 130, 131, 132, 138, 141, 142, 143, 149, 150, 155, 158, 159, 160, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 193, 195, 196, 198, 199, 200], "onlin": [5, 14, 15, 16, 17, 22, 117, 128, 138, 142, 172, 174, 177, 178, 180, 187, 195, 198], "onlinepdfload": 132, "onnx": 178, "ontario": 117, "onto": [127, 128, 129, 131, 142, 170, 177, 178, 189, 197], "onward": 177, "ooo": 52, "oop": [22, 71, 105], "opac": [11, 187], "opaqu": 187, "open": [0, 22, 24, 70, 71, 80, 84, 89, 116, 117, 125, 128, 130, 131, 133, 138, 139, 141, 142, 143, 148, 155, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 207], "open_workbook": 68, "openai": [117, 126, 128, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 169, 207], "openai_api_kei": [116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143], "openai_funct": 116, "openaiembed": [116, 117, 130, 131, 132, 134, 140, 141], "opendoor": 142, "openerp": 24, "openingattribut": 117, "openmeteo": 125, "openstreetmap": 117, "openvino": 178, "oper": [1, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 28, 29, 35, 36, 37, 39, 40, 47, 48, 51, 57, 59, 68, 70, 71, 74, 75, 77, 83, 85, 89, 90, 92, 94, 97, 98, 100, 101, 102, 105, 115, 117, 128, 131, 134, 138, 139, 141, 149, 152, 155, 159, 160, 162, 163, 164, 165, 171, 172, 173, 174, 176, 177, 178, 179, 180, 198, 208], "operand": [51, 52, 53, 70, 71, 93, 95, 104], "operatornam": 177, "opex": 137, "opim": 173, "opinion": [127, 138, 192, 196, 198], "opportun": [0, 49, 128, 135, 136, 138, 141, 142, 171, 172, 173, 176, 177, 178, 186], "oppos": 138, "opposit": [79, 129, 138, 155], "opt": [116, 117, 126, 128, 130, 131, 132, 142], "optim": [0, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 49, 55, 92, 98, 128, 130, 138, 139, 141, 142, 159, 173, 174, 175, 176, 178, 179, 180, 208], "optimist": 138, "option": [4, 5, 38, 39, 45, 47, 48, 51, 52, 53, 54, 55, 57, 71, 72, 74, 77, 84, 94, 101, 102, 103, 116, 117, 128, 130, 131, 137, 142, 143, 149, 152, 156, 163, 170, 171, 172, 175, 176, 178, 179, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "oracl": 52, "orang": [45, 47, 53, 56, 71, 91, 95, 117, 128, 157, 178, 187, 190], "oranges_r": 190, "orbital_period": 195, "orchard": 128, "order": [4, 7, 8, 16, 17, 18, 19, 35, 47, 48, 52, 68, 69, 74, 75, 77, 79, 80, 83, 92, 94, 102, 116, 117, 125, 128, 130, 141, 152, 155, 156, 162, 163, 169, 170, 171, 172, 173, 177, 185, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200], "ordereddict": [163, 170, 172], "ordin": [5, 14, 15, 16, 17, 196], "ordinari": [37, 128], "ordinarili": 128, "ore": [39, 200], "oregon": 128, "org": [24, 116, 117, 145, 151, 170, 171, 172, 175, 176, 177, 178, 191, 198, 202], "organ": [24, 53, 59, 74, 80, 83, 94, 101, 116, 128, 138, 139, 141, 175, 198, 202], "orient": [34, 36, 38, 72, 102, 103, 104, 106, 156, 163, 173, 185, 192, 193, 194, 195, 196, 197, 198], "origin": [8, 9, 10, 17, 19, 36, 37, 39, 69, 98, 104, 106, 117, 128, 131, 150, 152, 155, 156, 159, 160, 161, 163, 165, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 189, 194, 198, 199, 202], "orrd": 190, "orrd_r": 190, "orsanmichel": 128, "orthogonol": 26, "os": 128, "oserror": 70, "oshawott": 166, "ot": [39, 46], "otat": 68, "other": [0, 5, 6, 7, 10, 14, 15, 22, 24, 31, 32, 34, 35, 37, 39, 47, 48, 51, 52, 57, 65, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 95, 98, 101, 102, 103, 104, 106, 109, 116, 117, 125, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 142, 143, 148, 149, 151, 152, 155, 156, 160, 161, 163, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 207], "other_kei": 128, "other_mag": 104, "otherwis": [49, 52, 68, 71, 77, 98, 102, 103, 126, 128, 131, 151, 156, 161, 162, 169, 170, 171, 173, 175, 177, 178], "othwerwis": 48, "ottawa": 117, "otter": 128, "ou": 198, "ounc": 131, "ouput": [171, 178], "our": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 34, 38, 39, 44, 48, 49, 51, 68, 69, 70, 71, 72, 74, 78, 80, 83, 84, 85, 87, 88, 94, 101, 104, 106, 116, 117, 127, 128, 130, 132, 135, 136, 137, 138, 139, 141, 142, 143, 145, 152, 155, 156, 158, 165, 169, 170, 174, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "our_plot": 190, "ourselv": [68, 85, 87, 127, 128, 137, 171, 172, 173, 177, 178], "out": [14, 24, 25, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 68, 70, 72, 74, 77, 79, 80, 87, 88, 89, 90, 91, 92, 95, 104, 107, 111, 116, 117, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 142, 143, 150, 152, 153, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200], "out_channel": [172, 173, 174, 177, 179, 180], "out_featur": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "out_i": 171, "out_proj": 177, "outbound": 139, "outcom": [42, 74, 138, 142, 177, 188], "outer": [36, 46, 47, 48, 75, 151, 155, 169, 178, 194], "outer_fun": 75, "outer_funct": 96, "outermost": 96, "outisd": 175, "outlandish": 128, "outlet": 128, "outlier": [188, 189, 194, 196, 198, 202], "outlier_prop": 198, "outliers_indic": 8, "outlin": [128, 138, 145, 177, 193], "outnumb": 128, "outout": 90, "outperform": [0, 178], "output": [0, 4, 5, 6, 7, 11, 13, 18, 19, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 87, 93, 95, 98, 102, 103, 104, 109, 117, 125, 126, 127, 128, 130, 131, 133, 135, 136, 138, 139, 142, 143, 149, 151, 155, 158, 162, 163, 169, 170, 173, 174, 176, 179, 180, 185, 198, 205, 207], "output_dict": 117, "output_featur": 171, "output_format": 143, "output_kei": [126, 128], "output_param_nam": [11, 13], "output_pars": [116, 117, 129, 133], "output_s": [175, 176, 177, 178], "output_shap": [172, 173, 174, 175, 179, 180], "output_text": [128, 139, 142], "outrun": 177, "outsid": [43, 46, 47, 49, 53, 54, 75, 76, 101, 102, 116, 117, 128, 131, 138, 141, 143, 150, 169, 170, 173, 176, 177, 189, 198, 200], "outstand": [176, 177, 178], "outwardli": 128, "outweigh": [172, 178], "over": [0, 11, 12, 13, 14, 15, 16, 17, 34, 35, 37, 47, 48, 49, 79, 88, 89, 91, 103, 116, 117, 128, 129, 130, 131, 132, 136, 138, 141, 142, 143, 145, 149, 155, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 191, 193, 196, 198, 199], "overal": [98, 138, 143, 145, 169, 173, 176, 177, 178, 185, 190, 195, 196, 198, 199], "overall_chain": 116, "overcom": [51, 142], "overconfid": 128, "overcorrect": 171, "overcurl": 128, "overfit": [11, 12, 13, 14, 15, 16, 17, 18, 19, 171, 172, 175, 177, 178], "overflow": [78, 153], "overflowerror": [70, 95], "overhead": 173, "overkil": 35, "overlai": [189, 196], "overlap": [128, 132, 140, 192, 193, 198], "overlap_cont": 140, "overlap_count": 140, "overli": 199, "overload": [22, 105, 138, 151], "overlook": 128, "overplot": 199, "overrid": [72, 106, 173], "overridden": [72, 103], "overset": 30, "overst": 116, "overt": 128, "overtim": 178, "overvalu": 128, "overview": [14, 15, 20, 27, 30, 89, 108, 112, 116, 152, 169, 170, 188, 189, 196, 197], "overwhelm": 177, "overwrit": [55, 68, 77, 169, 173, 178, 180], "overwritten": 68, "ow": [39, 128], "own": [34, 70, 71, 72, 79, 80, 83, 84, 85, 87, 94, 96, 106, 128, 130, 131, 134, 138, 141, 142, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 193, 194, 195, 196, 198], "owner": 128, "oxford": [94, 195], "oxlei": 131, "ozzie_osman": 116, "p": [1, 24, 27, 30, 31, 39, 47, 49, 52, 53, 54, 56, 57, 60, 61, 66, 90, 94, 97, 101, 135, 136, 142, 169, 173, 175, 176, 177, 178, 186, 190, 193, 196], "p0": 169, "p1": [97, 101, 104, 106, 201], "p100": [169, 175], "p2": [97, 101, 104, 106], "p3": [104, 106], "p4": 106, "p5": 106, "p6": 106, "p7": 106, "p8": 169, "p_": 31, "p_letter": 57, "p_list": 24, "pa": 184, "pace": 138, "pachirisu": 166, "pacif": 143, "pack": [37, 54, 128, 129, 131, 177], "packag": [22, 68, 80, 86, 89, 116, 117, 126, 127, 128, 130, 131, 132, 137, 138, 142, 143, 155, 159, 162, 163, 164, 169, 170, 172, 173, 174, 175, 176, 177, 178, 184, 187, 191, 193, 195, 197, 198, 199, 200], "packagesin": 83, "packing_person_info": 71, "packym": 138, "pad": [52, 60, 61, 94, 95, 172, 173, 174, 177, 179, 180], "padding_mod": 173, "page": [6, 66, 81, 82, 89, 104, 109, 117, 125, 128, 132, 142, 169, 170, 171, 174, 175, 177, 187, 197, 205], "page_cont": [116, 117, 128, 130, 131, 132, 134, 139, 140, 141, 142, 143], "page_data": 139, "pagefil": 69, "pagerduti": 142, "pai": [95, 128, 131, 141, 142, 173, 177, 178], "paid": 128, "pain": [117, 128, 143, 199], "painfulli": 128, "paint": [117, 128, 138], "painter": 128, "pair": [11, 14, 15, 47, 52, 56, 82, 92, 93, 143, 155, 156, 162, 163, 171, 190, 193, 195, 197, 198, 199], "paired_r": 190, "pairgrid": [186, 190, 191, 200, 203], "pairplot": [186, 190, 199, 200], "pairwis": 191, "pakistan": 68, "pal": [30, 125, 200], "pale": [128, 187, 193], "palett": [176, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203], "palkia": 166, "palm": 136, "palpitoad": 166, "palplot": 187, "pan": [117, 129], "pancetta": 116, "pancham": 166, "panda": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 47, 117, 133, 135, 136, 139, 145, 146, 170, 171, 172, 173, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207], "panel": [197, 199], "pangoro": 166, "panopt": 172, "panpour": 166, "pansag": 166, "pansear": 166, "paper": [0, 116, 117, 128, 134, 141, 143, 169, 173, 175, 178, 183, 185, 187, 188, 198, 207], "paperswithcod": [173, 175, 177], "paprika": 129, "par": [175, 177], "para": 166, "para1": 37, "para2": 37, "para3": 37, "paradigm": [101, 178], "paragraph": [39, 143, 177], "parallel": [78, 117, 128, 143, 200], "param": [8, 9, 126, 128, 137, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 188, 193, 194, 198, 199, 200], "param1": 57, "param2": 57, "param3": 57, "param_1": [5, 9, 15], "param_2": [5, 9, 15], "paramet": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 39, 40, 52, 57, 68, 75, 79, 80, 84, 87, 91, 98, 101, 103, 106, 116, 117, 125, 135, 136, 137, 140, 141, 143, 145, 152, 156, 157, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "parameter": 102, "parameter1": [74, 84], "parameter2": 74, "parametr": [102, 198], "paramount": 173, "paranthes": 52, "paranthesi": [54, 89], "parasect": 166, "parch": [194, 196], "parent": [72, 116, 127, 136, 141, 170, 172, 173, 174, 175, 176, 178, 179, 180, 192], "parent_splitt": 131, "parentattr": 103, "parentdocumentretriev": 131, "parenthes": [35, 39, 47, 52, 54, 70, 79, 87, 89, 91, 92, 128, 185], "parenthesi": [35, 70, 75, 152], "parentmethod": 103, "pareto": [81, 196], "paretovari": 81, "pari": [116, 117, 145], "park": [136, 138, 175, 188], "parkpicn": 138, "parmar": [37, 45, 47, 52, 57, 68, 74, 77, 80, 90, 101], "parmesan": 116, "parmet": 128, "parr": 141, "parramet": 200, "parrot": [101, 102], "pars": [65, 68, 70, 98, 117, 133, 135, 136, 141, 142, 155], "parser": [70, 117, 128, 131, 135, 136, 142], "parslei": 116, "part": [1, 37, 39, 47, 48, 49, 51, 52, 80, 82, 91, 92, 95, 96, 116, 128, 130, 131, 134, 136, 137, 139, 141, 143, 145, 148, 150, 160, 163, 169, 170, 171, 172, 175, 176, 177, 178, 181, 182, 184, 194, 198], "parti": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 59, 83, 128, 141, 143], "partial": [7, 175], "partial_vari": [116, 117, 129, 133], "particip": 141, "particl": 39, "particuar": [17, 18, 19], "particular": [42, 47, 48, 49, 51, 55, 56, 59, 64, 80, 90, 92, 101, 103, 117, 128, 130, 149, 155, 158, 159, 161, 162, 163, 165, 170, 171, 173, 177, 184, 185, 186, 188, 189, 193, 194, 195, 196, 198, 199, 200], "particularli": [52, 128, 141, 142, 194, 195], "partit": [3, 10, 52], "partli": 128, "partner": [126, 128, 143], "pascal": 128, "pass": [22, 34, 36, 37, 39, 40, 42, 43, 44, 50, 52, 59, 60, 61, 65, 70, 71, 72, 77, 79, 80, 84, 88, 90, 101, 102, 103, 106, 116, 117, 128, 129, 130, 131, 132, 136, 137, 139, 143, 149, 155, 156, 157, 158, 159, 162, 164, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 198, 199, 200], "passag": [128, 130, 138, 198], "passeng": [196, 198, 200, 201], "passenger_count": 198, "passion": [138, 139], "passiv": 138, "passport": 128, "password": [44, 117], "password_check": 44, "past": [116, 128, 130, 134, 141, 142, 143, 146, 170, 172, 173, 174, 175, 176, 177, 178, 180, 185, 190, 193, 194, 195, 198], "pastel1": [190, 195], "pastel1_r": 190, "pastel2": 190, "pastel2_r": 190, "pat": 115, "patch": [178, 192, 196, 199], "patch_and_position_embed": 177, "patch_artist": 145, "patch_embed": 177, "patch_embedded_imag": 177, "patch_embedded_image_with_class_embed": 177, "patch_embedding_class_token": 177, "patch_embedding_lay": 177, "patch_embedding_with_class_token": 177, "patch_height": 177, "patch_siz": 177, "patch_width": 177, "patchcollect": 198, "patched_image_through_mlp_block": 177, "patched_image_through_msa_block": 177, "patchembed": 177, "patcher": 177, "patchifi": 177, "path": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 68, 69, 83, 94, 109, 117, 128, 130, 131, 137, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 205], "path_to_dir": 178, "path_to_model": 178, "pathcollect": [192, 193], "pathlib": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "patienc": 188, "patrat": 166, "patrick": 128, "pattern": [0, 31, 37, 98, 128, 145, 169, 170, 171, 172, 173, 175, 176, 177, 178, 187, 199], "paul": [116, 128, 130, 131, 132, 184], "paul_graham_essai": 130, "paulg": 138, "paulgraham": [116, 128, 140], "paulgrahamessai": [116, 117, 128, 130, 131, 132], "paulgrahamessayslarg": 131, "paulgrahamessaysmal": [130, 134], "paulgrahamessaysmedium": 131, "paulgrahamessayssmal": 131, "paus": 35, "pawniard": 166, "payment": 128, "payoff": 116, "pb": 128, "pc": 178, "pca": 197, "pcie": 169, "pclass": [194, 196], "pctdistanc": 145, "pd": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 117, 133, 135, 136, 139, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "pd_data": 8, "pd_test_data": [16, 17, 18, 19], "pd_train_data": [16, 17, 18, 19], "pdf": [130, 132, 188, 189, 191, 203], "peach": 196, "peak": [128, 167, 189, 195], "pear": [45, 53, 56, 117, 128], "pearl": 98, "pearsonr": 199, "peculiar": [106, 155], "pedestrian": 7, "peek": [16, 17, 18, 19, 184], "peer": 143, "peggi": [101, 103], "pelipp": 166, "penal": 0, "penetr": 128, "penguin": [101, 103, 139], "penicillin": 47, "peo": 39, "peopl": [39, 52, 56, 116, 117, 128, 130, 131, 132, 135, 136, 138, 139, 141, 142, 143, 169, 172, 173, 174, 175, 177, 178, 184, 187, 193, 198], "pep": 84, "pepper": [116, 129], "per": [11, 13, 72, 95, 117, 128, 130, 132, 135, 136, 137, 143, 145, 146, 156, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 184, 185, 187, 188, 194, 195, 196, 198, 200], "peramet": 77, "perceiv": [131, 187], "percent": [37, 176, 178], "percentag": [14, 15, 16, 17, 18, 19, 47, 94, 101, 146, 155, 158, 162, 165, 178, 192, 194, 196, 198], "percentil": [101, 152, 155, 198], "percep": [18, 19], "percept": [128, 195], "perceptron": 7, "perceptron_index": [18, 19], "perenni": 128, "perf": 169, "perfect": [1, 48, 89, 128, 130, 138, 143, 171, 178], "perfectli": [88, 89, 116, 170], "perflog": 69, "perform": [0, 7, 10, 18, 19, 24, 34, 36, 40, 42, 47, 48, 51, 52, 53, 54, 55, 56, 57, 68, 71, 74, 79, 80, 85, 87, 92, 93, 94, 95, 98, 101, 104, 115, 116, 125, 128, 130, 137, 148, 151, 155, 159, 162, 164, 165, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 196, 208], "performan": 171, "perhap": [128, 173, 175, 176, 177, 178], "perimet": [74, 95, 103], "perimeter_of_circl": 74, "period": [27, 79, 84, 128, 155, 178, 198], "periodic_function1": 27, "periodic_function2": 27, "perl": 24, "perm": 80, "perman": [68, 178], "permiss": [71, 128], "permit": 196, "permut": [169, 173, 177, 201], "permutebackward0": 177, "persev": 173, "persian": 166, "persist": [138, 169], "person": [0, 45, 47, 68, 74, 77, 84, 89, 90, 95, 101, 102, 103, 116, 117, 120, 126, 128, 130, 131, 135, 136, 138, 143, 144, 171, 173, 176, 177, 178, 193, 196, 198], "person_dct": 68, "person_info": [90, 101, 103], "person_json": 68, "person_schema": 136, "personaccount": 101, "persons_nam": 142, "perspect": [129, 131, 135, 136, 138, 143, 172, 173, 176, 177], "peso": 117, "pet": [128, 143], "petal": [9, 10, 14, 184, 192], "petal_length": [3, 5, 10, 14, 184, 187, 189, 190, 192, 193, 199, 202], "petal_width": [3, 5, 10, 14, 184, 192, 193, 199, 202], "petallengthcm": 145, "petalwidthcm": 145, "petilil": 166, "pg": 116, "pg2148": 116, "pg_work": 116, "ph": 195, "phanpi": 166, "phantump": 166, "phase": [27, 131], "phd": 128, "phenomen": 177, "phenomena": 128, "philosohpi": 171, "philosoph": [130, 178], "philosophi": [128, 130], "philosophia": 130, "phind": 139, "phion": 166, "phone": [40, 94, 97, 128, 132, 138, 143, 178], "phone_num": 97, "phone_numb": 94, "photo": [138, 145, 171, 172, 173, 175, 176, 177, 178], "photograph": [0, 128], "photorealist": 128, "photoshop": 143, "php": [55, 98], "phrase": [52, 117, 130, 135, 136, 138], "physic": [78, 101, 116, 128, 138, 141, 177, 184], "pi": [27, 29, 30, 39, 51, 52, 70, 74, 80, 82, 90, 94, 95, 99, 101, 128, 166, 178], "piazza": 128, "picalo": 24, "pichu": 166, "pick": [3, 8, 10, 14, 117, 128, 130, 135, 136, 143, 150, 170, 172, 173, 176, 177, 184, 187, 188, 190, 196, 198], "picki": 132, "pickl": [84, 170], "pickler": 84, "pickletool": 84, "pickup_datetim": 198, "pickup_latitud": 198, "pickup_longitud": 198, "picnic": 128, "pictori": 196, "pictur": [3, 4, 5, 7, 16, 17, 18, 19, 49, 127, 128, 138, 141, 177, 200], "pid": 169, "pidgei": 166, "pidgeot": 166, "pidgeotmega": 166, "pidgeotto": 166, "pidov": 166, "pie": 178, "piec": [38, 116, 117, 127, 128, 130, 131, 132, 136, 138, 139, 141, 142, 143, 150, 169, 170, 172, 173, 174, 176, 177, 178, 180, 196], "piecem": 134, "piechart": 145, "pignit": 166, "pikachu": 166, "pil": [172, 173, 175, 178], "pile": 196, "piloswin": 166, "pilot": [116, 117], "pin": [132, 177], "pin_memori": [174, 177, 180], "pinch": 131, "pine": 128, "pineappl": [117, 196], "pineco": 166, "pinecon": 116, "pinecone_api_env": 132, "pinecone_api_kei": [132, 141], "pinecone_env": 141, "ping": [135, 136], "pink": [47, 129, 187, 190], "pink_r": 190, "pinsir": 166, "pinsirmega": 166, "pinterest": 142, "pioneer": 139, "pip": [24, 68, 80, 116, 125, 130, 131, 132, 134, 137, 142, 171, 172, 173, 175, 176, 177, 178], "pip3": [175, 176, 177, 178], "pipe": [125, 195], "pipelin": [0, 117, 173, 175, 176, 177, 178, 180, 195], "piplein": 173, "piplup": 166, "pirat": [116, 117, 138], "pitti": 128, "pittsbugh": 117, "pivot": [155, 201], "pivot_t": 155, "pixel": [5, 7, 9, 16, 17, 18, 19, 128, 145, 169, 172, 173, 177], "pixel1": [17, 19], "pixel2": [17, 19], "pixel3": [17, 19], "pixel4": [17, 19], "pixel5": [17, 19], "pixel6": [17, 19], "pixel7": [17, 19], "pixel775": [17, 19], "pixel776": [17, 19], "pixel777": [17, 19], "pixel778": [17, 19], "pixel779": [17, 19], "pixel780": [17, 19], "pixel781": [17, 19], "pixel782": [17, 19], "pixel783": [17, 19], "pixel784": [17, 19], "pixel8": [17, 19], "pixel9": [17, 19], "piyg": 190, "piyg_r": 190, "pizel": [17, 18, 19], "pizza": [173, 174, 175, 176, 177, 178, 179, 180], "pizza_steak_sushi": [173, 174, 175, 176, 177, 179, 180], "pizza_steak_sushi_20_perc": [176, 178], "pl": 128, "place": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 37, 38, 51, 52, 53, 54, 55, 56, 59, 68, 71, 72, 77, 78, 80, 83, 89, 90, 92, 94, 103, 106, 116, 128, 130, 131, 134, 136, 138, 141, 169, 170, 172, 173, 174, 175, 176, 177, 178, 184, 196, 200, 201], "placehold": [49, 52, 94, 116, 130, 141], "plagu": 128, "plai": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 89, 96, 103, 117, 128, 130, 131, 132, 138, 141, 142, 143, 155, 169, 171, 178, 185, 187, 188, 190, 192, 193, 194, 196, 197, 198, 199, 200], "plain": [14, 15, 34, 106, 135, 136, 177, 195], "plan": [101, 117, 128, 131, 139, 141, 143, 171, 178, 198], "plane": [11, 15, 26, 116, 133], "planet": 195, "planets_data": 195, "plant": [116, 136, 171], "plant_schema": 136, "plant_typ": 136, "plasma": [190, 195, 198], "plasma_r": 190, "plate": 196, "platform": [22, 24, 68, 98, 125, 139, 143, 169, 198], "platon": 128, "plausibl": 128, "plausibli": 128, "player": [47, 48, 101, 103, 145], "playground": [7, 171], "ple": 39, "pleas": [48, 116, 117, 128, 130, 135, 136, 137, 138, 139, 141, 142, 156, 175, 178, 185, 187, 188, 189, 191, 195, 196, 198, 200], "pleasur": [128, 138], "plenti": [70, 128, 155, 170, 171, 173, 175, 176, 177, 178], "plot": [4, 25, 107, 111, 116, 128, 130, 170, 171, 172, 176, 178, 184, 199, 200, 201, 202, 203], "plot_confusion_matrix": [171, 172], "plot_data": 11, "plot_decision_boundari": 171, "plot_figur": 11, "plot_func": 200, "plot_function1": 27, "plot_function2": 27, "plot_index": [16, 17, 18, 19], "plot_joint": 189, "plot_kw": 190, "plot_layout": 11, "plot_loss_curv": [173, 175, 177, 178], "plot_predict": [170, 171], "plot_predictions_trac": 11, "plot_test_trac": 11, "plot_training_trac": 11, "plot_transformed_imag": 173, "plotcontour": 30, "plotdist": 30, "plotli": [11, 189], "plotlin": 146, "plotnonfinit": 193, "plotter": 193, "plottext": 30, "plotting_context": 185, "plt": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 30, 107, 111, 130, 145, 146, 170, 171, 172, 173, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "plu": [95, 128, 135, 136, 138, 141, 143, 169, 173, 197], "plug": [131, 143, 178], "plugin": [116, 117], "plural": 136, "plusl": 166, "pm": [29, 60, 61, 66, 143], "png": [30, 68, 69, 117, 145, 146, 173, 189], "po": [159, 177, 196], "pocoo": 24, "podcast": [117, 141, 142, 143, 170, 175], "podcastnot": 141, "poetri": [24, 128], "pofession": 200, "point": [4, 5, 8, 35, 36, 38, 39, 51, 52, 56, 65, 66, 70, 80, 81, 82, 91, 92, 95, 102, 104, 106, 116, 117, 128, 130, 131, 134, 138, 141, 142, 143, 145, 152, 169, 170, 171, 172, 173, 175, 176, 178, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201], "point_color": 193, "pointer": 68, "pointplot": [192, 196], "poison": 166, "poisson": 192, "pokemon": 166, "pokemon_data": 166, "pol": 117, "poli": [101, 139], "polic": 184, "policekillingsu": 184, "polici": 139, "polio": 47, "polito": 166, "poliwag": 166, "poliwhirl": 166, "poliwrath": 166, "pollut": 38, "polluzion": 128, "poloclub": [172, 173, 174, 179, 180], "poly1d": 186, "polyfit": 186, "polygon": 103, "polynomi": [11, 12, 13, 14, 15, 16, 17, 148, 188], "polynomial_degre": [11, 12, 13, 14, 15, 16, 17], "ponyta": 166, "poochyena": 166, "pool": [128, 172], "pool_timeout": 126, "poor": [128, 169, 170, 171, 173, 175, 178], "poorli": [116, 173, 187], "pop": [42, 55, 56, 130, 145, 190, 194, 199, 202], "popitem": 55, "popul": [37, 57, 68, 74, 81, 117, 129, 175, 176, 198, 200], "popular": [22, 24, 52, 66, 80, 84, 98, 101, 116, 117, 128, 134, 169, 170, 171, 173, 177, 180], "populu": 175, "por": 117, "poriod": 27, "pork": 129, "porn": 128, "porsch": 167, "port": [98, 128, 142], "portabl": [22, 84, 98], "portal": [125, 138, 197], "portfolio": [178, 207], "portion": [52, 53, 71, 75, 96, 117, 128, 172, 173, 175, 176, 177, 184], "portrai": 187, "portrait": 128, "portug": [117, 145], "portugues": 68, "porygon": 166, "porygon2": 166, "posit": [0, 1, 15, 29, 37, 39, 40, 43, 44, 45, 46, 52, 57, 71, 74, 78, 79, 82, 91, 125, 126, 128, 130, 135, 136, 138, 141, 143, 155, 164, 165, 171, 173, 187, 189, 192, 193, 194, 196, 200], "position_embed": 177, "positional_or_keyword": 162, "positional_ord": 52, "positive_even_numb": 57, "positive_no": 79, "positive_numb": 94, "posixpath": [173, 176, 177, 178, 179, 180], "possess": 188, "possibl": [0, 8, 11, 16, 17, 18, 19, 38, 39, 44, 47, 49, 52, 54, 57, 71, 78, 80, 83, 90, 91, 94, 116, 117, 128, 134, 135, 136, 141, 142, 145, 151, 152, 155, 157, 158, 170, 171, 173, 174, 175, 177, 178, 187, 190, 192, 195, 198, 200, 201, 208], "possibli": [7, 102, 131, 173, 196], "post": [25, 64, 107, 111, 127, 128, 135, 136, 138, 142, 143, 173, 174, 176, 177, 178, 184, 187, 192, 193, 194, 195], "postag": 199, "postal": 172, "postalcod": 117, "postdoc": 128, "poster": 185, "postscript": 128, "pot": [116, 129], "potato": [71, 74, 95, 129, 135, 136, 137], "potenti": [116, 117, 138, 139, 141, 142, 143, 145, 155, 170, 171, 172, 173, 176, 177, 178, 190, 197, 199], "pound": 197, "pour": 116, "poverti": 138, "pow": [70, 80, 82], "pow2": [53, 57], "power": [34, 35, 47, 52, 53, 57, 70, 80, 82, 89, 90, 95, 96, 103, 104, 108, 112, 116, 117, 118, 125, 128, 134, 135, 136, 137, 138, 139, 141, 148, 149, 151, 155, 169, 170, 172, 173, 175, 176, 177, 178, 198, 200], "powtwo": [34, 35], "powtwogen": 35, "pp": 39, "pple": 39, "ppp": 28, "pprint": 170, "practic": [22, 23, 28, 29, 39, 54, 71, 72, 74, 80, 85, 106, 128, 130, 131, 136, 141, 143, 149, 155, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 185, 189, 195, 196, 197, 198, 200, 207], "practical_estimation_of_the_bandwidth": 191, "praction": [175, 176], "practition": [176, 177], "prantsus": 117, "prantsusmaa": 117, "pre": [0, 80, 98, 131, 139, 141, 170, 173, 175, 177, 188, 196, 197, 198, 200], "prebuilt": 24, "prec": 30, "preced": [43, 60, 61, 71, 77, 89, 103, 128, 189], "precis": [1, 51, 95, 128, 131, 160, 165, 169, 171, 185, 188, 192, 198, 200], "precision_histori": 8, "precision_scor": 171, "preciss": [8, 16, 17, 18, 19], "pred": [171, 172, 173, 175, 178, 179, 180], "pred_and_plot": 177, "pred_and_plot_imag": [173, 175, 176, 177, 182], "pred_and_stor": 178, "pred_class": [172, 178], "pred_dict": 178, "pred_label": [172, 178], "pred_labels_and_prob": 178, "pred_list": 178, "pred_logit": [172, 178], "pred_prob": [172, 178], "pred_tim": 178, "predefin": [0, 5, 11, 68, 74, 80, 93, 128, 185], "predetermin": 116, "predicit": [171, 178], "prediciton": 172, "predict": [0, 4, 5, 14, 15, 98, 117, 127, 128, 131, 138, 142, 179, 180, 182, 188, 198], "predict_and_pars": [131, 136], "predict_messag": 137, "predicted_label": [16, 17, 18, 19], "prediction_kei": 117, "predictions_num": [11, 12, 13], "predicton": 172, "predictor": 188, "predomin": 26, "prefer": [35, 36, 51, 89, 103, 116, 130, 141, 145, 156, 170, 171, 172, 173, 174, 178, 185, 192, 195, 196], "prefix": [51, 83, 96, 101, 102, 116, 185, 187], "preidction": 175, "prematur": 128, "premis": [172, 173, 175, 177, 178], "premium": 141, "prep_output": [126, 128], "prep_prompt": 128, "prepar": [130, 132, 141, 142, 174, 175, 176, 178, 179, 180, 182, 184, 199, 207], "prepare_request": 126, "prepend": [151, 177], "preprend": 177, "preprocess": [173, 175, 177, 178], "prescript": 128, "presenc": [6, 51, 95, 109, 128, 143, 177, 189, 205], "present": [45, 47, 49, 52, 55, 56, 69, 71, 79, 84, 95, 128, 130, 138, 141, 143, 155, 158, 159, 162, 169, 172, 173, 176, 177, 178, 180, 185, 186, 188, 189, 190, 192, 193, 195, 196, 197, 198, 199, 200, 208], "preserv": [51, 128, 138, 178], "preset": 185, "presid": [128, 138], "press": [48, 89, 128, 139, 176, 187], "pression": 39, "pressur": 198, "prestig": 128, "prestigi": 128, "presum": 128, "pretend": 142, "preternatur": 128, "pretrain": [171, 172, 173, 178], "pretrained_effnetb2_food101_model_s": 178, "pretrained_effnetb2_model_s": 178, "pretrained_vit": 177, "pretrained_vit_model_s": [177, 178], "pretrained_vit_result": 177, "pretrained_vit_transform": 177, "pretrained_vit_weight": 177, "pretti": [14, 15, 24, 37, 64, 87, 92, 128, 130, 131, 138, 143, 155, 170, 171, 173, 175, 176, 178, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "prevent": [11, 12, 13, 14, 15, 16, 17, 18, 19, 83, 90, 101, 103, 131, 138, 172, 173, 175, 177, 178], "preview": [116, 117, 128, 130, 135, 136, 139, 143, 184, 186, 188, 189, 190, 194, 195, 196, 198, 200], "previou": [7, 38, 44, 51, 68, 75, 80, 96, 106, 141, 150, 169, 170, 171, 172, 174, 175, 176, 177, 178, 185, 189, 190, 192, 193, 194, 195, 197, 198, 200], "previous": [71, 80, 139, 141, 173, 174, 175, 176, 177, 178, 189, 190, 193, 195, 198, 199, 200], "prgn": 190, "prgn_r": 190, "price": [0, 4, 5, 101, 102, 128, 131, 135, 136, 139, 143, 145, 155, 156, 157, 166, 177, 198], "price_df": 157, "price_list": 157, "pricedf": 167, "primari": [128, 173, 177, 187, 198], "primarili": [47, 48, 138], "prime": [47, 48, 74, 177], "primeap": 166, "primit": 128, "princeton": 198, "princip": 197, "principl": [101, 117, 128, 173, 176, 177, 198], "prinplup": 166, "print": [6, 8, 10, 11, 12, 13, 14, 15, 18, 19, 24, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 89, 90, 91, 92, 93, 95, 96, 97, 101, 102, 103, 104, 106, 109, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 192, 198, 205], "print_data": 75, "print_financial_forecast": 137, "print_full_nam": 37, "print_fullnam": [74, 77], "print_hello": 66, "print_hello_three_tim": 66, "print_hi": 66, "print_hi_three_tim": 66, "print_list": 74, "print_msg": 36, "print_this_to_screen": 88, "print_train_tim": 172, "printer": [36, 37, 128, 137], "printer_nam": 137, "printf": 52, "printhello": 96, "printinfo": 77, "printnam": 101, "printoutput": [135, 136], "printstudentdata": 102, "prior": [7, 128, 170, 172, 173, 175, 198], "priori": 0, "priorit": [117, 132, 141], "prioriti": [141, 143], "prism": [190, 199], "prism_r": 190, "privaci": [139, 178, 207], "privat": [38, 80, 101, 102, 128, 142, 178], "privatenam": 89, "privileg": 199, "priyav": 141, "pro": [169, 173, 176, 178], "proactiv": 141, "prob": [171, 173, 175, 178, 179, 180], "probabl": [1, 5, 8, 11, 12, 13, 23, 51, 90, 116, 128, 131, 143, 145, 149, 170, 172, 173, 175, 176, 177, 178, 179, 180, 187, 189, 194, 195, 201, 207], "problem": [0, 12, 24, 29, 36, 38, 40, 52, 71, 78, 101, 116, 117, 125, 128, 130, 131, 138, 141, 170, 172, 173, 175, 176, 177, 178, 187, 195, 199, 200, 208], "probopass": 166, "proce": [7, 49, 94, 190], "procedur": [102, 198], "process": [0, 7, 11, 13, 14, 15, 17, 18, 19, 24, 28, 29, 31, 35, 48, 49, 54, 57, 66, 71, 78, 93, 98, 101, 102, 103, 106, 117, 128, 130, 131, 132, 134, 139, 141, 142, 143, 155, 157, 161, 169, 172, 173, 175, 177, 178, 188, 199, 200, 207], "processor": [98, 128, 172], "procrastin": [128, 131], "prod": [28, 80], "prod_": 28, "prod_i": 28, "prod_j": 28, "produc": [9, 15, 35, 39, 44, 71, 87, 103, 116, 128, 145, 146, 151, 159, 162, 169, 170, 171, 172, 176, 177, 178, 185, 207], "product": [11, 23, 26, 78, 80, 84, 90, 98, 104, 116, 117, 128, 130, 131, 135, 136, 138, 139, 141, 142, 143, 148, 151, 169, 172, 173, 174, 177, 187, 188, 189, 190, 200, 207], "production": 143, "profession": [128, 145, 185, 186, 187, 192, 193, 195], "professor": [117, 128], "profici": 188, "profil": [128, 141, 142, 176, 178], "profit": [117, 128, 141, 142], "profit_rang": 146, "profitlist": 146, "program": [0, 7, 18, 19, 24, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 96, 102, 103, 104, 106, 116, 117, 128, 129, 134, 139, 143, 173, 174, 176, 178, 188, 198, 207], "programdata": [61, 69, 80, 159, 162, 163, 164, 184, 187, 191, 193], "programm": [0, 38, 51, 57, 71, 74, 84, 89, 91, 101, 106, 128, 190], "programmar": 85, "programmat": [170, 176], "progress": [24, 130, 138, 139, 141, 170, 171, 172, 173, 176], "project": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 59, 83, 85, 116, 117, 128, 131, 135, 136, 138, 139, 141, 142, 170, 171, 173, 174, 176, 177, 178, 180, 188, 190, 197, 200, 207], "promin": 192, "promis": [106, 116, 131, 142, 173, 177, 184, 190, 198], "promontori": 128, "promopt": [130, 142], "promot": [93, 95, 131], "prompt": [45, 74, 80, 94, 95, 117, 127, 128, 131, 133, 135, 136, 137, 138, 142, 148, 178], "prompt_templ": [116, 131], "prompt_token": [135, 136], "prompttempl": [116, 117, 127, 129, 130, 131, 138, 139, 142], "promptvalu": 116, "prone": [173, 177], "pronoun": 101, "pronounc": [177, 199], "prop": [170, 178, 193, 196], "prop_cycl": [25, 107, 111], "proper": [70, 101, 117, 128, 143, 160, 178], "properli": [68, 69, 70, 87, 102, 143, 194, 195, 200], "properti": [22, 41, 80, 101, 103, 116, 131, 135, 137, 141, 158, 193, 198], "propon": 175, "proport": [0, 4, 5, 11, 13, 16, 17, 18, 19, 32, 128, 171, 178, 194, 196, 198], "proportion": 128, "propos": [106, 129, 130, 138], "prospect": [0, 128, 131, 139, 143], "protect": [54, 71, 92, 101, 102, 141, 143], "protein": [129, 169, 170], "protocol": [24, 34], "prototaxit": 117, "prototyp": [3, 10, 22, 102, 128], "proud": 176, "prove": [116, 128, 138], "proven": 175, "provid": [0, 22, 24, 36, 38, 42, 47, 49, 51, 52, 53, 55, 66, 69, 71, 72, 74, 77, 80, 84, 94, 101, 102, 103, 116, 117, 125, 126, 128, 130, 131, 138, 139, 141, 146, 148, 151, 153, 155, 156, 157, 159, 162, 167, 172, 174, 177, 178, 187, 189, 192, 194, 198, 199, 200, 208], "provinc": 117, "proxi": [70, 103, 126, 178], "prudent": [128, 141], "prune": [132, 186], "prwrxu49dd": 138, "pry": 131, "pseudo": [71, 81, 117], "pseudocod": 177, "pseudocolor": 187, "pseudorandom": 169, "psychic": 166, "psyduck": 166, "pt": [170, 174, 179, 180], "pth": [170, 172, 174, 176, 177, 178, 179, 180], "ptp": 192, "pubic": 178, "public": [84, 101, 133, 138, 176, 177, 178], "publicli": [128, 176], "publish": [128, 134, 175, 177, 178, 198], "pubu": 190, "pubu_r": 190, "pubugn": 190, "pubugn_r": 190, "pull": [117, 128, 131, 135, 136, 137, 138, 141, 143, 150, 177, 187, 196, 197, 200], "pull_from_greenhous": [135, 136], "pull_from_websit": 142, "pullov": [17, 19, 172], "puls": [128, 197], "pump": 131, "pumpkabooaverag": 166, "pumpkaboolarg": 166, "pumpkaboosmal": 166, "pumpkaboosup": 166, "punch": 128, "punctuat": 80, "puor": 190, "puor_r": 190, "pupitar": 166, "purchas": [0, 143, 171, 173, 178], "purd": 190, "purd_r": 190, "pure": [170, 176, 178], "puri": 141, "purpl": [187, 190, 192], "purples_r": 190, "purpos": [7, 22, 24, 42, 68, 72, 79, 80, 81, 89, 90, 101, 102, 103, 104, 108, 112, 128, 157, 169, 170, 171, 173, 176, 177, 180, 186, 187, 188, 193, 194, 197, 198, 200], "purposefulli": 117, "purrloin": 166, "pursuit": 128, "purugli": 166, "push": [128, 178], "put": [38, 39, 43, 44, 49, 52, 53, 71, 87, 94, 96, 116, 117, 128, 130, 131, 132, 135, 136, 138, 141, 142, 143, 153, 172, 174, 175, 176, 178, 179, 180], "puzzl": [128, 172, 177, 178], "pvalu": 186, "pwr": 169, "py": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 37, 52, 61, 72, 76, 80, 83, 84, 87, 90, 94, 116, 117, 126, 128, 130, 131, 132, 159, 162, 163, 164, 169, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 184, 187, 191, 193], "py3": 80, "py_list": 53, "py_tupl": 54, "pybrain": 24, "pyc": 178, "pycharm": [24, 185], "pycodestyl": 117, "pydant": 116, "pydantic_schema": 135, "pydantic_v1": [116, 135], "pydata": [184, 198, 202], "pygam": 24, "pykyra": 24, "pynb": 80, "pypdf": 132, "pypdfload": [130, 132], "pyplot": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 27, 107, 111, 130, 145, 146, 170, 171, 172, 173, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "pyqt": 24, "pyramid": [24, 47, 52], "pyroar": 166, "pyscript": 80, "pyth0ndatatyp": 52, "pythagora": 130, "pythagorean": 128, "pytho": 52, "python": [97, 98, 116, 117, 125, 126, 130, 134, 139, 145, 150, 151, 158, 159, 162, 165, 169, 170, 172, 173, 175, 176, 177, 179, 181, 182, 186, 188, 190, 193, 195, 198, 199, 207, 208], "python3": [55, 71, 116, 117, 126, 128, 130, 131, 132, 172, 173, 178], "python32": 52, "python38": 80, "python4datasci": 80, "python99": [44, 68, 69], "python_datatyp": 52, "python_dataypes_2021": 52, "python_learn": 69, "python_repl": 125, "python_studi": 69, "pythonblogsoftwar": 24, "pythondatatyp": 52, "pythonpath": 80, "pythonregex": 39, "pythonthi": 89, "pythonwikiengin": 24, "pythonwin": 80, "pytorch": [47, 179, 182, 207], "pytorch_project": 180, "pytz": [59, 63], "pyweek": 24, "q": [31, 90, 120, 144, 169, 172, 175, 176, 177, 178, 190, 194], "q9trqo4yau": 142, "qa": [117, 134, 141], "qaevalchain": 117, "qkv": 177, "qspeci": 117, "quad": [27, 31, 32], "quadrat": 74, "quagsir": 166, "qualit": [175, 176, 187], "qualiti": [117, 128, 130, 131, 132, 138, 139, 141, 145, 146, 172, 173, 175], "quantil": [145, 194], "quantit": [175, 194, 196, 199], "quantiti": [132, 136, 196], "quantiz": 187, "quarter": 198, "quarterli": 200, "quartet": 190, "quartil": [145, 194, 195, 196], "queen": 193, "queenstown": 194, "queer": 128, "queri": [125, 128, 134, 135, 137, 138, 141, 155, 177, 188, 198], "query_constructor": 131, "question": [48, 53, 116, 120, 125, 128, 130, 131, 141, 142, 143, 144, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 199], "question_answ": [117, 128, 132], "question_kei": 117, "questoin": 142, "quetion": 142, "quick": [84, 116, 117, 130, 131, 141, 153, 173, 174, 177, 178, 186, 193, 199], "quicker": [175, 176, 178], "quickest": [128, 178], "quickli": [116, 117, 128, 131, 139, 141, 152, 173, 174, 175, 176, 177, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200], "quiet": 131, "quietli": 128, "quilava": 166, "quilladin": 166, "quintero": 184, "quit": [7, 11, 13, 47, 54, 70, 71, 128, 131, 150, 152, 169, 170, 173, 175, 176, 177, 178, 186, 188, 189, 190, 191, 192, 193, 197, 198, 200, 201], "quo": 130, "quot": [52, 68, 74, 84, 89, 91, 92, 128, 135, 136, 138, 142, 170, 177, 185, 187], "quotat": [84, 87, 116], "quoted_statu": [138, 142], "quux": 53, "quz": 53, "qwilfish": 166, "qxzw7gfumi": 138, "r": [4, 11, 12, 13, 30, 31, 32, 45, 47, 48, 49, 52, 53, 54, 55, 56, 61, 66, 68, 69, 71, 74, 90, 91, 95, 101, 102, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 150, 155, 163, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "r1": 149, "race": [128, 184, 192], "rachel": [117, 136], "ractangular": 31, "rad": [32, 145], "rad2deg": 32, "radian": [80, 82], "radio": [128, 143], "radiu": [90, 95, 101, 128], "rag": 128, "rage": [117, 141], "raichu": 166, "raikou": 166, "rail": 128, "railroad": 128, "railwai": 127, "rain": [5, 128], "rainbow": [187, 190, 193, 195, 196, 198], "rainbow_r": 190, "rais": [8, 34, 35, 38, 49, 52, 53, 54, 55, 56, 61, 68, 70, 72, 80, 82, 84, 88, 95, 104, 106, 126, 128, 131, 138, 159, 164, 173, 193], "raise_for_statu": 126, "raise_from": 126, "raison": 128, "raleigh": 141, "ralph": 128, "ralt": 166, "ram": 68, "rambl": 128, "ramen": 178, "ramp": [117, 142, 187], "rampardo": 166, "ran": [47, 70, 71, 87, 101, 102, 128, 169], "rana": 149, "rand": [80, 155, 169, 190, 192, 198, 199, 201], "randaug": 173, "randint": [80, 81, 172, 190, 199], "randn": [25, 107, 111, 170, 172, 176, 177, 191, 194, 198], "random": [1, 3, 8, 11, 13, 16, 17, 18, 19, 22, 25, 51, 56, 68, 86, 107, 111, 130, 132, 148, 155, 170, 171, 175, 176, 177, 178, 179, 180, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "random_idx": 172, "random_image_path": [173, 178], "random_image_size_tensor": 169, "random_image_tensor": 177, "random_index": 177, "random_input_imag": 177, "random_input_image_error": 177, "random_numb": 80, "random_sampl": 149, "random_samples_idx": 173, "random_se": [169, 171], "random_split": 178, "random_split_1": 178, "random_split_2": 178, "random_st": [130, 171, 199], "random_tensor": [169, 172], "random_tensor_a": 169, "random_tensor_b": 169, "random_tensor_c": 169, "random_tensor_d": 169, "random_user_id": 80, "randomhorizontalflip": 173, "randomli": [3, 170, 171, 173, 175, 176, 178, 186, 198], "randomlist": 71, "randomst": 188, "randon": 199, "randrang": [51, 80, 81], "rang": [4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 35, 39, 48, 49, 52, 53, 54, 55, 57, 66, 70, 71, 72, 74, 80, 81, 89, 92, 101, 103, 107, 111, 128, 130, 136, 148, 149, 150, 151, 155, 156, 157, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "rangeindex": [18, 19, 155, 165], "rank": [9, 11, 13, 148, 149, 150, 151], "rank_bm25": 131, "ranska": 117, "ranskan": 117, "rant": 128, "rapid": [22, 128, 142], "rapidash": 166, "rapidli": [22, 128, 178], "rapidroad": 139, "rare": [8, 71, 106, 128, 136, 169], "rarer": 128, "raspberri": 178, "rate": [4, 5, 11, 12, 13, 95, 128, 136, 138, 141, 145, 170, 171, 172, 173, 174, 176, 177, 178, 180, 189, 192, 193, 197], "ratelimiterror": 138, "rather": [5, 7, 18, 19, 59, 66, 80, 84, 89, 103, 116, 128, 130, 131, 135, 137, 138, 141, 142, 155, 156, 158, 162, 164, 165, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 185, 194, 196, 198], "ratic": 166, "ratio": [0, 5, 14, 15, 16, 17, 82, 132, 141, 142, 178, 200], "ration": [51, 130], "rational": 178, "rattata": 166, "raw": [39, 91, 117, 131, 135, 136, 138, 142, 172, 173, 174, 175, 176, 177, 178, 179, 180, 198], "raw__payload__headers__deliv": 126, "raw_str": 91, "rayquaza": 166, "rayquazamega": 166, "rb": 68, "rbg": 202, "rbodi": 128, "rc": [185, 187, 196], "rcode": 128, "rcparam": [25, 27, 107, 111, 196, 198, 199], "rdbm": 200, "rdbu": [171, 190], "rdbu_r": 190, "rdgy": 190, "rdgy_r": 190, "rdpu": 190, "rdpu_r": 190, "rdwtg8e7gpws62or6": 117, "rdylbu": [171, 190], "rdylbu_r": 190, "rdylgn": 190, "rdylgn_r": 190, "re": [0, 7, 11, 24, 48, 52, 53, 74, 80, 116, 117, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 143, 155, 164, 165, 166, 179, 181, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 198, 200], "rea": 47, "reacal": 8, "reach": [1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 38, 47, 49, 68, 115, 117, 128, 135, 136, 141, 173], "react": [52, 53, 68, 116, 117, 125, 126, 130], "reaction": 131, "reactor": 128, "read": [22, 35, 36, 39, 40, 66, 70, 71, 74, 75, 76, 84, 89, 90, 96, 98, 102, 116, 117, 126, 127, 128, 130, 131, 135, 136, 138, 139, 141, 143, 149, 150, 151, 155, 163, 169, 170, 171, 172, 173, 175, 176, 177, 178, 184, 188, 189, 199, 207], "read_clipboard": [139, 155], "read_csv": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 133, 145, 146, 155, 156, 163, 166, 167, 184, 189, 195, 196], "read_excel": [155, 166], "read_html": 155, "read_imag": 173, "read_json": 155, "read_sql": 155, "read_sql_queri": 117, "read_tabl": 155, "read_timeout": 126, "readabl": [22, 28, 29, 42, 57, 68, 79, 80, 89, 98, 106, 156], "reader": [68, 116, 128, 130, 138], "readi": [71, 101, 103, 116, 117, 128, 134, 135, 136, 141, 142, 169, 170, 172, 173, 175, 176, 177, 178, 208], "readili": [85, 94], "readinto": 126, "readlin": [68, 126, 178], "readm": 68, "readthedoc": 171, "real": [1, 3, 4, 7, 8, 10, 23, 24, 31, 51, 90, 91, 92, 101, 102, 117, 128, 131, 133, 138, 139, 141, 143, 155, 170, 171, 173, 174, 175, 176, 178, 180, 188, 193, 194, 195, 198, 199, 207], "realist": 128, "realiti": [90, 125, 128, 177], "realiz": [128, 131, 132, 195], "realli": [16, 17, 18, 19, 39, 101, 102, 116, 117, 128, 129, 131, 132, 134, 136, 138, 139, 141, 142, 143, 169, 170, 172, 173, 175, 176, 177, 178, 184, 186, 188, 189, 192, 193, 194, 195, 198, 199, 200, 201], "rear": 136, "rearrang": [169, 173, 176, 177], "reason": [4, 12, 35, 36, 37, 38, 51, 74, 79, 96, 102, 106, 116, 117, 125, 126, 128, 130, 131, 134, 141, 142, 152, 161, 169, 172, 177, 178, 184, 186, 193, 195, 200], "reassign": [37, 52, 54, 90, 161, 162, 169, 173], "rebel": 128, "rebind": 96, "recal": [1, 128, 171, 172, 176, 177], "recalcul": [170, 171], "recall_histori": 8, "recall_scor": 171, "recap": [141, 171], "receiv": [7, 43, 44, 57, 77, 106, 116, 126, 128, 135, 177, 178], "recent": [34, 35, 36, 37, 38, 40, 48, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 126, 128, 138, 150, 159, 162, 164, 169, 172, 173, 175, 193, 198], "reciev": 24, "recip": [116, 131, 134, 170, 174, 178], "reciproc": 71, "recogn": [0, 5, 7, 16, 17, 18, 19, 38, 80, 173, 175, 176], "recognit": [0, 7, 16, 17, 131, 177, 178], "recollect": 190, "recomend": 90, "recommend": [0, 24, 38, 39, 40, 60, 61, 66, 68, 83, 89, 90, 102, 116, 128, 130, 131, 141, 142, 143, 148, 149, 169, 170, 173, 175, 177, 178, 180, 188, 190, 192, 193, 194, 196, 199, 207], "record": [97, 116, 128, 143, 163, 169, 184, 198, 200], "recount": [128, 141], "recours": 117, "recov": 173, "recoveri": 69, "recreat": [133, 172, 173, 175, 177, 178, 179, 180], "recruit": [128, 173], "rect": [101, 192], "rectangl": [47, 95, 101, 192, 194, 196, 200], "rectangular": [196, 200, 201], "rectifi": [44, 171], "rectifier_": 171, "recur": 106, "recurr": 207, "recurs": [22, 31, 86, 103, 178], "recursionerror": 78, "recursivecharactertextsplitt": [116, 117, 128, 130, 131, 132, 134, 139, 140, 141, 142, 143], "recursor": 78, "recv_into": 126, "recycl": 69, "red": [4, 8, 16, 17, 18, 19, 47, 89, 102, 117, 128, 136, 145, 146, 169, 170, 172, 176, 187, 190, 191, 193], "reddit": 128, "redeclar": 90, "redefin": [103, 198], "redirect": 126, "rediu": 101, "redownload": [175, 178], "reds_r": 190, "reduc": [4, 5, 11, 12, 13, 18, 19, 37, 47, 48, 74, 78, 116, 129, 135, 136, 138, 141, 142, 143, 153, 155, 170, 171, 173, 177, 178, 189, 195, 197, 198], "reduce_chain": 130, "reduceat": 153, "reduced_data_tsn": 130, "reduct": [0, 26, 130, 138, 207], "redund": [106, 155, 159], "redux": 53, "refactor": [38, 170], "refect": 188, "refer": [22, 24, 36, 37, 49, 52, 53, 54, 68, 70, 80, 83, 84, 85, 90, 91, 95, 96, 101, 103, 106, 112, 116, 117, 125, 128, 130, 131, 137, 138, 151, 152, 153, 155, 169, 170, 171, 172, 173, 175, 177, 178, 179, 180, 182, 184, 185, 187, 188, 190, 193, 194, 196, 197, 198, 199, 200, 204], "referec": 198, "referenc": [75, 76, 169, 173, 177, 184, 193, 194], "reference_vari": 101, "referenceerror": 70, "referr": 143, "refil": 141, "refin": [138, 188], "refinedocumentschain": 128, "reflect": [78, 128, 131, 138, 170, 177, 178, 188, 192, 194, 196, 198, 200], "reform": 200, "reformat": [52, 116], "refresh": [23, 128, 170, 178, 185], "refus": 128, "reg": [39, 187, 189, 190, 191, 198, 203], "regard": [128, 139, 186, 193, 198], "regardless": [43, 169, 170, 178], "regex": [22, 41, 117, 166], "regex101": 39, "regex_pattern": 39, "regic": 166, "regigiga": 166, "regim": [176, 177], "region": [117, 128, 138], "regirock": 166, "regist": [84, 173], "registeel": 166, "reglot": 188, "regplot": [186, 190, 192, 199], "regress": [2, 7, 9, 170, 171, 185, 186, 188, 189, 192, 198, 199, 203, 207], "regret": 132, "regular": [20, 39, 47, 52, 57, 108, 112, 131, 141, 142, 155, 171, 172, 173, 175, 176, 177, 178, 179, 194, 198], "regularization_param": [11, 12, 13, 14, 15, 16, 17, 18, 19], "regularli": [101, 128], "reheat": 129, "reign": 173, "reilli": 128, "reindex": 159, "reindex_axi": 196, "reinforc": 207, "reinvent": 198, "reiter": 171, "reject": 49, "rejoic": 128, "rel": [98, 116, 132, 172, 175, 185, 192, 196, 198], "relat": [4, 23, 59, 65, 66, 68, 70, 71, 77, 104, 116, 117, 131, 132, 135, 136, 171, 173, 177, 178, 184, 186, 193, 194, 197, 198, 199, 200, 201], "relationa": 155, "relationship": [0, 4, 5, 11, 12, 13, 14, 15, 16, 17, 32, 128, 170, 173, 186, 187, 188, 189, 190, 191, 196, 200], "releas": [71, 74, 116, 128, 131, 145, 169, 175, 177, 178], "release_conn": 126, "relentlessli": 132, "relev": [117, 127, 131, 135, 136, 138, 141, 143, 155, 172, 185, 189, 193, 197, 200, 201], "reli": [52, 68, 128, 178], "reliabl": [117, 135, 136], "relicanth": 166, "relief": 128, "reliev": 128, "reload": [8, 170, 197], "reload_ext": 8, "relplot": 198, "relu": [171, 172, 173, 174, 179, 180], "rem": 77, "remain": [9, 16, 17, 18, 19, 54, 68, 95, 128, 131, 171, 172, 173, 175, 177, 178, 184, 185, 188, 189, 190, 192, 197, 198, 199], "remaind": [48, 49, 77, 80, 82, 90, 95, 104, 145], "remark": [128, 134, 138], "remean": 49, "rememb": [16, 17, 18, 19, 35, 36, 47, 49, 69, 74, 75, 90, 91, 95, 103, 106, 116, 128, 149, 169, 170, 171, 172, 173, 175, 176, 177, 192, 193, 194, 195, 196, 198, 208], "remind": [128, 132, 138, 170, 171, 176, 178, 187], "reminisc": 127, "remoraid": 166, "remot": [71, 139, 141, 169, 176, 177], "remov": [0, 27, 36, 39, 47, 51, 52, 54, 68, 70, 74, 80, 102, 116, 117, 126, 129, 130, 131, 135, 138, 141, 142, 159, 160, 161, 165, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 185, 188, 191, 193, 194, 195, 198, 199], "remove_item": 74, "remove_sourc": 176, "remove_support_word": 68, "renam": [15, 24, 128, 137, 148, 165, 196, 200], "rename_axi": 162, "render": [11, 13, 24, 69, 108, 112], "renown": 128, "rent": [128, 177], "reorgan": 128, "rep": [139, 143], "repeat": [0, 47, 48, 52, 53, 54, 55, 68, 74, 78, 85, 87, 101, 103, 131, 143, 149, 152, 169, 170, 172, 177, 178, 198, 200], "repeatedli": [42, 47, 48, 49], "repel": 128, "repetit": [39, 47], "rephras": [143, 194], "repl": 125, "replac": [9, 17, 19, 35, 38, 39, 49, 52, 57, 90, 102, 103, 128, 130, 138, 139, 150, 155, 162, 164, 167, 178, 185, 187, 189, 191, 193, 195, 198], "repli": [120, 126, 128, 137, 142, 144], "replic": [170, 172, 174, 178, 179, 180, 183, 198], "repo": [117, 131, 141, 171, 172, 178], "repons": [117, 137], "report": [11, 13, 117, 128, 135, 136, 141, 143, 171], "repositori": [9, 37, 52, 169, 174, 177, 178, 180], "repr": 24, "repres": [1, 8, 16, 17, 18, 19, 28, 29, 31, 51, 52, 60, 61, 62, 64, 65, 70, 71, 77, 84, 88, 91, 92, 98, 101, 102, 106, 116, 128, 130, 138, 159, 162, 164, 165, 169, 170, 171, 172, 177, 184, 185, 187, 188, 189, 192, 194, 195, 196, 198, 200, 201], "represent": [0, 24, 51, 52, 60, 61, 84, 101, 128, 155, 170, 173, 175, 176, 177, 178, 184, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "reprint": 128, "reproduc": [25, 107, 111, 169, 171, 173, 174, 176, 177, 178, 195], "reproducbl": 169, "repubblica": 117, "republ": 117, "republiek": 117, "republik": 117, "republika": 117, "republiken": 117, "rep\u00fablica": 117, "request": [24, 117, 125, 126, 128, 135, 136, 137, 138, 142, 143, 150, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "request_id": 128, "request_timeout": [128, 130, 141], "requestor": 128, "requir": [0, 4, 11, 12, 13, 24, 26, 34, 35, 38, 42, 47, 48, 51, 57, 70, 71, 72, 74, 77, 79, 83, 89, 90, 91, 93, 98, 101, 102, 103, 106, 115, 116, 117, 128, 130, 135, 137, 141, 155, 159, 161, 162, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 208], "required_datatyp": 93, "requires_cons": [135, 136], "requires_grad": [169, 170, 171, 175, 176, 177, 178], "requires_processing_cons": [135, 136], "requires_retention_cons": [135, 136], "requis": 193, "requset": 142, "reread": 128, "rerun": 170, "resampl": 198, "resarch": 52, "rescan": 128, "rescu": [35, 38], "research": [52, 56, 117, 120, 128, 130, 139, 141, 144, 169, 171, 172, 173, 175, 178, 183, 187, 188, 193, 194, 196, 197, 200, 207], "resembl": [138, 198, 200], "reserv": [88, 90], "reset": [169, 170, 172, 173, 185], "reset_index": [155, 156, 166, 196], "resghap": 8, "reshap": [0, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 30, 136, 148, 151, 153, 173, 175, 177, 201], "reshiram": 166, "resid": [80, 191], "residplot": 199, "residu": [11, 13, 177, 190], "resiz": [68, 128, 145, 148, 173, 174, 175, 176, 177, 179, 180], "resize_s": [175, 176, 177, 178], "resnet": [175, 177], "resnet18": 175, "resnet50": 175, "resolut": [138, 145, 177], "resolv": [138, 157, 177, 178, 199], "reson": 198, "resound": 128, "resourc": [34, 68, 71, 139, 142, 169, 170, 175, 177, 187, 189, 190, 195, 196, 197, 198], "resp": [126, 128, 129], "respecitv": 173, "respect": [52, 59, 66, 71, 77, 92, 93, 94, 102, 128, 156, 158, 162, 163, 169, 170, 171, 172, 177, 178, 180, 186, 187, 188, 189, 196, 197, 198, 199, 200], "respectivv": 196, "respond": [116, 117, 127, 128, 137, 138, 141, 142, 143], "respons": [104, 116, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 141, 142, 178, 193, 197, 207], "response_kw": 126, "response_schema": [116, 117, 133], "responseschema": [116, 117, 133], "rest": [6, 47, 49, 52, 53, 68, 71, 74, 84, 109, 128, 137, 143, 159, 162, 172, 173, 177, 178, 185, 188, 190, 192, 193, 194, 196, 197, 198, 199, 205], "restart": [35, 47, 80, 172, 176, 177, 178, 185], "restaur": [128, 141, 188, 192, 193, 195], "restcountri": 117, "restor": [81, 136], "restrict": [38, 101, 106, 128, 136, 195], "restructur": 84, "result": [3, 7, 11, 12, 13, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 44, 45, 47, 48, 49, 51, 52, 53, 54, 65, 66, 70, 71, 74, 75, 77, 78, 80, 85, 88, 89, 94, 95, 103, 104, 116, 117, 126, 128, 131, 133, 134, 136, 138, 139, 140, 141, 150, 151, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 174, 175, 177, 179, 180, 181, 185, 187, 188, 189, 190, 196, 197, 198, 199, 200], "resum": 128, "resurc": 197, "ret": 193, "retail": [128, 133], "retain": [172, 177], "retention_period": [135, 136], "rethink": 175, "retir": 128, "retool": 142, "retrac": 134, "retri": [126, 128, 135, 136, 138], "retriev": [38, 52, 55, 77, 84, 92, 117, 120, 132, 134, 140, 141, 143, 164, 169, 175], "retrievalqa": [117, 134, 141], "retrieved_doc": 131, "retriever_from_llm": 131, "retriever_mmr": 140, "retriever_vanilla": 140, "retro": 142, "retrospect": 128, "retry_decor": 128, "retry_object": 128, "retry_st": 128, "retry_with": 128, "retrycallst": 128, "return": [8, 11, 13, 16, 17, 18, 19, 24, 30, 34, 35, 37, 38, 39, 45, 47, 48, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 94, 95, 101, 102, 103, 104, 106, 116, 117, 125, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 149, 150, 151, 152, 155, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 185, 186, 187, 192, 193, 195, 198, 199, 200], "return_direct": 126, "return_full_docu": 131, "return_intermediate_step": [116, 117, 128], "return_only_output": [126, 128], "return_source_docu": 134, "return_split_parent_docu": 131, "retweet": [138, 142], "retweeted_statu": [138, 142], "reuniclu": 166, "reus": [24, 38, 101, 128, 150, 173, 174, 176, 177, 179, 180], "reusabl": [40, 74, 80, 101, 103, 174, 177, 180, 181], "rev": 145, "rev_str": 35, "reveal": [106, 173, 177, 178, 187, 199, 208], "reveng": 141, "revenu": [135, 143, 187], "revers": [35, 37, 52, 54, 55, 74, 128, 138, 142, 148, 169, 187], "reverse_list": 74, "reverse_list1": 74, "review": [116, 117, 135, 143, 148, 173, 177, 178, 192, 193], "revis": [195, 196], "revisit": [141, 189, 190], "reviv": 128, "revolut": 145, "revolution": [0, 142], "revolv": 143, "reward": [0, 39, 52, 117, 143], "rewrit": [44, 74, 174, 180], "rewritten": 57, "rf": [175, 176, 177, 178], "rfind": 52, "rfloor": 95, "rgb": [11, 80, 172, 173, 175, 179, 180, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "rgb_color_gen": 80, "rgba": [187, 189], "rheader": 128, "rhydon": 166, "rhyhorn": 166, "rhyperior": 166, "ribbon": 128, "ricasoli": 128, "rich": [128, 131, 141, 194, 198, 199], "richard": 176, "rid": [128, 131, 171, 185, 191, 193, 195], "ride": [128, 138], "rideau": 117, "ridg": 128, "right": [27, 28, 30, 32, 42, 52, 72, 77, 84, 89, 94, 95, 102, 103, 104, 116, 117, 127, 128, 131, 132, 138, 141, 143, 145, 146, 150, 155, 169, 170, 171, 172, 173, 175, 176, 177, 178, 185, 186, 188, 189, 192, 193, 194, 195, 196, 197, 200], "rightarrow": [27, 28, 29, 31, 32], "rigid": 131, "rigor": [128, 198], "rim": 128, "rindex": 52, "riolu": 166, "rippl": 142, "risd": 128, "rise": 177, "risk": [116, 131, 138, 143, 198, 199], "riski": 116, "river": [117, 128], "rjust": [30, 52, 94], "rm": [175, 176, 177, 178], "rmdir": 80, "rmtree": [69, 178], "road": 175, "roam": 80, "robert": [128, 131, 170, 187], "robocal": 141, "robot": 0, "robust": [22, 98, 136, 141, 152, 173, 188, 202], "rock": 166, "rocket": [24, 128, 190, 192, 193, 195, 196, 197, 198, 199, 200], "rocket_r": 190, "rocki": 128, "rococo": 128, "rodriguez": 184, "roduct": 28, "roger": 145, "roggenrola": 166, "rohan": [5, 139], "roi": [128, 198], "role": [20, 89, 103, 129, 137, 138, 139, 141, 142, 143, 155, 207], "roll": [128, 153, 164, 170, 177], "roman": 128, "rome": 116, "romeo_and_juliet": 68, "romero": [155, 156, 167], "ron": 128, "ronald": [10, 14], "ronaldo": [47, 48, 145], "roof": [128, 136], "room": [4, 128, 131, 138, 141], "roommat": 128, "root": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 68, 71, 80, 82, 117, 128, 148, 151, 172, 173, 178, 179, 180], "root_dir": 117, "rootsoflisp": 134, "rose": [136, 158], "roselia": 166, "roserad": 166, "rosini": 128, "ross": 172, "rot": [128, 187], "rotat": [173, 177, 178, 187], "rotom": 166, "rotomfan": 166, "rotomfrost": 166, "rotomheat": 166, "rotommow": 166, "rotomwash": 166, "rough": [142, 198], "roughli": [116, 128, 177, 178, 189, 200], "round": [31, 35, 43, 52, 57, 80, 93, 95, 131, 142, 171, 178], "rout": [131, 178], "routin": [87, 151, 196, 198], "row": [8, 9, 12, 15, 16, 17, 18, 19, 31, 47, 48, 57, 68, 117, 128, 145, 148, 149, 150, 151, 152, 155, 159, 160, 162, 164, 165, 166, 169, 172, 175, 177, 178, 186, 188, 189, 190, 192, 196, 197, 199, 200, 201, 202], "row1": 161, "row2": 161, "row_color": 202, "row_index": 163, "row_index1": 157, "row_index2": 157, "row_labl": 155, "row_ord": [188, 197, 200], "row_posit": 155, "row_r1": 150, "row_r2": 150, "row_set": [175, 176, 177, 178], "royalti": 128, "rpm": 167, "rss": 128, "rstrip": 52, "rt": 68, "rtm": 128, "rtol": 172, "rtx": [169, 175], "ru": [71, 117], "rubi": 98, "rufflet": 166, "rug": [128, 186, 191], "rule": [0, 7, 18, 19, 31, 32, 52, 74, 98, 103, 151, 155, 169, 170, 171, 178, 193, 196, 200], "run": [6, 22, 23, 24, 34, 35, 36, 37, 47, 48, 49, 51, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 75, 76, 77, 80, 89, 90, 96, 98, 101, 103, 109, 116, 117, 125, 126, 128, 130, 132, 134, 135, 136, 137, 138, 139, 142, 143, 170, 171, 172, 173, 174, 175, 177, 180, 181, 185, 187, 195, 197, 198, 205], "run_as_str": 126, "runawai": 128, "runnabl": 98, "runner": 128, "runtim": [70, 71, 80, 103, 134, 170, 172, 173, 175, 176, 177, 178, 180, 184], "runtimeerror": [70, 71, 169, 172, 173], "runtimewarn": 151, "rupert": 141, "russel": 128, "russia": [37, 53, 71], "russian": 68, "rusti": 128, "rvalu": 186, "rvert_": 27, "rw": 170, "rwightman": 175, "r\u00e9publiqu": 117, "s1": [59, 101, 164, 165], "s2": [59, 101, 164, 165], "s2023": 139, "s3": [164, 165, 172], "s4": 165, "s_car": 103, "saa": 139, "sabley": 166, "sableyemega": 166, "sach": 128, "sacrific": [169, 172, 178], "sad": 36, "safe": [54, 68, 101, 128, 131, 135, 136, 139, 187, 191], "safer": [68, 69, 138], "safeti": 133, "sagemak": 178, "sai": [1, 4, 5, 7, 37, 39, 48, 77, 80, 90, 102, 103, 116, 117, 126, 127, 128, 129, 131, 132, 137, 141, 142, 143, 155, 169, 171, 172, 173, 174, 175, 176, 177, 178, 185, 186, 187, 188, 189, 190, 193, 194, 196, 197, 198, 199, 200], "said": [1, 8, 52, 103, 128, 129, 130, 131, 134, 141, 151, 171, 173, 177, 185, 187, 188, 189], "saint": 145, "sake": [128, 156, 184], "salad": [116, 129, 135], "salam": 166, "salamencemega": 166, "salari": [72, 101, 103, 131, 145, 159], "salary_rang": 136, "salarynotinrangeerror": 72, "sale": [117, 128, 135, 136, 139, 143, 198], "sales_data_of_bathingsoap": 146, "sales_rep": 139, "sales_rep_compani": 143, "sales_rep_nam": 143, "salesdata": 146, "salesforc": 135, "salk": 47, "salli": 116, "salmon": 196, "salt": 116, "salvag": 128, "sam": [116, 128, 130, 139, 141, 156, 158, 159, 160, 161, 162, 165], "same": [7, 9, 17, 19, 20, 28, 29, 31, 32, 34, 35, 37, 40, 43, 44, 47, 49, 52, 56, 71, 74, 75, 76, 77, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 108, 112, 117, 126, 128, 130, 131, 135, 136, 137, 138, 141, 142, 146, 148, 149, 150, 151, 152, 155, 158, 159, 160, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 185, 186, 187, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200], "sampl": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 25, 34, 68, 81, 91, 101, 103, 107, 111, 116, 132, 135, 136, 138, 142, 149, 152, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 189, 190, 192, 193, 194, 195, 198, 199, 200], "sample_1": 194, "sample_2": 194, "sample_3": 194, "sample_cmap": 187, "sample_color": 187, "sample_combo": 194, "sample_decscription_str": 138, "sample_descript": 138, "sample_melt": [192, 200], "samsara": 142, "samsung": 77, "samurott": 166, "san": [116, 117, 128, 137, 139, 141, 143, 145, 184], "san_francisco_tre": 117, "sandal": [7, 17, 19, 172], "sandil": 166, "sandshrew": 166, "sandslash": 166, "sandwich": 138, "sandwichlov": 138, "sanit": 138, "sanitize_sequ": 193, "santa": 128, "sapp": 184, "sarah": 141, "sarban": 131, "sarcasm": 127, "sassi": 127, "sat": [169, 193, 194, 195, 196], "satisfi": [31, 37, 42, 48, 49, 57, 103, 128, 150, 177], "satur": [187, 194, 195, 196, 198], "sauerkraut": 129, "saunter": 128, "sausag": 129, "saut\u00e9": 129, "save": [24, 30, 34, 35, 80, 87, 98, 116, 128, 131, 133, 136, 138, 139, 141, 145, 169, 171, 173, 175, 176], "save_filepath": 176, "save_model": [174, 176, 177, 178, 179, 180], "saved_model": 180, "saved_model_01": 170, "savefig": [30, 145, 146, 178], "savor": [132, 138], "saw": [24, 102, 128, 137, 141, 171, 175, 176, 177, 178], "sawk": 166, "sawsbuck": 166, "scalabl": [130, 178, 200], "scalar": [26, 151, 152, 155, 156, 171, 176, 195, 196], "scale": [0, 128, 141, 142, 143, 145, 152, 171, 172, 174, 175, 176, 177, 178, 185, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "scale_hu": 195, "scan": [98, 128, 173, 199], "scandic": 53, "scandir": 173, "scar": 128, "scarc": 128, "scare": 128, "scari": 128, "scatter": [8, 10, 11, 12, 13, 14, 15, 130, 157, 170, 171, 178, 186, 188, 190, 191, 192, 193, 197, 199, 200, 203], "scatter3d": 11, "scatter_kw": [188, 189, 190, 192, 199], "scatterbug": 166, "scatterplot": [188, 189, 190, 192, 193, 200], "scc": 189, "scenario": [0, 4, 76, 103, 137, 141, 173, 177, 178, 185, 188, 189, 193, 194, 195, 198, 208], "scene": [11, 169, 170, 172, 176], "sceneri": 116, "sceptil": 166, "sceptilemega": 166, "schedul": [143, 170, 177], "schema": [129, 130, 133, 135, 136, 137, 141, 143], "scheme": [128, 131, 177, 187], "schnitzel": 129, "school": [23, 51, 116, 117, 127, 128, 131, 138, 139, 156, 169, 195, 196], "schtick": 128, "scienc": [0, 1, 8, 22, 24, 52, 55, 68, 74, 80, 116, 117, 125, 128, 130, 132, 135, 136, 138, 141, 155, 158, 168, 170, 171, 177, 180, 186, 188, 197, 198, 200, 208], "scientif": [24, 148, 177, 187, 195], "scientist": [116, 117, 127, 171, 176], "scikit": [47, 141, 148, 171, 199, 207], "scipi": [24, 151, 186, 191, 198, 199], "scizor": 166, "scizormega": 166, "scoliped": 166, "scope": [22, 36, 70, 75, 76, 80, 89, 94, 100, 127, 131, 142, 171, 193, 194, 200], "score": [1, 4, 8, 9, 11, 13, 45, 117, 128, 133, 156, 171, 194, 196], "scorebook": 196, "scorecard": [196, 200], "scott": [138, 195], "scrafti": 166, "scraggi": 166, "scrap": 128, "scrape": [142, 143], "scratch": [34, 101, 103, 130, 169, 174, 175, 176, 177, 178], "scream": 128, "screen": [52, 59, 87, 94, 138, 188, 197], "screen_nam": [138, 142], "screw": 128, "script": [24, 71, 80, 95, 98, 127, 128, 141, 142, 171, 172, 173, 175, 176, 177, 181], "scroll": 170, "scrub": 141, "scrum": 139, "scrumptiou": 138, "sculptur": 128, "scyther": 166, "sd": [152, 196, 198], "sdk": 178, "se": [128, 141], "sea": 128, "seaborn": [189, 190, 191, 196, 197, 198, 199, 200, 201, 202], "seadra": 166, "seagreen": 200, "seak": 166, "seal": 128, "sealeo": 166, "search": [38, 52, 55, 83, 96, 103, 116, 117, 125, 126, 130, 131, 135, 136, 167, 172, 176, 177, 178, 197], "search_kwarg": [131, 140], "search_str": 126, "search_term": 126, "search_typ": 140, "searchabl": 116, "season": [45, 74, 128], "seat": 128, "sec": 143, "second": [7, 31, 34, 35, 37, 46, 47, 52, 53, 54, 57, 60, 61, 63, 64, 65, 66, 70, 71, 75, 77, 80, 85, 90, 94, 95, 102, 103, 106, 128, 129, 137, 138, 139, 140, 143, 150, 158, 159, 162, 164, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 185, 193, 194, 195, 196, 198, 200], "second_last": 52, "second_lett": 52, "second_numb": 94, "second_respons": 137, "secondari": 46, "secondli": [135, 136, 169, 188, 198], "secret": [177, 208], "section": [2, 7, 36, 51, 52, 57, 68, 70, 89, 94, 115, 116, 117, 130, 138, 139, 143, 155, 156, 157, 158, 159, 160, 163, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 192, 195, 197, 198, 208], "sector": [14, 15, 142], "secur": [101, 117, 131, 135, 136, 139, 143, 170, 172], "sedan": [155, 156, 167], "sediment": 128, "see": [4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 34, 35, 36, 37, 38, 39, 40, 44, 47, 48, 49, 51, 52, 55, 57, 66, 68, 70, 71, 74, 75, 76, 77, 79, 80, 81, 84, 87, 88, 89, 92, 93, 94, 95, 98, 101, 103, 104, 106, 107, 108, 109, 111, 112, 116, 117, 125, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 204, 205], "seed": [25, 81, 107, 111, 128, 131, 170, 172, 173, 175, 177, 178, 179, 180, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "seedot": 166, "seek": [68, 169], "seek_set": 68, "seekabl": 68, "seeker": [128, 135, 136], "seel": 166, "seem": [51, 83, 106, 116, 117, 128, 130, 131, 132, 134, 171, 172, 176, 177, 178, 186, 194, 195, 197, 198, 199, 200], "seen": [36, 38, 68, 90, 106, 128, 131, 138, 155, 156, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 190, 191, 192, 193, 194, 199, 200], "segment": [0, 85, 117, 141, 172, 185, 186, 188, 192, 197], "segreg": [185, 192, 195, 196, 198, 200], "seismic": 190, "seismic_r": 190, "seismitoad": 166, "seiz": 141, "seldom": 128, "select": [0, 4, 5, 24, 52, 116, 117, 128, 130, 141, 142, 143, 145, 148, 150, 156, 159, 162, 167, 175, 176, 178, 187, 195, 198, 199, 200], "select_difficulti": 83, "select_threshold": 8, "selectbackward0": [171, 177], "selected_doc": 130, "selected_indic": 130, "self": [0, 34, 35, 38, 57, 71, 72, 84, 101, 103, 104, 117, 126, 128, 136, 159, 162, 164, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 184, 193], "self_attn": 177, "self_mag": 104, "self_queri": 131, "selfattent": 177, "selfqueryretriev": 131, "sell": [101, 128, 130, 131, 139, 141], "seller": 131, "semant": [116, 130, 131, 133, 134], "semanticsimilarityexampleselector": 116, "semest": 170, "semi": [24, 103, 175], "send": [126, 135, 136, 137, 141, 143, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 198], "senior": 136, "sens": [0, 4, 11, 12, 13, 37, 47, 88, 90, 128, 132, 134, 138, 151, 155, 170, 171, 172, 174, 177, 180, 184], "sensat": 177, "sensibl": 104, "sensit": [49, 88, 90, 95, 176, 187, 198], "sent": [7, 117, 128, 129, 136, 137, 141, 143, 178], "sentenc": [39, 47, 52, 56, 94, 95, 116, 117, 127, 128, 132, 138, 139, 141, 143, 177], "sentiment": 143, "sentinel": 34, "sentret": 166, "sep": [60, 61, 84, 87, 94, 152, 166], "sepal": [9, 10, 14, 145, 184, 192], "sepal_length": [10, 14, 184, 190, 192, 193, 199, 202], "sepal_width": [10, 14, 184, 189, 190, 192, 193, 199, 202], "sepallength": 145, "sepallengthcm": 145, "sepalwidthcm": 145, "separ": [7, 18, 19, 44, 47, 51, 52, 53, 54, 55, 56, 57, 68, 69, 71, 72, 74, 88, 89, 90, 92, 94, 95, 96, 101, 103, 116, 117, 128, 130, 131, 138, 141, 143, 146, 157, 163, 170, 171, 172, 173, 185, 186, 188, 190, 192, 194, 195, 198, 199, 200], "separatelli": 15, "seper": 173, "septemb": [45, 128, 135], "seq": [28, 29, 81], "sequenc": [28, 29, 34, 35, 47, 49, 53, 54, 55, 68, 69, 70, 74, 78, 79, 80, 81, 87, 89, 91, 92, 93, 95, 96, 116, 135, 150, 152, 164, 165, 169, 175, 177, 188, 189, 198, 199], "sequencemethod": 89, "sequenti": [0, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "sequoia": 136, "serbian": 68, "seren": 184, "serena": 130, "seri": [29, 35, 46, 47, 48, 64, 80, 98, 116, 117, 130, 131, 133, 138, 139, 141, 167, 170, 172, 173, 174, 175, 177, 178, 188, 191, 192, 195, 197, 200, 207], "serial": [84, 170], "serie_function1": 27, "serie_function2": 27, "serif": [196, 198], "seriou": [127, 128], "serp_api_kei": 116, "serpapi": [116, 125], "serpapi_api_kei": [116, 125], "serperior": 166, "serv": [3, 9, 10, 17, 19, 72, 84, 108, 112, 116, 128, 129, 137, 142, 170, 177, 197], "server": [1, 8, 128, 131, 138, 176, 178, 198], "servic": [116, 128, 133, 137, 139, 142, 172, 174, 176, 178], "servin": 166, "session": [80, 126, 143, 173, 176], "set": [0, 1, 3, 4, 9, 10, 12, 13, 14, 15, 22, 24, 34, 38, 39, 48, 52, 53, 58, 68, 69, 74, 80, 91, 93, 95, 101, 102, 103, 116, 117, 126, 128, 129, 130, 131, 132, 137, 138, 139, 142, 143, 145, 149, 150, 152, 155, 156, 157, 159, 160, 161, 162, 169, 171, 172, 174, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208], "set1": [188, 190, 193, 196, 200], "set1_cont": 140, "set1_r": 190, "set2": [190, 194, 195, 196, 199], "set2_cont": 140, "set2_r": 190, "set3": [190, 194, 195], "set3_r": 190, "set_": 193, "set_1": 102, "set_access_token": [138, 142], "set_axis_label": [197, 200], "set_context": 185, "set_except": 128, "set_fonts": 196, "set_hatch": 145, "set_index": [155, 163, 172, 178, 196], "set_opt": 155, "set_printopt": 153, "set_se": [176, 177, 178], "set_styl": [185, 187, 189, 195, 196], "set_temperatur": 38, "set_titl": [146, 173, 178, 197, 200], "set_transform": 193, "set_vis": 199, "set_xlabel": [177, 178, 195, 196, 198], "set_xtick": [177, 196], "set_xticklabel": [195, 197], "set_ylabel": [177, 178, 195, 196, 198], "set_ytick": [177, 196], "setattr": [102, 103], "setenec": 139, "seterr": 153, "setlevel": 131, "setmaxpric": 101, "setosa": [9, 10, 14, 145, 184, 192, 202], "setstat": 81, "settabl": 51, "setter": 101, "settl": [128, 141], "settler": 128, "setup": [14, 15, 18, 19, 169, 170, 173, 174, 179, 180], "seven": [47, 80, 128, 139, 142, 143], "sever": [4, 5, 9, 10, 14, 24, 35, 39, 45, 53, 65, 66, 71, 80, 94, 128, 131, 150, 169, 171, 173, 174, 175, 176, 177, 178, 180, 195], "severli": 177, "sevip": 166, "sewaddl": 166, "sex": [171, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200], "sex_tim": 195, "sfdc": 135, "sfp": 128, "sftree": 117, "sgd": [170, 171, 172, 177], "sgml": 128, "sh": 101, "shaan": 141, "shaanvp": 138, "shade": [128, 187, 189], "shadow": [128, 188], "shake": [128, 171], "shakespear": 130, "shall": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "shame": 128, "shampoo": 146, "shampoosalesdata": 146, "shanghai": 57, "shape": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 101, 128, 142, 148, 149, 150, 151, 152, 155, 159, 170, 174, 175, 176, 178, 179, 180, 184, 188, 192, 195], "sharabl": 101, "share": [9, 17, 19, 80, 102, 106, 116, 126, 128, 130, 132, 138, 139, 141, 142, 143, 155, 169, 174, 175, 176, 177, 178, 186, 187, 193, 198, 200], "shareabl": [176, 178], "sharei": [30, 177, 186, 188, 197, 200], "sharex": [30, 146, 177, 186, 188, 195, 197, 200], "sharpedo": 166, "sharpedomega": 166, "sharpli": 173, "shayminland": 166, "shayminski": 166, "she": [72, 101, 116, 128, 138, 141, 143], "shear": 128, "shedinja": 166, "sheet": [128, 147, 154, 155, 168, 170], "sheet_nam": 68, "shelfwar": 143, "shelgon": 166, "shell": [35, 36, 37, 66, 87, 90, 125, 169, 178, 188], "shellder": 166, "shello": 166, "shelmet": 166, "shelter": 128, "shelton": 184, "shepherd": 143, "shibbi": 117, "shieldon": 166, "shift": [24, 44, 47, 48, 49, 89, 95, 104, 128, 135, 169, 176, 199], "shiftri": 166, "shimmer": 128, "shine": [128, 177, 190, 192, 195], "shinx": 166, "ship": [116, 117, 138], "shirt": [17, 19, 128, 172], "shoe": 128, "shoot": [128, 184], "shop": [128, 131], "shopifi": 117, "shopper": 128, "shore": 128, "short": [45, 47, 57, 74, 79, 84, 89, 90, 116, 127, 128, 130, 132, 138, 143, 163, 169, 172, 173, 174, 176, 177, 178, 180, 197], "short_list": [138, 142], "shortcut": [22, 31, 169], "shorten": 71, "shorter": 131, "shortest": 128, "shorthand": 145, "shortli": [177, 178, 188, 195, 199], "shot": [116, 117, 125, 126, 128, 130, 184, 196, 198], "should": [4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 35, 36, 37, 39, 40, 43, 44, 47, 51, 55, 57, 68, 69, 71, 74, 80, 84, 89, 90, 94, 98, 102, 106, 109, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 145, 146, 150, 151, 155, 156, 159, 160, 163, 164, 165, 169, 170, 171, 174, 177, 178, 179, 180, 186, 187, 188, 189, 193, 194, 198, 200, 205, 207], "shouldn": [172, 173, 176, 193, 198], "shout": 177, "shovel": 128, "show": [4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 34, 48, 49, 52, 60, 61, 65, 75, 77, 78, 79, 80, 91, 98, 101, 102, 104, 108, 109, 112, 116, 117, 128, 130, 132, 134, 139, 141, 142, 145, 155, 156, 158, 161, 162, 163, 165, 169, 170, 172, 173, 175, 177, 178, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 205], "show_config": 153, "show_progress": 131, "showcap": 192, "showcas": [138, 169, 175, 177, 178], "showflier": [192, 194], "shown": [3, 34, 37, 38, 44, 47, 49, 52, 53, 70, 83, 98, 101, 136, 155, 156, 157, 159, 160, 161, 162, 163, 174, 185, 194, 196, 201], "showroom": 155, "shrdlu": 128, "shrimp": 129, "shroomish": 166, "shuckl": 166, "shuffl": [51, 80, 81, 128, 172, 173, 174, 178, 179, 180], "shuffle_list": 80, "shuppet": 166, "shutil": [69, 178], "si": 116, "sibl": 7, "sibsp": [194, 196], "side": [95, 103, 117, 128, 129, 143, 155, 169, 172, 173, 174, 179, 180, 185, 192, 194, 200], "sierra": 128, "sig": 193, "sight": [34, 128], "sigilyph": 166, "sigma": [8, 28, 81], "sigma_squar": 8, "sigmoid": [5, 7, 171], "sigmoidbackward0": 171, "sign": [25, 29, 77, 82, 89, 90, 107, 111, 117, 128, 135, 136, 143, 178, 188, 193], "signal": [0, 7, 132, 135, 136, 138, 141, 142, 178, 198], "signatur": [106, 128], "signer": 143, "signific": [23, 51, 90, 143, 155, 172, 177, 184, 187, 188], "significantli": [8, 11, 12, 13, 128], "signs_of_mental_il": 184, "silcoon": 166, "silenc": 163, "silent": 128, "silicon": [127, 128, 138], "siliconoracl": 127, "siliconvallei": 131, "silu": 175, "silver": 173, "silverman": 195, "simiar": 92, "similar": [0, 4, 7, 8, 11, 13, 33, 35, 37, 39, 40, 47, 48, 52, 54, 57, 68, 74, 80, 83, 89, 96, 102, 108, 112, 116, 117, 128, 130, 131, 133, 138, 140, 141, 150, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 185, 188, 189, 191, 192, 193, 195, 197, 198, 200, 201, 202], "similar_prompt": 116, "similari": 95, "similarity_": 30, "similarity_search": [131, 132], "similarli": [31, 32, 38, 39, 51, 52, 56, 68, 69, 75, 76, 83, 91, 92, 96, 101, 102, 103, 104, 106, 128, 158, 165, 172, 177, 184, 186, 187], "similiar": [171, 172, 176, 177], "simipour": 166, "simisag": 166, "simisear": 166, "simmer": 129, "simmon": 187, "simpl": [7, 18, 19, 20, 22, 24, 34, 35, 36, 37, 38, 48, 52, 55, 59, 68, 71, 72, 80, 87, 91, 95, 97, 98, 102, 106, 108, 112, 128, 130, 132, 134, 139, 142, 143, 157, 159, 162, 163, 165, 170, 171, 173, 176, 178, 179, 180, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 207], "simple_transform": [173, 176], "simplefilt": 130, "simpler": [24, 78, 116, 171, 188, 189, 195, 199], "simplesequentialchain": 116, "simplest": [43, 47, 52, 80, 125, 149, 151, 172, 177, 178, 188, 194, 196], "simpli": [34, 35, 37, 38, 48, 52, 74, 83, 89, 95, 96, 102, 103, 117, 128, 131, 138, 141, 143, 151, 159, 177, 197], "simplier": [11, 12, 13, 14, 15, 16, 17, 18, 19], "simplif": 177, "simplifi": [5, 7, 37, 117, 159, 173, 177], "simul": [104, 116, 128], "simultan": [4, 5, 77, 189, 190, 195, 198], "sin": [11, 12, 13, 14, 15, 16, 17, 27, 80, 82, 148, 151, 185, 198, 200], "sinc": [7, 8, 10, 11, 12, 13, 35, 37, 39, 44, 47, 49, 53, 54, 55, 56, 65, 66, 68, 71, 74, 77, 80, 81, 87, 92, 101, 102, 103, 104, 106, 117, 127, 128, 131, 132, 138, 141, 142, 143, 150, 152, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 190, 191, 192], "sine": [27, 80, 82, 148, 185, 198], "sing": [94, 101, 128, 169], "singapor": 54, "singer": 116, "singl": [4, 11, 13, 26, 37, 39, 47, 52, 53, 56, 66, 71, 76, 79, 91, 92, 94, 98, 101, 106, 128, 130, 131, 135, 136, 138, 139, 140, 141, 142, 149, 150, 155, 157, 164, 169, 171, 172, 174, 176, 178, 179, 180, 185, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 202], "single_feature_map": 177, "single_flattened_feature_map": 177, "singular": [31, 136, 151], "sinh": [51, 80, 82], "sink": 128, "sinlg": 178, "sinplot": 185, "sinusoid": [4, 11, 12, 13, 14, 15, 16, 17, 200], "sinusoid_degre": [11, 12, 13, 14, 15, 16, 17], "sister": [128, 136], "sit": [117, 128], "sitcom": 131, "site": [80, 116, 117, 125, 126, 128, 130, 131, 132, 143, 159, 162, 163, 164, 173, 184, 187, 191, 193], "sitter": 128, "situat": [35, 46, 54, 71, 74, 77, 93, 128, 138, 185], "six": [37, 80, 106, 126, 128, 155, 156, 167, 187], "sixteen": 128, "size": [4, 5, 8, 9, 11, 12, 13, 16, 17, 18, 19, 47, 48, 49, 52, 68, 83, 101, 116, 128, 130, 131, 139, 141, 143, 148, 149, 151, 152, 155, 156, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "size_func": 199, "skarmori": 166, "sketch": [101, 102, 128], "skew": [178, 198], "skewer": 129, "skiddo": 166, "skiff": 128, "skill": [0, 45, 47, 55, 68, 90, 101, 103, 128, 136, 145, 175, 177, 178, 198, 199], "skillet": [116, 129], "skim": 128, "skinnier": 195, "skip": [43, 44, 47, 48, 49, 52, 71, 77, 128, 132, 142, 171, 172, 173, 175, 176, 177, 178, 180], "skiploom": 166, "skitti": 166, "sklearn": [130, 171, 172, 199], "skorupi": 166, "skrelp": 166, "skuntank": 166, "sky": [128, 187], "slack": [117, 126, 143], "slake": 166, "slakoth": 166, "slash": [52, 69, 195], "slashdot": 128, "sled": 128, "sleep": [22, 67, 80, 87, 128], "sleev": 132, "slice": [56, 89, 92, 129, 150, 155, 199], "slice_a": 150, "slicebackward0": [171, 177], "slick": 128, "slide": 128, "slidingtackl": 145, "sliggoo": 166, "slight": [20, 54, 108, 112, 172, 178, 200], "slightli": [66, 88, 128, 131, 169, 170, 173, 175, 176, 177, 178, 184, 193], "slip": [128, 131], "slk": 117, "slope": [57, 74, 95, 128, 186, 196], "sloppi": [117, 130], "slot": 150, "slow": [128, 131, 151, 159, 178], "slowbro": 166, "slowbromega": 166, "slower": [98, 178], "slowk": 166, "slowli": [128, 173, 176, 177, 178, 192, 193, 194, 198], "slowpok": 166, "slugma": 166, "slurpuff": 166, "sm_doc": 128, "sm_loader": 128, "small": [7, 11, 12, 13, 20, 49, 57, 72, 80, 85, 98, 108, 112, 116, 117, 128, 130, 131, 132, 139, 141, 143, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 188, 190, 192, 196, 198, 199, 200], "smaller": [45, 46, 74, 93, 117, 128, 130, 131, 141, 148, 151, 158, 169, 170, 172, 173, 175, 176, 177, 178, 190, 192, 199], "smallest": [56, 82, 130, 177], "smallpox": 47, "smart": [90, 116, 127, 128, 141, 177, 178], "smart_divid": 37, "smarter": 139, "smartest": 141, "smartphon": [172, 177, 178], "smash": 175, "smeargl": 166, "smfyb": 80, "smi": 169, "smile": 128, "smim": 156, "smith": [116, 141, 156], "smoke": [128, 171, 198, 200], "smoker": [188, 191, 192, 193, 194, 195, 196, 197, 198, 200], "smoochum": 166, "smoot": 198, "smooth": [134, 178, 195, 198], "smoother": 188, "smoothli": 77, "sn": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "snail": 138, "snake": 90, "snake_cas": 90, "sname": 162, "snapshot": [135, 136], "sne": 130, "sneak": [128, 184], "sneaker": [17, 19, 141, 172], "sneaki": 177, "sneasel": 166, "snippet": [116, 117, 133], "snivi": 166, "snore": 131, "snorlax": 166, "snorunt": 166, "snover": 166, "snow": [5, 128], "snowfal": 128, "snowflak": 128, "snowi": 128, "snowsho": 128, "snubbul": 166, "so": [1, 3, 6, 7, 14, 15, 17, 18, 19, 22, 27, 31, 32, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 68, 70, 71, 74, 75, 77, 79, 80, 81, 85, 88, 89, 90, 91, 93, 95, 96, 98, 101, 102, 103, 104, 106, 109, 116, 117, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 148, 150, 151, 155, 156, 159, 161, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205], "soak": 138, "soar": 197, "soccer": [145, 200], "social": [1, 8, 128, 143], "societi": [125, 128, 131, 138], "socket": [24, 126], "socketerror": 126, "sockettimeout": 126, "sofifa": 145, "soften": [128, 129], "softmax": [169, 171, 172, 173, 174, 175, 178, 179, 180], "softwar": [22, 24, 45, 128, 131, 133, 136, 139, 143, 175, 177, 178, 188], "solar": 138, "sold": [117, 128, 135, 136, 141, 146], "sole": [186, 187, 198], "solemn": 128, "solid": [128, 138, 142, 178, 185], "solo": 116, "solosi": 166, "solrock": 166, "solut": [0, 36, 38, 40, 70, 74, 76, 93, 130, 131, 138, 139, 142, 146, 151, 167, 178, 195, 198, 200], "solv": [31, 57, 76, 101, 125, 128, 130, 138, 157, 177, 187, 188, 208], "solve_quadratic_eqn": 74, "som": 142, "some": [1, 5, 7, 20, 21, 23, 24, 25, 28, 29, 34, 35, 36, 37, 38, 39, 42, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 68, 70, 71, 74, 76, 78, 80, 84, 87, 90, 92, 94, 95, 98, 101, 103, 106, 107, 108, 110, 111, 112, 113, 116, 117, 120, 128, 129, 130, 131, 132, 137, 138, 139, 141, 142, 143, 144, 150, 151, 152, 155, 156, 159, 161, 162, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 204, 208], "some_tensor": 169, "some_transform": [174, 180], "somebodi": 143, "somedai": 198, "somehow": [188, 196], "someon": [85, 117, 128, 130, 134, 135, 136, 142, 143, 169, 171, 174, 177, 178, 198], "somersault": 128, "someth": [17, 18, 19, 34, 35, 39, 44, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 78, 80, 89, 94, 117, 126, 128, 130, 131, 132, 134, 138, 139, 141, 143, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200], "sometim": [47, 49, 52, 71, 72, 74, 77, 78, 87, 94, 101, 128, 131, 135, 136, 149, 155, 162, 163, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 185, 193, 195, 199], "somewher": [49, 53, 128, 138, 170, 172, 187, 194], "son": [128, 132], "song": [83, 101, 117, 169, 170, 173, 178], "songwrit": 116, "soon": [47, 70, 101, 102, 116, 117, 125, 126, 128, 131, 132, 139, 171, 172, 177, 188, 190], "sophiaamoruso": 138, "sophist": [117, 169], "sophomor": 128, "sorri": [127, 128, 138], "sort": [37, 47, 56, 80, 128, 130, 131, 138, 141, 142, 143, 165, 170, 172, 173, 176, 178, 192, 193, 195, 200], "sort_kei": [135, 136], "sort_valu": [155, 166, 167, 195, 196, 200], "sorted_point": 39, "sorted_tweet": [138, 142], "sota": 173, "sought": 0, "sound": [28, 29, 128, 131, 138, 143, 173, 178, 186, 196], "soup": [91, 129, 135, 136, 142], "sourc": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 84, 87, 89, 94, 98, 116, 117, 125, 128, 130, 131, 132, 135, 137, 142, 148, 150, 152, 155, 160, 163, 166, 167, 169, 170, 173, 174, 175, 176, 177, 178, 184, 207], "source_docu": 134, "source_path": 137, "south": [117, 145], "southampton": [194, 196], "southern": 117, "sox": 117, "sp": [163, 166], "spa": 117, "space": [26, 39, 42, 45, 47, 49, 52, 70, 74, 77, 84, 87, 89, 94, 115, 117, 128, 130, 131, 138, 141, 142, 148, 152, 155, 171, 172, 173, 175, 177, 187, 189, 191, 195, 198, 200], "spaghetti": 116, "spain": [117, 145], "spam": [4, 5, 14, 15, 16, 17, 128, 141], "span": [108, 112, 117, 135, 136, 192, 200], "spanish": [68, 117], "spare": 128, "spatial": [177, 196, 198], "speak": [34, 35, 106, 138, 143, 169, 196, 200], "speaker": [128, 131, 141, 185], "spearow": 166, "spec": 128, "speci": [9, 10, 14, 101, 102, 117, 128, 145, 184, 187, 190, 192, 193, 199, 202], "special": [4, 12, 34, 37, 40, 88, 89, 90, 102, 106, 108, 112, 128, 130, 135, 136, 142, 155, 173, 177, 180, 184, 185, 197, 199, 200], "specialattribut": 89, "specialidentifi": 89, "specialist": 128, "specialmethod": 89, "specialti": 128, "specif": [0, 4, 7, 11, 13, 16, 17, 18, 19, 40, 47, 48, 52, 68, 74, 80, 84, 85, 93, 94, 98, 101, 103, 108, 112, 116, 117, 125, 126, 127, 128, 131, 137, 138, 139, 141, 142, 143, 146, 150, 155, 159, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 185, 186, 187, 188, 189, 193, 194, 195, 197, 198, 199, 200, 201], "specifi": [0, 37, 38, 47, 49, 52, 66, 68, 69, 71, 79, 81, 89, 90, 91, 103, 104, 116, 117, 126, 136, 137, 140, 143, 145, 148, 149, 150, 152, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 169, 175, 176, 177, 178, 180, 187, 189, 190, 198, 200], "specifici": [171, 173], "specimen": 128, "spectacular": 128, "spectacularli": 128, "spectral": 190, "spectral_r": 190, "speech": 68, "speech_barack_obama": 68, "speech_donald_trump": 68, "speech_melina_trump": 68, "speech_michelle_obama": 68, "speed": [103, 116, 117, 128, 138, 155, 166, 169, 173, 175, 176, 177, 200], "speed_of_light": 90, "speedup": [171, 177], "spell": 116, "spelt": 171, "spend": [128, 131, 132, 138, 170, 171, 172, 173, 175, 177], "spent": [116, 128, 138, 173, 178], "spewpa": 166, "spheal": 166, "sphere": 24, "sphinx": [20, 84, 108, 112], "spike": 198, "spinach": 116, "spinarak": 166, "spinda": 166, "spine": [128, 185, 189, 194, 195], "spirit": [173, 176, 198], "spiritomb": 166, "spiritu": 128, "split": [3, 9, 10, 15, 24, 30, 37, 47, 52, 56, 94, 116, 117, 128, 130, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 148, 155, 163, 172, 175, 176, 178, 185, 192, 193, 195, 199], "split_dataset": 178, "split_docu": [116, 117, 128, 131, 132, 134, 139, 140], "split_siz": 178, "split_string_decor": 37, "splitlin": 68, "splitted_str": 37, "splitter": [117, 130, 131, 134, 141, 142], "splunk": 136, "spoiler": [135, 136], "spoink": 166, "spoke": [143, 185], "spoken": [37, 68, 74], "spontan": 128, "spook": 131, "sporad": 173, "sport": [103, 128], "sports_car_info": 103, "sportscar": 103, "spot": 136, "spotifi": 116, "spread": [138, 178, 188, 194, 195, 198, 200], "spreadsheet": [68, 155, 170, 172], "spring": [45, 74, 106, 128, 136, 190, 194, 196], "spring_r": 190, "sprinkl": [129, 177], "sprint": 139, "sprintf": [52, 94], "spritze": 166, "sprung": 128, "spur": 128, "spyder": 185, "sp\u00e4tzle": 129, "sqaur": [16, 17, 18, 19], "sql": [53, 117, 136, 139, 155, 163], "sql_databas": 117, "sqldatabas": 117, "sqldatabasechain": 117, "sqlite": 117, "sqlite3": 117, "sqlite_db_path": 117, "sqlqueri": 117, "sqlresult": 117, "sqr": 79, "sqrt": [16, 17, 18, 19, 30, 32, 80, 82, 148, 151, 153], "squar": [3, 4, 16, 17, 18, 19, 31, 35, 36, 37, 43, 47, 48, 49, 52, 53, 54, 55, 57, 79, 80, 82, 84, 101, 106, 128, 142, 148, 149, 151, 169, 171, 172, 173, 179, 186, 189, 190, 199, 200, 201], "square_numb": [74, 77], "squash": 128, "squeez": [53, 171, 172, 173, 177], "squeezebackward0": 171, "squeezebackward1": 172, "squirrel": 128, "squirtl": 166, "sr": 162, "src": 178, "srp": 117, "ssh": 169, "ssl": 126, "sss": 29, "st": 55, "st_size": [176, 177, 178], "stabil": [128, 197], "stabl": [170, 171], "stack": [53, 78, 79, 128, 135, 136, 143, 151, 152, 153, 156, 172, 177, 184, 196, 197, 198, 200], "stackexchang": 5, "stackoverflow": 169, "stackplot": 146, "staff": [128, 136], "stage": [128, 131, 132, 142, 173, 176, 177, 186, 198], "stai": [128, 130, 131, 139, 143, 156, 159, 169, 172, 177, 178, 186], "staid": 128, "stair": 177, "stakehold": 199, "stamp": [198, 199], "stan": 37, "stanc": 138, "stand": [20, 37, 68, 108, 112, 128, 131, 170, 171, 172, 173, 176, 177, 178, 194], "standard": [24, 31, 71, 72, 74, 80, 82, 84, 90, 94, 101, 116, 120, 125, 128, 133, 135, 136, 148, 149, 152, 155, 158, 165, 170, 171, 172, 173, 174, 175, 176, 177, 186, 187, 188, 194, 196, 202], "standard_scal": 202, "standardized_industri": 133, "standardtransform": [173, 179, 180], "standarized_industri": 133, "standingtackl": 145, "standpoint": 176, "standup": 134, "stanford": 139, "stantler": 166, "stanza": 138, "star": [37, 47, 97, 175], "staraptor": 166, "starat": 166, "staravia": 166, "stare": 132, "starli": 166, "starmi": 166, "start": [0, 6, 7, 20, 22, 34, 35, 37, 42, 43, 47, 48, 52, 53, 54, 66, 68, 71, 74, 81, 83, 88, 89, 90, 92, 96, 108, 109, 112, 115, 116, 117, 128, 129, 130, 131, 135, 136, 137, 138, 139, 141, 142, 143, 148, 150, 152, 155, 156, 157, 158, 159, 161, 162, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 192, 193, 194, 195, 196, 198, 200, 205, 208], "start_color": 126, "start_dim": [172, 173, 177, 179, 180], "start_index": 24, "start_tim": [173, 175, 178, 179, 180], "startindex": 150, "startofweek": 117, "startswith": 52, "startup": [116, 117, 128, 130, 131, 139, 142], "startupidea": 130, "startuplesson": 131, "staryu": 166, "stat": [152, 176, 177, 184, 186, 189, 191, 195, 196, 198, 199], "stat_meth": 106, "state": [0, 25, 35, 68, 81, 96, 101, 107, 111, 116, 117, 128, 129, 131, 137, 143, 145, 149, 170, 171, 172, 173, 174, 175, 177, 178, 184, 189, 193, 194], "state_dict": [172, 174, 176, 178, 179, 180], "statement": [22, 35, 50, 53, 55, 59, 66, 68, 70, 72, 79, 87, 94, 95, 98, 100, 101, 102, 116, 132, 138, 150, 200], "static": [94, 106, 116, 128], "staticmethod": 106, "station": 128, "statist": [1, 4, 8, 12, 45, 51, 101, 128, 167, 178, 184, 186, 188, 189, 192, 194, 195, 196, 197, 198, 199, 200, 203, 207, 208], "statistician": 199, "statsmodel": [190, 195], "statu": [53, 117, 126, 130, 138, 142, 171, 184], "status_cod": [128, 135, 136], "std": [101, 102, 148, 152, 153, 155, 175, 176, 177, 178, 184, 189, 191, 196, 200], "std1": 102, "std2": 102, "std3": 102, "stderr": 186, "stdev": 80, "stdout": [84, 94], "steadi": 192, "steak": [173, 174, 175, 176, 177, 178, 179, 180], "steak_sushi": 177, "steam": 128, "steamboat": 128, "steel": [27, 166, 184], "steelix": 166, "steelixmega": 166, "steep": [128, 131], "steer": 136, "stem": [173, 178], "steno": 141, "step": [0, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 37, 47, 52, 53, 54, 68, 78, 81, 94, 96, 102, 117, 128, 130, 131, 134, 138, 142, 143, 148, 152, 155, 165, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 199], "step3": 94, "step_siz": 47, "steph": 141, "stephen": 199, "stephsmithio": 138, "stepsiz": 150, "stern": 128, "stetement": 45, "steve": [128, 130], "stick": [131, 169, 171, 172, 175, 176, 177, 178, 195, 196, 198], "still": [28, 29, 36, 52, 84, 89, 101, 102, 106, 116, 117, 128, 130, 131, 132, 135, 136, 156, 158, 159, 162, 165, 169, 170, 171, 172, 173, 175, 177, 178, 185, 186, 188, 196, 197, 198, 199], "sting": 68, "stipend": 128, "stir": [116, 129], "stochast": [170, 171, 177, 198], "stock": [128, 136, 190, 195, 196], "stockprice_data": 155, "stockx": 141, "stoke": 200, "stone": [128, 171, 172], "stop": [39, 47, 48, 49, 52, 53, 54, 68, 71, 74, 78, 81, 90, 126, 128, 131, 132, 148, 152, 155, 165, 173, 176, 178, 198], "stopiter": [34, 35, 49, 70], "storag": [101, 131, 169, 173, 177, 178], "store": [24, 34, 35, 36, 38, 47, 49, 51, 52, 53, 60, 64, 68, 71, 72, 76, 83, 90, 93, 94, 95, 96, 98, 101, 103, 116, 117, 128, 130, 131, 135, 136, 138, 141, 142, 151, 155, 156, 157, 163, 169, 170, 172, 173, 174, 175, 176, 177, 179, 185, 190, 198], "store_and_fwd_flag": 198, "storefront": 128, "stori": [116, 125, 128, 130, 138, 141, 142, 172, 178, 197], "storm": 128, "stoutland": 166, "stove": 128, "str": [10, 15, 24, 39, 49, 52, 53, 61, 68, 70, 74, 84, 92, 93, 94, 102, 103, 104, 116, 117, 126, 128, 135, 137, 140, 145, 162, 166, 172, 173, 174, 175, 176, 178, 179, 180, 195, 196], "str1": 52, "str2": 52, "str3": 52, "str4": 52, "straight": [4, 70, 92, 116, 128, 169, 170, 172, 177, 178, 180, 189, 201], "straightforward": [116, 117, 138, 187], "strang": [128, 130, 134, 177], "stranger": 128, "stranieri": 128, "strat": 52, "strateg": [135, 136], "strategi": [116, 130, 131, 141, 142, 155], "strawberri": [91, 102], "streak": 128, "stream": [68, 84, 126, 128], "stream_error": 128, "streaming_stdout": 129, "streamingstdoutcallbackhandl": 129, "streamlin": 181, "streamlit": [142, 178], "street": [45, 47, 116, 128], "strength": 7, "stress": [102, 128, 188], "stretch": 128, "strftime": [22, 61, 62, 63, 64, 66, 67, 135, 136, 176], "strict": [128, 169], "strictli": [128, 186], "stride": [172, 173, 174, 177, 179, 180], "stride_trick": 153, "strike": 131, "string": [22, 34, 35, 36, 37, 38, 43, 49, 51, 54, 56, 58, 62, 63, 64, 65, 68, 69, 70, 71, 74, 79, 87, 89, 90, 93, 95, 101, 102, 104, 117, 125, 128, 129, 130, 131, 133, 135, 136, 137, 138, 141, 142, 155, 156, 162, 164, 173, 176, 178, 187, 188, 200], "string1": 52, "string2": 52, "string_process": 117, "stringifi": [68, 126], "stringmethod": 89, "stringprocessingtest": 117, "stringprocessor": 117, "strip": [52, 117, 128, 130, 133, 145, 162, 178, 184, 187, 192, 194, 197, 198, 203], "strip_data": 193, "stripe": 142, "stripplot": [184, 187, 192, 193, 194, 198], "strive": 151, "strlist": 195, "stroke": [128, 167], "stroll": 138, "strong": [27, 128, 135, 136, 138], "stronger": 189, "strongest": 128, "strongli": 177, "strptime": [22, 60, 67], "struck": 128, "structur": [0, 9, 17, 19, 20, 24, 37, 42, 47, 53, 68, 70, 83, 84, 88, 101, 108, 112, 117, 120, 128, 131, 133, 134, 137, 138, 142, 144, 145, 146, 155, 156, 157, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 177, 180, 181, 184, 192, 200, 207], "structured_data": 133, "structuredoutputpars": [116, 117, 133], "struggl": [138, 193], "strung": [116, 117], "stuck": [128, 131, 177, 195], "stud": 101, "stud1": 156, "stud2": 156, "stud3": 156, "stud_ag": 162, "stud_mark": 162, "stud_nam": 162, "student": [45, 47, 53, 55, 94, 101, 102, 116, 128, 130, 138, 141, 155, 156, 158, 159, 163, 164, 165, 192, 193, 196, 200], "student_count": 102, "student_data": 163, "student_df": [155, 156, 158, 159, 160, 161, 162, 164, 165], "student_dict": [155, 156, 158, 159, 160, 161, 162, 164, 165], "student_id": 196, "student_nam": 47, "studentdf": 163, "studentdict": 163, "students_enrol": 195, "studentstud": 102, "studi": [23, 26, 35, 87, 101, 117, 128, 130, 141, 152, 170, 175, 189, 198, 200, 201, 207, 208], "studio": [128, 141], "studnet": 102, "stuff": [103, 117, 130, 131, 132, 134, 141], "stuffdocumentschain": [128, 143], "stumbl": 128, "stunfisk": 166, "stunki": 166, "style": [89, 90, 94, 117, 128, 129, 135, 136, 138, 141, 143, 145, 152, 155, 156, 159, 162, 166, 167, 170, 172, 174, 175, 179, 180, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "sub": [36, 54, 69, 74, 78, 83, 84, 148, 196, 198, 200], "sub_doc": 131, "subalpin": 128, "subarrai": 150, "subcategori": 196, "subclass": [71, 84, 103, 170, 171, 172, 173, 177], "subdirectori": [69, 83, 173], "subdiretori": 173, "subdivid": 198, "subgroup": 39, "subject": [116, 126, 128, 136, 138, 169, 186, 198], "sublim": 128, "submit": 128, "subplot": [8, 10, 16, 17, 18, 19, 25, 30, 107, 111, 171, 172, 173, 177, 178, 185, 186, 195, 197, 199, 200], "subplot_kw": 200, "subplots_adjust": [16, 17, 18, 19], "subprocess": [173, 179, 180], "subregion": 117, "subscript": [89, 92], "subsect": [179, 180], "subsequ": [0, 34, 53, 172, 173, 177, 180], "subset": [0, 11, 16, 17, 18, 19, 56, 66, 128, 130, 138, 141, 155, 160, 161, 173, 175, 176, 188, 199, 200, 207], "subsistut": 117, "substack": 169, "substanti": 141, "substitut": [39, 103], "substr": [39, 52], "substract": [95, 148, 169], "subtli": 128, "subtract": [26, 51, 74, 90, 95, 104, 137, 148, 151, 169], "succe": [117, 139, 142], "success": [0, 35, 39, 116, 117, 128, 131, 135, 136, 141, 142, 143, 171, 173, 178, 198], "successful": [14, 15, 24], "successful_request": [135, 136], "successfulli": [38, 71, 142, 170, 176, 178, 193, 195], "succinct": 130, "sudden": [71, 142], "suddenli": [128, 175], "sudowoodo": 166, "suffic": 128, "suffici": [128, 130], "suffix": [116, 117], "sugar": [37, 129], "suggest": [59, 70, 116, 117, 128, 130, 131, 135, 136, 138, 139, 141, 170, 176, 177, 188, 194, 200], "suhail": 138, "suhsi": 176, "suicun": 166, "suit": [98, 101, 116, 132, 139, 155, 171, 173, 174, 176, 177, 178, 187, 192, 193, 198], "suitabl": [35, 52, 188, 196], "sulli": 177, "sum": [3, 7, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 35, 36, 40, 47, 48, 51, 53, 56, 59, 74, 77, 80, 82, 84, 85, 89, 93, 101, 104, 117, 128, 146, 148, 151, 152, 166, 167, 171, 173, 174, 178, 179, 180, 191, 194, 196], "sum1": 94, "sum_": [27, 29, 30], "sum_1": 31, "sum_al": 71, "sum_all_num": 77, "sum_all_numb": 74, "sum_i": [29, 32], "sum_j": 29, "sum_numb": 36, "sum_of_even": 74, "sum_of_five_num": 71, "sum_of_kd": 191, "sum_of_numb": 74, "sum_of_odd": 74, "sum_two_numb": 74, "sumbackward0": 171, "summar": [36, 84, 120, 126, 135, 136, 139, 141, 143, 144, 156, 171, 177, 184, 193], "summari": [84, 116, 126, 128, 130, 139, 141, 142, 143, 145, 173, 176, 178, 194, 195, 196, 199], "summaris": [169, 173], "summary_chain": 130, "summary_list": 130, "summary_output_opt": 143, "summary_prompt": 130, "summaryif": 128, "summat": [28, 36, 151], "summer": [45, 74, 128, 190], "summer_r": 190, "summit": 128, "sun": [39, 60, 61, 128, 188, 191, 193, 194, 195, 196, 200], "sundai": [60, 61], "sunflora": 166, "sung": 178, "sunkern": 166, "sunni": [5, 128, 137], "sunroof": 102, "sunshin": 138, "super": [72, 101, 106, 116, 117, 126, 128, 141, 152, 159, 162, 170, 171, 172, 173, 174, 177, 179, 180, 200], "superclass": 103, "superhead": 200, "superintellig": 138, "superior": 0, "supervis": [7, 18, 19, 171, 207, 208], "suppli": [69, 71, 117, 128, 162], "support": [6, 15, 24, 47, 49, 51, 53, 54, 56, 68, 74, 82, 90, 91, 92, 98, 101, 103, 109, 116, 117, 125, 126, 128, 129, 130, 131, 138, 139, 141, 143, 151, 174, 175, 176, 187, 188, 191, 196, 198, 200, 205], "support_word": 68, "suppos": [35, 38, 40, 42, 49, 57, 59, 80, 83, 84, 101, 104, 106, 116, 128, 151, 156, 157, 161, 162, 163, 164, 165, 198], "suppport": [10, 14], "supress": 159, "suptitl": [30, 173, 177, 191, 195, 200], "sure": [4, 24, 25, 39, 40, 71, 76, 107, 111, 116, 117, 125, 127, 128, 130, 131, 135, 136, 137, 138, 139, 143, 148, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 185, 188, 192, 194, 195, 196, 198], "surfac": [74, 128, 169, 178], "surfaceaxi": 11, "surnam": [77, 84, 158, 165], "surpass": 128, "surplu": 128, "surpris": [128, 131, 178], "surreptiti": 128, "surround": [0, 35, 89, 91, 128, 141], "surskit": 166, "survei": 187, "surviv": [128, 194, 196], "suryansh": [4, 5], "susan": 116, "sushi": [173, 174, 175, 176, 177, 178, 179, 180], "susmelj": 174, "suspect": 194, "suspend": [65, 66], "suspens": [66, 138], "suspicion": [8, 128], "sustain": 138, "sutton": 176, "suv": 128, "svd": [26, 153], "svg": 117, "sw": 71, "swablu": 166, "swadloon": 166, "swahili": 68, "swalot": 166, "swampert": 166, "swampertmega": 166, "swampi": 134, "swanna": 166, "swap": [52, 74, 116, 117, 133, 138, 141, 142, 169, 177], "swapcas": 52, "swapfil": 69, "swarm": [184, 194, 197], "swarmplot": [184, 187, 192, 193, 194], "swartz": 128, "swe": 117, "sweatystartup": 138, "sweden": [11, 13, 53, 71], "sweep": 128, "sweet": [49, 130, 143], "swellow": 166, "swelter": 128, "swim": [101, 103, 128], "swing": 138, "swinub": 166, "swirlix": 166, "swiss": 128, "switch": [128, 130, 132, 135, 136, 141, 143, 169, 185, 189, 198], "switzerland": [11, 13, 117, 189], "swoobat": 166, "sx": 52, "sy": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 59, 69, 70, 71, 83, 84, 94, 128, 169, 176], "syantax": 53, "sylveon": 166, "symbol": [28, 29, 37, 39, 40, 52, 80, 84, 88, 89, 90, 95, 104, 117, 138, 169, 177], "symmetr": 47, "symmetri": 7, "symmetric_differ": 56, "symmetric_difference_upd": 56, "synaps": 7, "sync": 148, "syntact": [37, 74, 87], "syntax": [20, 22, 35, 37, 38, 39, 52, 53, 54, 55, 56, 69, 71, 74, 79, 84, 88, 93, 94, 98, 101, 102, 103, 108, 112, 138, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 185, 197, 198, 200], "syntaxerror": [52, 70, 77, 88, 90], "syntaxwarn": 95, "synthet": [131, 200], "syslog": 136, "system": [7, 18, 19, 24, 31, 34, 49, 51, 65, 68, 69, 70, 80, 89, 104, 116, 117, 128, 129, 138, 141, 143, 170, 173, 178, 207], "system_message_prompt": [127, 129, 143], "system_message_prompt_combin": 143, "system_message_prompt_map": [141, 143], "system_templ": [127, 141], "systemat": 130, "systemerror": 70, "systemexit": [70, 126], "systemmessag": [116, 129, 135, 143], "systemmessageprompttempl": [127, 129, 141, 143], "t": [7, 10, 11, 17, 18, 19, 25, 27, 31, 32, 38, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 61, 63, 65, 68, 71, 74, 76, 80, 83, 87, 90, 91, 92, 93, 94, 98, 101, 102, 103, 104, 106, 107, 111, 116, 117, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 148, 151, 152, 153, 155, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "t1": [54, 59, 63, 65, 66], "t10": 187, "t10k": 172, "t2": [54, 59, 63, 66], "t3": [54, 59, 63], "t4": [54, 59], "t5": 59, "t6": 59, "t_i": 27, "tab": [42, 52, 70, 89, 91, 130, 178, 187], "tab10": 190, "tab10_r": 190, "tab20": 190, "tab20_r": 190, "tab20b": 190, "tab20b_r": 190, "tab20c": 190, "tab20c_r": 190, "taberror": 70, "tabl": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 47, 49, 51, 60, 61, 80, 95, 104, 116, 117, 128, 141, 155, 156, 163, 169, 170, 171, 172, 176, 192, 201], "table_nam": 155, "tableau": [187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "tableau_20": [189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "tablespoon": 116, "tablet": 138, "tabul": [53, 55, 104], "tabular": [68, 155, 164, 165, 171, 178], "tacit": 128, "tackl": [0, 135, 188], "taco": 178, "tag": [5, 24, 68, 116, 136, 141], "tag_scalar_dict": 176, "taggar": 128, "taho": 128, "tail": [7, 155, 166, 167, 198], "taillow": 166, "take": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 39, 40, 43, 47, 48, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 84, 89, 90, 94, 98, 101, 102, 103, 106, 116, 117, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 143, 151, 155, 156, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201], "taken": [68, 128, 134, 141, 170, 178, 197, 198], "talk": [65, 66, 116, 117, 128, 130, 131, 137, 138, 139, 141, 142, 143, 169, 171, 172, 177, 178, 185, 190, 194, 200], "tall": 117, "talli": 200, "talonflam": 166, "tamper": [52, 57, 90, 101], "tan": [80, 82], "tangela": 166, "tangent": [80, 82], "tangrowth": 166, "tanh": [80, 82], "tap": 199, "tar": 80, "targ_dir": 173, "targ_imag": 173, "targ_image_adjust": 173, "targ_label": 173, "targ_sampl": 173, "target": [0, 5, 14, 15, 16, 17, 66, 98, 135, 136, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 187], "target_dir": [174, 176, 177, 178, 179, 180], "target_dir_path": [174, 179, 180], "target_directori": 173, "target_fil": 176, "target_imag": 173, "target_image_pr": [173, 175], "target_image_pred_label": [173, 175], "target_image_pred_prob": [173, 175], "target_transform": [172, 173, 179, 180], "tasavalta": 117, "taser": 184, "task": [0, 7, 18, 19, 24, 37, 47, 48, 53, 55, 56, 62, 65, 66, 71, 74, 78, 80, 85, 87, 94, 95, 98, 104, 116, 117, 127, 130, 137, 138, 139, 141, 171, 172, 173, 175, 177, 187, 197, 198, 207], "tast": [116, 131, 143], "tau": 80, "taught": 128, "tauro": 166, "tax": 128, "taxi": [128, 198], "tbd": 117, "tchapter": 52, "tchp": 52, "tdatatyp": 52, "te": 39, "tea": [39, 131], "teach": [0, 37, 39, 52, 56, 128, 153, 172, 181], "teacher": [39, 52, 56, 68, 128], "teal": 187, "team": [77, 116, 117, 135, 136, 139, 143, 145, 173, 174, 176, 177, 178, 198, 200], "teas": 177, "tech": [127, 128, 135, 136, 142, 208], "techcrunch": 139, "technic": [34, 106, 117, 128, 131, 139, 177], "technician": 136, "techniqu": [0, 7, 18, 19, 36, 80, 127, 141, 142, 171, 173, 175, 176, 177, 178, 192, 193, 198, 199, 207, 208], "technolog": 138, "technologi": [0, 117, 125, 128, 131, 135, 136, 138, 142, 143, 169, 172], "teddiursa": 166, "tediou": [128, 173], "tell": [43, 44, 49, 68, 71, 87, 94, 116, 117, 128, 130, 131, 136, 137, 138, 143, 150, 169, 170, 171, 172, 173, 176, 177, 178, 186], "temp": [74, 90, 133, 169], "temp_convert": 71, "temperatur": [38, 74, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143], "templ": 141, "templat": [117, 131, 133, 138, 141, 142, 143], "template_format": 129, "tempor": 198, "temporari": [103, 128, 195], "temporarili": 185, "tempt": [128, 178], "ten": [36, 37, 47, 68, 74, 128, 146, 178], "ten_zero": 169, "tenac": 128, "tend": [27, 103, 116, 128, 134], "tendenc": [101, 184, 188, 192, 194, 195, 196], "tender": 129, "tension": 138, "tensor": [26, 170, 172, 173, 174, 176, 177, 179, 180], "tensor_a": 169, "tensor_b": 169, "tensor_back_on_cpu": 169, "tensor_c": 169, "tensor_d": 169, "tensor_float16": 169, "tensor_int8": 169, "tensor_on_gpu": 169, "tensordot": 153, "tensorflow": [7, 148, 171, 176, 207], "tentacool": 166, "tentacruel": 166, "tepig": 166, "terabyt": 200, "term": [4, 5, 29, 35, 37, 78, 85, 116, 117, 128, 130, 134, 139, 143, 169, 171, 172, 175, 177, 178, 185, 186, 188, 189, 192, 193, 194, 195, 196, 197, 198, 200], "termin": [34, 35, 47, 48, 49, 70, 71, 87, 125, 128, 148, 174, 178], "terminologi": 141, "terrain": 190, "terrain_r": 190, "terrakion": 166, "terri": 128, "terribli": 128, "terrif": 178, "terrifi": 176, "territori": [128, 189], "ters": 90, "tesla": [169, 178], "test": [12, 14, 15, 24, 39, 43, 44, 48, 49, 68, 69, 70, 71, 76, 80, 87, 95, 102, 117, 128, 131, 132, 137, 138, 166, 169, 174, 176, 177, 179, 180, 196, 198], "test1": 80, "test_1": [68, 69], "test_2": [68, 69], "test_acc": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "test_accuraci": [173, 174, 179, 180], "test_cost": [11, 13], "test_data": [11, 13, 16, 17, 18, 19, 170, 171, 172, 173, 174, 178, 179, 180], "test_data_custom": 173, "test_data_food101_20_perc": 178, "test_data_path": 178, "test_data_simpl": 173, "test_dataload": [172, 173, 174, 175, 176, 177, 178, 179, 180], "test_dataloader_custom": 173, "test_dataloader_effnetb2": 178, "test_dataloader_food101_20_perc": 178, "test_dataloader_pretrain": 177, "test_dataloader_simpl": 173, "test_dataloader_vit": 178, "test_dir": [173, 174, 175, 176, 177, 178, 179, 180], "test_express": 48, "test_imag": 172, "test_image01": 174, "test_image02": 174, "test_image_01": 180, "test_image_02": 180, "test_image_path_list": [175, 176], "test_image_path_sampl": [175, 176], "test_image_through_conv": 172, "test_image_through_conv_and_max_pool": 172, "test_label": [170, 171, 172], "test_logit": 171, "test_loss": [170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "test_loss_valu": 170, "test_modul": 80, "test_pr": [170, 171, 172], "test_precis": [16, 17, 18, 19], "test_pred_dict": 178, "test_pred_label": [173, 174, 179, 180], "test_pred_logit": [173, 174, 179, 180], "test_predict": [11, 13], "test_predictions_t": [11, 13], "test_replace_non_letters_non_numbers_with_whitespac": 117, "test_sampl": 172, "test_siz": 171, "test_step": [172, 176], "test_str": 39, "test_transform": 173, "testcas": 117, "tester": 39, "testfil": [69, 71], "tex": [25, 107, 111], "text": [6, 20, 21, 27, 32, 39, 44, 52, 68, 74, 84, 95, 108, 109, 110, 112, 113, 125, 126, 127, 128, 129, 132, 134, 138, 139, 142, 143, 155, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 189, 191, 195, 196, 198, 200, 204, 205, 207], "text_1": 68, "text_embed": 116, "text_splitt": [116, 117, 128, 130, 131, 132, 134, 139, 140, 141, 142, 143], "textbook": [128, 177], "textcoord": 196, "textil": 128, "textiobas": 68, "textiowrapp": 68, "textload": [116, 117, 132], "textrequestswrapp": 117, "textual": [52, 62], "textwrap": 52, "th": [1, 4, 5, 12, 39, 52], "tha": 39, "thailand": 54, "than": [4, 8, 10, 11, 16, 17, 18, 19, 22, 24, 35, 36, 39, 40, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 57, 59, 60, 66, 72, 78, 79, 80, 82, 90, 91, 92, 94, 95, 96, 98, 102, 103, 104, 106, 116, 117, 128, 130, 131, 135, 138, 141, 143, 148, 150, 151, 155, 156, 158, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 187, 190, 192, 194, 195, 196, 197, 198, 200], "thank": [94, 128, 135, 136, 139, 143, 170, 171, 172, 175, 176, 177, 178, 188], "that_particular_class": 196, "that_particular_class_men": 196, "thaw": 128, "thefuzz": 117, "thei": [0, 7, 8, 11, 13, 18, 19, 34, 35, 37, 38, 42, 44, 46, 49, 51, 52, 53, 54, 55, 56, 68, 70, 72, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 106, 108, 112, 116, 117, 126, 127, 128, 130, 131, 132, 135, 136, 139, 141, 142, 143, 149, 151, 155, 160, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 187, 188, 191, 193, 194, 195, 196, 197, 198, 199, 200], "theirs": [13, 35, 45, 128], "them": [8, 14, 15, 16, 17, 18, 19, 24, 32, 34, 36, 51, 52, 53, 54, 55, 56, 66, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 82, 90, 94, 95, 96, 101, 102, 103, 104, 115, 117, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 152, 155, 157, 169, 170, 171, 172, 173, 175, 176, 177, 184, 185, 187, 189, 190, 192, 193, 195, 198, 200, 201, 208], "theme": [138, 141, 185, 187], "themselv": [39, 128, 130, 131, 177, 207], "theologi": 116, "theorem": [0, 128], "theoret": [28, 29, 34, 128], "theori": [35, 116, 128, 130, 132, 194, 197], "therefor": [38, 39, 52, 98, 101, 173, 178], "thermodynam": 38, "thesi": 128, "theta": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 32], "theta_index": 15, "theta_t": [11, 12, 13], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 208], "thick": [185, 195, 196], "thicken": 185, "thimbl": [126, 143], "thimbleai": [126, 143], "thin": [128, 129, 130, 195], "thing": [6, 24, 27, 35, 37, 42, 47, 49, 52, 57, 69, 80, 89, 96, 102, 103, 106, 109, 116, 117, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 143, 149, 152, 155, 169, 170, 172, 173, 175, 176, 177, 178, 186, 187, 188, 194, 200, 205, 208], "think": [64, 90, 101, 102, 116, 117, 126, 128, 130, 131, 133, 135, 136, 138, 141, 142, 143, 149, 169, 170, 171, 172, 173, 175, 177, 178, 185, 188, 194, 196, 197], "thinker": 128, "thinnest": 128, "third": [24, 52, 59, 80, 83, 92, 94, 103, 116, 128, 137, 138, 145, 152, 155, 158, 169, 170, 178, 188, 194, 196], "third_respons": 137, "thirti": [52, 128], "this_is_a_long_vari": 88, "thise": [130, 193], "thorn": 128, "thorugh": 172, "those": [24, 42, 66, 75, 79, 80, 81, 85, 96, 101, 102, 108, 112, 116, 117, 127, 128, 130, 131, 138, 141, 142, 143, 153, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 185, 187, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200], "though": [18, 19, 52, 71, 75, 84, 103, 116, 117, 128, 131, 151, 155, 156, 160, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 185, 186, 187, 193, 195, 196, 197, 198, 199, 200], "thought": [42, 116, 117, 126, 128, 130, 131, 135, 136, 138, 172, 178, 187, 193, 194, 195, 196], "thousand": [38, 128, 136, 138, 169, 172], "thread": [65, 66, 80, 117, 128, 129, 130, 178], "threat": 184, "threat_level": 184, "threaten": 184, "three": [3, 7, 9, 10, 14, 15, 18, 19, 38, 39, 40, 42, 47, 48, 52, 53, 54, 57, 59, 68, 76, 77, 90, 93, 94, 96, 102, 103, 106, 116, 117, 128, 130, 131, 137, 141, 142, 155, 158, 161, 162, 163, 169, 170, 171, 172, 173, 175, 177, 178, 184, 188, 192, 193, 194, 198, 199, 200, 201], "thresh": [155, 161], "threshold": [1, 7], "thrice": 194, "throguh": 177, "throh": 166, "through": [0, 8, 16, 17, 18, 19, 35, 47, 48, 49, 51, 57, 71, 77, 78, 87, 104, 116, 117, 128, 129, 130, 132, 135, 136, 137, 142, 143, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 200, 201, 207, 208], "throughout": [89, 117, 130, 169, 173, 174, 176, 177, 178, 179, 180, 186, 188, 192, 199], "throughput": [8, 9], "throughput_from": 8, "throughput_grid": 8, "throughput_rang": 8, "throughput_to": 8, "throw": [24, 71, 75, 98, 156, 158, 159, 162, 164, 176, 178], "thu": [10, 27, 38, 47, 48, 52, 65, 71, 89, 98, 101, 106, 128, 175, 177, 178, 187, 188, 189, 194, 195, 196, 198, 199, 200, 201], "thumb": [170, 171, 173, 175, 177, 193, 196], "thump": 131, "thundurusincarn": 166, "thundurustherian": 166, "thur": [193, 196], "thursdai": [116, 128, 194], "ti": [68, 138, 188], "tick": [177, 178, 185, 190, 191, 197, 199, 200], "tick_param": [16, 17, 18, 19, 178], "ticket": 196, "ticklabel_format": 195, "tickmark": 145, "tide": 128, "tidi": [188, 192, 193, 197], "tier": [138, 177], "tight": [30, 128, 176, 208], "tightli": [117, 128, 189], "tile": 151, "till": [47, 48, 49, 68, 92, 128, 156, 159, 162, 165, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200], "tim": 184, "timberlin": 128, "timburr": 166, "time": [0, 5, 7, 24, 30, 31, 34, 35, 37, 42, 46, 47, 48, 49, 51, 52, 54, 61, 75, 78, 79, 80, 88, 89, 90, 96, 98, 102, 103, 104, 106, 116, 117, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 143, 145, 151, 155, 159, 160, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 207, 208], "time_for_pr": 178, "time_left_for_newyear": 63, "time_per_pred_cpu": 178, "time_str": 65, "timedelta": 63, "timedelta64": 153, "timeit": [172, 173, 175, 178, 179, 180], "timeout": [126, 128, 130, 169], "timeout_valu": 126, "timepoint": 198, "timer": [172, 173, 175, 178, 179, 180], "times2": 31, "times3": 36, "times5": 36, "timescal": 178, "timeseri": 203, "timestamp": [22, 67, 176], "timezon": 117, "timm": [172, 175, 177], "timplay": 24, "tine": 175, "ting": 39, "tini": [128, 195], "tinker": [117, 142], "tinyvgg": [172, 174, 175, 182], "tip": [39, 138, 175, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200], "tire": [128, 192], "tirtouga": 166, "titan": [169, 175, 184, 186, 194, 198, 200], "titl": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 45, 52, 130, 131, 135, 136, 137, 145, 146, 170, 171, 172, 173, 175, 177, 178, 188, 191, 200, 201], "title_text": 172, "tivat": 39, "tk": 24, "tkinter": 80, "tl": 116, "tlc": 198, "tld": 117, "tldr": 117, "tm_hour": 65, "tm_isdst": 65, "tm_mdai": 65, "tm_min": 65, "tm_mon": 65, "tm_sec": 65, "tm_wdai": 65, "tm_ydai": 65, "tm_year": 65, "tmdb": 125, "tmp": [69, 169], "to__email": 126, "to_csv": [155, 166, 167], "to_dict": 155, "to_excel": [155, 166], "to_fahreheit": 38, "to_fahrenheit": 38, "to_json": 155, "to_messag": [117, 127, 129, 133], "to_sql": 155, "to_str": 136, "to_usernam": 126, "todai": [0, 63, 64, 116, 117, 128, 130, 131, 132, 135, 136, 138, 141, 142, 143, 186, 189, 193, 194, 195, 196, 197, 198, 199], "togekiss": 166, "togepi": 166, "toget": 166, "togeth": [7, 8, 18, 19, 35, 52, 90, 98, 104, 116, 117, 128, 131, 133, 138, 139, 141, 142, 151, 174, 176, 178, 180, 189, 192, 194, 198], "toi": [141, 171, 172, 184], "toilet": 141, "toiletri": 131, "token": [117, 128, 130, 135, 136, 138, 139, 141, 142, 143], "told": [49, 128, 131, 137, 138, 189], "toler": 172, "tolist": [145, 146, 195], "tom": 128, "tomato": [71, 74, 95, 116], "tomb": 128, "tomorrow": 116, "ton": [52, 80, 116, 117, 130, 138, 142], "tone": [120, 127, 144], "tone_sampl": 138, "too": [4, 5, 37, 70, 72, 95, 96, 116, 117, 128, 129, 130, 131, 138, 141, 143, 169, 170, 171, 172, 173, 175, 176, 177, 178, 193], "took": [37, 116, 128, 138, 172, 173, 175, 178, 179, 180], "tool": [39, 84, 108, 112, 117, 126, 130, 135, 136, 137, 139, 141, 143, 145, 146, 148, 155, 166, 167, 171, 176, 177, 178, 189, 198, 199, 200, 207, 208], "tool_input": 126, "tool_nam": 125, "toolchain": 139, "toolkit": [24, 117, 126, 130, 169], "tooth": 146, "toothpastesalesdata": 146, "top": [6, 8, 16, 17, 18, 19, 90, 109, 116, 125, 129, 130, 138, 139, 142, 143, 148, 150, 151, 155, 169, 171, 172, 174, 177, 178, 180, 185, 187, 188, 189, 194, 195, 196, 198, 200, 205], "topbar": 196, "topic": [52, 77, 117, 128, 130, 131, 138, 142, 144, 146, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 190, 192, 194, 195, 196, 198, 199, 200, 208], "topic_nam": 141, "topic_timestamp": 141, "topics_found": 141, "topics_structur": 141, "toprow": 158, "torch": [169, 171, 172, 173, 174, 175, 176, 178, 179, 180], "torch_transformer_encoder_lay": 177, "torchaudio": [173, 175, 176, 177, 178], "torchdata": 173, "torchic": 166, "torchinfo": [176, 177, 178], "torchmetr": [171, 172], "torchmetrics_accuraci": 171, "torchrec": [173, 175], "torchscript": 178, "torchserv": 178, "torchtext": [173, 175], "torchvis": [172, 174, 176, 178, 179, 180], "torkoal": 166, "tornadusincarn": 166, "tornadustherian": 166, "toronto": 117, "torterra": 166, "toss": 129, "total": [7, 10, 14, 47, 48, 51, 59, 74, 77, 79, 90, 92, 102, 104, 117, 126, 130, 131, 135, 136, 140, 149, 155, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 188, 189, 192, 193, 194, 195, 196, 197, 198, 200], "total_bil": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "total_cost": [135, 136], "total_expens": 101, "total_incom": 101, "total_list1": 140, "total_list2": 140, "total_profit": 146, "total_second": 59, "total_stud": 195, "total_tim": 172, "total_token": [135, 136], "total_train_time_model_0": 172, "total_train_time_model_1": 172, "total_train_time_model_2": 172, "total_women_per_class": 196, "totensor": [172, 173, 174, 175, 176, 177, 179, 180], "totodil": 166, "touch": [117, 128, 152, 189, 200, 208], "tough": [117, 177], "tourist": 128, "toward": [116, 128, 130, 134, 138, 170, 173, 177, 178, 208], "town": [116, 141, 194, 196], "toxicroak": 166, "toyotadf": 167, "tp": 1, "tpg": 117, "tpuv3": 177, "tpython": 52, "tqdm": [132, 172, 173, 174, 176, 178, 179, 180], "tqdmexperimentalwarn": 132, "tr": 128, "trace": [128, 151, 176, 188, 198], "traceback": [34, 35, 36, 37, 38, 40, 48, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 89, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 126, 128, 150, 159, 162, 164, 169, 172, 173, 193, 198], "track": [35, 116, 128, 137, 138, 139, 143, 169, 170, 173, 175, 177, 178, 183, 194, 196, 198], "tracker": 176, "tractor": 169, "tradeoff": [173, 175], "tradit": [0, 115, 128, 129, 174, 179, 180], "tradition": 137, "trail": [51, 52, 54, 116, 117, 143], "train": [0, 1, 3, 4, 7, 9, 115, 116, 128, 141, 142, 169, 181, 182], "train_acc": [172, 173, 174, 175, 176, 177, 178, 179, 180], "train_accuraci": [173, 174, 179, 180], "train_cost": [11, 13], "train_data": [11, 13, 16, 17, 18, 19, 170, 171, 172, 173, 174, 178, 179, 180], "train_data_aug": 173, "train_data_custom": 173, "train_data_food101_20_perc": 178, "train_data_simpl": 173, "train_dataload": [172, 173, 174, 175, 176, 177, 178, 179, 180], "train_dataloader_10_perc": 176, "train_dataloader_20_perc": 176, "train_dataloader_aug": 173, "train_dataloader_custom": 173, "train_dataloader_effnetb2": 178, "train_dataloader_food101_20_perc": 178, "train_dataloader_pretrain": 177, "train_dataloader_simpl": 173, "train_dataloader_vit": 178, "train_dir": [173, 174, 175, 176, 177, 178, 179, 180], "train_dir_10_perc": 176, "train_dir_20_perc": 176, "train_features_batch": 172, "train_image01": 174, "train_image_01": 180, "train_image_02": 180, "train_label": [170, 171], "train_labels_batch": 172, "train_loss": [172, 173, 174, 175, 176, 177, 178, 179, 180], "train_loss_valu": 170, "train_precis": [16, 17, 18, 19], "train_split": [170, 171], "train_step": [172, 176], "train_test_split": 171, "train_time_end_model_2": 172, "train_time_end_on_cpu": 172, "train_time_end_on_gpu": 172, "train_time_start_model_2": 172, "train_time_start_on_cpu": 172, "train_time_start_on_gpu": 172, "train_transform": 173, "train_transform_trivial_aug": 173, "trainabl": [173, 175, 176, 177, 178], "trainbl": 178, "traingin": 12, "training_tim": 172, "traininggggggg": 178, "trainint": [12, 13], "trajectori": 128, "tranform": [52, 173], "tranquil": 166, "transact": [5, 14, 15, 16, 17, 171, 178], "transax": 199, "transcript": [68, 117, 120, 141, 142, 144], "transcript_path": 141, "transcript_subsection_charact": 141, "transfer": [35, 47, 48, 49, 128, 171, 172, 173, 176, 177, 178, 182, 183, 207], "transform": [7, 26, 31, 98, 128, 135, 136, 137, 138, 169, 172, 174, 179, 180, 187, 207], "transformed_imag": [173, 175, 178], "transformer_encod": 177, "transformer_encoder_block": 177, "transformerencod": 177, "transformerencoderblock": 177, "transformerencoderlay": 177, "transit": [136, 138, 143], "translat": [70, 98, 102, 117, 128, 134, 187], "transluc": 198, "transmit": 7, "transpar": [143, 187, 189, 193], "transport": 133, "transpos": [26, 27, 57, 148, 151, 156, 157, 163, 169, 192], "transposed_row": 57, "transposit": 31, "trap": 128, "trapinch": 166, "trapper": 128, "travel": [7, 94, 116, 133, 138, 174, 177, 196], "travers": [7, 47, 173], "treasur": [128, 177], "treat": [6, 36, 39, 70, 75, 76, 101, 109, 128, 131, 137, 151, 178, 205], "tree": [0, 10, 14, 68, 116, 117, 128, 136], "treecko": 166, "trekhleb": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "trelli": [199, 200], "trend": [126, 141, 175, 176, 177, 178, 188, 192, 194, 198], "treven": 166, "trevi": 116, "trevor": [128, 131], "tri": [37, 70, 94, 101, 104, 128, 131, 134, 141, 149, 162, 169, 171, 173, 175, 177, 178, 186, 189, 194, 195, 198], "trial": [0, 135, 136], "triangl": [47, 95, 103, 199], "triangular": 81, "triband": 117, "tribe": 128, "tribut": 138, "tributari": 128, "trick": [128, 130, 131, 143, 148, 150, 169, 171, 173, 186, 193], "trickeri": 128, "tricki": 54, "trigger": 49, "trignometr": 198, "trigonometri": 51, "trio": 141, "trip": [128, 131, 138, 198], "trip_dur": 198, "tripl": [52, 74, 84, 89, 91, 92, 130, 177], "triple_quot": 136, "triu_indices_from": 199, "trivial": 173, "trivialaug": 173, "trivialaugmentwid": [173, 178], "trophi": 128, "tropiu": 166, "troubl": [174, 175], "troubleshoot": [136, 171], "trouser": [17, 19, 172], "trout": 128, "trubbish": 166, "truck": [7, 103], "truck_info": 103, "trucke": 128, "true": [1, 12, 16, 17, 18, 19, 30, 34, 35, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 66, 68, 70, 72, 74, 79, 80, 82, 88, 89, 90, 91, 92, 94, 95, 102, 103, 104, 116, 117, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 141, 142, 143, 145, 146, 149, 150, 152, 155, 159, 160, 161, 162, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "true_divid": 151, "truecal": 141, "truli": [128, 138, 176, 178], "trump": 68, "trunc": [80, 82, 153], "truncat": [51, 68, 82, 92, 93, 95, 188], "trust": [11, 13, 138, 170], "trusti": 176, "trustworthi": 198, "truth": [95, 116, 117, 128, 170, 171, 172, 173, 178], "truth_label": 172, "truthvalu": 89, "try": [0, 4, 8, 10, 14, 15, 17, 18, 19, 34, 36, 39, 43, 44, 45, 49, 52, 53, 54, 55, 57, 59, 68, 70, 72, 74, 75, 77, 88, 89, 90, 92, 93, 95, 96, 101, 102, 104, 106, 116, 117, 126, 128, 130, 131, 132, 134, 135, 136, 138, 142, 143, 151, 156, 159, 169, 170, 171, 172, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "tryagain": 128, "tryton": 24, "tsne": 130, "tsplot": 198, "tsv": 155, "tt": 61, "ttopic": 52, "tue": 60, "tuesdai": [116, 128], "tuft": [128, 199], "tug": 128, "tukei": 198, "tumor": [5, 14, 15, 16, 17], "tune": [116, 138, 141, 159, 170, 175, 177, 178, 198, 208], "tunnel": 128, "tupl": [22, 24, 34, 35, 36, 37, 39, 40, 52, 56, 57, 58, 65, 68, 74, 77, 80, 89, 91, 93, 94, 95, 102, 103, 148, 149, 152, 156, 157, 167, 172, 173, 174, 175, 178, 179, 180, 187, 189], "tuple1": 92, "tuple_1": 102, "tupleliter": 89, "tuppl": 149, "tur": 117, "turbo": [116, 117, 127, 130, 135, 136, 137, 138, 141, 143], "ture": 128, "turn": [34, 51, 68, 71, 95, 98, 104, 116, 117, 128, 134, 137, 138, 142, 169, 170, 172, 174, 175, 176, 179, 180, 181, 192, 194, 195, 198, 199, 200], "turtwig": 166, "tutori": [22, 34, 37, 44, 52, 68, 90, 96, 103, 104, 116, 117, 132, 141, 142, 143, 148, 167, 173, 176, 178, 186, 198], "twa": 128, "tweak": [173, 175, 177, 185, 187, 192, 197, 200], "tweepi": [138, 142], "tweepy_result": [138, 142], "tweet": [117, 126, 127, 135, 136, 141, 142, 143, 170, 178], "tweet_exampl": 138, "tweet_mod": [138, 142], "tweets_to_pul": [138, 142], "tweets_to_return": [138, 142], "twelv": 39, "twenti": [128, 131], "twice": [103, 117, 128, 131, 176], "twilight": 187, "twist": 129, "twitch": [128, 141, 177], "twitter": [116, 117, 120, 126, 128, 130, 133, 135, 136, 141, 143, 144, 173, 177], "twitter_access_token": [138, 142], "twitter_access_token_secret": [138, 142], "twitter_api_kei": [138, 142], "twitter_api_key_secret": 138, "twitter_api_secret": 142, "twittertwitt": 139, "two": [6, 8, 10, 14, 15, 24, 31, 32, 34, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 61, 66, 68, 70, 71, 72, 75, 77, 78, 80, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 108, 109, 112, 116, 117, 127, 128, 130, 131, 134, 137, 139, 140, 141, 142, 143, 149, 150, 151, 155, 157, 158, 159, 162, 163, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 184, 185, 186, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 205], "two_power_of_f": 57, "twofold": 116, "tworld": 87, "txt": [39, 69, 70, 71, 116, 117, 128, 130, 131, 132, 134, 141, 143, 152, 166], "ty": 52, "tympol": 166, "tynamo": 166, "typ": 55, "type": [4, 5, 7, 10, 14, 17, 19, 24, 34, 36, 39, 40, 42, 47, 48, 49, 52, 56, 57, 59, 61, 63, 64, 70, 71, 75, 77, 78, 80, 87, 88, 89, 90, 95, 96, 98, 100, 101, 104, 106, 116, 117, 120, 128, 130, 131, 133, 134, 135, 136, 137, 141, 143, 145, 148, 150, 151, 152, 155, 162, 163, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "type1": 166, "typecast": 93, "typeerror": [40, 52, 53, 55, 56, 71, 77, 80, 92, 93, 104, 126, 169], "typeobject": 89, "typescript": [116, 117, 136], "typeset": 128, "typewrit": 128, "typhlos": 166, "typic": [7, 49, 104, 128, 129, 131, 151, 155, 170, 171, 172, 175, 177, 178, 195, 198], "typo": 70, "tyranitar": 166, "tyranitarmega": 166, "tyrantrum": 166, "tyrogu": 166, "tyrunt": 166, "tz_london": [59, 63], "tz_ny": [59, 63], "tzinfo": 59, "tzname": 61, "u": [0, 14, 15, 32, 34, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 68, 69, 70, 71, 74, 77, 80, 85, 87, 91, 94, 96, 98, 101, 102, 103, 104, 106, 116, 117, 126, 127, 128, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 151, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "u00dc": 91, "u00dcnic": 91, "u00f6": 91, "u00f6d": 91, "u_": 32, "u_1": 32, "u_2": 32, "u_i": 32, "u_n": 32, "ubgxofi7uxswaykn": 80, "ubyt": 172, "uc": 139, "uci": 9, "ud83c": 117, "udde8": 117, "uddeb": 117, "uddf4": 117, "uddf7": 117, "uesd": 117, "uganda": 138, "uhd": 139, "ui": [24, 117, 128], "uint8": 173, "uk": 59, "ukool": 52, "ular": 39, "ulivi": 128, "ultim": [128, 143, 177, 197], "um": 29, "umbreon": 166, "umpteen": 193, "unari": [89, 95], "unarm": 184, "unauthor": 101, "unavail": 200, "unawar": 198, "unbound": 166, "unboundlocalerror": [70, 75, 76], "unbridg": 128, "uncertainti": [138, 198], "unchang": [56, 91, 169, 172], "unchart": 189, "unclear": 155, "uncom": [56, 171, 172, 175, 176, 177, 178], "uncommon": 194, "uncorr": 169, "uncov": 130, "und": 39, "undefin": 102, "under": [0, 31, 47, 49, 51, 59, 70, 82, 85, 92, 117, 127, 128, 136, 138, 143, 145, 165, 170, 176, 178, 194, 195, 198, 199], "underestim": 116, "underfit": [171, 175, 177], "undergrad": 128, "undergradu": 128, "underli": [68, 82, 96, 98, 116, 131, 148, 155, 162, 170, 175, 187, 189, 192, 193, 195, 196, 197, 198, 200, 201], "undermin": 199, "underneath": [117, 128], "underpaint": 128, "underscor": [0, 38, 80, 88, 90, 101, 102, 103, 104], "underset": 30, "understand": [0, 6, 11, 12, 13, 14, 15, 16, 17, 22, 23, 26, 36, 37, 39, 42, 47, 48, 49, 51, 57, 84, 85, 89, 96, 98, 101, 106, 109, 115, 116, 128, 130, 134, 137, 138, 143, 145, 146, 155, 156, 169, 170, 171, 172, 173, 174, 175, 177, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 205, 207, 208], "understat": 128, "understood": [27, 98, 117, 128], "undervalu": 117, "undestand": [27, 117], "undetermin": 184, "undoubtedli": 185, "uneasi": [116, 128], "unequ": 177, "uner": [116, 128], "unexpect": [49, 71], "unfamiliar": [170, 187], "unfez": 166, "unfold": 138, "unfortun": [128, 131], "unfrozen": 176, "unhandl": 70, "unhash": 56, "unhelp": [116, 117], "unicod": [39, 52, 70, 89, 90, 92], "unicodedecodeerror": 70, "unicodeencodeerror": 70, "unicodeerror": 70, "unicodetranslateerror": 70, "unifi": 91, "uniform": [52, 80, 81, 149, 152, 153, 198, 199], "uniform_data": 201, "unifrom": [16, 17], "unimport": 128, "unind": [43, 89], "unint": 146, "uninterruptedli": 128, "union": [47, 92, 117, 131], "uniqu": [47, 55, 56, 74, 80, 81, 92, 96, 106, 128, 129, 135, 136, 138, 140, 155, 157, 164, 173, 198, 202], "unique_doc": 131, "unique_label": [14, 15, 16, 17], "unique_to_list1": 140, "unique_to_list1_cont": 140, "unique_to_list1_count": 140, "unique_to_list2": 140, "unique_to_list2_cont": 140, "unique_to_list2_count": 140, "unit": [18, 19, 68, 116, 117, 135, 136, 137, 145, 146, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 184, 188, 189, 195, 196, 197, 198, 200], "unittest": 117, "univari": [2, 4, 191, 193, 194, 197, 199, 200], "univers": [0, 7, 94, 195, 196], "university_nam": 195, "unix": [59, 64, 65, 128], "unknowingli": 102, "unknown": [4, 10, 11, 12, 13, 16, 17, 18, 19, 45, 70, 116, 159, 162, 164, 184, 194, 198], "unknowncol": 162, "unlabel": 0, "unless": [39, 46, 74, 89, 128, 131, 169, 171, 172, 175, 185, 188, 198], "unlik": [35, 53, 54, 68, 102, 149, 151, 155, 158, 171, 177, 180, 188, 198], "unlimit": [71, 139, 171, 175, 178], "unlock": 139, "unmemb": 117, "unmodifi": 171, "unnam": [145, 167, 197], "unnatur": 128, "unnecessari": [38, 131, 177], "unnot": 128, "unobserv": 197, "unoffici": 173, "unord": [47, 55, 56, 92, 155], "unorderd": 56, "unown": 166, "unpack": [52, 53, 54], "unpackbit": 153, "unpacking_person_info": 71, "unpickl": [84, 170], "unpredict": 117, "unprestigi": 128, "unravel": 0, "unravel_index": 153, "unreferenc": [68, 102], "unriv": 128, "unruffl": 195, "unseen": [170, 173, 177], "unsolicit": 128, "unsqueez": [170, 171, 172, 173, 175, 177, 178, 179, 180], "unstructur": [117, 132, 134, 135, 172], "unstructured_fil": 134, "unstructuredfileload": 128, "unstructuredpdfload": 132, "unstructuredurlload": [116, 139], "unsuccess": 39, "unsuervis": 10, "unsupervis": [10, 207, 208], "unsuperwis": 10, "unsupport": [70, 93, 104], "unsur": [39, 40, 177], "until": [4, 34, 47, 48, 49, 68, 71, 72, 77, 78, 94, 116, 126, 128, 129, 151, 164, 177, 178], "untrain": [175, 176, 177], "untrained_pr": 171, "unusu": [36, 51, 134], "unzip": [116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 173, 174, 175, 176, 178, 179, 180], "uolp": 52, "up": [11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 38, 42, 47, 48, 49, 51, 68, 71, 74, 75, 77, 78, 85, 87, 89, 92, 93, 94, 98, 116, 117, 126, 127, 128, 130, 134, 135, 136, 137, 138, 142, 143, 148, 155, 166, 169, 170, 171, 172, 174, 178, 179, 186, 187, 188, 189, 191, 194, 196, 199, 200, 208], "upcom": [139, 175, 178, 184, 186, 192, 200], "updat": [4, 5, 38, 48, 53, 56, 76, 116, 128, 130, 131, 135, 136, 137, 155, 158, 159, 160, 161, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 184, 186, 190, 193, 199], "updated_at": [135, 136], "upfront": [98, 169], "upgrad": [132, 137, 172, 173, 177, 178], "upload": [132, 173, 176], "upon": [0, 34, 49, 72, 103, 104, 106, 128, 172, 176, 177, 184, 193, 198, 199, 200, 208], "upper": [28, 29, 37, 39, 52, 94, 128, 146, 162, 169, 186, 194, 195, 198, 199], "uppercas": [37, 39, 52, 53, 80, 88, 90, 95, 169], "uppercase_decor": 37, "upscal": 172, "uptil": 92, "upto": [193, 198, 200], "upvot": 128, "upward": [175, 197], "urd": 117, "urg": 190, "urgent": [128, 130], "url": [116, 117, 125, 126, 128, 135, 136, 139, 142, 155, 172, 175, 176, 177, 178, 191], "urllib3": 126, "urlopen": 126, "ursar": 166, "us": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 31, 34, 37, 40, 42, 43, 44, 45, 46, 49, 52, 55, 56, 57, 61, 62, 64, 65, 66, 68, 69, 70, 72, 74, 75, 77, 78, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 102, 103, 104, 109, 120, 125, 127, 128, 129, 130, 131, 132, 134, 137, 138, 139, 140, 143, 144, 145, 149, 150, 151, 152, 155, 160, 161, 165, 166, 171, 174, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207], "usa": [37, 117, 129, 145], "usabl": [38, 84, 169, 173, 177, 178], "usag": [18, 19, 23, 38, 79, 98, 155, 156, 169, 171, 174, 176, 179, 180, 187, 188, 195, 200], "usd": [117, 135, 136, 145, 177, 195, 200], "useabl": 24, "useless": 7, "user": [22, 24, 34, 37, 42, 44, 45, 47, 48, 51, 55, 57, 69, 70, 71, 73, 74, 77, 80, 86, 89, 90, 93, 95, 104, 116, 117, 125, 126, 127, 128, 129, 130, 131, 133, 137, 141, 142, 143, 153, 159, 162, 167, 169, 176], "user_check": 45, "user_id_gen_by_us": 80, "user_industri": 133, "user_inform": 142, "user_input": [116, 133], "user_loc": [116, 137], "user_m": 116, "user_prompt": 117, "user_queri": 137, "user_request": 137, "user_screen_nam": 138, "user_screenname_str": 138, "user_select": 143, "user_timelin": [138, 142], "user_tweet": 142, "user_unit": 137, "usernam": 117, "users_tweet": [138, 142], "userwarn": [116, 117, 130, 131, 169, 175, 184], "usless": 0, "usr": [169, 172], "usual": [0, 27, 37, 48, 49, 57, 71, 74, 83, 90, 92, 98, 103, 116, 128, 130, 131, 136, 142, 143, 149, 155, 161, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 188, 194], "utc": [59, 60, 61, 64, 65, 117], "utf": [68, 71, 117, 128], "uti": 178, "util": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 57, 116, 117, 126, 128, 130, 131, 162, 169, 170, 172, 173, 175, 176, 177, 178, 179, 180, 182, 196, 200], "utmost": [187, 194, 198, 199], "uuaoqyxbtl": 138, "uv": 32, "uxi": 166, "v": [7, 24, 26, 32, 47, 52, 55, 68, 71, 90, 100, 117, 128, 131, 141, 142, 151, 171, 172, 173, 175, 176, 188, 190, 192, 193, 197, 203], "v0": [175, 176, 177, 178, 185], "v1": [104, 126, 135, 136, 152, 200], "v2": [104, 152, 200], "v3": [24, 117], "v_": 32, "v_1": [32, 200], "v_2": [32, 200], "v_i": 32, "v_n": 32, "va": [186, 196], "vabariik": 117, "vacanc": 141, "vacant": 128, "vacat": 128, "vaccin": 47, "vagu": [7, 18, 19, 188], "vairabl": 94, "val": [38, 47, 49], "valid": [5, 11, 13, 15, 16, 17, 18, 19, 39, 52, 54, 74, 88, 89, 96, 106, 117, 125, 155, 170, 172, 173, 178, 179, 187], "validate_templ": 129, "vallei": [127, 128, 131], "valu": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 27, 32, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 51, 52, 56, 57, 59, 65, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 82, 84, 87, 89, 91, 92, 93, 95, 96, 102, 116, 117, 126, 128, 130, 131, 133, 136, 138, 139, 141, 143, 145, 148, 149, 150, 151, 152, 155, 157, 159, 160, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201], "valuabl": [0, 17, 18, 19, 128, 131, 142, 143], "value1": 53, "value2": 53, "value3": 53, "value_count": [145, 155, 167, 171, 178], "value_var": 200, "valueerror": [38, 71, 93, 94, 106, 126, 128, 150, 156, 164, 192], "valuen": 53, "valuetoolargeerror": 72, "valuetoosmallerror": 72, "vancouv": 117, "vanilla": [143, 177], "vanilla_relevant_doc": 140, "vanillish": 166, "vanillit": 166, "vanillux": 166, "vanish": 128, "vanishingli": 128, "vaporeon": 166, "var": [71, 77, 101, 126, 128, 145, 190, 199], "var_1": 88, "var_nam": [175, 176, 177, 178, 192, 193, 194], "var_scope_test": 75, "vari": [8, 11, 13, 71, 88, 101, 128, 130, 136, 141, 155, 171, 173, 175, 176, 177, 178, 185, 187, 192, 200], "variabel": 201, "variabl": [1, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 22, 24, 28, 29, 35, 38, 39, 40, 43, 44, 45, 47, 48, 49, 51, 52, 53, 57, 59, 60, 62, 64, 70, 71, 74, 79, 80, 83, 84, 88, 91, 92, 93, 94, 95, 100, 102, 103, 106, 116, 117, 132, 135, 136, 137, 138, 142, 143, 159, 161, 162, 164, 165, 169, 170, 172, 177, 178, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200], "variable1": 88, "varianc": [1, 3, 101, 149, 152, 188], "variant": [175, 177], "variat": [1, 20, 44, 45, 47, 108, 112, 187, 189, 192, 193, 194, 195, 196, 197, 198, 200], "varieti": [24, 52, 135, 136, 142, 173, 192, 196, 199, 200], "variou": [0, 2, 24, 37, 39, 47, 48, 51, 52, 53, 54, 55, 57, 68, 80, 84, 91, 92, 95, 96, 117, 128, 131, 138, 141, 142, 148, 155, 160, 163, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 185, 186, 189, 190, 196, 199, 200, 201, 208], "variti": 192, "vartupl": 77, "vast": [0, 148, 155, 158, 177, 178], "vaswani": 177, "vatican": 116, "vb": 132, "vc": [126, 128, 131, 141], "vcsqueez": 131, "vdot": [31, 32], "ve": [16, 17, 18, 19, 39, 71, 116, 117, 128, 131, 132, 133, 138, 142, 143, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200], "vec": 32, "vector": [3, 4, 11, 16, 17, 18, 19, 26, 30, 31, 33, 104, 116, 117, 131, 132, 141, 151, 152, 171, 172, 175, 176, 177, 192, 196, 198], "vectordb": [131, 140], "vectorestor": 117, "vectorestoreretriev": 116, "vectorstor": [117, 130, 131, 132, 134, 140, 141], "vectorstoreretriev": 116, "veg": 71, "vega": 141, "veget": [54, 71, 117, 129], "vehicl": [103, 136, 138, 155, 198], "vehicle_info": 103, "ven": 117, "vendor": [143, 174, 178, 198], "vendor_id": 198, "veniped": 166, "venomoth": 166, "venonat": 166, "ventur": [126, 128, 131, 141], "venusaur": 166, "venusaurmega": 166, "venv": [24, 178], "verb": 128, "verbos": [90, 116, 117, 125, 126, 128, 129, 130, 131, 139, 141, 142, 143, 175, 176], "verdana": 196, "verfi": 178, "veri": [0, 1, 4, 5, 8, 22, 24, 27, 28, 29, 35, 42, 48, 52, 53, 55, 56, 57, 68, 79, 87, 89, 92, 98, 106, 115, 116, 128, 130, 131, 138, 143, 148, 151, 152, 155, 156, 158, 159, 161, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200], "veriabl": 75, "verifi": [103, 126, 169, 176, 177, 178], "verify_integr": 164, "verison": 172, "versa": [31, 170], "versatil": [52, 53, 199], "versicolor": [9, 10, 14, 184, 192], "version": [24, 66, 68, 79, 80, 81, 95, 116, 126, 128, 130, 131, 132, 137, 141, 142, 151, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 191, 199], "versor": 32, "versu": [142, 170, 172, 177, 178], "vert": 193, "vertex": 178, "vertiac": 195, "vertic": [39, 52, 106, 117, 130, 151, 152, 192, 193, 194, 195, 196, 197, 200], "verticalalign": 177, "vespiquen": 166, "vest": [128, 131], "vet": 139, "vgg": 175, "vgg16": 175, "via": [38, 49, 103, 116, 117, 128, 131, 132, 141, 142, 170, 172, 173, 174, 175, 176, 177, 178, 180, 198], "viabl": 177, "viaweb": 128, "vibrava": 166, "vice": [31, 170], "victini": 166, "victreebel": 166, "video": [24, 116, 117, 120, 130, 138, 141, 142, 144, 169, 170, 171, 172, 173, 177, 178, 200, 208], "video_edit": 116, "video_text": 142, "video_url": 142, "videos_text": 142, "view": [70, 103, 128, 130, 131, 136, 138, 139, 141, 150, 153, 158, 169, 171, 172, 175, 177, 178, 184, 186, 188, 196, 197, 201], "viewabl": 176, "viewer": 187, "vigoroth": 166, "vijai": 102, "vileplum": 166, "villain": 128, "vinegar": 129, "violin": [187, 194, 196, 197, 198, 203], "violinplot": [192, 193, 195], "viral": [127, 142], "virginica": [9, 10, 14, 184, 192], "viridi": [187, 190, 196], "viridian": 187, "viridis_r": 190, "virizion": 166, "virtual": 194, "virtualenv": 24, "virtuou": 131, "visibl": [75, 80, 94, 102, 128, 139, 143, 188, 195, 198, 199, 200], "visibli": 186, "vision": [128, 139, 142, 169, 171, 173, 174, 175, 177, 178, 183], "visiontransform": 175, "visit": [22, 34, 38, 39, 52, 59, 65, 66, 70, 72, 74, 75, 81, 82, 84, 89, 103, 104, 116, 128, 138, 155, 188], "visual": [0, 11, 12, 13, 27, 52, 53, 103, 115, 128, 139, 145, 146, 169, 170, 171, 174, 175, 176, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 207, 208], "visuali": 188, "visualizaion": 200, "visualstudio": 24, "vit": 175, "vit_average_time_per_pr": 178, "vit_b_16": [175, 177, 178], "vit_b_16_weight": [177, 178], "vit_b_32": 175, "vit_result": 178, "vit_stat": 178, "vit_test_pred_df": 178, "vit_test_pred_dict": 178, "vit_total_param": 178, "vit_transform": 178, "vivid": 138, "vividli": [128, 198], "vivillon": 166, "vlag": 190, "vlag_r": 190, "vmax": [18, 19, 193, 201], "vmin": [18, 19, 193, 201], "vocabulari": 128, "vodka": 131, "voic": [127, 138], "voil": 125, "volatil": [68, 169], "volbeat": 166, "volcanion": 166, "volcarona": 166, "volkswagen": [155, 156, 167], "voltorb": 166, "volum": 69, "volvo": [155, 156, 167], "vonmis": 81, "vonmisesvari": 81, "vound": 141, "vowel": [53, 54, 90, 91], "vpython": 24, "vscode": [24, 169, 176], "vstack": 148, "vullabi": 166, "vulpix": 166, "vv": 151, "vw": 128, "vx0qtjbfxt": 138, "vysxuyy7rje0xreyvcvzxa": 176, "w": [0, 47, 48, 49, 52, 53, 54, 56, 60, 61, 68, 71, 116, 117, 127, 130, 131, 132, 137, 151, 169, 172, 173, 175, 177, 178, 184, 187, 199, 200], "w320": 117, "w_i": 30, "wa": [0, 14, 15, 34, 35, 36, 37, 38, 39, 44, 47, 49, 52, 57, 68, 70, 71, 75, 80, 87, 90, 94, 103, 104, 106, 116, 117, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 150, 151, 156, 169, 170, 171, 172, 173, 175, 176, 177, 178, 182, 184, 185, 186, 188, 194, 196, 198, 199, 200], "wage": 198, "wagon": [155, 156, 167], "wai": [0, 22, 24, 34, 35, 37, 38, 42, 46, 47, 48, 51, 52, 54, 55, 56, 57, 59, 62, 63, 68, 71, 72, 77, 80, 83, 85, 89, 92, 94, 95, 96, 104, 106, 116, 117, 128, 129, 130, 131, 132, 134, 136, 138, 139, 140, 143, 145, 149, 150, 155, 156, 157, 158, 159, 163, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 201, 208], "wailmer": 166, "wailord": 166, "wait": [44, 66, 128, 131, 132, 138, 172, 173, 176, 177, 178], "walk": [117, 128, 131, 173, 177, 197], "walk_through_dir": 173, "walker": 128, "walkthrough": 177, "wall": [128, 141, 142, 169, 176], "walli": 28, "wallow": 128, "walrein": 166, "wandb": 176, "wang": 177, "wanna": [130, 138, 143], "want": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 35, 37, 38, 39, 42, 44, 46, 47, 48, 49, 51, 52, 53, 68, 69, 71, 75, 80, 83, 87, 89, 90, 94, 96, 101, 102, 103, 104, 106, 107, 111, 116, 117, 125, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 190, 193, 194, 195, 198, 199, 200, 208], "warm": [103, 128, 187], "warmest": 128, "warmup": 177, "warn": [98, 116, 117, 130, 131, 142, 151, 163, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "wartortl": 166, "wash": 146, "washington": 184, "wasn": [116, 128, 131, 141, 176, 178], "wast": [116, 128, 131, 132, 208], "wat": 190, "watch": [47, 128, 132, 138, 142, 143, 170, 171, 172, 208], "watchog": 166, "water": [116, 128, 166], "watev": 52, "watson": 47, "wave": [128, 130, 185, 200], "wayve_ai": 138, "wb": [68, 171, 172, 173, 174, 175, 176, 177, 179, 180], "we": [0, 1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 26, 27, 31, 32, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 115, 116, 117, 126, 127, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 208], "we6ptjwdnp": 138, "weak": [70, 84], "wealth": 140, "weapon": [184, 198], "wear": 184, "weather": [5, 116, 125, 128, 137], "weather_info": 137, "weaviat": 116, "weavil": 166, "web": [22, 24, 98, 128, 131, 142, 178, 187], "web_tech": 52, "webbaseload": 140, "weber": 128, "webinar": 117, "webpag": [116, 117, 172], "websit": [24, 90, 116, 117, 139, 140, 169, 170, 171, 172, 173, 174, 179, 180, 187], "website_data": 142, "wed": [126, 169], "wednesdai": [116, 143], "weedl": 166, "week": [59, 60, 61, 63, 74, 128, 139, 143, 177, 193, 195, 196], "weekdai": [60, 61], "weekend": [131, 132, 143, 194, 196], "weekli": [95, 145], "weep": 103, "weepinbel": 166, "weez": 166, "weibul": 81, "weibullvari": 81, "weight": [7, 74, 131, 136, 145, 159, 169, 170, 171, 172, 173, 175, 176, 177, 178, 186, 190, 196, 198], "weight_decai": 177, "weight_of_object": 74, "weird": [128, 155], "weirder": 37, "welcom": [37, 52, 68, 74, 80, 87, 101, 116, 142, 176, 178, 188, 193, 194, 195, 197, 198, 199, 200], "well": [4, 5, 11, 12, 13, 16, 17, 18, 19, 24, 25, 36, 42, 44, 45, 47, 48, 49, 51, 52, 63, 69, 71, 79, 83, 89, 90, 95, 96, 101, 102, 103, 104, 107, 111, 116, 128, 130, 131, 133, 136, 138, 139, 141, 143, 155, 157, 158, 159, 162, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200], "went": [71, 116, 128, 131, 132, 136, 137, 142, 171, 172, 175, 176], "were": [9, 10, 14, 27, 39, 40, 49, 68, 70, 71, 77, 94, 95, 103, 106, 116, 117, 128, 130, 131, 135, 136, 138, 139, 141, 142, 143, 151, 169, 170, 173, 175, 176, 177, 178, 182, 184, 192, 197], "weren": [128, 141, 177], "west": [117, 128], "western": 117, "wget": 178, "what": [4, 5, 7, 11, 13, 14, 15, 16, 17, 18, 19, 22, 27, 35, 36, 37, 38, 39, 40, 43, 49, 51, 57, 64, 71, 75, 81, 84, 88, 89, 95, 102, 104, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 167, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 207], "whatev": [87, 102, 104, 116, 128, 132, 133, 169, 170, 172, 173, 174, 180, 188], "whatsoev": 200, "wheel": [128, 136, 155, 156, 166, 167, 177, 198], "when": [4, 5, 6, 10, 14, 15, 16, 17, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 106, 108, 109, 112, 116, 117, 125, 126, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 141, 142, 145, 146, 149, 151, 152, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 205], "whenev": [38, 48, 70, 84, 102, 106, 117, 130, 159, 162, 164, 165, 169, 176, 195, 196], "where": [0, 1, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 34, 36, 37, 38, 46, 48, 49, 51, 52, 53, 54, 57, 65, 68, 70, 71, 74, 75, 76, 80, 92, 93, 94, 95, 96, 98, 102, 103, 106, 116, 117, 128, 130, 131, 134, 135, 138, 141, 142, 150, 151, 153, 155, 157, 158, 159, 160, 162, 163, 164, 165, 169, 170, 171, 173, 176, 179, 180, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "wherea": [39, 47, 51, 54, 59, 60, 75, 98, 101, 106, 108, 112, 128, 138, 156, 163, 164, 165, 173, 185, 189, 198, 199], "wherebi": 128, "whereupon": [128, 131], "wherev": [131, 141, 175, 178], "whether": [0, 5, 14, 15, 16, 17, 18, 19, 20, 42, 43, 44, 49, 68, 71, 72, 76, 84, 95, 103, 108, 112, 131, 135, 137, 150, 155, 159, 160, 161, 162, 164, 165, 170, 171, 172, 173, 175, 176, 177, 178, 188, 189, 190, 197, 198], "whi": [193, 194], "which": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 23, 24, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 45, 47, 49, 51, 52, 54, 55, 56, 57, 62, 64, 66, 68, 69, 71, 72, 74, 75, 79, 80, 85, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 106, 109, 116, 117, 125, 128, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 148, 149, 150, 151, 152, 155, 156, 157, 159, 160, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 176, 177, 178, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 205, 208], "whichev": [189, 195], "while": [22, 34, 35, 38, 40, 42, 50, 51, 52, 55, 56, 66, 68, 70, 72, 74, 77, 79, 80, 83, 88, 89, 93, 95, 96, 98, 101, 102, 103, 106, 117, 126, 128, 130, 131, 132, 136, 138, 139, 150, 156, 157, 161, 163, 164, 170, 172, 173, 175, 176, 177, 178, 184, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200], "whilst": [171, 172, 174, 177, 178, 199], "whimsicott": 166, "whirl": 128, "whirliped": 166, "whiscash": 166, "whisk": 116, "whisker": [7, 11, 13, 193, 194, 196, 198], "whiskerprop": 192, "whismur": 166, "whisper": 142, "white": [7, 42, 49, 52, 117, 128, 130, 136, 143, 184, 185, 195, 196], "whitegrid": [185, 187, 188, 189, 190, 193, 195, 196, 198, 200], "whitespac": [47, 52, 89, 117], "whitish": 131, "whl": [175, 176, 177, 178], "who": [44, 52, 117, 125, 128, 130, 134, 135, 136, 138, 141, 142, 143, 153, 178, 184, 194, 196, 198, 208], "whoisthi": [101, 103], "whole": [24, 39, 49, 52, 66, 74, 80, 95, 128, 130, 131, 134, 142, 143, 155, 156, 158, 170, 172, 173, 174, 175, 176, 177, 178], "wholesal": 131, "wholist": 130, "wholli": 128, "whoop": [37, 135, 136, 142], "whose": [1, 8, 75, 79, 90, 102, 116, 128, 159, 162, 177], "why": [35, 37, 38, 44, 51, 52, 70, 71, 84, 89, 128, 131, 134, 135, 136, 138, 141, 142, 143, 151, 170, 171, 172, 173, 179, 180, 184, 192, 193, 194, 196], "wichita": 184, "wickham": 188, "wide": [24, 94, 116, 128, 152, 155, 162, 169, 172, 173, 175, 176, 177, 178, 192, 193, 196], "wide_to_long": 192, "widen": 200, "wider": [117, 141, 143, 171, 195, 198], "widespread": [156, 176], "width": [9, 10, 11, 14, 52, 95, 101, 117, 141, 143, 146, 169, 172, 173, 175, 176, 177, 178, 179, 180, 184, 189, 190, 192, 194, 195, 196, 198, 200], "width_ratio": 200, "wife": 141, "wifi": 133, "wigglytuff": 166, "wightman": 172, "wiki": [130, 171, 191], "wikipedia": [1, 3, 4, 5, 7, 130, 169, 170, 171, 175, 191], "wikipediaapiwrapp": 130, "wild": [116, 117, 128, 138, 171, 178], "wildcard": 141, "wilder": 198, "wildli": 128, "william": [130, 141], "willing": [116, 128, 130], "wimpi": 128, "win": 200, "win32": [24, 80], "wind": [128, 169], "windi": 137, "window": [24, 68, 69, 87, 102, 128, 136, 184, 187, 198], "windshield": 136, "wine": 143, "winerror": [68, 80], "wing": 138, "wingul": 166, "winograd": 128, "winre_backup_partit": 69, "winreag": 69, "winter": [45, 74, 128, 190], "winter_r": [190, 199], "wirh": 166, "wisdom": [116, 130], "wise": [127, 146, 148, 155, 163, 166, 169, 177, 187, 190, 198], "wish": [38, 39, 49, 52, 74, 94, 131, 178, 187, 189, 194, 196, 198, 199, 200], "wistia": 190, "wistia_r": 190, "wit": [127, 128], "within": [0, 3, 24, 34, 39, 48, 49, 54, 68, 69, 74, 76, 83, 92, 101, 103, 117, 128, 130, 131, 138, 152, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 185, 186, 190, 192, 193, 194, 195, 196, 198, 200, 202], "without": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 34, 37, 43, 49, 52, 54, 56, 57, 60, 61, 68, 71, 76, 77, 79, 80, 83, 95, 96, 98, 101, 102, 103, 104, 116, 117, 128, 130, 131, 132, 133, 139, 143, 151, 152, 159, 161, 164, 166, 169, 170, 172, 176, 177, 178, 184, 185, 186, 187, 192, 194, 195, 196, 198, 199, 200, 207], "withpoli": 139, "witti": 127, "woah": [170, 175, 177, 178], "wobbuffet": 166, "wolfpaulu": 132, "wolfram_alpha_appid": 125, "wolframalpha": 125, "wolpert": 0, "woman": [39, 128, 194, 196], "women": 138, "won": [74, 103, 117, 128, 129, 130, 131, 132, 137, 141, 142, 143, 152, 155, 169, 170, 171, 172, 173, 175, 177, 178, 184, 185, 188, 192, 198, 200], "wonder": [59, 74, 116, 117, 125, 128, 132, 134, 138, 171, 172, 173, 175, 176, 177, 178, 198], "wonderfulli": 128, "wont": [102, 169], "woo": [101, 117], "woobat": 166, "wood": 128, "woof": 130, "woohoo": [170, 173, 174, 177, 178], "wooper": 166, "wor": 52, "word": [0, 5, 7, 28, 29, 32, 47, 49, 52, 56, 57, 68, 80, 88, 90, 95, 101, 102, 103, 116, 125, 128, 129, 130, 132, 138, 141, 143, 169, 171, 172, 173, 175, 176, 177, 178, 188, 189, 196, 199], "work": [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 35, 36, 37, 39, 40, 47, 48, 49, 51, 53, 55, 57, 59, 68, 69, 71, 75, 78, 80, 85, 92, 94, 95, 98, 101, 102, 103, 104, 107, 111, 117, 127, 128, 130, 131, 132, 133, 135, 138, 139, 141, 142, 143, 148, 150, 151, 155, 158, 162, 169, 170, 171, 172, 173, 175, 176, 177, 178, 184, 185, 187, 188, 189, 190, 193, 195, 198, 199, 200, 208], "workabl": 208, "workaround": [117, 142], "workbook": 198, "worker": [173, 174, 180], "workflow": [117, 139, 171, 172, 173, 176, 178, 183, 200], "workforc": [135, 136], "workload": [85, 177], "workplac": 190, "works_for_al": 37, "world": [4, 10, 11, 13, 22, 23, 24, 44, 47, 52, 70, 74, 78, 80, 84, 90, 92, 95, 96, 100, 101, 102, 117, 126, 128, 131, 138, 141, 155, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 185, 188, 193, 194, 198, 207], "world66": 52, "worldli": 128, "worm": [128, 142], "wormadampl": 166, "wormadamsandi": 166, "wormadamtrash": 166, "worn": 128, "worri": [90, 117, 128, 141, 143, 176, 177, 191, 200], "wors": [128, 171, 172, 177], "worst": [1, 128, 171], "worth": [128, 134, 143, 176, 177, 178, 192, 193, 197], "would": [0, 6, 7, 23, 24, 34, 36, 37, 38, 40, 42, 47, 49, 57, 68, 69, 70, 71, 77, 78, 80, 83, 85, 88, 89, 90, 94, 102, 103, 106, 109, 115, 116, 117, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 169, 170, 171, 172, 173, 175, 176, 177, 178, 184, 186, 188, 189, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 208], "wouldn": [128, 130, 131, 141, 177, 178, 188, 196, 199], "wow": [128, 130, 138], "wozniak": 130, "wp": 132, "wqzg1bdotc": 138, "wrangl": [168, 190, 198], "wrap": [77, 101, 128, 129, 133, 136, 162, 177], "wrapped_f": 128, "wrappedfn": 128, "wrapper": [37, 125, 126, 162, 188, 193, 199], "wrapper___slow_conv2d_forward": 173, "wrapper_accepting_paramet": 37, "wrapper_addmm": 172, "wrapper_cuda_addmm": 172, "wreckag": 128, "wrestl": 128, "writ": 80, "writabl": 68, "write": [5, 6, 20, 22, 24, 39, 45, 47, 48, 49, 52, 54, 57, 70, 74, 75, 76, 80, 84, 85, 89, 90, 91, 92, 94, 95, 98, 101, 103, 106, 108, 109, 112, 116, 117, 128, 130, 131, 138, 141, 143, 149, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 195, 204, 205], "writeabl": 153, "writefil": [174, 178, 180], "writelin": 68, "writer": [116, 128, 131, 138], "written": [6, 24, 43, 51, 52, 57, 68, 71, 74, 80, 84, 85, 87, 88, 90, 91, 92, 98, 108, 109, 112, 128, 134, 138, 173, 174, 175, 176, 177, 178, 180, 205], "wrong": [44, 45, 71, 72, 116, 128, 169, 170, 171, 172, 173, 176, 178], "wrote": [68, 87, 89, 116, 117, 128, 134, 171, 174, 175, 176, 177], "wspace": [16, 17, 18, 19], "wt": 192, "wtxmut": 192, "wurmpl": 166, "www": [24, 116, 117, 135, 136, 139, 140, 142], "wxwidget": 24, "wynaut": 166, "wysiwyg": 128, "x": [1, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 24, 28, 29, 30, 31, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 60, 61, 68, 74, 75, 76, 77, 79, 80, 82, 84, 89, 90, 91, 92, 94, 95, 102, 103, 104, 106, 116, 117, 130, 138, 142, 145, 146, 148, 149, 150, 151, 152, 155, 156, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201], "x1": [11, 12, 13, 14, 15, 16, 17, 75, 95, 171, 189], "x11": 187, "x2": [11, 12, 13, 14, 15, 16, 17, 95, 145, 171, 189], "x3": 95, "x45": 52, "x48": 52, "x58": 52, "x61": 52, "x86": 69, "x97": 134, "x_": [28, 29], "x_1": [28, 29], "x_2": [28, 29], "x_3": [28, 29], "x_4": [28, 29], "x_5": [28, 29], "x_axi": [10, 11, 14, 15, 191], "x_bin": 188, "x_blob": 171, "x_blob_test": 171, "x_blob_train": 171, "x_ci": 188, "x_data": 192, "x_estim": 188, "x_flatten": 177, "x_i": [28, 29, 30, 171], "x_index": [11, 14, 15], "x_input": 177, "x_jitter": 188, "x_m": [28, 29], "x_max": [11, 14, 15, 191], "x_med": 193, "x_min": [11, 14, 15, 191], "x_origin": 169, "x_output_mlp_block": 177, "x_output_msa_block": 177, "x_partial": 188, "x_patch": 177, "x_permut": 169, "x_predict": [11, 12, 13], "x_regress": 171, "x_reshap": 169, "x_sampl": 171, "x_squeez": 169, "x_stack": 169, "x_sum": 48, "x_test": [11, 13, 16, 17, 18, 19, 170, 171], "x_test_regress": 171, "x_train": [10, 11, 13, 14, 15, 16, 17, 18, 19, 170, 171], "x_train_regress": 171, "x_unsqueez": 169, "x_valu": 11, "x_var": [190, 199], "x_y_index": 11, "xatu": 166, "xavier": 195, "xaxi": [11, 196], "xeon": 178, "xernea": 166, "xerox": 128, "xgboost": 172, "xhh": 52, "xkcd": 187, "xkcd_palett": 187, "xkcd_rgb": [187, 193], "xl": 68, "xlabel": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 130, 145, 146, 170, 172, 173, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198], "xlim": [186, 200], "xlist": 195, "xlrd": 68, "xlsx": 166, "xmax": 192, "xmin": 192, "xml": 24, "xml_exampl": 68, "xmpmcoyqhi": 138, "xor": [95, 104], "xorg": 169, "xtick": [145, 146, 177, 196], "xticklabel": [177, 200], "xy": [178, 196, 199], "xycoord": [186, 199], "xytext": 196, "xyz": [47, 54, 69, 71, 94, 139, 169], "xyzvalu": 94, "xz": 39, "y": [4, 5, 8, 11, 12, 13, 14, 15, 28, 29, 30, 35, 39, 40, 45, 46, 47, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 74, 75, 77, 79, 80, 82, 90, 91, 92, 94, 95, 102, 103, 104, 106, 116, 117, 128, 130, 134, 135, 136, 139, 145, 146, 148, 149, 151, 152, 155, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "y1": [95, 189], "y134sdnnjb2rllxjlbw90zq": 169, "y2": [95, 189], "y3": 95, "y312sdnnjb2rllxjlbw90zq": 169, "y_axi": [10, 11, 14, 15], "y_blob": 171, "y_blob_test": 171, "y_blob_train": 171, "y_combinator_url": 139, "y_data": 192, "y_i": [28, 29, 30], "y_index": [11, 14, 15], "y_jitter": 188, "y_logit": [171, 172], "y_max": [11, 14, 15], "y_med": 193, "y_min": [11, 14, 15], "y_partial": 188, "y_pred": [170, 171, 172, 173, 174, 179, 180], "y_pred_class": [173, 174, 179, 180], "y_pred_label": 171, "y_pred_prob": 171, "y_pred_tensor": 172, "y_predict": [11, 12, 13], "y_regress": 171, "y_sampl": 171, "y_test": [11, 13, 16, 17, 18, 19, 170, 171], "y_test_predict": [16, 17, 18, 19], "y_test_regress": 171, "y_train": [11, 13, 14, 15, 16, 17, 18, 19, 170, 171], "y_train_predict": [14, 15, 16, 17, 18, 19], "y_train_regress": 171, "y_true": [171, 172], "y_valu": 11, "y_var": [190, 199], "ya": 30, "yahoo": [128, 131], "yale": 128, "yamask": 166, "yanke": 117, "yanma": 166, "yanmega": 166, "yannic": 177, "yaxi": [11, 196], "yb": 30, "yc": [128, 139], "ycarc5yrrupyg00": 80, "ycombin": [116, 117, 139], "yd7efwnqkns7qxat": 80, "ye": [35, 37, 49, 55, 70, 117, 128, 143, 156, 159, 162, 171, 172, 173, 175, 177, 180, 188, 194, 196, 199, 200], "yeah": [141, 143, 178], "year": [44, 47, 52, 60, 61, 62, 63, 64, 65, 71, 84, 95, 97, 101, 106, 116, 117, 128, 130, 131, 132, 134, 135, 136, 137, 138, 141, 142, 145, 177, 196, 200, 201], "year2021": 90, "year_2021": 90, "year_born": 71, "yellow": [117, 128, 198], "yesmail": 40, "yet": [24, 49, 116, 128, 131, 135, 136, 170, 172, 173, 175, 176, 177, 178, 196], "yg1di2srj": 138, "yield": [34, 35, 88, 134, 150, 151, 185], "yield_kei": 131, "yj": [51, 92], "ylabel": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 130, 145, 146, 170, 172, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198], "ylgn": 190, "ylgn_r": 190, "ylgnbu": 190, "ylgnbu_r": 190, "ylim": [186, 191, 199, 200], "ylist": 195, "ylorbr": 190, "ylorbr_r": 190, "ylorrd": 190, "ylorrd_r": 190, "ymax": 192, "ymin": 192, "yo": [39, 186], "yoga": 141, "york": [116, 117, 128], "yorker": 128, "yorkvil": [117, 128], "yosemit": 128, "you": [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 106, 107, 108, 109, 111, 112, 115, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 142, 143, 146, 148, 149, 150, 151, 152, 155, 156, 157, 159, 162, 163, 164, 165, 167, 170, 171, 172, 173, 178, 179, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 204, 205, 208], "young": [117, 130, 139], "younger": [128, 131], "your": [6, 20, 23, 25, 34, 36, 39, 42, 43, 44, 49, 52, 53, 54, 63, 68, 69, 71, 72, 74, 80, 82, 83, 87, 88, 89, 90, 94, 95, 98, 101, 102, 107, 108, 109, 111, 112, 115, 117, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 140, 142, 143, 145, 148, 151, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 205, 208], "your_ag": 44, "your_api_kei": 136, "your_space_nam": 178, "your_usernam": 178, "yourapikei": [116, 126, 130, 131, 132, 134, 135, 140], "yourapikeyifnotset": [117, 129, 137, 138, 141, 142], "yourkei": 127, "yourself": [57, 59, 74, 90, 94, 101, 128, 131, 136, 169, 171, 176, 198], "youtub": [138, 141, 170, 176, 177, 178], "youtubeload": 142, "youtubesearchtool": 137, "youtubeyoutub": 139, "yt": [30, 142], "ytho": 52, "ython": 39, "ytick": [145, 146, 177, 191, 199], "yticklabel": 177, "yummi": 138, "yurtsev": 136, "yveltal": 166, "yy": [59, 62], "yyyi": [59, 61, 176], "z": [7, 11, 14, 15, 40, 47, 52, 53, 54, 60, 61, 77, 88, 90, 95, 103, 149, 155, 166, 169, 171, 177, 199], "z2d5xgsemj": 138, "z_predict": 11, "z_score": 202, "z_setosa": 14, "z_versicolor": 14, "z_virginica": 14, "za": 52, "zalando": [9, 17, 19, 172], "zangoos": 166, "zapdo": 166, "zapier_nla_api_kei": 126, "zapiernlawrapp": 126, "zapiertoolkit": [120, 126, 144], "zaxi": 11, "zealand": [11, 13], "zebstrika": 166, "zekrom": 166, "zen": [96, 106], "zero": [7, 11, 14, 15, 27, 34, 37, 38, 43, 44, 45, 46, 48, 49, 51, 52, 57, 60, 61, 70, 71, 91, 93, 95, 102, 106, 116, 117, 125, 126, 128, 130, 139, 148, 149, 151, 152, 159, 162, 166, 170, 171, 172, 173, 174, 177, 178, 179, 180, 196, 199], "zero_grad": [170, 171, 172, 173, 174, 179, 180], "zero_to_ten": 169, "zero_to_ten_deprec": 169, "zerodivisionerror": [37, 70, 71], "zeros_lik": 169, "zfill": 52, "zho": 117, "zigzagoon": 166, "zip": [30, 47, 80, 92, 116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 157, 163, 173, 174, 175, 176, 177, 178, 179, 180, 193, 196, 199, 202], "zip_ref": [116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 173, 174, 175, 176, 179, 180], "zipcod": [45, 47], "zipfil": [116, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 173, 174, 175, 176, 179, 180], "zone": [60, 61, 63, 139], "zoom": [128, 143], "zoroark": 166, "zorua": 166, "zp7xfripv9": 138, "zubat": 166, "zurich": 159, "zweilou": 166, "zxoyh": 80, "zygarde50": 166, "\u00b5": 169, "\u00bd": 116, "\u00e2": 128, "\u00f6": 91, "\u00fb": 32, "\u00fc": 91, "\u00fcnic\u00f6d": 91, "\u03b8": 32, "\u03c0": 74, "\u03c6\u03b9\u03bb\u03bf\u03c3\u03bf\u03c6\u03af\u03b1": 130, "\u043a\u043e\u043b\u0443\u043c\u0431\u0438\u044f": 117, "\u043a\u043e\u043b\u0443\u043c\u0431\u0438\u0458\u0430": 117, "\u0440\u0435\u043f\u0443\u0431\u043b\u0438\u043a\u0430": 117, "\u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430": 117, "\u0444\u0440\u0430\u043d\u0446\u0438\u044f": 117, "\u0444\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0430\u044f": 117, "\u0444\u0440\u0430\u043d\u0446\u0443\u0441\u043a\u0430": 117, "\u0627\u0644\u062c\u0645\u0647\u0648\u0631\u064a\u0629": 117, "\u0627\u0644\u0641\u0631\u0646\u0633\u064a\u0629": 117, "\u062c\u0645\u0647\u0648\u0631\u064a\u0629": 117, "\u062c\u0645\u0647\u0648\u0631\u06cc": 117, "\u062c\u0645\u06c1\u0648\u0631\u06cc\u06c1": 117, "\u0641\u0631\u0627\u0646\u0633": 117, "\u0641\u0631\u0627\u0646\u0633\u0647": 117, "\u0641\u0631\u0646\u0633\u0627": 117, "\u0643\u0648\u0644\u0648\u0645\u0628\u064a\u0627": 117, "\u06a9\u0644\u0645\u0628\u06cc\u0627": 117, "\u06a9\u0648\u0644\u0645\u0628\u06cc\u0627": 117, "\u30b3\u30ed\u30f3\u30d3\u30a2": 117, "\u30b3\u30ed\u30f3\u30d3\u30a2\u5171\u548c\u56fd": 117, "\u30d5\u30e9\u30f3\u30b9": 117, "\u30d5\u30e9\u30f3\u30b9\u5171\u548c\u56fd": 117, "\u54e5\u4f26\u6bd4\u4e9a": 117, "\u54e5\u4f26\u6bd4\u4e9a\u5171\u548c\u56fd": 117, "\u6cd5\u5170\u897f\u5171\u548c\u56fd": 117, "\u6cd5\u56fd": 117, "\uacf5\ud654\uad6d": 117, "\ucf5c\ub86c\ube44\uc544": 117, "\ud504\ub791\uc2a4": 117}, "titles": ["Introduction to Machine Learning! \ud83d\ude80", "Anomaly Detection Using Gaussian Distribution", "Concepts at glance", "K-Means Algorithm", "Linear Regression", "Logistic Regression", "Notebooks with MyST Markdown", "Neural Network", "Anomaly Detection Using Gaussian Distribution", "Datasets", "K-Means Algorithm Demo", "Multivariate Linear Regression Demo", "Non-linear Regression Demo", "Univariate Linear Regression Demo", "Logistic Regression With Linear Boundary Demo", "Logistic Regression With Non-Linear Boundary Demo", "Multivariate Logistic Regression Demo", "Multivariate Logistic Regression Demo", "Neural Network (Multilayer Perceptron) Demo", "Neural Network (Multilayer Perceptron) Demo", "Markdown Files", "Here\u2019s my sample title", "Learn Python Programming", "Mathematics for Machine Learning", "Getting Started with Python", "Content with notebooks", "Linear Algebra", "Calculus - Fourier Series", "Capital-pi notation", "Capital-sigma notation", "Dissimilarity Measure", "Linear Algebra - Matrices", "Linear Algebra - Vectors", "Mathematics essentials", "Python Iterators", "Python Python Generators", "Python Closures", "Python Decorators", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator", "Python RegEx", "Python <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code></strong>", "Python Advanced Topics", "Python Flow-Control (Decision-Making) Statements", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-else</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-elif-else</span></code> statement", "Python Nested <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Loops in Python", "Loops in Python", "Control Statements in Python", "Python Flow Control", "Python Numbers, Type Conversion and Mathematics", "Python Strings", "Python List", "Python Tuple", "Python Dictionary", "Python Sets", "Python List Comprehension", "Python Data Types", "Python datetime", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strftime()</span></code>", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strptime()</span></code>", "How to get current date and time in Python?", "Python Get Current time", "Python timestamp to datetime and vice-versa", "Python time Module", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">sleep()</span></code>", "Python Date &amp; Time Module", "Python File I/O", "Python Directory and Files Management", "Python Errors and Built-in Exceptions", "Python Exceptions Handling Using <code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">except</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">finally</span></code> statement", "Python Custom Exceptions", "Python Files", "Python Functions", "Python Global, Local and Nonlocal variables", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code> Keyword", "Function Argument and Parameter", "Python Recursion", "Python Anonymous/<strong><code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span></code></strong> Function", "Python Modules", "Python Random Module", "Python Mathematical Functions", "Python Package", "Python Docstrings", "Python User-defined Functions", "Python Functions", "Python Hello, World", "Python Keywords and Identifiers", "Python Statement, Indentation and Comments", "Python Variables and Constants", "Python Literals", "Python Data Types", "Python Type Conversion and Type Casting", "Python Input, Output and Import", "Python Operators", "Python Namespace and Scope", "Data structures and algorithms", "Differences Between Interpreter and Compiler", "&lt;no title&gt;", "Python Introduction", "Python OOPs Concepts", "Python  Classes and Objects", "Python Inheritance", "Python Operator Overloading", "Python Object Class", "self in Python, Demystified", "Content with notebooks", "Markdown Files", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "Content with notebooks", "Markdown Files", "Here\u2019s my sample title", "Introduction to HuggingFace", "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80", "LangChain Cookbook \ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73", "LangChain Cookbook Part 2: Use Cases\ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73", "Table of Contents", "Langchain modules", "Langchain", "LangGraphs", "LangServe", "LangSmith", "Langchain expression language", "Agents - Make OpenAI Do Things For you", "Zapier Natural Language Actions API", "Twitter Reply Bot", "Load Documents", "0. Simple Input/Output Still works", "5 Levels Of Summarization: Novice to Expert", "Advanced Retrieval With LangChain", "Top-K Similarity Search - Ask A Book A Question", "To Do", "Sources", "Extract Structured Data From Text: Expert Mode (Using Function Calling)", "Extract Structured Data From Text: Expert Mode (Using Kor)", "Function Calling with OpenAI\u2019s GPT Models: An Interactive Tutorial", "Instructing LLMs To Match Tone", "Personalized email generation", "&lt;no title&gt;", "Topic Modeling With Language Models", "Using LLMs To Summarize Personal Research", "Extract Data From Calls &amp; Video Transcripts/Interviews", "Langchain projects gallery", "Matplotlib", "Python Matplotlib", "Python Matplotlib", "Python NumPy", "Python NumPy Array:", "Array indexing", "Array math", "Arrays reorganizing", "Python NumPy Exercises", "Python Numpy Module", "Python Pandas", "Create Pandas DataFrame from Python Dictionary", "Create Pandas DataFrame from Python List", "Pandas DataFrame head, tail, at, iat", "Drop columns in pandas DataFrame", "Drop duplicates in pandas DataFrame", "Drop columns with NA in pandas DataFrame", "Rename columns in Pandas DataFrame", "Convert Pandas DataFrame to Python dictionary", "Set index in pandas DataFrame", "Reset index in pandas DataFrame", "Python Pandas", "Python Pandas", "Python Pandas Module", "PyTorch Fundamentals", "PyTorch Workflow Fundamentals", "PyTorch Neural Network Classification", "PyTorch Computer Vision", "PyTorch Custom Datasets", "PyTorch Going Modular", "PyTorch Transfer Learning", "PyTorch Experiment Tracking", "PyTorch Paper Replicating", "PyTorch Model Deployment", "Going Modular: Part 1 (cell mode)", "Going Modular: Part 2 (script mode)", "05. PyTorch Going Modular", "Going Modular Scripts", "Pytorch", "Loading Datasets in Seaborn", "Controlling Aesthetics of Seaborn Plots", "Matplotlib vs. Seaborn Plotting Code", "Seaborn Color Palettes", "LM Plot and Reg Plot", "Scatter Plot and Joint Plot", "Additional Regression Plots", "What is Distribution Plots?", "Seaborn: Categorical Data Plots", "Seaborn: Strip Plot", "Seaborn: Box Plot", "Seaborn: Violin Plot", "Bar Plot, Point Plot and Count plot", "Factor Plot", "Time Series &amp; LV Plot", "PairGrid", "FacetGrid", "What is heat map?", "What is cluster map?", "Python Seaborn", "Here\u2019s my sample title", "Notebooks with MyST Markdown", "Tools required to work with neural networks", "AI/ML Learning Path", "Welcome to my technical diary \ud83e\udd2f"], "titleterms": {"": [21, 39, 53, 55, 59, 60, 62, 87, 110, 113, 117, 137, 153, 167, 170, 173, 176, 177, 178, 179, 180, 191, 204], "0": [39, 129, 153, 165, 172, 173], "05": 181, "1": [0, 27, 35, 37, 39, 45, 46, 47, 49, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 74, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 116, 129, 130, 132, 138, 141, 145, 146, 153, 159, 162, 165, 167, 169, 172, 173, 177, 178, 179, 180, 191, 193, 196, 199], "10": [39, 59, 146, 153, 167, 178], "100": 153, "100th": 153, "10x10": 153, "10x3": 153, "11": [39, 59, 153, 178], "12": [59, 153], "13": [59, 153], "14": [59, 153], "15": [59, 153], "16": [59, 153], "16x16": 153, "17": 153, "18": 153, "19": 153, "1d": [150, 153], "2": [0, 35, 37, 39, 45, 46, 47, 49, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 70, 74, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 116, 117, 125, 130, 132, 138, 141, 145, 146, 153, 167, 169, 172, 173, 177, 178, 179, 180, 191, 196], "20": 153, "2016": 153, "2017": 9, "21": 153, "22": 153, "23": 153, "24": 153, "25": 153, "26": 153, "27": 153, "28": 153, "29": 153, "2d": [150, 153], "2x2x2": 153, "3": [0, 35, 37, 39, 45, 47, 49, 52, 53, 54, 56, 59, 60, 62, 63, 66, 68, 70, 74, 80, 84, 89, 90, 91, 92, 94, 95, 125, 130, 138, 145, 146, 153, 167, 169, 172, 177, 178, 191, 196], "30": 153, "31": 153, "32": 153, "33": 153, "34": 153, "35": 153, "36": 153, "37": 153, "38": 153, "39": 153, "3x3": 153, "3x4": 153, "4": [0, 35, 39, 59, 63, 66, 68, 70, 84, 89, 92, 95, 130, 138, 146, 153, 167, 169, 177, 178, 191], "40": 153, "41": 153, "42": 153, "43": 153, "44": 153, "45": 153, "46": 153, "47": 153, "48": 153, "49": 153, "4x4": 153, "5": [39, 59, 63, 70, 84, 92, 95, 130, 146, 153, 167, 178, 191], "50": 153, "51": 153, "52": 153, "53": 153, "54": 153, "55": 153, "56": 153, "57": 153, "58": 153, "59": 153, "5x2": 153, "6": [39, 59, 63, 70, 92, 95, 146, 153, 167, 178], "60": 153, "61": 153, "62": 153, "63": 153, "64": 153, "65": 153, "66": 153, "67": 153, "68": 153, "69": 153, "6x3": 153, "6x6": 153, "7": [39, 59, 70, 146, 153, 167, 178], "70": 153, "71": 153, "72": 153, "73": 153, "74": 153, "75": 153, "76": 153, "77": 153, "78": 153, "79": 153, "8": [39, 59, 70, 146, 153, 167, 178], "80": 153, "81": 153, "82": 153, "83": 153, "84": 153, "85": 153, "86": 153, "87": 153, "88": 153, "89": 153, "8x8": 153, "9": [39, 59, 70, 146, 153, 167, 173], "90": 153, "91": 153, "92": 153, "93": 153, "94": 153, "95": 153, "96": 153, "97": 153, "98": 153, "99": 153, "9_": 39, "9x9": 153, "A": [39, 117, 128, 132, 135, 136, 153], "As": [117, 135, 136], "Be": [106, 150], "By": 39, "For": [57, 125, 137], "If": [53, 55], "In": [24, 53, 80, 102], "Into": [11, 13, 16, 17, 18, 19], "No": 71, "Of": [103, 117, 130, 138], "One": [5, 39, 44, 169], "The": [3, 38, 43, 44, 52, 53, 54, 55, 68, 71, 80, 116, 141, 156, 159, 160, 161, 162, 163, 164, 165, 171, 173, 177], "These": 191, "To": [106, 133, 138, 142, 155], "With": [14, 15, 129, 131, 136, 141], "_": 39, "__doc__": 84, "__init__": 106, "__new__": 106, "about": 22, "accept": 94, "access": [47, 52, 53, 54, 55, 94, 102], "account": 138, "accumul": 153, "across": [76, 178], "action": 126, "activ": 171, "ad": [55, 137, 148, 162], "add": [6, 53, 55, 109, 153, 205], "addit": [31, 32, 190], "adjust": [171, 176], "advanc": [22, 41, 52, 131, 152, 207], "advantag": [54, 78, 80, 85], "aesthet": 185, "agent": [116, 117, 125, 126, 130], "aggreg": [166, 169], "agnost": [172, 173], "ai": [116, 138, 207], "algebra": [26, 31, 32], "algorithm": [1, 3, 7, 10, 97], "align": 94, "all": [5, 52, 53, 55, 80, 146, 153, 159, 160, 161, 162, 167, 169, 170, 177], "allow": 191, "alpha": 125, "alphabet": 39, "alphanumer": 39, "alreadi": 55, "also": [39, 149], "altern": 39, "amount": [130, 166], "an": [6, 34, 39, 53, 55, 56, 71, 102, 109, 126, 130, 137, 153, 170, 173, 177, 178, 205], "analyz": [11, 12, 13, 14, 15, 16, 17], "anatomi": [194, 195], "angl": 32, "ani": [39, 53, 55, 74, 153], "anomali": [1, 8], "anonym": 79, "anoth": 77, "answer": [117, 132], "anyth": 55, "api": [117, 125, 126], "app": 178, "appart": 52, "appear": 53, "append": 53, "appl": 169, "appli": 155, "applic": 24, "appropri": 60, "ar": [39, 53, 55, 56, 79, 80, 83, 85, 153, 156, 161, 176, 191], "arang": 152, "arbitrari": [77, 153], "architectur": 171, "area": [24, 153], "arg": 40, "argmax": 149, "argmin": 149, "argument": [53, 71, 74, 77, 94], "arithmat": 95, "arithmet": 95, "around": 153, "arrai": [148, 149, 150, 151, 152, 153], "artifici": 9, "asarrai": 152, "ascend": [53, 54, 55], "asctim": 65, "ask": [132, 138], "assign": [90, 95], "assist": 138, "attent": 177, "attribut": [68, 84, 102, 135, 136, 149, 153, 155], "attributeerror": 70, "audienc": 208, "augment": 173, "auto": 175, "automat": 176, "avail": 55, "averag": [153, 167], "avoid": 106, "awai": 153, "axi": [153, 159, 162, 191], "b": [39, 47, 48, 153], "back": [37, 132, 169], "background": 192, "backpropag": 7, "backslash": 39, "backward": 47, "balanc": 173, "bar": [145, 146, 196], "base": [153, 175, 176], "baselin": 172, "basic": [52, 77, 130, 145, 148, 149, 169], "batch": [4, 5, 129, 172], "bath": 146, "becom": [153, 173], "befor": 39, "begin": 39, "beginn": [2, 207], "below": 153, "best": [8, 130, 172, 176], "better": [56, 172], "between": [32, 35, 59, 63, 98, 153, 173, 179, 180], "big": 178, "binari": 153, "bincount": 153, "bit": [56, 153], "bitwis": 95, "blank": 87, "block": [25, 107, 111, 153, 177], "blue": 171, "bolt": 116, "bonu": 141, "book": [130, 132], "boolean": [74, 91, 95, 150, 152, 153], "bootstrap": 153, "border": 153, "bot": 127, "both": [94, 98, 153], "bottom": 158, "boundari": [14, 15], "box": [145, 193, 194], "boxplot": 196, "brace": 39, "bracket": 39, "brain": 116, "break": [47, 48, 49, 52, 87], "breath": 24, "bring": 178, "broadcast": [151, 152], "build": [34, 153, 170, 171, 172, 173, 176, 178, 187], "built": [37, 52, 53, 54, 55, 56, 70, 80, 102], "busi": [135, 136], "byte": 153, "c": [47, 48, 153], "calcul": [14, 15, 16, 17, 18, 19, 24, 146, 177], "calculu": 27, "call": [74, 116, 135, 137, 143], "can": [57, 106, 116, 153, 169, 171, 174, 175, 177], "canberra": 30, "capit": [28, 29], "car": 167, "care": [150, 153], "caret": 39, "cart": 39, "cartesian": 153, "case": [117, 141, 208], "cast": 93, "catch": [49, 71], "categor": [192, 193], "cauchi": 153, "cell": [6, 109, 174, 179, 180, 205], "center": 153, "chain": [37, 116], "chang": [52, 53, 54, 55, 68, 69, 90, 143, 153, 156, 157, 165, 166, 169, 175, 176], "chapter": 141, "charact": [39, 52, 91], "chart": [145, 146], "chat": [116, 129], "chatbot": 117, "chdir": 69, "chebyshev": 30, "check": [24, 148, 153, 170, 177, 178], "checkerboard": 153, "choic": 24, "chroma": [132, 141], "chunk": 132, "cij": 153, "circl": 171, "class": [5, 7, 22, 37, 38, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 59, 64, 65, 68, 70, 71, 72, 74, 80, 84, 90, 95, 101, 102, 103, 105, 153, 171, 173, 177, 178], "class_nam": 178, "classif": [5, 7, 171], "classifi": 176, "claus": 71, "clean": [155, 167], "clear": [53, 55], "clock": 66, "close": 68, "closest": 153, "closur": [36, 37], "cloud": 132, "cluster": [10, 202], "cnn": 172, "code": [24, 25, 60, 61, 87, 98, 107, 111, 117, 172, 173, 176, 177, 186], "collect": [91, 178], "color": [153, 187, 201], "column": [153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167], "combin": [57, 138, 148, 153, 155, 173, 174, 177, 179, 180], "comma": 90, "command": [87, 153], "comment": [84, 89], "common": [52, 146, 153, 169], "compani": [139, 167], "compar": [153, 159, 172, 173, 178], "comparis": [80, 98], "comparison": [95, 104, 148], "compil": [53, 98], "complier": 54, "compon": [87, 116], "compos": 153, "comprehens": [53, 55, 57], "compress": 131, "comput": [7, 153, 169, 172], "con": 174, "concaten": [52, 167], "concept": [2, 24, 101, 208], "condit": [42, 57, 155, 166, 167], "confid": 153, "configur": 153, "confus": 172, "consecut": 153, "consid": [39, 153], "constant": [80, 90], "construct": [153, 173], "constructor": [101, 102, 106, 155, 156, 157], "consum": 153, "contain": [39, 153], "content": [25, 107, 111, 118, 170], "context": 117, "contextu": 131, "contigu": 153, "continu": [47, 48, 49], "control": [22, 42, 47, 48, 49, 50, 185], "conv2d": [172, 177], "convent": 90, "convers": [51, 91, 93, 155], "convert": [54, 153, 163], "convolut": 172, "cookbook": [116, 117], "coordin": 153, "copi": [53, 55, 148, 150, 153], "core": 208, "correspond": 153, "cosin": 30, "cost": [3, 4, 5, 7], "count": [53, 167, 196], "coupl": 130, "cours": 208, "cover": [153, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180], "cpu": 169, "cream": 146, "creat": [6, 35, 52, 53, 54, 55, 56, 57, 60, 66, 72, 80, 102, 109, 132, 141, 149, 153, 155, 156, 157, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 205], "creation": [155, 175], "credit": 138, "csv": [68, 155, 167], "ctime": 65, "cubehelix": 187, "current": [59, 62, 63, 69], "curriculum": 175, "curv": [173, 175, 177, 178], "custom": [34, 72, 139, 141, 143, 155, 157, 173, 175, 176, 177], "d": [39, 153], "dai": 59, "data": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 51, 58, 92, 97, 102, 117, 132, 135, 136, 141, 142, 143, 145, 146, 152, 155, 156, 157, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 191, 192, 201, 207], "data_setup": 174, "datafram": [155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "dataload": [172, 173, 174, 175, 176, 177, 178, 179, 180], "dataset": [9, 16, 17, 18, 19, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 184, 191, 196, 199], "datatyp": [24, 56, 149, 169], "date": [22, 59, 60, 62, 64, 67, 153], "datetim": [59, 60, 61, 63, 64], "deal": 173, "decim": [39, 51, 80], "decis": [14, 15, 42], "declar": 90, "decor": [37, 38], "deep": [0, 24, 169], "default": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 77, 80, 90, 95, 101], "defin": [36, 72, 74, 85, 102, 106, 156, 160, 161, 162], "definit": [3, 4, 5, 7], "degre": 153, "del": 159, "delet": [52, 53, 54, 68, 102, 159], "demo": [1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 178], "demystifi": 106, "densiti": 1, "depend": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "deploi": 178, "deploy": 178, "descend": [53, 54, 55], "descent": [4, 5, 11, 12, 13, 14, 15, 16, 17], "describ": [138, 153, 166], "descript": [3, 138, 141], "desir": 166, "detail": 167, "detect": [1, 8], "determin": [31, 151], "devic": [172, 173], "diagon": 153, "diari": 208, "dict": [53, 54, 55, 155, 156, 163], "dict2": 55, "dictionari": [47, 55, 68, 71, 92, 156, 163], "differ": [0, 35, 43, 44, 56, 59, 62, 63, 87, 98, 153, 176, 178, 179, 180], "digit": [9, 39, 66], "dimens": 153, "dimension": 153, "dir": 80, "direct": [108, 112], "directori": [69, 178], "disadvantag": 78, "discuss": 191, "disk": 146, "displai": [94, 146, 155, 173], "dissimilar": 30, "distanc": [30, 153], "distort": 3, "distplot": 191, "distribut": [1, 8, 153, 191], "dive": 24, "do": [36, 125, 133, 180], "doc": 132, "docstr": [74, 84, 89], "document": [116, 117, 128, 131, 132, 152, 153], "doe": [55, 172], "dollar": 39, "dot": [32, 153], "down": 87, "download": [176, 178], "draw": [14, 15, 153, 193, 199], "drop": [155, 159, 160, 161], "drop_dupl": 160, "dropna": 161, "dtype": 153, "duplic": [160, 161, 164], "durat": 59, "e": 153, "each": [146, 153, 167, 199], "easi": 35, "edit": 137, "editor": 24, "effici": 35, "effnetb2": 178, "einsum": 153, "either": [53, 54, 55], "eleg": 53, "element": [53, 54, 55, 56, 148, 153], "elif": 45, "els": [44, 45, 47, 48, 49, 71], "email": 139, "embed": [116, 117, 132, 177], "empti": 56, "encapsul": 101, "encod": 177, "end": [39, 53, 87], "engin": 208, "enjoi": 208, "ensembl": 131, "entir": 130, "enumer": [71, 153], "environ": 24, "equal": [55, 153], "equat": [4, 177], "equidist": 153, "equival": [39, 153], "error": [53, 70, 159, 162, 169], "escap": [39, 52], "essenti": [33, 170, 208], "estim": 1, "etc": [53, 169], "euclidian": 30, "evalu": [1, 117, 171, 172, 173, 174, 175, 179, 180], "even": 27, "everi": 153, "everytim": 106, "exampl": [6, 7, 27, 28, 29, 39, 46, 47, 48, 49, 59, 60, 61, 62, 63, 64, 66, 72, 76, 80, 87, 90, 95, 103, 109, 116, 117, 135, 136, 137, 138, 145, 163, 177, 178, 205], "except": [49, 70, 71, 72, 158], "exclud": 153, "exercis": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 80, 90, 95, 101, 146, 153, 167], "exist": 153, "expand": 141, "expens": 167, "experi": [172, 176, 178], "expert": [130, 135, 136, 207], "explicit": 93, "explicitli": 106, "explor": 177, "export": [155, 166], "express": [35, 124, 153, 162], "extend": 53, "extens": 68, "extra": [138, 170, 171, 172, 173, 174, 175, 176, 177, 178], "extract": [117, 135, 136, 141, 143, 153], "extractor": [176, 177, 178], "f": [39, 153], "face": [146, 178], "facetgrid": 200, "facewash": 146, "factor": 197, "fals": [53, 55], "faq": [48, 49], "fashion": 9, "faster": [153, 169, 178], "featur": [4, 176, 177, 178], "feedback": [135, 136], "feedforward": 7, "field": 136, "fifa": 145, "figur": 177, "file": [20, 22, 68, 69, 73, 108, 112, 152, 153, 167, 177, 178], "fill": 153, "filter": [37, 79, 155, 166], "final": 71, "financi": 137, "find": [8, 153, 167, 169, 175, 177], "findal": 39, "fing": 8, "first": [21, 53, 110, 113, 141, 153, 158, 159, 160, 167, 204], "fit": [8, 141, 171], "five": 167, "fix": 153, "flatten": [152, 177], "float": [51, 94, 153], "flow": [22, 42, 50], "flower": 9, "folder": [178, 180], "follow": [146, 153, 167], "food101": 178, "foodvis": 178, "forecast": 137, "form": [27, 173], "format": [52, 59, 60, 61, 62, 84, 94, 166, 201], "forward": [7, 173], "found": 141, "four": [153, 177], "fourier": 27, "fraction": 51, "frame": 167, "freez": [175, 176], "frequent": 153, "from": [53, 54, 55, 56, 59, 60, 80, 83, 94, 135, 136, 139, 142, 143, 152, 153, 155, 156, 157, 158, 159, 160, 161, 165, 167, 169, 171, 175, 177], "from_dict": 156, "fromkei": 55, "frozenset": 56, "fuction": 116, "function": [3, 4, 5, 7, 22, 27, 35, 36, 37, 47, 52, 53, 54, 55, 56, 57, 74, 76, 77, 78, 79, 80, 82, 84, 85, 86, 94, 103, 104, 116, 135, 137, 149, 151, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180], "fundament": [169, 170], "further": 172, "fusion": 138, "g": 153, "galleri": [120, 144], "game": 153, "gaussian": [1, 8, 153], "gener": [27, 35, 57, 116, 139, 152, 153, 187], "get": [24, 37, 53, 55, 59, 62, 63, 69, 94, 115, 132, 138, 141, 146, 153, 155, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "getcwd": 69, "getter": 38, "give": 55, "given": [53, 54, 55, 153, 167], "glanc": 2, "global": [75, 76], "gmtime": 65, "go": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "good": 208, "got": 180, "gpt": 137, "gpu": [169, 172], "gradient": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17], "gradio": 178, "graph": 145, "group": [39, 193], "groupbi": [155, 166], "h": 153, "ha": [153, 180], "ham": 30, "hand": [43, 44, 177], "handl": [59, 71], "handwritten": 9, "happen": 106, "happi": 9, "hard": 146, "have": 36, "head": [158, 176, 177], "header": 163, "heat": 201, "heatmap": 201, "hello": [71, 87, 135, 136], "help": [84, 89, 138, 174, 175], "helper": [173, 176], "here": [21, 52, 106, 110, 113, 204], "hidden": [17, 18, 19], "hide": 102, "hierarch": [103, 157], "higesht": 167, "high": 98, "higher": [36, 37], "histogram": [145, 146], "histori": 116, "hoc": 137, "hold": 24, "hour": 59, "how": [22, 52, 53, 56, 60, 61, 62, 74, 80, 87, 148, 153, 158, 173, 178], "hstack": 152, "html": 139, "hug": 178, "huggingfac": [114, 178], "hybrid": 103, "hypothesi": [4, 5], "i": [0, 20, 31, 32, 39, 47, 48, 52, 53, 54, 55, 56, 68, 74, 76, 78, 82, 96, 98, 106, 108, 112, 116, 117, 152, 153, 155, 161, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 191, 201, 202, 208], "iat": 158, "idea": [135, 136, 173], "ideal": 173, "ident": [31, 95, 153], "identifi": 88, "ignor": [52, 153], "illustr": [17, 18, 19], "iloc": 159, "imag": [153, 173, 175, 176, 177, 178], "imagefold": 173, "immut": 153, "implement": [7, 35, 153, 191], "implicit": 93, "import": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 80, 83, 94, 118, 148, 153, 155, 169, 173], "improv": 171, "includ": 176, "indent": 89, "index": [47, 53, 54, 116, 150, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169], "indexerror": 70, "indic": 153, "infer": 170, "inference_mod": 170, "infinit": [34, 35], "info": 155, "inform": [24, 169], "inherit": [101, 103], "init": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "initi": 7, "inlin": 89, "inner": 153, "inplac": 153, "input": [94, 129, 171, 172, 177, 178], "insert": [53, 155], "insid": [24, 47, 48, 59, 153], "inspect": [52, 155, 178], "instal": [24, 118, 148], "instanc": [57, 101, 102, 176], "instead": 51, "instruct": [116, 138], "int": 153, "integ": [94, 150, 153], "interact": [117, 137, 187], "interest": [135, 136], "interfac": [116, 178], "interleav": 153, "intermedi": [138, 207], "intern": 106, "interpret": [98, 153], "intersect": 56, "interv": 153, "interview": 143, "introduct": [0, 22, 24, 40, 100, 114, 118, 169], "invers": 31, "investor": [135, 136], "iri": [9, 199], "issubclass": 103, "item": [53, 54, 55, 153], "iter": [34, 42, 47, 48, 52, 53, 54, 55, 56, 153, 155], "itm": 55, "its": 94, "j": 153, "januari": 153, "java": 98, "job": [135, 136], "join": 155, "joint": 189, "jointplot": 191, "journei": 24, "json": 68, "jupyt": [1, 3, 4, 5, 7, 24], "just": 153, "justif": 94, "k": [3, 10, 132], "kdeplot": 191, "keep": [160, 164], "kei": [55, 57, 74, 93, 98, 101, 156, 163], "keyerror": 70, "keyword": [76, 77, 88, 103], "kind": 176, "kor": 136, "kwarg": 40, "label": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 80, 90, 95, 101, 158, 171], "lambda": [57, 79, 162], "langchain": [116, 117, 118, 119, 120, 124, 131, 137, 139, 144], "langgraph": 121, "langserv": 122, "langsmith": 123, "languag": [98, 116, 124, 126, 141], "larg": [116, 153, 166], "largest": 153, "last": [146, 153, 158, 159, 160, 167], "launch": 115, "layer": [17, 18, 19, 175, 176, 177], "layernorm": 177, "lead": 162, "learn": [0, 22, 23, 37, 169, 170, 175, 176, 177, 178, 207, 208], "least": 161, "len": [53, 54, 55], "length": [55, 77, 153, 156], "let": [87, 90, 191], "letter": 198, "level": [37, 39, 45, 47, 53, 54, 56, 64, 68, 71, 74, 80, 90, 98, 101, 130, 138, 162, 165, 207], "librari": [145, 149, 172], "life": [153, 178], "like": [101, 138, 153, 169, 173], "line": [43, 44, 47, 84, 87, 89, 90, 94, 145, 146, 153, 171], "linear": [4, 9, 11, 12, 13, 14, 15, 26, 31, 32, 170, 171, 172], "linspac": 152, "list": [24, 44, 45, 47, 48, 52, 53, 54, 55, 57, 60, 61, 69, 71, 74, 80, 92, 125, 136, 153, 156, 157, 162, 163, 164, 178], "listdir": 69, "liter": 91, "llm": [116, 128, 138, 141, 142], "lm": 188, "lmplot": 188, "ln": 177, "load": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 128, 131, 132, 139, 145, 149, 152, 166, 170, 172, 173, 176, 178, 184], "loader": 116, "loc": 159, "local": [60, 75, 132, 178], "localtim": 65, "logic": [45, 70, 95], "logist": [5, 7, 10, 14, 15, 16, 17], "logit": 171, "logspac": 152, "longer": 117, "look": [101, 173], "loop": [34, 35, 47, 48, 49, 57, 138, 139, 170, 171, 172, 173], "loss": [170, 171, 172, 173, 175, 177, 178], "lv": 198, "machin": [0, 23, 98, 176, 177, 178, 207], "made": 177, "magic": 139, "main": [117, 173, 175, 176, 177, 178], "make": [42, 69, 125, 153, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "manag": [24, 69], "manhattan": 30, "mani": [138, 149], "manipul": [148, 169], "manual": [175, 176], "map": [37, 79, 128, 130, 178, 201, 202], "mark": 39, "markdown": [6, 20, 25, 107, 108, 109, 111, 112, 205], "mask": 152, "match": [39, 53, 138], "math": [80, 82, 151], "mathemat": [23, 33, 51, 82, 148, 151], "matplotlib": [22, 145, 146, 147, 186], "matric": [31, 150, 153, 169], "matrix": [31, 151, 153, 169, 172], "max": [53, 54, 149, 169], "maximum": [53, 54, 153], "maxpool2d": 172, "mean": [3, 10, 153, 169], "measur": 30, "member": 103, "membership": [52, 53, 54, 55, 56, 95], "memori": [35, 116, 153], "merg": 167, "messag": [116, 129], "metacharact": 39, "metadata": [6, 109, 155, 205], "method": [39, 52, 53, 54, 55, 56, 68, 101, 103, 116, 138, 149, 153], "metric": [171, 172], "microchip": 9, "microsecond": 59, "mileag": 167, "mimic": 138, "min": [53, 54, 149, 169], "mini": 178, "minimum": [54, 153], "minkowski": 30, "minut": 59, "miscellan": 152, "miss": [161, 171, 177], "mkdir": 69, "mktime": 65, "ml": [0, 207], "mlp": [18, 19, 177], "mnist": 9, "mode": [135, 136, 174, 179, 180], "model": [5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 116, 135, 137, 141, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "model_1": 171, "model_2": 172, "model_build": 174, "modif": 155, "modifi": [56, 101, 102], "modul": [22, 63, 65, 67, 76, 80, 81, 82, 83, 84, 119, 154, 168, 169, 177], "modular": [174, 179, 180, 181, 182], "modulenotfounderror": 70, "month": [59, 146, 153], "more": [39, 52, 148, 171], "most": [146, 153, 167, 169], "move": [169, 178], "msa": 177, "mul": 153, "mulitpli": 153, "multi": [5, 7, 84, 89, 158, 159, 162, 164, 165, 171, 177], "multidimension": [28, 29], "multilay": [18, 19, 177], "multilevel": 103, "multilin": [94, 146], "multinomi": 153, "multipl": [31, 32, 71, 74, 80, 90, 94, 103, 130, 135, 136, 138, 151, 157, 159, 162, 164, 169], "multipli": 153, "multiqueri": 131, "multithread": 66, "multivari": [11, 16, 17], "mutli": 171, "my": [21, 110, 113, 174, 177, 204, 208], "myst": [6, 20, 25, 107, 108, 109, 111, 112, 205], "n": [39, 153, 158, 159], "na": 161, "name": [80, 90, 94, 96, 153, 157, 165, 167, 173, 178], "nameerror": 70, "namespac": 96, "natur": 126, "nearest": 153, "necessari": [145, 153], "need": [101, 169, 175], "neg": [53, 54, 59], "negat": 153, "nest": [36, 46, 47, 48, 49, 57, 76, 156], "network": [7, 18, 19, 171, 172, 206], "neural": [7, 18, 19, 171, 172, 206], "neuron": 7, "new": [53, 55, 69, 153, 165, 208], "nn": [172, 177], "non": [9, 12, 15, 39, 153, 171, 172], "nonloc": [36, 75], "normal": [1, 4, 35, 153], "notat": [28, 29], "note": 174, "notebook": [6, 24, 25, 107, 109, 111, 174, 179, 180, 205], "novic": 130, "np": 153, "nth": 153, "null": 153, "number": [48, 51, 53, 54, 55, 57, 91, 92, 94, 149, 152, 153, 161, 164, 165], "numer": [91, 153], "numpi": [22, 148, 149, 152, 153, 154, 169], "nut": 116, "o": [68, 80], "object": [22, 39, 59, 61, 63, 68, 98, 101, 102, 105, 155], "observ": 193, "old": [52, 164], "onc": 153, "one": [39, 43, 47, 90, 94, 153, 161, 163, 172, 173], "ones": 169, "onli": [94, 153, 156], "oop": 101, "open": [68, 135, 136], "openai": [116, 125, 137], "oper": [9, 31, 32, 45, 52, 53, 54, 55, 56, 80, 95, 104, 148, 151, 169], "opposit": 39, "optim": [170, 171, 172, 177], "option": [132, 141, 155, 173], "order": [36, 37, 53, 54, 55, 103, 153], "orient": 101, "orthogon": 32, "other": [53, 54, 55, 56, 120, 165, 173], "otherwis": [53, 54], "our": [131, 166, 171, 172, 173, 175, 176, 177, 178], "outer": [49, 153], "outlier": 8, "outlin": 178, "output": [25, 94, 101, 107, 111, 116, 129, 141, 153, 171, 172, 175, 177, 178], "over": [54, 153], "overfit": [4, 5, 173], "overload": 104, "overrid": [101, 103], "overview": [177, 178], "p": 153, "p0": 153, "p1": 153, "pack": 71, "packag": [24, 83, 84, 118, 153], "pad": 153, "page": [130, 139], "pair": 55, "pairgrid": 199, "pairplot": 191, "pairwis": 199, "palett": 187, "panda": [22, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "paper": 177, "paragraph": 130, "parallel": 32, "paramet": [1, 4, 9, 36, 37, 74, 77, 102, 155, 163, 176], "parent": [101, 103, 131], "pars": 116, "parser": 116, "part": [117, 153, 174, 179, 180, 196, 199], "pass": [47, 48, 49, 53, 55, 74, 138, 141, 173], "patch": 177, "path": [80, 153, 207], "pattern": [39, 47, 48, 153], "per": [141, 167], "percentil": 153, "perceptron": [17, 18, 19, 177], "perform": [172, 178], "period": 39, "person": [139, 142], "persona": [135, 136], "perspect": 171, "pi": 28, "pie": [145, 146], "piec": 171, "pinecon": [132, 141], "pipelin": 35, "place": [153, 159, 160, 161, 162, 164, 165], "placehold": 148, "plot": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 145, 146, 173, 175, 177, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198], "plu": 39, "point": [57, 63, 93, 94, 101, 153, 196], "polar": 153, "polymorph": 101, "polynomi": 4, "pop": [53, 159], "posit": [68, 77, 94, 153, 158, 159, 162, 169, 177], "power": 153, "practic": 94, "precis": [8, 14, 15, 16, 17, 18, 19], "predict": [11, 12, 13, 16, 17, 18, 19, 170, 171, 172, 173, 175, 176, 177, 178], "prefix": [39, 162], "prepar": [15, 170, 171, 172, 173, 177], "prepara": [10, 14], "prerequisit": 37, "pretrain": [175, 176, 177], "price": 167, "print": [16, 17, 47, 48, 59, 87, 94, 153, 155, 167], "printabl": 55, "privat": 103, "pro": 174, "probabl": 171, "problem": [4, 5, 94, 171], "process": [52, 138], "produc": [55, 153], "product": [28, 32, 146, 153], "profit": 146, "program": [22, 66, 71, 87, 98, 101, 153], "progress": [8, 11, 12, 13, 14, 15, 16, 17], "project": [120, 144], "prompt": [116, 129, 130, 139, 141, 143], "promptless": 143, "propag": 7, "properti": [28, 29, 31, 38, 102, 146], "provid": 149, "pull": 142, "put": [169, 170, 171, 173, 177], "py": [174, 178], "pydant": 135, "python": [22, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 146, 147, 148, 149, 153, 154, 155, 156, 157, 163, 164, 166, 167, 168, 174, 178, 180, 203], "python3": 53, "pytorch": [169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183], "q": [117, 128], "quantifi": 39, "queri": [117, 131, 132], "question": [39, 117, 132, 146], "quickli": [6, 109, 205], "quiz": 150, "r": [39, 153], "rais": [71, 162], "rand": 149, "randint": 149, "randn": 149, "random": [7, 80, 81, 149, 152, 153, 169, 172, 173], "randomli": 153, "rang": [47, 146, 153, 159, 164, 165, 169], "rank": [128, 153], "raw": [52, 171], "re": [39, 128, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180], "read": [68, 146, 153, 166], "readi": [132, 171], "real": [135, 136, 145, 153, 208], "recal": 8, "recommend": 153, "record": 153, "recreat": 171, "recurs": 78, "red": 171, "reduc": [79, 128, 130], "refer": [1, 3, 4, 5, 7], "refin": 128, "reg": 188, "regardless": 153, "regex": 39, "regplot": 188, "regress": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 190], "regular": [4, 5, 153], "reinforc": 0, "relat": [52, 95], "relationship": 199, "reload": 80, "rememb": [40, 57, 88, 93, 101], "remov": [53, 55, 56, 69, 148, 162], "renam": [69, 80, 155, 162], "reorgan": 152, "repeat": [139, 153], "replac": 153, "repli": 127, "replic": [52, 171, 173, 177], "report": 9, "repres": [35, 59, 63, 153], "represent": [55, 130, 153], "requir": [156, 178, 206], "resampl": 153, "research": [142, 177], "reset": [160, 161, 165], "reset_index": 165, "reshap": [152, 169], "residplot": 190, "resolut": 103, "resourc": [22, 147, 154, 168, 171, 172, 173, 174, 176, 178, 183, 203], "respons": 117, "result": [10, 16, 17, 135, 153, 172, 173, 176, 178], "retriev": [116, 131], "return": [36, 53, 54, 55, 74], "revers": [47, 48, 53, 153], "rins": 139, "rmdir": 69, "role": [108, 112], "round": 153, "row": [153, 156, 157, 158, 161, 163, 167], "rsourc": 177, "rugplot": 191, "rule": [76, 88, 90], "run": [87, 141, 169, 176, 178, 179], "salari": 136, "sale": 146, "same": [53, 54, 153, 177], "sampl": [21, 108, 110, 112, 113, 153, 204], "save": [68, 146, 166, 170, 172, 174, 177, 178, 179, 180], "scalar": [31, 32, 153, 169], "scale": 4, "scatter": [146, 189], "scatterplot": 199, "schema": [116, 117], "scienc": 207, "scope": 96, "script": [84, 153, 174, 178, 179, 180, 182], "seaborn": [184, 185, 186, 187, 188, 192, 193, 194, 195, 203], "search": [39, 80, 132], "second": [59, 153], "section": [21, 110, 113, 204], "see": [90, 146, 171], "seed": [169, 176], "segment": 153, "select": [8, 153, 155, 158, 169], "selector": 116, "self": [102, 106, 131, 177], "semant": 132, "semicolon": 90, "sentenc": 130, "separ": 97, "seq": [54, 55], "sequenc": [39, 52, 97], "sequenti": [116, 187], "seri": [27, 155, 163, 164, 176, 198], "serp": 125, "server": 9, "servic": [135, 136], "set": [5, 7, 11, 16, 17, 18, 19, 47, 55, 56, 92, 141, 153, 158, 164, 170, 173, 175, 176, 177], "set_axi": 162, "set_index": 164, "setdefault": 55, "setter": 38, "setup": [171, 172, 175, 176, 177, 178], "shallow": [53, 55], "shape": [153, 169, 171, 172, 173, 177], "share": [76, 153], "shift": 153, "short": [43, 44, 117, 141], "shortcut": [43, 44], "should": [53, 54, 101, 153, 172, 173, 175, 176], "show": 146, "sigma": 29, "sign": [94, 153], "signific": 169, "silicon": 169, "similar": [55, 98, 132], "simpl": [116, 117, 129, 138], "singl": [74, 84, 89, 103, 156, 159, 162, 173, 177], "sixth": 153, "size": [153, 177, 178], "sleep": [65, 66], "slice": [52, 53, 54, 148], "slide": 153, "small": 153, "smaller": 132, "soap": 146, "solut": [4, 5], "some": 191, "sort": [53, 54, 55, 148, 153, 155, 166, 167], "sourc": 134, "space": [162, 178], "span": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 80, 90, 95, 101], "special": [39, 91, 95, 104], "specif": [24, 53, 54, 55, 71, 158, 177], "specifi": [39, 53, 94, 138], "speed": [172, 178], "split": [11, 13, 16, 17, 18, 19, 39, 170, 171, 177], "splitter": 116, "spread": 71, "squar": 39, "squeez": 169, "stack": [146, 169], "stai": 106, "star": 39, "start": [24, 39, 165], "stat": 178, "state_dict": 170, "statement": [42, 43, 44, 45, 46, 47, 48, 49, 57, 71, 74, 80, 89], "statist": [80, 148, 152, 155, 166], "step": [98, 141, 172], "still": 129, "store": [178, 180], "str": 55, "straight": 171, "stream": [35, 129], "strftime": [59, 60, 65], "string": [24, 39, 47, 48, 52, 53, 55, 57, 59, 60, 61, 80, 84, 91, 92, 94, 116], "strip": 193, "strptime": [59, 61, 65], "struct_tim": 65, "structur": [97, 116, 135, 136, 141, 153, 178, 208], "stuff": 128, "style": [52, 146], "sub": 39, "subclass": 153, "subn": 39, "subpart": 153, "subplot": 146, "subsequ": 153, "subset": [13, 148, 153, 178], "subtract": [31, 32, 153], "suffix": 162, "suit": 175, "sum": [153, 169], "summar": [116, 117, 128, 130, 142], "summari": [39, 52, 53, 54, 55, 56, 117, 150, 155, 175, 177], "summarywrit": 176, "summat": 29, "super": 103, "supervis": 0, "support": [52, 137], "suppress": 159, "swap": 153, "swarm": [192, 193], "sy": 80, "symmetr": 56, "syntax": [43, 44, 45, 46, 47, 48, 57, 70], "system": 0, "t": 39, "tabl": [118, 177], "tabular": 117, "tail": 158, "takeawai": [173, 175, 176, 177, 178], "target": 208, "technic": 208, "techniqu": 138, "tell": 153, "templat": [116, 129, 130, 139], "tensor": [169, 171], "tensorboard": 176, "terminologi": 177, "test": [9, 11, 13, 16, 17, 18, 19, 53, 54, 55, 56, 155, 170, 171, 172, 173, 175, 178], "test_step": [173, 174, 179, 180], "text": [94, 116, 117, 130, 131, 135, 136, 141], "than": [56, 153], "thei": 153, "them": [116, 153, 174, 178, 179, 180], "thi": [53, 55, 101, 138, 146, 169, 179, 180], "thing": [40, 88, 125, 171, 174], "those": 132, "threshold": 8, "through": [34, 52, 53, 54, 55, 56, 138, 139, 141, 172, 173], "throw": [53, 54], "tile": 153, "time": [22, 39, 53, 59, 60, 62, 63, 64, 65, 66, 67, 150, 153, 172, 178, 198], "timedelata": 63, "timedelta": 59, "timestamp": [59, 60, 64, 141], "timezon": [59, 63], "tinyvgg": [173, 179, 180], "tip": [196, 199], "titan": 196, "titl": [21, 110, 113, 141, 204], "to_dict": 163, "todai": [59, 62, 153], "togeth": [170, 171, 173, 177], "token": 177, "tomorrow": 153, "tone": 138, "tool": [115, 116, 125, 206], "toolbox": 208, "toolkit": 116, "toothpast": 146, "top": [132, 158, 193], "topic": [22, 41, 89, 120, 141, 207], "torch": [170, 177], "torchinfo": [173, 175], "torchvis": [173, 175, 177], "total": [55, 146, 153, 167], "toward": 174, "toyota": 167, "track": 176, "tradeoff": [172, 178], "trail": 162, "train": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "train_step": [173, 174, 179, 180], "transcript": 143, "transfer": [42, 175], "transform": [173, 175, 176, 177, 178], "transpos": 31, "triangl": 153, "tricki": 56, "triplet": 153, "true": [53, 55, 153], "try": [71, 173], "tupl": [47, 53, 54, 55, 71, 92], "turn": [141, 171, 173, 177, 178], "tutori": [24, 137], "tweet": 138, "twitter": [127, 138, 142], "two": [52, 59, 63, 74, 153, 164, 167, 174], "txt": [68, 178], "type": [0, 22, 51, 53, 54, 55, 58, 68, 74, 91, 92, 93, 94, 102, 103, 149, 153, 156, 157, 178], "typeerror": [54, 70], "typic": 0, "u": [90, 191], "ubyt": 153, "under": 153, "underfit": 173, "underscor": 39, "understand": 117, "unequ": 153, "unicod": 91, "union": 56, "uniqu": 153, "unit": [7, 32], "univari": 13, "univers": 151, "unknown": 130, "unpack": [71, 97], "unsqueez": 169, "unsupervis": 0, "untidi": 201, "up": [80, 131, 132, 139, 141, 173, 175, 176, 177], "upcom": 24, "updat": [55, 167, 176], "upload": 178, "us": [1, 8, 24, 35, 36, 38, 39, 47, 48, 51, 53, 54, 59, 60, 63, 71, 76, 79, 80, 84, 90, 94, 101, 106, 116, 117, 118, 126, 135, 136, 141, 142, 146, 148, 153, 156, 157, 158, 159, 162, 163, 164, 167, 169, 170, 172, 173, 175, 176, 177, 178, 208], "user": [72, 85, 94, 135, 136, 138, 156], "util": 174, "v": [5, 39, 57, 84, 98, 156, 159, 174, 178, 186], "valid": 90, "valu": [36, 53, 54, 55, 74, 90, 94, 101, 153, 156, 158, 161, 163, 198], "valueerror": [61, 70], "vanilla": [117, 137], "variabl": [4, 36, 55, 75, 76, 77, 90, 96, 97, 101, 156, 193], "variou": 94, "vector": [7, 32, 130, 153, 169], "vectorstor": 116, "versa": 64, "version": [148, 153], "vertic": [153, 191], "vice": 64, "video": 143, "view": [155, 176], "violin": [193, 195], "violinplot": 196, "virtual": 24, "vision": 172, "visual": [8, 172, 173, 177, 178, 191], "vit": [177, 178], "vstack": 152, "w": [39, 153], "wai": [39, 53, 176, 178], "want": [57, 174], "warn": 153, "we": [24, 36, 54, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180], "websit": 142, "welcom": 208, "what": [0, 20, 31, 32, 47, 48, 52, 53, 54, 55, 56, 59, 74, 76, 78, 79, 80, 82, 83, 85, 96, 98, 106, 108, 112, 116, 117, 152, 153, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 191, 201, 202], "when": [36, 48, 51, 53, 55, 150, 153], "where": [39, 156, 161, 172, 174, 175, 177, 178], "which": [53, 153, 175], "while": [47, 48, 49, 94, 155, 162], "whisker": 145, "whitespac": 39, "who": 169, "whose": 153, "why": [0, 22, 47, 48, 54, 103, 106, 116, 117, 148, 169, 174, 175, 176, 177, 178], "wich": 153, "wide": 201, "widget": 187, "width": 94, "wild": [174, 180], "window": 153, "without": [38, 74, 153, 163, 165, 173], "wolfram": 125, "word": 39, "work": [34, 52, 60, 61, 116, 129, 136, 166, 174, 206], "workflow": [0, 170, 174, 177], "world": [9, 71, 87, 135, 136, 145, 208], "would": [55, 138, 174], "wrap": 80, "write": [68, 71, 87, 88, 139, 153], "writer": 176, "x": [9, 153], "xi": 153, "xlsx": 68, "xml": 68, "y": [9, 153], "yaml": [6, 109, 205], "year": [59, 146], "yesterdai": 153, "yj": 153, "you": [57, 101, 125, 138, 141, 169, 174, 175, 176, 177], "your": [24, 116, 128, 132, 138, 139, 141, 146], "youtub": 142, "z": [39, 153], "z0": 39, "za": 39, "zapier": 126, "zero": [39, 153, 169], "zip": 71}})