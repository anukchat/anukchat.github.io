Search.setIndex({"alltitles": {"0. Computer vision libraries in PyTorch": [[174, "computer-vision-libraries-in-pytorch"]], "0. Simple Input/Output Still works": [[131, "simple-input-output-still-works"]], "0.10.0 (2016-03-14)": [[118, "id10"]], "0.11.0 (2016-06-30)": [[118, "id9"]], "0.11.1 (2016-07-27)": [[118, "id8"]], "0.12.0 (2016-09-14)": [[118, "id7"]], "0.13.0 (2016-11-01)": [[118, "id6"]], "0.14.0 (2016-11-04)": [[118, "id5"]], "0.15.0 (2017-02-20)": [[118, "id4"]], "0.15.1 (2017-07-19)": [[118, "id3"]], "0.16.0 (2017-12-18)": [[118, "id2"]], "0.17.0 (2018-08-20)": [[118, "id1"]], "0.3.0 (2014-08-24)": [[118, "id23"]], "0.3.2 (2014-09-12)": [[118, "id22"]], "0.3.3 (2014-10-22)": [[118, "id21"]], "0.4.0 (2014-10-31)": [[118, "id20"]], "0.5.0 (2015-02-04)": [[118, "id19"]], "0.6.0 (2015-07-20)": [[118, "id18"]], "0.6.1 (2015-08-07)": [[118, "id17"]], "0.6.2 (2015-09-03)": [[118, "id16"]], "0.7.0 (2015-10-02)": [[118, "id15"]], "0.8.0 (2015-11-16)": [[118, "id14"]], "0.8.1 (2016-01-25)": [[118, "id13"]], "0.8.2 (2016-02-26)": [[118, "id12"]], "0.9.0 (2016-03-07)": [[118, "id11"]], "05. PyTorch Going Modular": [[183, "pytorch-going-modular"]], "1 distplot()": [[193, "distplot"]], "1. Arithmatic Operators": [[95, "arithmatic-operators"]], "1. Bar Plot": [[198, "bar-plot"]], "1. Basic Operators for concatenation of two or more strings": [[52, "basic-operators-for-concatenation-of-two-or-more-strings"]], "1. Changing a Tuple": [[54, "changing-a-tuple"]], "1. Chat Messages": [[131, "chat-messages"]], "1. Dictionary Membership Test": [[55, "dictionary-membership-test"]], "1. Docstrings for Python Modules": [[84, "docstrings-for-python-modules"]], "1. Easy to Implement": [[35, "easy-to-implement"]], "1. Getting a GPU": [[171, "getting-a-gpu"]], "1. Identity operators": [[95, "identity-operators"]], "1. Implicit Type Conversion": [[93, "implicit-type-conversion"]], "1. Import the numpy package under the name np and print the numpy version and the configuration (\u2605\u2606\u2606)": [[155, "import-the-numpy-package-under-the-name-np-and-print-the-numpy-version-and-the-configuration"]], "1. Indexing": [[54, "indexing"]], "1. List Membership Test": [[53, "list-membership-test"]], "1. Numeric Literals": [[91, "numeric-literals"]], "1. Opening Files in Python": [[68, "opening-files-in-python"]], "1. Python Keywords": [[88, "python-keywords"]], "1. Python Numbers": [[92, "python-numbers"]], "1. Python Output Using print() function": [[94, "python-output-using-print-function"]], "1. Python Statement": [[89, "python-statement"]], "1. Python Syntax Errors": [[70, "python-syntax-errors"]], "1. Python Variables": [[90, "python-variables"]], "1. Python break statement": [[49, "python-break-statement"]], "1. Set Membership Test": [[56, "set-membership-test"]], "1. Simple Sequential Chains": [[116, "simple-sequential-chains"]], "1. Single lined comment:": [[89, "single-lined-comment"]], "1. Strip Plot": [[195, "strip-plot"]], "1. Supervised Learning \ud83c\udf93": [[0, "supervised-learning"]], "1. Tuple Membership Test": [[54, "tuple-membership-test"]], "1. [] - Square brackets": [[39, "square-brackets"]], "1. break Statement in Nested Loop": [[49, "break-statement-in-nested-loop"]], "1. continue Statement in Nested Loop": [[49, "continue-statement-in-nested-loop"]], "1. match.group()": [[39, "match-group"]], "1. re.findall()": [[39, "re-findall"]], "10. () - Group": [[39, "group"]], "10. Creating FoodVision Big": [[180, "creating-foodvision-big"]], "10. Find indices of non-zero elements from [3,7,0,0,9,0] (\u2605\u2606\u2606)": [[155, "find-indices-of-non-zero-elements-from-3-7-0-0-9-0"]], "10.2 Getting data for FoodVision Big": [[180, "getting-data-for-foodvision-big"]], "10.3 Creating a subset of the Food101 dataset for faster experimenting": [[180, "creating-a-subset-of-the-food101-dataset-for-faster-experimenting"]], "10.4 Turning our Food101 datasets into DataLoaders": [[180, "turning-our-food101-datasets-into-dataloaders"]], "10.5 Training FoodVision Big model": [[180, "training-foodvision-big-model"]], "10.6 Inspecting loss curves of FoodVision Big model": [[180, "inspecting-loss-curves-of-foodvision-big-model"]], "10.7 Saving and loading FoodVision Big": [[180, "saving-and-loading-foodvision-big"]], "10.8 Checking FoodVision Big model size": [[180, "checking-foodvision-big-model-size"]], "100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (\u2605\u2605\u2605)": [[155, "compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1d-array-x-i-e-resample-the-elements-of-an-array-with-replacement-n-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means"]], "11. Create a 4x4 identity matrix (\u2605\u2606\u2606)": [[155, "create-a-4x4-identity-matrix"]], "11. Turning our FoodVision Big model into a deployable app": [[180, "turning-our-foodvision-big-model-into-a-deployable-app"]], "11. \\ - Backslash": [[39, "backslash"]], "11.1 Downloading an example image and moving it to the examples directory": [[180, "downloading-an-example-image-and-moving-it-to-the-examples-directory"]], "11.2 Saving Food101 class names to file (class_names.txt)": [[180, "saving-food101-class-names-to-file-class-names-txt"]], "11.3 Turning our FoodVision Big model into a Python script (model.py)": [[180, "turning-our-foodvision-big-model-into-a-python-script-model-py"]], "11.4 Turning our FoodVision Big Gradio app into a Python script (app.py)": [[180, "turning-our-foodvision-big-gradio-app-into-a-python-script-app-py"]], "11.5 Creating a requirements file for FoodVision Big (requirements.txt)": [[180, "creating-a-requirements-file-for-foodvision-big-requirements-txt"]], "11.6 Downloading our FoodVision Big app files": [[180, "downloading-our-foodvision-big-app-files"]], "11.7 Deploying our FoodVision Big app to HuggingFace Spaces": [[180, "deploying-our-foodvision-big-app-to-huggingface-spaces"]], "12. Create a 2x2x2 array with random values (\u2605\u2606\u2606)": [[155, "create-a-2x2x2-array-with-random-values"]], "13. Create a 9x9 array with random values and find the minimum and maximum values (\u2605\u2606\u2606)": [[155, "create-a-9x9-array-with-random-values-and-find-the-minimum-and-maximum-values"]], "15. Create a 2d array with 1 on the border and 0 inside (\u2605\u2606\u2606)": [[155, "create-a-2d-array-with-1-on-the-border-and-0-inside"]], "16. How to add a border (filled with 0\u2019s) around an existing array? (\u2605\u2606\u2606)": [[155, "how-to-add-a-border-filled-with-0s-around-an-existing-array"]], "17. What is the result of the following expression? (\u2605\u2606\u2606)": [[155, "what-is-the-result-of-the-following-expression"]], "18. Create a 6x6 matrix with values 1,2,3,4 just below the diagonal (\u2605\u2606\u2606)": [[155, "create-a-6x6-matrix-with-values-1-2-3-4-just-below-the-diagonal"]], "19. Create a 6x6 matrix and fill it with a checkerboard pattern (\u2605\u2606\u2606)": [[155, "create-a-6x6-matrix-and-fill-it-with-a-checkerboard-pattern"]], "2 jointplot()": [[193, "jointplot"]], "2. . - Period": [[39, "period"]], "2. Closing Files in Python": [[68, "closing-files-in-python"]], "2. Comparison/Relational operators": [[95, "comparison-relational-operators"]], "2. Constants": [[90, "constants"]], "2. Convert a list of numeric value into a one-dimensional NumPy array (\u2605\u2606\u2606)": [[155, "convert-a-list-of-numeric-value-into-a-one-dimensional-numpy-array"]], "2. Deleting a Tuple": [[54, "deleting-a-tuple"]], "2. Docstrings for Python Functions": [[84, "docstrings-for-python-functions"]], "2. Explicit Type Conversion": [[93, "explicit-type-conversion"]], "2. Getting PyTorch to run on the GPU": [[171, "getting-pytorch-to-run-on-the-gpu"]], "2. Inline comments": [[89, "inline-comments"]], "2. Iterating Through a Dictionary": [[55, "iterating-through-a-dictionary"]], "2. Iterating Through a List": [[53, "iterating-through-a-list"]], "2. Iterating Through a Set": [[56, "iterating-through-a-set"]], "2. Iterating Through a Tuple": [[54, "iterating-through-a-tuple"]], "2. Membership operators": [[95, "membership-operators"]], "2. Memory Efficient": [[35, "memory-efficient"]], "2. Negative Indexing": [[54, "negative-indexing"]], "2. Point Plot": [[198, "point-plot"]], "2. Python Identifiers": [[88, "python-identifiers"]], "2. Python Indentation": [[89, "python-indentation"]], "2. Python Input Using input() function": [[94, "python-input-using-input-function"]], "2. Python List []": [[92, "python-list"]], "2. Python Logical Errors (Exceptions)": [[70, "python-logical-errors-exceptions"]], "2. Python String Membership Operators": [[52, "python-string-membership-operators"]], "2. Python continue statement": [[49, "python-continue-statement"]], "2. SERP API": [[127, "serp-api"]], "2. String literals (unicode character strings)": [[91, "string-literals-unicode-character-strings"]], "2. Summarization Chain": [[116, "summarization-chain"]], "2. Unsupervised Learning \ud83e\udde9": [[0, "unsupervised-learning"]], "2. break Statement in Outer Loop": [[49, "break-statement-in-outer-loop"]], "2. continue Statement in Outer Loop": [[49, "continue-statement-in-outer-loop"]], "2. match.start(), match.end() and match.span()": [[39, "match-start-match-end-and-match-span"]], "2. re.split()": [[39, "re-split"]], "2.1 Getting PyTorch to run on Apple Silicon": [[171, "getting-pytorch-to-run-on-apple-silicon"]], "20. Consider a (8,9,10) shape array, what is the index (x,y,z) of the 100th element? (\u2605\u2606\u2606)": [[155, "consider-a-8-9-10-shape-array-what-is-the-index-x-y-z-of-the-100th-element"]], "21. Create a checkerboard 8x8 matrix using the tile function (\u2605\u2606\u2606)": [[155, "create-a-checkerboard-8x8-matrix-using-the-tile-function"]], "22. Normalize a 6x6 random matrix (\u2605\u2606\u2606)": [[155, "normalize-a-6x6-random-matrix"]], "23. find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements. (\u2605\u2606\u2606)": [[155, "find-the-number-of-elements-of-an-array-length-of-one-array-element-in-bytes-and-total-bytes-consumed-by-the-elements"]], "24. Multiply a 6x3 matrix by a 3x4 matrix (real matrix product) (\u2605\u2606\u2606)": [[155, "multiply-a-6x3-matrix-by-a-3x4-matrix-real-matrix-product"]], "25. Given a 1D array, negate all elements which are between 3 and 8, in place. (\u2605\u2606\u2606)": [[155, "given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place"]], "26. What is the output of the following script? (\u2605\u2606\u2606)": [[155, "what-is-the-output-of-the-following-script"]], "27. Write a Python program compare two arrays using numpy (\u2605\u2606\u2606)": [[155, "write-a-python-program-compare-two-arrays-using-numpy"]], "28. What are the result of the following expressions? (\u2605\u2606\u2606)": [[155, "what-are-the-result-of-the-following-expressions"]], "29. How to round away from zero a float array ? (\u2605\u2606\u2606)": [[155, "how-to-round-away-from-zero-a-float-array"]], "3 pairplot()": [[193, "pairplot"]], "3. Boolean literals": [[91, "boolean-literals"]], "3. Count Plot": [[198, "count-plot"]], "3. Create a null vector of size 9 (\u2605\u2606\u2606)": [[155, "create-a-null-vector-of-size-9"]], "3. Deep Learning \ud83e\udde0": [[0, "deep-learning"]], "3. Docstrings for Python Classes": [[84, "docstrings-for-python-classes"]], "3. Logical/Boolean operators": [[95, "logical-boolean-operators"]], "3. Multi lined comment:": [[89, "multi-lined-comment"]], "3. Other List Operations in Python": [[53, "id1"]], "3. Putting tensors (and models) on the GPU": [[171, "putting-tensors-and-models-on-the-gpu"]], "3. Python Comments": [[89, "python-comments"]], "3. Python Import function": [[94, "python-import-function"]], "3. Python NameError": [[70, "python-nameerror"]], "3. Python Relational Operators": [[52, "python-relational-operators"]], "3. Python Tuple ()": [[92, "python-tuple"]], "3. Python pass statement": [[49, "python-pass-statement"]], "3. Represent Infinite Stream": [[35, "represent-infinite-stream"]], "3. Slicing": [[54, "slicing"]], "3. Wolfram Alpha": [[127, "wolfram-alpha"]], "3. Writing to Files in Python": [[68, "writing-to-files-in-python"]], "3. ^ - Caret": [[39, "caret"]], "3. match.re and match.string": [[39, "match-re-and-match-string"]], "3. re.sub()": [[39, "re-sub"]], "3.2.2 Exploring the Four Equations": [[179, "exploring-the-four-equations"]], "3.3 Creating a training loop and training a model on batches of data": [[174, "creating-a-training-loop-and-training-a-model-on-batches-of-data"]], "30. How to find common values between two arrays? (\u2605\u2606\u2606)": [[155, "how-to-find-common-values-between-two-arrays"]], "31. How to ignore all numpy warnings (not recommended)? (\u2605\u2606\u2606)": [[155, "how-to-ignore-all-numpy-warnings-not-recommended"]], "32. Is the following expressions true? (\u2605\u2606\u2606)": [[155, "is-the-following-expressions-true"]], "33. How to get the dates of yesterday, today and tomorrow? (\u2605\u2606\u2606)": [[155, "how-to-get-the-dates-of-yesterday-today-and-tomorrow"]], "34. How to get all the dates corresponding to the month of January 2016? (\u2605\u2605\u2606)": [[155, "how-to-get-all-the-dates-corresponding-to-the-month-of-january-2016"]], "35. How to compute ((A+B)*(-A/2)) in place (without copy)? (\u2605\u2605\u2606)": [[155, "how-to-compute-a-b-a-2-in-place-without-copy"]], "36. Extract the integer part of a random array of positive numbers using 4 different methods (\u2605\u2605\u2606)": [[155, "extract-the-integer-part-of-a-random-array-of-positive-numbers-using-4-different-methods"]], "37. Create a 3x3 matrix with row values ranging from 0 to 2 (\u2605\u2605\u2606)": [[155, "create-a-3x3-matrix-with-row-values-ranging-from-0-to-2"]], "38. Consider a generator function that generates 9 integers and use it to build an array (\u2605\u2606\u2606)": [[155, "consider-a-generator-function-that-generates-9-integers-and-use-it-to-build-an-array"]], "39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (\u2605\u2605\u2606)": [[155, "create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded"]], "4 Levels Of Tone Matching Techniques:": [[140, "levels-of-tone-matching-techniques"]], "4 rugplot()": [[193, "rugplot"]], "4. $ - Dollar": [[39, "dollar"]], "4. Bitwise operators": [[95, "bitwise-operators"]], "4. Docstrings for Python Scripts": [[84, "docstrings-for-python-scripts"]], "4. Docstrings in Python": [[89, "docstrings-in-python"]], "4. How to find the memory size of any array (\u2605\u2606\u2606)": [[155, "how-to-find-the-memory-size-of-any-array"]], "4. Moving tensors back to the CPU": [[171, "moving-tensors-back-to-the-cpu"]], "4. Pipelining Generators": [[35, "pipelining-generators"]], "4. Python IndexError": [[70, "python-indexerror"]], "4. Python Strings": [[92, "python-strings"]], "4. Reading Files in Python": [[68, "reading-files-in-python"]], "4. Reinforcement Learning \ud83c\udfae": [[0, "reinforcement-learning"]], "4. re.subn()": [[39, "re-subn"]], "40. Create a random vector of size 10 and sort it (\u2605\u2605\u2606)": [[155, "create-a-random-vector-of-size-10-and-sort-it"]], "41. How to sum a small array faster than np.sum? (\u2605\u2605\u2606)": [[155, "how-to-sum-a-small-array-faster-than-np-sum"]], "42. Consider two random array A and B, check if they are equal (\u2605\u2605\u2606)": [[155, "consider-two-random-array-a-and-b-check-if-they-are-equal"]], "43. Make an array immutable (read-only) (\u2605\u2605\u2606)": [[155, "make-an-array-immutable-read-only"]], "44. Consider a random 5x2 matrix representing cartesian coordinates, convert them to polar coordinates (\u2605\u2605\u2606)": [[155, "consider-a-random-5x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates"]], "45. Create random vector of size 5 and replace the maximum value by 0 (\u2605\u2605\u2606)": [[155, "create-random-vector-of-size-5-and-replace-the-maximum-value-by-0"]], "46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (\u2605\u2605\u2606)": [[155, "create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area"]], "47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj)) (\u2605\u2605\u2606)": [[155, "given-two-arrays-x-and-y-construct-the-cauchy-matrix-c-cij-1-xi-yj"]], "48. Print the minimum and maximum representable value for each numpy scalar type (\u2605\u2605\u2606)": [[155, "print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type"]], "49. How to print all the values of an array? (\u2605\u2605\u2606)": [[155, "how-to-print-all-the-values-of-an-array"]], "5 Levels Of Summarization: Novice to Expert": [[132, "levels-of-summarization-novice-to-expert"]], "5 kdeplot()": [[193, "kdeplot"]], "5. * - Star": [[39, "star"]], "5. Assignment operators": [[95, "assignment-operators"]], "5. Docstrings for Python Packages": [[84, "docstrings-for-python-packages"]], "5. How to get the documentation of the numpy add function from the command line? (\u2605\u2606\u2606)": [[155, "how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line"]], "5. Python ModuleNotFoundError": [[70, "python-modulenotfounderror"]], "5. Python Set {}": [[92, "python-set"]], "5. re.search()": [[39, "re-search"]], "50. How to find the closest value (to a given scalar) in a vector? (\u2605\u2605\u2606)": [[155, "how-to-find-the-closest-value-to-a-given-scalar-in-a-vector"]], "51. Create a structured array representing a position (x,y) and a color (r,g,b) (\u2605\u2605\u2606)": [[155, "create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b"]], "52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (\u2605\u2605\u2606)": [[155, "consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances"]], "53. How to convert a float (32 bits) array into an integer (32 bits) in place?": [[155, "how-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"]], "54. How to read the following file? (\u2605\u2605\u2606)": [[155, "how-to-read-the-following-file"]], "55. What is the equivalent of enumerate for numpy arrays? (\u2605\u2605\u2606)": [[155, "what-is-the-equivalent-of-enumerate-for-numpy-arrays"]], "56. Generate a generic 2D Gaussian-like array (\u2605\u2605\u2606)": [[155, "generate-a-generic-2d-gaussian-like-array"]], "57. How to randomly place e elements in a 2D array? (\u2605\u2605\u2606)": [[155, "how-to-randomly-place-e-elements-in-a-2d-array"]], "58. Subtract the mean of each row of a matrix (\u2605\u2605\u2606)": [[155, "subtract-the-mean-of-each-row-of-a-matrix"]], "59. How to sort an array by the nth column? (\u2605\u2605\u2606)": [[155, "how-to-sort-an-array-by-the-nth-column"]], "6# 6# 14. Create a random vector of size 20 and find the mean value (\u2605\u2606\u2606)": [[155, "create-a-random-vector-of-size-20-and-find-the-mean-value"]], "6. + - Plus": [[39, "plus"]], "6. Create a null vector of size 12 but the sixth value which is 1 (\u2605\u2606\u2606)": [[155, "create-a-null-vector-of-size-12-but-the-sixth-value-which-is-1"]], "6. Python AttributeError": [[70, "python-attributeerror"]], "6. Python Dictionary {}": [[92, "python-dictionary"]], "6. Special operators": [[95, "special-operators"]], "60. How to tell if a given 2D array has null columns? (\u2605\u2605\u2606)": [[155, "how-to-tell-if-a-given-2d-array-has-null-columns"]], "61. Find the nearest value from a given value in an array (\u2605\u2605\u2606)": [[155, "find-the-nearest-value-from-a-given-value-in-an-array"]], "62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (\u2605\u2605\u2606)": [[155, "considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator"]], "63. Create an array class that has a name attribute (\u2605\u2605\u2606)": [[155, "create-an-array-class-that-has-a-name-attribute"]], "64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (\u2605\u2605\u2605)": [[155, "consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices"]], "65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (\u2605\u2605\u2605)": [[155, "how-to-accumulate-elements-of-a-vector-x-to-an-array-f-based-on-an-index-list-i"]], "66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (\u2605\u2605\u2606)": [[155, "considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors"]], "67. Considering a four dimensions array, how to get sum over the last two axis at once? (\u2605\u2605\u2605)": [[155, "considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once"]], "68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (\u2605\u2605\u2605)": [[155, "considering-a-one-dimensional-vector-d-how-to-compute-means-of-subsets-of-d-using-a-vector-s-of-same-size-describing-subset-indices"]], "69. How to get the diagonal of a dot product? (\u2605\u2605\u2605)": [[155, "how-to-get-the-diagonal-of-a-dot-product"]], "7. ? - Question Mark": [[39, "question-mark"]], "7. Create a vector with values ranging from 20 to 59 (\u2605\u2606\u2606)": [[155, "create-a-vector-with-values-ranging-from-20-to-59"]], "7. Python KeyError": [[70, "python-keyerror"]], "70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (\u2605\u2605\u2605)": [[155, "consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value"]], "71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (\u2605\u2605\u2605)": [[155, "consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5"]], "72. How to swap two rows of an array? (\u2605\u2605\u2605)": [[155, "how-to-swap-two-rows-of-an-array"]], "73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (\u2605\u2605\u2605)": [[155, "consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles"]], "74. Given a sorted array C that corresponds to a bincount, how to produce an array A such that np.bincount(A) == C? (\u2605\u2605\u2605)": [[155, "given-a-sorted-array-c-that-corresponds-to-a-bincount-how-to-produce-an-array-a-such-that-np-bincount-a-c"]], "75. How to compute averages using a sliding window over an array? (\u2605\u2605\u2605)": [[155, "how-to-compute-averages-using-a-sliding-window-over-an-array"]], "76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (\u2605\u2605\u2605)": [[155, "consider-a-one-dimensional-array-z-build-a-two-dimensional-array-whose-first-row-is-z-0-z-1-z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-z-3-z-2-z-1"]], "77. How to negate a boolean, or to change the sign of a float inplace? (\u2605\u2605\u2605)": [[155, "how-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace"]], "78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[155, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-p0-i-p1-i"]], "79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[155, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-set-of-points-p-how-to-compute-distance-from-each-point-j-p-j-to-each-line-i-p0-i-p1-i"]], "8. Python TypeError": [[70, "python-typeerror"]], "8. Reverse a vector (first element becomes last) (\u2605\u2606\u2606)": [[155, "reverse-a-vector-first-element-becomes-last"]], "8. {} - Braces": [[39, "braces"]], "80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (\u2605\u2605\u2605)": [[155, "consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary"]], "81. Consider an array a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], \u2026, [11,12,13,14]]? (\u2605\u2605\u2605)": [[155, "consider-an-array-a-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-b-1-2-3-4-2-3-4-5-3-4-5-6-11-12-13-14"]], "82. Compute a matrix rank (\u2605\u2605\u2605)": [[155, "compute-a-matrix-rank"]], "83. How to find the most frequent value in an array?": [[155, "how-to-find-the-most-frequent-value-in-an-array"]], "84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (\u2605\u2605\u2605)": [[155, "extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix"]], "85. Create a 2D array subclass such that a[i,j] == a[j,i] (\u2605\u2605\u2605)": [[155, "create-a-2d-array-subclass-such-that-a-i-j-a-j-i"]], "86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (\u2605\u2605\u2605)": [[155, "consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-how-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1"]], "87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (\u2605\u2605\u2605)": [[155, "consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4"]], "88. How to implement the Game of Life using numpy arrays? (\u2605\u2605\u2605)": [[155, "how-to-implement-the-game-of-life-using-numpy-arrays"]], "89. How to get the n largest values of an array (\u2605\u2605\u2605)": [[155, "how-to-get-the-n-largest-values-of-an-array"]], "9. Create a 3x3 matrix with values ranging from 12 to 20 (\u2605\u2606\u2606)": [[155, "create-a-3x3-matrix-with-values-ranging-from-12-to-20"]], "9. Python ValueError": [[70, "python-valueerror"]], "9. | - Alternation": [[39, "alternation"]], "9.1 Create transform with data augmentation": [[175, "create-transform-with-data-augmentation"]], "90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (\u2605\u2605\u2605)": [[155, "given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item"]], "91. How to create a record array from a regular array? (\u2605\u2605\u2605)": [[155, "how-to-create-a-record-array-from-a-regular-array"]], "92. Consider a large vector A, compute A to the power of 3 using 3 different methods (\u2605\u2605\u2605)": [[155, "consider-a-large-vector-a-compute-a-to-the-power-of-3-using-3-different-methods"]], "93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (\u2605\u2605\u2605)": [[155, "consider-two-arrays-a-and-b-of-shape-8-3-and-2-2-how-to-find-rows-of-a-that-contain-elements-of-each-row-of-b-regardless-of-the-order-of-the-elements-in-b"]], "94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (\u2605\u2605\u2605)": [[155, "considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3"]], "95. Convert a vector of ints into a matrix binary representation (\u2605\u2605\u2605)": [[155, "convert-a-vector-of-ints-into-a-matrix-binary-representation"]], "96. Given a two dimensional array, how to extract unique rows? (\u2605\u2605\u2605)": [[155, "given-a-two-dimensional-array-how-to-extract-unique-rows"]], "97. Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (\u2605\u2605\u2605)": [[155, "considering-2-vectors-a-b-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function"]], "98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (\u2605\u2605\u2605)?": [[155, "considering-a-path-described-by-two-vectors-x-y-how-to-sample-it-using-equidistant-samples"]], "99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (\u2605\u2605\u2605)": [[155, "given-an-integer-n-and-a-2d-array-x-select-from-x-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n"]], "AI/ML Learning Path": [[209, "ai-ml-learning-path"]], "About Python Programming": [[22, "about-python-programming"]], "Accept float input from User": [[94, "accept-float-input-from-user"]], "Accept multiline input from a user": [[94, "accept-multiline-input-from-a-user"]], "Accepting User Inputs (as both integer and string)": [[94, "accepting-user-inputs-as-both-integer-and-string"]], "Accepting User Inputs (only as integer)": [[94, "accepting-user-inputs-only-as-integer"]], "Access Tuple Elements": [[54, "access-tuple-elements"]], "Access elements from a list": [[53, "access-elements-from-a-list"]], "Accessing Attributes with self Parameter": [[102, "accessing-attributes-with-self-parameter"]], "Accessing Elements from Dictionary": [[55, "accessing-elements-from-dictionary"]], "Accessing output string arguments by name": [[94, "accessing-output-string-arguments-by-name"]], "Accessing the index in for loop": [[47, "accessing-the-index-in-for-loop"]], "Ad Hoc Example Financial Forecast Edit": [[139, "ad-hoc-example-financial-forecast-edit"]], "Add/Change List Elements": [[53, "add-change-list-elements"]], "Adding or Removing Elements": [[150, "adding-or-removing-elements"]], "Additional Regression Plots": [[192, "additional-regression-plots"]], "Adjust train() function to track results with SummaryWriter()": [[178, "adjust-train-function-to-track-results-with-summarywriter"]], "Adjusting model_1 to fit a straight line": [[173, "adjusting-model-1-to-fit-a-straight-line"]], "Advanced Level": [[209, "advanced-level"]], "Advanced Retrieval With LangChain": [[133, "advanced-retrieval-with-langchain"]], "Advanced string processing": [[52, "advanced-string-processing"]], "Advantage": [[80, "advantage"]], "Advantages of Recursion": [[78, "advantages-of-recursion"]], "Advantages of Tuple over List": [[54, "advantages-of-tuple-over-list"]], "Advantages of user-defined functions": [[85, "advantages-of-user-defined-functions"]], "Agents": [[116, "id1"], [117, "agents"]], "Agents - Make OpenAI Do Things For you": [[127, "agents-make-openai-do-things-for-you"]], "Agents \ud83e\udd16\ud83e\udd16": [[116, "agents"]], "Aggregate Statistics (Groupby)": [[168, "aggregate-statistics-groupby"]], "Algorithm Evaluation": [[1, "algorithm-evaluation"]], "An example cell": [[6, "an-example-cell"], [109, "an-example-cell"], [207, "an-example-cell"]], "Analyze Gradient Descent Progress": [[11, "analyze-gradient-descent-progress"], [12, "analyze-gradient-descent-progress"], [13, "analyze-gradient-descent-progress"], [14, "analyze-gradient-descent-progress"], [15, "analyze-gradient-descent-progress"], [16, "analyze-gradient-descent-progress"], [17, "analyze-gradient-descent-progress"]], "Anatomy of Box Plot": [[196, "anatomy-of-box-plot"]], "Anatomy of Violin Plot": [[197, "anatomy-of-violin-plot"]], "Angle between vectors": [[32, "angle-between-vectors"]], "Anomaly Detection Algorithm": [[1, "anomaly-detection-algorithm"]], "Anomaly Detection Using Gaussian Distribution": [[1, "anomaly-detection-using-gaussian-distribution"], [8, "anomaly-detection-using-gaussian-distribution"]], "Apply condition": [[157, "apply-condition"]], "Architecture of a classification neural network": [[173, "architecture-of-a-classification-neural-network"]], "Argument of an Exception": [[71, "argument-of-an-exception"]], "Array": [[150, "array"]], "Array Attributes and Methods": [[151, "array-attributes-and-methods"]], "Array Manipulation": [[150, "array-manipulation"]], "Array datatypes": [[151, "array-datatypes"]], "Array indexing": [[152, "array-indexing"]], "Array math": [[153, "array-math"]], "Arrays reorganizing": [[154, "arrays-reorganizing"]], "Assigning value to constant in Python": [[90, "assigning-value-to-constant-in-python"]], "Assigning values to Variables in Python": [[90, "assigning-values-to-variables-in-python"]], "Backpropagation": [[7, "backpropagation"]], "Backpropagation Algorithm": [[7, "backpropagation-algorithm"]], "Backward Iteration using the reversed() function": [[47, "backward-iteration-using-the-reversed-function"]], "Bar Chart": [[147, "bar-chart"]], "Bar Plot, Point Plot and Count plot": [[198, "bar-plot-point-plot-and-count-plot"]], "Basic Graph": [[147, "basic-graph"]], "Basic Statistics": [[150, "basic-statistics"]], "Basic operations": [[171, "basic-operations"]], "Batch Gradient Descent": [[4, "batch-gradient-descent"], [5, "batch-gradient-descent"]], "Batch Messages": [[131, "batch-messages"]], "Be careful when copying arrays!!!": [[152, "be-careful-when-copying-arrays"]], "Become one with the data (data preparation)": [[175, "become-one-with-the-data-data-preparation"]], "Beginner": [[2, "beginner"]], "Beginner Level": [[209, "beginner-level"]], "Bonus: Chapters With Timestamps": [[143, "bonus-chapters-with-timestamps"]], "Boolean Masking and Advanced Indexing": [[154, "boolean-masking-and-advanced-indexing"]], "Boolean array indexing": [[152, "boolean-array-indexing"]], "Box and Whiskers Chart": [[147, "box-and-whiskers-chart"]], "Box plot #1": [[147, "box-plot-1"]], "Box plot #2": [[147, "box-plot-2"]], "Breaking appart strings": [[52, "breaking-appart-strings"]], "Bringing FoodVision Mini to life by creating a Gradio demo": [[180, "bringing-foodvision-mini-to-life-by-creating-a-gradio-demo"]], "Broadcasting": [[153, "broadcasting"]], "Broadcasting with array reorganizing": [[154, "broadcasting-with-array-reorganizing"]], "Build model": [[172, "build-model"]], "Building Custom Iterators": [[34, "building-custom-iterators"]], "Building a Gradio interface": [[180, "building-a-gradio-interface"]], "Building a PyTorch linear model": [[172, "building-a-pytorch-linear-model"]], "Building a model": [[173, "building-a-model"]], "Building a model with non-linearity": [[173, "building-a-model-with-non-linearity"]], "Building a multi-class classification model in PyTorch": [[173, "building-a-multi-class-classification-model-in-pytorch"]], "Building a training and testing loop": [[173, "building-a-training-and-testing-loop"]], "Building color palettes:": [[189, "building-color-palettes"]], "Built-In Class Attributes": [[102, "built-in-class-attributes"]], "Built-in Functions with Set": [[56, "built-in-functions-with-set"]], "Built-in Higher Order Functions": [[37, "built-in-higher-order-functions"]], "Built-in functions to Work with Python": [[52, "built-in-functions-to-work-with-python"]], "Business idea: Job Data As A Service": [[137, "business-idea-job-data-as-a-service"], [138, "business-idea-job-data-as-a-service"]], "Calculate Model Training Precision": [[14, "calculate-model-training-precision"], [15, "calculate-model-training-precision"], [16, "calculate-model-training-precision"], [17, "calculate-model-training-precision"], [18, "calculate-model-training-precision"], [19, "calculate-model-training-precision"]], "Calculating patch embedding input and output shapes by hand": [[179, "calculating-patch-embedding-input-and-output-shapes-by-hand"]], "Calculus - Fourier Series": [[27, "calculus-fourier-series"]], "Canberra Distance": [[30, "canberra-distance"]], "Capital-pi notation": [[28, "capital-pi-notation"]], "Capital-sigma notation": [[29, "capital-sigma-notation"]], "Cart ^": [[39, "cart"]], "Catching Exceptions in Python": [[71, "catching-exceptions-in-python"]], "Catching Specific Exceptions in Python": [[71, "catching-specific-exceptions-in-python"]], "Catching exceptions with continue statement": [[49, "catching-exceptions-with-continue-statement"]], "Categorical Data Background": [[194, "categorical-data-background"]], "Cell mode vs. script mode": [[176, "cell-mode-vs-script-mode"]], "Chaining Decorators in Python": [[37, "chaining-decorators-in-python"]], "Chains \u26d3\ufe0f\u26d3\ufe0f\u26d3\ufe0f": [[116, "chains"]], "Change tensor datatype": [[171, "change-tensor-datatype"]], "Changelog": [[118, "changelog"]], "Changing Dictionary to JSON": [[68, "changing-dictionary-to-json"]], "Changing Directory chdir() -": [[69, "changing-directory-chdir"]], "Changing JSON to Dictionary": [[68, "changing-json-to-dictionary"]], "Changing and Adding Dictionary elements": [[55, "changing-and-adding-dictionary-elements"]], "Chat Message History": [[116, "chat-message-history"]], "Chat Messages": [[116, "chat-messages"]], "Chat Model": [[116, "chat-model"]], "Chatbots": [[117, "chatbots"]], "Chebyshev Distance": [[30, "chebyshev-distance"]], "Check python datatypes": [[24, "check-python-datatypes"]], "Checking the contents of a PyTorch model": [[172, "checking-the-contents-of-a-pytorch-model"]], "Checking the size of EffNetB2 feature extractor": [[180, "checking-the-size-of-effnetb2-feature-extractor"]], "Checking the size of ViT feature extractor": [[180, "checking-the-size-of-vit-feature-extractor"]], "Chunk your data up into smaller documents": [[134, "chunk-your-data-up-into-smaller-documents"]], "Class": [[101, "class"]], "Class Constructor": [[101, "class-constructor"]], "Class Without Getters and Setters": [[38, "class-without-getters-and-setters"]], "Code Understanding": [[117, "code-understanding"]], "Code blocks and outputs": [[25, "code-blocks-and-outputs"], [107, "code-blocks-and-outputs"], [111, "code-blocks-and-outputs"]], "Collecting EffNetB2 feature extractor stats": [[180, "collecting-effnetb2-feature-extractor-stats"]], "Collecting ViT feature extractor stats": [[180, "collecting-vit-feature-extractor-stats"]], "Combining Arrays": [[150, "combining-arrays"]], "Common Python String Methods": [[52, "common-python-string-methods"]], "Compare DataFrame drop() vs. pop() vs. del": [[161, "compare-dataframe-drop-vs-pop-vs-del"]], "Compare model results": [[175, "compare-model-results"]], "Compare model results and training time": [[174, "compare-model-results-and-training-time"]], "Comparing model results, prediction times and size": [[180, "comparing-model-results-prediction-times-and-size"]], "Comparision operators in Python": [[80, "comparision-operators-in-python"]], "Comparison": [[150, "comparison"]], "Concepts": [[210, "concepts"]], "Concepts at glance": [[2, "concepts-at-glance"]], "Conditional Changes": [[168, "conditional-changes"]], "Conditional statements": [[42, "conditional-statements"]], "Conditionals in List Comprehension": [[57, "conditionals-in-list-comprehension"]], "Constants  -": [[80, "constants"]], "Construct and train Model 1": [[175, "construct-and-train-model-1"]], "Constructors in Python": [[102, "constructors-in-python"]], "Content with notebooks": [[25, "content-with-notebooks"], [107, "content-with-notebooks"], [111, "content-with-notebooks"]], "Contextual Compression": [[133, "contextual-compression"]], "Control Flow Statements": [[42, "control-flow-statements"]], "Control Statements in Python": [[49, "control-statements-in-python"]], "Control Statements in Python FAQs": [[49, "control-statements-in-python-faqs"]], "Controlling Aesthetics of Seaborn Plots": [[187, "controlling-aesthetics-of-seaborn-plots"]], "Convert Pandas DataFrame to Python dictionary": [[165, "convert-pandas-dataframe-to-python-dictionary"]], "Copying/Sorting": [[150, "copying-sorting"]], "Core engineering": [[210, "core-engineering"]], "Cosine Distance": [[30, "cosine-distance"]], "Cost Function": [[4, "cost-function"], [5, "cost-function"], [7, "cost-function"]], "Cost Function (Distortion)": [[3, "cost-function-distortion"]], "Course Structure": [[210, "course-structure"]], "Create DataFrame from Hierarchical lists as columns": [[159, "create-dataframe-from-hierarchical-lists-as-columns"]], "Create DataFrame from dict using constructor": [[158, "create-dataframe-from-dict-using-constructor"]], "Create DataFrame from hierarchical lists as rows": [[159, "create-dataframe-from-hierarchical-lists-as-rows"]], "Create DataFrame from list by changing data type": [[159, "create-dataframe-from-list-by-changing-data-type"]], "Create DataFrame from list of dict": [[158, "create-dataframe-from-list-of-dict"]], "Create DataFrame from list using constructor": [[159, "create-dataframe-from-list-using-constructor"]], "Create DataFrame from list with a customized column name": [[159, "create-dataframe-from-list-with-a-customized-column-name"]], "Create DataFrame from list with a customized index": [[159, "create-dataframe-from-list-with-a-customized-index"]], "Create DataFrame from multiple lists": [[159, "create-dataframe-from-multiple-lists"]], "Create DataLoaders for ViT": [[180, "create-dataloaders-for-vit"]], "Create DataLoaders using automatically created transforms": [[178, "create-dataloaders-using-automatically-created-transforms"]], "Create DataLoaders using manually created transforms": [[178, "create-dataloaders-using-manually-created-transforms"]], "Create Datasets and DataLoaders": [[177, "create-datasets-and-dataloaders"], [178, "create-datasets-and-dataloaders"], [179, "create-datasets-and-dataloaders"], [181, "create-datasets-and-dataloaders"], [182, "create-datasets-and-dataloaders"]], "Create Datasets and DataLoaders (data_setup.py)": [[176, "create-datasets-and-dataloaders-data-setup-py"]], "Create Datasets and DataLoaders (script mode)": [[182, "create-datasets-and-dataloaders-script-mode"]], "Create Generators in Python": [[35, "create-generators-in-python"]], "Create Pandas DataFrame from Python Dictionary": [[158, "create-pandas-dataframe-from-python-dictionary"]], "Create Pandas DataFrame from Python List": [[159, "create-pandas-dataframe-from-python-list"]], "Create Test Objects": [[157, "create-test-objects"]], "Create TinyVGG model class": [[175, "create-tinyvgg-model-class"]], "Create a NumPy Array": [[151, "create-a-numpy-array"]], "Create a custom Dataset to replicate ImageFolder": [[175, "create-a-custom-dataset-to-replicate-imagefolder"]], "Create a function to display random images": [[175, "create-a-function-to-display-random-images"]], "Create a helper function to build SummaryWriter() instances": [[178, "create-a-helper-function-to-build-summarywriter-instances"]], "Create a helper function to set seeds": [[178, "create-a-helper-function-to-set-seeds"]], "Create a notebook with MyST Markdown": [[6, "create-a-notebook-with-myst-markdown"], [109, "create-a-notebook-with-myst-markdown"], [207, "create-a-notebook-with-myst-markdown"]], "Create embeddings of your documents to get ready for semantic search": [[134, "create-embeddings-of-your-documents-to-get-ready-for-semantic-search"]], "Create experiments and set up training code": [[178, "create-experiments-and-set-up-training-code"]], "Create feature extractor models": [[178, "create-feature-extractor-models"]], "Create the Transformer Encoder": [[179, "create-the-transformer-encoder"]], "Create train & test loop functions": [[175, "create-train-test-loop-functions"]], "Create train and test Dataset\u2019s and DataLoader\u2019s": [[175, "create-train-and-test-datasets-and-dataloaders"]], "Creating Custom Exceptions": [[72, "creating-custom-exceptions"]], "Creating DataLoaders for EffNetB2": [[180, "creating-dataloaders-for-effnetb2"]], "Creating Instance Objects": [[102, "creating-instance-objects"]], "Creating Python Dictionary": [[55, "creating-python-dictionary"]], "Creating Python List": [[53, "creating-python-list"]], "Creating Python Sets": [[56, "creating-python-sets"]], "Creating Python Tuple": [[54, "creating-python-tuple"]], "Creating a Lambda Function": [[57, "creating-a-lambda-function"]], "Creating a Transformer Encoder by combining our custom made layers": [[179, "creating-a-transformer-encoder-by-combining-our-custom-made-layers"]], "Creating a Transformer Encoder with PyTorch\u2019s Transformer layers": [[179, "creating-a-transformer-encoder-with-pytorchs-transformer-layers"]], "Creating a ViT feature extractor": [[180, "creating-a-vit-feature-extractor"]], "Creating a demos folder to store our FoodVision Mini app files": [[180, "creating-a-demos-folder-to-store-our-foodvision-mini-app-files"]], "Creating a folder for storing Python scripts": [[182, "creating-a-folder-for-storing-python-scripts"]], "Creating a folder of example images to use with our FoodVision Mini demo": [[180, "creating-a-folder-of-example-images-to-use-with-our-foodvision-mini-demo"]], "Creating a function to make an EffNetB2 feature extractor": [[180, "creating-a-function-to-make-an-effnetb2-feature-extractor"]], "Creating a function to make predictions across the test dataset": [[180, "creating-a-function-to-make-predictions-across-the-test-dataset"]], "Creating a function to map our inputs and outputs": [[180, "creating-a-function-to-map-our-inputs-and-outputs"]], "Creating a function to save the model": [[181, "creating-a-function-to-save-the-model"], [182, "creating-a-function-to-save-the-model"]], "Creating a function to save the model (script mode)": [[182, "creating-a-function-to-save-the-model-script-mode"]], "Creating a function to save the model (utils.py)": [[176, "creating-a-function-to-save-the-model-utils-py"]], "Creating a function to time our experiments": [[174, "creating-a-function-to-time-our-experiments"]], "Creating a helper function to get class names": [[175, "creating-a-helper-function-to-get-class-names"]], "Creating a list of example images": [[180, "creating-a-list-of-example-images"]], "Creating a loss function": [[179, "creating-a-loss-function"]], "Creating a loss function and optimizer for a multi-class PyTorch model": [[173, "creating-a-loss-function-and-optimizer-for-a-multi-class-pytorch-model"]], "Creating a loss function and optimizer in PyTorch": [[172, "creating-a-loss-function-and-optimizer-in-pytorch"]], "Creating a model and transforms for FoodVision Big": [[180, "creating-a-model-and-transforms-for-foodvision-big"]], "Creating a module in Python": [[80, "creating-a-module-in-python"]], "Creating a range and tensors like": [[171, "creating-a-range-and-tensors-like"]], "Creating a requirements file for FoodVision Mini (requirements.txt)": [[180, "creating-a-requirements-file-for-foodvision-mini-requirements-txt"]], "Creating a train() function to combine train_step() and test_step()": [[175, "creating-a-train-function-to-combine-train-step-and-test-step"]], "Creating a training and testing loop for a multi-class PyTorch model": [[173, "creating-a-training-and-testing-loop-for-a-multi-class-pytorch-model"]], "Creating a transform for torchvision.models (auto creation)": [[177, "creating-a-transform-for-torchvision-models-auto-creation"]], "Creating a transform for torchvision.models (manual creation)": [[177, "creating-a-transform-for-torchvision-models-manual-creation"]], "Creating an EffNetB2 feature extractor": [[180, "creating-an-effnetb2-feature-extractor"]], "Creating an Object in Python": [[102, "creating-an-object-in-python"]], "Creating an empty set is a bit tricky.": [[56, "creating-an-empty-set-is-a-bit-tricky"]], "Creating an optimization loop in PyTorch": [[172, "creating-an-optimization-loop-in-pytorch"]], "Creating an optimizer": [[179, "creating-an-optimizer"]], "Creating image patches with torch.nn.Conv2d()": [[179, "creating-image-patches-with-torch-nn-conv2d"]], "Creating mutli-class classification data": [[173, "creating-mutli-class-classification-data"]], "Creating tensors": [[171, "creating-tensors"]], "Creating the class token embedding": [[179, "creating-the-class-token-embedding"]], "Creating the position embedding": [[179, "creating-the-position-embedding"]], "Creating train_step() and test_step() functions and train() to combine them": [[176, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [181, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [182, "creating-train-step-and-test-step-functions-and-train-to-combine-them"]], "Creating train_step() and test_step() functions and train() to combine them (script mode)": [[182, "creating-train-step-and-test-step-functions-and-train-to-combine-them-script-mode"]], "Creating transforms and loading data for Model 0": [[175, "creating-transforms-and-loading-data-for-model-0"]], "Custom Prompts": [[145, "custom-prompts"]], "Customizing Exception Classes": [[72, "customizing-exception-classes"]], "Data": [[172, "data"], [193, "data"]], "Data (preparing and loading)": [[172, "data-preparing-and-loading"]], "Data Cleaning": [[157, "data-cleaning"]], "Data Hiding": [[102, "data-hiding"]], "Data structures and algorithms": [[97, "data-structures-and-algorithms"]], "DataFrame Attributes": [[157, "dataframe-attributes"]], "DataFrame GroupBy": [[157, "dataframe-groupby"]], "DataFrame Iteration": [[157, "dataframe-iteration"]], "DataFrame Join": [[157, "dataframe-join"]], "DataFrame Options": [[157, "dataframe-options"]], "DataFrame Sorting": [[157, "dataframe-sorting"]], "DataFrame constructor": [[157, "dataframe-constructor"]], "DataFrame constructor vs from_dict()": [[158, "dataframe-constructor-vs-from-dict"]], "DataFrame conversion": [[157, "dataframe-conversion"]], "DataFrame creation": [[157, "dataframe-creation"]], "DataFrame filter columns": [[157, "dataframe-filter-columns"]], "DataFrame from dict by changing the column data type": [[158, "dataframe-from-dict-by-changing-the-column-data-type"]], "DataFrame from dict nested dict": [[158, "dataframe-from-dict-nested-dict"]], "DataFrame from dict where values are variable-length lists": [[158, "dataframe-from-dict-where-values-are-variable-length-lists"]], "DataFrame from dict with a single value": [[158, "dataframe-from-dict-with-a-single-value"]], "DataFrame from dict with dict keys as a row": [[158, "dataframe-from-dict-with-dict-keys-as-a-row"]], "DataFrame from dict with key and value as a column": [[158, "dataframe-from-dict-with-key-and-value-as-a-column"]], "DataFrame from dict with required columns only": [[158, "dataframe-from-dict-with-required-columns-only"]], "DataFrame from dict with user-defined indexes": [[158, "dataframe-from-dict-with-user-defined-indexes"]], "DataFrame metadata": [[157, "dataframe-metadata"]], "DataFrame modification": [[157, "dataframe-modification"]], "DataFrame rename columns": [[157, "dataframe-rename-columns"]], "DataFrame selection": [[157, "dataframe-selection"]], "DataFrame to dict by row": [[165, "dataframe-to-dict-by-row"]], "DataFrame to dict by row index": [[165, "dataframe-to-dict-by-row-index"]], "DataFrame to dict using into parameter": [[165, "dataframe-to-dict-using-into-parameter"]], "DataFrame to dict with a list of values": [[165, "dataframe-to-dict-with-a-list-of-values"]], "DataFrame to dict with one column as the key": [[165, "dataframe-to-dict-with-one-column-as-the-key"]], "DataFrame to dict with pandas series of values": [[165, "dataframe-to-dict-with-pandas-series-of-values"]], "DataFrame to dict without header and index": [[165, "dataframe-to-dict-without-header-and-index"]], "Dataframe from CSV": [[157, "dataframe-from-csv"]], "Dataframe from dict": [[157, "dataframe-from-dict"]], "Datasets": [[9, "datasets"]], "Decorating Functions with Parameters": [[37, "decorating-functions-with-parameters"]], "Decorators in Python": [[37, "decorators-in-python"]], "Defining a Class in Python": [[102, "defining-a-class-in-python"]], "Defining a Closure Function": [[36, "defining-a-closure-function"]], "Defining a Function": [[74, "defining-a-function"]], "Defining a function with parameters": [[74, "defining-a-function-with-parameters"]], "Defining a function with parameters and return value": [[74, "defining-a-function-with-parameters-and-return-value"]], "Defining a function without any parameters": [[74, "defining-a-function-without-any-parameters"]], "Defining a function without parameters and return value": [[74, "defining-a-function-without-parameters-and-return-value"]], "Definition": [[3, "definition"], [4, "definition"], [5, "definition"], [7, "definition"]], "Delete Objects": [[102, "delete-objects"]], "Delete object properties": [[102, "delete-object-properties"]], "Delete/Remove List Elements": [[53, "delete-remove-list-elements"]], "Deleting Files": [[68, "deleting-files"]], "Density Estimation": [[1, "density-estimation"]], "Deployed Gradio app structure": [[180, "deployed-gradio-app-structure"]], "Deploying our FoodVision Mini app to HuggingFace Spaces": [[180, "deploying-our-foodvision-mini-app-to-huggingface-spaces"]], "Description": [[3, "description"]], "Determinant": [[153, "determinant"]], "Dictionary Built-in Dictionary Functions": [[55, "dictionary-built-in-dictionary-functions"]], "Differences Between Interpreter and Compiler": [[98, "differences-between-interpreter-and-compiler"]], "Differences between Generator function and Normal function": [[35, "differences-between-generator-function-and-normal-function"]], "Different types of ML \ud83d\udcda": [[0, "different-types-of-ml"]], "Different types of machine learning model deployment": [[180, "different-types-of-machine-learning-model-deployment"]], "Different ways to track machine learning experiments": [[178, "different-ways-to-track-machine-learning-experiments"]], "Disadvantages of Recursion": [[78, "disadvantages-of-recursion"]], "Display numbers in floating-point format": [[94, "display-numbers-in-floating-point-format"]], "Display output Number in various type format": [[94, "display-output-number-in-various-type-format"]], "Dissimilarity Measure": [[30, "dissimilarity-measure"]], "Docstring Formats": [[84, "docstring-formats"]], "Docstrings": [[74, "docstrings"]], "Document Loaders": [[116, "document-loaders"]], "Documents": [[116, "documents"]], "Dot product": [[32, "dot-product"]], "Download different datasets": [[178, "download-different-datasets"]], "Downloading our FoodVision Mini app files": [[180, "downloading-our-foodvision-mini-app-files"]], "Draw Decision Boundaries": [[14, "draw-decision-boundaries"], [15, "draw-decision-boundaries"]], "Draw a scatterplot for each pairwise relationship": [[201, "draw-a-scatterplot-for-each-pairwise-relationship"]], "Draw strips of observations on top of a box plot": [[195, "draw-strips-of-observations-on-top-of-a-box-plot"]], "Draw strips of observations on top of a violin plot": [[195, "draw-strips-of-observations-on-top-of-a-violin-plot"]], "Draw swarm observations on top of a violin plot": [[195, "draw-swarm-observations-on-top-of-a-violin-plot"]], "Drop NA from defined rows": [[163, "drop-na-from-defined-rows"]], "Drop all duplicates": [[162, "drop-all-duplicates"]], "Drop all the columns using loc": [[161, "drop-all-the-columns-using-loc"]], "Drop column by index position": [[161, "drop-column-by-index-position"]], "Drop column by suppressing errors": [[161, "drop-column-by-suppressing-errors"]], "Drop column from multi-index DataFrame": [[161, "drop-column-from-multi-index-dataframe"]], "Drop column in place": [[161, "drop-column-in-place"]], "Drop column using a function": [[161, "drop-column-using-a-function"]], "Drop column using pandas DataFrame delete": [[161, "drop-column-using-pandas-dataframe-delete"]], "Drop column using pandas DataFrame.pop() function": [[161, "drop-column-using-pandas-dataframe-pop-function"]], "Drop column where all values are missing": [[163, "drop-column-where-all-values-are-missing"]], "Drop column where at least one value is missing": [[163, "drop-column-where-at-least-one-value-is-missing"]], "Drop column with missing values in place": [[163, "drop-column-with-missing-values-in-place"]], "Drop column with the number of NA": [[163, "drop-column-with-the-number-of-na"]], "Drop columns": [[157, "drop-columns"]], "Drop columns in pandas DataFrame": [[161, "drop-columns-in-pandas-dataframe"]], "Drop columns with NA in pandas DataFrame": [[163, "drop-columns-with-na-in-pandas-dataframe"]], "Drop duplicates and reset the index": [[162, "drop-duplicates-and-reset-the-index"], [163, "drop-duplicates-and-reset-the-index"]], "Drop duplicates but keep first": [[162, "drop-duplicates-but-keep-first"]], "Drop duplicates but keep last": [[162, "drop-duplicates-but-keep-last"]], "Drop duplicates from defined columns": [[162, "drop-duplicates-from-defined-columns"]], "Drop duplicates in pandas DataFrame": [[162, "drop-duplicates-in-pandas-dataframe"]], "Drop duplicates in place": [[162, "drop-duplicates-in-place"]], "Drop first n columns": [[161, "drop-first-n-columns"]], "Drop multiple columns": [[161, "drop-multiple-columns"]], "Drop range of columns using iloc": [[161, "drop-range-of-columns-using-iloc"]], "Drop single column": [[161, "drop-single-column"]], "Drop the last column": [[161, "drop-the-last-column"]], "Encapsulation": [[101, "encapsulation"]], "Enjoy Learning \ud83d\ude03": [[210, "enjoy-learning"]], "Ensemble Retriever": [[133, "ensemble-retriever"]], "Enumerate": [[71, "enumerate"]], "Equation 1 overview": [[179, "equation-1-overview"]], "Equation 1: Split data into patches and creating the class, position and patch embedding": [[179, "equation-1-split-data-into-patches-and-creating-the-class-position-and-patch-embedding"]], "Equation 2 overview": [[179, "equation-2-overview"]], "Equation 2: Multi-Head Attention (MSA)": [[179, "equation-2-multi-head-attention-msa"]], "Equation 3 overview": [[179, "equation-3-overview"]], "Equation 3: Multilayer Perceptron (MLP)": [[179, "equation-3-multilayer-perceptron-mlp"]], "Equation 4 overview": [[179, "equation-4-overview"]], "Escape Sequence": [[52, "escape-sequence"]], "Escape character \\": [[39, "escape-character"]], "Essentials": [[210, "essentials"]], "Estimating Parameters for a Gaussian": [[1, "estimating-parameters-for-a-gaussian"]], "Euclidian Distance": [[30, "euclidian-distance"]], "Evaluate model by plotting loss curves": [[177, "evaluate-model-by-plotting-loss-curves"]], "Evaluating a model trained with non-linear activation functions": [[173, "evaluating-a-model-trained-with-non-linear-activation-functions"]], "Evaluation": [[117, "evaluation"]], "Example 1. Even function": [[27, "example-1-even-function"]], "Example 10: Print year, month, hour, minute and timestamp": [[59, "example-10-print-year-month-hour-minute-and-timestamp"]], "Example 11: Difference between two dates and times": [[59, "example-11-difference-between-two-dates-and-times"]], "Example 12: Difference between two timedelta objects": [[59, "example-12-difference-between-two-timedelta-objects"]], "Example 13: Printing negative timedelta object": [[59, "example-13-printing-negative-timedelta-object"]], "Example 14: Time duration in seconds": [[59, "example-14-time-duration-in-seconds"]], "Example 15: Format date using strftime()": [[59, "example-15-format-date-using-strftime"]], "Example 16: strptime()": [[59, "example-16-strptime"]], "Example 1:": [[46, "example-1"], [87, "example-1"]], "Example 1: Current time using datetime object": [[63, "example-1-current-time-using-datetime-object"]], "Example 1: Declaring and assigning value to a constant": [[90, "example-1-declaring-and-assigning-value-to-a-constant"]], "Example 1: Declaring and assigning value to a variable": [[90, "example-1-declaring-and-assigning-value-to-a-variable"]], "Example 1: Get Current Date and Time": [[59, "example-1-get-current-date-and-time"]], "Example 1: Python get today\u2019s date": [[62, "example-1-python-get-todays-date"]], "Example 1: Python sleep()": [[66, "example-1-python-sleep"]], "Example 1: Python timestamp to datetime": [[64, "example-1-python-timestamp-to-datetime"]], "Example 1: datetime to string using strftime()": [[60, "example-1-datetime-to-string-using-strftime"]], "Example 1: string to datetime object": [[61, "example-1-string-to-datetime-object"]], "Example 2:": [[46, "example-2"], [87, "example-2"]], "Example 2: Creating string from a timestamp": [[60, "example-2-creating-string-from-a-timestamp"]], "Example 2: Current date in different formats": [[62, "example-2-current-date-in-different-formats"]], "Example 2: Current time using time module": [[63, "example-2-current-time-using-time-module"]], "Example 2: Declaring multiple variables in one line** using comma  ,  and semicolon ;": [[90, "example-2-declaring-multiple-variables-in-one-line-using-comma-and-semicolon"]], "Example 2: Get Current Date": [[59, "example-2-get-current-date"]], "Example 2: Python create a digital clock": [[66, "example-2-python-create-a-digital-clock"]], "Example 2: Python datetime to timestamp": [[64, "example-2-python-datetime-to-timestamp"]], "Example 2: string to datetime object": [[61, "example-2-string-to-datetime-object"]], "Example 3: Changing the value of a variable": [[90, "example-3-changing-the-value-of-a-variable"]], "Example 3: Current time of a timezone": [[63, "example-3-current-time-of-a-timezone"]], "Example 3: Date object to represent a date": [[59, "example-3-date-object-to-represent-a-date"]], "Example 3: Get the current date and time": [[62, "example-3-get-the-current-date-and-time"]], "Example 3: Locale\u2019s appropriate date and time": [[60, "example-3-locales-appropriate-date-and-time"]], "Example 3: Python multithreading": [[66, "example-3-python-multithreading"]], "Example 4: Get current date": [[59, "example-4-get-current-date"]], "Example 4: Time Objects to Represent Time": [[63, "example-4-time-objects-to-represent-time"]], "Example 4: sleep() in a multithreaded program": [[66, "example-4-sleep-in-a-multithreaded-program"]], "Example 5: Difference Between Two Points in Time Using": [[63, "example-5-difference-between-two-points-in-time-using"]], "Example 5: Get date from a timestamp": [[59, "example-5-get-date-from-a-timestamp"]], "Example 6: Difference Between Two Points in Time Using timedelata": [[63, "example-6-difference-between-two-points-in-time-using-timedelata"]], "Example 6: Print today\u2019s year, month and day": [[59, "example-6-print-todays-year-month-and-day"]], "Example 7: Time object to represent time": [[59, "example-7-time-object-to-represent-time"]], "Example 8: Print hour, minute, second and microsecond": [[59, "example-8-print-hour-minute-second-and-microsecond"]], "Example 9: Python datetime object": [[59, "example-9-python-datetime-object"]], "Example : Arithmetic operators in Python": [[95, "example-arithmetic-operators-in-python"]], "Example : Comparison operators in Python": [[95, "example-comparison-operators-in-python"]], "Example : Identity operators in Python": [[95, "example-identity-operators-in-python"]], "Example : Logical operators in Python": [[95, "example-logical-operators-in-python"]], "Example : Membership operators in Python": [[95, "example-membership-operators-in-python"]], "Example : Share a global Variable Across Python Modules": [[76, "example-share-a-global-variable-across-python-modules"]], "Example Selectors": [[116, "example-selectors"]], "Example Using decimal Module": [[80, "example-using-decimal-module"]], "Example Using math Module": [[80, "example-using-math-module"]], "Example Using operator Module": [[80, "example-using-operator-module"]], "Example Using os Module": [[80, "example-using-os-module"]], "Example Using random Module": [[80, "example-using-random-module"]], "Example Using statistics Module": [[80, "example-using-statistics-module"]], "Example Using string Module": [[80, "example-using-string-module"]], "Example Using sys Module": [[80, "example-using-sys-module"]], "Example of Inheritance in Python": [[103, "example-of-inheritance-in-python"]], "Example of Method Overriding in Python": [[103, "example-of-method-overriding-in-python"]], "Example of RegEx with Metacharacters": [[39, "example-of-regex-with-metacharacters"]], "Example to convert pandas DataFrame to dict": [[165, "example-to-convert-pandas-dataframe-to-dict"]], "Example:": [[49, "example"], [87, "example"]], "Example: Nested for loop": [[47, "example-nested-for-loop"]], "Example: Nested for loop to print pattern": [[47, "example-nested-for-loop-to-print-pattern"]], "Example: Nested while loop": [[48, "example-nested-while-loop"]], "Example: Nested while loop to print the pattern": [[48, "example-nested-while-loop-to-print-the-pattern"]], "Example: User-Defined Exception in Python": [[72, "example-user-defined-exception-in-python"]], "Examples": [[28, "examples"], [29, "examples"]], "Exceptions in Python": [[71, "exceptions-in-python"]], "Exercise 10: Merge two data frames using the following condition": [[169, "exercise-10-merge-two-data-frames-using-the-following-condition"]], "Exercise 1: From the given dataset print the first and last five rows": [[169, "exercise-1-from-the-given-dataset-print-the-first-and-last-five-rows"]], "Exercise 1: Read Total profit of all months and show it using a line plot": [[148, "exercise-1-read-total-profit-of-all-months-and-show-it-using-a-line-plot"]], "Exercise 2: Clean the dataset and update the CSV file": [[169, "exercise-2-clean-the-dataset-and-update-the-csv-file"]], "Exercise 2: Get total profit of all months and show line plot with the following Style properties": [[148, "exercise-2-get-total-profit-of-all-months-and-show-line-plot-with-the-following-style-properties"]], "Exercise 3: Find the most expensive car company name": [[169, "exercise-3-find-the-most-expensive-car-company-name"]], "Exercise 3: Read all product sales data and show it  using a multiline plot": [[148, "exercise-3-read-all-product-sales-data-and-show-it-using-a-multiline-plot"]], "Exercise 4: Print All Toyota Cars details": [[169, "exercise-4-print-all-toyota-cars-details"]], "Exercise 4: Read toothpaste sales data of each month and show it using a scatter plot": [[148, "exercise-4-read-toothpaste-sales-data-of-each-month-and-show-it-using-a-scatter-plot"]], "Exercise 5: Count total cars per company": [[169, "exercise-5-count-total-cars-per-company"]], "Exercise 5: Read face cream and facewash product sales data and show it using the bar chart": [[148, "exercise-5-read-face-cream-and-facewash-product-sales-data-and-show-it-using-the-bar-chart"]], "Exercise 6: Find each company\u2019s Higesht price car": [[169, "exercise-6-find-each-companys-higesht-price-car"]], "Exercise 6: Read sales data of bathing soap of all months and show it using a bar chart. Save this plot to your hard disk": [[148, "exercise-6-read-sales-data-of-bathing-soap-of-all-months-and-show-it-using-a-bar-chart-save-this-plot-to-your-hard-disk"]], "Exercise 7: Find the average mileage of each car making company": [[169, "exercise-7-find-the-average-mileage-of-each-car-making-company"]], "Exercise 7: Read the total profit of each month and show it using the histogram to see the most common profit ranges": [[148, "exercise-7-read-the-total-profit-of-each-month-and-show-it-using-the-histogram-to-see-the-most-common-profit-ranges"]], "Exercise 8: Calculate total sale data for last year for each product and show it using a Pie chart": [[148, "exercise-8-calculate-total-sale-data-for-last-year-for-each-product-and-show-it-using-a-pie-chart"]], "Exercise 8: Sort all cars by Price column": [[169, "exercise-8-sort-all-cars-by-price-column"]], "Exercise 9: Concatenate two data frames using the following conditions": [[169, "exercise-9-concatenate-two-data-frames-using-the-following-conditions"]], "Exercise 9: Read Bathing soap facewash of all months and display it using the Subplot": [[148, "exercise-9-read-bathing-soap-facewash-of-all-months-and-display-it-using-the-subplot"]], "Exercise Question 10: Read all product sales data and show it using the stack plot": [[148, "exercise-question-10-read-all-product-sales-data-and-show-it-using-the-stack-plot"]], "Exercises \u279e <span class='label label-default'>Level 1</span>": [[37, "exercises-level-1"], [39, "exercises-level-1"], [45, "exercises-level-1"], [47, "exercises-level-1"], [53, "exercises-level-1"], [54, "exercises-level-1"], [56, "exercises-level-1"], [64, "exercises-level-1"], [68, "exercises-level-1"], [71, "exercises-level-1"], [74, "exercises-level-1"], [80, "exercises-level-1"], [90, "exercises-level-1"], [101, "exercises-level-1"]], "Exercises \u279e <span class='label label-default'>Level 2</span>": [[37, "exercises-level-2"], [39, "exercises-level-2"], [45, "exercises-level-2"], [47, "exercises-level-2"], [53, "exercises-level-2"], [54, "exercises-level-2"], [56, "exercises-level-2"], [68, "exercises-level-2"], [74, "exercises-level-2"], [80, "exercises-level-2"], [90, "exercises-level-2"], [101, "exercises-level-2"]], "Exercises \u279e <span class='label label-default'>Level 3</span>": [[37, "exercises-level-3"], [39, "exercises-level-3"], [45, "exercises-level-3"], [47, "exercises-level-3"], [56, "exercises-level-3"], [74, "exercises-level-3"], [80, "exercises-level-3"]], "Expert Level": [[209, "expert-level"]], "Exploring Figure 1": [[179, "exploring-figure-1"]], "Exploring Table 1": [[179, "exploring-table-1"]], "Exporting Data": [[157, "exporting-data"]], "Extra Credit: Loop this process through many twitter accounts": [[140, "extra-credit-loop-this-process-through-many-twitter-accounts"]], "Extra learning": [[172, "extra-learning"]], "Extra resources": [[173, "extra-resources"], [174, "extra-resources"], [175, "extra-resources"], [176, "extra-resources"], [178, "extra-resources"], [180, "extra-resources"]], "Extra rsources": [[179, "extra-rsources"]], "Extra-curriculum": [[177, "extra-curriculum"]], "Extract Data From Calls & Video Transcripts/Interviews": [[145, "extract-data-from-calls-video-transcripts-interviews"]], "Extract Structured Data From Text: Expert Mode (Using Function Calling)": [[137, "extract-structured-data-from-text-expert-mode-using-function-calling"]], "Extract Structured Data From Text: Expert Mode (Using Kor)": [[138, "extract-structured-data-from-text-expert-mode-using-kor"]], "Extraction": [[117, "extraction"]], "FacetGrid": [[202, "facetgrid"], [202, "id1"]], "Factor Plot": [[199, "factor-plot"]], "Fashion MNIST": [[9, "fashion-mnist"]], "Feature Scaling": [[4, "feature-scaling"]], "Features (variables)": [[4, "features-variables"]], "File Positions": [[68, "file-positions"]], "File Types": [[68, "file-types"]], "File with csv Extension": [[68, "file-with-csv-extension"]], "File with json Extension": [[68, "file-with-json-extension"]], "File with txt Extension": [[68, "file-with-txt-extension"]], "File with xlsx Extension": [[68, "file-with-xlsx-extension"]], "File with xml Extension": [[68, "file-with-xml-extension"]], "Files": [[68, "files"]], "Filter, Sort, and Groupby": [[157, "filter-sort-and-groupby"]], "Filtering Data": [[168, "filtering-data"]], "Find Anomalies Using Gaussian Distribution": [[8, "find-anomalies-using-gaussian-distribution"]], "Finding the min, max, mean, sum, etc (aggregation)": [[171, "finding-the-min-max-mean-sum-etc-aggregation"]], "Fing Outliers": [[8, "fing-outliers"]], "Flatten Data": [[154, "flatten-data"]], "Flattening the patch embedding with torch.nn.Flatten()": [[179, "flattening-the-patch-embedding-with-torch-nn-flatten"]], "FoodVision Mini model deployment experiment outline": [[180, "foodvision-mini-model-deployment-experiment-outline"]], "For instance if you want to generate a list of numbers": [[57, "for-instance-if-you-want-to-generate-a-list-of-numbers"]], "For testing": [[119, "for-testing"]], "Format Code List": [[60, "format-code-list"], [61, "format-code-list"]], "Format output strings by its positions": [[94, "format-output-strings-by-its-positions"]], "Forward (or Feedforward) Propagation": [[7, "forward-or-feedforward-propagation"]], "Forward Propagation Example": [[7, "forward-propagation-example"]], "Freezing the base model and changing the output layer to suit our needs": [[177, "freezing-the-base-model-and-changing-the-output-layer-to-suit-our-needs"]], "Frozenset methods": [[56, "frozenset-methods"]], "Function Argument and Parameter": [[77, "function-argument-and-parameter"]], "Function Calling Hello World Example": [[137, "function-calling-hello-world-example"]], "Function Calling Models": [[116, "function-calling-models"]], "Function Calling with OpenAI\u2019s GPT Models: An Interactive Tutorial": [[139, "function-calling-with-openais-gpt-models-an-interactive-tutorial"]], "Function as a Parameter": [[36, "function-as-a-parameter"]], "Function as a Parameter of Another Function": [[77, "function-as-a-parameter-of-another-function"]], "Function as a Return Value": [[36, "function-as-a-return-value"]], "Function pass Statement": [[74, "function-pass-statement"]], "Function return Statement": [[74, "function-return-statement"]], "Functionizing training and test loops": [[174, "functionizing-training-and-test-loops"]], "Functions in Python Math Module": [[82, "functions-in-python-math-module"]], "Gaussian (Normal) Distribution": [[1, "gaussian-normal-distribution"]], "General form": [[27, "general-form"]], "Generate Random Numbers": [[154, "generate-random-numbers"]], "Generators in Python": [[35, "generators-in-python"]], "Generic Seaborn Plots:": [[189, "generic-seaborn-plots"]], "Get Current Directory getcwd() -": [[69, "get-current-directory-getcwd"]], "Get Data": [[179, "get-data"]], "Get a users Tweets": [[140, "get-a-users-tweets"]], "Get data": [[175, "get-data"], [176, "get-data"], [177, "get-data"], [178, "get-data"], [181, "get-data"], [182, "get-data"]], "Get multiple input values from a user in one line": [[94, "get-multiple-input-values-from-a-user-in-one-line"]], "Get the statistics of DataFrame": [[157, "get-the-statistics-of-dataframe"]], "Getting Started with Python": [[24, "getting-started-with-python"]], "Getting a dataset": [[174, "getting-a-dataset"]], "Getting a pretrained ViT model and creating a feature extractor": [[179, "getting-a-pretrained-vit-model-and-creating-a-feature-extractor"]], "Getting a pretrained model": [[177, "getting-a-pretrained-model"]], "Getting a pretrained model, freezing the base layers and changing the classifier head": [[178, "getting-a-pretrained-model-freezing-the-base-layers-and-changing-the-classifier-head"]], "Getting a summary of our model with torchinfo.summary()": [[177, "getting-a-summary-of-our-model-with-torchinfo-summary"]], "Getting a visual summary of our ViT model": [[179, "getting-a-visual-summary-of-our-vit-model"]], "Getting back to Decorators": [[37, "getting-back-to-decorators"]], "Getting data": [[180, "getting-data"]], "Getting information from tensors": [[171, "getting-information-from-tensors"]], "Getting prediction probabilities for a multi-class PyTorch model": [[173, "getting-prediction-probabilities-for-a-multi-class-pytorch-model"]], "Getting setup": [[177, "getting-setup"], [178, "getting-setup"], [179, "getting-setup"], [180, "getting-setup"]], "Getting specific: What\u2019s ViT made of?": [[179, "getting-specific-whats-vit-made-of"]], "Global Variables": [[75, "global-variables"]], "Global Variables Across Python Modules": [[76, "global-variables-across-python-modules"]], "Global and local variables": [[75, "global-and-local-variables"]], "Global in Nested Functions": [[76, "global-in-nested-functions"]], "Going Modular Scripts": [[184, "going-modular-scripts"]], "Going Modular: Part 1 (cell mode)": [[181, "going-modular-part-1-cell-mode"]], "Going Modular: Part 2 (script mode)": [[182, "going-modular-part-2-script-mode"]], "Going from raw model outputs to predicted labels (logits -> prediction probabilities -> prediction labels)": [[173, "going-from-raw-model-outputs-to-predicted-labels-logits-prediction-probabilities-prediction-labels"]], "Good news is \ud83d\ude0d": [[210, "good-news-is"]], "Gradient Computation": [[7, "gradient-computation"]], "Gradio overview": [[180, "gradio-overview"]], "Group the strips by a categorical variable": [[195, "group-the-strips-by-a-categorical-variable"]], "HIGH-LEVEL LANGUAGES": [[98, "high-level-languages"]], "Hamming Distance": [[30, "hamming-distance"]], "Handling timezone in Python": [[59, "handling-timezone-in-python"]], "Help topics": [[89, "help-topics"]], "Here is a list of all the escape sequences supported by Python.": [[52, "here-is-a-list-of-all-the-escape-sequences-supported-by-python"]], "Here\u2019s my first section": [[21, "heres-my-first-section"], [110, "heres-my-first-section"], [113, "heres-my-first-section"], [206, "heres-my-first-section"]], "Here\u2019s my sample title": [[21, "heres-my-sample-title"], [110, "heres-my-sample-title"], [113, "heres-my-sample-title"], [206, "heres-my-sample-title"]], "Hierarchical Inheritance": [[103, "hierarchical-inheritance"]], "Higher Order Functions": [[36, "higher-order-functions"]], "Histogram": [[147, "histogram"]], "How Are Sets Better Than Other DataTypes?": [[56, "how-are-sets-better-than-other-datatypes"]], "How strftime() works?": [[60, "how-strftime-works"]], "How strptime() works?": [[61, "how-strptime-works"]], "How to Install NumPy?": [[150, "how-to-install-numpy"]], "How to access characters in a string?": [[52, "how-to-access-characters-in-a-string"]], "How to call a function in python?": [[74, "how-to-call-a-function-in-python"]], "How to change or delete a string?": [[52, "how-to-change-or-delete-a-string"]], "How to create a string in Python?": [[52, "how-to-create-a-string-in-python"]], "How to deal with overfitting": [[175, "how-to-deal-with-overfitting"]], "How to deal with underfitting": [[175, "how-to-deal-with-underfitting"]], "How to get current date and time in Python?": [[62, "how-to-get-current-date-and-time-in-python"]], "How to import modules in Python?": [[80, "how-to-import-modules-in-python"]], "How to learn Python?": [[22, "how-to-learn-python"]], "How to print blank lines": [[87, "how-to-print-blank-lines"]], "How to slice a string in Python?": [[52, "how-to-slice-a-string-in-python"]], "How to slice lists in Python?": [[53, "how-to-slice-lists-in-python"]], "How to use DataFrame.head() function": [[160, "how-to-use-dataframe-head-function"]], "How to use DataFrame.tail() function": [[160, "how-to-use-dataframe-tail-function"]], "How\u2019s it going to function?": [[180, "hows-it-going-to-function"]], "Hybrid Inheritance": [[103, "hybrid-inheritance"]], "Hypothesis": [[4, "hypothesis"]], "Hypothesis (the Model)": [[5, "hypothesis-the-model"]], "Identity matrix": [[31, "identity-matrix"]], "Illustrate Hidden Layers Perceptrons": [[17, "illustrate-hidden-layers-perceptrons"], [18, "illustrate-hidden-layers-perceptrons"], [19, "illustrate-hidden-layers-perceptrons"]], "Import Dependencies": [[8, "import-dependencies"], [10, "import-dependencies"], [11, "import-dependencies"], [12, "import-dependencies"], [13, "import-dependencies"], [14, "import-dependencies"], [15, "import-dependencies"], [16, "import-dependencies"], [17, "import-dependencies"], [18, "import-dependencies"], [19, "import-dependencies"]], "Import NumPy and Check Version": [[150, "import-numpy-and-check-version"]], "Importing Data": [[157, "importing-data"]], "Importing PyTorch": [[171, "importing-pytorch"]], "Importing PyTorch and setting up device-agnostic code": [[175, "importing-pytorch-and-setting-up-device-agnostic-code"]], "Importing module from a package": [[83, "importing-module-from-a-package"]], "Importing the Package": [[120, "importing-the-package"]], "Improving a model (from a model perspective)": [[173, "improving-a-model-from-a-model-perspective"]], "In the upcoming tutorials, we will deep dive into specific concepts of Python, hold on your breath and start your journey": [[24, "in-the-upcoming-tutorials-we-will-deep-dive-into-specific-concepts-of-python-hold-on-your-breath-and-start-your-journey"]], "Index": [[157, "index"]], "Indexes - Structuring documents to LLMs can work with them": [[116, "indexes-structuring-documents-to-llms-can-work-with-them"]], "Indexing": [[157, "indexing"]], "Indexing (selecting data from tensors)": [[171, "indexing-selecting-data-from-tensors"]], "Indexing a 1D array": [[152, "indexing-a-1d-array"]], "Indexing a 2D array (matrices)": [[152, "indexing-a-2d-array-matrices"]], "Informal introduction to python: using python as calculator": [[24, "informal-introduction-to-python-using-python-as-calculator"]], "Inheritance": [[101, "inheritance"]], "Inheritance in Python": [[103, "inheritance-in-python"]], "Init and Train Linear Regression Model": [[11, "init-and-train-linear-regression-model"], [12, "init-and-train-linear-regression-model"], [13, "init-and-train-linear-regression-model"]], "Init and Train Logistic Regression Model": [[10, "init-and-train-logistic-regression-model"], [14, "init-and-train-logistic-regression-model"], [15, "init-and-train-logistic-regression-model"], [16, "init-and-train-logistic-regression-model"], [17, "init-and-train-logistic-regression-model"]], "Init and Train MLP Model": [[18, "init-and-train-mlp-model"], [19, "init-and-train-mlp-model"]], "Input and output shapes": [[173, "input-and-output-shapes"]], "Input and output shapes of a computer vision model": [[174, "input-and-output-shapes-of-a-computer-vision-model"]], "Inputs and outputs, layers and blocks": [[179, "inputs-and-outputs-layers-and-blocks"]], "Insert columns": [[157, "insert-columns"]], "Inspecting EffNetB2 loss curves": [[180, "inspecting-effnetb2-loss-curves"]], "Inspecting Strings": [[52, "inspecting-strings"]], "Inspecting ViT loss curves": [[180, "inspecting-vit-loss-curves"]], "Installation": [[119, "installation"], [120, "installation"]], "Instance Variables and Methods": [[101, "instance-variables-and-methods"]], "Instructing LLMs To Match Tone": [[140, "instructing-llms-to-match-tone"]], "Integer array indexing": [[152, "integer-array-indexing"]], "Interacting with APIs": [[117, "interacting-with-apis"]], "Interactive widget to create a sequential cubehelix palette:": [[189, "interactive-widget-to-create-a-sequential-cubehelix-palette"]], "Interesting User Feedback (Persona: Investor):": [[137, "interesting-user-feedback-persona-investor"], [138, "interesting-user-feedback-persona-investor"]], "Intermediate Level": [[209, "intermediate-level"]], "Interpreter Vs Compiler": [[98, "interpreter-vs-compiler"]], "Introduction": [[120, "introduction"]], "Introduction to *args and **kwargs in Python": [[40, "introduction-to-args-and-kwargs-in-python"]], "Introduction to HuggingFace": [[114, "introduction-to-huggingface"]], "Introduction to Machine Learning! \ud83d\ude80": [[0, "introduction-to-machine-learning"]], "Introduction to tensors": [[171, "introduction-to-tensors"]], "Iris Flowers": [[9, "iris-flowers"]], "Iterate Dictionary using for loop": [[47, "iterate-dictionary-using-for-loop"]], "Iterate List using for loop": [[47, "iterate-list-using-for-loop"]], "Iterate List using while loop": [[48, "iterate-list-using-while-loop"]], "Iterate Numbers using while loop": [[48, "iterate-numbers-using-while-loop"]], "Iterate Set using for loop": [[47, "iterate-set-using-for-loop"]], "Iterate String using for loop": [[47, "iterate-string-using-for-loop"]], "Iterate String using while loop": [[48, "iterate-string-using-while-loop"]], "Iterate Tuple using for loop": [[47, "iterate-tuple-using-for-loop"]], "Iterating Through a string": [[52, "iterating-through-a-string"]], "Iterating Through an Iterator": [[34, "iterating-through-an-iterator"]], "Iterative statements": [[42, "iterative-statements"]], "Iterators in Python": [[34, "iterators-in-python"]], "Java is both Compiled and Interpreted.": [[98, "java-is-both-compiled-and-interpreted"]], "Join/Combine": [[157, "join-combine"]], "Jupyter Demos": [[1, "jupyter-demos"], [3, "jupyter-demos"], [4, "jupyter-demos"], [5, "jupyter-demos"], [7, "jupyter-demos"]], "K-Means Algorithm": [[3, "k-means-algorithm"]], "K-Means Algorithm Demo": [[10, "k-means-algorithm-demo"]], "KEY DIFFERENCE": [[98, "key-difference"]], "KEY SIMILARITIES": [[98, "key-similarities"]], "Key Points to Remember": [[57, "key-points-to-remember"], [93, "key-points-to-remember"]], "Key Points to Remember:": [[101, "key-points-to-remember"]], "Kor Hello World Example": [[138, "kor-hello-world-example"]], "LM Plot and Reg Plot": [[190, "lm-plot-and-reg-plot"]], "Lambda Function": [[57, "lambda-function"]], "LangChain Components": [[116, "langchain-components"]], "LangChain Cookbook Part 2: Use Cases\ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73": [[117, "langchain-cookbook-part-2-use-cases"]], "LangChain Cookbook \ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73": [[116, "langchain-cookbook"]], "LangChain Magic": [[141, "langchain-magic"]], "LangChain Support For Functions": [[139, "langchain-support-for-functions"]], "LangChain Use Cases": [[117, "langchain-use-cases"]], "LangGraphs": [[123, "langgraphs"]], "LangServe": [[124, "langserve"]], "LangSmith": [[125, "langsmith"]], "Langchain": [[122, "langchain"]], "Langchain expression language": [[126, "langchain-expression-language"]], "Langchain modules": [[121, "langchain-modules"]], "Langchain projects gallery": [[122, "langchain-projects-gallery"], [146, "langchain-projects-gallery"]], "Language Model": [[116, "language-model"]], "Learn Python Programming": [[22, "learn-python-programming"]], "Let us see valid variable names": [[90, "let-us-see-valid-variable-names"]], "Letter Value (LV) Plot": [[200, "letter-value-lv-plot"]], "Let\u2019s break down the different components of the code.": [[87, "lets-break-down-the-different-components-of-the-code"]], "Let\u2019s discuss some plots that allow us to visualize the distribution of a dataset. These plots are:": [[193, "lets-discuss-some-plots-that-allow-us-to-visualize-the-distribution-of-a-dataset-these-plots-are"]], "Let\u2019s implement with dataset": [[193, "lets-implement-with-dataset"]], "Level 1: Basic Prompt - Summarize a couple sentences": [[132, "level-1-basic-prompt-summarize-a-couple-sentences"]], "Level 2: Prompt Templates - Summarize a couple paragraphs": [[132, "level-2-prompt-templates-summarize-a-couple-paragraphs"]], "Level 3: Map Reduce - Summarize a couple pages multiple pages": [[132, "level-3-map-reduce-summarize-a-couple-pages-multiple-pages"]], "Level 4: Best Representation Vectors - Summarize an entire book": [[132, "level-4-best-representation-vectors-summarize-an-entire-book"]], "Level 5: Agents - Summarize an unknown amount of text": [[132, "level-5-agents-summarize-an-unknown-amount-of-text"]], "Line Graph": [[147, "line-graph"]], "Linear Algebra": [[26, "linear-algebra"]], "Linear Algebra - Matrices": [[31, "linear-algebra-matrices"]], "Linear Algebra - Vectors": [[32, "linear-algebra-vectors"]], "Linear Regression": [[4, "linear-regression"]], "Linspace": [[154, "linspace"]], "List Comprehension vs String vs For Loop in Python": [[57, "list-comprehension-vs-string-vs-for-loop-in-python"]], "List Comprehension: Elegant way to create new List": [[53, "list-comprehension-elegant-way-to-create-new-list"]], "List Comprehensions vs Lambda functions": [[57, "list-comprehensions-vs-lambda-functions"]], "List Directories and Files listdir() -": [[69, "list-directories-and-files-listdir"]], "List Index": [[53, "list-index"]], "List comprehension can be combined with if statement": [[57, "list-comprehension-can-be-combined-with-if-statement"]], "List of Tools": [[127, "list-of-tools"]], "Literal Collections": [[91, "literal-collections"]], "Load Data from File": [[154, "load-data-from-file"]], "Load Documents": [[130, "load-documents"]], "Load Fifa Data": [[147, "load-fifa-data"]], "Load Necessary Libraries": [[147, "load-necessary-libraries"]], "Load Your LLM": [[130, "load-your-llm"]], "Load in NumPy Library": [[151, "load-in-numpy-library"]], "Load in the best model and make predictions with it": [[178, "load-in-the-best-model-and-make-predictions-with-it"]], "Load the Data": [[8, "load-the-data"], [10, "load-the-data"], [11, "load-the-data"], [12, "load-the-data"], [13, "load-the-data"], [14, "load-the-data"], [15, "load-the-data"], [16, "load-the-data"], [17, "load-the-data"], [18, "load-the-data"], [19, "load-the-data"]], "Load up our texts and documents": [[133, "load-up-our-texts-and-documents"]], "Load up your HTML from your company page": [[141, "load-up-your-html-from-your-company-page"]], "Load your data": [[134, "load-your-data"]], "Loading Datasets in Seaborn": [[186, "loading-datasets-in-seaborn"]], "Loading a saved PyTorch model\u2019s state_dict()": [[172, "loading-a-saved-pytorch-models-state-dict"]], "Loading data into Pandas": [[168, "loading-data-into-pandas"]], "Loading in a custom image with PyTorch": [[175, "loading-in-a-custom-image-with-pytorch"]], "Local Variables": [[75, "local-variables"]], "LogSpace": [[154, "logspace"]], "Logistic Regression": [[5, "logistic-regression"]], "Logistic Regression With Linear Boundary Demo": [[14, "logistic-regression-with-linear-boundary-demo"]], "Logistic Regression With Non-Linear Boundary Demo": [[15, "logistic-regression-with-non-linear-boundary-demo"]], "Loops in Python": [[47, "loops-in-python"], [48, "loops-in-python"]], "MACHINE CODE": [[98, "machine-code"]], "MNIST (Handwritten Digits)": [[9, "mnist-handwritten-digits"]], "Main Use Cases": [[117, "main-use-cases"]], "Main takeaways": [[175, "main-takeaways"], [177, "main-takeaways"], [178, "main-takeaways"], [179, "main-takeaways"], [180, "main-takeaways"]], "Make a prediction on a custom image": [[175, "make-a-prediction-on-a-custom-image"]], "Make and evaluate random predictions with best model": [[174, "make-and-evaluate-random-predictions-with-best-model"]], "Make classification data and get it ready": [[173, "make-classification-data-and-get-it-ready"]], "Make predictions and evaluate the model": [[173, "make-predictions-and-evaluate-the-model"]], "Make predictions and get Model 0 results": [[174, "make-predictions-and-get-model-0-results"]], "Make predictions on a custom image": [[179, "make-predictions-on-a-custom-image"]], "Make predictions on images from the test set": [[177, "make-predictions-on-images-from-the-test-set"]], "Making a New Directory mkdir() -": [[69, "making-a-new-directory-mkdir"]], "Making a confusion matrix for further prediction evaluation": [[174, "making-a-confusion-matrix-for-further-prediction-evaluation"]], "Making a model (TinyVGG)": [[181, "making-a-model-tinyvgg"], [182, "making-a-model-tinyvgg"]], "Making a model (TinyVGG) (script mode)": [[182, "making-a-model-tinyvgg-script-mode"]], "Making a model (model_builder.py)": [[176, "making-a-model-model-builder-py"]], "Making and evaluating predictions with a PyTorch multi-class model": [[173, "making-and-evaluating-predictions-with-a-pytorch-multi-class-model"]], "Making and timing predictions with EffNetB2": [[180, "making-and-timing-predictions-with-effnetb2"]], "Making and timing predictions with ViT": [[180, "making-and-timing-predictions-with-vit"]], "Making changes to the data": [[168, "making-changes-to-the-data"]], "Making predictions": [[172, "making-predictions"]], "Making predictions on a custom image": [[177, "making-predictions-on-a-custom-image"]], "Making predictions using torch.inference_mode()": [[172, "making-predictions-using-torch-inference-mode"]], "Making predictions with a trained PyTorch model (inference)": [[172, "making-predictions-with-a-trained-pytorch-model-inference"]], "Making predictions with our trained models and timing them": [[180, "making-predictions-with-our-trained-models-and-timing-them"]], "Manhattan Distance": [[30, "manhattan-distance"]], "Manipulating tensors (tensor operations)": [[171, "manipulating-tensors-tensor-operations"]], "Markdown + notebooks": [[25, "markdown-notebooks"], [107, "markdown-notebooks"], [111, "markdown-notebooks"]], "Markdown Files": [[20, "markdown-files"], [108, "markdown-files"], [112, "markdown-files"]], "Match object": [[39, "match-object"]], "Mathematics": [[150, "mathematics"]], "Mathematics essentials": [[33, "mathematics-essentials"]], "Mathematics for Machine Learning": [[23, "mathematics-for-machine-learning"]], "Matplotlib": [[147, "matplotlib"]], "Matplotlib vs. Seaborn Plotting Code": [[188, "matplotlib-vs-seaborn-plotting-code"]], "Matrices": [[171, "matrices"]], "Matrix Multiplication": [[153, "matrix-multiplication"]], "Matrix addition": [[31, "matrix-addition"]], "Matrix determinant": [[31, "matrix-determinant"]], "Matrix inverse": [[31, "matrix-inverse"]], "Matrix multiplication": [[31, "matrix-multiplication"]], "Matrix multiplication (is all you need)": [[171, "matrix-multiplication-is-all-you-need"]], "Matrix operations": [[31, "matrix-operations"]], "Matrix subtraction": [[31, "matrix-subtraction"]], "Matrix transpose": [[31, "matrix-transpose"]], "Memory": [[116, "memory"]], "MetaCharacters": [[39, "metacharacters"]], "Metadata info of DataFrame": [[157, "metadata-info-of-dataframe"]], "Method #1: Simple - Describe the tone you would like": [[140, "method-1-simple-describe-the-tone-you-would-like"]], "Method #2: Intermediate - Specify your tone description + examples": [[140, "method-2-intermediate-specify-your-tone-description-examples"]], "Method #3: AI-Assisted: Ask the LLM help with tone descriptions": [[140, "method-3-ai-assisted-ask-the-llm-help-with-tone-descriptions"]], "Method 4 - Technique Fusion: Combine multiple techniques to mimic tone": [[140, "method-4-technique-fusion-combine-multiple-techniques-to-mimic-tone"]], "Method Overriding": [[103, "method-overriding"]], "Method Resolution Order in Python": [[103, "method-resolution-order-in-python"]], "Method to Modify Class Default Values": [[101, "method-to-modify-class-default-values"]], "Microchips Tests (Artificial)": [[9, "microchips-tests-artificial"]], "Minkowski Distance": [[30, "minkowski-distance"]], "Miscellaneous": [[154, "miscellaneous"]], "Model 0: Build a baseline model": [[174, "model-0-build-a-baseline-model"]], "Model 0: TinyVGG without data augmentation": [[175, "model-0-tinyvgg-without-data-augmentation"]], "Model 1: Building a better model with non-linearity": [[174, "model-1-building-a-better-model-with-non-linearity"]], "Model 1: TinyVGG with Data Augmentation": [[175, "model-1-tinyvgg-with-data-augmentation"]], "Model 2: Building a Convolutional Neural Network (CNN)": [[174, "model-2-building-a-convolutional-neural-network-cnn"]], "Models - The interface to the AI brains": [[116, "models-the-interface-to-the-ai-brains"]], "Modify Object Properties": [[102, "modify-object-properties"]], "Modifying a set in Python": [[56, "modifying-a-set-in-python"]], "More": [[150, "more"], [150, "id2"]], "More classification evaluation metrics": [[173, "more-classification-evaluation-metrics"]], "Moving our trained EffNetB2 model to our FoodVision Mini demo directory": [[180, "moving-our-trained-effnetb2-model-to-our-foodvision-mini-demo-directory"]], "Multi-class Classification": [[7, "multi-class-classification"]], "Multi-class Classification (One-vs-All)": [[5, "multi-class-classification-one-vs-all"]], "Multi-line Docstrings in Python": [[84, "multi-line-docstrings-in-python"]], "Multi-line statement": [[89, "multi-line-statement"]], "MultiQuery": [[133, "multiquery"]], "Multidimensional": [[28, "multidimensional"], [29, "multidimensional"]], "Multiple Fields": [[138, "multiple-fields"]], "Multiple Results": [[137, "multiple-results"]], "Multithreading in Python": [[66, "multithreading-in-python"]], "Multivariate Linear Regression Demo": [[11, "multivariate-linear-regression-demo"]], "Multivariate Logistic Regression Demo": [[16, "multivariate-logistic-regression-demo"], [17, "multivariate-logistic-regression-demo"]], "My workflow": [[176, "my-workflow"]], "My workflow for replicating papers": [[179, "my-workflow-for-replicating-papers"]], "MyST markdown": [[25, "myst-markdown"], [107, "myst-markdown"], [111, "myst-markdown"]], "Need of Encapsulation": [[101, "need-of-encapsulation"]], "Negative indexing": [[53, "negative-indexing"]], "Nested Loops in List Comprehension": [[57, "nested-loops-in-list-comprehension"]], "Nested break loops": [[49, "nested-break-loops"]], "Nested continue loops": [[49, "nested-continue-loops"]], "Nested for loops": [[47, "nested-for-loops"]], "Nested while loops": [[48, "nested-while-loops"]], "Network Model (Set of Neurons)": [[7, "network-model-set-of-neurons"]], "Neural Network": [[7, "neural-network"]], "Neural Network (Multilayer Perceptron) Demo": [[18, "neural-network-multilayer-perceptron-demo"], [19, "neural-network-multilayer-perceptron-demo"]], "Neuron Model (Logistic Unit)": [[7, "neuron-model-logistic-unit"]], "Non-Linear Y(X) Dependency (Artificial)": [[9, "non-linear-y-x-dependency-artificial"]], "Non-linear Regression Demo": [[12, "non-linear-regression-demo"]], "Nonlocal Variables": [[75, "nonlocal-variables"]], "Nonlocal variable in a nested function": [[36, "nonlocal-variable-in-a-nested-function"]], "Normal Equation": [[4, "normal-equation"]], "Notebooks with MyST Markdown": [[6, "notebooks-with-myst-markdown"], [109, "notebooks-with-myst-markdown"], [207, "notebooks-with-myst-markdown"]], "NumPy Array Types:": [[151, "numpy-array-types"]], "NumPy Basics": [[150, "numpy-basics"], [150, "id1"]], "Number Data Type in Python": [[51, "number-data-type-in-python"]], "Numpy Array basics": [[151, "numpy-array-basics"]], "Numpy Documentation": [[154, "numpy-documentation"]], "Numpy also provides many functions to create arrays:": [[151, "numpy-also-provides-many-functions-to-create-arrays"]], "OBJECT CODE": [[98, "object-code"]], "Object": [[101, "object"]], "Object Default Methods": [[101, "object-default-methods"]], "Object Method": [[101, "object-method"]], "Object Oriented Programming": [[101, "object-oriented-programming"]], "Object Properties": [[102, "object-properties"]], "Old style formatting": [[52, "old-style-formatting"]], "One of the most common errors in deep learning (shape errors)": [[171, "one-of-the-most-common-errors-in-deep-learning-shape-errors"]], "One or more times +": [[39, "one-or-more-times"]], "OpenAI Vanilla Example": [[139, "openai-vanilla-example"]], "Opening Attributes - Real World Example": [[137, "opening-attributes-real-world-example"], [138, "opening-attributes-real-world-example"]], "Operations": [[150, "operations"]], "Option #1: Chroma (for local)": [[134, "option-1-chroma-for-local"]], "Option #1: Pinecone": [[143, "option-1-pinecone"]], "Option #2: Chroma": [[143, "option-2-chroma"]], "Option #2: Pinecone (for cloud)": [[134, "option-2-pinecone-for-cloud"]], "Option 1: Loading Image Data Using ImageFolder": [[175, "option-1-loading-image-data-using-imagefolder"]], "Option 2: Loading Image Data with a Custom Dataset": [[175, "option-2-loading-image-data-with-a-custom-dataset"]], "Orthogonality and Parallelism": [[32, "orthogonality-and-parallelism"]], "Other Dictionary Operations": [[55, "other-dictionary-operations"]], "Other Frozenset methods": [[56, "other-frozenset-methods"]], "Other List Operations in Python": [[53, "other-list-operations-in-python"]], "Other Python Set Methods": [[56, "other-python-set-methods"]], "Other Set Operations": [[56, "other-set-operations"]], "Other Tuple Operations": [[54, "other-tuple-operations"]], "Other forms of transforms (data augmentation)": [[175, "other-forms-of-transforms-data-augmentation"]], "Other topics": [[122, "other-topics"]], "Output Parsers Method 1: Prompt Instructions & String Parsing": [[116, "output-parsers-method-1-prompt-instructions-string-parsing"]], "Output Parsers Method 2: OpenAI Fuctions": [[116, "output-parsers-method-2-openai-fuctions"]], "Output String justification": [[94, "output-string-justification"]], "Output formatting": [[94, "output-formatting"]], "Output text alignment specifying a width": [[94, "output-text-alignment-specifying-a-width"]], "Overfitting Problem": [[4, "overfitting-problem"], [5, "overfitting-problem"]], "Overloading Comparison Operators": [[104, "overloading-comparison-operators"]], "Overloading the + Operator": [[104, "overloading-the-operator"]], "Overriding parent method": [[101, "overriding-parent-method"]], "Package manager and virtual environment": [[24, "package-manager-and-virtual-environment"]], "Packing": [[71, "packing"]], "Packing Dictionaries": [[71, "packing-dictionaries"]], "Packing Lists": [[71, "packing-lists"]], "Packing and Unpacking Arguments in Python": [[71, "packing-and-unpacking-arguments-in-python"]], "PairGrid": [[201, "pairgrid"]], "Pandas DataFrame head, tail, at, iat": [[160, "pandas-dataframe-head-tail-at-iat"]], "Parameters": [[4, "parameters"]], "Parameters:": [[157, "parameters"]], "Parent Document Retriever": [[133, "parent-document-retriever"]], "Part 1: with Iris dataset": [[201, "part-1-with-iris-dataset"]], "Part 1: with Tips dataset": [[201, "part-1-with-tips-dataset"]], "Part 1: with Titanic dataset": [[198, "part-1-with-titanic-dataset"]], "Part 2: with Tips dataset": [[198, "part-2-with-tips-dataset"]], "Partial Ratio": [[119, "partial-ratio"]], "Partial Token Sort Ratio": [[119, "partial-token-sort-ratio"]], "Pass the tweets as examples": [[140, "pass-the-tweets-as-examples"]], "Passing Arguments with Key and Value": [[74, "passing-arguments-with-key-and-value"]], "Performance-speed tradeoff": [[174, "performance-speed-tradeoff"]], "Period .": [[39, "id3"]], "Personalized email generation": [[141, "personalized-email-generation"]], "Pie Chart": [[147, "pie-chart"]], "Pie Chart #1": [[147, "pie-chart-1"]], "Pie Chart #2": [[147, "pie-chart-2"]], "Pie Chart #3": [[147, "pie-chart-3"]], "Placeholders": [[150, "placeholders"]], "Plot Precision/Recall Progress": [[8, "plot-precision-recall-progress"]], "Plot Test Dataset Predictions": [[16, "plot-test-dataset-predictions"], [17, "plot-test-dataset-predictions"], [18, "plot-test-dataset-predictions"], [19, "plot-test-dataset-predictions"]], "Plot feature extractor ViT model loss curves": [[179, "plot-feature-extractor-vit-model-loss-curves"]], "Plot the Clustering Results": [[10, "plot-the-clustering-results"]], "Plot the Data": [[8, "plot-the-data"], [10, "plot-the-data"], [12, "plot-the-data"], [14, "plot-the-data"], [15, "plot-the-data"], [16, "plot-the-data"], [17, "plot-the-data"], [18, "plot-the-data"], [19, "plot-the-data"]], "Plot the Model Predictions": [[11, "plot-the-model-predictions"], [12, "plot-the-model-predictions"], [13, "plot-the-model-predictions"]], "Plot the distribution on the vertical axis:": [[193, "plot-the-distribution-on-the-vertical-axis"]], "Plot the loss curves of Model 0": [[175, "plot-the-loss-curves-of-model-0"]], "Plot the loss curves of Model 1": [[175, "plot-the-loss-curves-of-model-1"]], "Plot the loss curves of our ViT model": [[179, "plot-the-loss-curves-of-our-vit-model"]], "Polymorphism": [[101, "polymorphism"]], "Polynomial Regression": [[4, "polynomial-regression"]], "Positional Arguments (Basic)": [[77, "positional-arguments-basic"]], "Positional min/max": [[171, "positional-min-max"]], "Practice Problem": [[94, "practice-problem"]], "Predict on a custom image with the best model": [[178, "predict-on-a-custom-image-with-the-best-model"]], "Predicting on custom images with a trained PyTorch model": [[175, "predicting-on-custom-images-with-a-trained-pytorch-model"]], "Prepara the Data for Training": [[10, "prepara-the-data-for-training"], [14, "prepara-the-data-for-training"]], "Prepare DataLoader": [[174, "prepare-dataloader"]], "Prepare the Data for Training": [[15, "prepare-the-data-for-training"]], "Prepare transforms for images": [[179, "prepare-transforms-for-images"]], "Preparing data for the pretrained ViT model": [[179, "preparing-data-for-the-pretrained-vit-model"]], "Preparing data to see if our model can model a straight line": [[173, "preparing-data-to-see-if-our-model-can-model-a-straight-line"]], "Prerequisites for learning decorators": [[37, "prerequisites-for-learning-decorators"]], "Print Training Results": [[16, "print-training-results"], [17, "print-training-results"]], "Print end command": [[87, "print-end-command"]], "Private members of parent class": [[103, "private-members-of-parent-class"]], "Process": [[119, "process"]], "Product notation": [[28, "product-notation"]], "Programming Steps Comparision:": [[98, "programming-steps-comparision"]], "Prompt": [[116, "prompt"]], "Prompt Template": [[116, "prompt-template"]], "Prompt Templates": [[131, "prompt-templates"]], "Promptless changes": [[145, "promptless-changes"]], "Prompts - Text generally used as instructions to your model": [[116, "prompts-text-generally-used-as-instructions-to-your-model"]], "Properties": [[28, "properties"], [29, "properties"]], "Properties of identity matrix": [[31, "properties-of-identity-matrix"]], "Properties of matrix addition": [[31, "properties-of-matrix-addition"]], "Properties of matrix determinant": [[31, "properties-of-matrix-determinant"]], "Properties of matrix multiplication": [[31, "properties-of-matrix-multiplication"]], "Properties of matrix subtraction": [[31, "properties-of-matrix-subtraction"]], "Properties of matrix transpose": [[31, "properties-of-matrix-transpose"]], "Properties of scalar multiplication": [[31, "properties-of-scalar-multiplication"]], "Pros and cons of notebooks vs Python scripts": [[176, "pros-and-cons-of-notebooks-vs-python-scripts"]], "Pulling Data From Twitter": [[144, "pulling-data-from-twitter"]], "Pulling Data From Websites": [[144, "pulling-data-from-websites"]], "Pulling Data From YouTube": [[144, "pulling-data-from-youtube"]], "Putting custom image prediction together: building a function": [[175, "putting-custom-image-prediction-together-building-a-function"]], "Putting it all together": [[172, "putting-it-all-together"]], "Putting it all together to create ViT": [[179, "putting-it-all-together-to-create-vit"]], "Putting it all together: from image to embedding": [[179, "putting-it-all-together-from-image-to-embedding"]], "Putting things together by building a multi-class PyTorch model": [[173, "putting-things-together-by-building-a-multi-class-pytorch-model"]], "PyTorch Computer Vision": [[174, "pytorch-computer-vision"]], "PyTorch Custom Datasets": [[175, "pytorch-custom-datasets"]], "PyTorch Experiment Tracking": [[178, "pytorch-experiment-tracking"]], "PyTorch Fundamentals": [[171, "pytorch-fundamentals"]], "PyTorch Going Modular": [[176, "pytorch-going-modular"]], "PyTorch Model Deployment": [[180, "pytorch-model-deployment"]], "PyTorch Neural Network Classification": [[173, "pytorch-neural-network-classification"]], "PyTorch Paper Replicating": [[179, "pytorch-paper-replicating"]], "PyTorch Transfer Learning": [[177, "pytorch-transfer-learning"]], "PyTorch Workflow Fundamentals": [[172, "pytorch-workflow-fundamentals"]], "PyTorch in the wild": [[176, "pytorch-in-the-wild"], [182, "pytorch-in-the-wild"]], "PyTorch model building essentials": [[172, "pytorch-model-building-essentials"]], "PyTorch tensors & NumPy": [[171, "pytorch-tensors-numpy"]], "PyTorch testing loop": [[172, "pytorch-testing-loop"]], "PyTorch training loop": [[172, "pytorch-training-loop"]], "Pydantic Model": [[137, "pydantic-model"]], "Python  Classes and Objects": [[102, "python-classes-and-objects"]], "Python **kwargs": [[40, "python-kwargs"]], "Python *args": [[40, "python-args"]], "Python *args and **kwargs": [[40, "python-args-and-kwargs"]], "Python - filter Function": [[37, "python-filter-function"]], "Python - map Function": [[37, "python-map-function"]], "Python @property decorator": [[38, "python-property-decorator"]], "Python Advanced Topics": [[22, "python-advanced-topics"], [41, "python-advanced-topics"]], "Python Anonymous/lambda Function": [[79, "python-anonymous-lambda-function"]], "Python Applications Area": [[24, "python-applications-area"]], "Python Arbitrary/Variable-length Arguments": [[77, "python-arbitrary-variable-length-arguments"]], "Python Built-In Modules Examples": [[80, "python-built-in-modules-examples"]], "Python Built-in Exceptions": [[70, "python-built-in-exceptions"]], "Python Built-in List Functions": [[53, "python-built-in-list-functions"]], "Python Built-in Tuple Functions": [[54, "python-built-in-tuple-functions"]], "Python Classes and Objects": [[102, "id1"]], "Python Closures": [[36, "python-closures"]], "Python Comments": [[84, "python-comments"]], "Python Comments Using Strings": [[84, "python-comments-using-strings"]], "Python Comments vs Docstrings": [[84, "python-comments-vs-docstrings"]], "Python Custom Exceptions": [[72, "python-custom-exceptions"]], "Python Data Types": [[22, "python-data-types"], [58, "python-data-types"], [92, "python-data-types"]], "Python DataFrame": [[157, "python-dataframe"]], "Python Date & Time Module": [[22, "python-date-time-module"], [67, "python-date-time-module"]], "Python Decimal": [[51, "python-decimal"]], "Python Decorators": [[37, "python-decorators"]], "Python Default Arguments": [[77, "python-default-arguments"]], "Python Dictionary": [[55, "python-dictionary"]], "Python Dictionary Comprehension": [[55, "python-dictionary-comprehension"]], "Python Dictionary Methods": [[55, "python-dictionary-methods"]], "Python Directory": [[69, "python-directory"]], "Python Directory and Files Management": [[69, "python-directory-and-files-management"]], "Python Docstrings": [[84, "python-docstrings"]], "Python Errors and Built-in Exceptions": [[70, "python-errors-and-built-in-exceptions"]], "Python Exceptions Handling Using try, except and finally statement": [[71, "python-exceptions-handling-using-try-except-and-finally-statement"]], "Python File I/O": [[68, "python-file-i-o"]], "Python File Methods": [[68, "python-file-methods"]], "Python Files": [[22, "python-files"], [73, "python-files"]], "Python Flow Control": [[22, "python-flow-control"], [50, "python-flow-control"]], "Python Flow-Control (Decision-Making) Statements": [[42, "python-flow-control-decision-making-statements"]], "Python Fractions": [[51, "python-fractions"]], "Python Frozenset": [[56, "python-frozenset"]], "Python Function Arguments": [[77, "python-function-arguments"]], "Python Functions": [[22, "python-functions"], [74, "python-functions"], [86, "python-functions"]], "Python Generator Expression": [[35, "python-generator-expression"]], "Python Generators with a Loop": [[35, "python-generators-with-a-loop"]], "Python Get Current time": [[63, "python-get-current-time"]], "Python Global, Local and Nonlocal variables": [[75, "python-global-local-and-nonlocal-variables"]], "Python Hello, World": [[87, "python-hello-world"]], "Python Infinite Iterators": [[34, "python-infinite-iterators"]], "Python Inheritance": [[103, "python-inheritance"]], "Python Input, Output and Import": [[94, "python-input-output-and-import"]], "Python Installation": [[24, "python-installation"]], "Python Introduction": [[22, "python-introduction"], [100, "python-introduction"]], "Python Iterators": [[34, "python-iterators"]], "Python Keyword Arguments": [[77, "python-keyword-arguments"]], "Python Keywords and Identifiers": [[88, "python-keywords-and-identifiers"]], "Python List": [[53, "python-list"]], "Python List Comprehension": [[57, "python-list-comprehension"]], "Python List Methods": [[53, "python-list-methods"]], "Python List Operations": [[53, "python-list-operations"]], "Python Literals": [[91, "python-literals"]], "Python Mathematical Functions": [[82, "python-mathematical-functions"]], "Python Mathematics": [[51, "python-mathematics"]], "Python Matplotlib": [[148, "python-matplotlib"], [149, "python-matplotlib"]], "Python Matplotlib Module": [[22, "python-matplotlib-module"]], "Python Module Search Path": [[80, "python-module-search-path"]], "Python Modules": [[80, "python-modules"]], "Python Modules List": [[80, "python-modules-list"]], "Python Multilevel Inheritance": [[103, "python-multilevel-inheritance"]], "Python Multiple Inheritance": [[103, "python-multiple-inheritance"]], "Python Namespace and Scope": [[96, "python-namespace-and-scope"]], "Python Nested if statement": [[46, "python-nested-if-statement"]], "Python NumPy": [[150, "python-numpy"]], "Python NumPy Array:": [[150, "python-numpy-array"], [151, "python-numpy-array"]], "Python NumPy Exercises": [[155, "python-numpy-exercises"]], "Python Numbers, Type Conversion and Mathematics": [[51, "python-numbers-type-conversion-and-mathematics"]], "Python Numpy Module": [[22, "python-numpy-module"], [156, "python-numpy-module"]], "Python OOPs Concepts": [[101, "python-oops-concepts"]], "Python Object Class": [[22, "python-object-class"], [105, "python-object-class"]], "Python Operator Overloading": [[104, "python-operator-overloading"], [104, "id1"]], "Python Operators": [[95, "python-operators"]], "Python Package": [[83, "python-package"]], "Python Pandas": [[157, "python-pandas"], [168, "python-pandas"], [169, "python-pandas"]], "Python Pandas Module": [[22, "python-pandas-module"], [170, "python-pandas-module"]], "Python Python Generators": [[35, "python-python-generators"]], "Python Random Module": [[81, "python-random-module"]], "Python Recursion": [[78, "python-recursion"]], "Python Recursive Function": [[78, "python-recursive-function"]], "Python RegEx": [[39, "python-regex"]], "Python RegEx Methods": [[39, "python-regex-methods"]], "Python Resources": [[22, "python-resources"]], "Python Seaborn": [[205, "python-seaborn"]], "Python Set Operations": [[56, "python-set-operations"]], "Python Sets": [[56, "python-sets"]], "Python Single Inheritance": [[103, "python-single-inheritance"]], "Python Special Functions": [[104, "python-special-functions"]], "Python Statement, Indentation and Comments": [[89, "python-statement-indentation-and-comments"]], "Python String Formatting": [[52, "python-string-formatting"]], "Python String Replication Operator (*)": [[52, "python-string-replication-operator"]], "Python Strings": [[24, "python-strings"], [52, "python-strings"]], "Python Strings Operations": [[52, "python-strings-operations"]], "Python Tuple": [[54, "python-tuple"]], "Python Type Conversion and Type Casting": [[93, "python-type-conversion-and-type-casting"]], "Python User-defined Functions": [[85, "python-user-defined-functions"]], "Python Variable Scope": [[96, "python-variable-scope"]], "Python Variables and Constants": [[90, "python-variables-and-constants"]], "Python __doc__ attribute": [[84, "python-doc-attribute"]], "Python datetime": [[59, "python-datetime"]], "Python docstrings": [[84, "id1"]], "Python for Loop": [[47, "python-for-loop"]], "Python format datetime": [[59, "python-format-datetime"]], "Python from-import statement": [[80, "python-from-import-statement"]], "Python global Keyword": [[76, "python-global-keyword"]], "Python if statement": [[43, "python-if-statement"]], "Python if-elif-else statement": [[45, "python-if-elif-else-statement"]], "Python if-else statement": [[44, "python-if-else-statement"]], "Python import statement": [[80, "python-import-statement"]], "Python lists": [[24, "python-lists"]], "Python sleep()": [[66, "python-sleep"]], "Python strftime()": [[60, "python-strftime"]], "Python strftime() - datetime object to string": [[59, "python-strftime-datetime-object-to-string"]], "Python strptime()": [[61, "python-strptime"]], "Python strptime() - string to datetime": [[59, "python-strptime-string-to-datetime"]], "Python super() function": [[103, "python-super-function"]], "Python time Module": [[65, "python-time-module"]], "Python time.asctime()": [[65, "python-time-asctime"]], "Python time.ctime()": [[65, "python-time-ctime"]], "Python time.gmtime()": [[65, "python-time-gmtime"]], "Python time.localtime()": [[65, "python-time-localtime"]], "Python time.mktime()": [[65, "python-time-mktime"]], "Python time.sleep()": [[65, "python-time-sleep"]], "Python time.strftime()": [[65, "python-time-strftime"]], "Python time.strptime()": [[65, "python-time-strptime"]], "Python time.time()": [[65, "python-time-time"]], "Python timestamp to datetime and vice-versa": [[64, "python-timestamp-to-datetime-and-vice-versa"]], "Python try with else clause": [[71, "python-try-with-else-clause"]], "Python try-finally Clause": [[71, "python-try-finally-clause"]], "Python while Loop": [[48, "python-while-loop"]], "Pytorch": [[185, "pytorch"]], "Q&A: Map Re-Rank": [[130, "q-a-map-re-rank"]], "Quantifier {}": [[39, "quantifier"]], "Query those docs to get your answer back": [[134, "query-those-docs-to-get-your-answer-back"]], "Querying Tabular Data": [[117, "querying-tabular-data"]], "Question & Answering Using Documents As Context": [[117, "question-answering-using-documents-as-context"]], "Quickly add YAML metadata for MyST Notebooks": [[6, "quickly-add-yaml-metadata-for-myst-notebooks"], [109, "quickly-add-yaml-metadata-for-myst-notebooks"], [207, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Quiz time": [[152, "quiz-time"]], "Raise error while renaming a column": [[164, "raise-error-while-renaming-a-column"]], "Raising Exceptions in Python": [[71, "raising-exceptions-in-python"]], "Raising an Exception": [[71, "raising-an-exception"]], "Random Initialization": [[7, "random-initialization"]], "Random number": [[151, "random-number"]], "Random tensors": [[171, "random-tensors"]], "Raw String to ignore escape sequence": [[52, "raw-string-to-ignore-escape-sequence"]], "Reading Data in Pandas": [[168, "reading-data-in-pandas"]], "Real World Examples": [[147, "real-world-examples"]], "Real world use cases": [[210, "real-world-use-cases"]], "Recreating non-linear data (red and blue circles)": [[173, "recreating-non-linear-data-red-and-blue-circles"]], "References": [[1, "references"], [3, "references"], [4, "references"], [5, "references"], [7, "references"]], "Regularization": [[4, "regularization"], [5, "regularization"]], "Reloading a module": [[80, "reloading-a-module"]], "Removing a Directory or a File remove() and rmdir() -": [[69, "removing-a-directory-or-a-file-remove-and-rmdir"]], "Removing elements from Dictionary": [[55, "removing-elements-from-dictionary"]], "Removing elements from a set": [[56, "removing-elements-from-a-set"]], "Rename a single column": [[164, "rename-a-single-column"]], "Rename all columns with a list": [[164, "rename-all-columns-with-a-list"]], "Rename column by adding prefix/suffix": [[164, "rename-column-by-adding-prefix-suffix"]], "Rename column by index position": [[164, "rename-column-by-index-position"]], "Rename column in multi-index DataFrame": [[164, "rename-column-in-multi-index-dataframe"]], "Rename column using DataFrame.set_axis()": [[164, "rename-column-using-dataframe-set-axis"]], "Rename column using a function": [[164, "rename-column-using-a-function"]], "Rename columns by removing leading and trailing spaces": [[164, "rename-columns-by-removing-leading-and-trailing-spaces"]], "Rename columns in Pandas DataFrame": [[164, "rename-columns-in-pandas-dataframe"]], "Rename columns in all levels": [[164, "rename-columns-in-all-levels"]], "Rename columns in defined level": [[164, "rename-columns-in-defined-level"]], "Rename columns in place": [[164, "rename-columns-in-place"]], "Rename multiple columns": [[164, "rename-multiple-columns"]], "Renaming a Directory or a File rename() -": [[69, "renaming-a-directory-or-a-file-rename"]], "Replicating Equation 2 with PyTorch layers": [[179, "replicating-equation-2-with-pytorch-layers"]], "Replicating Equation 3 with PyTorch layers": [[179, "replicating-equation-3-with-pytorch-layers"]], "Replicating non-linear activation functions": [[173, "replicating-non-linear-activation-functions"]], "Replicating the ViT paper: an overview": [[179, "replicating-the-vit-paper-an-overview"]], "Requirements": [[119, "requirements"]], "Reset index and change column name": [[167, "reset-index-and-change-column-name"]], "Reset index and creates new column in level": [[167, "reset-index-and-creates-new-column-in-level"]], "Reset index and name other level": [[167, "reset-index-and-name-other-level"]], "Reset index by level": [[167, "reset-index-by-level"]], "Reset index in pandas DataFrame": [[167, "reset-index-in-pandas-dataframe"]], "Reset index in place": [[167, "reset-index-in-place"]], "Reset index starts from 1": [[167, "reset-index-starts-from-1"]], "Reset index to starts at 0": [[167, "reset-index-to-starts-at-0"]], "Reset index to the range of numbers": [[167, "reset-index-to-the-range-of-numbers"]], "Reset index without new column": [[167, "reset-index-without-new-column"]], "Reset multi-level index": [[167, "reset-multi-level-index"]], "Reshape Data": [[154, "reshape-data"]], "Reshaping, stacking, squeezing and unsqueezing": [[171, "reshaping-stacking-squeezing-and-unsqueezing"]], "Residplot()": [[192, "residplot"]], "Resources": [[149, "resources"], [156, "resources"], [170, "resources"], [185, "resources"], [205, "resources"]], "Retrievers": [[116, "retrievers"]], "Return Boolean Values": [[74, "return-boolean-values"]], "Return Multiple Values": [[74, "return-multiple-values"]], "Return Single Value": [[74, "return-single-value"]], "Return a List": [[74, "return-a-list"]], "Reverse for loop": [[47, "reverse-for-loop"]], "Reverse for loop using range()": [[47, "reverse-for-loop-using-range"]], "Reverse while loop": [[48, "reverse-while-loop"]], "Rinse and Repeat: Loop Through Companies": [[141, "rinse-and-repeat-loop-through-companies"]], "Rules and Naming Convention for Variables and constants": [[90, "rules-and-naming-convention-for-variables-and-constants"]], "Rules for writing identifiers": [[88, "rules-for-writing-identifiers"]], "Rules of global Keyword": [[76, "rules-of-global-keyword"]], "Running a notebook in cell mode": [[181, "running-a-notebook-in-cell-mode"]], "Running our FoodVision Mini demo locally": [[180, "running-our-foodvision-mini-demo-locally"]], "Running tensors on GPUs (and making faster computations)": [[171, "running-tensors-on-gpus-and-making-faster-computations"]], "Running the \u201cHello, World!\u201d Program": [[87, "running-the-hello-world-program"]], "Salary": [[138, "salary"]], "Sample Roles and Directives": [[108, "sample-roles-and-directives"], [112, "sample-roles-and-directives"]], "Save and load best performing model": [[174, "save-and-load-best-performing-model"]], "Save feature extractor ViT model and check file size": [[179, "save-feature-extractor-vit-model-and-check-file-size"]], "Saving EffNetB2 feature extractor": [[180, "saving-effnetb2-feature-extractor"]], "Saving ViT feature extractor": [[180, "saving-vit-feature-extractor"]], "Saving a PyTorch model\u2019s state_dict()": [[172, "saving-a-pytorch-models-state-dict"]], "Saving and loading a PyTorch model": [[172, "saving-and-loading-a-pytorch-model"]], "Saving and loading a model": [[172, "saving-and-loading-a-model"]], "Saving as JSON File": [[68, "saving-as-json-file"]], "Saving our Data (Exporting into Desired Format)": [[168, "saving-our-data-exporting-into-desired-format"]], "Scalar": [[171, "scalar"]], "Scalar multiplication": [[31, "scalar-multiplication"], [32, "scalar-multiplication"]], "Scatter Plot and Joint Plot": [[191, "scatter-plot-and-joint-plot"]], "Schema - Nuts and Bolts of working with Large Language Models (LLMs)": [[116, "schema-nuts-and-bolts-of-working-with-large-language-models-llms"]], "Seaborn Color Palettes": [[189, "seaborn-color-palettes"]], "Seaborn Lmplots:": [[190, "seaborn-lmplots"]], "Seaborn Regplots:": [[190, "seaborn-regplots"]], "Seaborn: Box Plot": [[196, "seaborn-box-plot"]], "Seaborn: Categorical Data Plots": [[194, "seaborn-categorical-data-plots"]], "Seaborn: Strip Plot": [[195, "seaborn-strip-plot"]], "Seaborn: Violin Plot": [[197, "seaborn-violin-plot"]], "Select best threshold": [[8, "select-best-threshold"]], "Select bottom n rows in pandas DataFrame": [[160, "select-bottom-n-rows-in-pandas-dataframe"]], "Select bottom rows except for first n rows": [[160, "select-bottom-rows-except-for-first-n-rows"]], "Select bottom rows from the multi index DataFrame": [[160, "select-bottom-rows-from-the-multi-index-dataframe"]], "Select top n rows in pandas DataFrame": [[160, "select-top-n-rows-in-pandas-dataframe"]], "Select top rows except for last n rows": [[160, "select-top-rows-except-for-last-n-rows"]], "Select top rows from multi-index DataFrames": [[160, "select-top-rows-from-multi-index-dataframes"]], "Select value using row and column labels using DataFrame.at": [[160, "select-value-using-row-and-column-labels-using-dataframe-at"]], "Select value using row and column position using DataFrame.iat": [[160, "select-value-using-row-and-column-position-using-dataframe-iat"]], "Selection": [[157, "selection"]], "Self Can Be Avoided": [[106, "self-can-be-avoided"]], "Self Is Here To Stay": [[106, "self-is-here-to-stay"]], "Self Querying": [[133, "self-querying"]], "Series": [[157, "series"]], "Server Operational Parameters": [[9, "server-operational-parameters"]], "Set Difference": [[56, "set-difference"]], "Set Intersection": [[56, "set-intersection"]], "Set Symmetric Difference": [[56, "set-symmetric-difference"]], "Set Union": [[56, "set-union"]], "Set index but keep column": [[166, "set-index-but-keep-column"]], "Set index by column number": [[166, "set-index-by-column-number"]], "Set index by keeping old index": [[166, "set-index-by-keeping-old-index"]], "Set index in pandas DataFrame": [[166, "set-index-in-pandas-dataframe"]], "Set index in place": [[166, "set-index-in-place"]], "Set index using a Python range": [[166, "set-index-using-a-python-range"]], "Set index using a column": [[166, "set-index-using-a-column"]], "Set index using a column with duplicates": [[166, "set-index-using-a-column-with-duplicates"]], "Set index using a list": [[166, "set-index-using-a-list"]], "Set index using multiple columns": [[166, "set-index-using-multiple-columns"]], "Set multi-index using a list and column": [[166, "set-multi-index-using-a-list-and-column"]], "Set multi-index using two Python series": [[166, "set-multi-index-using-two-python-series"]], "Set specific value in pandas DataFrame": [[160, "set-specific-value-in-pandas-dataframe"], [160, "id1"]], "Setting up a pretrained model": [[177, "setting-up-a-pretrained-model"]], "Setting up a series of modelling experiments": [[178, "setting-up-a-series-of-modelling-experiments"]], "Setting up training code for our ViT model": [[179, "setting-up-training-code-for-our-vit-model"]], "Setup a loss function and optimizer for model_2": [[174, "setup-a-loss-function-and-optimizer-for-model-2"]], "Setup device agnostic-code (for using a GPU if there is one)": [[174, "setup-device-agnostic-code-for-using-a-gpu-if-there-is-one"]], "Setup loss function and optimizer": [[173, "setup-loss-function-and-optimizer"]], "Setup loss, optimizer and evaluation metrics": [[174, "setup-loss-optimizer-and-evaluation-metrics"], [174, "id1"]], "Shortcut for if statement (Short-hand if or one-line if)": [[43, "shortcut-for-if-statement-short-hand-if-or-one-line-if"]], "Shortcut of if else (Short Hand if \u2026 else or One line if else)": [[44, "shortcut-of-if-else-short-hand-if-else-or-one-line-if-else"]], "Significance of random seeding": [[171, "significance-of-random-seeding"]], "Simple Q&A Example": [[117, "simple-q-a-example"]], "Simple Ratio": [[119, "simple-ratio"]], "Single Parameter:": [[74, "single-parameter"]], "Single-line docstrings in Python": [[84, "single-line-docstrings-in-python"]], "Slicing and Subsetting": [[150, "slicing-and-subsetting"]], "Solution to Overfitting": [[4, "solution-to-overfitting"], [5, "solution-to-overfitting"]], "Sorting/Describing Data": [[168, "sorting-describing-data"]], "Sources": [[136, "sources"]], "Special Sequences": [[39, "special-sequences"]], "Special literals": [[91, "special-literals"]], "Specify Pattern Using RegEx": [[39, "specify-pattern-using-regex"]], "Specifying a sign while displaying output numbers": [[94, "specifying-a-sign-while-displaying-output-numbers"]], "Split data into training and test sets": [[172, "split-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Sets": [[11, "split-the-data-into-training-and-test-sets"], [16, "split-the-data-into-training-and-test-sets"], [17, "split-the-data-into-training-and-test-sets"], [18, "split-the-data-into-training-and-test-sets"], [19, "split-the-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Subsets": [[13, "split-the-data-into-training-and-test-subsets"]], "Spreading in Python": [[71, "spreading-in-python"]], "Square Brackets []": [[39, "id2"]], "Statistics": [[154, "statistics"], [157, "statistics"]], "Step 1: Extract Topic Titles & Short Description": [[143, "step-1-extract-topic-titles-short-description"]], "Step 2: Expand on the topics you found": [[143, "step-2-expand-on-the-topics-you-found"]], "Stepping through nn.Conv2d()": [[174, "stepping-through-nn-conv2d"]], "Stepping through nn.MaxPool2d()": [[174, "stepping-through-nn-maxpool2d"]], "String Concatenation Operator (+)": [[52, "string-concatenation-operator"]], "Structured Data - Turn your LLM output into structured data": [[143, "structured-data-turn-your-llm-output-into-structured-data"]], "Summaries Of Longer Text": [[117, "summaries-of-longer-text"]], "Summaries Of Short Text": [[117, "summaries-of-short-text"]], "Summarization": [[117, "summarization"]], "Summarize: Map Reduce": [[130, "summarize-map-reduce"]], "Summarize: Refine": [[130, "summarize-refine"]], "Summarize: Stuff": [[130, "summarize-stuff"]], "Summary": [[52, "summary"], [53, "summary"], [54, "summary"], [55, "summary"], [56, "summary"], [157, "summary"]], "Summary - MetaCharacters": [[39, "summary-metacharacters"]], "Summary:": [[152, "summary"], [157, "id1"]], "Summation notation": [[29, "summation-notation"]], "Swarm Plot": [[194, "swarm-plot"], [195, "swarm-plot"]], "Syntax :": [[44, "syntax"], [47, "syntax"]], "Syntax of List Comprehension": [[57, "syntax-of-list-comprehension"]], "Syntax:": [[43, "syntax"], [45, "syntax"], [46, "syntax"], [48, "syntax"]], "Table of Contents": [[120, "table-of-contents"]], "Target Audience \ud83e\uddd0": [[210, "target-audience"]], "Tensor datatypes": [[171, "tensor-datatypes"]], "Tensors": [[171, "tensors"]], "Terminology": [[179, "terminology"]], "Text": [[116, "text"]], "Text Embedding Model": [[116, "text-embedding-model"]], "Text Splitters": [[116, "text-splitters"]], "The @property Decorator": [[38, "the-property-decorator"]], "The Algorithm": [[3, "the-algorithm"]], "The Custom Prompts - Customize your prompt to fit your use case": [[143, "the-custom-prompts-customize-your-prompt-to-fit-your-use-case"]], "The DataFrame.drop() function": [[161, "the-dataframe-drop-function"]], "The DataFrame.drop_duplicates() function": [[162, "the-dataframe-drop-duplicates-function"]], "The DataFrame.dropna() function": [[163, "the-dataframe-dropna-function"]], "The DataFrame.rename() function": [[164, "the-dataframe-rename-function"]], "The DataFrame.reset_index() function": [[167, "the-dataframe-reset-index-function"]], "The DataFrame.set_index() function": [[166, "the-dataframe-set-index-function"]], "The DataFrame.to_dict() function": [[165, "the-dataframe-to-dict-function"]], "The Difference\u2026": [[43, "the-difference"]], "The First Pass - Run through your text and extract the topics per your custom prompts": [[143, "the-first-pass-run-through-your-text-and-extract-the-topics-per-your-custom-prompts"]], "The LayerNorm (LN) layer": [[179, "the-layernorm-ln-layer"]], "The MLP layer(s)": [[179, "the-mlp-layer-s"]], "The Multi-Head Self Attention (MSA) layer": [[179, "the-multi-head-self-attention-msa-layer"]], "The Set Up - Create your LLMs and get data": [[143, "the-set-up-create-your-llms-and-get-data"]], "The balance between overfitting and underfitting": [[175, "the-balance-between-overfitting-and-underfitting"]], "The difference\u2026": [[44, "the-difference"]], "The dir() built-in function": [[80, "the-dir-built-in-function"]], "The except Clause with Multiple Exceptions": [[71, "the-except-clause-with-multiple-exceptions"]], "The except Clause with No Exceptions": [[71, "the-except-clause-with-no-exceptions"]], "The file Object Attributes": [[68, "the-file-object-attributes"]], "The format() Method for Formatting Strings": [[52, "the-format-method-for-formatting-strings"]], "The from_dict() function": [[158, "the-from-dict-function"]], "The missing piece: non-linearity": [[173, "the-missing-piece-non-linearity"]], "The property Class": [[38, "the-property-class"]], "TheFuzz": [[119, "thefuzz"]], "Things to Remember": [[88, "things-to-remember"]], "Things to Remember:": [[40, "things-to-remember"]], "Things to note": [[176, "things-to-note"]], "Time Series & LV Plot": [[200, "time-series-lv-plot"]], "Time-Series Plot": [[200, "time-series-plot"]], "To Do": [[135, "to-do"]], "To customize the display of DataFrame while printing": [[157, "to-customize-the-display-of-dataframe-while-printing"]], "Token Set Ratio": [[119, "token-set-ratio"]], "Token Sort Ratio": [[119, "token-sort-ratio"]], "Toolbox": [[210, "toolbox"]], "Toolkit": [[116, "toolkit"]], "Tools": [[116, "tools"]], "Tools required to work with neural networks": [[208, "tools-required-to-work-with-neural-networks"]], "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80": [[115, "tools-to-get-a-launch"]], "Top-K Similarity Search - Ask A Book A Question": [[134, "top-k-similarity-search-ask-a-book-a-question"]], "Topic Modeling With Language Models": [[143, "topic-modeling-with-language-models"]], "Topics on Learning Data Science and Machine Learning": [[209, "topics-on-learning-data-science-and-machine-learning"]], "Train and Evaluate Model 0": [[175, "train-and-evaluate-model-0"]], "Train feature extractor ViT model": [[179, "train-feature-extractor-vit-model"]], "Train model": [[173, "train-model"], [177, "train-model"]], "Train model and track results": [[178, "train-model-and-track-results"]], "Train the model": [[172, "train-the-model"]], "Train, evaluate and save the model": [[181, "train-evaluate-and-save-the-model"], [182, "train-evaluate-and-save-the-model"]], "Train, evaluate and save the model (script mode)": [[182, "train-evaluate-and-save-the-model-script-mode"]], "Train, evaluate and save the model (train.py)": [[176, "train-evaluate-and-save-the-model-train-py"]], "Training": [[172, "training"]], "Training EffNetB2 feature extractor": [[180, "training-effnetb2-feature-extractor"]], "Training Set": [[5, "training-set"]], "Training ViT feature extractor": [[180, "training-vit-feature-extractor"]], "Training a model with non-linearity": [[173, "training-a-model-with-non-linearity"]], "Training and testing model_2 using our training and test functions": [[174, "training-and-testing-model-2-using-our-training-and-test-functions"]], "Training our ViT model": [[179, "training-our-vit-model"]], "Transfer statements": [[42, "transfer-statements"]], "Transform Datasets and create DataLoaders": [[178, "transform-datasets-and-create-dataloaders"]], "Transforming data": [[175, "transforming-data"]], "Transforming data with torchvision.transforms": [[175, "transforming-data-with-torchvision-transforms"]], "Try a forward pass on a single image (to test the model)": [[175, "try-a-forward-pass-on-a-single-image-to-test-the-model"]], "Tuple Methods": [[54, "tuple-methods"]], "Tuple Operations": [[54, "tuple-operations"]], "Turn custom loaded images into DataLoader\u2019s": [[175, "turn-custom-loaded-images-into-dataloaders"]], "Turn data into tensors and create train and test splits": [[173, "turn-data-into-tensors-and-create-train-and-test-splits"]], "Turn images into DataLoader\u2019s": [[179, "turn-images-into-dataloaders"]], "Turn loaded images into DataLoader\u2019s": [[175, "turn-loaded-images-into-dataloaders"]], "Turning a single image into patches": [[179, "turning-a-single-image-into-patches"]], "Turning our EffNetB2 model into a Python script (model.py)": [[180, "turning-our-effnetb2-model-into-a-python-script-model-py"]], "Turning our FoodVision Mini Gradio Demo into a deployable app": [[180, "turning-our-foodvision-mini-gradio-demo-into-a-deployable-app"]], "Turning our FoodVision Mini Gradio app into a Python script (app.py)": [[180, "turning-our-foodvision-mini-gradio-app-into-a-python-script-app-py"]], "Turning the ViT patch embedding layer into a PyTorch module": [[179, "turning-the-vit-patch-embedding-layer-into-a-pytorch-module"]], "Twitter Reply Bot": [[129, "twitter-reply-bot"]], "Two Parameter:": [[74, "two-parameter"]], "Type Conversion": [[51, "type-conversion"]], "Type Conversion of Numbers in Python": [[91, "type-conversion-of-numbers-in-python"]], "Types Of Inheritance": [[103, "types-of-inheritance"]], "Types of Constructors": [[102, "types-of-constructors"]], "Types of Functions": [[74, "types-of-functions"]], "Typical workflow for a ML system": [[0, "typical-workflow-for-a-ml-system"]], "Unit vector": [[32, "unit-vector"]], "Univariate Linear Regression Demo": [[13, "univariate-linear-regression-demo"]], "Universal  Array Functions (Mathematical operations)": [[153, "universal-array-functions-mathematical-operations"]], "Unpacking": [[71, "unpacking"]], "Unpacking Dictionaries": [[71, "unpacking-dictionaries"]], "Unpacking List or a Tuple": [[71, "unpacking-list-or-a-tuple"]], "Unpacking Lists": [[71, "unpacking-lists"]], "Unpacking a sequence into separate variables": [[97, "unpacking-a-sequence-into-separate-variables"]], "Update the train() function to include a writer parameter": [[178, "update-the-train-function-to-include-a-writer-parameter"]], "Uploading to Hugging Face": [[180, "uploading-to-hugging-face"]], "Usage": [[119, "usage"]], "Use Cases:": [[143, "use-cases"]], "Use __new__ or __init__?": [[106, "use-new-or-init"]], "Use lambda expressions to rename": [[164, "use-lambda-expressions-to-rename"]], "Use of Python Generators": [[35, "use-of-python-generators"]], "Use of global Keyword": [[76, "use-of-global-keyword"]], "Use of inheritance": [[101, "use-of-inheritance"]], "Use of lambda Function in python": [[79, "use-of-lambda-function-in-python"]], "Use torchinfo to get an idea of the shapes going through our model": [[175, "use-torchinfo-to-get-an-idea-of-the-shapes-going-through-our-model"]], "Using An Agent": [[128, "using-an-agent"]], "Using Control Statement in for loops in Python": [[47, "using-control-statement-in-for-loops-in-python"]], "Using Control Statement in while loops in Python": [[48, "using-control-statement-in-while-loops-in-python"]], "Using Embeddings": [[117, "using-embeddings"]], "Using Getters and Setters": [[38, "using-getters-and-setters"]], "Using LLMs To Summarize Personal Research": [[144, "using-llms-to-summarize-personal-research"]], "Using LangChain\u2019s Response Schema": [[117, "using-langchains-response-schema"]], "Using Langchain": [[120, "using-langchain"]], "Using Python inside Jupyter notebook": [[24, "using-python-inside-jupyter-notebook"]], "Using a code editor of your choice": [[24, "using-a-code-editor-of-your-choice"]], "Using a pretrained ViT from torchvision.models on the same dataset": [[179, "using-a-pretrained-vit-from-torchvision-models-on-the-same-dataset"]], "Using drop with axis='columns' or axis=1": [[161, "using-drop-with-axis-columns-or-axis-1"]], "Using python in a jupyter notebook": [[24, "using-python-in-a-jupyter-notebook"]], "Using r prefix before RegEx": [[39, "using-r-prefix-before-regex"]], "Using rename with axis='columns' or axis=1": [[164, "using-rename-with-axis-columns-or-axis-1"]], "Using the help() Function for Docstrings": [[84, "using-the-help-function-for-docstrings"]], "ValueError in strptime()": [[61, "valueerror-in-strptime"]], "Vanilla Extraction": [[117, "vanilla-extraction"]], "Variable Function Arguments": [[77, "variable-function-arguments"]], "Vector addition": [[32, "vector-addition"]], "Vector operations": [[32, "vector-operations"]], "Vector subtraction": [[32, "vector-subtraction"]], "VectorStores": [[116, "vectorstores"]], "Vectorized Implementation of Forward Propagation": [[7, "vectorized-implementation-of-forward-propagation"]], "Vectors": [[171, "vectors"]], "View experiments in TensorBoard": [[178, "view-experiments-in-tensorboard"]], "View our model\u2019s results in TensorBoard": [[178, "view-our-models-results-in-tensorboard"]], "Viewing/Inspecting Data": [[157, "viewing-inspecting-data"]], "Visualize a single image": [[179, "visualize-a-single-image"]], "Visualize an image": [[175, "visualize-an-image"]], "Visualize the Fit": [[8, "visualize-the-fit"]], "Visualizing our data": [[174, "visualizing-our-data"]], "Visualizing the speed vs. performance tradeoff": [[180, "visualizing-the-speed-vs-performance-tradeoff"]], "Ways to deploy a machine learning model": [[180, "ways-to-deploy-a-machine-learning-model"]], "Welcome to my technical diary \ud83e\udd2f": [[210, "welcome-to-my-technical-diary"]], "What Happens Internally?": [[106, "what-happens-internally"]], "What are lambda functions in Python?": [[79, "what-are-lambda-functions-in-python"]], "What are modules in Python?": [[80, "what-are-modules-in-python"]], "What are packages?": [[83, "what-are-packages"]], "What are user-defined functions in Python?": [[85, "what-are-user-defined-functions-in-python"]], "What can PyTorch be used for?": [[171, "what-can-pytorch-be-used-for"]], "What experiments are we going to run?": [[178, "what-experiments-are-we-going-to-run"]], "What has script mode got to do with PyTorch?": [[182, "what-has-script-mode-got-to-do-with-pytorch"]], "What is Compiler?": [[98, "what-is-compiler"]], "What is DataFrame in Pandas": [[157, "what-is-dataframe-in-pandas"]], "What is Dictionary in Python?": [[55, "what-is-dictionary-in-python"]], "What is Distribution Plots?": [[193, "what-is-distribution-plots"]], "What is Hugging Face Spaces?": [[180, "what-is-hugging-face-spaces"]], "What is Interpreter?": [[98, "what-is-interpreter"]], "What is LangChain?": [[116, "what-is-langchain"], [117, "what-is-langchain"]], "What is List in Python?": [[53, "what-is-list-in-python"]], "What is Machine Learning? \ud83e\udde0": [[0, "what-is-machine-learning"]], "What is MyST?": [[20, "what-is-myst"], [108, "what-is-myst"], [112, "what-is-myst"]], "What is Name in Python?": [[96, "what-is-name-in-python"]], "What is PyTorch?": [[171, "what-is-pytorch"]], "What is Set in Python?": [[56, "what-is-set-in-python"]], "What is String in Python?": [[52, "what-is-string-in-python"]], "What is Tuple in Python?": [[54, "what-is-tuple-in-python"]], "What is a Namespace in Python?": [[96, "what-is-a-namespace-in-python"]], "What is a classification problem?": [[173, "what-is-a-classification-problem"]], "What is a custom dataset?": [[175, "what-is-a-custom-dataset"]], "What is a function in Python?": [[74, "what-is-a-function-in-python"]], "What is a machine learning research paper?": [[179, "what-is-a-machine-learning-research-paper"]], "What is a matrix?": [[31, "what-is-a-matrix"]], "What is a vector?": [[32, "what-is-a-vector"]], "What is cell mode?": [[181, "what-is-cell-mode"]], "What is cluster map?": [[204, "what-is-cluster-map"]], "What is experiment tracking?": [[178, "what-is-experiment-tracking"]], "What is for loop in Python?": [[47, "what-is-for-loop-in-python"]], "What is global keyword?": [[76, "what-is-global-keyword"]], "What is going modular?": [[176, "what-is-going-modular"]], "What is heat map?": [[203, "what-is-heat-map"]], "What is hstack?": [[154, "what-is-hstack"]], "What is machine learning model deployment?": [[180, "what-is-machine-learning-model-deployment"]], "What is math module in Python?": [[82, "what-is-math-module-in-python"]], "What is paper replicating?": [[179, "what-is-paper-replicating"]], "What is recursion?": [[78, "what-is-recursion"]], "What is script mode?": [[182, "what-is-script-mode"]], "What is self in Python?": [[106, "what-is-self-in-python"]], "What is transfer learning?": [[177, "what-is-transfer-learning"]], "What is vstack?": [[154, "what-is-vstack"]], "What is while loop in Python?": [[48, "what-is-while-loop-in-python"]], "What kind of experiments should you run?": [[178, "what-kind-of-experiments-should-you-run"]], "What model should I use?": [[174, "what-model-should-i-use"]], "What our training setup is missing": [[179, "what-our-training-setup-is-missing"]], "What should an ideal loss curve look like?": [[175, "what-should-an-ideal-loss-curve-look-like"]], "What we\u2019re going to cover": [[172, "what-were-going-to-cover"], [173, "what-were-going-to-cover"], [174, "what-were-going-to-cover"], [175, "what-were-going-to-cover"], [176, "what-were-going-to-cover"], [177, "what-were-going-to-cover"], [178, "what-were-going-to-cover"], [179, "what-were-going-to-cover"], [180, "what-were-going-to-cover"], [182, "what-were-going-to-cover"]], "What we\u2019re going to cover in this module": [[171, "what-were-going-to-cover-in-this-module"]], "What we\u2019re working towards": [[176, "what-were-working-towards"]], "What\u2019s inside datetime?": [[59, "whats-inside-datetime"]], "What\u2019s the difference between this notebook (Part 1) and the script mode notebook (Part 2)?": [[181, "whats-the-difference-between-this-notebook-part-1-and-the-script-mode-notebook-part-2"]], "What\u2019s the difference between this notebook (Part 2) and the cell mode notebook (Part 1)?": [[182, "whats-the-difference-between-this-notebook-part-2-and-the-cell-mode-notebook-part-1"]], "When do we have closures?": [[36, "when-do-we-have-closures"]], "When to use Decimal instead of float?": [[51, "when-to-use-decimal-instead-of-float"]], "When to use closures?": [[36, "when-to-use-closures"]], "Where can you find code examples for machine learning research papers?": [[179, "where-can-you-find-code-examples-for-machine-learning-research-papers"]], "Where can you get help?": [[176, "where-can-you-get-help"], [177, "where-can-you-get-help"]], "Where does computer vision get used?": [[174, "where-does-computer-vision-get-used"]], "Where to find pretrained models": [[177, "where-to-find-pretrained-models"]], "Where\u2019s it going to go?": [[180, "wheres-it-going-to-go"]], "Which pretrained model should you use?": [[177, "which-pretrained-model-should-you-use"]], "While loop in Python FAQs": [[48, "while-loop-in-python-faqs"]], "Who uses PyTorch?": [[171, "who-uses-pytorch"]], "Why LangChain?": [[116, "why-langchain"], [117, "why-langchain"]], "Why Learn Machine Learning? \ud83e\udd14": [[0, "why-learn-machine-learning"]], "Why Learn Python?": [[22, "why-learn-python"]], "Why and When to use while loop in Python": [[48, "why-and-when-to-use-while-loop-in-python"]], "Why deploy a machine learning model?": [[180, "why-deploy-a-machine-learning-model"]], "Why is self explicitly defined everytime?": [[106, "why-is-self-explicitly-defined-everytime"]], "Why replicate a machine learning research paper?": [[179, "why-replicate-a-machine-learning-research-paper"]], "Why should we use Tuple? (Advantages of Tuple)": [[54, "why-should-we-use-tuple-advantages-of-tuple"]], "Why super() keyword": [[103, "why-super-keyword"]], "Why track experiments?": [[178, "why-track-experiments"]], "Why two parts?": [[176, "why-two-parts"]], "Why use NumPy?": [[150, "why-use-numpy"]], "Why use PyTorch?": [[171, "why-use-pytorch"]], "Why use a pretrained model?": [[179, "why-use-a-pretrained-model"]], "Why use for loop?": [[47, "why-use-for-loop"]], "Why use transfer learning?": [[177, "why-use-transfer-learning"]], "Why would you want to go modular?": [[176, "why-would-you-want-to-go-modular"]], "Wide format (untidy)": [[203, "wide-format-untidy"]], "With Streaming": [[131, "with-streaming"]], "Working With Lists": [[138, "working-with-lists"]], "Working of for loop for Iterators": [[34, "working-of-for-loop-for-iterators"]], "Working with large amounts of data": [[168, "working-with-large-amounts-of-data"]], "World Happiness Report 2017": [[9, "world-happiness-report-2017"]], "Wrap up": [[80, "wrap-up"]], "Write your custom prompt templates": [[141, "write-your-custom-prompt-templates"]], "Writing the \u201cHello, World!\u201d Program": [[71, "writing-the-hello-world-program"], [87, "writing-the-hello-world-program"]], "Zapier Natural Language Actions API": [[128, "zapier-natural-language-actions-api"]], "Zero or more times *": [[39, "zero-or-more-times"]], "Zero or one time ?": [[39, "zero-or-one-time"]], "Zeros and ones": [[171, "zeros-and-ones"]], "Zip": [[71, "zip"]], "[] . ^ $ * + ? {} () \\ |": [[39, "id1"]], "\\A - Matches if the specified characters are at the start of a string.": [[39, "a-matches-if-the-specified-characters-are-at-the-start-of-a-string"]], "\\B - Opposite of \\b. Matches if the specified characters are not at the beginning or end of a word.": [[39, "b-opposite-of-b-matches-if-the-specified-characters-are-not-at-the-beginning-or-end-of-a-word"]], "\\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \\t\\n\\r\\f\\v].": [[39, "s-matches-where-a-string-contains-any-non-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\W - Matches any non-alphanumeric character. Equivalent to [^a-zA-Z0-9_].": [[39, "w-matches-any-non-alphanumeric-character-equivalent-to-a-za-z0-9"]], "\\Z - Matches if the specified characters are at the end of a string.": [[39, "z-matches-if-the-specified-characters-are-at-the-end-of-a-string"]], "\\b - Matches if the specified characters are at the beginning or end of a word.": [[39, "b-matches-if-the-specified-characters-are-at-the-beginning-or-end-of-a-word"]], "\\d - Matches any non-decimal digit. Equivalent to [^0-9]": [[39, "d-matches-any-non-decimal-digit-equivalent-to-0-9"]], "\\s - Matches where a string contains any whitespace character. Equivalent to [ \\t\\n\\r\\f\\v].": [[39, "s-matches-where-a-string-contains-any-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.": [[39, "w-matches-any-alphanumeric-character-digits-and-alphabets-equivalent-to-a-za-z0-9-by-the-way-underscore-is-also-considered-an-alphanumeric-character"]], "__init__() is not a constructor": [[106, "init-is-not-a-constructor"]], "a) break in for loop": [[47, "a-break-in-for-loop"]], "a) break in while loop": [[48, "a-break-in-while-loop"]], "all(dict) - The all() function returns True when all elements in the given iterable are true. If not, it returns False.": [[55, "all-dict-the-all-function-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "all(list) - The method all() method returns True when all elements in the given iterable are true. If not, it returns False.": [[53, "all-list-the-method-all-method-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "any(dict) - The any() function returns True if any element of an iterable is True. If not, any() returns False.": [[55, "any-dict-the-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "any(list) - any() function returns True if any element of an iterable is True. If not, any() returns False.": [[53, "any-list-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "append() - The append() method adds an item to the end of the list.": [[53, "append-the-append-method-adds-an-item-to-the-end-of-the-list"]], "arange()": [[154, "arange"]], "asarray()": [[154, "asarray"]], "b) continue in for loop": [[47, "b-continue-in-for-loop"]], "b) continue in while loop": [[48, "b-continue-in-while-loop"]], "boxplot() and violinplot()": [[198, "boxplot-and-violinplot"]], "c) pass in for loop": [[47, "c-pass-in-for-loop"]], "c) pass in while loop": [[48, "c-pass-in-while-loop"]], "clear() - The clear() method removes all items from the list.": [[53, "clear-the-clear-method-removes-all-items-from-the-list"]], "clear() - The method clear() removes all items from the dictionary.": [[55, "clear-the-method-clear-removes-all-items-from-the-dictionary"]], "continue statement in while loop": [[49, "continue-statement-in-while-loop"]], "continue statement with else statements": [[49, "continue-statement-with-else-statements"]], "copy()  - The copy() method returns a shallow copy of the list.": [[53, "copy-the-copy-method-returns-a-shallow-copy-of-the-list"]], "copy() - The method copy() returns a shallow copy of the dictionary.": [[55, "copy-the-method-copy-returns-a-shallow-copy-of-the-dictionary"]], "count() - The count() method returns the number of times the specified element appears in the list.": [[53, "count-the-count-method-returns-the-number-of-times-the-specified-element-appears-in-the-list"]], "datetime.date Class": [[59, "datetime-date-class"]], "datetime.datetime": [[59, "datetime-datetime"]], "datetime.time": [[59, "datetime-time"]], "datetime.timedelta": [[59, "datetime-timedelta"]], "extend() - The extend() method adds all the elements of an iterable (list, tuple, string etc.) to the end of the list.": [[53, "extend-the-extend-method-adds-all-the-elements-of-an-iterable-list-tuple-string-etc-to-the-end-of-the-list"]], "for  loop in one line": [[47, "for-loop-in-one-line"]], "for loop inside for loop": [[47, "for-loop-inside-for-loop"]], "for loop inside while loop": [[48, "for-loop-inside-while-loop"]], "for loop with else": [[47, "for-loop-with-else"]], "for loop with if-else": [[47, "for-loop-with-if-else"]], "for loop with range() function": [[47, "for-loop-with-range-function"]], "fromkeys() - The method fromkeys() creates a new dictionary with keys from seq and values set to value.": [[55, "fromkeys-the-method-fromkeys-creates-a-new-dictionary-with-keys-from-seq-and-values-set-to-value"]], "heatmap": [[203, "heatmap"]], "heatmap colors": [[203, "heatmap-colors"]], "heatmap data": [[203, "heatmap-data"]], "if-elif-else statements and Logical Operator": [[45, "if-elif-else-statements-and-logical-operator"]], "if-elif-else statements or Logical Operator": [[45, "if-elif-else-statements-or-logical-operator"]], "if-elif-else statements with logical operators": [[45, "if-elif-else-statements-with-logical-operators"]], "import all names": [[80, "import-all-names"]], "import multiple modules": [[80, "import-multiple-modules"]], "import with renaming": [[80, "import-with-renaming"]], "index() - The index() method returns the index of the specified element in the list.": [[53, "index-the-index-method-returns-the-index-of-the-specified-element-in-the-list"]], "insert() - The insert() method inserts an element to the list at the specified index.": [[53, "insert-the-insert-method-inserts-an-element-to-the-list-at-the-specified-index"]], "issubclass()": [[103, "issubclass"]], "itmes() - The method items() returns a list of dict\u2019s (key, value) tuple pairs.": [[55, "itmes-the-method-items-returns-a-list-of-dicts-key-value-tuple-pairs"]], "keys() - The method keys() returns a list of all the available keys in the dictionary.": [[55, "keys-the-method-keys-returns-a-list-of-all-the-available-keys-in-the-dictionary"]], "lambda function use with filter()": [[79, "lambda-function-use-with-filter"]], "lambda function with map()": [[79, "lambda-function-with-map"]], "lambda function with reduce()": [[79, "lambda-function-with-reduce"]], "len(dict) - The len() function gives the total length of the dictionary. This would be equal to the number of items in the dictionary.": [[55, "len-dict-the-len-function-gives-the-total-length-of-the-dictionary-this-would-be-equal-to-the-number-of-items-in-the-dictionary"]], "len(list) - The len() method returns the number of elements in the list.": [[53, "len-list-the-len-method-returns-the-number-of-elements-in-the-list"]], "len(tuple) - The len() method returns the number of elements in the tuple.": [[54, "len-tuple-the-len-method-returns-the-number-of-elements-in-the-tuple"]], "math module Functions:": [[80, "math-module-functions"]], "max(list) - The max() method returns the elements from the list with maximum value.": [[53, "max-list-the-max-method-returns-the-elements-from-the-list-with-maximum-value"]], "max(tuple) - The max() method returns the elements from the tuple with maximum value. Type of element should be same otherwise complier throw TypeError.": [[54, "max-tuple-the-max-method-returns-the-elements-from-the-tuple-with-maximum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "max, min, argmax, argmin": [[151, "max-min-argmax-argmin"]], "min(list) - this method is used to get min value from the list. In Python3 lists element\u2019s type should be same otherwise compiler throw type Error.": [[53, "min-list-this-method-is-used-to-get-min-value-from-the-list-in-python3-lists-elements-type-should-be-same-otherwise-compiler-throw-type-error"]], "min(tuple) - The min() method returns the elements from the tuple with minimum value. Type of element should be same otherwise complier throw TypeError.": [[54, "min-tuple-the-min-method-returns-the-elements-from-the-tuple-with-minimum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "pop() - The pop() method removes the item at the given index from the list and returns the removed item.": [[53, "pop-the-pop-method-removes-the-item-at-the-given-index-from-the-list-and-returns-the-removed-item"]], "rand": [[151, "rand"]], "randint": [[151, "randint"]], "randn": [[151, "randn"]], "remove() - The remove() method removes the first matching element (which is passed as an argument) from the list.": [[53, "remove-the-remove-method-removes-the-first-matching-element-which-is-passed-as-an-argument-from-the-list"]], "reverse()  - The reverse() method reverses the elements of the list.": [[53, "reverse-the-reverse-method-reverses-the-elements-of-the-list"]], "self in Python, Demystified": [[106, "self-in-python-demystified"]], "setdefault() - The method setdefault() is similar to get but will set dict[key] = default if key is not already in dict.": [[55, "setdefault-the-method-setdefault-is-similar-to-get-but-will-set-dict-key-default-if-key-is-not-already-in-dict"]], "sort()  - The sort() method sorts the elements of a given list in a specific ascending or descending order.": [[53, "sort-the-sort-method-sorts-the-elements-of-a-given-list-in-a-specific-ascending-or-descending-order"]], "sorted(dict) - The sorted() function sorts the elements of a given iterable in a specific order (either ascending or descending) and returns the sorted iterable as a list.": [[53, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [54, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [55, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"]], "str(dict) - The str() function produces a printable string representation of a dictionary.": [[55, "str-dict-the-str-function-produces-a-printable-string-representation-of-a-dictionary"]], "time.sleep() in multithreaded programs": [[66, "time-sleep-in-multithreaded-programs"]], "time.struct_time Class": [[65, "time-struct-time-class"]], "tuple(seq) - The tuple() method converts a list of items into tuples.": [[54, "tuple-seq-the-tuple-method-converts-a-list-of-items-into-tuples"]], "type() - The type() function returns the type of the passed variable. If passed variable is dictionary then it would return a dictionary type.": [[55, "type-the-type-function-returns-the-type-of-the-passed-variable-if-passed-variable-is-dictionary-then-it-would-return-a-dictionary-type"]], "update() - The method update() adds dictionary dict2\u2019s key-values pairs in to dict. This function does not return anything.": [[55, "update-the-method-update-adds-dictionary-dict2s-key-values-pairs-in-to-dict-this-function-does-not-return-anything"]], "value() - The method values() returns a list of all the values available in a given dictionary.": [[55, "value-the-method-values-returns-a-list-of-all-the-values-available-in-a-given-dictionary"]], "while loop inside for loop": [[47, "while-loop-inside-for-loop"]], "while loop inside while loop": [[48, "while-loop-inside-while-loop"]], "while loop with else": [[48, "while-loop-with-else"]], "while loop with if-else": [[48, "while-loop-with-if-else"]], "you output should look like this:": [[101, "you-output-should-look-like-this"]], "\ud83d\udcbb Exercises  \u279e <span class='label label-default'>List</span>": [[44, "exercises-list"], [53, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Date and Time</span>": [[64, "exercises-date-and-time"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Dictionary</span>": [[55, "exercises-dictionary"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Exceptions Handling</span>": [[71, "exercises-exceptions-handling"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Files</span>": [[68, "exercises-files"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Functions</span>": [[74, "exercises-functions"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Higher order functions, Closure and Decorators</span>": [[37, "exercises-higher-order-functions-closure-and-decorators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List Comprehension</span>": [[57, "exercises-list-comprehension"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List</span>": [[45, "exercises-list"], [47, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Module</span>": [[80, "exercises-module"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Objects and Classes</span>": [[101, "exercises-objects-and-classes"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Operators</span>": [[95, "exercises-operators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Python Errors</span>": [[70, "exercises-python-errors"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>RegEx</span>": [[39, "exercises-regex"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Sets</span>": [[56, "exercises-sets"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>String</span>": [[52, "exercises-string"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Tuple</span>": [[54, "exercises-tuple"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Variables</span>": [[90, "exercises-variables"]]}, "docnames": ["content/concepts/Introduction_to_ml", "content/concepts/anomaly-detection", "content/concepts/concepts", "content/concepts/k-means", "content/concepts/linear-regression", "content/concepts/logistic-regression", "content/concepts/markdown-notebooks", "content/concepts/neural-networks", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo", "content/concepts/notebooks/data/README", "content/concepts/notebooks/k_means/k_means_demo", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo", "content/concepts/notebooks/linear_regression/non_linear_regression_demo", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo", "content/core/markdown", "content/core/mymarkdown", "content/essentials/000_Intro_to_Python", "content/essentials/intro_mathematics", "content/essentials/intro_python", "content/essentials/intro_statistics", "content/essentials/mathematics/1_linear_algebra", "content/essentials/mathematics/calculus_fourier-series", "content/essentials/mathematics/capital-pi-notation", "content/essentials/mathematics/capital-sigma-notation", "content/essentials/mathematics/dissimilarity_measures", "content/essentials/mathematics/linear-algebra_matrices", "content/essentials/mathematics/linear-algebra_vectors", "content/essentials/mathematics/mathematics_toc", "content/essentials/python/advanced/001_Python_Iterators", "content/essentials/python/advanced/002_Python_Generators", "content/essentials/python/advanced/003_Python_Closure", "content/essentials/python/advanced/004_Python_Decorators", "content/essentials/python/advanced/005_Python_Property", "content/essentials/python/advanced/006_Python_RegEx", "content/essentials/python/advanced/Python_args_and_kwargs", "content/essentials/python/advanced/advanced_toc", "content/essentials/python/controlflow/000_Python_Flow_Control_statement", "content/essentials/python/controlflow/001_Python_if_statement", "content/essentials/python/controlflow/002_Python_if_else_statement", "content/essentials/python/controlflow/003_Python_if_elif_else_statement", "content/essentials/python/controlflow/004_Python_Nested_if_statement", "content/essentials/python/controlflow/005_Python_for_Loop", "content/essentials/python/controlflow/006_Python_while_Loop", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements", "content/essentials/python/controlflow/controlflow_toc", "content/essentials/python/datatypes/001_Python_Numbers", "content/essentials/python/datatypes/002_Python_String", "content/essentials/python/datatypes/003_Python_List", "content/essentials/python/datatypes/004_Python_Tuple", "content/essentials/python/datatypes/005_Python_Dictionary", "content/essentials/python/datatypes/006_Python_Sets", "content/essentials/python/datatypes/Python_List_Comprehension", "content/essentials/python/datatypes/datatypes_toc", "content/essentials/python/datetime/001_Python_datetime_Module", "content/essentials/python/datetime/002_Python_strftime", "content/essentials/python/datetime/003_Python_strptime", "content/essentials/python/datetime/004_Python_current_date_and_time", "content/essentials/python/datetime/005_Python_get_current_time", "content/essentials/python/datetime/006_Python_timestamp_to_datetime", "content/essentials/python/datetime/007_Python_time_Module", "content/essentials/python/datetime/008_Python_sleep", "content/essentials/python/datetime/datetime_toc", "content/essentials/python/files/001_Python_File_Input_Output", "content/essentials/python/files/002_Python_File_Directory", "content/essentials/python/files/003_Python_File_Exception", "content/essentials/python/files/004_Python_Exceptions_Handling", "content/essentials/python/files/005_Python_User_defined_Exceptions", "content/essentials/python/files/files_toc", "content/essentials/python/functions/001_Python_Functions", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal", "content/essentials/python/functions/003_Python_Function_global_Keywords", "content/essentials/python/functions/004_Python_Function_Arguments", "content/essentials/python/functions/005_Python_Function_Recursion", "content/essentials/python/functions/006_Python_Function_Anonymous", "content/essentials/python/functions/007_Python_Function_Module", "content/essentials/python/functions/008_Python_Function_random_Module", "content/essentials/python/functions/009_Python_Function_math_Module", "content/essentials/python/functions/010_Python_Function_Package", "content/essentials/python/functions/Python_Docstrings", "content/essentials/python/functions/Python_User_defined_Functions", "content/essentials/python/functions/functions_toc", "content/essentials/python/introduction/002_Hello_World", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments", "content/essentials/python/introduction/005_Python_Variables_&_Constants", "content/essentials/python/introduction/006_Python_Literals", "content/essentials/python/introduction/007_Python_Data_Types", "content/essentials/python/introduction/008_Python_Type_Conversion", "content/essentials/python/introduction/009_Python_Input_Output_Import", "content/essentials/python/introduction/010_Python_Operators", "content/essentials/python/introduction/011_Python_Namespace_and_Scope", "content/essentials/python/introduction/1_data_structures_and_agorithms", "content/essentials/python/introduction/Interpreter_Vs_Compiler", "content/essentials/python/introduction/constant", "content/essentials/python/introduction/intro_toc", "content/essentials/python/objects/001_Python_OOPs_Concepts", "content/essentials/python/objects/002_Python_Classes_and_Objects", "content/essentials/python/objects/003_Python_Inheritance", "content/essentials/python/objects/004_Python_Operator_Overloading", "content/essentials/python/objects/objects_toc", "content/essentials/python/objects/self_in_Python_Demystified", "content/essentials/statistics/statistics", "content/markdown", "content/markdown-notebooks", "content/mymarkdown", "content/notebooks", "content/real-world/markdown", "content/real-world/mymarkdown", "content/tools/hf/intro", "content/tools/intro_tools", "content/tools/langchain/LangChain Cookbook Part 1 - Fundamentals", "content/tools/langchain/LangChain Cookbook Part 2 - Use Cases", "content/tools/langchain/data/thefuzz/CHANGES", "content/tools/langchain/data/thefuzz/README", "content/tools/langchain/intro", "content/tools/langchain/langchain-modules", "content/tools/langchain/langchain_toc", "content/tools/langchain/langgraph", "content/tools/langchain/langserve", "content/tools/langchain/langsmith", "content/tools/langchain/lcel", "content/tools/langchain/projects/agents/Agents", "content/tools/langchain/projects/agents/Agents + ZapierToolkit", "content/tools/langchain/projects/bots/Twitter_Reply_Bot/Twitter Reply Bot Notebook", "content/tools/langchain/projects/chains/Chain Types", "content/tools/langchain/projects/chatapi/ChatAPI + LangChain Basics", "content/tools/langchain/projects/data_generation/5 Levels Of Summarization - Novice To Expert", "content/tools/langchain/projects/data_generation/Advanced Retrieval With LangChain", "content/tools/langchain/projects/data_generation/Ask A Book Questions", "content/tools/langchain/projects/data_generation/Clean and Standardize Data", "content/tools/langchain/projects/data_generation/Custom Files Question & Answer", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Function Calling)", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Kor)", "content/tools/langchain/projects/data_generation/Exploring ChatGPT Function Calling", "content/tools/langchain/projects/data_generation/Instructing LLMs To Match Tone", "content/tools/langchain/projects/data_generation/Personalized Email Generation", "content/tools/langchain/projects/data_generation/Retrieval_With_MMR", "content/tools/langchain/projects/data_generation/Topic Modeling With Language Models", "content/tools/langchain/projects/data_generation/Using LLMs To Summarize Personal Research", "content/tools/langchain/projects/data_generation/Working With Call or Video Transcripts", "content/tools/langchain/projects/project_toc", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2", "content/tools/matplotlib/matplotlib_toc", "content/tools/numpy/001_Python_NumPy", "content/tools/numpy/002_Python_NumPy_Array_Part1", "content/tools/numpy/003_Python_NumPy_Array_Part2", "content/tools/numpy/004_Python_NumPy_Array_Part3", "content/tools/numpy/005_Python_NumPy_Array_Part4", "content/tools/numpy/Python_Numpy_Exercises_with_hints", "content/tools/numpy/numpy_toc", "content/tools/pandas/001_Python_Pandas_DataFrame", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index", "content/tools/pandas/002_Python_Pandas_Exercise_1", "content/tools/pandas/003_Python_Pandas_Exercise_2", "content/tools/pandas/pandas_toc", "content/tools/pytorch/00_pytorch_fundamentals", "content/tools/pytorch/01_pytorch_workflow", "content/tools/pytorch/02_pytorch_classification", "content/tools/pytorch/03_pytorch_computer_vision", "content/tools/pytorch/04_pytorch_custom_datasets", "content/tools/pytorch/05_pytorch_going_modular", "content/tools/pytorch/06_pytorch_transfer_learning", "content/tools/pytorch/07_pytorch_experiment_tracking", "content/tools/pytorch/08_pytorch_paper_replicating", "content/tools/pytorch/09_pytorch_model_deployment", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode", "content/tools/pytorch/going_modular/README", "content/tools/pytorch/going_modular/going_modular/README", "content/tools/pytorch/pytorch_toc", "content/tools/seaborn/001_Seaborn_Loading_Dataset", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics", "content/tools/seaborn/003_Matplotlib_vs_Seaborn", "content/tools/seaborn/004_Seaborn_Color_Palettes", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots", "content/tools/seaborn/008_Seaborn_Distribution_Plots", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot", "content/tools/seaborn/016_Seaborn_PairGrid_Plot", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot", "content/tools/seaborn/018_Seaborn_Heat_Map", "content/tools/seaborn/019_Seaborn_Cluster_Map", "content/tools/seaborn/seaborn_toc", "content/tools/tools-for-llms", "content/tools/tools-for-ml", "content/tools/tools-for-nn", "curriculum", "intro"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["content/concepts/Introduction_to_ml.md", "content/concepts/anomaly-detection.md", "content/concepts/concepts.md", "content/concepts/k-means.md", "content/concepts/linear-regression.md", "content/concepts/logistic-regression.md", "content/concepts/markdown-notebooks.md", "content/concepts/neural-networks.md", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo.ipynb", "content/concepts/notebooks/data/README.md", "content/concepts/notebooks/k_means/k_means_demo.ipynb", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/non_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo.ipynb", "content/core/markdown.md", "content/core/mymarkdown.md", "content/essentials/000_Intro_to_Python.ipynb", "content/essentials/intro_mathematics.ipynb", "content/essentials/intro_python.ipynb", "content/essentials/intro_statistics.ipynb", "content/essentials/mathematics/1_linear_algebra.ipynb", "content/essentials/mathematics/calculus_fourier-series.ipynb", "content/essentials/mathematics/capital-pi-notation.ipynb", "content/essentials/mathematics/capital-sigma-notation.ipynb", "content/essentials/mathematics/dissimilarity_measures.ipynb", "content/essentials/mathematics/linear-algebra_matrices.ipynb", "content/essentials/mathematics/linear-algebra_vectors.ipynb", "content/essentials/mathematics/mathematics_toc.md", "content/essentials/python/advanced/001_Python_Iterators.ipynb", "content/essentials/python/advanced/002_Python_Generators.ipynb", "content/essentials/python/advanced/003_Python_Closure.ipynb", "content/essentials/python/advanced/004_Python_Decorators.ipynb", "content/essentials/python/advanced/005_Python_Property.ipynb", "content/essentials/python/advanced/006_Python_RegEx.ipynb", "content/essentials/python/advanced/Python_args_and_kwargs.ipynb", "content/essentials/python/advanced/advanced_toc.md", "content/essentials/python/controlflow/000_Python_Flow_Control_statement.ipynb", "content/essentials/python/controlflow/001_Python_if_statement.ipynb", "content/essentials/python/controlflow/002_Python_if_else_statement.ipynb", "content/essentials/python/controlflow/003_Python_if_elif_else_statement.ipynb", "content/essentials/python/controlflow/004_Python_Nested_if_statement.ipynb", "content/essentials/python/controlflow/005_Python_for_Loop.ipynb", "content/essentials/python/controlflow/006_Python_while_Loop.ipynb", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements.ipynb", "content/essentials/python/controlflow/controlflow_toc.md", "content/essentials/python/datatypes/001_Python_Numbers.ipynb", "content/essentials/python/datatypes/002_Python_String.ipynb", "content/essentials/python/datatypes/003_Python_List.ipynb", "content/essentials/python/datatypes/004_Python_Tuple.ipynb", "content/essentials/python/datatypes/005_Python_Dictionary.ipynb", "content/essentials/python/datatypes/006_Python_Sets.ipynb", "content/essentials/python/datatypes/Python_List_Comprehension.ipynb", "content/essentials/python/datatypes/datatypes_toc.md", "content/essentials/python/datetime/001_Python_datetime_Module.ipynb", "content/essentials/python/datetime/002_Python_strftime.ipynb", "content/essentials/python/datetime/003_Python_strptime.ipynb", "content/essentials/python/datetime/004_Python_current_date_and_time.ipynb", "content/essentials/python/datetime/005_Python_get_current_time.ipynb", "content/essentials/python/datetime/006_Python_timestamp_to_datetime.ipynb", "content/essentials/python/datetime/007_Python_time_Module.ipynb", "content/essentials/python/datetime/008_Python_sleep.ipynb", "content/essentials/python/datetime/datetime_toc.md", "content/essentials/python/files/001_Python_File_Input_Output.ipynb", "content/essentials/python/files/002_Python_File_Directory.ipynb", "content/essentials/python/files/003_Python_File_Exception.ipynb", "content/essentials/python/files/004_Python_Exceptions_Handling.ipynb", "content/essentials/python/files/005_Python_User_defined_Exceptions.ipynb", "content/essentials/python/files/files_toc.md", "content/essentials/python/functions/001_Python_Functions.ipynb", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal.ipynb", "content/essentials/python/functions/003_Python_Function_global_Keywords.ipynb", "content/essentials/python/functions/004_Python_Function_Arguments.ipynb", "content/essentials/python/functions/005_Python_Function_Recursion.ipynb", "content/essentials/python/functions/006_Python_Function_Anonymous.ipynb", "content/essentials/python/functions/007_Python_Function_Module.ipynb", "content/essentials/python/functions/008_Python_Function_random_Module.ipynb", "content/essentials/python/functions/009_Python_Function_math_Module.ipynb", "content/essentials/python/functions/010_Python_Function_Package.ipynb", "content/essentials/python/functions/Python_Docstrings.ipynb", "content/essentials/python/functions/Python_User_defined_Functions.ipynb", "content/essentials/python/functions/functions_toc.md", "content/essentials/python/introduction/002_Hello_World.ipynb", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers.ipynb", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments.ipynb", "content/essentials/python/introduction/005_Python_Variables_&_Constants.ipynb", "content/essentials/python/introduction/006_Python_Literals.ipynb", "content/essentials/python/introduction/007_Python_Data_Types.ipynb", "content/essentials/python/introduction/008_Python_Type_Conversion.ipynb", "content/essentials/python/introduction/009_Python_Input_Output_Import.ipynb", "content/essentials/python/introduction/010_Python_Operators.ipynb", "content/essentials/python/introduction/011_Python_Namespace_and_Scope.ipynb", "content/essentials/python/introduction/1_data_structures_and_agorithms.ipynb", "content/essentials/python/introduction/Interpreter_Vs_Compiler.ipynb", "content/essentials/python/introduction/constant.ipynb", "content/essentials/python/introduction/intro_toc.md", "content/essentials/python/objects/001_Python_OOPs_Concepts.ipynb", "content/essentials/python/objects/002_Python_Classes_and_Objects.ipynb", "content/essentials/python/objects/003_Python_Inheritance.ipynb", "content/essentials/python/objects/004_Python_Operator_Overloading.ipynb", "content/essentials/python/objects/objects_toc.md", "content/essentials/python/objects/self_in_Python_Demystified.ipynb", "content/essentials/statistics/statistics.ipynb", "content/markdown.md", "content/markdown-notebooks.md", "content/mymarkdown.md", "content/notebooks.ipynb", "content/real-world/markdown.md", "content/real-world/mymarkdown.md", "content/tools/hf/intro.md", "content/tools/intro_tools.ipynb", "content/tools/langchain/LangChain Cookbook Part 1 - Fundamentals.ipynb", "content/tools/langchain/LangChain Cookbook Part 2 - Use Cases.ipynb", "content/tools/langchain/data/thefuzz/CHANGES.rst", "content/tools/langchain/data/thefuzz/README.rst", "content/tools/langchain/intro.md", "content/tools/langchain/langchain-modules.md", "content/tools/langchain/langchain_toc.md", "content/tools/langchain/langgraph.md", "content/tools/langchain/langserve.md", "content/tools/langchain/langsmith.md", "content/tools/langchain/lcel.md", "content/tools/langchain/projects/agents/Agents.ipynb", "content/tools/langchain/projects/agents/Agents + ZapierToolkit.ipynb", "content/tools/langchain/projects/bots/Twitter_Reply_Bot/Twitter Reply Bot Notebook.ipynb", "content/tools/langchain/projects/chains/Chain Types.ipynb", "content/tools/langchain/projects/chatapi/ChatAPI + LangChain Basics.ipynb", "content/tools/langchain/projects/data_generation/5 Levels Of Summarization - Novice To Expert.ipynb", "content/tools/langchain/projects/data_generation/Advanced Retrieval With LangChain.ipynb", "content/tools/langchain/projects/data_generation/Ask A Book Questions.ipynb", "content/tools/langchain/projects/data_generation/Clean and Standardize Data.ipynb", "content/tools/langchain/projects/data_generation/Custom Files Question & Answer.ipynb", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Function Calling).ipynb", "content/tools/langchain/projects/data_generation/Expert Structured Output (Using Kor).ipynb", "content/tools/langchain/projects/data_generation/Exploring ChatGPT Function Calling.ipynb", "content/tools/langchain/projects/data_generation/Instructing LLMs To Match Tone.ipynb", "content/tools/langchain/projects/data_generation/Personalized Email Generation.ipynb", "content/tools/langchain/projects/data_generation/Retrieval_With_MMR.ipynb", "content/tools/langchain/projects/data_generation/Topic Modeling With Language Models.ipynb", "content/tools/langchain/projects/data_generation/Using LLMs To Summarize Personal Research.ipynb", "content/tools/langchain/projects/data_generation/Working With Call or Video Transcripts.ipynb", "content/tools/langchain/projects/project_toc.md", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1.ipynb", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2.ipynb", "content/tools/matplotlib/matplotlib_toc.md", "content/tools/numpy/001_Python_NumPy.ipynb", "content/tools/numpy/002_Python_NumPy_Array_Part1.ipynb", "content/tools/numpy/003_Python_NumPy_Array_Part2.ipynb", "content/tools/numpy/004_Python_NumPy_Array_Part3.ipynb", "content/tools/numpy/005_Python_NumPy_Array_Part4.ipynb", "content/tools/numpy/Python_Numpy_Exercises_with_hints.ipynb", "content/tools/numpy/numpy_toc.md", "content/tools/pandas/001_Python_Pandas_DataFrame.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index.ipynb", "content/tools/pandas/002_Python_Pandas_Exercise_1.ipynb", "content/tools/pandas/003_Python_Pandas_Exercise_2.ipynb", "content/tools/pandas/pandas_toc.md", "content/tools/pytorch/00_pytorch_fundamentals.ipynb", "content/tools/pytorch/01_pytorch_workflow.ipynb", "content/tools/pytorch/02_pytorch_classification.ipynb", "content/tools/pytorch/03_pytorch_computer_vision.ipynb", "content/tools/pytorch/04_pytorch_custom_datasets.ipynb", "content/tools/pytorch/05_pytorch_going_modular.md", "content/tools/pytorch/06_pytorch_transfer_learning.ipynb", "content/tools/pytorch/07_pytorch_experiment_tracking.ipynb", "content/tools/pytorch/08_pytorch_paper_replicating.ipynb", "content/tools/pytorch/09_pytorch_model_deployment.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode.ipynb", "content/tools/pytorch/going_modular/README.md", "content/tools/pytorch/going_modular/going_modular/README.md", "content/tools/pytorch/pytorch_toc.md", "content/tools/seaborn/001_Seaborn_Loading_Dataset.ipynb", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics.ipynb", "content/tools/seaborn/003_Matplotlib_vs_Seaborn.ipynb", "content/tools/seaborn/004_Seaborn_Color_Palettes.ipynb", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot.ipynb", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot.ipynb", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots.ipynb", "content/tools/seaborn/008_Seaborn_Distribution_Plots.ipynb", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot.ipynb", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot.ipynb", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot.ipynb", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot.ipynb", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot.ipynb", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot.ipynb", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot.ipynb", "content/tools/seaborn/016_Seaborn_PairGrid_Plot.ipynb", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot.ipynb", "content/tools/seaborn/018_Seaborn_Heat_Map.ipynb", "content/tools/seaborn/019_Seaborn_Cluster_Map.ipynb", "content/tools/seaborn/seaborn_toc.md", "content/tools/tools-for-llms.md", "content/tools/tools-for-ml.md", "content/tools/tools-for-nn.md", "curriculum.md", "intro.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 30, 31, 34, 35, 36, 37, 38, 42, 43, 46, 47, 48, 49, 51, 52, 54, 57, 61, 63, 64, 65, 66, 68, 70, 71, 74, 75, 76, 78, 79, 80, 82, 84, 85, 89, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 116, 118, 119, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 151, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 171, 173, 174, 176, 177, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 207, 210], "0": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 88, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 106, 107, 111, 116, 117, 119, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "00": [59, 60, 61, 63, 65, 66, 94, 117, 133, 138, 141, 143, 157, 158, 160, 171, 173, 174, 182, 190, 191, 197, 200], "000": [51, 130, 132, 138, 143, 145, 174, 175, 177, 180, 191, 196], "0000": [14, 65, 95, 172, 173, 174, 179], "00000": 157, "000000": [52, 60, 61, 94, 137, 138, 157, 168, 169, 186, 191, 202], "00000000": 171, "0000003": 52, "000007": 16, "000013": 17, "000032": 16, "000036": 17, "000066": 16, "000079": 16, "0000a3": 198, "0000e": 173, "0001": [51, 59, 65, 172, 174], "000110011001100110011": 51, "000112": 16, "000126": 16, "000155": 16, "00015641732898075134": 116, "000174": 17, "000191": 16, "00019600906371495047": 116, "000214": 16, "000216": 16, "000238": 17, "000269": 17, "000285": 17, "0003": 174, "000301": 17, "000325": 17, "00035465431654651654": 116, "000367": 17, "000385": 16, "000410": 17, "000456": 17, "000465": 17, "000550": 17, "0006": 180, "000683": 11, "000743": 17, "0007734206914647714": 116, "0009": 174, "000917": 16, "000a": 51, "001": [60, 61, 116, 172, 175, 176, 177, 178, 181, 182], "0010": [95, 182], "001058628615053026": 116, "0011": [95, 174], "001100": 17, "001139": 17, "001178": 17, "00121062e": 200, "001232": 17, "001262": 17, "0012645035749301314": 172, "001270": 16, "001354": 17, "00140327e": 200, "0016": 174, "001619": 17, "001665": 17, "0017": 174, "0018": 174, "001835": 16, "001868": 202, "001873": 16, "001899": 17, "0019": [181, 182], "001_python_file_input_output": 69, "002": [60, 61], "0020": 174, "002108": 17, "002177": 17, "002200": 17, "0023": 179, "002327879593869": 154, "00232788": 154, "0024": 174, "002464": 17, "002513": 17, "0027": 174, "0028": 179, "002841": 17, "002895": 17, "002940": 17, "002_python_file_directori": 69, "003": [13, 116, 117, 179], "0030": 174, "003029": 17, "0031": 174, "003152": 17, "003165106289088726": 116, "0031846734422911363": 116, "003456": 16, "003478": 17, "0035": 174, "00357518e": 200, "0037": 174, "003780": 17, "003845": 17, "0039": 174, "003_python_file_except": 69, "004": 177, "004079": 16, "004274": 17, "004291": 17, "0043": 174, "004785": 13, "004838": 16, "0049": 174, "004_python_exceptions_handl": 69, "005": 200, "0051": 174, "0052": 174, "005294": 17, "005308": 17, "005356": 202, "005408": 17, "005436": 16, "0055": [171, 174], "0056": 174, "0057": 174, "005742": 17, "005743": 16, "0058": 174, "005837": 16, "005978": 17, "005_python_user_defined_except": 69, "0060": 174, "00603": 173, "00615": 173, "00616708": 151, "006191": 198, "0062": 174, "006201": 17, "006215683650225401": 172, "0063": 174, "0065": 174, "0067": 181, "006730": 16, "0069": 174, "007": [94, 177, 200], "007120": 16, "0072": 179, "007234": 202, "0073": 174, "007320": 17, "0075": 174, "007525": 16, "00778181e": 200, "0078": 174, "007860": 17, "00786338": 154, "007995": 16, "007_python_function_modul": 68, "0080": 174, "00826323e": 200, "0083": 174, "0084": 174, "00856914e": 200, "0086": 173, "008831": 17, "0089": 174, "009": 52, "0090": [174, 181], "009066": 17, "0092": 174, "0094": 174, "009417": 16, "0095": [174, 179, 181, 182], "009509": 17, "009529": 17, "00960206e": 200, "009757": 17, "009783552028238773": 180, "00_pytorch_fundament": 171, "01": [11, 13, 52, 59, 60, 61, 63, 65, 66, 94, 117, 119, 171, 172, 173, 174, 175, 180, 182, 186, 190, 193, 195, 196, 197, 198, 200, 202], "010": [52, 200], "0100": [95, 173], "010000": 157, "0101": [95, 174], "0102": [174, 181], "010289": 17, "0103": 174, "010311": 16, "01032310e": 200, "01051775e": 200, "010527": 17, "01061": 173, "0107": [173, 174], "010755": 17, "0109": 174, "011": [177, 178], "0110": 174, "01118234211553424": 116, "011255": 16, "0114": 174, "011523": 198, "011630": 17, "01169557310640812": 180, "011743": 17, "0118": 174, "01183409e": 200, "0119": 174, "012098": 17, "012345": 52, "0123456789": 80, "0124": 174, "0125": 174, "0126": 174, "0127": 174, "012874804746266883": 116, "012986": 17, "0131": 174, "013148": 17, "01326": 173, "013316": 17, "013350": 17, "0134": 174, "01345985e": 200, "013474": 17, "0135": 174, "013555": 17, "013648": 173, "013763": 17, "013801801018416882": 172, "013853": 17, "0140": 174, "014086711220443249": 172, "0141": [174, 182], "014127": 17, "0142": [173, 174], "01426": 173, "0143": 174, "014374": 16, "0146": 174, "014745": 17, "0148": 174, "0149": [173, 174], "0150": 174, "015092319017854244": 116, "0152": 174, "0155": 174, "0156": 174, "015672": 16, "0157": [174, 175], "01580": 179, "015862": 17, "015877": 17, "0160": [174, 175], "0161": [174, 179], "016288": 17, "0163": 174, "016412": 180, "0165": 174, "0167": 174, "016705": 15, "0168": 173, "0169": 174, "0170": 174, "0171": 174, "01710843e": 200, "0173": 174, "0177": 174, "017837": 17, "0180": 174, "0181": 174, "0182": 174, "0187": 174, "0188": 174, "0190": 174, "019028": 16, "01919923e": 200, "0192": 174, "0193": 174, "0194": 174, "019404": 17, "019472001962491232": 116, "019542": 17, "019561": 16, "0196": [174, 175], "019608": 157, "019675": 17, "019745": 17, "0198": 174, "0199": 174, "019922": 12, "019968": 174, "01996805111821": 174, "01_learn_python4data": [69, 80, 169], "01_pytorch_workflow_model_0": 172, "01_pytorch_workflow_model_1": 172, "01x345": 52, "02": [12, 59, 60, 61, 65, 66, 117, 172, 173, 174, 175, 182, 186, 200], "0200": [172, 173], "02004": 173, "0201": 174, "0203": 174, "020391": 16, "0204": 174, "020408": 168, "0205": 174, "0207": 174, "0208": [181, 182], "0209": 174, "0210": [174, 182], "021069": 198, "02127": 173, "0213": 174, "0214": 181, "021509": 173, "0216": 174, "021708": 15, "0218": 174, "021838": 17, "021854": 16, "02210": [45, 47], "0222": 181, "0223": [174, 176, 181, 182], "022326": 16, "0225": 174, "0226": 174, "022727": 168, "0228": 174, "0229": 174, "022960": 17, "0231": 174, "02319487": 154, "0232": 174, "0233": 174, "0235": [174, 179], "0236": 174, "023622": 17, "0237": 174, "0238": 174, "0240": 174, "024045": 17, "024052": 15, "0241": 174, "0242": 174, "02423": 173, "024253": 17, "0244": 174, "0245": 174, "0247": 174, "0248": 174, "0249": 174, "025000": 191, "0252": 174, "0253": 174, "025347": 17, "025388": 17, "02539500e": 200, "0254": 174, "025531": 17, "025549": 16, "0256": [174, 180], "025678": 17, "0257": 174, "0258": 174, "02587": 173, "0259": 174, "0260": 174, "026005": 17, "026023": 17, "0261": 174, "0262": 174, "0263": [174, 180], "026366": 17, "0264": [174, 180], "0266": 174, "026648": 17, "0268": 174, "02683718e": 200, "0269": 180, "027": 180, "0271": 174, "0272": 174, "0273": 174, "0274": 174, "027404": 17, "0275": 174, "027513": 17, "0277": 174, "0278": 174, "02788739837706089": 172, "02799": 173, "0280": 174, "028090": 17, "0283": 174, "0284": 174, "028452": 15, "0285": 174, "02850": 173, "0286": 174, "0288": 174, "028944": 17, "028969": 17, "0290": 174, "02901": 173, "0291": 174, "02919730e": 200, "0292": 174, "02928161e": 200, "029371": 17, "029398": 17, "0294": 174, "0295": 174, "0297": 174, "02989209e": 200, "0299": 174, "02f": 32, "03": [24, 52, 66, 117, 132, 143, 171, 173, 174, 175, 176, 180, 182, 186, 200], "0300": 173, "030114": 198, "0304": 174, "0306": 174, "03068156e": 200, "0307": 174, "030774": 186, "03083": 173, "030971": 17, "030e2eec799d": 37, "031": 180, "0310": 174, "031250": 168, "0313": 174, "03132382780313492": 172, "0314": [174, 175], "03145352": 154, "0314fd17": 133, "0315": 174, "0316": 174, "0318": 174, "0319": 174, "032258": 168, "0323": 174, "0324": 174, "032475": 16, "03247675": 154, "0326": 174, "032878": 16, "0330": 174, "03300": 173, "033011": 17, "033088": 17, "033175": 16, "033192": 17, "0333": 174, "033395": 17, "03348578e": 200, "0335": 174, "0336": 174, "03387531e": 200, "033911": 17, "0342": 174, "0343": 174, "034357": 15, "0344": 174, "03448": 173, "0345": 174, "03461004": 154, "03476089984178543": 172, "03486": 173, "0349": 174, "035009": 17, "03505598723366": 80, "0351": 171, "035149": 16, "0352": [174, 175], "0353": [174, 175], "0354": 174, "0355": 174, "0356": [174, 179], "035714": 168, "0359": 174, "0360": 174, "036166": 17, "036300": 17, "0364": 174, "03643": 173, "0365": 174, "0366": 174, "0367": 174, "0369": 174, "0370": 174, "0371": 173, "037224": 16, "0373": 174, "0374": 174, "037445": 17, "0375": 174, "0376": 174, "0377": 174, "037732": 17, "037747": 17, "0381": 174, "03818932920694351": 172, "038202": 17, "0383": 174, "0384": 174, "0385": 174, "038580": 16, "0386": 174, "0388": 174, "0389": 174, "0390": 174, "03910": 173, "0392": [174, 175], "0395": 174, "039631": 198, "039698": 17, "0397": 174, "0398": 174, "0399": 174, "039919": 17, "03_daniels_macbook_pro": 178, "03_pytorch_computer_vision_model_2": 174, "03ed55": 80, "03pm": 60, "04": [59, 65, 66, 117, 137, 138, 143, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 190], "0400": [172, 173], "040000": 157, "0401": 174, "0402": 174, "0404": 174, "0406": 174, "0408": 174, "0409": 174, "04098": 173, "040986": 17, "0411": 174, "0412": 174, "0413": 174, "0415": 174, "04167863354086876": 172, "041750": 17, "0420": [173, 174], "042011": 16, "0421": [173, 174], "042190": 15, "0422": 174, "0424": 174, "0426": 174, "0427": 174, "0428": 174, "042849": 8, "042857": 168, "0429": 174, "04295": 173, "042991": 17, "0430": 174, "0431": [174, 175], "0432": 174, "04324": 173, "043293": 17, "0433": 174, "0440": 174, "0441": 174, "0443": 174, "044382": 17, "0444": 174, "0446": 174, "0447": 174, "0448": 174, "0449": 174, "0450": 174, "045016": 17, "045149999999999996": 137, "0452": 174, "04543796554207802": 172, "0455": 174, "0457": 174, "0458": 174, "0459": 174, "045985": 17, "0461": 179, "04617067e": 200, "0462": 174, "0463": 174, "046456": [11, 13], "046484": 17, "0465": 179, "0467": 174, "0468": 174, "046815": 8, "0469": 174, "0470": 174, "04702762e": 200, "0471": 174, "0472": 174, "047295": 16, "0473": 174, "047347": 17, "0474": 174, "04763428": 151, "0477": 174, "0478": 174, "0481": 174, "048227": 17, "0485": 174, "04857": 173, "0486": 174, "048779": 17, "0488": 174, "048819": 12, "0489": 174, "04892": 173, "0494": 180, "0496": 174, "0497": 174, "049796": 17, "0498": 174, "04_custom_data_cr": [175, 180], "04_python_funct": [68, 80], "05": [8, 60, 61, 66, 117, 128, 134, 143, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 186], "0500": [196, 198], "05017144e": 200, "050218": 17, "0505": 174, "050755": 17, "05082974": 151, "0510": [174, 175], "051020": 168, "051179": 17, "0512": 174, "051267": 15, "05133": 173, "0515": 174, "0516": 174, "051891": 17, "0521": 174, "05233094e": 200, "052387": 12, "0524": 174, "0525": 174, "0527": 174, "0528": 178, "0529": 174, "0530": 174, "053148526698350906": 172, "0532": 174, "0533": 174, "053369999999999994": 138, "0534": 174, "0535": 174, "0537": [176, 178, 181, 182], "053816": 17, "0539": 174, "0540": 174, "0541": 174, "0542": [174, 179], "0544": 174, "0546": 174, "05473060e": 200, "0549": [174, 175], "0551": 174, "0552": 174, "055217": 17, "0553": 174, "0554": 174, "0555": 174, "0556": 174, "0557": 174, "05571": 173, "0558": 174, "0559": 174, "055903": 17, "05599": 173, "0560": 174, "0562": 174, "0563": 174, "056380": 16, "0564": 174, "05655136772680869": 81, "0566": 174, "05669558e": 200, "0567": 174, "0568": 174, "05698": 173, "0570": 174, "057333": 186, "0574": 174, "0577": 174, "0578": 175, "0579": 174, "0580": 174, "0583": 174, "0584": 174, "058497": 16, "0585": 174, "0586": 174, "0587": 174, "058710": 17, "0588": [174, 175], "058824": 168, "058849": 17, "0590": 174, "05908a030c74": 102, "0592": 174, "05924": 173, "0594": 174, "0595": 174, "059554": 17, "0596": 174, "0597": 174, "0598": [173, 174], "0599": 174, "05_going_modular_cell_mode_tinyvgg_model": [176, 181, 182], "05_going_modular_script_mode_tinyvgg_model": [176, 182], "05_going_modular_tingvgg_model": [176, 181, 182], "05_python_fil": 69, "05_pytorch_going_modular_cell_mod": 183, "05_pytorch_going_modular_script_mod": 183, "05t22": 138, "06": [59, 60, 61, 62, 63, 65, 66, 143, 178, 179, 180, 182, 184, 186, 188], "0600": 172, "0602": 174, "0603": 174, "0605": 174, "0607": 174, "061065": 17, "06107": 173, "06109": 173, "0613": [116, 137, 139, 143, 174], "0616": [174, 176, 178, 181, 182], "06161913e": 200, "061689": 17, "0617": 174, "0618": 174, "061915": 17, "0620": 174, "0622": 174, "0623": 174, "0624": 174, "062439": 17, "062500": 168, "0627": [175, 180, 181], "0629": 174, "0630": 182, "0631": 174, "0632": 180, "0633": 174, "0634": [174, 175], "0635": 174, "063577": 202, "0636": 174, "0637": 174, "0638": [174, 180], "0639": 174, "0641": 180, "064182": 180, "06418210905976593": 180, "0642": 180, "0643": 174, "0645": 174, "064516": 168, "0646": [171, 174], "0647": 174, "06473556160926819": 172, "0649": 174, "0650": 179, "0651": 174, "065211": [11, 13], "065444": 17, "06563599e": 200, "0657": 174, "065897": 17, "0659": 174, "065937": 17, "0661": 174, "0662": 180, "0663": 174, "0665": 174, "0666": 174, "06663512e": 200, "066667": 157, "0667": [174, 175], "0669": 174, "0672": 174, "0673": 174, "0674": 174, "06745": 173, "0676": 174, "0677": 174, "0678": 174, "0680": 174, "068044": 12, "0681": 174, "0684": 174, "0685": 174, "068645": 15, "0688": 174, "0689": 174, "0690": 174, "0691": 174, "0692": 174, "0693": [174, 180], "0694": 174, "06947804e": 200, "0696": 174, "069723": 12, "0699": 174, "06_pytorch_transfer_learn": 178, "07": [60, 61, 63, 66, 117, 171, 172, 174, 178, 180], "0700": 128, "0701": 174, "070254": 17, "070279": 17, "0704": 174, "070574": 17, "0706": [174, 175], "0708": 196, "0709": 174, "0711": 174, "0713": 174, "0714": 174, "0717": 174, "07216": 173, "072182": 15, "0722": 174, "07232122868299484": 172, "0724": 174, "0726": 173, "0729": 180, "0730": 174, "0731": 174, "073129": 11, "073160": 16, "0734": 174, "0735": 174, "073595": 17, "0736": 174, "073709": 200, "07376": 173, "0738": 174, "073953": 17, "0740": 179, "074074": 168, "0742": 174, "0745": [174, 175], "07450952e": 200, "0747": 174, "0750": [174, 196], "0752": 174, "0754": 174, "0755": [173, 174], "0757": 179, "0758": 174, "0759": 180, "0761": 179, "0763": 174, "07659773e": 200, "0766": 174, "0769": 174, "076923": 168, "077036": 198, "0772": 174, "0773": 174, "0774": 174, "0775": 174, "0776": [174, 179], "0777": [174, 180], "0778": 173, "0779": 174, "0780": 174, "078020": 17, "0781": 174, "0782": 174, "0783": 174, "0785": 174, "0786": 174, "0787": 174, "0788": 174, "0789": 174, "0790": 174, "0791": 175, "0793": 174, "079365": 17, "0796": 174, "0797": [174, 179], "0799": 174, "07_": 178, "07_effnetb0_data_10_percent_10_epoch": 178, "07_effnetb0_data_10_percent_5_epoch": 178, "07_effnetb0_data_20_percent_10_epoch": 178, "07_effnetb0_data_20_percent_5_epoch": 178, "07_effnetb2_data_10_percent_10_epoch": 178, "07_effnetb2_data_10_percent_5_epoch": 178, "07_effnetb2_data_20_percent_10_epoch": 178, "07_effnetb2_data_20_percent_5_epoch": 178, "08": [59, 63, 65, 66, 117, 143, 171, 174, 180], "0800": 172, "080169": 200, "0803": [174, 175], "0804": 174, "0805": 174, "0805937647819519": 172, "0806": 174, "08062": 173, "0808": 174, "0808e": 174, "0810": 174, "0813": 174, "0814": 174, "08143941": 151, "0816": 174, "0817": 174, "0818": 174, "0820": 174, "0823": 174, "0824": 175, "0825": 174, "083": 177, "0830": [174, 180], "08309749e": 200, "083132": 15, "083174": 17, "083261": 17, "0833": 182, "08333022e": 200, "083333": [157, 168], "0835": 174, "0837": [174, 182], "0838": 174, "0840": 174, "0842": 174, "0843": 174, "0844": 180, "084423": 17, "0845": 174, "0847": [174, 175], "084713": 175, "0848": 174, "0850": 174, "0851": [174, 182], "0853": 174, "0855": [174, 179], "08553692": 153, "085536923187668": 80, "0857": 174, "0859": 174, "0861": 174, "0862": 174, "0863": [174, 175], "086334": 17, "0864": 174, "086505": 17, "0866": 174, "086688": 12, "086780": 16, "087": 11, "0871": 174, "0872": 174, "087328": 17, "0875": 174, "0876": 174, "087777": 17, "0878": 174, "0880": 175, "0881": 174, "0882": 174, "0883": [174, 182], "0886": 174, "0888": 174, "08886633068323135": 172, "0890": 174, "08908725529909134": 172, "0891": 174, "089286": 168, "0894": 174, "0896": 174, "0897": 174, "0899": 180, "08_pretrained_vit_feature_extractor_pizza_steak_sushi": 179, "09": [60, 61, 66, 117, 137, 143, 171, 177, 180], "0901": 174, "0902": [174, 175], "0903": 174, "0904": 174, "0905": 174, "090909": 168, "09090909090909": 80, "0911": 174, "0913": 174, "0914": 174, "0915": 174, "0916": 174, "091695": 17, "0918": 174, "091864": 11, "0919": 171, "09199": 174, "0920": 174, "0923754647374153": 178, "0924": [177, 178], "0926": 174, "0927": 174, "092742": 15, "0928": [174, 178, 180], "0929": 174, "09309": 173, "0932": 174, "0933": [174, 180], "093484": 17, "0936": 174, "0937": 174, "0938": [174, 179], "0939": 174, "0940": 174, "0941": 175, "0945": 174, "0947": 174, "0948": 174, "0949": 174, "0950": [174, 180], "0953": 174, "0955": 181, "095564": 175, "0956": [175, 182], "0957": 174, "0958": 174, "0959": 174, "0960": 174, "0961": 174, "096154": 168, "096220": 17, "0963": 174, "0964": 174, "0965": 174, "0968": 174, "096812": 17, "0969": 174, "09708521e": 200, "0972": 174, "0974": 174, "097538": [11, 13], "0977": 174, "0978": 174, "09790012e": 200, "098": 11, "0980": [174, 175], "0981": 174, "098383": 17, "0984": 174, "0985": 175, "098520": 175, "098661": 17, "0987": 174, "098811": 17, "0989": [173, 174], "09919948130846024": 172, "0992": 174, "0993": 174, "099350157876355": 154, "09935016": 154, "0994": 174, "09_pretrained_effnetb2_feature_extractor_food101_20_perc": 180, "09_pretrained_effnetb2_feature_extractor_pizza_steak_sushi_20_perc": 180, "09_pretrained_vit_feature_extractor_pizza_steak_sushi_20_perc": 180, "09_pytorch_model_deploy": 180, "0_": 52, "0a4959e7a13b": 53, "0b": 51, "0b0001": 51, "0b10": [51, 95], "0b1010": 91, "0b1101011": 51, "0d17a834dca2": 77, "0ef33cc3a94d": 70, "0f": 117, "0f0f0f": 189, "0f0f0f0f": 189, "0f73a35e8ce2": 88, "0j": [91, 95], "0m": [116, 117, 128, 130, 141, 145, 174], "0mib": 171, "0o": 51, "0o12": 51, "0o15": 51, "0o310": 91, "0qgx4kh": 116, "0th": [171, 179], "0x": 51, "0x0000012c87c0af70": 36, "0x000001d284b3b430": 35, "0x000001d8aec3ac10": 102, "0x000001d8aec44eb0": 102, "0x000001d8aec7e1f0": 102, "0x000001d8aec7e4c0": 102, "0x000001d8aec7e5e0": 102, "0x00000218ffc65220": 104, "0x0000021e45765b20": 101, "0x0000021e45765dc0": 101, "0x00007ffad7cb2770": 36, "0x000a": 51, "0x12c": 91, "0x12c4cb88d90": 201, "0x12c4df5c1c0": 201, "0x12c4e273c70": 201, "0x12c50e26c10": 201, "0x12c53a52d60": 201, "0x12c53affc10": 201, "0x163ca247070": 204, "0x163cdf926d0": 204, "0x163ce3245e0": 204, "0x163cfcc79d0": 204, "0x163d0288250": 204, "0x163d05bfa60": 204, "0x163d0f2ae20": 204, "0x1662f00ac70": 192, "0x16633986eb0": 192, "0x166339f84c0": 192, "0x16635a26b80": 192, "0x16635a63550": 192, "0x170b84f24a0": 38, "0x1a11b1a6e80": 195, "0x1a11b2e7a00": 195, "0x1a11b349eb0": 195, "0x1a2186f5940": 202, "0x1a21896cac0": 202, "0x1a218c77d30": 202, "0x1a218d2d6a0": 202, "0x1a218de36a0": 202, "0x1a21a1a7310": 202, "0x1a21a449490": 202, "0x1a21a492c70": 202, "0x1a21b6eba00": 202, "0x1be276a14a8": 204, "0x1bfbd546670": 193, "0x1bfbe8c42b0": 193, "0x1bfbe8d2640": 193, "0x1bfbeacc8b0": 193, "0x1bfbf65d610": 193, "0x1ce07cb24f0": 198, "0x1ce07cc58e0": 198, "0x1da1f804700": 199, "0x1da1f8bf520": 199, "0x1da209c66d0": 199, "0x1da20f86b20": 199, "0x1da20fa4c10": 199, "0x1da214a06d0": 199, "0x1edcdfafd30": 200, "0x219288a7220": 191, "0x2192d5bb3a0": 191, "0x2192de12c70": 191, "0x2192dfa48b0": 191, "0x2192e06b910": 191, "0x2192e0be9d0": 191, "0x2192e328640": 191, "0x22c3a5e3ac0": 197, "0x22c3a722fd0": 197, "0x22c3b278670": 197, "0x22c3c78df40": 197, "0x22c3c8f1040": 197, "0x263397171f0": 189, "0x264e0145a90": 188, "0x26bc28689d0": 190, "0x26bc65bb8b0": 190, "0x26bc7611700": 190, "0x26bc7dd6cd0": 190, "0x26bc7eaf0a0": 190, "0x26bc8131250": 190, "0x26bc81b38b0": 190, "0x26bc81e5730": 190, "0x29872f94b20": 196, "0x7f122dd0f0d0": 180, "0x7f17f3f5f520": 179, "0x7f18845ff0d0": 179, "0x7f53c0b9dca0": 175, "0x7f53c0b9de50": 175, "0x7f53c6d64040": 175, "0x7f5460ab8400": 175, "0x7f5460ab8490": 175, "0x7f5460ad23d0": 175, "0x7f5460ad2f70": 175, "0x7f5461f70c40": 175, "0x7f5461f70c70": 175, "0x7f8389169070": 116, "0x7f853747b550": 181, "0x7f853747bbe0": 181, "0x7fa942951460": 177, "0x7fa942951550": 177, "0x7fa9429a37c0": 177, "0x7fa9429a3a60": 177, "0x7fc991463cd0": 174, "0x7fc991475120": 174, "0x7fca2e3445b0": 182, "0x7fca2e344760": 182, "0x7febf1d213a0": 178, "0x7febf1d21490": 178, "0x7febf1d216a0": 178, "0x7febf1d218e0": 178, "0xfb": 51, "1": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32, 34, 36, 38, 40, 43, 44, 48, 51, 57, 65, 72, 75, 76, 77, 78, 79, 81, 82, 85, 96, 98, 102, 103, 104, 106, 107, 111, 117, 128, 130, 133, 135, 137, 138, 141, 142, 144, 145, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 165, 166, 168, 170, 172, 173, 176, 177, 178, 183, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 199, 200, 202, 203, 204], "10": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 29, 31, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 60, 63, 66, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 82, 88, 89, 90, 91, 92, 93, 94, 95, 97, 101, 102, 104, 106, 107, 111, 116, 117, 119, 130, 132, 134, 137, 138, 140, 143, 144, 145, 147, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "100": [13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 29, 35, 39, 45, 47, 48, 49, 53, 55, 57, 74, 79, 80, 91, 95, 103, 104, 107, 111, 118, 119, 128, 130, 133, 135, 140, 144, 147, 151, 152, 154, 157, 158, 159, 168, 169, 171, 172, 173, 174, 175, 178, 179, 180, 182, 187, 188, 191, 192, 193, 196, 197, 201, 202], "1000": [12, 14, 19, 48, 51, 57, 78, 90, 95, 101, 116, 117, 132, 133, 135, 136, 137, 138, 148, 154, 172, 173, 175, 177, 179, 180, 190, 196, 197, 198, 199, 200], "10000": [9, 16, 17, 18, 57, 132, 143, 148, 154, 157, 174], "100000": [15, 57, 148, 186], "1000000000000000055511151231257827021181583404541015625": 51, "1001": 174, "1002": 174, "10026431e": 200, "1003": 174, "1004": 174, "1005": 174, "1006": 174, "1008": 174, "100k": 132, "100th": 140, "101": [77, 102, 167, 168, 175, 178, 180, 197, 198, 201, 202], "1010": [95, 173, 174], "1011": 174, "1012": 179, "1016": 174, "1017": 174, "1018": 174, "101803": 13, "102": [77, 102, 157, 158, 167, 168, 169, 175, 177], "1020": [174, 175], "1021": 174, "1024": [57, 178, 179, 180], "10276143": 151, "1029": 174, "103": [102, 167, 168, 169, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1031": 174, "1034": 174, "1039": 174, "104": [31, 102, 157, 158, 168, 169, 175], "1041": 174, "1043": 174, "1044": 174, "104504": 16, "1046": 174, "1049": 174, "105": [11, 39, 80, 137, 168], "1050": [52, 174], "1051": 174, "1052": 174, "1053": [164, 174], "1054": [164, 174], "1055": [164, 174], "1056": 164, "1057": [164, 174], "1058": 175, "1059": [174, 175], "106": [168, 171], "1060": 174, "1061": [171, 174], "1062": 174, "1063": [172, 174], "1065": 174, "106628291529549": 80, "1067": 179, "106846": 17, "10696289e": 200, "107": [51, 168, 175], "1070": 174, "107072": 17, "1070e": 174, "1072": 180, "107221": 14, "107353": 13, "1074": [174, 175], "1077": 174, "1078": [174, 175], "107833": 175, "108": [168, 175], "1080": 174, "108178": 17, "1082": 174, "1084": [174, 179], "1086": 174, "1087": 174, "1088": 174, "109": [77, 157, 168, 178, 180], "1092": 174, "109299": 198, "1093": 174, "1095": 174, "1095522857580948": 194, "109553": 17, "1096": 174, "1097": [174, 179], "1097501": 151, "1098": [128, 175, 179], "1099": [128, 174], "1099_file": 90, "10_epoch": 178, "10_python_pandas_modul": 169, "10ffff_": 52, "10fp": 180, "10k": [130, 179], "10mb": 180, "10x": [118, 119], "10x256": 175, "11": [12, 15, 17, 31, 35, 38, 44, 47, 49, 51, 52, 53, 55, 57, 61, 65, 66, 75, 79, 89, 91, 92, 95, 97, 101, 102, 117, 130, 132, 134, 138, 140, 144, 147, 151, 152, 153, 154, 157, 161, 166, 168, 169, 171, 173, 174, 175, 177, 179, 186, 188, 196, 201, 202], "110": [168, 169, 171, 180], "1100": [52, 128], "1101": [128, 174], "110110": 98, "1102": 128, "1104": 182, "1105": 171, "110560": 17, "1105e": 173, "111": [95, 128, 157, 158, 168, 169, 175, 180], "1110": [95, 174], "1111": [39, 95, 174], "111111": [94, 168], "11111111": 154, "1112": [174, 176, 181, 182], "1114": 174, "1115": 174, "1117": 174, "112": [128, 138, 168, 169, 174, 177], "1120": 174, "1121": 174, "11222578": 8, "1123": 174, "112300": 138, "1124": 174, "112483": 17, "1126": 175, "1127": 175, "1128": 175, "11289431e": 200, "1129": 175, "113": [118, 128, 168, 174, 175], "1130": [174, 175], "1131": [175, 182], "1132": [174, 175], "1134": 195, "1135": [174, 195], "113538": 17, "1136": 195, "11360953003168106": 172, "1137": [174, 175, 195], "1138": [174, 182, 195], "1139": 174, "114": [128, 157, 158, 168, 169, 174, 175], "1140": 174, "1141748": 117, "11421774e": 200, "1143": 174, "1144": 174, "1145": 174, "1146": 174, "1147": 174, "1148": 174, "1149": 174, "115": [128, 130, 157, 158, 168, 169, 174], "1150": 174, "1151515151515152": 188, "1154": 174, "115551": 17, "115697": 175, "1157": [175, 179], "115799": 11, "1158": 195, "1159": 195, "115971": 17, "116": [128, 130, 168, 174], "1160": 195, "1161": 195, "1162": 195, "1163": 180, "117": [128, 130, 168, 171], "1170": 174, "1172": 175, "11734513e": 200, "117543": 17, "1176": 175, "117647": 168, "117668": 17, "118": [128, 130, 168], "1181": 174, "11818328e": 200, "119": [128, 130, 168, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "119e50d96cfb": 70, "11x": [179, 180], "12": [8, 10, 12, 14, 16, 18, 19, 24, 29, 31, 32, 35, 39, 40, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 57, 60, 61, 63, 64, 65, 66, 70, 72, 74, 75, 79, 80, 91, 92, 94, 95, 97, 101, 106, 116, 117, 130, 138, 140, 143, 144, 151, 152, 153, 154, 161, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 188, 189, 190, 195, 197, 198, 200, 202, 203], "120": [4, 49, 77, 80, 128, 132, 157, 159, 168, 169, 171, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1200": [95, 172], "12000": 148, "120027": 117, "120k": 141, "121": [128, 130, 132, 168], "1212": 97, "121486": 173, "121492": 17, "1216": [175, 179], "122": [12, 128, 168], "1224": [174, 179], "122967": 17, "123": [12, 52, 93, 97, 128, 130, 168], "12336799": 151, "123456789": 52, "1234567890": [40, 91], "1234567890123456789": [51, 92], "12345678901234568": [51, 92], "12345678910": 48, "123774": 11, "1238": 182, "123xyz": 180, "124": [12, 93, 130, 168, 175], "1240": [128, 173], "1241": 128, "1242": 128, "1243": 128, "124377": 17, "1244": 128, "1246": 179, "125": [12, 48, 57, 80, 117, 130, 147, 153, 168], "125000": 168, "1251": 179, "1252": 186, "1255": 175, "12551": 130, "1257": 174, "1258": [174, 179], "12587": 197, "126": [12, 130, 168, 177], "1262": 174, "126257": 198, "126960000": 68, "127": [12, 130, 147, 168, 180, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1270": 180, "12751": 130, "1277": [174, 180], "1278387305019275": 188, "128": [12, 53, 57, 118, 130, 168, 174], "1280": [177, 178, 179], "12800": 174, "128440": 157, "1285": [174, 175], "12872044e": 200, "1288": [172, 174], "128x": 179, "129": [12, 130, 168], "1294": 175, "12940": [157, 158, 169, 191], "12945": 169, "1295": 137, "1295210000": 68, "1296": [57, 186], "129861": 11, "12k": 130, "13": [8, 12, 15, 28, 29, 31, 35, 38, 48, 51, 52, 53, 55, 57, 60, 61, 63, 66, 70, 75, 77, 79, 80, 91, 93, 95, 101, 116, 130, 140, 143, 144, 147, 152, 153, 154, 161, 168, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 191, 198, 200, 202], "130": [12, 117, 130, 157, 168, 171, 175, 177], "1300": 174, "13037": 173, "1309": 171, "131": [12, 31, 168], "1313": 180, "1316": 174, "1318": 182, "131910": 15, "132": [12, 130, 168], "1320": 174, "1322": 174, "1324": 173, "1325": 174, "1326244364": 59, "1328": 179, "133": [12, 130, 168, 180], "1331": 179, "1332": 171, "1333": [175, 196], "1336": 171, "134": [12, 130, 168], "13409426e": 200, "13415": [157, 158, 169], "1345": 39, "13495": [157, 158, 169], "13499": 169, "135": [12, 130, 168], "135432": 180, "135925": 169, "136": [12, 130, 168, 175], "1360": 175, "136041": 175, "1366": 179, "13680419e": 200, "137": [12, 130, 132, 168, 175], "1373": [174, 175], "1375": [128, 179], "13756537093": 94, "1376": 128, "1377": [128, 179], "137723281": 12, "1377422166": 68, "1378": 128, "1379": 128, "138": [12, 130, 147, 168, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1382": 175, "138264": 157, "1383": 179, "138373": 175, "1384": 175, "139": [12, 118, 130, 168, 175], "13914421e": 200, "13915538e": 200, "139472": 132, "13950": [157, 158, 169], "1396": 180, "13960670e": 200, "1399": 174, "14": [8, 12, 13, 15, 17, 19, 24, 31, 32, 38, 39, 47, 49, 52, 53, 54, 55, 57, 62, 64, 66, 70, 74, 75, 90, 91, 92, 95, 99, 101, 102, 106, 130, 140, 143, 144, 147, 152, 153, 154, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "140": [12, 128, 130, 138, 168, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1400": [137, 172], "140000": 138, "14003": 191, "1401": 130, "1403": 174, "1403916": 117, "1404": 174, "140708960741200": 96, "140708960741232": 96, "140708960741424": 96, "1408": [178, 180], "141": [12, 128, 130, 168, 169, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "14112001": 153, "1412": 174, "1415": 52, "14159": [80, 82], "141592653589793": [51, 80, 94], "14183273e": 200, "142": [12, 128, 130, 138, 168, 180], "14204329": 154, "1425": 175, "1426": 175, "142631": 175, "142705": 17, "142857": 168, "143": [12, 128, 130, 168, 175], "1437": 179, "14398": 173, "144": [12, 28, 48, 95, 128, 130, 168, 175], "1445": [186, 195], "1446": 195, "14464017748832703": 172, "1447": [179, 195], "1448": 195, "1449": 195, "145": [12, 168, 175, 180], "1453": 186, "14577043e": 200, "1459": 182, "146": [12, 35, 168, 171, 175], "146124": 17, "14613738e": 200, "1465": 174, "146599183": 68, "147": [12, 168, 175], "1472": 175, "14770535": 151, "147751": 17, "147760": 173, "148": [12, 153, 168, 175, 180, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "148148": 168, "14847551e": 200, "149": [12, 168, 175], "1490": 175, "149320": 17, "1495": 173, "1499": 174, "14it": 174, "14j": 91, "14m": 179, "15": [8, 12, 15, 16, 17, 18, 19, 29, 31, 36, 38, 39, 40, 43, 44, 46, 47, 49, 51, 52, 53, 54, 55, 57, 60, 61, 65, 66, 71, 72, 74, 80, 92, 95, 101, 102, 128, 130, 137, 138, 140, 144, 147, 152, 153, 168, 169, 174, 175, 177, 178, 179, 180, 186, 188, 190, 195, 196, 198, 199, 200], "150": [12, 14, 15, 91, 104, 116, 130, 147, 148, 157, 168, 175, 180, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1500": [133, 174, 190, 192], "15000": [72, 148], "150000": 148, "1501": 174, "1502": 174, "1503": 174, "1505": 174, "1506": 173, "15097": 12, "151": [12, 130, 168], "151165": 198, "1511893559": 59, "1513": 174, "15150": 180, "151786": 168, "152": [12, 130, 168, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "152862": 17, "1528797322": 60, "153": [48, 130, 168], "1531": 173, "15325888": 173, "153259": 173, "1533": 173, "153319": 11, "153527": [11, 13], "1536": [116, 132], "153883": 17, "154": [130, 157, 158, 168, 169, 175], "1541": 174, "1545730073": 64, "1545925769": 65, "1545966844": 65, "1549": 165, "155": [118, 130, 137, 168], "15514180e": 200, "1554": 179, "1556": 179, "156": [24, 168, 169, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "156250": 168, "156586": 16, "1568291": 197, "15687723e": 200, "1569": 174, "157": [168, 171], "15750": 169, "1576": 179, "158": [168, 169, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "158023": 147, "1582568": 197, "1589": [174, 179], "159": 168, "1590": 174, "159689": 13, "159790": 17, "16": [8, 12, 15, 27, 30, 31, 32, 34, 37, 38, 47, 48, 49, 51, 53, 54, 55, 57, 66, 72, 79, 80, 85, 90, 91, 92, 95, 101, 102, 103, 130, 140, 143, 144, 152, 153, 154, 168, 169, 171, 172, 175, 177, 179, 180, 186, 190, 191, 193, 195, 196, 197, 198, 201, 202], "160": [157, 168, 169, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1600": 172, "1608": [174, 175], "161": 168, "161006790": 68, "161290": 168, "161491": 16, "16188": 157, "16189161": 174, "162": [74, 168], "1620": [174, 175], "162014": 175, "1623": 175, "1624370069": 64, "1624370297": 65, "16280mib": 171, "162875": 8, "163": [168, 175], "163778": 17, "164": [134, 168], "1640": 179, "1647": [175, 193], "1648": 171, "165": [138, 168, 175], "16500": [157, 158, 169], "165000": 138, "1652": 179, "166": [17, 19, 168], "1664": 174, "1666": 173, "1669": 180, "167": 168, "167204": 17, "168": [157, 158, 168, 169], "1680013019": 116, "16807": 57, "168321": 60, "1685": 175, "1686": 175, "169": [168, 169], "1690": [181, 182], "169322": 173, "1695": 179, "1697": 175, "169704": 175, "16j": 91, "16pt": 198, "16x": 175, "16x16": 179, "17": [12, 15, 38, 47, 48, 51, 53, 55, 57, 65, 66, 71, 72, 92, 101, 102, 103, 130, 132, 140, 144, 152, 160, 168, 169, 173, 175, 179, 180, 186, 194, 198, 202, 203], "170": [117, 168], "1700": 18, "1701": 179, "170215": 17, "17041474e": 200, "171": [157, 158, 168, 169, 171, 175], "1711e": 174, "17137357e": 200, "171588": 17, "171995": 169, "172": [65, 168, 175], "1725": [174, 175], "17254901960784313": 191, "173": [168, 175], "173282": 173, "17328203": 173, "1733": 173, "1734": 174, "173469": 168, "1736": 173, "174": [168, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "174260": 8, "17450": [157, 158, 169], "175": [80, 117, 147, 168], "175000": 148, "1751": 174, "1752011936438014": 51, "1757": 138, "176": [77, 80, 157, 158, 168, 169, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "176471": 168, "1765": 175, "1766": 180, "1768": 138, "177": 168, "1772": 179, "177mib": 171, "178": 168, "179": 168, "179027": 17, "17951135e": 200, "179585": 11, "1796": 47, "17995": 169, "17th": 116, "18": [12, 15, 27, 29, 32, 34, 38, 43, 44, 47, 49, 55, 56, 57, 59, 60, 62, 63, 66, 68, 72, 94, 95, 97, 102, 103, 116, 130, 140, 143, 144, 147, 152, 157, 158, 160, 168, 169, 173, 175, 179, 180, 186, 197, 201, 202], "180": [48, 143, 168, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1800": 172, "18000": 148, "1802": 174, "1804": [173, 175, 179], "18089902e": 200, "181": [168, 175], "1815": 174, "18176766975113706": 188, "1819": [74, 77], "182": [168, 169, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1821": 74, "1822565": 197, "183": [80, 168, 180], "18324209e": 200, "18344": 169, "184": [168, 169, 175], "184080": 12, "1843": 175, "1845": 174, "185": [168, 180], "1850": 174, "1855": 116, "186": 168, "18644463e": 200, "1865": 174, "1867": 174, "1869": 174, "186988000": 68, "186e9069bdbf14a9": 128, "187": [168, 169, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1872": 173, "187264": [11, 13], "1873": 174, "1875": 174, "187500": 168, "188": [157, 158, 168, 169, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "18812": 130, "1882": [174, 175], "1882615260180538": 194, "188828": 17, "1889": 173, "189": [168, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "18920": 169, "19": [12, 15, 34, 38, 40, 47, 48, 52, 53, 56, 57, 65, 66, 72, 74, 75, 77, 91, 95, 102, 119, 130, 140, 144, 147, 152, 153, 157, 158, 160, 162, 163, 164, 166, 167, 168, 169, 171, 174, 175, 177, 179, 188, 191, 194, 197], "190": [168, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1900": 157, "19000": 103, "1902": 174, "190337": 15, "190504": 196, "19068": 130, "190871": 147, "191": 168, "1910": 174, "19116": 102, "1913": 173, "192": [168, 177], "1920e": 173, "1922": 175, "192250": 15, "1926": 71, "1927": 174, "1928": 47, "192985": 147, "193": [168, 169, 175], "19305918e": 200, "193080": 147, "193451495": 171, "1937": 24, "194": [168, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "194125062": 68, "1942": 39, "1945": 173, "195": 168, "1953": 47, "1955": 179, "19566591e": 200, "195915": 8, "196": [147, 154, 168, 179, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1960": [130, 136], "1961": 175, "196526332130161": 154, "1966": 52, "19680801": [25, 107, 111], "19692239e": 200, "197": [168, 169, 179, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1970": [59, 64, 65, 171], "1973": 174, "19735756e": 200, "197483": 15, "1976713240146637": 172, "1977": 200, "19789154e": 200, "1979": [175, 179, 182], "197917": 175, "198": 168, "1980": 130, "1984": [116, 174, 179], "1985": 130, "1988": [116, 130], "1989": [116, 179], "199": [139, 168, 169, 180, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "1990": 130, "199128": 16, "1992": 130, "1993": [130, 133], "199333": 186, "1994": 130, "1995": [130, 133], "1996": [0, 130, 132], "1997": [0, 130], "1998": 130, "1999": [130, 174], "19a": 70, "19th": 130, "1a2": 39, "1ab34": 39, "1b9ae9b69587": 153, "1d": [150, 151, 174, 179], "1e": [30, 174, 175, 179, 180], "1e100": 91, "1e6": [28, 29], "1e8": 197, "1ee33d": 80, "1erejibdqeccqncb1pbz7w": 116, "1f": [52, 148, 198], "1first_nam": 39, "1gcsgplmabavqz26": 80, "1j": [31, 91, 155], "1k": [132, 173, 179], "1m": [31, 116, 117, 128, 130, 141, 145, 147], "1min": 178, "1n": 31, "1num": 90, "1p": 93, "1st": [37, 53, 75, 76, 77, 78, 80, 117, 140, 143, 171], "1variabl": 88, "1x": 180, "1x1": [16, 18], "1x2": [16, 18], "1x3": [16, 18], "1x4": [16, 18], "1x5": [16, 18], "1x6": [16, 18], "1x7": [16, 18], "1x8": [16, 18], "1x9": [16, 18], "2": [3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 30, 31, 32, 34, 36, 40, 42, 43, 44, 48, 51, 57, 65, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 96, 98, 102, 103, 104, 106, 109, 119, 128, 130, 131, 133, 135, 141, 142, 144, 145, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 176, 177, 178, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 207], "20": [11, 12, 13, 15, 16, 17, 18, 19, 28, 29, 32, 34, 36, 38, 40, 46, 47, 48, 49, 51, 52, 53, 56, 57, 59, 63, 66, 71, 72, 74, 75, 77, 79, 80, 92, 95, 101, 102, 116, 117, 130, 134, 136, 140, 144, 147, 150, 152, 153, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 174, 177, 178, 179, 180, 182, 188, 190, 191, 196, 198], "200": [55, 74, 77, 80, 91, 103, 116, 117, 129, 130, 134, 137, 138, 147, 152, 168, 172, 173, 179, 180, 191, 200, 202], "2000": [130, 133, 137, 138, 142, 144, 145, 148], "20000": 144, "200000": [148, 157], "200000000000003": 85, "2001": 136, "2003": 130, "20040757": 154, "2005": [119, 130], "200555": 63, "2005in": 133, "2006": [130, 133], "2006i": 133, "2008": 117, "200882": 17, "2009": 130, "201": [59, 130, 168], "2010": 130, "2011": [147, 173], "2012": [59, 97, 130], "2013": [60, 61, 130], "201300": 198, "2014": [130, 138], "2015": [130, 179, 186, 202], "2016": [130, 200, 202], "2016life": 134, "2017": [11, 13, 59, 134, 173, 179, 188, 202], "2017becaus": 116, "2018": [39, 59, 60, 61, 64, 65, 117, 147, 202], "2019": [59, 60, 61, 63, 64, 65, 77, 117, 130, 171, 179], "202": [74, 130, 168], "2020": [63, 130, 157], "20200": 180, "2020when": 132, "2021": [52, 59, 60, 62, 65, 74, 116, 137, 171, 180], "2021befor": [116, 130], "2021pythondatatyp": 52, "2021pythondatayp": 52, "2022": [71, 137, 139, 141, 171, 174, 175, 177, 178, 179, 180], "2023": [24, 128, 132, 136, 137, 138, 139, 141, 144, 171], "20240789e": 200, "202563": 191, "2028": 174, "202998": 8, "203": [17, 19, 130, 168], "2032": 179, "2039": [174, 175], "204": [130, 168], "2044": 179, "204451": 17, "20491465": 154, "205": [130, 132, 168], "2050": 179, "2052": 174, "205306": 15, "2056": 193, "206": [130, 168], "206135893": 68, "2064": 179, "207": [130, 168, 169, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "2074": 179, "2076": 179, "20784702e": 200, "208": [130, 168, 169, 177], "20800138e": 200, "20801": 147, "20843398e": 200, "2086": 132, "2087a9c41308": 38, "209": 168, "209539": 15, "209800": 15, "20994144e": 200, "20it": 182, "20th": 130, "20x20": 7, "21": [12, 15, 31, 38, 40, 47, 48, 49, 52, 53, 56, 57, 59, 61, 62, 65, 66, 72, 77, 80, 103, 140, 143, 147, 152, 153, 154, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 174, 175, 177, 190, 193, 195, 196, 197, 198, 202], "210": [168, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "2102": 39, "2106": 174, "2109": 171, "211": [128, 168, 187], "211349": [11, 13], "211538": 168, "2117351": 180, "2118": [173, 174], "212": [128, 168, 187], "2124579": 175, "2126": 186, "21260800e": 200, "2129": 179, "213": [128, 168, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "21330910940589698": 194, "2134": 174, "21355": 12, "2137": 179, "213710": 15, "21379529e": 200, "214": [17, 19, 128, 168, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "214286": 168, "214695": 200, "214782": 12, "2148": 116, "215": [128, 145, 168, 174], "2150": 179, "2154": 154, "2157": [174, 175], "216": [48, 57, 80, 168, 174], "2162": 171, "217": [168, 174], "21728": 12, "21729660034179688": 172, "217391": 168, "21741122e": 200, "21748794e": 200, "218": [168, 174, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "2181": 174, "2183": 174, "21855997e": 200, "2189884": 12, "219": [138, 153, 168, 174, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "2191": 174, "2196": 174, "21987980e": 200, "21k": 179, "22": [12, 15, 24, 29, 31, 52, 53, 56, 57, 59, 60, 62, 63, 65, 66, 72, 77, 79, 80, 95, 130, 152, 153, 154, 158, 168, 171, 174, 175, 179, 186, 196, 198, 202], "220": 168, "2200": [143, 179], "220087": 198, "22026": 51, "2205": 179, "220657": 17, "2209": 174, "221": [168, 178, 180], "2210": 173, "2211": 174, "222": 168, "222222": 168, "22222222": 154, "22291790e": 200, "223": [168, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "223188": 8, "2235": 174, "22357762": 154, "22389": 191, "223905": [11, 13], "22397933e": 200, "224": [168, 171, 175, 177, 178, 179, 180], "22417715e": 200, "224369": 11, "2244": 173, "224x224": 177, "225": [130, 168, 175, 177, 178, 179, 180, 181, 182], "225000": 148, "2251799813685248": 51, "2256": 173, "2258": 174, "225806": 168, "22592182e": 200, "226": [130, 147, 168], "2261": 179, "226677": 13, "22672978": 151, "227": [130, 168, 178, 180, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "2270": 173, "22709318e": 200, "22722896e": 200, "2275": [174, 175], "2279": 179, "228": [130, 147, 168], "2281": 179, "228173": 180, "228434": 198, "22897": 197, "229": [130, 168, 171, 177, 178, 179, 180, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "22911": 191, "2292": [171, 179], "22931538e": 200, "22949": 191, "2298": 130, "23": [12, 15, 31, 39, 47, 48, 52, 53, 59, 60, 61, 63, 65, 66, 80, 93, 102, 116, 128, 130, 137, 139, 140, 147, 152, 157, 158, 168, 169, 171, 174, 175, 178, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "230": [138, 168], "230000": 138, "2303": 174, "2305ca5": 24, "231": 168, "2314": 175, "23148074": 173, "231481": 173, "2315": 173, "23180804": 151, "2319": 174, "232": [168, 177, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "23250": 143, "2328": 174, "233": [48, 168], "2331": 174, "233336": 11, "233423": 59, "23379671": 154, "2339e": 173, "234": 168, "234234": 116, "2344": 179, "2345": 174, "234566": 59, "2347": [174, 179], "234922": 11, "235": 168, "2351": 179, "2352": 179, "2353": 175, "2354": 174, "2358": 179, "236": 168, "2360": 174, "23600": 169, "23606798": 153, "23611012e": 200, "2368": 171, "237": [130, 168], "2377": 179, "238": [130, 168], "2381": 173, "23845": 169, "2389": 179, "239": [130, 168], "2391": 179, "2392": [174, 175], "24": [12, 15, 29, 40, 47, 49, 53, 55, 56, 57, 60, 61, 66, 68, 79, 80, 101, 102, 130, 143, 147, 152, 157, 158, 168, 169, 174, 175, 177, 179, 180, 190, 193, 195, 196, 197, 198, 202], "240": [130, 168, 177], "2400": 173, "2401": [57, 174], "241": [130, 168], "2412": 179, "2418": 179, "242": 168, "2422": 179, "24271445e": 200, "24299133e": 200, "242b77ef2a87": 92, "243": [57, 168], "2431": [174, 175], "2432": 174, "244": [80, 168], "2445": 179, "2446": 179, "244898": 202, "2449": 174, "245": 168, "2454": 179, "245426098662": 161, "245483": [11, 13], "2456": 174, "245614": 168, "2457": 28, "24576mib": 171, "2458": 186, "246": 168, "246154": 157, "2465": 174, "24674836e": 200, "24677": 191, "247": [168, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "2471": 174, "247597": [11, 13], "2476979795053773": 51, "248": [168, 179], "24813498e": 200, "248490": [11, 13], "24865": 197, "249": 168, "2493": 179, "249765": 174, "2499": 174, "25": [12, 16, 17, 18, 19, 24, 30, 37, 40, 47, 48, 49, 51, 53, 55, 56, 57, 60, 64, 66, 68, 71, 80, 91, 92, 94, 95, 101, 102, 130, 141, 144, 147, 148, 152, 153, 157, 168, 173, 175, 180, 186, 188, 190, 191, 193, 197, 198, 202], "250": [104, 117, 132, 145, 168, 174, 175, 179, 180], "2500": [47, 175, 196, 198], "250000": [148, 157, 168, 191], "2505": 173, "250fe64180f3": 102, "250k": 141, "250w": 171, "251": [51, 168], "2510": [174, 175], "2518868": 138, "252": 168, "2521": 174, "25231985e": 200, "25250": 180, "2526": 179, "252785": 13, "253": [51, 168], "2531": 180, "2534156": 197, "2535": 186, "2536": 174, "254": [101, 168], "2541": 179, "2549": [173, 174], "25490048e": 200, "255": [9, 11, 16, 17, 18, 19, 80, 168, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "2550": 47, "2557": 193, "2558": 174, "2559205": 151, "256": [30, 53, 57, 130, 168, 174, 175, 177, 178, 179], "2560": [174, 175], "25600": 174, "2560x3": 175, "2566": 171, "2569": 174, "257": [84, 130, 168], "2573": 179, "2578": 175, "257812": 175, "258": [130, 168], "2581": 174, "2582289": 180, "258364": 15, "2587": 174, "258705000": 68, "258745": 197, "2588": 174, "259": [130, 168], "259259": 168, "259490": 186, "25hmlxtend": 174, "25th": 157, "26": [12, 52, 53, 54, 56, 57, 63, 66, 80, 101, 130, 132, 137, 143, 147, 152, 157, 158, 168, 169, 186, 190, 196, 198], "260": [130, 168], "2604": [175, 179, 182], "260417": 175, "2606": 179, "2609": 174, "261": [130, 168], "2617": 179, "261842": 191, "262": [168, 177], "262144": 52, "262680": 16, "2627": 174, "263": 168, "2633": 179, "2635": 179, "263600": 15, "2637": 179, "2638": 174, "264": 168, "2641": [176, 178, 181, 182], "26421880": 174, "264672": 17, "265": 168, "265008": 12, "2652958": 137, "26568259e": 200, "26571389e": 200, "266": 168, "2660": 179, "2664": 174, "2669": 174, "267": 168, "2671131": 171, "2671256": 171, "268": 168, "2686": 174, "2688": 174, "269": 168, "2694": 179, "2697": 179, "269809": 174, "26t12": 137, "27": [12, 36, 40, 47, 48, 49, 56, 57, 63, 65, 68, 77, 79, 94, 95, 101, 130, 141, 143, 147, 152, 153, 157, 158, 168, 169, 171, 174, 175, 177, 196], "270": 168, "2706": 174, "2707": 179, "271": 168, "2711": 173, "2713": 174, "2714": 180, "271429": 168, "272": 168, "27216990e": 200, "272699": 198, "272727": 168, "273": [38, 168], "2738": 179, "274": 168, "2741": 174, "2748": 173, "275": [168, 195], "27500": 157, "2751": 179, "2752603": 180, "2753": 174, "2754": 179, "27541": 180, "275510": 168, "275862": 180, "276": 168, "2761": 11, "2766": 179, "276716": [11, 13], "27672348": 151, "277": [132, 168], "277027": [11, 13], "2771": 179, "2772": 179, "2773": 179, "27764243": 151, "2779": 174, "278": 168, "2780": 178, "2782": 179, "278711": 17, "27891384e": 200, "279": [128, 168], "2793": 179, "2795": [171, 179], "27j": 91, "27w": 171, "28": [12, 15, 31, 38, 47, 48, 49, 56, 57, 59, 65, 71, 80, 101, 137, 142, 147, 152, 168, 169, 174, 175, 177, 178, 198], "280": [128, 133, 143, 168, 175], "2801": 143, "2804": 179, "2805": 180, "280702": 168, "2809": [174, 179], "280w": 171, "281": [128, 168, 177], "281250": 168, "28128674924373626": 180, "281287": 180, "2813": 180, "2815": 173, "2817": 195, "2818": 195, "2819": 195, "282": [128, 168], "2820": 195, "2821": 195, "2822": 186, "2824": [173, 174, 175], "28254475e": 200, "282662": [11, 13], "283": [128, 168], "2833": [174, 196, 198], "28366219": 153, "284": [11, 13, 168], "2840": [174, 179], "28418980453852622603883856494709731311218158362293224700445543940796643776911788129508577246309929258069598467896008287596053863082109746801947722280783720032649818198464452375358348619120021135797251857019557032565638659667745421115194468559021541269027438746788486392649581405327516658718317011453858465218779880972140612551504149701082164179367484198570734230003528355826545644223794779911723917115845213739921327820409005460708547942445234906498880588411276755120002108963510955276534630522965966177951626038063994937181228938844252668098515385045718428663547788122173798704717510979319749834083419004355222012043715855123615249682039587844431246269017612728291710718821388840627277407189863509789929339102406655115786899696829902032282666983426897111750208839152830573688512831984602085360572485861376": 95, "2842": [173, 174], "2848": 179, "285": [117, 168], "2852": 182, "286": 168, "2863": 174, "28675168e": 200, "2869": 180, "287": [130, 168], "287372": [11, 13], "2874848": 180, "288": [130, 168, 177, 178, 180], "2881": 173, "2883": 175, "28883356e": 200, "289": [130, 168], "2890": 173, "289000": 147, "2891": 179, "289474": 191, "28th": 130, "28x19": [16, 18], "28x20": [16, 18], "28x21": [16, 18], "28x22": [16, 18], "28x23": [16, 18], "28x24": [16, 18], "28x25": [16, 18], "28x26": [16, 18], "28x27": [16, 18], "28x28": [5, 7, 9, 16, 17, 18, 19, 174], "29": [12, 15, 19, 38, 47, 48, 65, 68, 101, 117, 152, 153, 168, 169, 175, 178, 179, 180, 189, 190, 195, 197, 202], "290": [130, 168, 177], "2902": 174, "290549": [11, 13], "2906": 173, "291": [130, 168], "291667": 168, "2917": 174, "2918": 173, "291853": 14, "292": 168, "2920": 174, "2920e": 174, "29235": 12, "292969": 175, "293": 168, "2930": [175, 182], "293987": 12, "294": 168, "29402596": 154, "2941": 174, "29431485e": 200, "2946014910624595": 80, "294804": [11, 13], "294850": 13, "295": 168, "29515": 174, "29534113": 154, "295455": 168, "29560668e": 200, "295817": 11, "296": 168, "2969": 179, "297": 168, "2972": 178, "2973": [176, 178, 181, 182], "298": 168, "2981": 174, "298226": 11, "299": 168, "2992": 179, "29995": 169, "29ajdjehni": 140, "2a721b8800df": 133, "2ac45d11f3db": 133, "2b7b22686f73744e616d65223a22544954414e2d525458227d": 171, "2d": [15, 147, 148, 150, 151, 157, 173, 174, 179, 194, 203], "2d7f5e": 198, "2darrai": [161, 164], "2f": [11, 12, 13, 52, 94, 103, 147, 173, 174, 198, 201], "2f7f4e5fdb49": 66, "2j": [31, 51, 91, 92], "2k": 174, "2m": 132, "2min": 178, "2n": 31, "2nd": [37, 52, 53, 54, 75, 76, 78, 117, 140, 143, 171], "2p": 27, "2rgxf": 80, "2to3": 118, "2x": [95, 147, 179, 180], "2x2": [151, 202], "3": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 43, 44, 46, 48, 51, 55, 57, 61, 65, 71, 72, 75, 76, 77, 78, 79, 82, 85, 87, 88, 93, 96, 98, 99, 101, 102, 103, 104, 106, 116, 117, 119, 128, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 172, 173, 175, 176, 177, 178, 181, 182, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 199, 200, 201, 202, 203, 204], "30": [14, 17, 19, 28, 29, 36, 37, 38, 44, 47, 48, 49, 52, 53, 57, 59, 60, 61, 63, 65, 71, 74, 75, 76, 77, 80, 90, 92, 95, 96, 101, 117, 130, 133, 141, 147, 152, 157, 168, 171, 172, 173, 174, 177, 179, 180, 188, 191, 193, 195, 196, 199], "300": [18, 38, 53, 90, 91, 117, 130, 132, 138, 140, 144, 147, 168, 172, 173, 179, 189], "3000": [17, 18, 72, 117, 132, 133, 172, 173], "300000": [148, 186], "3000000000000003": 51, "300000e": 94, "3008": 179, "301": 168, "301184": [11, 13], "30119580e": 200, "3013": 174, "3015": 174, "302": 168, "3020": 174, "302078": 11, "3024": 175, "3025": 172, "303": [168, 180], "3031": 174, "30378713e": 200, "3038": 180, "303m": 179, "304": 168, "3047": 175, "305": 168, "305880": 15, "306": 168, "3061": 171, "306264": 198, "30668723": 151, "307": [168, 179], "3070": 173, "3072": 179, "3076": 174, "307m": 179, "308": 168, "3083": 174, "308492": 15, "3087": 179, "309": [168, 180], "30911403e": 200, "3092": 178, "30920635": 151, "30c": 171, "30fp": 180, "31": [31, 38, 47, 48, 59, 60, 61, 65, 80, 101, 147, 168, 169, 174, 175, 177, 180, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "310": [164, 168], "31002414e": 200, "3100563": 180, "3102": 171, "310634": 15, "3106e": 173, "3107": 173, "311": [13, 164, 168], "311099": 16, "3112": 179, "3114": 179, "312": [130, 164, 168], "3125": [57, 173], "312500": 168, "31287314e": 200, "31288138031959534": 172, "3129": 180, "313": [130, 164, 168, 174], "313125": 14, "3137": 174, "313707": [11, 13], "31390556e": 200, "314": [11, 13, 74, 130, 164, 168], "3140": [172, 173], "3141": 179, "3142": 173, "3143": 13, "3145": 179, "3149": 179, "315": [130, 168], "315317": 11, "3153600000": 95, "31576734e": 200, "3159": 179, "315964": [11, 13], "316": [11, 13, 130, 168], "3169": 173, "317": 168, "31701798e": 200, "31708111e": 200, "318": [128, 168], "3187": 178, "318750": 157, "319": [128, 168], "3191": 174, "31dc": 133, "31m10": 174, "31m54": 174, "31x31": 174, "32": [15, 31, 32, 34, 38, 47, 49, 53, 57, 61, 74, 101, 116, 117, 128, 130, 132, 133, 141, 143, 145, 153, 157, 168, 171, 174, 175, 176, 177, 178, 179, 180, 182, 186, 198, 202], "320": [128, 168, 177], "3208": 179, "320879": 13, "3209": 179, "321": [128, 168], "3210": 173, "321004": 198, "32105794e": 200, "3212": [174, 179], "3216": 174, "322": [128, 168], "322715": [11, 13], "323": 168, "3230": 171, "32354": 174, "323947000": 68, "324": 168, "324129": 198, "3242": 174, "3246": 173, "3248": 174, "325": 168, "325394": 11, "326": 168, "3261": 179, "3263": 179, "326574": [11, 13], "3268": 180, "327": [168, 179, 180], "3275": 179, "32768": 57, "3277": 175, "3278": 179, "328": 168, "3280": [172, 173], "3285697102546692": 174, "32857": 174, "328570": 174, "329": 168, "3295": [181, 182], "3298": 179, "329871": 11, "32k": 132, "32m1": 174, "32m519": 174, "33": [13, 15, 29, 31, 47, 52, 59, 66, 77, 80, 93, 94, 101, 103, 116, 117, 128, 147, 154, 168, 169, 171, 178, 180], "330": [49, 168], "3301": 179, "3307": 179, "3308": 178, "33094796e": 200, "331": 168, "33114510e": 200, "331191": 62, "33142653": 151, "332": 168, "33205527e": 200, "3323": 179, "333": [52, 59, 95, 168], "3333": [181, 182], "333333": 169, "33333333": [51, 153, 154], "333333333333333": 95, "333333333333333481363069950020872056484222412109375": 80, "3333333333333335": 80, "334": 168, "3345": 179, "334694": 17, "3349": 178, "335": 168, "3350": 173, "33516842e": 200, "3352": 175, "3353": 179, "336": 168, "33662976e": 200, "3367": [172, 174], "337": 168, "3371": [175, 181, 182], "3372": 179, "3374": 179, "33768743e": 200, "3377": [173, 174, 179], "3378": 175, "338": 168, "3380": 173, "3383": 178, "33856867e": 200, "338695217273813": 154, "339": 168, "3393": 174, "3399": 174, "33it": 182, "34": [39, 48, 59, 66, 80, 95, 101, 116, 118, 152, 154, 168, 169, 171, 174, 179, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "340": [47, 48, 168], "3400": [176, 178, 181, 182], "3401": 171, "3407": 174, "340730": 12, "3409": 174, "340909": 168, "341": 168, "3410": 179, "3412": 175, "3417": 173, "342": 168, "3420": 172, "34238": 59, "342380": 59, "3428": 179, "343": [48, 57, 168], "343280": 11, "343750": 168, "3438": 179, "344": [13, 168], "344095": [11, 13], "34422627": 116, "34425779": 117, "34435993e": 200, "3448": [173, 179], "345": 168, "345081": 15, "3451": 174, "3452": 177, "3454": 178, "3456": 39, "345673": 39, "3456789": 52, "34567890": 94, "3457": [52, 180], "3458": 179, "346": [94, 168], "3463551998138428": 172, "3464": 179, "347": [61, 168], "348": [61, 168], "3483": 178, "3486": [174, 179], "3487": 177, "348722": 174, "349": [61, 168, 174], "3492": 177, "3493": 174, "349540": 14, "3496": 179, "35": [8, 32, 39, 47, 49, 52, 53, 62, 65, 92, 94, 116, 147, 152, 168, 169, 175, 177, 186, 195, 196, 197, 198], "350": [19, 61, 117, 168, 177], "350000": [148, 186], "351": [61, 168], "3512": 180, "3513": 172, "352": 168, "35266299": 151, "352682": 11, "353": 168, "3535e": 173, "3539": 173, "354": 168, "3547": 180, "354839": 168, "35488217e": 200, "3549": 173, "355": 168, "3551": 178, "355280": [11, 13], "356": [39, 168], "3560": 172, "356651": [11, 13], "3567": 179, "3568": 178, "357": 168, "3570": 179, "35713": 174, "357143": 168, "357150": 13, "3572": 179, "35731444e": 200, "357765": 11, "358": 168, "3581": 179, "3582": 174, "359": 168, "3594": 179, "35994688e": 200, "35c": 171, "35it": 182, "36": [35, 47, 48, 49, 52, 57, 74, 88, 94, 116, 117, 130, 147, 168, 174, 186, 189], "360": 168, "36000": 169, "3606": 179, "3608": 174, "360856": 196, "3609": 174, "361": [65, 168], "3610895313": 130, "361467": 11, "36149": 174, "362": [65, 168], "3620": 178, "362012": [11, 13], "3622237": 180, "3624": 174, "362880": 28, "363": 168, "363636": 168, "364": 168, "3649": 171, "36492380e": 200, "365": [52, 168], "366": [60, 61, 65, 168], "3662": 174, "3664": 179, "36699927e": 200, "367": 168, "367007": [11, 13], "3673": 174, "3677": 179, "36782780e": 200, "368": 168, "3681b3969e27": 72, "36880": 169, "369": 168, "36938945e": 200, "3694": 174, "36m0": 174, "37": [15, 38, 47, 48, 101, 143, 157, 158, 168, 169, 173, 177, 202], "370": 168, "3700": [172, 179], "3702": 179, "37028": 169, "370370": 168, "3705": 178, "371": 168, "3711": 178, "3712": 182, "37144872e": 200, "3715": 173, "37181743e": 200, "372": 168, "3723": 173, "3726": 179, "3727": [174, 179], "373": [168, 177], "3733": 174, "3736": [174, 179], "3738": 175, "37380679e": 200, "374": 168, "3741": 179, "3742": 179, "3743": 171, "3745": [174, 178], "3749": 180, "375": [68, 168], "375000": [15, 168], "3752": 174, "3757": [173, 180], "3759": 174, "376": 168, "37644": 191, "377": [11, 13, 48, 130, 168], "3770514": 180, "3776": 179, "37796264e": 200, "378": [130, 168], "3781": 179, "378594": 174, "37859424920129": 174, "3787": 179, "379": [130, 168], "379273": 11, "379510": [11, 13], "38": [15, 63, 101, 147, 168, 173, 174, 175, 191, 196, 198, 200, 202], "380": [130, 168, 179], "3801": 173, "381": [130, 168], "382": [130, 168], "3820": 179, "38209653": 151, "38223": 191, "38224839e": 200, "382612": [11, 13], "382817": [11, 13], "3829": [171, 180], "383": [130, 168], "38336447": 154, "3835": 174, "38385823e": 200, "384": [130, 168, 175], "3840": 172, "38400": 174, "3841": 174, "384232": 15, "38429280e": 200, "3843": 174, "384398": 11, "384399": [11, 13], "384403": [11, 13], "3849": 174, "385": [133, 168], "385399": [11, 13], "38568225e": 200, "38575866e": 200, "385965": 168, "385970": [11, 13], "386": 168, "3860": 173, "3862": 178, "3864": 171, "3867": [181, 182], "387": 168, "3870": 174, "387097": 168, "38787858e": 200, "388": 168, "3882": 174, "3889": 178, "389": [130, 168], "3890561": 153, "389559": 13, "3897": 180, "39": [47, 52, 59, 66, 138, 147, 168, 175, 186, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "390": [130, 168], "3904": 171, "3906": [178, 179], "3909": 178, "391": [117, 130, 168, 177, 178], "39119225e": 200, "3913": 179, "3915": 180, "39169378e": 200, "392": [130, 168], "392857": 168, "393": [130, 168], "393174": 11, "3934": 179, "393413": 198, "3937": 173, "39373073": 173, "393731": 173, "3938": 174, "394": 168, "3945": [176, 178, 181, 182], "3946": 173, "39461": 180, "395": 168, "39594634e": 200, "396": 168, "3961": 175, "397": 168, "3970": 117, "39764517e": 200, "39771": 174, "398": 168, "3980": [172, 179], "39801": 39, "398040": 15, "3982": [172, 179], "3984": [177, 178, 179], "3984375": 178, "39878883": 151, "399": [53, 168], "39957927e": 200, "3bfaa309574d": 56, "3blue1brown": [7, 172], "3d": [8, 11, 24, 152, 171, 174], "3da34cc7641": 52, "3e": 179, "3e859d37287a": 88, "3ec8c6652eef": 78, "3f": [52, 94, 174, 175, 177, 181, 182], "3j": [24, 51, 91, 92, 102], "3m": [116, 117, 128, 141, 179], "3mabout": 117, "3mbelow": 141, "3misl": 116, "3mlook": 117, "3mnull": 128, "3mselect": 117, "3msystem": 145, "3mthere": 117, "3muse": 130, "3mwrite": [116, 130, 145], "3myour": 130, "3n": 31, "3pm": 128, "3rd": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 53, 76, 78, 143, 145, 150, 190], "3x2": 171, "4": [3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 71, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 90, 93, 94, 98, 101, 102, 103, 106, 107, 111, 116, 117, 119, 129, 130, 131, 133, 134, 135, 137, 138, 139, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 156, 157, 158, 160, 162, 164, 166, 168, 172, 173, 174, 175, 176, 177, 178, 181, 182, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "40": [12, 15, 28, 29, 47, 49, 57, 66, 71, 77, 92, 94, 95, 117, 130, 139, 143, 147, 152, 159, 168, 171, 172, 173, 175, 177, 182, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "400": [7, 117, 130, 133, 137, 138, 144, 168, 172, 173, 174, 191], "4000": [143, 148, 174, 175], "400000": [148, 169, 186], "40015831": 151, "400770": [11, 13], "4008": 179, "4009": 179, "401": 168, "4012e": 174, "402": 168, "4023": 179, "4027": 173, "403": [11, 168], "4032": 175, "4033": 179, "403509": 168, "403846": 168, "4039": 175, "404": 168, "404206": 14, "404240": 15, "4044": 179, "4049": 172, "405": 168, "4054": 174, "405706": [11, 13], "406": [168, 177, 178, 179, 180], "40603744": 154, "4061": 173, "40636423e": 200, "4064": 174, "406469": 8, "407": 168, "4071": 171, "4078": 175, "408": 168, "408520": 8, "408781": 11, "409": [168, 177, 195], "40904134e": 200, "409091": 168, "4092": 174, "4094": 174, "4096": [57, 179], "40960": 169, "4097": 130, "40it": 182, "41": [32, 47, 48, 65, 66, 138, 147, 168, 169, 173, 174, 175, 177, 180, 200], "410": [168, 195], "4102": 182, "410458": [11, 13], "41083552e": 200, "411": [168, 195], "411377": 15, "4114": 174, "4115": 179, "4116": 172, "412": [168, 195], "4120": [172, 179], "41276190e": 200, "4128131430": 128, "4129": 179, "41292267e": 200, "413": [168, 195], "41315": 169, "4131591": 153, "4133": [181, 182], "4134": 173, "414": 168, "41405704e": 200, "41406033e": 200, "414062": 175, "4141": [175, 182], "41421356": 153, "414368": 200, "4147": 173, "415": 168, "4151": 161, "4152": 161, "4153": 161, "4154": [161, 173], "4155": 161, "4157": 174, "416": 168, "41614684": 153, "416667": 168, "417": 168, "4175e": 174, "4178": 179, "418": 168, "4184": 172, "4186": 161, "4187": 161, "4188": [161, 179], "4189": 161, "419": 168, "4190": 161, "4196": [174, 175], "419745": 13, "42": [47, 49, 55, 59, 66, 103, 132, 154, 168, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 192], "420": 168, "421": [128, 168], "422": [11, 128, 168], "4224": 171, "4227": 178, "4228": 174, "4229": 179, "423": [128, 168], "4235": 175, "423522": 12, "423851": 15, "424": [128, 168], "4242": 178, "4245": 180, "42477796076938": 80, "42499377e": 200, "425": [128, 168], "4251": 172, "42530": 197, "42538101e": 200, "4256": 174, "425781": 175, "4258": [175, 179], "426": 168, "4260": 172, "42612988": 154, "426227": [11, 13], "42651757188499": 174, "426518": 174, "427": 168, "4271": 174, "4272": 179, "427426": [11, 13], "4275": 174, "4277": 174, "4279": 173, "428": 168, "428571": 168, "42857143": 153, "4286f4": 147, "428939": [11, 13], "429": 168, "4290": 180, "43": [17, 19, 32, 47, 48, 66, 143, 153, 168, 173, 174, 175, 180], "430": 168, "430182": [11, 13], "4306": 161, "4307": 161, "4308": 161, "4309": 161, "430905": 13, "431": 168, "4310": 161, "4312": 173, "4318": 172, "43186c7d3555": 88, "4319": 174, "43196619e": 200, "432": 168, "433": 168, "4330": 174, "4332": 173, "433627": 11, "434": 168, "4340020aef34": 102, "4344": 178, "43469003": 154, "435": 168, "4353": 175, "4355": 180, "435540": [11, 13], "43563027": 151, "435633": 59, "435866": 186, "436": 168, "4364": 174, "4366": 179, "4368": 179, "437": [130, 168], "4372": 174, "437500": 168, "4378": 179, "438": [130, 168], "4381": 180, "4386": 172, "4388": [174, 180], "439": [130, 168], "439305": 15, "43e7": 133, "44": [29, 65, 66, 118, 168, 174, 175, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "440": [130, 168], "4400": [181, 182], "4404": 178, "441": [130, 168], "4411": 174, "44120621e": 200, "4414": 174, "4417": 174, "442": [128, 168], "4422": 173, "44220765": 173, "442208": 173, "4422102": 174, "44225798": 151, "442308": [157, 168], "4428": [171, 179], "443": [128, 168, 180], "443572": [11, 13], "443705": 15, "4439": 164, "444": [128, 168], "4440": 164, "4441": [164, 173], "4442": 164, "4443": 164, "444444": 168, "44444444": 154, "445": [128, 168], "4451": 174, "4453": 172, "4455": 174, "4458": 178, "446": [128, 168], "4462": 178, "44666284e": 200, "4469": 171, "447": [128, 168], "4474": 180, "44794755e": 200, "448": [128, 168, 177], "4482": 179, "449": [128, 168, 175], "4492": 179, "4493": 174, "449489742783178": 80, "4496": 195, "4497": 195, "4498": 195, "4499": 195, "45": [14, 15, 47, 48, 49, 66, 68, 80, 89, 97, 117, 145, 147, 165, 168, 171, 173, 175, 186, 195, 202], "450": [128, 168, 171, 175, 180], "4500": [16, 195], "45000": 157, "451": [128, 168, 175], "4510": 174, "45103300e": 200, "4515": 179, "452": [168, 175], "4520": 172, "4522": 179, "453": [168, 175], "4533": [181, 182], "4535": 179, "45359369": 151, "454": [168, 175], "4540": 179, "45400": 169, "45409876e": 200, "454545": 168, "45468093e": 200, "455": 168, "45503": 174, "455357": 168, "4555": 178, "4559": 173, "456": [52, 93, 168, 175, 177, 178, 179, 180], "456140": 168, "4566": 171, "4569": 174, "457": [168, 175], "4570": 179, "4575": 178, "458": 168, "4583": 196, "458333": 168, "4584": 179, "458614": 14, "4588": [172, 174], "459": 168, "4592": 179, "45d582f31548": 102, "46": [15, 40, 66, 74, 117, 147, 168, 169, 171, 173, 175, 178, 195, 202], "460": [168, 171], "4601": 174, "46063092e": 200, "46075265e": 200, "4609": 174, "461": [168, 182], "4618": 172, "462": 168, "462272": [11, 13], "463": 168, "4631": 179, "4637": 133, "464": 168, "4640": 178, "4641": 154, "4644": 179, "4647": 174, "465": 168, "4651": 173, "4653": 180, "4654131651654516546": 116, "465640": 15, "465794806718": 51, "4658": 179, "466": 168, "466366": 13, "4666666666666668": 188, "4667": [174, 175, 181], "466b90e7ef2f": 92, "467": 168, "4678": 178, "468": 168, "468750": 168, "4688": 171, "469": [11, 13, 168], "4691": 172, "469388": 168, "4694": 179, "46be": 133, "47": [47, 48, 59, 66, 168, 169, 173, 175, 180, 186, 195], "470": 168, "47016730e": 200, "4702": 178, "470490": [11, 13], "470689": 13, "471": [133, 168], "4714": 171, "4717": 179, "472": 168, "4722": 179, "4726e": 173, "473": 168, "473137c03db7": 88, "4732": 179, "47320909e": 200, "474": 168, "4740": 173, "474232": 17, "4744512": 174, "4745": 174, "475": 168, "475540": [11, 13], "476": 168, "476004": 15, "47633": 174, "4764": 172, "47663894295692444": 174, "476639": 174, "47664": 174, "477": 168, "4770": 174, "4771": 179, "477273": 168, "477699": [11, 13], "4777": [166, 171], "4778": 166, "4779": 166, "477962": 15, "477f": 133, "478": 168, "4780": 166, "4781": [166, 179], "478125": 198, "478162": [11, 13], "4784": 174, "4785": 179, "4787": 179, "479": 168, "479139": 11, "479204": [11, 13], "4794": 178, "4795": 173, "479556": [11, 13], "479646": 173, "47989": 174, "4799": 174, "47e4": 133, "48": [31, 47, 49, 52, 59, 66, 95, 103, 117, 158, 160, 167, 168, 169, 171, 173, 175, 180, 195], "480": 168, "48013283e": 200, "48048431": 151, "480633": [11, 13], "4807": [171, 174], "481": 168, "48106518387794495": 172, "48122198e": 200, "481349": [11, 13], "4814": 174, "482": 168, "482383": [11, 13], "4824": 174, "4825": 179, "483": 168, "4830": 174, "4836": 172, "48383283e": 200, "484": 168, "4840": 179, "4844": 180, "484415": [11, 13], "4846": 174, "485": [168, 177, 178, 179, 180], "4854": 173, "4858414": 138, "486": 168, "4863": 175, "4868": 179, "487": [128, 168], "4873": 174, "48755100e": 200, "4876": 174, "488": [128, 168], "488215": 13, "488412": 11, "4886": 178, "489": [128, 168], "4895": 35, "489796": 157, "48df7f551452": 133, "49": [45, 47, 48, 49, 55, 57, 65, 66, 80, 133, 168, 169, 173, 175], "490": [128, 168, 174], "490625": 191, "4908": 178, "4909": [172, 180], "490946": 11, "491": [128, 168], "491228": 168, "4915": 179, "4917": 174, "491723": 16, "4919": 171, "492": [168, 177], "4920": 179, "492727": 11, "492754": 168, "4928": 179, "49291": 191, "493": [13, 168], "4930": [178, 179], "49332966e": 200, "4937": 180, "494": [11, 13, 168], "494387": [11, 13], "495": [132, 168, 171], "4950701": 174, "4951": 174, "49521424": 154, "49529338e": 200, "49574452": 154, "4958": [171, 179], "49587": 191, "496": 168, "4961": 178, "496714": 157, "49690158e": 200, "497": [128, 168], "4970": 179, "4972": 179, "49769501e": 200, "4977199": 138, "49798680e": 200, "498": [128, 168], "4980": 174, "4982": 172, "4982726": 138, "49890664e": 200, "499": [128, 168, 171], "4999": 19, "49e421f2057c": 93, "4a9f159cd120": 52, "4b26ab49e29c": 34, "4c10": 133, "4c669126467b": 52, "4c6e": 133, "4d": 174, "4d4a0e714c73": 88, "4ed3868a9a2": 53, "4f": [14, 15, 16, 17, 18, 19, 52, 175, 176, 178, 181, 182], "4fd1": 133, "4k": [141, 143], "4m": 147, "4n": 28, "4oz": 116, "4th": [53, 54], "4x": 180, "5": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 93, 94, 96, 98, 101, 102, 103, 104, 106, 107, 111, 116, 117, 122, 129, 130, 131, 133, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 164, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "50": [10, 39, 43, 45, 47, 48, 49, 51, 52, 55, 57, 63, 66, 68, 74, 75, 80, 97, 116, 130, 134, 145, 147, 153, 154, 157, 159, 160, 168, 169, 171, 172, 173, 175, 178, 186, 190, 191, 193, 195, 196, 197, 198, 200, 202], "500": [11, 12, 13, 128, 130, 132, 134, 159, 168, 172, 173, 200], "5000": [9, 17, 19, 72, 117, 133, 200], "50000": [12, 147], "500000": [148, 157, 168, 169, 186], "500005": [11, 13], "5003": 174, "5006": 180, "501": [118, 128, 168], "5012": 174, "502": 168, "502190": 15, "502418": 12, "503": 168, "5032": 179, "503945": [11, 13], "504": [11, 13, 168], "505": 168, "5050": [47, 74, 180], "5054": 172, "50547116e": 200, "506": 168, "50628105e": 200, "5069": 179, "507": 168, "507192": 17, "5078": 173, "508": 168, "5081": 179, "5085": 179, "50882884": 117, "509": 168, "5095": 178, "50954": 174, "5098": [174, 175], "50b154750974": 88, "50th": 157, "51": [12, 66, 74, 117, 147, 168, 169, 173, 196], "510": 168, "5100": 174, "510042": [11, 13], "51026454": 151, "511": 168, "5111": 182, "5113": 179, "5114": 174, "5116": 180, "512": [48, 53, 57, 79, 168, 173, 174, 175], "5120": 179, "51200": 174, "5127": 172, "512x512": 175, "513": 168, "5132": 174, "513250": 15, "513433": 200, "513890": 15, "514": 168, "51479": 12, "5148": 174, "515": [168, 171], "5157": 171, "5158": 179, "515941f58fe7": 76, "516": 168, "51601397e": 200, "516129": 168, "5166": 174, "51681": 191, "516912": [11, 13], "517": 168, "5176": 178, "51782e52f201": 71, "517857": 168, "518": 168, "518519": 168, "5188": 179, "519": [95, 168, 174], "5197": 174, "5199": 174, "52": [31, 66, 134, 147, 157, 158, 168, 169, 173, 175], "520": 168, "5200": [172, 181], "5202": 178, "52037": 12, "52063": 191, "521": 168, "522": [11, 13, 168], "5220": 171, "523": 168, "5239": 180, "524": 168, "524770": 15, "525": [13, 168], "5255": 174, "5257e": 173, "52580": 191, "526": 168, "526373": 202, "527": [11, 168], "5272": 172, "527393": 59, "527542": [11, 13], "5276": 179, "528": 168, "5283": 179, "5285": 171, "529": 168, "529412": 168, "5299914": 137, "53": [47, 48, 55, 60, 61, 64, 66, 168, 169, 173, 186, 195, 196, 198], "530": 168, "53037048e": 200, "530624": 13, "5308": 179, "5309": 173, "531": 168, "531250": 168, "5313": 174, "531874": 12, "532": 168, "5326": 174, "533": 168, "5333": [174, 175], "5334": 179, "53341062e": 200, "533524": [11, 13], "53360752e": 200, "534": 168, "5347": 179, "5348": 169, "5349": 179, "535": 168, "535714": 168, "53590397e": 200, "536": 168, "536747": 11, "536997": 15, "537": [11, 13, 168], "53783010e": 200, "538": 168, "5384": 174, "5387": 180, "5388": 173, "539": 168, "53901780e": 200, "53909609": 151, "5394": 179, "5396": 174, "5397727272727273": 178, "5398": [177, 178], "5398e": 173, "5399": 174, "53mib": 171, "54": [47, 48, 49, 59, 66, 79, 90, 101, 130, 147, 153, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 173, 180, 196], "540": 168, "540222": 16, "540247": [11, 13], "54030231": 153, "5404": 174, "5406e": 174, "5409": 174, "541": 168, "5412": 175, "54143": 173, "5416": 179, "541667": 168, "5417": 179, "5418903291546293": 194, "542": 168, "5425": [178, 197], "542734": 200, "54275813": 151, "543": 168, "5432": 179, "54321": 47, "5435": 178, "5439": 173, "544": 168, "545": 168, "54507446": 171, "54510477e": 200, "5455131": 197, "5458": 173, "546": 168, "546523": 14, "5467": 182, "54682": 197, "547": 168, "547083": 200, "547509": 11, "54777888": 151, "5478": 179, "548": [168, 177, 178], "5480": 179, "548052": 15, "54808": 197, "548195": [11, 13], "5483": 171, "5485": 179, "5486": 174, "5489": 174, "549": 168, "54902750e": 200, "5493": 171, "5494": [179, 180], "55": [47, 48, 59, 66, 74, 80, 130, 154, 159, 161, 164, 168, 173, 175, 194, 202], "550": [137, 138, 168], "551": 168, "551020": 168, "55109787e": 200, "551122": [11, 13], "5513833499989991": 194, "551695": 117, "551792": 12, "552": 168, "5521": 178, "5523": 179, "55283762": 151, "5529": [174, 175], "553": 168, "5531": 173, "553519": 198, "55360672": 151, "55382448e": 200, "554": 168, "555": [48, 52, 97, 168], "5550161930871431": 154, "555108164c58": 55, "5551779866218567": 172, "55555556": 154, "5557": 179, "5558": 174, "555816": 198, "556": 168, "5566": 178, "557": 168, "5570": 179, "5573": 178, "558": 168, "5581": 179, "5589": [161, 174], "559": 168, "5590": 161, "5591": 161, "5592": 161, "5593": 161, "5595": 174, "55965906e": 200, "5599": [173, 174], "56": [24, 28, 46, 47, 49, 55, 59, 63, 66, 80, 130, 143, 157, 158, 160, 167, 168, 169, 173, 177, 180, 202], "560": [168, 177], "5604": 180, "5606": 179, "56077258e": 200, "5608": 175, "561": 168, "5610": 174, "5611": 178, "561772": [11, 13], "562": 168, "5622": 178, "562500": 168, "563": 168, "5630": 174, "56348096e": 200, "564": 168, "5644": 182, "5645": 179, "5646e": 174, "5647": [174, 175], "5649": 180, "564980": [11, 13], "565": 168, "56580759e": 200, "566": [61, 168], "56650192e": 200, "567": [61, 168, 179], "56705": 12, "5671": 179, "5676": 178, "5678": 179, "5679": 178, "568": [61, 168], "5686": [174, 175], "569": [61, 168], "5692": 179, "5696": 173, "5698": 197, "57": [13, 32, 64, 66, 130, 147, 157, 158, 168, 169, 180], "570": [61, 132, 168], "57057605": 154, "5706": [176, 178, 181, 182], "571": [168, 179], "571429": 168, "572": [168, 177], "5720": 179, "572094": 13, "5721": 179, "5722": 179, "5724": 179, "5725": [174, 175], "5728": 178, "57292499e": 200, "573": 168, "57330710e": 200, "57367853e": 200, "5739": 179, "5739762187004089": 172, "574": 168, "5745": 171, "575": 168, "5750": 179, "5753": 179, "5755": 180, "5757": 179, "576": 168, "5764": 179, "5765": 175, "5767": 174, "576700": 8, "5768": 179, "5768efa4a35f": 103, "577": 168, "5778": 182, "578": [117, 168], "5783": 179, "5784": 172, "5785": 179, "57861": 173, "579": [93, 168], "5790": 179, "5793": 179, "57953b0b580c": 38, "5796": 179, "5798": 178, "5799": 173, "58": [11, 59, 60, 65, 66, 128, 130, 147, 157, 158, 168, 169, 173, 178, 202], "580": 168, "5804": 175, "5808771025513102": 194, "58099293e": 200, "581": 168, "5810": 180, "5816": 179, "581728": [11, 13], "582": [117, 168], "5822": 181, "5823": 179, "5824": 179, "5826": 179, "5828025": 65, "583": 168, "584": 168, "5843": [175, 179], "5844": 173, "5845": 179, "5847": 179, "5849": 179, "585": 168, "5850": 179, "5853": 179, "585384": [11, 13], "5854679515581645": 51, "58556641e": 200, "586": 168, "5866": 174, "58662330e": 200, "5867": 181, "5868": 179, "5869": 180, "587": [168, 177], "5870": [178, 179], "5876": [179, 180], "5877": 179, "58776": 12, "588": 168, "5880": 179, "5882": [174, 175], "588235": 168, "5885": 173, "588767": 11, "5888": 179, "58883361": 154, "58899709e": 200, "589": 168, "58900": 169, "5897": [178, 179], "58it": 174, "59": [11, 18, 45, 59, 60, 61, 63, 65, 66, 118, 130, 157, 158, 168, 169, 173, 175, 179, 190, 193, 195, 196, 197, 198, 202], "590": 168, "5900": 179, "59039": 174, "59049": 57, "59068226": 154, "591": 168, "5918": 173, "592": 168, "5920": 174, "5924": 174, "592799": 180, "593": 168, "59302": 174, "5932": 174, "5935": 180, "5936": 171, "59362951e": 200, "59371929e": 200, "594": 168, "594445": [11, 13], "5949": [174, 178], "595": 168, "5951": 173, "596": 168, "5961": 175, "59621339e": 200, "597": 168, "5975": 173, "598": 168, "5980": 178, "59815003": 153, "599": 168, "5990": 173, "5997": 174, "5998": 173, "59b7b8cc9b5b": 102, "5_epoch": 178, "5aa728677edf": 80, "5b2db8c64782": 52, "5b50fb5d02c4": 77, "5c": [128, 130], "5e2": 91, "5f": [173, 174], "5f195de51d93": 104, "5k": [132, 143], "5m": 147, "5th": [52, 53], "5x": [130, 180], "6": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 85, 87, 88, 89, 90, 91, 93, 94, 101, 102, 103, 106, 130, 133, 135, 138, 140, 141, 142, 144, 147, 150, 151, 152, 153, 154, 157, 158, 160, 164, 168, 171, 173, 174, 175, 177, 178, 179, 184, 186, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204], "60": [12, 44, 45, 47, 48, 49, 57, 77, 80, 94, 96, 130, 147, 157, 158, 159, 168, 169, 171, 172, 173, 174, 175, 182, 191, 192, 194], "600": [48, 95, 130, 137, 138, 168, 172, 173, 177], "6000": [16, 19, 148], "60000": [9, 16, 17, 18, 19, 101, 147, 174], "600000": 186, "60000000000001": 38, "6002": 171, "60059908": 154, "6009": 171, "601": 168, "6010": 173, "60124": 191, "60154": 191, "6016": 173, "601607": [11, 13], "602": 168, "6020": 173, "6022": 178, "603": 168, "60332219e": 200, "603704": 198, "6039": [174, 175], "604": 168, "605": 168, "605370": 186, "6055": 171, "6058": 174, "6059": 174, "606": 168, "60600": 180, "60631cbc73b0": 75, "60683359e": 200, "607": 168, "6078": 174, "60786967": 151, "608": 168, "60811794e": 200, "60818266e": 200, "609": [11, 168], "609060": 17, "60966": 12, "61": [55, 65, 119, 130, 157, 158, 168, 169, 171, 174, 175, 190, 193, 195, 196, 197, 198, 202], "610": [48, 116, 168], "610574": [11, 13], "611": [13, 168], "6111": 178, "611101": [11, 13], "611172": 198, "6117": 173, "6118": 174, "612": 168, "6127": 178, "612924": [11, 13], "613": 168, "614": 168, "614062": [11, 13], "614349": 12, "61440440e": 200, "614655": 15, "615": 168, "6150": 179, "61500": 169, "616": 168, "616463": [11, 13], "6167": 178, "61670566e": 200, "61675899e": 200, "6168": 171, "617": 168, "617722": 12, "6177e": 174, "61784629": 151, "617951": [11, 13], "618": [130, 168], "6186": 173, "619": [130, 168], "6194": 171, "6197751905438615": 80, "62": [74, 168, 169, 173, 174, 197], "620": [130, 168], "6200": 178, "620071": [11, 13], "6203": 178, "621": [130, 168], "621415": 198, "62145": 173, "622": [130, 168], "622030": [11, 13], "622167": 198, "6223": 174, "62242956e": 200, "6227": 178, "623": 168, "62311335e": 200, "6235": 174, "62362": 173, "624": 168, "625": [57, 168], "62500": 157, "62503489e": 200, "6254": 177, "626": 168, "6260": 177, "626007": [11, 13], "62636": 191, "6267": 182, "627": 168, "627163": [11, 13], "6274509803921569": 191, "62792336e": 200, "628": 168, "6286": 171, "6289": 174, "629": 168, "629630": 168, "62996541e": 200, "62it": 133, "62x62": 174, "63": [47, 49, 70, 71, 74, 93, 94, 117, 168, 195, 202], "630": 168, "63033250e": 200, "6306": 174, "631": 168, "6311": 181, "6314": 174, "631579": 168, "63158859": 151, "6317": 180, "6319": 173, "632": 168, "63212579e": 200, "63238643": 154, "6325": 178, "632m": 179, "633": [77, 168], "6335": 174, "6338": 169, "633974": 13, "634": 168, "6345": 174, "63465586e": 200, "635": [13, 168], "635423": [11, 13], "635457": 16, "635574": 15, "636": 168, "637": 168, "6372": 177, "6377": 169, "638": 168, "6380": 174, "6386": 174, "639": 168, "6392": [174, 175], "63it": 174, "64": [16, 17, 18, 19, 24, 47, 48, 49, 53, 57, 79, 153, 168, 171, 173, 174, 175, 176, 177, 181, 182, 202], "640": 168, "64000": 147, "64034418e": 200, "6404": 178, "641": 168, "64154651": 197, "642": 168, "643": 168, "6430": 179, "6431": 174, "6436": 174, "64387910e": 200, "644": 168, "6445": 178, "645": 168, "645161": 168, "6454": 174, "646": 168, "647": 168, "6471": 175, "64757": 173, "647689": 157, "648": 168, "6485e": 174, "6488": 169, "649": [168, 179], "6494": 173, "64x64": 175, "65": [43, 44, 45, 52, 93, 117, 158, 160, 167, 168, 173, 174, 175, 202], "650": 168, "65000": 147, "650667": 13, "651": 168, "6510": 174, "651253": 202, "65160": 173, "652": [13, 168], "65235094": 154, "653": 168, "65364362": 153, "6538": 171, "654": 168, "6541": [171, 174], "6542": 179, "6545": 178, "654593": 64, "6549": 174, "654x": 177, "655": 168, "65575249e": 200, "65596512e": 200, "656": [168, 179], "6561": 57, "6562": 178, "65625": 178, "65628077": 151, "656404": 198, "657": 168, "6575": 169, "6579": 173, "658": 168, "6585": 180, "6588": 174, "659": 168, "65903086e": 200, "66": [46, 47, 52, 76, 94, 128, 168, 169, 175, 190, 193, 195, 196, 197, 198, 202], "660": 168, "66000": 147, "660125": 15, "6608": 171, "661": 168, "6610": 178, "6611852": 197, "6612": 174, "662": 168, "6627": 174, "663": 168, "66322": 173, "664": 168, "665": 168, "666": [55, 168], "666451": 8, "66659": 173, "66666667": 154, "6667": 174, "667": 168, "6673": 178, "667565": 198, "668": 168, "669": 168, "6698": 178, "6698453426361084": 178, "6699": 173, "67": [48, 52, 117, 118, 128, 153, 168, 169, 173, 202], "670": 168, "67027": 174, "670396": 202, "6705": 171, "6706": [174, 175], "671": 168, "672": 168, "6722926497459412": 178, "6723": 178, "67285": 173, "673": 168, "6737": 174, "67391582": 117, "674": 168, "6745": [174, 175], "6746": 178, "6746167540550232": 178, "675": 168, "67515": 173, "67526014e": 200, "676": 168, "67631096e": 200, "676366": 8, "676435": 173, "6766": 180, "6768": 179, "6769": 178, "6769256368279457": 178, "677": 168, "67761063e": 200, "678": [130, 168], "6784": [174, 175], "6785": 169, "678571": 168, "679": [130, 168], "67941": 173, "67it": 174, "68": [118, 128, 147, 161, 164, 168, 169, 171, 190, 193, 195, 196, 197, 198, 200, 202], "680": [130, 168], "680027": 13, "681": [130, 168], "68102": 173, "681159": 168, "682": [130, 168], "682091": 202, "6826": 171, "683": [168, 175], "6833": 16, "68334519e": 200, "683673": 168, "6839": 174, "684": 168, "68411": 173, "684211": 168, "684940": 15, "685": 168, "68500": 174, "6850008964538574": 174, "685001": 174, "6851": 178, "68517": 173, "6852": 173, "68572271": 154, "686": 168, "68602648": 151, "68603251e": 200, "6863": 174, "68671849e": 200, "687": 168, "68723": 173, "68744134": 151, "68747069e": 200, "68795": 173, "688": 168, "6881": [174, 178], "689": 168, "6891": 173, "68940": 173, "6894e": 173, "68977": 173, "69": [45, 47, 128, 158, 168, 169, 202], "690": 168, "69001671e": 200, "6902": 174, "691": 168, "69102": 173, "69115": 173, "6918": 169, "692": 168, "692250": 15, "69258130e": 200, "69261": 173, "69272794e": 200, "69288277": 173, "692883": 173, "6928e": 174, "6929": 173, "69295": 173, "69298": 173, "69299": 173, "6929e": 173, "693": [168, 175], "69301": 173, "69302": 173, "69303": 173, "69305": 173, "69308": 173, "6931471805599453": 80, "69319": 173, "69343173": 151, "69349": 173, "693597": 13, "69361323e": 200, "69379": 173, "69396": 173, "694": 168, "6940": 174, "6941": 174, "69432": 173, "69437": 173, "69458": 173, "69465": 173, "69467": 173, "69468": 173, "695": 168, "69537": 173, "69543": 173, "69551": 173, "69563": 173, "69583": 173, "696": 168, "69623": 173, "69659": 173, "6968": 172, "697": 168, "69714": 173, "69736459e": 200, "69791535": 151, "698": 168, "6980": 174, "6984": 173, "698874": 15, "699": [128, 168], "69901020e": 200, "6992": 178, "69942": 173, "699560": 15, "6ab0f28c63a7": 72, "6ac8e81b6f0c": 70, "6f47904706aa": 153, "6f8260f6f5bb": 75, "6j": [51, 92, 102], "6k": 130, "6m": 147, "6p": 94, "6th": 52, "6x": [95, 180], "7": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 34, 37, 38, 40, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 66, 68, 71, 74, 75, 76, 77, 79, 80, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 106, 116, 117, 119, 130, 132, 133, 134, 135, 140, 141, 144, 147, 151, 152, 153, 154, 157, 158, 164, 168, 171, 172, 173, 174, 175, 177, 178, 179, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204], "70": [43, 45, 47, 49, 57, 77, 128, 130, 140, 145, 147, 158, 160, 165, 167, 168, 169, 171, 172, 173, 190, 191, 202], "700": [116, 128, 168, 172, 173, 201], "700557": 15, "7008": 171, "701": [128, 168], "7010": 174, "7011": 174, "70166723e": 200, "702": [128, 168], "7020": 174, "7023": 180, "70291": 173, "703": [128, 168], "703704": 168, "704": [128, 130, 168], "7043": 174, "7044": 173, "704545": 168, "705": [128, 168, 178, 180], "70542": 173, "7055": 174, "705882": 168, "7059": 174, "706": [128, 168], "706461": 13, "7064960040152073": 178, "7065": 178, "706585": 11, "707": 168, "707107": 157, "7076": 178, "708": 168, "70805473e": 200, "709": 168, "7091468499697177e": 188, "7097": 178, "70974533": 8, "7098": [174, 175], "7099": 174, "71": [117, 128, 168, 169, 174, 190, 196, 197, 198], "710": [168, 177], "7108": 177, "711": 168, "7113": 180, "712": 168, "713": 168, "7134": 174, "7137": [174, 175], "714": 168, "71400": 169, "714286": 169, "71432477e": 200, "715": 168, "7150": 178, "715070": 196, "716": 168, "71671100e": 200, "7168": 173, "717": [168, 177], "7173": 174, "7175": [178, 180], "71755233e": 200, "7176": 174, "718": 168, "71828": [80, 82], "718281828459045": 80, "71828183": 153, "71875": 178, "7188": 178, "719": 168, "7191": [174, 178], "7196": 179, "7197": 173, "72": [28, 47, 49, 74, 117, 128, 139, 157, 160, 168, 175, 180, 202], "720": [51, 78, 80, 168], "7200": 174, "7205": 174, "72090": 173, "721": 168, "7216": 175, "7219": 174, "72196": 173, "722": 168, "72223991e": 200, "72227": 174, "72247358e": 200, "7227": 179, "723": 168, "72352380e": 200, "724": 168, "724490": 168, "724638": 168, "725": 168, "7255": 174, "726": 168, "72638167e": 200, "727": [168, 179], "72708198e": 200, "727273": 168, "72765023e": 200, "728": 168, "7280": 174, "7283": 174, "72888392e": 200, "729": [48, 57, 79, 168], "7294": 174, "72964213e": 200, "7298": 178, "73": [39, 128, 168, 174], "730": 168, "730464": 180, "730982": 12, "731": 168, "731755": 186, "7318": 174, "732": 168, "73205081": 153, "733": 168, "7333": 174, "73370838": 154, "734": [168, 179], "7342": 174, "734673": 202, "7347": 173, "735": 168, "73524094": 154, "7359b7dba965": 48, "736": 168, "7360": 179, "7367": 173, "737": 168, "73712819e": 200, "7373": 174, "738": 168, "739": 168, "74": [117, 168, 173], "740": 168, "7402e": 174, "7408": 180, "7409": 174, "74098031e": 200, "741": [118, 168], "741152": 8, "7412": 174, "74149939e": 200, "741935": 168, "742": 168, "7426e": 173, "7427": 179, "743": 168, "74304829e": 200, "74307119e": 200, "74371246e": 200, "744": [101, 168], "74400348e": 200, "744281": 202, "7444": 179, "744415": 11, "74486871e": 200, "745": 168, "74509907e": 200, "7451": [174, 175], "746": 168, "746011": 202, "74609375": 178, "7461": 178, "7463": 177, "74663": 117, "7469": 171, "746921": 180, "747": 168, "748": 168, "7489": 179, "749": 168, "7490": 174, "7498": 179, "74m": 180, "75": [66, 132, 147, 154, 157, 158, 168, 171, 173, 174, 175, 180, 181, 182, 186, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "750": [168, 175, 180], "7500": 180, "750000": [157, 168, 169, 191, 202], "750615": 196, "75075a70c90": 152, "7507bdc665d5": 37, "751": 168, "7511": 178, "751712": 12, "752": 168, "75209323e": 200, "7524": 174, "7529": 174, "753": 168, "7532": 180, "7539": 177, "754": 168, "7542": 173, "754246": 173, "75424625": 173, "7548e": 174, "755": 168, "755102": 202, "7553": 174, "756": 168, "75615888": 173, "756159": 173, "7562": 173, "75665366e": 200, "7568025": 153, "7569": [174, 175], "757": 168, "75750": 180, "7578": 178, "758": [168, 179], "758000": 186, "7589": 179, "759": 168, "75986": 173, "75th": 157, "76": [39, 116, 154, 168, 197, 202], "760": [168, 179], "7601": 173, "7604": 178, "7608": 174, "76093000e": 200, "761": 168, "761378": 12, "762": 168, "762238": 186, "762329": 202, "7624": 179, "76249894": 154, "763": 168, "763270": 8, "76344": 12, "764": 168, "7642": 173, "7645": 172, "7647": 174, "7648": 177, "765": 168, "765298": 186, "765539": 11, "7656": 178, "766": [154, 168], "7661": 173, "766294": 14, "7665": [173, 179], "767": 168, "7670": 180, "768": [168, 179, 180, 186], "7685": 180, "7686": 174, "7687": 171, "769": 168, "769231": 168, "7695": 178, "76a0a5ce1450": 66, "76bf7a927991": 77, "77": [47, 77, 92, 94, 152, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 177, 190, 197], "770": 168, "7705221": 180, "7708": 179, "771": 168, "7711": 173, "7712": 174, "7714": 173, "771513": 173, "772": 168, "77237368": 154, "7725": 174, "772579": 16, "772900": 17, "773": [97, 168, 171], "7736742424242425": 178, "7737": 178, "774": 168, "775": [16, 17, 168], "7754": 174, "775403": 13, "776": [16, 17, 143, 168], "7765": 174, "7767": 178, "77678046e": 200, "777": [16, 17, 168], "7773": [177, 178], "7776": 57, "77777778": 154, "777778": 168, "778": [16, 17, 168], "779": [16, 17, 168], "78": [79, 116, 119, 132, 154, 157, 168, 174, 175, 190, 202], "780": [16, 17, 168], "7804": 174, "780573": 12, "781": [16, 17, 168], "78101": 174, "7812": 178, "781250": 168, "782": [16, 17, 168], "782dbd1412fe": 164, "783": [16, 17, 168], "7833": 174, "7837507526079813": 178, "7838": 178, "7839": 174, "784": [9, 16, 17, 18, 19, 168, 174], "7843": 174, "784433": 15, "7849e": 174, "785": [9, 16, 17, 18, 19, 168], "7852": 177, "785269": 197, "785280": 197, "785714": 168, "786": 168, "7860": 180, "7861e": 174, "78673234e": 200, "787": 168, "7870": 174, "788": 168, "78883111e": 200, "789": [52, 168], "7898": 169, "78993856e": 200, "79": [80, 157, 168, 169, 173], "790": 168, "7900723": 171, "79018354e": 200, "79025614": 154, "791": 168, "7912": 177, "792": 168, "7922": 174, "792566": [11, 13], "79270929e": 200, "793": 168, "7930": [177, 178], "793456": 173, "7935": 174, "7936": 171, "794": [168, 186], "795": 168, "795455": 168, "795521": 15, "7956": 174, "796": 168, "7961": 174, "7963": 174, "796667": [11, 13], "79671774e": 200, "797": 168, "797101": 168, "7975": [157, 158, 169], "7978": 174, "798": 168, "79823164": 151, "7986e": 173, "799": 168, "7993": 173, "7994": 173, "7995": [157, 158, 169], "79998373e": 200, "79rhbrct01": 140, "7c9145eb11e9": 95, "7e786bcbd078": 72, "7f1fefd4d3f0": 55, "7fce570bf337": 92, "7m": 180, "7w": 171, "7x": 130, "8": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 30, 31, 32, 34, 37, 38, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 87, 89, 90, 92, 93, 94, 95, 99, 101, 102, 104, 106, 116, 117, 129, 130, 133, 134, 138, 140, 142, 143, 144, 147, 151, 152, 153, 154, 157, 158, 160, 161, 164, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 191, 195, 196, 197, 198, 199, 200, 201, 202, 203], "80": [11, 13, 16, 17, 18, 19, 45, 47, 49, 57, 80, 118, 130, 132, 135, 137, 138, 144, 147, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 177, 180, 182, 191, 195, 199, 202], "800": [141, 143, 168, 172, 173, 179, 180, 191], "8000": [17, 19, 148, 174], "80000": 157, "800000": [168, 186], "8008": 178, "801": 39, "801005": 12, "8016": 171, "803349": 173, "8036360430009386": 51, "8037": 178, "803724929690361": 178, "8039": 174, "804460": 180, "8049": 178, "8049242424242425": 178, "806452": 168, "8069e": 174, "807018": 168, "8078": 174, "8080e": 173, "8086": 178, "809158": [11, 13], "80966303e": 200, "8099": 178, "81": [43, 47, 48, 49, 55, 57, 74, 93, 157, 158, 168, 169], "810696": [11, 13], "8111": 174, "8112": 173, "8117": 174, "8118": 174, "8125": 178, "812500": 168, "8127": 174, "8138": 178, "8138b0729954": 55, "8141": 172, "8144": 178, "814809": 200, "8153": [177, 178], "81539193": 173, "815392": 173, "8154": 173, "8157": 174, "816327": 168, "816653826391969": 106, "816760": [11, 13], "81788758": 154, "8189": 169, "81893678": 151, "81945073e": 200, "8196": 174, "82": [157, 158, 168, 169, 174, 175], "8201e": 173, "8206": 174, "821429": 168, "822132": 8, "8235": 174, "8236": 174, "8242": 178, "8256": 172, "8258": 178, "82636160e": 200, "82647438e": 200, "82701252e": 200, "827153": 200, "8275": 174, "828066": 186, "82974801e": 200, "83": [17, 74, 157, 158, 168, 171, 174], "8300": 172, "8303a512b8c1": 133, "830770": 198, "830875": [11, 13], "83098322e": 200, "8314": 174, "831415": 11, "83161031e": 200, "831681": 180, "8324": 179, "83263141": 8, "83288998e": 200, "83319662e": 200, "8333333333333334": 95, "833552": [11, 13], "834558": [11, 13], "8346": 174, "83464298e": 200, "835299": 191, "8353": 174, "8354": 178, "8365": 174, "8372": 172, "83727878e": 200, "83770503": 151, "83847501e": 200, "8392": 174, "84": [103, 119, 157, 168], "8400": 173, "840201": 11, "84147098": 153, "8421": 174, "8424": 179, "84254180e": 200, "843": [177, 178, 180], "8431": 174, "843333": 186, "8436": 174, "843750": 168, "8438": [178, 180], "843887": [11, 13], "8446": 174, "8458": 178, "8466": [174, 178], "846939": 168, "846976": 198, "847": 97, "8471": 174, "8474": 171, "8479": 178, "8484": 174, "8488": 172, "84915141e": 200, "85": [11, 94, 135, 147, 151, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 179, 180, 191, 192, 199], "8500": 178, "850000": 191, "85051737e": 200, "8510": 174, "8515": 174, "8515625": 178, "8516": 178, "851852": 168, "8524": 174, "853181": 8, "8549": 174, "85505447": 151, "8551": 171, "855366": 13, "8560606060606061": 178, "8561": [177, 178], "8563": 174, "8564": 174, "857142857142854": 94, "857143": 168, "85800963": 180, "858131": [11, 13], "8588": 174, "858904": 14, "859": 181, "85956433e": 200, "85mb": 180, "86": [63, 119, 157, 158, 168, 169, 174, 179, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "8600": 172, "8603": 172, "8604": [178, 180], "8608": 181, "8613": 171, "8615": 180, "8620": 171, "8625": 196, "8627": 174, "86299475e": 200, "863636": 168, "864": 177, "8646": 178, "8652": 182, "8655": [173, 177, 178], "86635ab2cc7": 102, "8665": 179, "8667": 174, "868809": 15, "869565": 168, "8698": 173, "86m": 179, "87": [117, 130, 140, 147, 157, 158, 160, 167, 168, 169, 174, 175, 197], "8705": 174, "8706": 174, "8711": [174, 178], "871429": 168, "8717": 177, "8719": 172, "872": 11, "87236687": 151, "87285499e": 200, "87380356": 154, "8739": 172, "8743": [176, 181, 182], "8745": 174, "8747": 178, "875000": 168, "8759": [178, 179], "87646883e": 200, "8769": 178, "8771": [178, 180], "8778": [169, 179], "87786341e": 200, "877976": 174, "878": 174, "8784": 174, "87853325e": 200, "87970769e": 200, "88": [15, 118, 130, 147, 154, 157, 158, 165, 168, 169, 173, 174, 180, 190, 199], "8804": 174, "8812": 180, "88165065e": 200, "8823": 171, "8824": 174, "8835": 172, "884058": 168, "8843": 179, "8854": 178, "8856": 174, "8859": 128, "885bc9be9cd": 174, "88618684": 154, "8863": 174, "8863636363636364": 178, "8864": 178, "8867": 178, "8873": 178, "8878": 172, "8883": 179, "88888889": 154, "8896": [178, 180], "88d1d80d": 133, "89": [12, 18, 39, 45, 48, 80, 130, 140, 147, 157, 168, 169, 197], "8902": 174, "8904402624046048": 194, "8913": 181, "891691": 8, "8917": 180, "8935": 174, "8938": 178, "89380846e": 200, "8941": 174, "8948": 173, "894992": 200, "8950": 172, "8958": 180, "8959": 180, "89632087": 151, "8967": 173, "896723": 173, "89672343": 173, "8974628075957298": 178, "8975": 178, "8977": [178, 179], "8979": 178, "8980": 174, "8983": 174, "8984": 178, "8985": [176, 181, 182], "8988": 171, "899084": 8, "8994": 182, "8b5cab780f33": 75, "8c3c435d663c": 133, "8cc0f1bdc5ed": 90, "8de2d37fa505": 133, "8f0bbdfdf6e5": 53, "8f1c": 133, "8oz": 116, "8th": 54, "9": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 31, 32, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 104, 106, 116, 117, 128, 130, 132, 133, 140, 144, 147, 150, 151, 152, 153, 154, 157, 158, 160, 164, 165, 166, 168, 171, 173, 174, 177, 178, 179, 180, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204], "90": [12, 16, 28, 32, 45, 47, 48, 49, 52, 57, 74, 75, 77, 90, 91, 94, 96, 101, 117, 119, 130, 133, 135, 143, 145, 147, 158, 160, 165, 167, 168, 171, 172, 173, 178, 179, 180, 191, 195, 199], "900": [75, 101, 132, 172, 173, 177, 180], "900000": 186, "900000e": 52, "9007": 174, "90093797e": 200, "9013": 174, "901514": 15, "9018": 172, "9020": 174, "90264482e": 200, "90328251e": 200, "903846": 168, "9042": 178, "9062": 180, "906250": 168, "9066": 172, "9072": 178, "907975": 11, "9081": [178, 179], "90891100e": 200, "909091": 168, "90929743": 153, "9096": 174, "909784": 13, "9098": 174, "90m": 174, "91": [12, 68, 93, 119, 130, 147, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 186], "910": 175, "9104": [178, 180], "91174698": 154, "9131": 180, "9132757981618246": 178, "9133": [177, 178], "91348997e": 200, "9137": 174, "9138": 173, "9141": 178, "9143": 173, "9145": 179, "914559": 13, "914701": 8, "9150": 171, "9155": 134, "9157": 172, "91703708e": 200, "9176": [174, 178, 179], "9179": 173, "917c66cfdb68": 133, "9182": 172, "9186": 178, "919264": 16, "91940167": 151, "92": [12, 147, 168, 199], "9200": 171, "9216": 174, "9217": 178, "922403": 8, "922826": 17, "9239": 133, "924": 175, "9247": 178, "9250": [178, 196, 198], "9255": 174, "925579": 13, "925926": 168, "9260": 179, "9269": 174, "9271": 178, "927536": 168, "9280": [178, 179], "928539": 13, "928571": 168, "9290": 180, "9293": 180, "9294": 174, "9296": 172, "92fab552c144": 80, "93": [17, 19, 47, 147, 168, 174, 199], "930": 117, "93054890e": 200, "93082264e": 200, "93102691": 151, "9312": 174, "93143051": 151, "932169": 13, "932537": 13, "932585": 16, "9331e": 173, "9333": 174, "9336": 178, "9346": 171, "9347": 180, "935": 175, "9352": 173, "9354": 174, "9369": 171, "9373": 174, "9375": 180, "9381": 180, "9384": [178, 179], "9396": 178, "93fed76e63a5": 174, "94": [118, 147, 157, 158, 168, 169, 174, 199], "9401": 174, "9408": 171, "9409": 180, "9412": [18, 174], "9416": 174, "9436": 172, "9443": 180, "944681": 11, "9451": 174, "9453": 179, "9456e": 174, "946429": 168, "947368": [168, 191], "9478274870593494": 81, "948141": 15, "9485": 174, "9486": 174, "9489": 178, "9490": 174, "9492": 178, "9499": 180, "95": [12, 135, 147, 157, 168, 169, 171, 173, 180, 189, 190, 197, 198, 199, 200], "9500": 180, "9508": 173, "952": 177, "9521": 173, "9529": 174, "9531": 179, "9534": 180, "9536": 171, "9537": 174, "9539e": 174, "954": 189, "9542": 180, "95501935e": 200, "9552": 181, "9557": 178, "956": 11, "9560342718892494": 81, "9563": 180, "95636": 174, "9565": 132, "9569": 174, "9570": 179, "9571": 174, "9575": 172, "9576": [173, 174], "9577": 178, "95892427": 153, "9591": 182, "9593": 171, "95966987": 151, "96": [12, 14, 16, 18, 44, 45, 46, 47, 48, 52, 55, 70, 71, 77, 90, 101, 130, 147, 157, 168, 180, 190], "9602": 180, "96052f3c0c69": 52, "9608": 174, "96139878e": 200, "9618232": 65, "96238081e": 200, "96248829": 154, "9625": 180, "963": [179, 180], "963404": 196, "964286": 168, "9646": 180, "9647": 174, "965323": 17, "9663": 171, "966365e": 52, "96652011": 154, "9666": [171, 173], "96671753e": 200, "966907": 15, "96875": 180, "9688": 180, "9693": 180, "97": [12, 52, 68, 119, 157, 158, 168, 169, 199], "9704": 179, "97087710e": 200, "971014": 168, "9714": 172, "9716": 171, "9717076499418887": 188, "97187673e": 200, "9722": 180, "9725": 174, "9727": 179, "97305419e": 200, "9739": 173, "9752e": 174, "9753e": 173, "9754": 171, "976073": 198, "9765": 174, "9766": 179, "977": 177, "9771": 180, "97739775e": 200, "9775": 174, "977733270": 180, "977974": 17, "978": 178, "9784": 180, "9785208702087402": 180, "9792": 180, "97964329e": 200, "97mib": 171, "98": [38, 52, 157, 168, 180, 193, 202], "9804": 174, "980769": 168, "981": 74, "9812": 180, "98237187e": 200, "9830": 178, "9831": 15, "9833": 180, "9834262422606419": 194, "9838": 171, "9839": 179, "9844": 179, "984659090909091": 180, "9847": 180, "98514058e": 200, "9854": 172, "98547": 197, "9856": 180, "986095083415364e": 8, "986e6d871071": 40, "987": 48, "98749888": 151, "9883": 179, "9893": 180, "9894": 173, "9899925": 153, "98a1ccc168e9": 77, "99": [29, 31, 44, 47, 52, 55, 60, 61, 89, 91, 92, 94, 130, 151, 157, 158, 168, 169, 173, 180, 190, 193, 194, 195, 196, 197, 198, 202], "9909e": 173, "9924": 174, "99262966e": 200, "9932": 174, "9933": 180, "994": [178, 195], "994177": 63, "9942": 173, "994667": 13, "995": 195, "9950": 173, "996": [179, 195], "9960": 171, "9961": 182, "9966e": 173, "997": 195, "9971": 180, "99714633e": 200, "9976563219": 40, "997677": 202, "99771051": 8, "998": 195, "9986": [174, 182], "9988e": 173, "999": [52, 55, 75, 76, 154, 179], "9992e": 174, "9995": [157, 158, 169], "999703": 202, "9999": [18, 59, 65, 80], "999926": 202, "999999": [60, 61, 94], "999999999999998": 48, "999999999999999": 153, "9b450cb47d30": 53, "9b9247988596": 70, "9d80": 133, "9dea": 133, "9df797f83624": 52, "9e77": 133, "9e95083e441a": 52, "9mib": 171, "9th": 130, "9yzf8kj6rp": 140, "A": [0, 1, 7, 8, 9, 18, 19, 24, 31, 32, 34, 35, 36, 37, 38, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 66, 68, 69, 70, 71, 74, 75, 77, 78, 80, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 106, 116, 119, 122, 127, 128, 129, 131, 132, 133, 135, 136, 139, 140, 141, 142, 143, 145, 146, 147, 150, 151, 152, 154, 157, 158, 160, 161, 164, 165, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 189, 194, 195, 196, 197, 198, 199, 200, 202, 203], "AND": [104, 117, 127], "And": [0, 34, 35, 47, 52, 71, 91, 95, 116, 117, 118, 130, 134, 143, 145, 158, 159, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "As": [24, 25, 27, 32, 34, 36, 38, 39, 40, 47, 48, 49, 51, 54, 55, 66, 68, 70, 71, 74, 76, 77, 83, 84, 87, 90, 91, 93, 94, 95, 98, 101, 102, 106, 107, 111, 130, 132, 133, 136, 139, 140, 143, 144, 157, 158, 159, 160, 162, 163, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 188, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203], "At": [39, 96, 98, 106, 116, 130, 132, 134, 137, 138, 140, 141, 143, 145, 175, 179, 187, 191, 198, 200, 202], "BUT": [189, 191, 194, 196, 197, 198, 200], "Be": [18, 19, 34, 140, 141, 145, 171], "Being": 56, "But": [4, 5, 7, 10, 25, 35, 36, 37, 42, 45, 48, 49, 51, 52, 54, 56, 57, 71, 77, 79, 80, 85, 89, 90, 92, 94, 95, 101, 102, 104, 107, 111, 116, 117, 129, 130, 132, 133, 134, 137, 139, 140, 145, 157, 158, 159, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 188, 189, 190, 191, 197, 198, 199, 200], "By": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 47, 48, 49, 59, 62, 78, 80, 87, 102, 106, 130, 133, 157, 158, 159, 161, 162, 163, 164, 166, 167, 169, 171, 175, 176, 178, 179, 182, 189, 191, 196, 197, 198, 200], "For": [3, 4, 5, 7, 12, 14, 15, 16, 17, 20, 23, 24, 25, 28, 29, 31, 32, 35, 37, 38, 39, 40, 42, 46, 47, 48, 49, 51, 52, 61, 65, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 94, 95, 96, 98, 101, 102, 103, 104, 107, 108, 111, 112, 116, 117, 118, 128, 130, 132, 133, 135, 137, 138, 140, 141, 144, 151, 152, 153, 154, 157, 158, 159, 160, 162, 163, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "IN": [57, 141], "IT": [94, 102, 135, 158], "If": [1, 4, 5, 6, 24, 27, 28, 34, 35, 37, 39, 42, 43, 44, 45, 47, 48, 49, 52, 54, 56, 57, 59, 61, 62, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 89, 90, 94, 96, 98, 101, 102, 103, 106, 109, 115, 116, 117, 118, 127, 128, 129, 130, 132, 133, 134, 137, 138, 140, 141, 143, 144, 145, 150, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 190, 191, 192, 197, 198, 199, 200, 201, 202, 207, 210], "In": [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 103, 104, 106, 115, 116, 117, 118, 129, 130, 132, 133, 134, 136, 137, 138, 139, 143, 144, 145, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "Into": 132, "It": [0, 7, 9, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 56, 57, 59, 60, 64, 68, 69, 70, 71, 74, 76, 78, 79, 80, 82, 84, 85, 88, 89, 90, 91, 92, 94, 95, 98, 101, 102, 103, 104, 106, 108, 112, 116, 117, 119, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 192, 193, 194, 197, 199, 200, 201, 202, 203, 209, 210], "Its": [7, 18, 19, 22, 24, 117, 130, 210], "NO": 56, "NOT": [10, 95, 104, 189, 190, 210], "Near": 180, "No": [0, 39, 43, 47, 48, 70, 74, 89, 92, 98, 116, 117, 130, 137, 138, 140, 143, 145, 157, 158, 161, 164, 171, 179, 180, 190, 193, 195, 196, 197, 198, 202], "Not": [53, 54, 55, 71, 81, 82, 95, 98, 104, 106, 118, 130, 135, 138, 140, 145, 150, 151, 163, 173, 174, 175, 177, 178, 180, 186, 195], "OF": [140, 143, 144], "OR": [39, 95, 104, 133, 186, 197], "Of": [133, 173, 179, 180], "On": [4, 8, 16, 17, 18, 19, 34, 36, 48, 55, 56, 68, 75, 77, 80, 98, 102, 130, 133, 150, 171, 180, 191, 198, 202], "One": [0, 7, 28, 35, 38, 52, 59, 66, 80, 83, 89, 90, 101, 106, 116, 117, 130, 133, 134, 139, 144, 145, 152, 172, 173, 174, 175, 177, 178, 179, 180, 181, 187, 188, 189, 190, 196, 198, 200], "Or": [7, 48, 117, 132, 140, 164, 165, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 188, 200], "Such": [7, 18, 19, 37, 48, 157, 158, 161, 165, 175, 178, 180], "THE": 141, "TO": [37, 118, 140, 168, 200], "That": [6, 24, 36, 42, 45, 52, 54, 68, 71, 104, 109, 116, 130, 132, 133, 134, 140, 143, 145, 171, 172, 173, 174, 175, 177, 178, 179, 180, 188, 195, 197, 198, 199, 201, 202, 203, 207], "The": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 42, 45, 46, 47, 48, 49, 51, 56, 57, 59, 60, 61, 65, 66, 69, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 109, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 150, 151, 152, 153, 154, 155, 157, 159, 160, 169, 171, 172, 174, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207], "Their": [130, 171, 194], "Then": [1, 49, 53, 62, 63, 64, 66, 72, 75, 76, 80, 90, 91, 101, 102, 103, 116, 117, 129, 130, 132, 133, 134, 139, 140, 143, 144, 145, 158, 172, 173, 174, 175, 176, 179, 180, 189, 195, 196, 197, 200, 202], "There": [0, 4, 24, 25, 31, 34, 35, 38, 39, 40, 42, 47, 48, 52, 53, 54, 56, 62, 63, 68, 70, 77, 80, 84, 88, 90, 91, 92, 95, 102, 104, 106, 107, 111, 116, 117, 130, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145, 157, 158, 160, 161, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 187, 188, 189, 190, 192, 194, 195, 196, 198, 199, 200, 202], "These": [0, 14, 15, 16, 17, 23, 37, 38, 51, 52, 66, 70, 71, 77, 78, 80, 81, 87, 89, 96, 101, 104, 118, 130, 132, 134, 136, 138, 139, 140, 141, 144, 164, 171, 173, 174, 175, 177, 179, 180, 186, 189, 190, 191, 194, 196, 198, 200, 210], "To": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 34, 35, 38, 39, 40, 42, 44, 48, 49, 51, 52, 56, 57, 59, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 80, 82, 84, 89, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 117, 118, 120, 128, 130, 132, 136, 137, 138, 145, 150, 151, 153, 154, 158, 159, 161, 162, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 192, 193, 194, 196, 198, 199, 201, 202], "Will": [77, 173, 175, 178], "With": [0, 5, 6, 24, 43, 54, 57, 71, 104, 109, 130, 144, 154, 171, 172, 173, 174, 177, 178, 179, 187, 188, 189, 190, 192, 193, 194, 195, 196, 198, 200, 201, 202, 207], "_": [27, 28, 29, 30, 31, 35, 38, 80, 88, 90, 97, 101, 102, 103, 128, 130, 164, 178, 179, 180, 195, 197, 201], "_0": 179, "_1": 30, "_2": [30, 32], "__": [101, 102, 104], "___________": 140, "__add__": 104, "__and__": 104, "__bases__": 102, "__builtins__": [59, 70, 80], "__cached__": [59, 80], "__call__": [37, 128, 130], "__class__": [71, 101, 102, 128, 174], "__closure__": 36, "__d": 103, "__dict__": [38, 84, 102], "__div__": 104, "__doc__": [59, 74, 80, 89, 102], "__eq__": 104, "__file__": [59, 80], "__floordiv__": 104, "__ge__": 104, "__get_result": 130, "__getitem__": [47, 157, 175], "__gt__": 104, "__iadd__": 104, "__idiv__": 104, "__imod__": 104, "__imul__": 104, "__init__": [34, 35, 38, 72, 83, 84, 101, 102, 103, 104, 118, 130, 172, 173, 174, 175, 176, 179, 181, 182, 195], "__invert__": 104, "__ipow__": 104, "__isub__": 104, "__iter__": [34, 35], "__le__": 104, "__len__": 175, "__loader__": [59, 80], "__lshift__": 104, "__lt__": 104, "__main__": [84, 101, 102, 103, 104, 106, 175], "__maxpric": 101, "__mod__": 104, "__module__": 102, "__mro__": 103, "__mul__": 104, "__name__": [59, 80, 102, 174, 195], "__ne__": 104, "__next__": [34, 35], "__or__": 104, "__package__": [59, 80], "__peg_parser__": 88, "__pow__": 104, "__pycache__": 180, "__rshift__": 104, "__salari": 101, "__secretcount": 102, "__spec__": [59, 80], "__str__": [72, 104], "__sub__": 104, "__truediv__": 104, "__version__": [84, 118, 150, 155, 171, 172, 174, 175, 177, 178, 179, 180], "__weakref__": [84, 102], "__xor__": 104, "_acal": 130, "_add_numeric_oper": 157, "_age": 90, "_age_": 164, "_arun": 128, "_ax": 195, "_backward_hook": 175, "_base": 130, "_call": [128, 130], "_call_impl": [174, 175], "_classname__attrnam": 102, "_completion_with_retri": [130, 140], "_condit": 130, "_conv_forward": 175, "_decor": [164, 189, 195], "_drop_axi": 161, "_epoch": 178, "_except": 130, "_forward_hook": 175, "_forward_pre_hook": 175, "_gener": 130, "_get_action_request": 128, "_get_input": 130, "_get_sess": 128, "_global_backward_hook": [174, 175], "_global_backward_pre_hook": 174, "_global_forward_hook": [174, 175], "_global_forward_pre_hook": [174, 175], "_if": 90, "_indentation_": 42, "_init_": 71, "_input": 135, "_interpret_respons": 130, "_interpret_response_lin": 130, "_io": 68, "_justcounter__secretcount": 102, "_m": 87, "_m_m_m_m_m_m_m_m_m": 87, "_make_request": 128, "_marks_": 164, "_maxlin": 128, "_name_": 164, "_output": 30, "_p": 30, "_pair": 175, "_prompt": 130, "_raise_timeout": 128, "_read_statu": 128, "_reversed_padding_repeated_twic": 175, "_run": 128, "_should_continu": 128, "_sinplot_": 187, "_sock": 128, "_sslobj": 128, "_state": 130, "_strptime": 61, "_strptime_datetim": 61, "_take_next_step": 128, "_temperatur": 38, "_timeout_occur": 128, "_token_set": 118, "_token_sort": 118, "_transform_index": 164, "_y": 198, "a04242241123": 52, "a1": 194, "a2": 194, "a3": 194, "a3e12f": 80, "a4372dda": 133, "a46e692b8bdd": 174, "a8dfd56d4d8": 70, "a_": 31, "a_0": 27, "a_copi": 152, "a_g_": 90, "a_n": 27, "aa": 39, "aabbcc": 147, "aabc": 39, "aaron": 130, "ab": [24, 39, 53, 59, 68, 155, 179, 192, 198, 201], "ab123csd": 39, "abacu": 39, "abandon": 130, "abbrevi": [52, 60, 61, 62, 165, 189, 195, 196], "abc": [39, 47, 53, 54, 94, 141], "abc12d": 39, "abc12de23f456": 39, "abcdef": 147, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 80, "abhai": 141, "abil": [52, 101, 103, 117, 133, 137, 138, 140, 143, 173, 176, 178, 179, 180, 195], "abl": [4, 7, 23, 34, 36, 77, 93, 96, 103, 117, 130, 132, 133, 141, 143, 145, 172, 173, 175, 177, 179, 180, 182, 187, 190, 194, 196, 197, 198, 200, 201], "abnorm": 49, "abomasnow": 168, "abomasnowmega": 168, "abort": 49, "about": [6, 7, 8, 10, 20, 24, 25, 30, 34, 36, 37, 38, 39, 40, 42, 47, 51, 52, 53, 54, 55, 56, 57, 59, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 82, 84, 88, 89, 90, 91, 92, 93, 94, 96, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 116, 117, 118, 127, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 151, 152, 154, 157, 158, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 187, 188, 189, 190, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 207], "abov": [4, 5, 7, 24, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 89, 90, 91, 93, 96, 101, 102, 103, 104, 106, 116, 130, 132, 133, 138, 140, 143, 144, 150, 152, 157, 159, 160, 161, 162, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "abra": 168, "abraham": 175, "abruptli": [47, 48], "absenc": 51, "absol": 168, "absolmega": 168, "absolut": [24, 30, 36, 38, 42, 74, 82, 130, 145, 172, 173, 174], "absolute_url": [137, 138], "absolute_valu": 74, "abstract": [70, 101, 116, 117, 130, 132, 137, 140, 145, 179, 194, 196, 197, 200], "abund": 130, "abus": 36, "abxz": 39, "abyss": 39, "ac": 39, "academ": [117, 158], "acc": [152, 173, 174, 180], "accademia": 130, "acceler": [141, 171, 172, 174, 175, 177, 178, 179, 180, 182], "accelgor": 168, "accent": 192, "accent_r": 192, "accept": [52, 72, 102, 108, 112, 118, 130, 137, 138, 139, 145, 174, 179, 180, 186, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "access": [24, 36, 38, 45, 56, 60, 65, 68, 70, 74, 75, 76, 79, 80, 82, 83, 84, 89, 92, 95, 96, 101, 103, 106, 116, 130, 137, 138, 140, 141, 150, 151, 152, 157, 158, 159, 160, 171, 172, 176, 177, 179, 180, 189, 190, 197], "access_level": 45, "accessor": 157, "accid": 130, "accident": 101, "acco": 168, "accomod": 171, "accompani": 130, "accomplish": [52, 56, 57, 62, 94, 140], "accord": [45, 74, 85, 95, 104, 116, 130, 179, 200, 202, 203], "accordingli": [48, 68, 96, 174, 178, 180, 187, 189, 190, 191, 200], "account": [15, 37, 128, 130, 134, 137, 145, 177, 178, 179, 180, 194, 198], "account_bal": 101, "account_info": 101, "accounts_to_mim": 140, "accum": 174, "accumul": [172, 173, 174, 175, 176, 181, 182], "accur": [0, 4, 5, 11, 13, 16, 17, 18, 19, 44, 45, 51, 82, 92, 118, 130, 133, 141, 143, 145, 171, 191], "accuraci": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 130, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "accuracy_fn": [173, 174], "accuracy_scor": 173, "acd": 39, "acdbea": 39, "ach": 39, "achiev": [49, 101, 104, 116, 140, 143, 165, 171, 173, 175, 177, 178, 179, 180, 187, 188, 191, 192, 197, 200], "achiv": 52, "acm": [97, 145], "acme_co_v2": 145, "acmico": 145, "acn": 145, "aco": [80, 82], "acombine_doc": 130, "acompletion_with_retri": 130, "acordingli": 200, "acosh": [80, 82], "acquaint": [190, 191, 199, 200, 201, 202], "acquir": [101, 103, 133, 179], "acquisit": 133, "acrobat": 130, "acronym": [52, 179], "across": [0, 106, 117, 130, 138, 144, 145, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202], "act": [24, 37, 42, 75, 84, 95, 101, 102, 117, 144, 195, 201], "action": [0, 42, 54, 71, 74, 87, 101, 106, 116, 117, 127, 130, 132, 138, 139, 140, 141, 157, 171, 174, 175, 177, 179, 180, 188, 202], "action_id": 128, "activ": [7, 18, 19, 24, 64, 129, 130, 132, 137, 138, 140, 141, 145, 171, 174, 175, 177, 178, 179, 180, 202, 209], "actual": [10, 14, 15, 16, 17, 18, 19, 34, 35, 37, 38, 52, 66, 68, 72, 77, 90, 92, 102, 103, 104, 106, 117, 130, 132, 133, 134, 139, 140, 143, 145, 148, 153, 157, 165, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210], "actviat": 173, "ad": [4, 5, 11, 12, 13, 14, 15, 16, 17, 24, 37, 38, 39, 47, 49, 51, 53, 54, 56, 64, 70, 74, 93, 94, 103, 116, 118, 119, 130, 153, 154, 157, 158, 159, 165, 167, 171, 173, 174, 175, 176, 177, 179, 181, 182, 186, 187, 188, 190, 195, 196, 197, 198, 200], "ad7c0de6": 133, "ada": [116, 134], "adam": [118, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182], "adapt": [128, 140, 177, 178, 179, 193, 197, 200, 201, 202], "adaptiveavgpool2d": [177, 178], "add": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 36, 37, 39, 40, 44, 45, 47, 48, 54, 56, 57, 70, 71, 74, 76, 77, 79, 80, 85, 89, 90, 91, 93, 94, 95, 101, 102, 103, 104, 116, 118, 130, 131, 132, 133, 134, 136, 137, 138, 139, 143, 145, 147, 148, 150, 153, 154, 157, 158, 159, 164, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 187, 190, 191, 192, 193, 195, 197, 198, 199, 200, 201, 202, 204], "add_": [25, 107, 111], "add_6_and_3": 88, "add_ai_messag": 116, "add_all_num": 74, "add_binari": 84, "add_collect": 195, "add_docu": 133, "add_expens": 101, "add_graph": 178, "add_incom": 101, "add_item": 74, "add_legend": [201, 202], "add_legend_data": 195, "add_patch": 194, "add_prefix": 164, "add_scalar": 178, "add_skil": 101, "add_subplot": 174, "add_suffix": 164, "add_ten": [36, 74], "add_two_num": 57, "add_two_numb": [74, 77], "add_user_messag": 116, "add_video_info": 144, "addbackward0": 179, "adder": 40, "addict": 133, "addit": [7, 11, 12, 13, 14, 15, 16, 17, 24, 26, 29, 40, 51, 71, 74, 77, 79, 84, 90, 93, 94, 95, 101, 103, 104, 116, 117, 118, 119, 130, 133, 145, 150, 171, 179, 187, 188, 190, 191, 195, 197, 200, 205], "addition": [23, 101, 133, 191, 198, 200, 201, 202], "additional_kwarg": [116, 131, 137, 139], "additoinal_kwarg": 139, "addmmbackward0": [171, 179], "address": [4, 5, 45, 47, 55, 68, 90, 118, 145, 198], "adher": [130, 178], "adienc": 201, "adject": 130, "adjust": [7, 95, 132, 138, 143, 171, 172, 174, 175, 176, 177, 179, 180, 181, 182, 194, 195, 196, 199, 200], "admin": 45, "administr": 135, "admir": 130, "admiss": 130, "admit": 143, "adopt": [90, 180], "adorn": 130, "adrish": 179, "adult_mal": [196, 198], "advanc": [10, 24, 49, 77, 90, 116, 117, 122, 130, 138, 140, 173, 174, 178, 179, 180, 187, 198], "advantag": [10, 34, 98, 116, 117, 130, 133, 137, 138, 143, 144, 187, 197], "adventur": 130, "advers": 198, "adversari": 209, "advic": [130, 133, 143, 144, 198], "advis": [80, 90, 130, 133, 143, 144, 191, 198], "advisor": [130, 144], "advisori": 144, "aegislashblad": 168, "aegislashshield": 168, "aerodactyl": 168, "aerodactylmega": 168, "aesthet": [180, 186, 188, 189, 190, 191, 195, 198, 200, 202, 205], "af0f59439c9b": 36, "affect": [75, 130, 144, 157, 191], "affili": [117, 141], "afford": [130, 141, 187], "afhuu987u3": 140, "afmhot": 192, "afmhot_r": 192, "afoo": 39, "afootbal": 39, "afootest": 39, "after": [0, 7, 31, 34, 39, 45, 47, 48, 49, 51, 52, 53, 54, 65, 66, 68, 70, 71, 74, 75, 76, 77, 80, 84, 88, 89, 90, 92, 93, 94, 98, 102, 104, 106, 116, 117, 118, 130, 137, 138, 140, 141, 143, 145, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 192, 197, 202], "afternoon": 140, "afterward": [119, 130, 133, 145], "ag": [40, 44, 45, 47, 52, 53, 55, 70, 71, 74, 77, 80, 84, 90, 94, 95, 101, 102, 103, 106, 116, 130, 134, 147, 157, 158, 160, 161, 162, 163, 164, 166, 167, 173, 174, 186, 188, 191, 195, 196, 198, 202], "again": [43, 48, 53, 66, 68, 70, 72, 78, 80, 101, 103, 104, 106, 117, 130, 133, 139, 140, 143, 145, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "against": [39, 118, 130, 135, 143, 153, 158, 165, 174, 188, 190, 191, 195, 201, 202], "agarw": 141, "age_": 90, "agenc": [116, 117, 135, 141], "agenda": [186, 188, 190, 197, 200], "agent": [0, 122, 130, 146], "agent_executor": 132, "agent_toolkit": 128, "agentexecutor": [116, 117, 128], "agg": [157, 169], "aggfunc": 157, "aggreg": [7, 130, 200], "aggron": 168, "aggronmega": 168, "agil": [141, 145], "agnost": [145, 171, 172, 173, 176, 177, 178, 179, 180, 182], "ago": [116, 130, 136], "agonistc": 179, "agre": [117, 130, 188], "agricultur": [135, 171], "ah": 129, "ahead": [118, 134, 145, 180, 188, 191], "ai": [24, 115, 117, 130, 131, 137, 141, 143, 144, 145, 171, 176, 177, 178, 179, 180, 198, 210], "ai_respons": 116, "ai_response_messag": 139, "aid": [117, 130, 143, 144, 180, 201], "aim": [0, 3, 10, 117, 140, 144, 157, 161, 199], "aimessag": [116, 131, 135, 137, 139, 145], "aimessageprompttempl": [129, 131, 145], "aipom": 168, "air": [130, 132, 135, 140], "airbnb": 144, "airlin": [135, 203], "airmark": 143, "airport": 133, "airtabl": 144, "ak": 179, "akin": [0, 175], "al": 179, "ala": 130, "alakazam": 168, "alakazammega": 168, "alammar": 179, "alan": [47, 48, 74, 77, 158], "alan99": 49, "alan99whit": 48, "alarm": 130, "album": 116, "alchemi": 116, "alex": 118, "alexhormozi": 140, "alfa": [157, 158, 169], "algebra": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 150, 191, 209], "algorithm": [0, 2, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 28, 29, 47, 103, 132, 141, 171, 172, 179, 190, 201, 209, 210], "alia": [39, 180], "alic": 138, "alien": 130, "align": [0, 25, 27, 28, 29, 31, 32, 52, 107, 111, 148, 157, 177, 179, 191], "alina": 147, "aliv": [196, 198], "all": [0, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 45, 46, 47, 48, 49, 51, 54, 56, 59, 60, 61, 66, 68, 69, 70, 71, 72, 74, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 106, 109, 116, 117, 118, 127, 128, 130, 132, 133, 135, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 152, 153, 154, 157, 158, 159, 160, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210], "all_even": 35, "all_kei": 55, "alla": 116, "allan": 52, "allclos": 155, "allianc": [116, 130], "alliter": 131, "alll": 148, "alloc": [79, 101, 200], "allow": [11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 36, 37, 38, 39, 40, 42, 45, 47, 48, 51, 53, 54, 70, 71, 76, 77, 89, 90, 91, 94, 95, 101, 102, 103, 104, 106, 108, 112, 116, 117, 118, 128, 130, 131, 139, 140, 141, 144, 152, 153, 157, 158, 164, 165, 166, 171, 173, 175, 176, 177, 178, 179, 180, 182, 189, 192, 196, 197, 201, 202], "allus": 140, "almost": [24, 130, 140, 171, 172, 173, 175, 176, 177, 178, 179, 180, 190, 199, 200], "aloha": 186, "alomomola": 168, "alon": [130, 132, 179, 194, 196, 198], "along": [8, 10, 11, 14, 15, 37, 47, 70, 71, 74, 77, 79, 80, 84, 102, 103, 106, 116, 118, 130, 139, 140, 150, 151, 153, 171, 173, 175, 179, 180, 187, 190, 192, 194, 195, 197, 199, 200, 210], "alongisd": 172, "alongsid": [131, 173, 174, 175, 180], "alot": 179, "alow": 49, "alp": 130, "alpha": [8, 18, 19, 31, 32, 81, 90, 180, 189, 191, 192, 193, 194, 195, 197, 202], "alphabet": [28, 29, 48, 49, 52, 76, 80, 91, 118], "alphanumer": 52, "alpin": 130, "alreadi": [8, 23, 36, 37, 45, 52, 53, 56, 68, 70, 80, 85, 98, 106, 117, 130, 132, 133, 134, 135, 140, 144, 145, 157, 158, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202], "alright": [172, 173, 174, 175, 177, 179, 180, 193], "also": [0, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 34, 35, 36, 37, 38, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 83, 84, 87, 89, 90, 91, 93, 94, 95, 96, 98, 101, 102, 103, 106, 107, 109, 111, 116, 117, 118, 119, 127, 130, 132, 133, 134, 137, 138, 139, 140, 141, 143, 145, 148, 152, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 210], "alt": 117, "altaria": 168, "altariamega": 168, "alter": [37, 42, 92, 157, 175, 179, 180, 187, 190, 192, 194, 195, 197, 198, 199, 200], "altern": [27, 29, 31, 36, 52, 68, 77, 80, 91, 117, 118, 130, 161, 164, 179, 180, 197, 200, 202], "although": [4, 12, 28, 29, 36, 74, 75, 79, 83, 95, 96, 102, 130, 132, 173, 180, 187, 188, 189, 195, 196, 200, 201], "altman": [116, 130, 132], "altspel": 117, "alu": 68, "alumni": 130, "alwai": [24, 27, 29, 34, 42, 43, 71, 72, 74, 80, 81, 82, 85, 87, 88, 89, 93, 95, 96, 102, 103, 106, 130, 132, 133, 137, 138, 145, 152, 157, 171, 172, 173, 175, 177, 178, 179, 180, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200], "alzheim": 140, "am": [37, 39, 52, 56, 60, 61, 75, 84, 94, 106, 140, 144, 145, 175, 187, 190, 192, 194, 195, 196, 197, 198, 200, 202], "amateurish": 130, "amaura": 168, "amax": [18, 19], "amaz": [51, 177, 202], "amazingli": 131, "amazon": [52, 180], "amazonaw": 174, "amber": 189, "ambigi": 117, "ambigu": 85, "ambipom": 168, "ambit": 130, "ambiti": 130, "amd": [98, 139, 178], "amd64": 24, "amelia": 106, "america": [59, 63, 68, 117], "american": [116, 130, 186], "ami": [40, 47, 102, 137], "amid": 130, "amin": [18, 19], "among": [45, 66, 102, 130, 143, 189, 190, 198, 199, 202], "amongst": 175, "amoonguss": 168, "amount": [0, 42, 44, 72, 89, 92, 98, 130, 133, 137, 138, 139, 145, 150, 171, 172, 173, 174, 177, 178, 179, 180, 191, 195, 196, 197, 202], "amp": 135, "ampharo": 168, "ampharosmega": 168, "ampl": 200, "amusingli": 130, "an": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 31, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 57, 60, 64, 65, 66, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 106, 112, 116, 117, 118, 127, 129, 130, 131, 133, 134, 135, 136, 137, 138, 140, 141, 143, 144, 145, 150, 151, 152, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 176, 177, 178, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "anaconda": [80, 150, 187], "anaconda3": [61, 80, 116, 117, 128, 130, 132, 133, 161, 164, 165, 166, 186, 189, 193, 195], "analog": [83, 157], "analogi": 143, "analys": [5, 14, 15, 16, 17, 98, 115, 187], "analysi": [0, 3, 4, 5, 12, 14, 15, 16, 17, 64, 98, 117, 157, 158, 161, 168, 169, 180, 186, 187, 189, 190, 194, 195, 196, 198, 199, 200, 202, 203, 209], "analyst": [157, 165, 188], "analyt": [0, 138, 157, 190], "analyz": [7, 71, 98, 142, 147, 148, 157, 158, 159, 162, 163, 165, 168, 169, 194, 202], "analyze_list_overlap": 142, "anana": 39, "anathema": 133, "anatomi": 117, "ancient": 130, "andorra": 117, "andreessen": [116, 143], "andrej": 171, "andrii": 118, "android": 180, "anduril": 144, "angel": [116, 130, 133], "angl": 82, "angri": 130, "ani": [4, 6, 7, 18, 19, 22, 24, 27, 31, 32, 34, 35, 37, 38, 46, 47, 48, 49, 51, 52, 54, 56, 57, 64, 70, 71, 75, 76, 77, 78, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 109, 116, 117, 118, 127, 130, 133, 134, 137, 138, 140, 141, 143, 144, 145, 150, 151, 153, 154, 157, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 188, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210], "anim": [7, 18, 19, 103, 130, 145, 179], "anisotrop": [28, 29], "ankl": [17, 19, 174], "anlayt": 210, "ann": [7, 18, 19], "anniversari": 39, "annoi": [133, 154], "annot": [180, 188, 197, 198, 201], "annotate_ax": 195, "announc": 130, "annual": [24, 158, 191], "anoint": 130, "anomal": 1, "anomali": [2, 132, 136, 209], "anomaly_detect": 8, "anon": 130, "anonym": [22, 35, 57, 86], "anorith": 168, "anoth": [3, 7, 22, 28, 29, 31, 32, 35, 36, 37, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 57, 62, 68, 70, 74, 75, 76, 80, 83, 84, 88, 89, 91, 93, 94, 95, 96, 101, 102, 103, 116, 117, 118, 128, 130, 132, 133, 137, 138, 139, 140, 145, 147, 152, 153, 157, 158, 159, 166, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "anscomb": [190, 192], "ansi": 130, "answer": [51, 116, 127, 129, 130, 132, 133, 136, 140, 141, 143, 174, 175, 176, 177, 178, 179, 180, 182, 200], "answer_kei": 117, "antialia": [175, 178, 179, 181, 182], "antibiot": 47, "antiqu": 130, "anuko": 52, "anukool": [52, 69], "any_fun": 84, "anybodi": 145, "anymor": [118, 130, 201], "anyof": 139, "anyon": [52, 90, 130, 137, 138, 143, 178, 180], "anyth": [24, 43, 52, 74, 102, 106, 116, 117, 118, 130, 138, 143, 145, 161, 164, 166, 167, 171, 172, 173, 174, 175, 178, 179, 180, 187, 194, 197, 202], "anytim": [179, 188], "anywai": [44, 130, 133, 143, 175, 180, 196, 197, 201], "anywher": [39, 130, 137, 138, 171, 178, 180, 192], "aord": 133, "ap": 145, "apart": [4, 24, 53, 130, 133, 144, 153, 191, 194, 200], "apex": 130, "api": [116, 122, 130, 132, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 161, 164, 171, 177, 178, 179, 180], "api_bas": 130, "api_doc": 117, "api_kei": [130, 134, 139, 143], "api_requestor": 130, "api_resourc": 130, "api_typ": 130, "api_vers": 130, "api_wrapp": 128, "apichain": 117, "apolog": 130, "app": [129, 130, 134, 137, 138, 143, 144, 145, 174, 175, 176, 177, 178, 189], "appart": 49, "appdata": 80, "appeal": [130, 132, 187, 188, 198], "appear": [52, 75, 76, 79, 84, 89, 103, 117, 118, 130, 138, 173, 174, 179, 180, 187, 189, 190, 191, 198, 202], "appen": 154, "append": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 47, 57, 68, 71, 74, 79, 80, 84, 94, 101, 132, 140, 143, 144, 150, 154, 157, 164, 166, 169, 172, 174, 175, 176, 178, 180, 181, 182, 190, 192, 193, 194, 195, 202], "appendex": 179, "appendix": 179, "appet": 131, "appl": [39, 47, 52, 53, 55, 56, 91, 92, 95, 102, 117, 130, 131, 159, 180, 198], "apple_pi": 180, "appli": [24, 31, 32, 37, 38, 70, 79, 117, 130, 132, 133, 141, 143, 144, 160, 161, 163, 164, 165, 167, 171, 173, 174, 175, 177, 179, 189, 190, 194, 197, 199, 200, 201, 202], "applic": [0, 22, 28, 29, 31, 32, 39, 51, 52, 64, 68, 80, 83, 101, 102, 116, 117, 120, 127, 130, 133, 137, 138, 140, 144, 153, 158, 164, 171, 172, 176, 179, 180, 182, 194, 209, 210], "appreci": [130, 140], "approach": [7, 26, 101, 117, 130, 140, 143, 144, 153, 161, 164, 172, 178, 201, 202], "appropri": [0, 5, 14, 15, 16, 17, 43, 44, 45, 46, 51, 61, 74, 177, 178, 179, 180, 189, 194], "approx": 32, "approxim": [4, 5, 51, 128, 130, 132, 179, 199, 200], "apr": 87, "apredict": 130, "april": [45, 49, 117, 130, 133, 138, 175, 180], "apython": 39, "ar": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 108, 109, 112, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 151, 152, 153, 154, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 210], "ara": 117, "arab": 68, "arang": [8, 28, 29, 147, 150, 152, 153, 155, 171, 172, 173, 202, 203], "arbitrari": [27, 55, 56, 71, 74, 106, 131, 152, 157, 175, 189], "arbok": 168, "arc": [82, 130], "arcanin": 168, "arcco": 32, "arceu": 168, "arch": 130, "archen": 168, "archeop": 168, "architectur": [7, 130, 174, 175, 176, 177, 178, 179, 180, 181, 182], "architecur": 179, "architecutur": 177, "architetur": 179, "archiv": [175, 179], "arctan2": 155, "arcx": 52, "arcxarcx": 52, "area": [0, 74, 90, 95, 101, 103, 116, 117, 132, 140, 145, 175, 179, 180, 191, 197, 200, 201], "area_of_circl": [74, 90], "aren": [57, 130, 132, 133, 134, 139, 144, 145, 171, 172, 174, 175, 177, 178, 179, 180, 196, 198, 200], "arg": [37, 41, 49, 61, 71, 77, 106, 118, 128, 130, 164, 173, 174, 175, 176, 178, 179, 180, 181, 182, 189, 192, 195, 201], "arg1": [57, 77], "arg2": 57, "arg3": 57, "argentina": 147, "argmax": [155, 171, 173, 174, 175, 176, 177, 180, 181, 182], "argmin": [132, 155, 171], "argpars": [176, 182], "argpartit": 155, "argsort": 155, "argu": [117, 143, 173], "arguabl": 130, "argument": [22, 34, 35, 37, 38, 39, 40, 52, 56, 57, 59, 60, 61, 65, 66, 68, 69, 70, 72, 75, 79, 80, 84, 86, 90, 102, 106, 116, 117, 118, 128, 130, 132, 137, 139, 147, 151, 154, 174, 175, 176, 177, 187, 188, 189, 190, 191, 193, 196, 200, 202], "argument1": 80, "argument2": 80, "argument_list": 79, "argv": 80, "ariado": 168, "aris": [37, 48], "arithmet": [38, 51, 70, 74, 101, 104, 153], "arm": [98, 186], "armaldo": 168, "arnold": 186, "aromatiss": 168, "aron": 168, "around": [52, 77, 84, 92, 117, 127, 128, 130, 132, 133, 134, 140, 143, 144, 145, 171, 177, 180, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "arr": [37, 151, 153], "arrai": [14, 15, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32, 47, 52, 55, 57, 68, 74, 80, 107, 111, 130, 132, 156, 157, 171, 173, 175, 190, 191, 192, 194, 200, 201, 202, 203], "arrang": [31, 69, 130, 140, 168, 171, 190, 195, 198, 199], "array_equ": [150, 155], "arriv": [130, 194, 197], "arrow": [70, 179], "arrrai": 157, "arsen": [200, 201, 202], "art": [0, 49, 130, 135, 141, 173, 174, 175, 176, 177, 179, 180], "arthur": [37, 40, 45, 47, 55, 57, 74, 77, 94, 101, 102, 103], "arthurhunt": 40, "arti": 130, "articl": [9, 17, 19, 48, 63, 64, 65, 66, 76, 77, 106, 117, 130, 132, 136, 157, 158, 161, 163, 164, 173, 179, 180, 191], "articuno": 168, "artif": 15, "artifici": [0, 7, 12, 15, 18, 19, 130, 140, 141, 171, 174, 175, 180, 198, 209], "artificial_intellig": 198, "artist": [117, 130, 178, 195], "arxiv": 179, "as_cmap": 189, "as_retriev": [116, 117, 133, 136, 142, 143], "as_strid": 155, "asabeneh": [24, 68], "asarrai": 175, "ascend": [130, 157, 168, 169], "ascii": [52, 68, 118], "ascii_lett": 80, "asciidammit": 118, "ascontiguousarrai": 155, "asian": [54, 186], "asian_countri": 54, "asid": [130, 131, 171, 198], "asin": [80, 82], "asinh": [80, 82], "ask": [24, 35, 42, 51, 72, 94, 116, 117, 122, 130, 132, 133, 136, 139, 141, 143, 144, 145, 146, 173, 175, 176, 177, 179, 180, 200], "asp": 130, "aspect": [101, 116, 117, 140, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 199, 200, 201, 202], "aspra": 130, "assaria": 186, "assemblyai": 143, "assert": [70, 71, 88, 89, 118, 174, 176, 177, 178, 179, 180, 181, 182], "assert_same_host": 128, "assertgreat": 118, "assertionerror": 70, "assertisnon": 118, "assess": 199, "asset": [117, 141, 143], "assign": [3, 7, 17, 19, 36, 37, 38, 47, 52, 53, 54, 55, 56, 57, 62, 70, 75, 76, 77, 79, 84, 89, 91, 92, 93, 96, 97, 101, 104, 106, 117, 133, 140, 157, 158, 161, 164, 166, 167, 173, 175, 187, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202], "assist": [130, 139, 143, 145, 189, 201], "associ": [0, 9, 17, 19, 28, 29, 55, 80, 84, 89, 90, 96, 102, 117, 128, 130, 188, 191, 195, 196, 200, 202], "assosci": [177, 180], "assum": [1, 4, 7, 11, 13, 38, 95, 116, 118, 130, 132, 133, 161, 175, 180, 189], "assumpt": [130, 143, 191, 200], "assur": [130, 179, 194, 196, 200], "asterisk": [40, 77, 80], "asterix": 130, "asthenospher": 127, "astonish": 130, "astrai": 130, "astyp": [150, 154, 155, 157, 197, 202], "async": [88, 128, 130], "atan": [80, 82], "atan2": [80, 82], "atanh": [80, 82], "ate": 140, "ateli": 130, "ath": 39, "atk": 168, "atlanta": [103, 117, 119], "atlanti": 40, "atleast": 192, "atleast_2d": 155, "atmospher": [140, 188], "atol": 174, "attach": [36, 38, 49, 90, 101, 130, 157, 171, 177, 179, 188, 189, 190, 191, 192, 195, 197, 199, 200, 202], "attachment_count": 128, "attack": [119, 168, 186], "attain": 198, "attempt": [118, 130, 177, 180, 188, 196, 200], "attend": [130, 143], "attent": [130, 133, 143, 175, 180, 195, 197, 202], "attic": 130, "attir": 130, "attitud": 140, "attn_dropout": 179, "attn_output": 179, "attr": [102, 103], "attract": [94, 130, 187], "attrib": 68, "attribut": [36, 37, 38, 39, 56, 59, 65, 70, 72, 74, 80, 82, 89, 94, 101, 103, 106, 127, 133, 140, 142, 153, 161, 164, 171, 174, 175, 177, 178, 179, 180, 182, 192, 194, 195, 200], "attributeerror": [56, 101, 102, 103, 195, 200], "attributeinfo": 133, "attributemethod": 89, "au": 32, "audi": [157, 158, 169], "audienc": [130, 201], "audino": 168, "audinomega": 168, "audio": [24, 143, 171, 172, 174, 175, 177, 180, 202], "aug": 87, "augment": [127, 174, 177, 178, 180], "augmentedassign": 89, "august": [45, 130], "auli": 179, "auroru": 168, "australia": [11, 13, 147, 191], "australian": 145, "austrian": 130, "auth": [140, 144], "authent": [137, 138], "author": [116, 117, 130, 133, 140, 179], "authorit": 140, "authors_str": 140, "authors_tone_descript": 140, "auto": [117, 139, 143, 168, 169, 174, 175, 176, 178, 179, 180, 181, 182], "auto_transform": 177, "autogener": [116, 117], "autogpt": 117, "autograd": 172, "autom": [0, 24, 47, 48, 117, 118, 132, 137, 138, 139, 141], "automat": [0, 7, 34, 35, 38, 51, 80, 90, 93, 101, 102, 106, 116, 118, 129, 132, 137, 138, 141, 157, 172, 173, 175, 177, 179, 180, 187, 188, 191, 193], "automatic_transform": 178, "automobil": 157, "automobile_data": [157, 158, 169], "automobile_data1": 169, "autonom": [117, 140], "autonotebook": 134, "autopct": [147, 148], "autopep8": 118, "autoregress": 200, "autoreload": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "autumn": [45, 74, 116, 186, 192], "autumn_r": 192, "ava": 68, "avail": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 51, 52, 53, 54, 56, 68, 80, 82, 84, 87, 89, 91, 92, 94, 96, 103, 104, 116, 117, 118, 130, 132, 133, 141, 145, 153, 157, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 191, 197, 198, 200, 201, 202], "availalbl": 172, "avalanch": 130, "avalugg": 168, "averag": [1, 4, 47, 53, 74, 117, 130, 133, 140, 145, 148, 157, 158, 174, 175, 176, 177, 178, 180, 181, 182, 191, 196, 200, 202], "averaged_perceptron_tagg": 136, "avg": 168, "avgpool": 177, "avgpool2d": 174, "aviat": 135, "avocado": 95, "avoid": [36, 45, 46, 49, 56, 57, 68, 78, 83, 93, 101, 118, 130, 133, 145, 151, 161, 171, 174, 179, 191, 200], "avov": [191, 192], "aw": [116, 130, 137, 138, 171, 180], "awai": [11, 12, 13, 14, 15, 16, 17, 24, 39, 90, 130, 145, 174, 178, 182, 187, 190, 191, 196, 198], "await": [88, 180, 188], "awar": [18, 19, 68, 130, 133, 139, 145, 171, 172, 174, 179, 180, 191, 195], "award": 200, "awesom": [24, 116, 117, 129, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 192], "awhil": 90, "awk": 24, "ax": [8, 11, 14, 15, 25, 30, 107, 111, 130, 161, 164, 171, 174, 175, 179, 180, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "ax1": [201, 203], "ax2": 201, "ax4": 201, "ax5": 201, "ax6": 201, "ax_joint": 191, "axarr": 148, "axes_styl": [187, 198], "axessubplot": [186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 200, 203], "axew": 168, "axhlin": 202, "axi": [11, 14, 15, 16, 17, 18, 19, 27, 30, 39, 130, 132, 147, 148, 150, 151, 153, 154, 157, 163, 168, 171, 174, 175, 177, 179, 180, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202], "axiomat": 130, "axis_nam": 161, "axisgrid": [188, 190, 191, 192, 193, 196, 199, 200, 201, 202], "axz": 39, "ax\u00b2": 74, "az": 186, "azelf": 168, "azumaril": 168, "azur": [171, 180], "azuril": 168, "b": [11, 30, 37, 45, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 65, 68, 69, 71, 74, 75, 76, 77, 80, 81, 82, 84, 90, 91, 92, 94, 95, 96, 102, 103, 104, 106, 118, 128, 133, 137, 138, 141, 147, 150, 151, 152, 153, 157, 158, 160, 161, 162, 163, 164, 167, 171, 172, 179, 180, 186, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "b1": 104, "b2": 104, "b2b": [117, 141, 145], "b312893cfb9a": 55, "b334ef": 80, "b3ac65e67ae9": 75, "b4c816180ad9": 94, "b712": 133, "b72af0bfcd83": 53, "b8ab82a1062c": 77, "b8eab4452d4b": 102, "b902": 130, "b942612e6b6a": 53, "b951d4fef2c8": 71, "b977fb738e16": 101, "b_0": 27, "b_n": 27, "ba": 179, "baat": 140, "baby_back_rib": 180, "babyagi": 117, "babydog": 103, "bac": 39, "back": [8, 52, 69, 77, 94, 98, 104, 115, 116, 117, 118, 128, 130, 132, 133, 135, 137, 138, 139, 140, 141, 143, 144, 150, 157, 161, 164, 165, 166, 167, 168, 172, 174, 175, 178, 179, 180, 188, 195, 196, 197, 198, 199, 200], "back_end": 53, "backbon": [177, 178, 179], "backend": [171, 187, 190, 202], "background": [35, 116, 144, 172, 179, 187, 189, 191, 197, 198, 200], "backlash": 39, "backlog": 141, "backoff": [137, 138], "backpropag": [18, 19, 172, 173], "backquot": 132, "backslash": [52, 69, 89, 91], "backspac": 52, "backtick": 132, "backward": [38, 48, 52, 69, 92, 106, 118, 172, 173, 174, 175, 176, 177, 180, 181, 182, 197], "bacon": 131, "bad": [71, 130, 132, 133, 137, 140, 143, 145, 157, 172, 174, 177, 180, 196], "bad_char": 118, "bad_str": 116, "badg": 118, "badli": 130, "baevski": 179, "bag": [17, 19, 90, 174], "bagon": 168, "bai": 145, "baidu": [77, 90], "baklava": 180, "balanc": [130, 133, 144, 173, 177], "bald": 130, "ball": [47, 55, 91, 129], "baltoi": 168, "ban": 130, "banafato": 118, "banana": [39, 45, 47, 53, 56, 71, 91, 92, 94, 95, 117, 159], "band": [116, 117, 130, 200], "bandwidth": [193, 197, 200], "banett": 168, "banettemega": 168, "bang": 171, "bangladesh": [68, 191], "bank": [117, 128, 130, 180, 195], "baptisteri": 130, "bar": [39, 53, 55, 76, 139, 174, 175, 188, 194, 195, 196, 197, 199, 200, 202, 205], "bar1": 198, "bar2": 198, "bar3": 198, "barack": 68, "barbaracl": 168, "barboach": 168, "barcelona": 147, "barchart": 147, "bare": [130, 173, 210], "barebon": 174, "bargain": 130, "barh": 174, "bark": 103, "barn": 40, "barplot": [187, 194, 198, 199], "barrier": 140, "basculin": 168, "base": [0, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 19, 24, 27, 31, 32, 47, 48, 49, 51, 52, 57, 59, 60, 61, 65, 70, 71, 72, 78, 80, 82, 83, 93, 94, 95, 98, 101, 102, 103, 106, 109, 115, 116, 117, 118, 128, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 154, 157, 158, 160, 161, 168, 169, 171, 172, 173, 174, 175, 176, 179, 180, 189, 191, 192, 197, 198, 200, 202, 203, 206, 207], "base1": 103, "base2": 103, "base_compressor": 133, "base_retriev": 133, "baseclass": [101, 103], "baseexcept": [128, 130], "basel": 29, "baselin": [179, 198], "basement": 130, "basemodel": [116, 137], "basesslerror": 128, "baseto": 80, "basi": [24, 52, 53, 143, 177, 179, 190, 192, 193, 194, 196], "basic": [23, 28, 29, 32, 37, 38, 39, 49, 51, 65, 72, 76, 80, 101, 116, 118, 130, 134, 135, 143, 153, 157, 172, 173, 175, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210], "basicconfig": 133, "basicli": 54, "basicmethod": 89, "basil": 116, "basin": 130, "basketbal": 133, "bastiodon": 168, "bat": 103, "batch": [130, 135, 141, 175, 176, 177, 178, 179, 180, 181, 182], "batch_first": 179, "batch_messag": 131, "batch_siz": [174, 175, 176, 177, 178, 179, 180, 181, 182], "batchmat": 130, "batchnorm2d": 177, "bath": 130, "bathingsoap": 148, "bathingsoapsalesdata": 148, "bathroom": 171, "battl": 52, "bayleef": 168, "baz": 53, "bb": 39, "bb99b9cebaa8": 55, "bbb1": 133, "bbox_inch": 30, "bc9e07fcbe69": 56, "bcaaeab6bf17": 93, "bce": 132, "bceloss": [172, 173], "bcelosswithlogit": 173, "bcewithlogitsloss": 173, "beach": [116, 180], "beak": 47, "bear": [44, 119, 130], "bearabl": 130, "beartic": 168, "beat": 180, "beaten": 116, "beauti": [39, 87, 130, 140, 144, 145, 175, 178, 179, 180, 186, 200], "beautifi": 68, "beautifli": 168, "beautifulli": [130, 180, 195], "beautifulsoup": [24, 137, 138, 144], "becam": [116, 117, 130], "becasu": 88, "becauas": 134, "becaus": [7, 24, 27, 35, 37, 47, 48, 49, 52, 60, 70, 71, 74, 75, 76, 77, 79, 87, 88, 89, 90, 91, 92, 93, 95, 101, 102, 103, 106, 116, 117, 127, 130, 132, 133, 136, 138, 139, 140, 143, 144, 145, 158, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "becom": [35, 38, 47, 48, 52, 75, 106, 116, 117, 130, 133, 136, 140, 157, 158, 159, 172, 173, 180, 200], "becuas": 140, "bed": 130, "bedroom": [0, 130, 171], "bee": 194, "beedril": 168, "beedrillmega": 168, "beef_carpaccio": 180, "beef_tartar": 180, "been": [3, 7, 14, 15, 16, 17, 18, 19, 39, 49, 52, 53, 54, 55, 56, 68, 70, 71, 84, 90, 102, 106, 115, 116, 117, 130, 132, 133, 134, 136, 139, 142, 143, 155, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 188, 189, 190, 191, 194, 195, 197, 199, 200, 201, 202], "beeswarm": [194, 195], "beet_salad": 180, "befor": [0, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 40, 47, 48, 51, 57, 59, 65, 66, 69, 71, 75, 76, 77, 79, 84, 93, 98, 102, 103, 106, 117, 118, 130, 131, 133, 140, 141, 144, 145, 154, 157, 158, 159, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 186, 188, 189, 190, 191, 192, 196, 197, 198, 200, 201, 202, 210], "beforehand": 48, "began": 202, "begin": [25, 27, 28, 29, 31, 32, 38, 47, 52, 53, 54, 65, 68, 80, 84, 89, 90, 102, 104, 106, 107, 111, 116, 117, 128, 130, 133, 143, 144, 166, 167, 168, 171, 173, 174, 175, 177, 178, 179, 180, 186, 187, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 202], "beginn": [22, 87, 98, 180, 190, 196, 197, 210], "begun": [130, 133], "behav": [68, 91, 104, 106, 118, 153], "behavior": [0, 27, 51, 84, 101, 102, 103, 106, 118, 162, 166, 167, 171, 177, 190], "behaviour": [27, 95], "beheeyem": 168, "behind": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 78, 79, 117, 140, 145, 171, 172, 174, 175, 178, 179, 194, 197, 199, 202], "behnel": 118, "behold": 130, "beignet": 180, "being": [0, 7, 14, 15, 18, 19, 24, 27, 38, 39, 48, 53, 55, 56, 74, 77, 92, 101, 103, 108, 112, 117, 129, 130, 132, 133, 136, 140, 143, 144, 145, 171, 172, 173, 174, 175, 177, 178, 179, 180, 187, 190, 191, 192, 194, 196, 198, 200, 201], "bel": [117, 130], "beldum": 168, "belgium": [117, 147, 191], "belief": 130, "believ": [130, 132, 133, 138, 141, 143, 195, 200], "bell": [52, 116], "bella": [47, 101, 102, 106], "belli": 130, "bellossom": 168, "bellsprout": 168, "belong": [3, 10, 51, 91, 92, 101, 102, 130, 173, 179], "belov": 130, "below": [3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 35, 37, 38, 43, 44, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 77, 78, 80, 83, 84, 87, 88, 90, 91, 92, 94, 95, 101, 103, 104, 116, 117, 130, 132, 133, 134, 137, 138, 140, 141, 143, 144, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 180, 187, 191, 193, 201, 202, 203], "ben": 101, "bench": 130, "benchmark": [9, 17, 19, 118, 173, 175, 177, 179, 180], "bend": [130, 190], "beneath": 130, "benedictevan": 140, "benefici": [90, 132, 160, 177], "benefit": [52, 80, 103, 118, 137, 138, 173, 174, 175, 176, 177, 179, 180, 181, 182], "benevol": 117, "bengaluru": 137, "benignli": 130, "benjamin": 118, "bent": 130, "benz": 169, "beret": 178, "bergman": 116, "bergmit": 168, "bergum": 180, "berkelei": 141, "berman": 118, "bert": [179, 209], "bertop": 143, "besid": [116, 117, 130, 133, 140, 150], "best": [0, 1, 4, 24, 35, 37, 47, 49, 52, 53, 68, 85, 98, 116, 117, 130, 133, 134, 135, 136, 137, 138, 140, 141, 142, 144, 145, 148, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 189, 190, 191, 192, 194, 197, 200], "best_match": 117, "best_model": 178, "best_model_path": 178, "bet": [116, 130], "beta": [31, 81, 175, 177, 179, 190], "beta_": 179, "betavari": 81, "betoken": 130, "better": [11, 13, 36, 39, 42, 47, 48, 66, 84, 89, 98, 103, 104, 106, 116, 118, 130, 132, 133, 134, 137, 138, 139, 140, 144, 145, 147, 148, 157, 171, 172, 173, 175, 177, 178, 179, 180, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 209], "betw": 11, "between": [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 19, 29, 37, 39, 47, 48, 49, 51, 52, 53, 54, 56, 64, 68, 78, 80, 81, 84, 94, 95, 102, 106, 116, 117, 119, 130, 133, 135, 138, 140, 142, 143, 144, 145, 153, 154, 157, 171, 172, 173, 174, 176, 177, 178, 179, 180, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 200, 201, 202, 203], "beverag": 54, "bewar": [175, 178, 179], "beyond": [173, 196, 200], "bfa": 130, "bfc5aa62a0ff": 95, "bfee": 133, "bfoo": 39, "bia": [7, 140, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 209], "bias": [172, 178], "bibarel": 168, "bibimbap": 180, "bibl": 188, "bicub": [177, 178, 180], "bidirect": 179, "bidoof": 168, "big": [11, 12, 13, 116, 117, 130, 133, 140, 142, 143, 144, 145, 172, 174, 175, 177, 178, 179, 181, 200, 201, 202, 209, 210], "bigger": [4, 7, 8, 10, 16, 17, 18, 19, 38, 44, 56, 94, 132, 140, 152, 178, 179, 180, 192, 194, 201], "biggest": [130, 133, 140, 151, 174, 175, 177, 178, 179, 180, 187], "biggr": 27, "bilinear": [175, 178, 179, 181, 182], "bill": [37, 47, 52, 57, 74, 77, 130, 140, 190, 191, 194, 195, 196, 197, 200, 202], "billgat": 140, "billion": 171, "billionair": 130, "bin": [69, 84, 95, 136, 147, 171, 180, 188, 191, 193, 197, 198, 202], "binacl": 168, "binari": [5, 14, 15, 16, 17, 51, 52, 68, 84, 89, 91, 94, 95, 98, 118, 172, 173, 174, 192], "binary_r": 192, "binary_sum": 84, "bind": [96, 102, 195], "binder": 24, "binomi": 191, "biographi": 116, "biolog": [7, 18, 19], "biologi": [117, 140], "bird": [55, 101, 103, 116, 130], "birth": [39, 130, 191], "birth_year": [74, 77, 90], "birthdai": 74, "bisharp": 168, "bit": [4, 5, 8, 10, 16, 17, 18, 19, 24, 54, 81, 95, 98, 116, 130, 131, 132, 133, 137, 138, 139, 143, 144, 145, 171, 172, 173, 175, 177, 178, 179, 180, 188, 192, 203], "bitter": [177, 178], "bitwis": [89, 104], "bivarait": 191, "bivari": [193, 199, 202], "bizarr": 130, "bject": 68, "blab": 143, "black": [7, 10, 116, 186, 194, 195, 198], "blackwel": 130, "blah": 118, "blank": [84, 144], "blastois": 168, "blastoisemega": 168, "blaziken": 168, "blazikenmega": 168, "bleakest": 130, "blend": 202, "blind": 189, "blissei": 168, "blister": 130, "blitzl": 168, "blob": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 173, 180, 201], "blobmodel": 173, "block": [6, 42, 43, 44, 45, 46, 47, 48, 49, 68, 71, 74, 89, 101, 109, 130, 132, 144, 157, 171, 172, 175, 180, 193, 200, 203, 207], "block_1": [174, 181, 182], "block_2": [174, 181, 182], "blog": [64, 106, 141, 143, 144, 176, 178, 179, 180], "blood": [103, 130, 200], "blood_pressur": 200, "bloom": 130, "bloomberg": 141, "blow": 130, "blown": 130, "blu": 101, "blue": [47, 89, 117, 130, 138, 147, 171, 172, 174, 178, 180, 189, 190, 192, 195, 203], "blueprint": [101, 102, 106], "blues_r": 192, "blurt": [130, 133], "bm25": 133, "bm25_retriev": 133, "bm25retriev": 133, "bmatrix": [28, 29, 31, 32], "bmv": 169, "bmw": [103, 138, 169], "board": [137, 138], "board_token": [137, 138], "boat": 130, "bob": [90, 117, 138], "bobbi": 138, "bodi": [34, 43, 44, 45, 46, 47, 48, 49, 74, 75, 79, 89, 101, 103, 117, 128, 132, 157, 158, 168, 169, 179, 186], "body_camera": 186, "body_plain": 128, "body_po": 128, "bog": 179, "bogot\u00e1": 117, "boi": 130, "boil": 116, "bokeh": 191, "bold": [130, 147, 179, 197, 198, 200, 202], "bolder": 202, "boldor": 168, "bolt": 143, "bonafid": 117, "bonapart": 132, "bond": [52, 94, 130], "bone": 192, "bone_r": 192, "bonefi": [137, 138], "bonsli": 168, "bonu": [138, 145, 180, 198], "book": [6, 20, 25, 90, 104, 107, 108, 109, 111, 112, 116, 117, 122, 130, 133, 140, 143, 146, 180, 184, 189, 198, 206, 207], "bookmark": 199, "bool": [102, 103, 174, 175, 178], "bool_a": 152, "bool_idx": 152, "boolean": [16, 17, 18, 19, 37, 45, 52, 80, 89, 102, 139, 150, 151, 157, 161, 162, 163, 164, 166, 167], "boom": 130, "boost": [54, 174], "booster": 188, "boot": [17, 19, 138, 174], "boot_trac": 200, "bootstrap": [144, 198, 200], "boottel": 69, "border": 117, "bore": [49, 130, 133, 180], "born": [39, 71, 116, 179], "borrow": 106, "boss": [119, 130], "boston": [116, 117, 130, 139], "bot": [32, 116, 117, 122, 137, 140, 144, 145, 146], "both": [16, 17, 18, 19, 35, 37, 39, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57, 59, 65, 68, 69, 71, 75, 76, 80, 89, 91, 95, 96, 101, 103, 106, 108, 112, 116, 117, 118, 130, 133, 136, 144, 153, 157, 158, 159, 161, 164, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 190, 191, 195, 197, 198, 202], "bother": [130, 179, 188, 190], "bottl": [52, 133], "bottleneck": [141, 174, 178], "bottom": [16, 17, 18, 19, 24, 116, 130, 137, 138, 152, 157, 173, 174, 180, 188, 196, 198, 200], "bottom_plot": 198, "bottombar": 198, "bottomrow": 160, "bouffal": 168, "bought": [130, 133, 175], "bounc": 130, "bound": [28, 29, 36, 37, 70, 81, 98, 102, 130, 157, 172, 195], "boundari": [5, 9, 173], "bowl": 116, "bowlder": 130, "box": [108, 112, 116, 117, 137, 138, 143, 197, 198, 199, 200, 202, 205], "boxen": 200, "boxenplot": 200, "boxplot": [147, 187, 189, 194, 195, 196, 197, 200, 202], "boxprop": [147, 194], "boyc": 117, "bp": 147, "br": [137, 138], "bra": 117, "brace": [52, 55, 56, 89, 92, 94, 130], "bracket": [35, 43, 47, 48, 52, 53, 54, 55, 57, 89, 91, 92, 135, 151, 152, 171], "braden": 128, "brain": [7, 18, 19, 130, 140, 201], "braixen": 168, "branch": [118, 130], "brand": [133, 138, 145, 202], "bratwurst": 131, "brave": 117, "braviari": 168, "brazil": [68, 147], "brbg": 192, "brbg_r": 192, "bre": 117, "bread": [52, 135, 180], "bread_pud": 180, "break": [7, 22, 34, 42, 50, 71, 72, 74, 80, 88, 89, 91, 94, 116, 118, 128, 130, 140, 172, 173, 174, 175, 178, 179, 180, 201, 202], "breakdown": [180, 183, 184, 194], "breakeven": 130, "breakfast_burrito": 180, "breakthrough": 140, "breathless": 130, "breed": 55, "breez": 196, "breloom": 168, "breviti": [152, 178, 179], "brew": 189, "brewer": 189, "brex": 144, "brg": 192, "brg_r": 192, "brian": 118, "brick": 179, "bridg": [130, 179, 180], "brief": [27, 28, 29, 65, 68, 81, 82, 102, 141, 143, 154], "briefli": [130, 131, 189], "bright": [130, 189], "brighten": 130, "brighter": 140, "brilliant": [52, 133], "bring": [52, 68, 116, 117, 129, 130, 133, 134, 140, 144, 171, 174, 179, 190, 192, 196, 198, 202], "british": 130, "broad": 179, "broader": [195, 200], "broadli": 70, "brochur": 145, "brock": 186, "broke": 130, "broken": [38, 78, 130, 136], "bronzong": 168, "bronzor": 168, "brooklyn": 195, "broswer": 180, "broth": 131, "brother": [101, 116, 138], "brought": 130, "brown": [116, 138, 186, 189], "brows": 117, "browser": [24, 130, 180, 189], "brrrr": [175, 179], "bruce": 77, "brush": 130, "bruyn": 147, "brv": 132, "bs4": [137, 138, 144], "bsd": [157, 168, 169], "btw": [116, 150], "bu": 171, "bubbl": 130, "buchheit": 132, "buck": 186, "bucket": 189, "bud": 136, "budew": 168, "budget": 130, "bue": 203, "buffer": [68, 128], "bug": [118, 128, 130, 133, 168], "bugn": 192, "bugn_d": 198, "bugn_r": 192, "bui": [130, 133], "build": [8, 11, 13, 14, 15, 24, 35, 38, 39, 101, 102, 108, 112, 116, 117, 118, 129, 130, 131, 132, 133, 136, 137, 138, 141, 143, 144, 145, 157, 171, 177, 179, 187, 193, 195, 209], "builder": 130, "built": [6, 24, 34, 36, 38, 47, 49, 51, 57, 68, 71, 72, 74, 79, 84, 85, 87, 89, 90, 94, 96, 101, 103, 104, 109, 117, 118, 129, 130, 141, 143, 145, 148, 157, 161, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 207], "builtin": [24, 84, 171], "builtwith": [137, 138], "buizel": 168, "bulbasaur": 168, "bulk": [143, 194], "bulldoz": 130, "bullet": [132, 143, 144, 145, 175], "bullet_point": 145, "bullshit": 134, "bump": 118, "bunch": [0, 52, 116, 117, 130, 133, 140, 144, 171, 172, 173, 174, 175, 177, 178, 180, 188], "buneari": 168, "bunnelbi": 168, "bupu": 192, "bupu_r": 192, "bureaucrat": 130, "burger": 137, "buri": 130, "burkov": 118, "burlington": 186, "burmi": 168, "burn": [130, 140], "burndown": 141, "bush": 130, "busi": [0, 24, 117, 130, 133, 140, 141, 143, 144, 145, 157, 190, 195, 198], "bussi": 24, "butter": [52, 131], "butterfre": 168, "button": [118, 130, 145], "buyer": 130, "bw": [197, 199], "bwmeq": 80, "bwr": [192, 199], "bwr_r": 192, "bx": [74, 191], "bye": 145, "bylaw": 130, "byo": 117, "bypass": 49, "byte": [68, 69, 157, 178, 179, 180], "bytetensor": 175, "c": [8, 10, 22, 24, 29, 37, 38, 39, 45, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 68, 69, 70, 71, 74, 79, 80, 82, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 106, 118, 130, 132, 136, 140, 147, 148, 151, 152, 153, 154, 157, 161, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 178, 179, 180, 186, 189, 191, 193, 194, 195, 196, 198, 203], "c0": [188, 189], "c00e5d7d3c3": 70, "c014293b63c7478c": 116, "c02acf54079b": 169, "c1": [102, 103, 189], "c2": 189, "c3": 189, "c3f637926d7e": 68, "c4": 189, "c454c1331524": 72, "c5": 189, "c6": 189, "c7": 189, "c761920b81b0": 71, "c8": 189, "c8f749f7a9ca": 169, "c9": 189, "c92d9f2b36de": 92, "c_name": 103, "ca": [39, 116, 117, 139, 141, 186], "cab": [39, 200], "cabbag": 71, "cabin": 130, "cabxz": 39, "cach": [116, 118, 180, 195], "cacnea": 168, "cacturn": 168, "cacul": [172, 173], "cad": 24, "cadenc": [137, 138], "caffein": 133, "cake": [130, 180], "calcuat": 173, "calcul": [4, 7, 8, 11, 13, 27, 32, 43, 47, 49, 51, 64, 74, 82, 89, 90, 94, 95, 101, 103, 106, 119, 130, 157, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 187, 189, 191, 193, 194, 195, 197, 198, 200], "calcula": 23, "calculate_ag": [74, 77], "calculate_area": 101, "calculate_mean": 74, "calculate_median": 74, "calculate_mod": 74, "calculate_rang": 74, "calculate_slop": 74, "calculate_std": 74, "calculate_vari": 74, "calculu": [130, 209], "calculus_fourierseries__util": 27, "calendar": [128, 141, 200], "califonya": 116, "california": [116, 130], "californian": 130, "call": [1, 7, 8, 18, 19, 20, 24, 34, 35, 36, 37, 38, 39, 40, 42, 46, 47, 48, 52, 53, 54, 55, 56, 57, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 108, 112, 117, 118, 122, 128, 130, 132, 134, 135, 136, 140, 141, 143, 146, 152, 159, 160, 161, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 187, 189, 195, 197, 198, 200, 201, 202, 203], "callabl": [34, 37, 55, 80, 164, 195, 197], "callablemethod": 89, "callback": [37, 131, 137, 138], "callback_manag": [128, 130, 131], "callbackmanag": 131, "caller": 35, "calm": 130, "calul": 172, "cambridg": [130, 197], "came": [117, 130, 134, 139, 175, 177], "camelcas": 90, "camera": [130, 174, 186], "camerupt": 168, "cameruptmega": 168, "can": [0, 4, 6, 7, 11, 13, 18, 19, 22, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 109, 111, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 174, 175, 178, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 210], "canada": [11, 13, 117, 147], "canadian": 117, "canb": 30, "canberra_dist": 30, "cancellederror": 130, "cancer": 130, "candi": [102, 130], "candid": [118, 180], "canidaefamili": 103, "cannon": 95, "cannot": [35, 37, 38, 40, 47, 49, 51, 52, 54, 55, 56, 61, 68, 70, 71, 75, 76, 77, 79, 80, 88, 90, 91, 92, 93, 94, 95, 98, 101, 106, 154, 158, 161, 163, 171, 175, 186, 192, 198], "canon": [24, 130], "canva": 130, "canvas": 130, "cap": [171, 175, 198], "capabl": [0, 39, 116, 139, 171, 172, 173, 174, 175, 177, 179, 180, 202], "capac": [140, 173, 180], "caper": 130, "capit": [30, 37, 52, 74, 80, 90, 116, 117, 130, 133, 143], "capita": [11, 13], "capital_c": 90, "capitalinfo": 117, "capitalis": 52, "capitalist": 133, "capitalize_list_item": 74, "capres": 116, "capsiz": 198, "captial": 52, "caption": 174, "captur": [71, 81, 95, 138, 179, 182], "capword": [80, 90], "car": [0, 7, 102, 103, 116, 117, 130, 138, 157, 158, 171, 174, 177, 179, 180, 186], "car_horsepow": 169, "car_info": 103, "car_manufactur": 169, "car_park": 171, "car_pric": 169, "caramel": 131, "carbink": 168, "carbonara": 116, "card": [117, 130, 173], "care": [34, 68, 130, 132, 133, 135, 138, 140, 153, 157, 171, 175, 178, 179, 190, 191, 200, 203], "career": [0, 137, 138, 141, 143], "carefulli": 49, "carlo": 118, "carnegi": [7, 130], "carnivin": 168, "carolin": 116, "carpricedf": 169, "carracosta": 168, "carri": [51, 56, 95, 104, 117, 130, 133, 167], "carriag": 52, "carrot": [71, 131, 180], "cars_schema": 138, "carsdf": 169, "carsdf1": 169, "carsdf2": 169, "carshorsepowerdf": 169, "carson": [77, 130], "cart": 130, "carter": [101, 140], "cartesian": 11, "cartoon": 130, "carvanha": 168, "cascoon": 168, "case": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 36, 37, 39, 42, 43, 44, 47, 49, 51, 52, 55, 56, 66, 70, 71, 80, 88, 89, 90, 91, 94, 95, 96, 98, 101, 103, 106, 116, 118, 119, 122, 130, 132, 133, 135, 136, 137, 138, 141, 144, 145, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 179, 180, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 209], "cash": [117, 144], "cast": [130, 151], "castform": 168, "cat": [7, 47, 91, 92, 106, 173, 174, 179, 192], "cat1": 106, "cat2": 106, "cat_po": 195, "catalyz": 140, "catbackward0": 179, "catch": [42, 72, 118, 130, 138, 197, 202], "cateat": 147, "categor": [0, 5, 14, 15, 16, 17, 80, 143, 157, 158, 186, 189, 190, 193, 196, 197, 198, 199, 200, 201, 202, 205], "categori": [10, 14, 15, 17, 19, 42, 51, 70, 92, 116, 132, 137, 139, 143, 168, 173, 180, 186, 189, 192, 194, 198, 201], "categoricalindex": 157, "categorize_countri": 37, "category_point": [190, 192], "caterpi": 168, "cathi": 47, "catplot": 200, "caught": [34, 49, 71], "caus": [37, 38, 49, 56, 68, 70, 71, 72, 87, 130, 133, 173, 175, 180], "caution": 143, "cautiou": 202, "cayenn": 131, "cb": [137, 138], "cb8ac02fbcd3": 70, "cbar": 203, "cbook": 195, "cca2": 117, "cca3": 117, "ccn3": 117, "cd": [80, 119, 180], "cde": 39, "cdn": 147, "cdot": [27, 28, 29, 31, 32, 171, 173, 179], "cdotp": 30, "ce": [117, 143], "ceil": [16, 17, 18, 19, 80, 82, 130, 155], "ceil_mod": [174, 175, 181, 182], "celebi": 168, "celebr": [137, 138], "celeri": 131, "cell": [16, 17, 18, 19, 24, 36, 75, 117, 171, 172, 174, 175, 178, 179, 180, 183, 187, 203], "cell_cont": 36, "celsiu": [38, 116, 139], "center": [27, 52, 71, 94, 130, 132, 138, 140, 154, 173, 179, 188, 193, 196, 197, 198, 201], "centimet": [9, 10, 14], "centimetr": 186, "centr": 190, "central": [101, 140, 174, 186, 190, 194, 196, 197, 198, 200], "centric": 144, "centroid": [3, 10, 132], "centroid_id": 10, "centuri": [60, 61, 116, 130], "ceo": [127, 130, 133, 143, 145], "cert": 128, "certain": [1, 11, 12, 13, 14, 15, 16, 17, 31, 39, 42, 49, 52, 53, 54, 61, 63, 70, 71, 80, 85, 90, 119, 130, 139, 157, 171, 173, 174, 175, 177, 178, 180, 187, 196], "certainli": [90, 130, 179, 180, 188, 191, 194, 197, 198, 200, 201], "certainti": 130, "cezann": 130, "ch": [47, 57], "chaang": 168, "chain": [45, 90, 95, 103, 117, 122, 127, 128, 130, 132, 133, 134, 136, 137, 138, 141, 143, 144, 145, 158, 161, 162, 167], "chain_new": 117, "chain_typ": [116, 117, 130, 132, 134, 136, 141, 143, 144, 145], "chain_type_kwarg": 143, "chair": 130, "chairman": 200, "challeng": [52, 102, 140, 144, 174, 178, 179, 180, 201], "champion": 145, "chan": 118, "chanc": [130, 140, 171, 172, 173, 174, 175, 178, 179, 182], "chandelur": 168, "chandler": 186, "chang": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 37, 43, 47, 48, 51, 56, 57, 64, 70, 71, 74, 75, 76, 77, 80, 92, 93, 94, 98, 101, 102, 103, 104, 116, 117, 118, 130, 132, 133, 137, 138, 139, 140, 147, 151, 152, 154, 157, 160, 161, 162, 163, 164, 166, 172, 173, 174, 175, 176, 179, 180, 181, 182, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "changabl": 180, "change_to_upp": 37, "changelog": 173, "channel": [128, 130, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182], "chansei": 168, "chaotic": 130, "chapter": [52, 140, 176, 177, 178, 179, 180], "char": [35, 47, 91, 118], "charact": [24, 37, 42, 47, 48, 49, 60, 61, 68, 80, 87, 89, 90, 92, 94, 117, 118, 129, 130, 132, 134, 140, 143, 164, 187], "character": 140, "characterist": [0, 5, 7, 56, 101, 168, 169, 180, 200], "charactertextsplitt": 117, "charcter": 52, "charg": [130, 180], "charizard": 168, "charizardmega": 168, "charm": [116, 130], "charmand": 168, "charmeleon": 168, "chart": [141, 198, 200, 201], "chase": [130, 133, 186], "chat": [117, 122, 129, 130, 137, 138, 139, 140, 143, 144, 145], "chat_histori": 117, "chat_model": [116, 117, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145], "chat_prompt": [129, 131, 143, 145], "chat_prompt_combin": [143, 145], "chat_prompt_map": [143, 145], "chat_prompt_with_valu": 131, "chatbas": 117, "chatbot": [139, 141], "chatcomplet": 139, "chatgener": 131, "chatgpt": [116, 122, 132, 139, 143], "chatmessag": [131, 139], "chatmessagehistori": 116, "chatopenai": [116, 117, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 144, 145], "chatot": 168, "chatpdf": 117, "chatprompttempl": [116, 117, 129, 131, 135, 143, 145], "chdir": 80, "che": [39, 117], "cheap": [116, 130, 133], "cheaper": [137, 138], "cheapli": 130, "cheat": [149, 156, 170, 172], "cheatham": 130, "cheatsheet": 172, "cheb": 30, "chebyshev_dist": 30, "check": [11, 13, 14, 15, 16, 17, 18, 19, 25, 35, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 68, 71, 74, 76, 80, 90, 92, 95, 101, 102, 103, 107, 111, 116, 117, 118, 129, 130, 132, 133, 134, 137, 138, 140, 143, 144, 145, 154, 157, 162, 166, 171, 173, 174, 175, 176, 177, 178, 181, 182, 187, 189, 191, 192, 195, 200, 202], "check_for_equival": 118, "check_for_non": 118, "check_latest_vers": [116, 132, 133], "check_season": 74, "check_text_similar": 68, "checkbox": 24, "checkout": [171, 179], "checkpoint": 168, "checkr": 144, "chees": 116, "chef": 178, "chelsea": 202, "chemistri": 140, "cher": 39, "cherbourg": [196, 198], "cherrim": 168, "cherubi": 168, "chesnaught": 168, "chespin": 168, "chess": 143, "chevrolet": 169, "chicago": 117, "chicken": [131, 173, 174], "chikorita": 168, "child": [68, 101, 103, 133, 134, 196], "child_splitt": 133, "childbirth": 140, "childmethod": 103, "children": [130, 134, 140, 143, 198], "chimchar": 168, "chimecho": 168, "china": [37, 53, 54, 57, 68], "chinchou": 168, "chines": [68, 118], "ching": 39, "chingl": 168, "chip": [140, 180], "chirag": 102, "chocol": 180, "choic": [45, 51, 80, 81, 116, 117, 118, 119, 130, 131, 133, 139, 140, 155, 175, 189, 190, 191, 193, 194, 195, 196, 200], "choos": [1, 8, 71, 117, 130, 132, 137, 138, 139, 143, 151, 157, 158, 172, 173, 174, 177, 178, 180, 189, 190, 195, 196, 198, 200, 201, 203], "choose_colorbrewer_palett": 189, "choose_cubehelix_palett": 189, "chop": 116, "chopper": 130, "chore": [118, 130], "chose": [0, 24, 130, 132, 177, 179, 191], "chosen": [81, 130, 178, 195, 202], "chp": 52, "chracter": 94, "chri": 118, "christina": 145, "christma": 134, "chroma": [116, 133, 142], "chromadb": 136, "chronometri": 200, "chunk": [74, 116, 117, 128, 130, 132, 133, 141, 142, 143, 144, 145, 168, 174, 179, 189, 190, 196, 200], "chunk_overlap": [116, 117, 130, 132, 133, 134, 136, 141, 142, 143, 144, 145], "chunk_siz": [116, 117, 130, 132, 133, 134, 136, 141, 142, 143, 144, 145], "chunk_summari": 132, "chunksiz": 168, "church": 130, "churn": 130, "chw": [174, 175], "ci": [118, 171, 190, 192, 198, 199, 200], "ci_band": 200, "ci_bar": 200, "cider": 131, "cinccino": 168, "cioc": 117, "cir": 101, "circl": [74, 82, 90, 95, 101, 130, 148, 178], "circlemodelv0": 173, "circlemodelv1": 173, "circlemodelv2": 173, "circu": 130, "circular": 173, "circum_of_circl": 90, "circumfer": [82, 90, 95], "circumst": [71, 196], "cirqu": 130, "citi": [52, 55, 57, 68, 71, 90, 101, 116, 117, 130, 138, 139, 143, 147, 158, 161, 186, 195], "citizen": [36, 130], "cividi": [189, 192, 195], "cividis_r": 192, "civil": 130, "cl": [61, 106, 130], "cl100k_base": 144, "claim": [130, 132, 186], "clamperl": 168, "clara": 130, "clarifi": [39, 71, 96, 118, 138, 143, 187], "clariti": [132, 137, 138, 143, 179], "clark": [37, 74, 77, 94], "clasess": 15, "class": [9, 10, 14, 15, 16, 17, 18, 19, 24, 34, 35, 36, 40, 48, 49, 51, 60, 61, 62, 63, 69, 75, 76, 78, 79, 83, 85, 88, 89, 92, 93, 94, 96, 98, 104, 106, 116, 117, 118, 127, 130, 133, 135, 137, 138, 150, 151, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 171, 172, 174, 176, 177, 178, 181, 182, 190, 194, 196, 197, 198, 200, 201, 202, 203], "class1": 103, "class2": 103, "class_1": 175, "class_2": 175, "class_dict": [175, 181, 182], "class_embed": 179, "class_idx": 175, "class_nam": [174, 175, 176, 177, 178, 179, 181, 182], "class_names_found": 175, "class_suit": 101, "class_to_idx": [175, 181, 182], "class_token": 179, "class_token_embedding_expand": 179, "class_token_embedding_singl": 179, "class_token_posit": 179, "classic": [116, 131, 143, 175, 210], "classif": [0, 10, 140, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 185, 201, 209], "classifi": [0, 5, 10, 14, 15, 16, 17, 18, 19, 70, 118, 173, 174, 175, 176, 177, 179, 180, 181, 182, 198], "classification_report": 173, "classifici": 173, "classinfo": 103, "classmethod": [59, 64], "classnam": [101, 175], "classon": 101, "classtwo": 101, "clauncher": 168, "claus": 147, "clawitz": 168, "claydol": 168, "clayton": 77, "clean": [0, 39, 68, 71, 78, 83, 89, 117, 118, 122, 130, 135, 136, 137, 138, 139, 144, 145, 162, 163, 181, 209, 210], "clean_text": [39, 68], "cleaned_text": 39, "cleaner": [35, 118, 153], "cleans": 200, "cleanup": 118, "clear": [14, 15, 35, 56, 83, 106, 130, 133, 140, 174, 178, 188, 198], "clearer": [72, 89, 188, 202], "clearest": 130, "clearli": [38, 130, 171], "clefabl": 168, "clefairi": 168, "cleffa": 168, "clever": [130, 139], "clich": 39, "click": [24, 130, 174, 180, 210], "client": [128, 130, 201], "climat": 140, "climax": 140, "climb": 130, "clip": 179, "clipboard": 157, "cllose": 190, "clni": 30, "cloak": 168, "clock": [60, 61, 200], "clone": [119, 130, 177, 178, 179, 180], "close": [4, 36, 70, 71, 84, 98, 103, 117, 118, 128, 130, 132, 134, 135, 136, 139, 140, 144, 145, 157, 172, 173, 174, 175, 178, 179, 180, 188, 191, 194, 195, 197, 198, 199, 200, 201], "closer": [34, 93, 106, 130, 133, 172, 173, 175, 191], "closest": [130, 132, 135, 180], "closest_centroids_id": 10, "closest_index": 132, "closest_indic": 132, "closeup": 130, "closur": [22, 41, 130], "closure_result": 36, "clot": 130, "cloth": [5, 7, 17, 19, 133, 174], "cloud": [117, 137, 138, 143, 145, 171, 176, 179, 180, 200], "cloudi": [5, 130], "clove": 116, "cloyster": 168, "cls_name": 175, "club": [130, 133, 147, 202], "clue": 140, "clung": 117, "clunki": 130, "cluster": [0, 3, 132, 173, 196, 197, 201, 203, 205, 209], "cluster_centers_": 132, "cluster_std": 173, "clustergrid": 204, "clustermap": 204, "cm": [10, 14, 25, 107, 111, 173], "cmap": [16, 17, 18, 19, 25, 107, 111, 173, 174, 189, 192, 195, 201, 203, 204], "cmap_cycl": 192, "cmath": 82, "cmd": [87, 178], "cmo": 145, "cmp": [53, 54, 55], "cmrmap": 192, "cmrmap_r": 192, "cmu": 130, "cn": 189, "cnn": [175, 176, 179, 181, 182], "cnt": 47, "co": [27, 32, 51, 80, 82, 96, 117, 140, 141, 144, 145, 150, 153, 177, 180, 186, 202], "coach": 141, "coars": 130, "coast": [130, 133], "coat": [7, 17, 19, 174, 178], "coatofarm": 117, "coats_of_arm": 117, "cobalion": 168, "code": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 57, 59, 65, 68, 69, 71, 74, 75, 77, 78, 79, 80, 83, 84, 85, 88, 89, 90, 91, 94, 95, 101, 103, 106, 109, 116, 118, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 150, 153, 171, 172, 173, 176, 177, 180, 181, 182, 183, 186, 187, 189, 190, 192, 193, 194, 195, 197, 198, 199, 200, 202, 207], "codeblock": 118, "codeobject": 89, "coeffici": [27, 150, 188, 190, 201], "coefici": 27, "coerc": [51, 203], "coercion": 51, "coexist": 191, "cofagrigu": 168, "coffe": [134, 198], "cofig": 118, "cofound": 130, "cognat": 130, "cohen": 118, "coher": 140, "coin": [132, 175], "coinbas": 144, "col": [117, 152, 157, 161, 164, 166, 168, 174, 188, 190, 192, 194, 196, 197, 199, 200, 202], "col1": [157, 158, 159, 161, 162, 165], "col2": [157, 158, 159, 161, 162, 165], "col3": 157, "col_clust": 204, "col_fil": 167, "col_l": 194, "col_label": [157, 159, 161], "col_label1": 166, "col_label2": 166, "col_level": 167, "col_nam": [161, 177, 178, 179, 180, 199], "col_ord": [190, 199, 202], "col_posit": 157, "col_r1": 152, "col_r2": 152, "col_var": 199, "col_width": [177, 178, 179, 180], "col_wrap": [190, 192, 199, 202], "colab": [23, 24, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 210], "cold": [25, 52, 107, 111, 130, 133], "coldest": 130, "coldest_th": 38, "collabor": [0, 128, 130, 141], "collar": 130, "colleagu": [130, 143], "collect": [0, 7, 24, 34, 47, 48, 55, 56, 66, 69, 70, 80, 92, 96, 102, 130, 132, 136, 137, 138, 143, 155, 165, 173, 175, 177, 179, 194, 195, 202], "collection_nam": 133, "collector": [68, 143], "colleg": [101, 116, 130, 132, 133, 143], "collid": [83, 96], "collin": 118, "collison": 130, "colombi": 117, "colombia": 117, "colombian": 117, "colombien": 117, "colombienn": 117, "colon": [43, 52, 53, 54, 55, 70, 74, 130], "coloni": 130, "color": [3, 7, 11, 25, 47, 55, 80, 101, 102, 107, 111, 127, 128, 130, 132, 137, 138, 144, 147, 148, 174, 175, 179, 181, 182, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205], "color_channel": [171, 174, 175, 177, 178, 179, 181, 182], "color_cod": [192, 202], "color_map": [16, 17, 18, 19, 128], "color_palett": [189, 198], "colorbrew": 189, "colormap": [189, 198, 204], "colosseum": 116, "colour": [171, 173, 174, 177, 178, 179, 180, 201, 203], "colour_channel": 171, "column": [8, 12, 14, 15, 16, 17, 18, 19, 31, 47, 57, 68, 116, 117, 147, 150, 151, 152, 153, 154, 168, 171, 174, 177, 179, 180, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204], "column_1": 202, "column_2": 202, "column_current_nam": 164, "column_label": [157, 165], "column_nam": 157, "column_on": 157, "column_posit": 157, "col\u00f4mbia": 117, "com": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 40, 74, 77, 90, 97, 116, 117, 118, 119, 128, 130, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182], "comb": 80, "combe": 168, "combin": [4, 8, 10, 11, 13, 14, 52, 53, 54, 71, 88, 90, 95, 103, 116, 117, 130, 131, 132, 133, 141, 143, 144, 145, 151, 159, 166, 171, 172, 173, 174, 177, 178, 180, 193, 194, 197, 199, 200, 202], "combine_doc": 130, "combine_docu": 130, "combine_prompt": [132, 141, 143, 144, 145], "combine_prompt_templ": [132, 141, 144], "combourieu": 118, "combusken": 168, "come": [24, 35, 38, 48, 49, 51, 52, 57, 71, 74, 85, 87, 96, 104, 106, 116, 117, 127, 130, 132, 133, 136, 139, 140, 144, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 190, 191, 193, 195, 197, 198, 200, 201, 202], "comedi": 136, "comfort": [37, 57, 130, 143, 199], "comic": [130, 147], "comma": [52, 53, 54, 55, 56, 74, 92, 140, 171, 177, 179], "command": [6, 24, 48, 71, 79, 80, 84, 98, 102, 109, 117, 118, 127, 130, 138, 141, 150, 171, 176, 178, 180, 182, 187, 190, 207], "commenc": [199, 202], "comment": [22, 38, 74, 90, 100, 116, 117, 118, 129, 130, 143, 150, 171, 172, 175], "commentari": 172, "commerc": [24, 133], "commerci": [22, 141, 143], "commiss": [141, 200], "commit": [118, 133, 180], "committe": [117, 145], "commod": 130, "common": [1, 7, 8, 28, 37, 53, 56, 59, 64, 68, 70, 80, 101, 102, 106, 116, 117, 118, 127, 130, 132, 136, 137, 138, 143, 144, 152, 157, 159, 172, 173, 174, 175, 176, 177, 179, 180, 187, 189, 190, 194, 196, 198, 200, 201, 202], "commonli": [0, 28, 29, 39, 52, 53, 55, 56, 59, 65, 103, 117, 130, 174, 189, 190, 191, 192, 193, 198, 200], "commonmark": [20, 108, 112], "commun": [116, 117, 130, 132, 135, 140, 141, 171, 179, 180], "communit": 116, "commut": [28, 29], "comonli": 202, "compact": [57, 130], "compani": [52, 53, 55, 77, 103, 117, 130, 133, 137, 138, 144, 145, 148, 157, 158, 171, 176, 177, 179], "companion": [130, 201, 202], "company_grp": 169, "company_info": 103, "company_inform": 141, "company_nam": 103, "company_path": 141, "company_sales_data": 148, "compar": [0, 10, 22, 35, 44, 51, 52, 53, 54, 55, 56, 90, 95, 98, 104, 116, 117, 130, 133, 134, 140, 142, 172, 173, 177, 178, 179, 187, 188, 191, 193, 194, 197, 198], "compare_result": 174, "comparis": [188, 191], "comparison": [52, 89, 118, 133, 142, 147, 158, 161, 172, 174, 178, 180, 196, 198, 201], "comparit": 194, "compat": [38, 93, 104, 106, 118, 153, 158, 171, 175, 176, 179, 180, 197], "compatible_format": 84, "compens": [138, 177, 195], "compet": [143, 158, 199], "competit": [144, 145, 188], "competitor": [130, 132], "compil": [22, 24, 37, 39, 89, 100, 118, 130, 175, 192, 200], "complain": [106, 134], "complement": [39, 95, 187, 195], "complementari": 82, "complet": [47, 48, 49, 52, 54, 56, 68, 80, 81, 84, 96, 103, 127, 129, 130, 137, 138, 144, 145, 148, 154, 169, 175, 178, 180, 194, 198, 200], "completion_token": [137, 138], "completion_with_retri": [130, 140], "complex": [0, 7, 18, 19, 24, 47, 48, 51, 78, 82, 89, 91, 92, 95, 102, 103, 115, 116, 127, 133, 140, 147, 148, 157, 158, 168, 169, 174, 188, 190, 201], "complex128": 154, "complex_number1": 91, "complex_number2": 91, "complexnumb": 102, "compli": 98, "complianc": 141, "complic": [102, 116, 117, 130, 132, 138, 157, 174, 175, 187, 189], "complier": 98, "compon": [11, 12, 13, 14, 15, 16, 17, 31, 32, 74, 101, 117, 130, 173, 179, 180, 189, 190, 199, 200, 202], "compos": [53, 117, 175, 176, 177, 178, 179, 180, 181, 182], "composit": [118, 130, 175], "composur": 147, "compound": [24, 53, 95, 130], "comprehend": [196, 201], "comprehens": [34, 35, 47, 143, 180, 191], "comprehent": 118, "compress": [174, 175, 176, 179, 180, 181, 182], "compress_docu": 133, "compressed_doc": 133, "compression_retriev": 133, "compressor": 133, "compris": [175, 179, 191], "comput": [0, 1, 18, 19, 24, 31, 46, 51, 52, 56, 57, 66, 68, 71, 83, 87, 89, 95, 98, 101, 103, 116, 130, 133, 136, 140, 141, 150, 153, 168, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 185, 188, 191, 194, 195, 196, 197, 198, 200, 202], "computation": [171, 174, 190], "comstock": 130, "con": [171, 175, 178, 180], "concat": [80, 157, 168, 169, 179, 192, 196, 201, 202], "concaten": [53, 54, 57, 80, 94, 101, 104, 150, 157, 171, 174, 179, 196], "conceal": 189, "concentr": [133, 194], "concept": [22, 23, 26, 72, 89, 96, 103, 105, 116, 117, 130, 140, 143, 150, 173, 176, 179, 180, 189, 190, 191, 193, 196, 198, 200, 201, 202, 209], "conceptu": [83, 116, 117, 196, 197, 199, 210], "concern": [143, 145, 179, 180, 188, 196], "concis": [7, 35, 53, 55, 57, 72, 79, 116, 129, 130, 132, 140, 141, 143, 145, 152, 153, 179], "conclud": [36, 130, 140, 198, 200, 202], "conclus": [106, 140, 177, 179], "concret": [179, 200], "concurr": [66, 130], "conda": [24, 150], "condens": [118, 129, 176, 179, 181, 182], "condit": [31, 34, 35, 37, 43, 44, 45, 46, 47, 48, 49, 55, 56, 68, 70, 78, 79, 89, 93, 95, 130, 152, 161, 163, 200, 201, 202], "condition": 130, "condition_inn": 46, "conditon_out": 46, "conduct": [5, 14, 15, 16, 17, 98, 145, 179], "conf_mat": 174, "confer": 130, "confid": [140, 177, 178, 180, 190, 192, 194, 196, 197, 198, 200], "config": [76, 118, 133], "configur": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "confin": 168, "confirm": [87, 117, 173], "confis": 174, "conflict": [118, 140, 157], "confluenc": 117, "confmat": 174, "confmat_tensor": 174, "confus": [35, 46, 83, 90, 106, 117, 130, 171, 173, 180, 188, 189, 195, 196, 198, 201], "confusing_text": 117, "confusionmatrix": [173, 174], "congratul": [72, 87, 115, 140, 179], "conjuct": 200, "conjunct": [52, 94], "conkeldurr": 168, "conn": 128, "connect": [7, 71, 117, 128, 133, 138, 141, 171, 175, 177, 179, 180, 195, 196, 198, 200, 210], "connection_object": 157, "connectionerror": 128, "connectionist": [7, 18, 19], "connectionpool": 128, "conscious": [130, 134], "consequ": 0, "consid": [4, 7, 12, 18, 19, 27, 42, 48, 52, 53, 55, 56, 60, 61, 71, 77, 83, 98, 104, 106, 118, 143, 144, 145, 153, 154, 158, 162, 163, 172, 173, 174, 175, 176, 178, 179, 180, 188, 194, 196, 199, 201, 202], "consider": [10, 14, 24, 57, 130, 175, 178, 180, 190, 196, 200, 209], "consist": [4, 7, 9, 10, 14, 16, 17, 18, 19, 31, 53, 55, 70, 84, 85, 89, 103, 118, 132, 136, 138, 141, 152, 173, 174, 177, 178, 179, 190, 198, 203], "consol": [24, 94, 134, 143, 157], "consolid": 144, "conspicu": 130, "constant": [4, 5, 22, 29, 39, 82, 91, 100, 118, 130, 151, 153, 179, 199, 200], "constantli": [132, 144, 199, 201], "constitut": [7, 18, 19], "constrain": 130, "constraint": [38, 130, 141, 174, 180], "construct": [37, 38, 44, 49, 71, 78, 83, 84, 87, 101, 117, 135, 136, 151, 152, 157, 172, 173, 179, 180], "constructor": [59, 72, 84, 103, 173], "consult": 130, "consum": [135, 141, 143, 200], "consumpt": 180, "contact": [140, 141, 143, 145], "contain": [7, 9, 14, 15, 34, 35, 37, 45, 47, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 68, 69, 71, 79, 80, 83, 84, 90, 91, 93, 94, 96, 101, 102, 117, 130, 133, 138, 139, 143, 145, 148, 154, 157, 158, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 197, 198, 200, 203, 210], "contempl": [130, 140], "contend": 180, "content": [6, 20, 24, 39, 68, 69, 71, 80, 108, 109, 112, 116, 117, 127, 129, 130, 131, 132, 134, 135, 137, 138, 139, 140, 142, 143, 144, 145, 157, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 207], "content_attr": 142, "contest": 24, "context": [52, 76, 104, 116, 130, 133, 134, 140, 143, 172, 174, 175, 176, 177, 181, 182, 187], "contextmanag": 89, "contextualcompressionretriev": 133, "contigu": [52, 196], "contin": 117, "continu": [1, 8, 22, 35, 42, 50, 71, 88, 89, 102, 103, 128, 130, 134, 140, 144, 171, 173, 177, 178, 179, 180, 181, 191, 195, 198, 199, 202], "contour": [8, 14, 15, 189, 191, 192], "contract": [130, 145], "contractor": 141, "contradict": 130, "contrast": [0, 130, 152, 179], "contrastingli": 0, "contribut": [4, 5, 138, 144, 179, 198, 209], "control": [7, 24, 35, 43, 44, 51, 52, 89, 101, 104, 106, 117, 118, 130, 138, 141, 143, 179, 186, 188, 189, 191, 195, 196, 197, 198, 200, 202, 205], "conttinu": 192, "conv": [174, 175], "conv1d": 174, "conv2d": [175, 176, 177, 181, 182], "conv2dnormactiv": 177, "conv3d": 174, "conv_block_1": [175, 176, 181, 182], "conv_block_2": [175, 176, 181, 182], "conv_lay": 174, "conv_layer_2": 174, "convei": [140, 198, 200], "conveni": [4, 5, 28, 29, 130, 134, 150, 179, 188, 190, 191, 194, 197], "convent": [39, 84, 102, 106, 116, 117, 130, 161, 164, 172, 200], "convention": 102, "conver": 140, "converg": [3, 4, 28, 29, 130, 175, 190], "convers": [22, 52, 89, 100, 117, 118, 130, 139, 140, 145, 189, 194, 197], "conversationbuffermemori": 117, "convert": [6, 7, 16, 17, 18, 19, 31, 38, 51, 52, 53, 56, 57, 59, 60, 61, 64, 68, 70, 74, 82, 91, 93, 94, 95, 98, 109, 117, 118, 130, 132, 134, 137, 138, 143, 144, 150, 151, 154, 157, 158, 159, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 194, 198, 207], "convert_celsius_2_fahrenheit": 74, "convert_dictionary_to_python_object": 102, "convient": 157, "convinc": 130, "convini": [151, 154], "convnet": [154, 174], "convnext": 177, "convnext_smal": [177, 178], "convnext_tini": [177, 178], "convolu": 179, "convolut": [130, 177, 179, 209], "convolv": 174, "conwai": 130, "cook": [94, 116, 130, 131, 175, 178], "cool": [116, 117, 128, 130, 133, 139, 140, 144, 145, 154, 178, 179, 180, 189, 192], "cool_r": 192, "cooler": 35, "coolest": 130, "coolwarm": [25, 107, 111, 192, 193, 196, 197, 198, 201], "coolwarm_r": 192, "coon": 130, "coordin": 104, "cop": 117, "cope": 71, "copi": [24, 52, 56, 69, 80, 101, 118, 130, 132, 144, 153, 154, 157, 161, 162, 163, 164, 166, 167, 171, 172, 174, 175, 179, 180, 195], "copper": [192, 198], "copper_r": 192, "copy2": 180, "copyreg": 84, "copyright": 24, "copysign": [80, 82, 155], "cord": 130, "core": [18, 19, 102, 118, 130, 136, 144, 150, 155, 157, 161, 164, 165, 166, 174, 175, 179, 180, 181, 190, 197, 202], "corei": 118, "coremltool": 180, "corg": 53, "cori": [47, 52, 74, 77], "cornel": [130, 197], "corner": [118, 130, 152], "cornic": 130, "corpdev": 133, "corphish": 168, "corpor": 135, "corr": [157, 203], "corr_func": 201, "corrcoef": 150, "corrctli": [16, 17], "correct": [5, 7, 14, 15, 16, 17, 18, 19, 44, 48, 53, 70, 77, 80, 87, 98, 117, 118, 130, 133, 140, 154, 158, 159, 173, 174, 178, 179, 180, 188, 190, 196, 202], "correctli": [0, 4, 14, 15, 16, 17, 18, 19, 47, 72, 116, 118, 173, 174, 178, 179, 180, 201], "correl": [0, 132, 150, 157, 188, 191, 192, 194, 199, 201, 202, 204], "correspond": [0, 7, 11, 31, 32, 55, 65, 70, 72, 80, 90, 96, 98, 102, 106, 116, 135, 152, 191, 194, 197, 198, 199, 200, 202], "correspondingli": 130, "corridor": 130, "corrupt": [11, 13], "corsola": 168, "cosh": [80, 82], "cosin": [27, 80, 82, 150, 179], "cosine_dist": 30, "coss": 30, "cost": [11, 12, 13, 14, 15, 16, 17, 18, 19, 130, 132, 133, 137, 138, 141, 143, 144, 171, 173, 174, 177, 178, 179, 180], "cost_histori": [11, 12, 13], "cottone": 168, "couch": 175, "could": [7, 8, 24, 34, 49, 52, 68, 71, 83, 85, 96, 101, 102, 106, 116, 117, 118, 130, 132, 133, 134, 136, 137, 138, 140, 141, 143, 144, 145, 153, 154, 161, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 188, 189, 194, 195, 197, 198, 200], "couldn": [106, 130, 133, 171, 175, 177, 178, 179, 180, 192], "council": 145, "counsel": 145, "count": [7, 8, 39, 47, 48, 49, 52, 54, 68, 74, 88, 101, 102, 106, 117, 130, 133, 137, 138, 140, 142, 144, 147, 157, 168, 171, 175, 179, 180, 186, 191, 194, 197, 200, 202, 205], "counter": [47, 48, 102], "counterbalanc": 130, "counterintuit": [35, 133], "counterpart": [35, 52, 82, 171], "counti": 70, "countless": 140, "countplot": [194, 197, 198], "countri": [4, 9, 11, 13, 37, 40, 45, 47, 52, 53, 54, 55, 57, 68, 70, 71, 74, 90, 101, 117, 130, 140, 145, 147, 191, 200], "countries_data": 68, "countries_details_data": 37, "countries_to_look_at": 147, "country_lst_on": 71, "country_lst_two": 71, "coupl": [4, 5, 68, 117, 130, 143, 145, 173, 174, 175, 178, 179, 180, 189, 195, 196, 197, 198], "cours": [23, 24, 52, 74, 80, 88, 95, 130, 133, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 186, 188, 190, 191, 192, 194, 195, 196, 198, 200], "course_nam": 74, "coursera": [1, 3, 4, 5, 7, 9], "cous": [11, 12, 13], "cov": [190, 201], "covari": 190, "cover": [36, 37, 39, 68, 70, 116, 117, 127, 130, 132, 143, 157, 158, 159, 163, 164, 166, 186, 188, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 209], "coverd": 173, "coverg": 190, "covert": 98, "cow": 179, "cowboi": 119, "cowork": 130, "cp1252": 68, "cplai": 24, "cpu": [130, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "cpu_count": [175, 176, 180, 182], "crack": 130, "cradili": 168, "craft": [140, 177, 178, 180, 194], "craig": 118, "cram": 201, "cramer": 31, "cranido": 168, "crank": 130, "crap": 130, "crash": [71, 180], "crawdaunt": 168, "crawl": 130, "crazi": [116, 145, 171, 179], "cream": 137, "creat": [0, 8, 11, 17, 19, 22, 24, 25, 34, 36, 37, 38, 39, 47, 48, 51, 59, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 76, 78, 84, 85, 87, 88, 90, 91, 92, 96, 98, 101, 103, 104, 106, 107, 111, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 144, 145, 150, 152, 153, 154, 160, 161, 162, 163, 164, 165, 166, 169, 184, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210], "create_dataload": [176, 177, 178, 179, 180, 182], "create_docu": [116, 117, 132, 143, 144, 145], "create_effnetb0": 178, "create_effnetb2": 178, "create_effnetb2_model": 180, "create_extraction_chain": [138, 143], "create_extraction_chain_pydant": 137, "create_output": 130, "create_structured_output_chain": 116, "create_vit_model": 180, "create_writ": 178, "creation": [68, 116, 140, 151, 173, 175, 176, 179, 180, 209], "creativ": [129, 131, 135, 141, 144, 173, 178], "creator": [106, 118, 175], "credenti": 140, "credit": [24, 117, 130, 173, 187], "crept": 118, "cresselia": 168, "cript": 68, "crisi": 143, "crisp": 130, "crispi": 131, "cristiano": 147, "criteria": [0, 36, 37, 145, 180], "criterion": [173, 174, 179], "critic": [71, 132, 200, 201], "crm": [116, 137, 138], "croagunk": 168, "crobat": 168, "croconaw": 168, "crop": 175, "crop_siz": [177, 178, 179, 180], "cross": [7, 78, 130, 172, 173, 200, 202], "crossentropi": 173, "crossentropyloss": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "crowd": 130, "crucial": [133, 140], "cruis": 138, "crush": 130, "crust": 127, "crustl": 168, "cruz": 130, "cryogon": 168, "crystal": 130, "crystallin": 130, "csjfqsk97xz704h7v3fzjqph0000gn": [128, 130], "css": [52, 53, 101], "css4": 189, "csv": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 117, 118, 135, 147, 148, 158, 165, 166, 167, 168, 178, 186, 191, 197, 198, 200, 202], "csv_exampl": 68, "csv_reader": 68, "ctitl": 30, "ctrl": [24, 48, 70], "cu102": 179, "cu113": [172, 175, 177, 178, 180], "cu116": 171, "cu118": [174, 179], "cub": 117, "cubchoo": 168, "cube": [36, 48, 57, 77, 79, 94, 130], "cubehelix": 192, "cubehelix_palett": 189, "cubehelix_r": 192, "cubic": 4, "cubon": 168, "cuda": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "cue": 130, "cuisin": [116, 131], "cultur": [127, 130, 138, 143], "cum": [52, 56], "cumbersom": 190, "cumhuriyeti": 117, "cumsum": [150, 155], "cumul": [0, 150], "cup": [116, 198], "curat": [0, 116, 117, 179, 190, 210], "curios": 130, "curiou": [130, 145, 179, 190], "curious": 202, "curl": 130, "curli": [39, 52, 55, 56, 94], "currect": 117, "currenc": 117, "current": [0, 3, 4, 5, 11, 12, 13, 18, 19, 22, 36, 47, 48, 49, 60, 64, 65, 66, 67, 68, 71, 76, 80, 81, 84, 87, 96, 101, 102, 103, 116, 117, 118, 127, 130, 139, 140, 141, 143, 144, 166, 167, 172, 173, 174, 175, 177, 178, 179, 180, 188, 189, 190, 192, 194, 202], "current_datetime_hostnam": 178, "current_examples_indic": 10, "current_file_nam": 69, "current_palett": 189, "current_salari": 90, "current_tim": 63, "current_year": [74, 77], "current_year_2021": 90, "curri": [57, 101], "curriculum": [172, 174, 180], "cursor": [68, 140, 144], "curtain": 202, "curv": [11, 12, 13, 14, 15, 16, 17, 172, 178, 191, 197], "custom": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 80, 84, 116, 117, 118, 122, 127, 130, 132, 137, 138, 140, 144, 146, 158, 172, 173, 174, 176, 180, 181, 187, 188, 189, 190, 192, 194, 195, 197, 198, 199, 200, 201, 202], "custom_imag": 175, "custom_image_path": [175, 177, 178, 179], "custom_image_pr": 175, "custom_image_pred_class": 175, "custom_image_pred_label": 175, "custom_image_pred_prob": 175, "custom_image_transform": 175, "custom_image_transformed_with_batch_s": 175, "custom_image_uint8": 175, "custom_lin": [25, 107, 111], "customari": 130, "customerror": 72, "customis": [177, 178], "customiz": [141, 177, 180, 187, 200, 202], "cut": [9, 16, 17, 18, 19, 52, 118, 130, 132, 145, 173, 196, 197, 199], "cute": 145, "cyan": 189, "cycl": [130, 189, 192], "cycler": [25, 107, 111], "cylind": [157, 158, 169], "cym": 117, "cyndaquil": 168, "cyril": 118, "cython": 195, "d": [0, 3, 30, 45, 47, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 68, 71, 74, 90, 91, 92, 94, 102, 103, 104, 117, 128, 130, 132, 133, 137, 138, 139, 140, 141, 143, 145, 148, 151, 154, 157, 162, 163, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 191, 195, 197, 201, 203], "d1": [62, 103], "d2": 62, "d3": 62, "d4": 62, "d75c9779269a": 72, "d7cfabc8": 133, "d9e056c8": 133, "d_model": 179, "da": [30, 117, 198], "daaaat": 39, "daaat": 39, "daat": 39, "dad": [175, 177, 178, 179, 180], "daddi": 134, "dai": [23, 39, 51, 52, 60, 61, 62, 63, 64, 65, 74, 76, 116, 129, 130, 140, 143, 145, 171, 177, 178, 179, 180, 187, 189, 190, 193, 194, 195, 196, 197, 198, 199, 200, 202], "daili": [137, 138, 190], "dalla": [118, 119], "dam": 130, "damn": 117, "dan": 130, "danc": [101, 117, 130, 143, 179], "dandelion": 130, "danger": [130, 131, 133], "daniel": [130, 171, 172], "dar": 127, "dari": 118, "dark": [116, 130, 168, 174, 187, 189, 192, 198], "dark2": 192, "dark2_r": 192, "darken": 130, "darkest": 130, "darkgrid": [187, 194, 196, 197, 200], "darkrai": 168, "darmanitanstandard": 168, "darmanitanzen": 168, "darumaka": 168, "dash": 193, "dashboard": [194, 195], "dat": [39, 69], "data": [0, 4, 5, 7, 9, 24, 25, 34, 35, 36, 37, 39, 40, 47, 48, 52, 53, 54, 55, 56, 61, 68, 69, 71, 74, 77, 80, 84, 90, 91, 93, 94, 95, 98, 101, 103, 107, 111, 115, 116, 118, 122, 127, 128, 130, 132, 133, 135, 136, 139, 140, 141, 150, 152, 153, 160, 161, 162, 163, 164, 165, 167, 170, 184, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 210], "data1": [53, 157, 191], "data2": 191, "data_1": [68, 69], "data_10_perc": 178, "data_10_percent_path": 178, "data_20_perc": 178, "data_20_percent_path": [178, 180], "data_analysi": 198, "data_compli": [137, 138], "data_dir": 180, "data_fold": 175, "data_folder_1": 182, "data_folder_2": 182, "data_load": [174, 175], "data_path": [175, 176, 177, 178, 181, 182], "data_point": 193, "data_setup": [177, 178, 179, 180, 181, 182, 184], "data_str": 61, "data_transform": [175, 176, 181, 182], "data_typ": 158, "databas": [64, 68, 116, 117, 118, 127, 157, 180], "datafam": 159, "datafram": [11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 117, 135, 147, 151, 168, 169, 170, 173, 174, 175, 178, 180, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "dataindepend": [128, 143, 145], "dataload": 172, "dataloader_nam": 178, "datalod": 178, "datapoint": [175, 181, 182, 188, 189, 194, 197, 199, 200, 202], "datasci": [52, 75, 95], "dataseri": 157, "dataset": [0, 8, 10, 11, 12, 13, 15, 117, 122, 146, 147, 154, 157, 160, 161, 162, 163, 164, 165, 167, 168, 172, 173, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 204, 205], "datatyp": [22, 52, 54, 82, 92, 93, 100, 157, 158, 172, 175, 177, 202], "date": [11, 61, 63, 116, 117, 118, 128, 157, 177, 178, 186, 190, 192, 200, 202], "date_object": [59, 61], "date_rang": 157, "date_str": [59, 61], "date_tim": 60, "date_time1": 60, "date_time2": 60, "dateclass": 59, "datetim": [22, 62, 67, 80, 137, 138, 157, 178], "datetime64": 155, "datetime_capi": 59, "datetime_london": [59, 63], "datetime_ni": [59, 63], "datetime_object": 59, "datetimeindex": 157, "daughter": 101, "dave": 97, "david": [77, 94, 141], "davidcelli": 118, "daviddeutschoxf": 140, "davinci": [116, 117], "dawn": 130, "dazzl": 130, "db": [30, 116, 117], "db_chain": 117, "dbb7": 133, "dbt": 144, "dct": 71, "dd": [59, 61, 62, 178], "dd6f749658a4": 38, "ddot": 31, "de": [27, 39, 117, 118, 130, 147], "dead": [130, 133], "deadlin": [118, 130], "deal": [26, 38, 49, 51, 52, 68, 93, 130, 133, 141, 143, 145, 154, 157, 171, 172, 173, 174, 179, 180, 186, 189, 190, 191, 192, 193, 194, 195, 196, 200, 201, 202], "dealer": 130, "dealt": [186, 190, 194], "dear": 141, "death": 130, "debat": [117, 174, 176, 180], "debug": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 70, 78, 85, 89, 118, 138, 180], "debut": 116, "dec": [24, 37, 60, 61, 65, 87, 141], "decad": [130, 131, 140], "decai": [175, 179], "decemb": [45, 64], "decend": 168, "decent": [130, 194, 197, 198], "decept": 196, "decid": [0, 4, 5, 8, 11, 13, 38, 42, 55, 116, 117, 130, 133, 139, 164, 171, 173, 175, 180, 190, 191, 196, 197, 198, 200, 202], "decim": [38, 52, 60, 61, 84, 90, 91, 92, 94, 95, 151, 178, 180], "decis": [0, 9, 46, 116, 117, 145, 173, 178], "deck": [145, 196, 198, 202], "declar": [36, 37, 48, 52, 53, 68, 70, 72, 74, 75, 76, 80, 92, 95, 96, 101, 102, 106, 118, 151, 190, 198, 200, 201, 202], "decliv": 130, "decod": [52, 70, 130], "decompos": [27, 85], "decomposit": [26, 153], "decor": [22, 36, 41, 106, 118, 200, 202], "decorator_with_paramet": 37, "decreas": [7, 11, 12, 13, 14, 15, 16, 17, 48, 78, 175, 186, 189, 191, 196], "decrement": 104, "dedenn": 168, "dedic": [2, 130, 140, 141, 176, 182, 184, 202], "deduc": [190, 197], "dedupl": 143, "deel": 144, "deem": 134, "deep": [7, 26, 49, 117, 130, 139, 150, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 189, 209], "deepak": [69, 80], "deeper": [59, 117, 172, 173, 179, 186, 190, 192, 197, 199, 200, 202], "deeplak": [116, 132, 133], "deepli": [49, 130, 190], "deerl": 168, "def": [30, 34, 35, 36, 37, 38, 40, 44, 45, 46, 49, 57, 66, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 85, 88, 89, 91, 94, 96, 101, 102, 103, 104, 106, 117, 128, 129, 130, 137, 138, 139, 140, 141, 142, 144, 164, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 190, 192, 194, 195, 201, 202], "default": [6, 8, 10, 16, 17, 18, 19, 36, 59, 76, 78, 82, 84, 87, 94, 102, 103, 109, 116, 117, 118, 130, 133, 134, 145, 147, 150, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 187, 189, 190, 192, 193, 196, 197, 199, 200, 202, 203, 207], "default_ord": 52, "default_processor": 118, "default_scor": 118, "default_tim": [174, 175, 177, 180, 181, 182], "default_valu": 157, "defect": 174, "defens": [144, 168], "defer": 166, "defin": [0, 4, 5, 6, 18, 19, 22, 27, 31, 34, 35, 37, 38, 39, 40, 47, 48, 51, 52, 53, 54, 55, 57, 59, 65, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 101, 103, 104, 109, 116, 117, 118, 130, 132, 133, 136, 139, 154, 157, 161, 165, 172, 173, 174, 175, 177, 178, 179, 180, 187, 188, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207], "definit": [24, 32, 37, 47, 74, 77, 79, 80, 84, 89, 94, 101, 102, 103, 106, 130, 132, 137, 138, 143, 179], "defint": [173, 179, 180], "deflat": 180, "degrad": [106, 177, 178], "degre": [4, 11, 12, 13, 14, 15, 16, 17, 38, 80, 82, 116, 130], "dei": 179, "deino": 168, "del": [36, 52, 53, 54, 55, 88, 102], "delai": [65, 66, 130, 180, 188, 194], "delattr": 102, "delcatti": 168, "deleg": 103, "delelop": 24, "delet": [36, 38, 55, 56, 69, 70, 89, 133, 143, 150, 157, 163, 166, 175], "delete_al": 143, "delete_collect": 133, "deliber": 70, "delibird": 168, "delici": [116, 131, 140, 180], "delight": [130, 140], "delimit": [68, 132, 154, 157, 168], "deliv": [141, 171], "delphox": 168, "delta": 179, "delv": [0, 187, 188, 191, 192], "demand": [35, 131, 132, 187], "demo": [2, 8, 9, 116, 130, 140, 145, 175, 179, 192], "demonstr": [34, 53, 89, 103, 117, 159, 172, 176, 179, 182, 191, 194, 201, 202], "demonym": 117, "demor": 130, "den": 30, "deni": 45, "denim": [189, 195], "denmark": [11, 13, 37, 53, 71, 191], "denomin": 51, "denot": [28, 29, 38, 40, 52, 77, 78, 92, 101, 171], "dens": [133, 179], "densii": 197, "densiti": [8, 133, 188, 189, 191, 192, 193, 195, 197, 200], "deoxysattack": 168, "deoxysdefens": 168, "deoxysnorm": 168, "deoxysspe": 168, "depart": [102, 130, 137, 138, 200], "depat": 102, "depend": [0, 4, 5, 24, 27, 36, 42, 49, 68, 72, 80, 81, 104, 108, 112, 116, 118, 130, 132, 133, 136, 137, 138, 143, 150, 157, 172, 173, 174, 175, 176, 177, 178, 180, 182, 186, 188, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202], "depict": [189, 194, 196, 200], "deploi": [129, 144, 171, 178, 179], "deploy": [179, 185, 209], "deposit": 130, "deprec": [117, 118, 133, 165, 169, 171, 177, 178, 188, 193, 195], "deprecation_addendum": 195, "depress": 130, "depth": [78, 90, 103, 130, 175, 178, 186, 190, 191, 194], "deriv": [4, 5, 7, 71, 72, 101, 103, 106, 117, 130, 133, 200], "derived1": 103, "derived2": 103, "derivedclass": [101, 103], "desc": 174, "descend": [68, 74, 157], "descent": [7, 18, 19, 130, 172, 173, 174, 175, 179, 210], "describ": [4, 5, 7, 14, 15, 16, 17, 31, 74, 77, 80, 89, 95, 101, 116, 117, 118, 130, 132, 133, 138, 143, 145, 157, 171, 172, 173, 174, 179, 180, 186, 191, 196, 198, 199, 200, 201, 202], "describejob": [137, 138], "descript": [49, 52, 53, 54, 55, 56, 68, 74, 80, 81, 82, 84, 101, 102, 116, 117, 127, 128, 130, 132, 133, 135, 137, 138, 139, 141, 150, 157, 164, 171, 178, 179, 180, 186, 196, 200], "descriptor": [68, 84], "deseri": 172, "deserv": 197, "desgin": 91, "design": [24, 37, 116, 117, 130, 135, 138, 141, 157, 173, 178, 179, 180, 190, 198, 199, 210], "desir": [37, 49, 53, 116, 130, 140, 154, 171, 174, 175, 179, 180, 202, 209], "desk": [24, 130], "desktop": [24, 69, 130], "desmaisons_david": 118, "desper": [130, 144], "despin": [187, 197, 198, 199, 201, 202], "despit": [116, 118, 130, 143, 175, 179, 180], "destin": [139, 178, 179, 180], "destination_path": 139, "destini": 130, "destroi": [35, 75, 102, 130, 133, 143], "destruct": [102, 130], "destructur": 71, "det": [31, 153], "detach": [68, 172, 179], "detail": [0, 6, 35, 38, 65, 70, 77, 89, 94, 101, 102, 103, 109, 116, 118, 130, 139, 143, 152, 157, 159, 161, 166, 167, 171, 178, 179, 180, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202, 206, 207], "detect": [0, 2, 4, 5, 18, 19, 70, 118, 143, 152, 174, 180, 189, 209], "determin": [0, 52, 56, 118, 127, 130, 133, 162, 163, 167, 190, 191, 192, 194, 196, 198, 200, 201, 202], "determinist": [81, 117], "detour": 116, "deu": 117, "dev": [176, 178], "dev20220620": [177, 178], "dev20220824": 180, "devcon": 171, "develop": [10, 14, 22, 24, 39, 45, 72, 83, 90, 98, 101, 106, 116, 117, 120, 130, 132, 133, 136, 137, 138, 140, 141, 144, 171, 176, 177, 178, 180], "deviat": [1, 8, 74, 101, 150, 154, 157, 177, 179, 196, 198], "devic": [94, 98, 137, 138, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182], "device_count": 171, "devop": [141, 180], "dewgong": 168, "dewott": 168, "df": [117, 135, 147, 148, 157, 161, 164, 165, 166, 167, 168, 169, 180, 186, 188, 190, 192, 195, 197, 200, 202, 203], "df1": [157, 191], "df2": [157, 191], "df6ce7ede1dc": 70, "df_compani": 141, "df_xlsx": 168, "dfca0b041b3d": 72, "dharmesh": 140, "dhl": 52, "di": [39, 47, 116, 117, 130], "diag": [155, 201], "diag_ax": 201, "diag_indic": 201, "diag_kind": [192, 201], "diag_kw": 192, "diag_sharei": 201, "diagnol": 173, "diagnost": 117, "diagon": [31, 174, 192, 201], "diagram": [96, 160, 164, 167, 179, 193], "dial": 129, "dialect": [130, 136], "dialga": 168, "dialogu": [47, 140], "diamet": [82, 130], "dianci": 168, "dianciemega": 168, "diaz": 118, "dice": [116, 131], "dichotom": [5, 14, 15, 16, 17], "dict": [24, 40, 56, 68, 71, 74, 80, 91, 92, 93, 102, 117, 118, 130, 142, 147, 159, 160, 161, 162, 163, 164, 166, 167, 169, 172, 174, 175, 176, 178, 180, 181, 182, 188, 197, 202, 204], "dict1": [47, 55], "dict2": 47, "dict_1": 102, "dict_item": 55, "dict_kei": [55, 175], "dict_valu": 55, "dictat": 171, "diction": 140, "dictionair": 180, "dictionari": [22, 24, 37, 38, 40, 45, 52, 53, 54, 56, 57, 58, 70, 74, 84, 89, 91, 93, 95, 102, 117, 118, 137, 138, 140, 142, 144, 157, 159, 164, 169, 172, 174, 175, 176, 178, 179, 180, 181, 182, 187, 189, 202], "dictionaryliter": 89, "dictioneri": 118, "did": [35, 37, 43, 70, 71, 75, 94, 95, 101, 103, 116, 118, 130, 132, 133, 136, 143, 144, 145, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 200], "didn": [52, 101, 104, 116, 117, 130, 133, 134, 171, 173, 174, 175, 180, 187, 196, 197, 202], "die": [133, 202], "diet": [199, 200], "diff": [11, 13, 63], "differ": [7, 8, 11, 18, 19, 36, 37, 39, 40, 42, 47, 48, 49, 51, 52, 53, 54, 55, 60, 64, 65, 66, 68, 69, 70, 71, 74, 75, 77, 79, 80, 83, 85, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 108, 112, 116, 117, 118, 119, 130, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 152, 153, 157, 158, 159, 162, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210], "difference_upd": 56, "differenti": [88, 140], "differnt": 177, "difficult": [98, 117, 130, 187, 194, 195, 196, 197, 198], "difficulti": [130, 132, 171], "difflib": [118, 119], "dig": [59, 171, 200, 202], "digest": 117, "diggersbi": 168, "digit": [5, 7, 16, 17, 18, 19, 28, 29, 47, 52, 61, 80, 84, 88, 90, 95, 101, 118, 137, 138, 154, 174, 200], "digit_label": [16, 17, 18, 19], "digit_pixel": [16, 17, 18, 19], "diglett": 168, "dilat": [174, 175, 181, 182], "dilig": [130, 131], "dim": [171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182], "dim0": 171, "dim1": 171, "dim_feedforward": 179, "dimenion": 171, "dimens": [132, 150, 151, 152, 153, 157, 171, 172, 173, 174, 175, 177, 179, 180, 190, 201, 202], "dimension": [0, 3, 26, 47, 57, 132, 150, 151, 157, 159, 171, 174, 175, 177, 179, 190, 201, 202, 209], "diner": 130, "dinner": [74, 130, 190, 193, 194, 195, 196, 197, 198, 202], "dip": 131, "diploma": 130, "dir": [39, 59, 70, 118, 177, 178], "dir_nam": 69, "dir_path": 175, "dir_with_log": 178, "direct": [4, 5, 6, 9, 17, 19, 20, 32, 39, 48, 52, 57, 59, 60, 61, 65, 79, 101, 109, 116, 128, 133, 171, 177, 179, 198, 207], "direction": 132, "directli": [24, 35, 53, 72, 74, 80, 83, 96, 98, 101, 102, 117, 118, 133, 143, 153, 173, 175, 176, 179, 180, 182, 187, 193, 199, 200, 210], "directori": [22, 68, 70, 73, 80, 83, 94, 117, 118, 141, 172, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184], "directory_nam": 80, "directoryload": [133, 136, 142], "dirichlet": 200, "dirnam": [117, 175], "dirpath": [117, 175], "dirti": 117, "disadvantag": [98, 145, 172, 197], "disagre": 51, "disallowed_speci": 117, "disappear": 130, "disappoint": 130, "disast": 132, "disastr": 130, "disc": 116, "discard": 56, "discern": 175, "disclosur": 202, "disconcertingli": 130, "disconnect": 71, "discontinu": 27, "discord": [116, 117], "discourag": [106, 130], "discours": 202, "discov": [0, 130, 132, 133, 136, 171, 172, 173], "discoverd": 172, "discovered": 130, "discoveri": 116, "discret": [134, 189, 190, 197, 198, 200, 202], "discrimin": [10, 14], "discuss": [39, 44, 51, 52, 54, 80, 85, 89, 94, 103, 118, 132, 140, 141, 143, 145, 157, 158, 159, 160, 161, 166, 167, 173, 175, 176, 177, 179, 180, 181, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210], "diseas": 173, "disengag": 200, "dish": [116, 131], "disjoint": 56, "disk": [68, 98, 129, 130, 172, 174], "dislik": [117, 130], "dismai": 130, "disp": 171, "dispar": 200, "dispers": [186, 196], "displai": [1, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 45, 46, 47, 48, 49, 52, 59, 69, 71, 72, 84, 87, 91, 95, 98, 102, 103, 109, 117, 118, 143, 145, 147, 154, 160, 180, 187, 189, 191, 194, 195, 196, 197, 198, 200, 201, 202, 203, 207], "display_random_imag": 175, "display_shap": 175, "displaystyl": [27, 30], "displot": 193, "dispos": 200, "dispsid": 103, "disput": [130, 132], "disregard": [49, 174], "disrupt": 71, "dissatisfi": 130, "dissert": 130, "dissimilarity__util": 30, "dist": [80, 174, 205], "distac": 47, "distanc": [39, 47, 95, 106, 118, 119, 132, 136, 196, 197], "distant": 130, "distil": [132, 133], "distinct": [0, 117, 130, 152, 200], "distinguish": [7, 10, 14, 15, 18, 19, 56, 68, 106, 136, 189], "distort": 200, "distplot": [188, 201], "distract": [130, 133], "distribut": [15, 22, 81, 101, 130, 132, 147, 150, 151, 154, 177, 178, 179, 186, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202], "district": 130, "distriut": 196, "distutil": 118, "ditribut": 191, "ditto": [133, 168], "div": [137, 138], "div0ssutgadkwstr": 80, "dive": [117, 130, 139, 172, 186, 190, 196, 198, 199, 202], "diverg": 189, "divers": [132, 175, 180], "divid": [37, 42, 48, 53, 59, 70, 80, 82, 83, 85, 90, 94, 95, 150, 153, 155, 157, 158, 161, 173, 174, 175, 180, 194, 196, 198, 199, 200], "dividend": [77, 117], "divis": [31, 32, 37, 42, 48, 49, 57, 70, 71, 74, 90, 95, 104, 150, 153, 171, 179, 180], "divisbl": 179, "divisor": 77, "divorc": 130, "django": [24, 52], "dll": 80, "dm": [137, 138, 145], "do": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 34, 35, 38, 39, 42, 43, 44, 47, 48, 49, 52, 53, 54, 56, 57, 63, 70, 71, 72, 74, 77, 80, 81, 82, 84, 85, 89, 90, 92, 94, 95, 96, 98, 101, 102, 103, 104, 106, 107, 108, 111, 112, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210], "do_someth": 77, "doattempt": 130, "doc": [38, 74, 84, 116, 117, 118, 128, 130, 132, 133, 139, 141, 142, 143, 144, 153, 172, 174], "doc_id": 133, "doc_summari": 130, "docker": 138, "docsearch": [117, 134, 136, 143], "docstor": [117, 133], "docstr": [22, 52, 86, 102, 118, 176, 181, 182], "doctor": 39, "document": [6, 25, 68, 69, 74, 84, 89, 101, 102, 107, 109, 111, 112, 118, 127, 131, 132, 136, 139, 141, 142, 143, 144, 145, 151, 152, 153, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 187, 190, 196, 206, 207], "document_compressor": 133, "document_content_descript": 133, "document_load": [116, 117, 130, 132, 133, 134, 136, 141, 142, 144], "documentari": 130, "docutil": 118, "dodg": [169, 194, 195, 196, 197, 198, 199, 200], "dodrio": 168, "doduo": 168, "doe": [4, 11, 13, 35, 37, 38, 39, 43, 47, 48, 49, 52, 53, 54, 56, 57, 61, 68, 70, 71, 74, 75, 77, 80, 82, 84, 89, 90, 92, 94, 95, 96, 98, 101, 102, 103, 104, 116, 117, 118, 130, 132, 133, 139, 141, 143, 144, 145, 151, 153, 157, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 177, 178, 179, 180, 189, 190, 192, 194, 195, 197, 202], "does_exist": 53, "doesn": [10, 38, 45, 47, 48, 49, 52, 54, 55, 61, 80, 93, 102, 118, 130, 132, 133, 137, 138, 139, 144, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 190, 195, 197, 198, 202], "dog": [54, 103, 130, 131, 138, 145, 173, 174, 177, 179, 180], "dohc": [157, 158, 169], "dollar": [25, 107, 111, 130, 145, 147, 148, 178], "domain": [0, 24, 128, 130, 143, 173, 175, 177, 188, 190, 195, 198, 200, 202], "dominantli": 190, "don": [7, 10, 38, 48, 49, 53, 57, 68, 74, 76, 80, 83, 90, 101, 103, 106, 116, 117, 118, 129, 130, 132, 133, 134, 136, 139, 140, 141, 143, 144, 145, 157, 164, 166, 167, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 190, 191, 193, 195, 196, 197, 198, 200, 201, 202], "donald": 68, "done": [24, 31, 32, 35, 37, 38, 43, 44, 47, 48, 49, 52, 57, 68, 83, 87, 93, 94, 98, 103, 106, 130, 132, 133, 134, 139, 140, 141, 145, 158, 162, 165, 171, 172, 173, 174, 175, 178, 179, 180, 184, 187, 188, 189, 192, 194, 195, 197, 198, 199, 200, 201, 202], "dong": [4, 5], "donotpai": 143, "donphan": 168, "door": [0, 102, 130], "doshi": 141, "dot": [23, 26, 28, 31, 80, 83, 101, 102, 147, 148, 150, 153, 171, 172, 173, 175, 180, 191, 194, 195, 196, 197, 198, 200, 210], "dotenv": [116, 117, 129, 131, 132, 133, 134, 137, 139, 140, 142, 143, 144], "doubl": [40, 52, 74, 79, 89, 91, 92, 95, 101, 102, 103, 104, 116, 118, 130, 140, 143, 171, 177, 178, 179, 180, 187], "doublad": 168, "doubt": [130, 133, 143, 174, 191, 194, 195, 196], "down": [4, 5, 38, 49, 78, 80, 95, 117, 118, 119, 130, 133, 137, 138, 143, 145, 172, 173, 174, 175, 178, 179, 180, 181, 186, 187, 189, 191, 201, 202], "download": [24, 80, 117, 136, 147, 148, 154, 173, 174, 175, 176, 177, 179, 181, 182, 184], "download_data": [178, 179, 180], "downsid": [175, 198], "downtown": 55, "dozen": [174, 178], "dpi": [147, 148], "dr": [68, 80, 101, 116], "draft": [128, 130, 197, 198, 199, 200, 201, 202], "drag": [130, 194], "dragalg": 168, "dragon": 168, "dragonair": 168, "dragonit": 168, "drain": 116, "dramat": [171, 180], "drapion": 168, "dratini": 168, "drave": 130, "draw": [8, 16, 17, 130, 171, 173, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 200, 202], "draw_fram": 198, "draw_stripplot": 195, "drawn": [106, 130, 192, 195, 196, 200, 202], "dream": 130, "dress": [7, 17, 19, 131, 174], "drifblim": 168, "drifloon": 168, "drift": 130, "drilbur": 168, "drill": [189, 190], "drink": 91, "drive": [0, 44, 116, 130, 138, 140, 144, 171, 177, 179, 210], "driven": [130, 144], "driver": [77, 116, 130, 171, 180, 200], "drop": [9, 11, 13, 16, 17, 18, 19, 35, 118, 130, 140, 144, 145, 166, 167, 168, 189, 190, 202], "drop_dupl": [163, 167], "drope": 161, "droplet": 130, "dropna": [157, 167, 188, 190, 192, 201, 202], "dropoff_datetim": 200, "dropoff_latitud": 200, "dropoff_longitud": 200, "dropout": [175, 177, 178, 179, 180], "dropout1": 179, "dropout2": 179, "drowze": 168, "druddigon": 168, "dry": [74, 101, 130], "dst": 180, "dt": [27, 30], "dt_object": 64, "dt_object1": 61, "dt_object2": 61, "dt_string": [61, 62], "dtype": [18, 19, 147, 150, 151, 153, 154, 157, 158, 159, 165, 166, 168, 169, 171, 172, 173, 175, 180, 191, 192, 201], "duc": 39, "duck": 118, "ducklett": 168, "ducksual": 118, "due": [27, 38, 40, 49, 51, 53, 68, 71, 96, 98, 117, 130, 131, 132, 133, 143, 153, 172, 174, 175, 178, 179, 180, 182, 194], "dugtrio": 168, "duh": 140, "dull": [130, 187], "dummi": [139, 182, 191, 198, 202], "dump": [68, 84, 128, 137, 138, 139], "dumpstack": 69, "dunsparc": 168, "duo": 116, "duomo": 130, "duong": 118, "duosion": 168, "duplic": [47, 56, 80, 92, 96, 118, 133, 137, 138, 157, 161, 167], "durant": 168, "durat": 200, "dure": [24, 57, 70, 71, 77, 79, 80, 98, 106, 118, 130, 133, 143, 144, 172, 173, 175, 177, 178, 179, 180, 187, 190, 194, 199], "dusclop": 168, "duski": 189, "dusknoir": 168, "duskul": 168, "dust": 130, "dusti": 189, "dustox": 168, "dutch": 68, "duti": [127, 186], "dwebbl": 168, "dwell": 130, "dweller": 130, "dylan": 130, "dynam": [22, 92, 96, 98, 116, 128, 132, 143, 145], "dynamicfeatur": 89, "dystopia": [11, 13], "e": [3, 4, 5, 7, 11, 12, 13, 23, 24, 30, 35, 39, 47, 48, 49, 51, 52, 53, 54, 55, 56, 68, 69, 71, 75, 76, 80, 82, 87, 90, 91, 93, 94, 95, 101, 103, 116, 117, 118, 128, 130, 134, 139, 148, 151, 153, 154, 157, 158, 159, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210], "e0e0e0": 147, "e15e5601926f": 106, "e2e604bf92d": 70, "e32e417070a1": 92, "e53a": 133, "e8fb9ed4ccdc": 200, "each": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 35, 37, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 71, 74, 78, 79, 80, 84, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 106, 117, 128, 130, 131, 132, 133, 134, 140, 141, 142, 143, 145, 150, 151, 152, 153, 157, 158, 159, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 209], "eachoth": 179, "ear": [130, 133], "earli": [23, 130, 133, 175], "earlier": [133, 171, 172, 178, 180, 186, 187, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "earliest": 143, "earn": [95, 117, 130, 143], "earnest": 130, "earplug": 133, "earth": [74, 130], "eas": [130, 180], "easi": [22, 24, 34, 47, 48, 52, 68, 83, 85, 87, 98, 101, 116, 117, 118, 130, 133, 134, 140, 143, 144, 145, 157, 158, 171, 176, 178, 179, 180, 187, 192, 194, 196, 198, 200, 202, 210], "easier": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 34, 38, 39, 57, 78, 83, 88, 94, 98, 106, 116, 117, 118, 132, 141, 145, 159, 173, 174, 176, 179, 194, 199, 201], "easiest": [130, 177, 180], "easili": [28, 29, 35, 59, 64, 84, 90, 103, 116, 130, 141, 143, 144, 161, 175, 178, 179, 180, 187, 191, 194, 202, 210], "east": 130, "east1": 134, "eastern": 130, "eat": [87, 103, 116, 130, 133, 140, 177, 179, 180], "eaten": [130, 133], "eaxh": 11, "eb3d2b": 80, "ec3d": 133, "ecc": 171, "eccentr": 133, "ecommerc": [130, 138], "econom": 140, "economi": [4, 11, 13], "ecosystem": [20, 108, 112, 144, 180], "ecu": 117, "ed": 47, "ed7c4dc05b92": 75, "edg": [0, 7, 130, 136, 137, 138, 148, 180, 188, 197, 198, 201], "edgecolor": [188, 194, 195, 198, 201, 202], "edit": [116, 130, 132, 133, 140, 179, 180], "edit_financial_forecast": 139, "editor": [45, 130, 187], "editorconfig": 118, "edu": 9, "educ": [39, 135, 140, 178, 179, 194, 200], "educa": 39, "education_level": 197, "edward": [118, 201], "ee": 39, "ee4e8ee8c904": 70, "ee80ca1a52c8": 91, "eec": 141, "eelektrik": 168, "eelektross": 168, "eeve": 168, "effect": [52, 68, 76, 80, 101, 130, 139, 141, 174, 175, 177, 179, 180, 189, 191, 194, 198], "effici": [38, 47, 48, 51, 68, 74, 80, 83, 96, 98, 101, 141, 150, 157, 159, 174, 188, 195, 200], "efficientnet": 177, "efficientnet_b0": [177, 178], "efficientnet_b0_weight": [177, 178], "efficientnet_b1": 177, "efficientnet_b2": [177, 178, 180], "efficientnet_b2_weight": [178, 180], "efficientnet_b7": 177, "efficientnet_bx": 177, "efficientnetb0": 178, "efficientnetb2": [178, 180], "effnetb0": 178, "effnetb2": [178, 179], "effnetb2_average_time_per_pr": 180, "effnetb2_food101": 180, "effnetb2_food101_model_path": 180, "effnetb2_food101_result": 180, "effnetb2_foodvision_mini_model_destin": 180, "effnetb2_foodvision_mini_model_path": 180, "effnetb2_model_s": 178, "effnetb2_result": 180, "effnetb2_stat": 180, "effnetb2_test_pred_df": 180, "effnetb2_test_pred_dict": 180, "effnetb2_total_param": 180, "effnetb2_transform": 180, "effnetb2_weight": [178, 180], "effort": [130, 179, 180, 201], "eg": [37, 39, 90, 98], "egg": [80, 116, 119, 131], "egregi": 130, "eh": 81, "eigenvalu": [26, 153], "eigenvector": 26, "eight": [130, 143, 169, 178], "eighti": 39, "einat": 118, "einstein": 39, "either": [39, 42, 43, 45, 65, 71, 72, 84, 89, 95, 98, 103, 116, 118, 127, 130, 133, 140, 157, 158, 164, 171, 172, 173, 174, 175, 176, 181, 182, 186, 187, 189, 190, 193, 194, 196, 197, 198, 200, 201, 202], "ekan": 168, "el": 52, "elabor": [84, 144, 179], "elad": 144, "eladgil": 144, "elaps": 128, "elast": 130, "elasticsearch": 138, "eldest": 130, "electabuzz": 168, "electivir": 168, "electr": [140, 168], "electrik": 168, "electrod": 168, "eleg": [22, 34, 35, 36, 55, 57, 78, 130], "elegantli": 34, "elekid": 168, "element": [27, 28, 29, 31, 34, 47, 48, 51, 52, 65, 69, 74, 79, 80, 81, 87, 92, 93, 94, 95, 97, 102, 151, 152, 153, 154, 157, 159, 160, 171, 173, 178, 179, 180, 187, 198, 200, 202], "elementari": 196, "elementtre": 68, "elementwis": [31, 32, 153, 154], "elementwise_affin": 179, "elemnet": [55, 92], "elemtnt": 92, "elev": 130, "elgyem": 168, "elif": [14, 22, 36, 42, 46, 49, 50, 72, 88, 130, 171], "elig": 117, "elimin": [49, 92, 106], "elisabeth": 143, "eliza": 145, "elizabeth": 143, "ell": 179, "elliot": [116, 186], "ellipsi": 89, "ello": 52, "elonmusk": 140, "els": [16, 17, 18, 19, 22, 34, 36, 39, 42, 43, 46, 50, 52, 53, 55, 57, 68, 74, 77, 78, 80, 85, 88, 91, 94, 101, 102, 116, 117, 128, 130, 135, 137, 138, 140, 143, 144, 145, 147, 158, 161, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 190, 192, 195, 198, 200, 201], "elsewher": [130, 133, 143, 171, 172], "elucid": 198, "emac": 130, "email": [5, 14, 15, 16, 17, 24, 39, 40, 68, 97, 122, 128, 137, 138, 140, 146], "email_exchanges_big": 68, "emath": 155, "emb": [25, 107, 111, 117, 132, 133, 134, 180], "embark": [196, 198], "embark_town": [196, 198], "embed": [51, 84, 130, 132, 133, 136, 142, 143, 145], "embed_dim": 179, "embed_docu": [116, 132], "embed_queri": 116, "embedd": [116, 179], "embedding_dim": 179, "embedding_dimens": 179, "embedding_dropout": 179, "embedding_funct": 133, "embedding_layer_input_shap": 179, "embedding_layer_output_shap": 179, "embedding_list": 116, "embedding_s": 179, "emboar": 168, "embodi": 130, "embosom": 130, "emerg": 132, "emili": 101, "emmett": 130, "emoji": [117, 129, 140], "emolga": 168, "emot": [130, 140, 144], "emp": [39, 102, 103], "emp_data": 77, "emp_id": [55, 77], "emp_nam": 55, "emphas": [116, 130, 133, 140, 145], "emphasi": [102, 116, 140, 180, 199, 202], "employe": [101, 102, 103, 130, 133, 138, 145, 200], "employee_info": 103, "empoleon": 168, "empow": [0, 39, 52, 189], "empower": 140, "empoye": 77, "empti": [11, 38, 39, 47, 48, 49, 52, 53, 54, 55, 68, 69, 74, 76, 81, 83, 101, 102, 118, 130, 132, 150, 153, 157, 158, 163, 165, 172, 175, 176, 178, 180, 181, 182, 193], "empty_lik": 153, "emul": 180, "en": [133, 136, 173, 193], "enabl": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 103, 117, 118, 137, 138, 139, 141, 145, 171, 172, 175, 176, 180, 201, 209], "enable_limit": 133, "encapsul": 36, "enclos": [36, 47, 48, 52, 54, 70, 87, 92, 118, 132, 195], "encod": [31, 52, 68, 70, 71, 117, 138, 144, 174, 186, 202, 203], "encoder_lay": 179, "encoder_or_encoder_class": 138, "encompass": [130, 132], "encount": [70, 71, 130, 153, 173, 200], "encourag": [116, 130, 132, 143, 179, 180, 197], "encrypt": [81, 130], "end": [25, 27, 28, 29, 31, 32, 34, 35, 43, 47, 48, 49, 52, 54, 61, 66, 68, 70, 71, 74, 78, 84, 89, 92, 94, 98, 107, 111, 117, 118, 127, 130, 132, 133, 138, 140, 141, 143, 144, 145, 150, 154, 157, 158, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 189, 190, 191, 192, 195, 198, 200, 201, 202, 210], "end_dim": [174, 175, 179, 181, 182], "end_index": 24, "end_tim": [175, 177, 180, 181, 182], "endindex": 152, "endless": [0, 197], "endors": 143, "endpoint": [117, 154], "endswith": [52, 176, 181, 182], "endur": 130, "energet": 130, "energi": [130, 132, 135], "enforc": [89, 93, 180], "eng": [117, 118], "engag": [130, 140, 200], "engin": [24, 39, 102, 116, 117, 127, 130, 134, 138, 140, 141, 157, 158, 168, 169, 176, 177, 178, 179, 180, 182, 184, 200], "engine_api_resourc": 130, "engine_rotation_spe": 90, "england": [68, 70, 71, 101, 130, 147], "english": [52, 55, 68, 91, 98, 130, 132, 187], "enh": 118, "enhanc": [174, 188, 194, 195, 202], "enjoi": [52, 80, 116, 117, 130, 131, 140, 143, 145, 192, 197], "enlarg": 187, "enough": [44, 53, 54, 90, 116, 128, 130, 133, 136, 173, 174, 175, 178, 179, 180, 186, 188, 194, 196, 197, 198, 199, 200, 201], "enrol": [143, 198], "enron": 133, "ensembl": [174, 209, 210], "ensemble_doc": 133, "ensemble_retriev": 133, "ensembleretriev": 133, "ensur": [57, 68, 89, 103, 118, 145, 172, 175, 177, 178, 179, 180, 189, 192, 194, 198, 200, 201], "ensure_ascii": 68, "entangl": 130, "entei": 168, "enter": [43, 44, 45, 46, 48, 49, 71, 72, 74, 85, 89, 94, 95, 103, 116, 117, 128, 130, 141, 144, 145, 200, 202], "enterpris": [24, 130, 179], "entertain": [133, 135], "enthusiast": [130, 140], "entir": [34, 35, 52, 53, 54, 55, 68, 98, 103, 130, 133, 134, 143, 160, 172, 179, 180, 193, 197, 198, 200, 202], "entireti": 202, "entiti": [32, 88, 101, 137], "entranc": 130, "entrepreneur": [141, 144], "entri": [18, 19, 45, 47, 55, 71, 130, 140, 157, 158, 165, 175], "entropi": [172, 173], "enuemer": 47, "enum": [116, 137, 139, 143, 177], "enum34": 118, "enumer": [10, 11, 14, 15, 16, 17, 30, 47, 52, 56, 132, 174, 175, 176, 179, 181, 182, 195, 198], "env": [24, 116, 134, 175, 180], "enviou": 130, "environ": [23, 80, 98, 116, 117, 118, 127, 128, 130, 134, 137, 138, 139, 140, 143, 144, 145, 175, 176, 178, 180, 190, 202], "envis": 144, "eof": 68, "eoferror": 70, "ep": [155, 179], "epar": 68, "epic": 180, "episod": [140, 143], "epitom": 201, "epoch": [65, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "epoch_count": 172, "epsilon": [8, 18, 19], "epub": 116, "eq": [80, 133, 173, 179], "equal": [27, 31, 32, 34, 43, 44, 45, 46, 47, 48, 49, 51, 53, 77, 78, 80, 82, 87, 90, 91, 95, 104, 116, 117, 118, 130, 132, 148, 150, 153, 157, 164, 171, 173, 174, 175, 179, 180, 193, 196, 198, 200], "equal1": 80, "equat": [5, 7, 12, 31, 74, 145, 173, 188], "equip": [154, 191], "equival": [35, 37, 38, 47, 49, 52, 53, 55, 57, 59, 60, 61, 68, 79, 91, 95, 102, 103, 106, 118, 130, 152, 153, 171, 173, 177, 178, 179], "er": [39, 130], "era": [130, 202], "eras": [68, 118, 175], "erf": [80, 82], "erfc": [80, 82], "eric": 77, "ericcoleman": 118, "erignoux": 118, "erp": 24, "err": 128, "err_kw": 200, "err_palett": 200, "err_styl": 200, "errcolor": 198, "errno": 70, "erron": 118, "error": [0, 7, 24, 34, 37, 38, 49, 51, 52, 55, 56, 68, 71, 72, 74, 75, 77, 82, 88, 89, 92, 93, 94, 98, 101, 102, 103, 104, 117, 118, 130, 132, 137, 138, 140, 144, 153, 158, 166, 172, 173, 174, 175, 176, 177, 179, 180, 188, 189, 198, 199], "errstat": 155, "errwidth": 198, "escap": [25, 69, 107, 111, 143], "escavali": 168, "esp": 117, "especi": [26, 98, 106, 130, 150, 171, 173, 180], "espeon": 168, "espinoza": 118, "espurr": 168, "esqu": 117, "essai": [116, 117, 130, 132, 133, 134, 136, 178], "essenc": [136, 171, 172, 174, 175, 177, 178, 179, 180, 182], "essenti": [23, 103, 150, 154, 173, 174, 175, 176, 177, 179, 198], "essesnti": 115, "est": 117, "establish": [144, 180, 192, 200], "estat": [130, 135, 143], "estim": [4, 8, 12, 130, 145, 172, 175, 177, 188, 190, 191, 192, 193, 194, 197, 198, 199, 200], "estonia": 71, "et": [68, 179], "eta": 174, "etc": [4, 7, 16, 17, 18, 19, 24, 25, 34, 35, 47, 48, 49, 51, 52, 54, 55, 56, 59, 60, 61, 65, 74, 79, 80, 88, 89, 90, 93, 95, 96, 98, 101, 102, 107, 111, 116, 117, 118, 129, 130, 137, 138, 140, 150, 152, 153, 154, 157, 165, 168, 169, 172, 179, 186, 191, 192, 195, 199, 200, 210], "ethan": [57, 74, 77, 94], "ethic": 209, "etr": 130, "etre": 68, "eu": 174, "eucl": 30, "euclid": 136, "euclidean": [32, 82, 95], "euclidean_dist": 30, "eugen": 138, "eur": 117, "euro": 117, "europ": [59, 63, 117], "eva": 140, "eval": [24, 74, 94, 117, 139, 172, 173, 174, 175, 176, 177, 180, 181, 182], "eval_chain": 117, "eval_model": 174, "evalu": [42, 43, 44, 45, 48, 49, 68, 79, 94, 95, 98, 144, 145, 171, 172, 178, 180], "evalut": [174, 180], "evan": 186, "even": [22, 24, 35, 36, 37, 38, 42, 44, 45, 47, 48, 49, 51, 52, 53, 57, 68, 71, 74, 75, 77, 78, 79, 84, 89, 90, 93, 94, 95, 98, 102, 103, 106, 116, 118, 130, 132, 133, 137, 138, 140, 141, 143, 145, 153, 154, 158, 159, 162, 163, 171, 172, 173, 174, 175, 177, 178, 179, 180, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "even_list": 79, "even_no": 79, "even_num": 74, "even_numb": [37, 47, 57, 79], "even_odd": 74, "evenli": [130, 150, 154], "evenodd": 77, "evens_and_odd": 74, "event": [8, 71, 117, 118, 127, 140, 141, 143, 144], "eventu": [130, 179, 199, 201], "ever": [39, 47, 52, 96, 129, 130, 134, 137, 138, 143, 171, 172, 192, 195, 202], "everest": 132, "everi": [0, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 24, 44, 47, 49, 51, 52, 56, 57, 61, 71, 78, 80, 92, 96, 98, 101, 102, 103, 104, 106, 117, 130, 137, 138, 140, 143, 151, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 189, 190, 191, 193, 195, 196, 200, 201, 202], "everon": 175, "everybodi": 52, "everydai": [127, 130, 136], "everyon": [77, 117, 130, 134, 137, 138, 140, 145, 191], "everyth": [37, 53, 54, 55, 56, 72, 80, 92, 96, 101, 102, 130, 132, 171, 172, 173, 175, 178, 179, 180, 195, 198, 199], "everytim": [171, 182, 195], "everywher": [34, 171, 174, 180], "evid": [90, 188, 190, 194], "evoc": [117, 140], "evok": 189, "evolut": 130, "evolutionari": 117, "evolv": [117, 133, 144, 180], "ew": 52, "ewan": 118, "eward": 39, "ex": [0, 39, 98, 116, 117, 137, 140], "exact": [4, 51, 118, 130, 133, 172, 187, 194, 196], "exactli": [37, 39, 49, 52, 71, 106, 118, 130, 136, 138, 140, 173, 178, 180, 181, 187, 194], "exagger": 130, "exam": [130, 172], "examin": 190, "exampl": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 31, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 65, 68, 70, 71, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 94, 96, 97, 101, 102, 104, 106, 107, 111, 118, 128, 129, 130, 132, 133, 134, 136, 143, 144, 145, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 187, 188, 189, 191, 192, 193, 194, 198, 199, 200, 202, 203, 210], "example_1": 180, "example_2": 180, "example_3": 180, "example_list": 180, "example_prompt": 116, "example_selector": 116, "example_text": 140, "example_tweet": 140, "example_writ": 178, "exaplan": [70, 101], "exc_info": [71, 130], "excadril": 168, "exce": 130, "exceed": [78, 130], "excel": [22, 35, 68, 127, 137, 138, 157, 172, 173, 174, 177, 178, 180], "excel_book": 68, "except": [7, 18, 19, 22, 24, 34, 37, 39, 52, 53, 68, 73, 80, 84, 88, 89, 102, 117, 118, 128, 130, 137, 138, 144, 162, 171, 172, 173, 174, 175, 177, 178, 179, 180, 187, 189, 190, 194, 196, 198], "exception": 191, "exception1": 71, "exception2": 71, "exceptioni": 71, "exceptionii": 71, "exceptionn": 71, "excercis": 156, "exceric": 210, "excess": 130, "exchang": [141, 180], "excit": [0, 117, 130, 140, 144, 145, 178, 179], "exclud": [40, 56, 116, 130, 141, 144, 180, 186, 200, 201], "exclude_repli": [140, 144], "exclus": [68, 80, 130, 151, 157, 161], "excurs": 130, "excus": 202, "exect": 140, "execut": [6, 24, 34, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 57, 65, 66, 68, 71, 74, 75, 80, 85, 87, 89, 94, 96, 98, 101, 102, 109, 117, 118, 127, 128, 130, 145, 161, 164, 166, 167, 172, 180, 202, 207, 210], "exeggcut": 168, "exeggutor": 168, "exercis": [22, 75, 76, 130, 132, 140, 143, 168, 170, 172, 173, 174, 175, 177, 179, 180, 186, 199, 200], "exerics": 171, "exert": 130, "exhaust": [34, 47, 98, 130, 179, 190], "exhilar": 130, "exist": [4, 31, 37, 38, 39, 45, 52, 53, 54, 55, 56, 57, 68, 70, 80, 96, 101, 102, 103, 106, 117, 118, 130, 132, 135, 145, 157, 160, 161, 162, 163, 164, 166, 167, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 190, 198, 202, 203], "exist_ok": [172, 174, 175, 176, 177, 178, 180, 181, 182], "exit": [47, 48, 49, 68, 70, 80, 87], "exmapl": [140, 179], "exmpl": 52, "exp": [30, 51, 80, 82, 90, 153, 155, 173], "expand": [31, 79, 84, 130, 154, 175, 179, 199], "expanded_top": 143, "expandtab": 52, "expect": [7, 11, 13, 27, 39, 71, 95, 118, 127, 130, 132, 133, 157, 165, 171, 172, 173, 174, 175, 177, 180, 194, 196, 197, 200, 202], "expectantli": [130, 133], "expens": [78, 101, 130, 133, 143, 171, 180], "experi": [0, 24, 116, 129, 130, 131, 132, 134, 137, 138, 140, 143, 144, 145, 171, 172, 173, 175, 176, 177, 179, 185, 187, 190, 191, 194, 195, 196, 198, 202, 209], "experien": 138, "experiment": [24, 140, 171, 176, 178, 180, 210], "experiment_nam": 178, "experiment_numb": 178, "expert": [0, 117, 130, 197], "expertis": [132, 140], "expir": 180, "explain": [5, 14, 15, 16, 17, 37, 56, 78, 89, 96, 106, 116, 117, 118, 130, 132, 136, 145, 154, 162, 165, 172, 173, 174, 175, 176, 181, 182, 186, 187, 189, 190, 191, 195, 200], "explan": [40, 43, 44, 45, 47, 48, 49, 52, 57, 59, 62, 64, 66, 71, 72, 75, 76, 77, 79, 81, 82, 85, 93, 95, 101, 102, 103, 104, 106, 116, 117, 153, 154, 179, 184, 195], "explanatori": 188, "explicit": [0, 28, 29, 89, 106, 118, 130, 145, 153, 189, 195, 197, 198], "explicitli": [0, 36, 51, 57, 68, 74, 90, 117, 118, 128, 130, 151, 180, 187, 198], "explin": 140, "explod": 147, "exploit": 98, "explor": [0, 39, 65, 115, 116, 130, 132, 136, 137, 138, 139, 140, 143, 145, 171, 172, 173, 174, 175, 176, 177, 178, 187, 190, 192, 195, 197], "exploratori": [0, 187], "explos": 179, "exploud": 168, "expm1": [80, 82], "expon": [34, 47, 52, 82, 94], "exponenti": [28, 52, 80, 81, 91, 95, 130, 153, 173, 197, 200], "export": [84, 172], "expos": [128, 130, 145], "expovari": 81, "express": [28, 29, 38, 39, 43, 44, 45, 48, 49, 52, 53, 55, 57, 74, 77, 79, 89, 91, 93, 94, 95, 97, 104, 117, 130, 143, 157, 171, 200], "expression1": 46, "expression2": 46, "expression3": 46, "expression4": 46, "exract": 143, "extarctbest": 118, "extempor": 199, "extend": [38, 52, 74, 89, 101, 103, 117, 130, 140, 144, 166, 189, 196, 197, 198], "extens": [8, 20, 24, 36, 80, 84, 87, 89, 94, 108, 112, 147, 148, 174, 176, 178, 179, 180, 181, 182, 191, 200], "extent": [130, 195, 200], "extern": [49, 71, 116, 117, 134, 178], "extra": [38, 69, 70, 89, 116, 118, 133, 137, 138, 145, 164, 171, 181, 182, 184, 195, 196, 199], "extra_repr": 174, "extra_return_dict": 130, "extrac": [16, 17], "extract": [0, 8, 10, 14, 15, 16, 17, 18, 19, 39, 68, 92, 116, 118, 119, 122, 133, 139, 140, 142, 146, 157, 174, 175, 177, 178, 179, 180, 195, 203], "extract_optim": 118, "extractal": [175, 176, 177, 178, 181, 182], "extractbest": 118, "extracton": [117, 118, 119], "extractor": 177, "extractwithoutord": 118, "extrapol": 191, "extravag": 130, "extrem": [130, 133, 140, 143, 145, 157, 180, 187, 188, 189, 190, 195, 197, 200, 202], "ey": [31, 130, 151, 155, 180, 198], "f": [27, 32, 36, 45, 46, 51, 52, 60, 61, 68, 71, 72, 74, 77, 80, 84, 94, 97, 101, 102, 106, 116, 117, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 148, 153, 154, 161, 164, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 192, 195, 197, 200], "f09af94986b4": 54, "f1": [1, 8, 173], "f1_histori": 8, "f1_score": 173, "f1score": 173, "f2db54e8947c": 195, "f3f4b74da706": 54, "f45": 39, "f49307ce4aaa": 56, "f6b2789c4214": 166, "f6df5dfa": 133, "f7b055f5764d": 35, "f7d40ce0c112": 38, "f7ffd6347533": 70, "fab": [80, 82], "fab2e1af2c65": 106, "fabric": 202, "fabul": [140, 145, 194], "face": [7, 78, 116, 130, 140, 144, 175, 186, 201], "facebook": [52, 143, 145, 171], "facebookfacebook": 141, "facecolor": [147, 194, 198], "facecream": 148, "facecremsalesdata": 148, "faceprep": 49, "facet": [187, 190, 199, 201, 202], "facet_kw": 199, "facetgrid": [190, 191, 192, 196, 199, 200, 201, 205], "facewashsalesdata": 148, "facil": [80, 143], "facilit": [31, 138, 196, 198], "fact": [34, 37, 53, 54, 90, 116, 117, 130, 133, 136, 145, 150, 179, 180, 190, 197, 199, 200], "facto": 130, "factor": [26, 29, 49, 144, 180, 188, 192, 196, 197, 198, 200, 205], "factori": [28, 51, 74, 78, 80, 82, 84, 130], "factorplot": [194, 196, 197, 199, 200], "faculti": 130, "fade": [189, 196], "fahrenheit": [38, 116, 139], "fail": [4, 5, 44, 45, 48, 68, 70, 118, 130, 133, 157, 171, 172, 175, 189], "fair": [130, 172, 173, 174, 175, 177, 178, 179, 180, 192, 200], "fairi": [130, 168], "fairli": [35, 130, 174, 179], "faiss": [116, 117, 132, 133, 136], "faith": [177, 180], "fake": [130, 200], "falcon": [52, 119], "fall": [43, 51, 70, 85, 92, 130, 194, 200], "fallback": 151, "fallen": 130, "fals": [1, 8, 11, 13, 16, 17, 18, 19, 30, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 68, 74, 80, 84, 88, 90, 91, 94, 95, 103, 104, 117, 130, 137, 138, 139, 151, 152, 154, 155, 157, 161, 162, 163, 164, 166, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204], "falsi": 95, "falsifi": 130, "famili": [5, 11, 13, 84, 140, 180, 191, 198, 200], "familiar": [38, 52, 54, 102, 130, 148, 169, 172, 173, 175, 192, 195, 197, 198, 199], "famou": [116, 130], "fan": [171, 179, 195, 202], "fanci": [116, 117, 130, 135, 152, 157], "fandango": 24, "fanstast": 180, "fantast": [173, 176, 178, 179, 180], "faq": 141, "far": [39, 45, 90, 106, 130, 133, 154, 168, 171, 172, 173, 174, 175, 177, 178, 179, 180, 187, 188, 189, 190], "fare": [196, 198, 200], "farfetch": 168, "farm": [130, 135], "farwel": 118, "fasewash": 148, "fashion": [5, 7, 17, 19, 103, 130, 174, 178, 180], "fashionmnist": [174, 175], "fashionmnistmodelv0": 174, "fashionmnistmodelv1": 174, "fashionmnistmodelv2": 174, "fast": [68, 116, 117, 130, 133, 150, 157, 161, 171, 176, 177, 178, 179, 180, 200], "fastai": 177, "fastapi": 180, "faster": [51, 54, 57, 92, 98, 101, 103, 118, 141, 153, 172, 174, 178, 179], "fastest": [180, 210], "fat": [131, 199], "fatal": [130, 133, 186], "father": 130, "fatherhood": 130, "fatigu": 130, "fatorplot": 194, "faustomoral": 180, "fav_food": 116, "favor": [130, 140], "favorit": [54, 116, 117, 131, 140, 144, 145], "favorite_count": [140, 144], "favour": 179, "favourit": 180, "fbf7cddd4b2a": 70, "fc": [147, 198], "fdel": 38, "fe": 134, "fear": [130, 133], "fearow": 168, "feasibl": [130, 166], "feat": [118, 178, 179], "featheri": 130, "featur": [0, 1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 37, 101, 103, 104, 116, 117, 130, 136, 139, 141, 161, 171, 172, 173, 174, 175, 177, 186, 188, 189, 190, 191, 192, 194, 196, 197, 200, 201, 202, 210], "feature_map_height": 179, "feature_map_width": 179, "feb": [60, 61, 87], "februari": [45, 60, 61, 116, 130, 171], "fed": [0, 130, 132, 136, 179], "feder": 68, "fee": 143, "fee1": 133, "feeba": 168, "feebl": 130, "feed": [44, 140, 171, 177, 197, 209], "feedback": [44, 74, 133, 145, 180], "feedforward": [18, 19, 179], "feedpars": 24, "feel": [45, 116, 130, 132, 134, 135, 140, 143, 144, 179, 180, 186, 190, 191, 192, 194, 195, 196], "feet": [117, 130], "felic": 130, "felici": 141, "fell": 130, "fellow": 141, "felt": [130, 143], "femal": [68, 101, 168, 186, 190, 193, 195, 196, 197, 198, 202], "female_dinn": 197, "female_lunch": 197, "fenc": [179, 196], "fennekin": 168, "feraligatr": 168, "ferrose": 168, "ferrothorn": 168, "fervent": 130, "fetch": [12, 80, 133, 139, 157, 187, 190, 191, 194, 196, 198, 200, 201, 202], "few": [36, 37, 38, 47, 48, 51, 52, 55, 59, 115, 116, 117, 118, 130, 132, 133, 134, 140, 143, 144, 145, 154, 157, 160, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "fewer": [22, 118, 179, 200, 201], "fewshotprompttempl": 116, "fffbe51149a7": 61, "fget": 38, "fh": 71, "fi": 57, "fib": 80, "fibo": 80, "fibo1": 80, "fibonacci": [35, 48, 80], "fibonacci_numb": 35, "fickl": 133, "fiction": 198, "fiddl": 199, "field": [11, 13, 52, 68, 91, 116, 117, 130, 132, 133, 134, 137, 139, 140, 157, 160, 179, 180, 189, 200], "fierc": 130, "fifa": 117, "fifa_data": 147, "fifteen": 130, "fifti": 130, "fig": [25, 30, 53, 56, 107, 111, 174, 175, 179, 180, 188, 193, 197], "fight": [11, 12, 13, 14, 15, 16, 17, 18, 19, 130, 140, 168], "fighth": [16, 17, 18, 19], "figma": [141, 144], "fignam": 30, "figsiz": [8, 10, 11, 13, 16, 17, 18, 19, 25, 27, 107, 111, 147, 172, 173, 174, 175, 179, 180, 189, 197, 198, 200, 204], "figur": [8, 10, 11, 16, 17, 18, 19, 27, 46, 72, 83, 88, 89, 95, 103, 116, 117, 130, 132, 133, 136, 140, 147, 148, 172, 173, 174, 175, 177, 178, 180, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 204], "file": [6, 24, 34, 35, 37, 52, 70, 71, 72, 76, 77, 80, 83, 84, 87, 88, 90, 94, 98, 109, 116, 117, 118, 119, 122, 130, 132, 133, 139, 143, 145, 146, 148, 157, 165, 166, 167, 168, 172, 175, 176, 177, 178, 181, 182, 183, 184, 202, 207], "file_data": 68, "file_extens": 180, "file_nam": [132, 157], "file_path": 134, "filedata": 154, "fileexistserror": 80, "filemoveinput": 139, "filenam": [68, 80, 94, 117, 133, 157, 172, 175, 176, 178, 180, 181, 182, 191], "fileno": 68, "filenotfounderror": [68, 70, 175], "filepath": [172, 175, 177, 178, 179, 180], "files": [178, 180], "fill": [128, 130, 147, 150, 151, 154, 171, 175, 176, 178, 180, 181, 182, 191, 210], "fillna": 157, "filter": [53, 55, 57, 130, 132, 133, 140, 167, 174], "filter_cond": 157, "filterwarn": [188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "fin": [71, 117], "final": [7, 27, 35, 37, 47, 48, 49, 52, 53, 68, 70, 75, 76, 88, 90, 94, 96, 106, 116, 117, 127, 129, 130, 132, 133, 135, 140, 141, 143, 144, 153, 167, 172, 174, 175, 178, 179, 180, 182, 189, 192, 196, 197, 198, 200, 201, 202], "final_prompt": [116, 117, 129, 140], "finali": 154, "finaltext": 94, "financ": [135, 150], "financi": [51, 117, 130, 137, 138], "find": [1, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 35, 37, 39, 47, 48, 52, 53, 56, 57, 59, 63, 68, 71, 74, 78, 80, 85, 90, 92, 95, 101, 103, 106, 116, 117, 118, 128, 129, 130, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 152, 153, 154, 157, 161, 163, 172, 173, 174, 175, 176, 178, 180, 181, 182, 189, 190, 191, 192, 194, 195, 197, 198, 199, 200, 210], "find_class": 175, "find_even_numb": 74, "find_most_common_word": 68, "find_most_frequent_word": 68, "findarea": 103, "findli": 141, "fine": [88, 94, 116, 117, 118, 130, 140, 172, 173, 175, 177, 179, 200], "finer": [137, 138, 187], "finfo": 155, "finish": [36, 47, 89, 116, 117, 130, 141, 145, 174, 178, 179, 180, 181, 182, 190, 193], "finit": [27, 34, 51, 134], "finland": [11, 13, 37, 45, 47, 52, 53, 54, 57, 68, 71, 90, 101], "finneon": 168, "fintech": 195, "fir": 188, "fire": [130, 168, 180], "firelight": 130, "firesid": 130, "firm": [130, 143, 196], "firmer": 201, "firmli": 130, "first": [0, 7, 8, 9, 16, 17, 18, 19, 27, 31, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 52, 54, 57, 59, 60, 61, 65, 68, 69, 70, 71, 74, 75, 77, 80, 84, 85, 87, 89, 90, 94, 96, 98, 101, 102, 103, 104, 106, 116, 117, 118, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 145, 147, 152, 153, 157, 164, 166, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 187, 189, 190, 192, 194, 196, 197, 198, 199, 200, 201, 202, 210], "first_lett": 52, "first_nam": [37, 39, 45, 47, 52, 55, 74, 90, 93, 138], "first_name_to_list": 93, "first_nm": 77, "first_numb": 94, "first_respons": 139, "firstnam": [39, 40, 74, 77, 90, 94, 101], "fisher": [10, 14, 130], "fit": [0, 1, 4, 5, 11, 12, 13, 84, 116, 130, 132, 135, 172, 174, 175, 179, 180, 181, 182, 188, 190, 191, 192, 193, 196, 197, 200], "fit_fn": 188, "fit_reg": 190, "fit_transform": 132, "fitit": 143, "fitler": 133, "five": [39, 47, 71, 103, 130, 147, 157, 158, 160, 171, 173, 174, 179, 180], "fix": [25, 47, 70, 77, 98, 107, 111, 116, 117, 118, 130, 157, 172, 173, 174, 175, 179, 190, 200], "fizzywuzzi": 118, "flaaffi": 168, "flab\u00e9b\u00e9": 168, "flag": [12, 16, 17, 18, 19, 39, 117, 118, 128, 147, 155, 161, 162, 163, 164, 166, 167, 168, 176, 180, 186, 192, 200], "flag_r": 192, "flagcdn": 117, "flake": 130, "flamer": 168, "flank": 130, "flaot": 51, "flareon": 168, "flase": 95, "flask": [24, 52], "flat": 155, "flat_latency_grid": 8, "flat_prob": 8, "flat_throughput_grid": 8, "flatten": [8, 10, 11, 12, 13, 14, 15, 57, 150, 174, 175, 176, 181, 182, 194], "flatten_model": 174, "flattened_list": 57, "flattn": 179, "flavor": [20, 108, 112, 116, 131], "flavour": [171, 178], "flee": [130, 186], "fleme": 47, "fletchind": 168, "fletchl": 168, "flexibl": [24, 40, 92, 94, 137, 138, 157, 171, 172, 188, 190, 193, 194, 195], "flexibli": 193, "flexport": 144, "flierprop": 196, "fliersiz": 196, "flight": [130, 186, 203, 204], "fligth": 203, "flip": [175, 187], "float": [24, 38, 46, 49, 52, 53, 54, 56, 59, 66, 70, 71, 80, 81, 82, 85, 89, 91, 92, 93, 95, 103, 130, 151, 157, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 189, 194, 195, 197, 198], "float16": 171, "float32": [171, 172, 173, 175, 177], "float64": [147, 151, 153, 157, 158, 159, 165, 171], "float64index": 157, "float_1": 91, "float_16_tensor": 171, "float_2": 91, "float_32_tensor": 171, "float_numb": 94, "floatingpointerror": 70, "floattensor": 175, "floatzel": 168, "floett": 168, "flood": [130, 133], "floor": [80, 82, 90, 95, 102, 104, 130, 155, 173, 194], "floor_divis": 90, "floppi": 129, "florenc": 130, "florg": 168, "flounder": 130, "flow": [10, 47, 48, 49, 52, 68, 71, 130, 140, 172, 179, 201], "flowchart": 0, "flower": [3, 5, 10, 14, 15, 47, 130, 186, 194], "floyd": 47, "fluctuat": 200, "fluff": 133, "fluoresc": 130, "flush": [48, 66, 68, 84, 94], "fly": [35, 101, 102, 103, 130, 135, 168, 180], "flygon": 168, "flying_test": 101, "fl\u00e1vio": 118, "fmod": [80, 82], "fmri": 200, "fmt": 147, "fn": [1, 130, 180], "fo": 39, "focu": [116, 117, 129, 130, 140, 144, 171, 172, 179, 180, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202], "focus": [94, 101, 116, 127, 130, 132, 140, 141, 143, 145, 173, 175, 176, 178, 179, 180], "foe": 80, "folder": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 37, 69, 80, 117, 118, 128, 130, 133, 143, 157, 168, 169, 174, 175, 176, 177, 178, 181, 189, 191, 192, 197, 198, 200], "folk": 116, "follow": [0, 1, 3, 4, 5, 6, 7, 17, 19, 22, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 42, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 68, 70, 71, 72, 74, 77, 78, 80, 81, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96, 98, 101, 102, 103, 104, 106, 109, 115, 116, 117, 118, 119, 130, 131, 132, 133, 135, 137, 138, 139, 140, 141, 145, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 187, 189, 200, 201, 202, 203, 207], "fom": 48, "font": [130, 138, 147, 187, 195, 198, 200], "font_scal": [187, 197], "fontdict": 147, "fontnam": 147, "fontsiz": [147, 174, 175, 179, 180, 197, 202], "fontweight": [147, 197, 198, 202], "foo": [39, 53, 55, 139], "food": [91, 92, 116, 131, 137, 140, 173, 175, 176, 179, 180], "food101": [175, 178], "food101_class_nam": 180, "food101_class_names_load": 180, "food101_train_transform": 180, "food_1": 131, "food_2": 131, "food_imag": 175, "food_list": 54, "food_nam": 180, "food_staff": 74, "food_tupl": 54, "foodextractor": 137, "foodvis": [177, 178, 179], "foodvision_big": 180, "foodvision_big_class_names_path": 180, "foodvision_big_demo_path": 180, "foodvision_mini": 180, "foodvision_mini_demo_path": 180, "foodvision_mini_exampl": 180, "foodvision_mini_examples_path": 180, "foongu": 168, "foot": [130, 147], "footbal": [39, 202], "football_plot": 202, "footer": 141, "footnot": 130, "footprint": [179, 180], "forbid": 130, "forc": [72, 118, 134, 140, 151, 158, 180, 186], "force_ascii": 118, "force_edgecolor": 201, "forcibli": 84, "ford": [103, 169], "forecast": [137, 138], "foreign": 130, "forese": 144, "foreshadow": 140, "forest": [130, 174], "forev": 48, "forget": [7, 89, 179, 180], "forgot": [70, 130, 175], "forgotten": [48, 130], "form": [4, 7, 8, 10, 12, 14, 36, 43, 47, 51, 52, 55, 57, 60, 61, 68, 69, 77, 79, 80, 85, 89, 92, 98, 101, 117, 130, 132, 133, 138, 140, 144, 150, 151, 153, 157, 161, 162, 165, 168, 173, 174, 176, 177, 178, 179, 180, 181, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202], "formal": [77, 106, 130, 179], "format": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 37, 40, 45, 47, 54, 55, 64, 65, 68, 80, 89, 101, 102, 104, 116, 117, 118, 129, 130, 131, 132, 135, 138, 139, 140, 141, 145, 157, 158, 165, 171, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "format_instruct": [116, 117, 135], "format_prompt": [117, 129, 131, 133, 135, 138], "format_regex": 61, "format_tool_to_openai_funct": 139, "format_vers": 84, "former": [89, 103, 130, 141], "formfe": 52, "formul": 47, "formula": [1, 4, 5, 39, 74, 172, 173, 179], "forretress": 168, "fortan": 154, "forth": [80, 117], "forth_respons": 139, "forti": [130, 136], "fortran": 130, "fortun": [22, 51, 130], "forum": [130, 173, 176, 177, 180, 194, 195, 196, 198], "forward": [47, 52, 69, 70, 92, 130, 141, 145, 171, 172, 173, 174, 176, 177, 179, 181, 182, 200, 203], "forward_cal": [174, 175], "found": [32, 36, 39, 47, 49, 52, 55, 61, 70, 71, 80, 95, 98, 103, 116, 118, 130, 132, 133, 137, 138, 140, 141, 144, 145, 151, 161, 164, 171, 172, 173, 174, 175, 177, 178, 179, 180, 189, 196, 198, 200, 203], "foundat": [130, 175, 179, 199], "founder": [130, 132, 133, 141, 144, 177, 179], "fountain": [116, 130], "four": [9, 10, 14, 39, 42, 47, 61, 74, 89, 91, 94, 103, 106, 130, 133, 140, 145, 154, 157, 158, 169, 172, 173, 174, 180, 186, 187, 196, 202], "fourth": [39, 48, 94, 117, 133, 161], "foxxyz": 118, "fp": [1, 128], "fr": 117, "fra": 117, "frac": [11, 13, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 95, 173], "fractal": 136, "fraction": [61, 82, 143, 188], "fradul": 180, "fragrant": [116, 130], "frame": [15, 16, 17, 18, 19, 78, 89, 130, 157, 161, 164, 165, 166, 174, 180, 196, 201, 202], "frameobject": 89, "framework": [7, 18, 19, 24, 116, 117, 120, 139, 143, 171, 179, 202], "franc": [116, 117], "frances": 117, "francesa": 117, "franchis": 143, "franci": 117, "francia": 117, "franciaorsz\u00e1g": 117, "francisco": [116, 117, 139, 141, 143, 145, 186], "francja": 117, "francouzsk\u00e1": 117, "francuska": 117, "franc\u00e9": 117, "franc\u00fazska": 117, "franc\u00fazsko": 117, "frank": 77, "frankreich": 117, "frankrijk": 117, "frankrik": 117, "frans": 117, "fransa": 117, "franz\u00f6sisch": 117, "fran\u00e7a": 117, "fran\u00e7ai": 117, "fran\u00e7ais": 117, "fraud": [173, 180], "fraudul": [5, 14, 15, 16, 17, 180], "fraxur": 168, "fra\u00f1": 117, "free": [0, 22, 45, 68, 116, 130, 132, 133, 134, 137, 138, 140, 144, 171, 178, 179, 180, 191, 192, 194, 195, 196, 198, 200, 210], "freecodecamp": 180, "freed": 68, "freedom": [4, 11, 13, 138, 178, 201], "freelanc": 130, "freeli": [22, 200], "freez": [130, 179, 180], "french": [68, 116, 117, 180], "freq_dist": 101, "frequenc": [101, 157, 196, 197], "frequent": [39, 49, 53, 68, 80, 132, 152, 153, 157, 179, 180, 196, 199], "fresh": [116, 131, 133, 140, 172, 173], "fresher": [130, 202], "frexp": [80, 82], "fri": [65, 137, 195, 197, 198], "friction": [116, 117, 130], "fridai": 116, "fridman": 177, "friend": [5, 117, 130, 133, 134, 138, 171, 177, 179, 180], "friendli": [35, 57, 180], "frighten": 130, "frighteningli": 130, "frillish": 168, "frist": 173, "froaki": 168, "frogadi": 168, "frolick": 130, "from": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 45, 47, 48, 49, 51, 52, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 84, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 106, 107, 111, 115, 116, 117, 118, 119, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 142, 143, 146, 147, 148, 150, 151, 152, 153, 164, 165, 166, 172, 174, 175, 176, 178, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "from__email": 128, "from__nam": 128, "from_arrai": [161, 164], "from_chain_typ": [117, 136, 143], "from_dict": [157, 169], "from_docu": [116, 117, 133, 134, 136, 142, 143], "from_exampl": 116, "from_llm": [117, 133], "from_llm_and_api_doc": 117, "from_messag": [129, 131, 143, 145], "from_numpi": [171, 173], "from_response_schema": [116, 117, 135], "from_templ": [117, 129, 131, 135, 143, 145], "from_text": 134, "from_tupl": [160, 167], "from_uri": 117, "from_valu": 128, "from_youtube_url": 144, "from_zapier_nla_wrapp": 128, "fromarrai": 155, "fromisoformat": [137, 138], "fromit": 155, "fromtimestamp": [59, 60, 64], "fron": [11, 13], "front": [39, 52, 130, 132, 133, 171, 178, 179, 198], "front_end": 53, "frontend": 187, "frontier": [132, 136], "froslass": 168, "frosti": 130, "frown": 106, "froze": 177, "frozen": [177, 178, 179, 180], "frugal": 130, "fruit": [39, 45, 47, 53, 54, 56, 71, 89, 91, 102, 117, 130, 133, 159, 198], "fruit1": 159, "fruit2": 159, "fruit3": 159, "fruit4": 159, "fruit_nam": 117, "fruit_output": 117, "fruit_queri": 117, "fruits1": 91, "fruits2": 91, "fruits3": 91, "fruits4": 91, "fruits_and_veg": 71, "fruits_df": 159, "fruits_dict": 159, "fruits_list": 159, "fruits_veget": 54, "fset": 38, "fsize": 30, "fsum": [80, 82], "fucntion": [75, 76], "fulfil": [134, 171, 190], "full": [9, 16, 17, 18, 19, 24, 59, 60, 61, 68, 69, 74, 80, 83, 90, 95, 116, 117, 118, 128, 129, 130, 132, 133, 136, 140, 151, 153, 171, 172, 173, 175, 178, 179, 180, 182, 197], "full_backward_hook": [174, 175], "full_data": 68, "full_lik": 151, "full_nam": [74, 77, 90], "full_process": 118, "full_stack": 53, "full_text": [140, 144], "fulli": [127, 130, 132, 171, 178, 179, 180, 198], "fun": [39, 74, 75, 76, 77, 80, 90, 95, 130, 133, 137, 140, 172, 174, 177, 179, 180, 182, 189, 201], "fun1": [75, 76, 103], "fun2": [75, 76, 103], "fun3": [76, 103], "func": [37, 117, 132, 164, 195], "func1": 101, "func2": 101, "function": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 28, 29, 34, 38, 39, 40, 42, 48, 49, 51, 59, 65, 66, 68, 69, 70, 71, 75, 81, 83, 87, 88, 89, 90, 91, 92, 93, 96, 101, 102, 106, 108, 112, 117, 118, 122, 127, 129, 132, 136, 138, 140, 143, 144, 146, 148, 150, 154, 157, 159, 171, 177, 184, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202], "function_cal": [116, 137, 139], "function_descript": 139, "function_nam": [74, 139], "function_respons": 139, "functionis": 178, "functionnam": 71, "functool": [79, 130], "fund": [116, 117, 128, 130, 133, 180], "fundament": [101, 122, 130, 132, 140, 157, 178, 179, 180, 185, 189], "fundrais": 133, "fungi": 74, "fungu": 117, "funni": 130, "fur": 7, "furfrou": 168, "furret": 168, "further": [3, 11, 12, 13, 14, 15, 16, 17, 35, 52, 68, 70, 72, 74, 94, 96, 98, 118, 141, 157, 158, 166, 172, 173, 175, 178, 179, 180, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210], "furthermor": [35, 37, 38, 53, 74, 80, 96, 101, 106, 133, 187], "furthest": 39, "furtur": 177, "fusion": [175, 176, 181, 182], "fut": 130, "futher": 117, "futoas": 118, "futur": [47, 49, 68, 90, 106, 117, 118, 129, 130, 132, 133, 138, 140, 144, 165, 171, 172, 173, 174, 175, 176, 178, 180, 182, 189, 193, 199, 200, 202, 210], "futurewarn": [132, 165, 169, 189, 193], "fuzz": [117, 118, 119], "fuzzbal": 118, "fuzzi": [118, 119], "fuzzywuzzi": [117, 118], "g": [0, 4, 5, 7, 11, 13, 23, 37, 49, 53, 54, 68, 90, 116, 118, 134, 139, 147, 148, 151, 153, 154, 157, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204], "g53c4ty0qi": 140, "g7qxxsfswytpkuzd7": 117, "ga": 147, "gabit": 168, "gackl": 130, "gai": 130, "gain": [130, 145, 179, 190, 191, 199, 200], "gallad": 168, "gallademega": 168, "galleri": [117, 130], "galvantula": 168, "gam": 200, "game": [24, 83, 116, 130, 172], "gamma": [80, 81, 82, 200], "gammavari": 81, "gap": [88, 130, 132, 136], "garai": 118, "garbag": [68, 70, 102, 136, 162], "garbodor": 168, "garchomp": 168, "garchompmega": 168, "garden": 130, "gardevoir": 168, "gardevoirmega": 168, "gareth": 118, "gari": 77, "garlic": [116, 131, 180], "gas_pric": 147, "gas_price_figur": 147, "gastli": 168, "gastrodon": 168, "gate": [57, 140], "gatesfound": 140, "gather": [116, 130, 137, 138, 144, 157, 158, 162, 179, 195], "gaug": [194, 195], "gaul": 130, "gauss": 81, "gaussian": [81, 154, 179, 190, 191, 193, 200], "gaussian_anomali": 8, "gaussian_anomaly_detect": 8, "gaussiananomalydetect": 8, "gaussiankd": 197, "gave": [68, 117, 130, 133, 134, 143], "gca": [195, 201, 202], "gcd": 80, "gcp": [134, 138, 171], "gdp": [4, 11, 13, 130, 200], "gdpr": [137, 138], "gea": 147, "geeksforgeek": [4, 5], "gelu": 179, "gem": 130, "gender": [55, 68, 101, 186, 190, 194, 195, 197, 198, 202], "gender_domin": 197, "gener": [4, 5, 7, 11, 14, 15, 18, 19, 22, 24, 29, 32, 34, 37, 41, 42, 47, 48, 51, 52, 54, 70, 71, 72, 74, 78, 79, 80, 81, 83, 84, 89, 92, 95, 98, 101, 102, 103, 106, 115, 117, 118, 122, 128, 129, 130, 131, 132, 133, 140, 143, 144, 146, 148, 151, 152, 161, 164, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210], "generaliz": [174, 175], "generate_color": 80, "generate_full_nam": 74, "generate_group": 77, "generate_respons": 129, "generatig": 188, "generatingdata": [190, 192], "generation_info": 131, "generatorexit": 70, "generos": [11, 13], "genesect": 168, "genexpr": 35, "genfromtxt": [154, 155], "gengar": 168, "gengarmega": 168, "genius": 130, "genotyp": 194, "genr": 116, "genteel": 130, "gentleman": 200, "gentli": 130, "genuin": [130, 140], "geociti": 130, "geodud": 168, "geograph": 200, "geometr": 32, "geophys": 117, "georg": 179, "geq": 27, "gereet": 74, "germain": 147, "german": [68, 131], "germancar": 169, "germani": [117, 131, 169], "get": [4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 31, 34, 35, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 77, 79, 80, 89, 90, 95, 96, 101, 102, 103, 104, 106, 108, 109, 112, 116, 117, 118, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 141, 144, 145, 151, 152, 154, 158, 160, 164, 165, 167, 169, 172, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210], "get_authors_tone_descript": 140, "get_company_pag": 141, "get_cost": [11, 13], "get_current_weath": [116, 139], "get_data": 102, "get_first_ten_countri": 37, "get_food_ment": 137, "get_format_instruct": [116, 117, 135], "get_group": 169, "get_height": 198, "get_last_ten_countri": 37, "get_num_token": [117, 132, 143], "get_offset": 194, "get_openai_callback": [137, 138], "get_original_tweet": [140, 144], "get_relevant_docu": [116, 133, 142], "get_similar_public_figur": 140, "get_string_list": 37, "get_temperatur": 38, "get_text": [137, 138, 144], "get_tool": 128, "get_video_transcript": 144, "get_width": 198, "get_x": 198, "get_xlim": 195, "get_xticklabel": 198, "get_yticklabel": 198, "getattr": [102, 103, 142, 195], "getcwd": 80, "getcwdb": 69, "getdata": 102, "getdatalim": 194, "getenv": [116, 117, 129, 131, 132, 133, 134, 136, 137, 139, 140, 142, 143, 144], "getidea": [132, 136], "getlogg": 133, "getrandbit": 81, "getrespons": 128, "getroot": 68, "getstat": 81, "ggplot": 147, "gh_jid": [137, 138], "ghost": 168, "gi": 171, "giant": [119, 130, 133], "gibl": 168, "giddi": 130, "gif": 128, "giffin": 130, "gift": 37, "gigabyt": 202, "gigalith": 168, "gil": 144, "gini": 117, "giphi": 128, "girafarig": 168, "giratinaalt": 168, "giratinaorigin": 168, "gist": [132, 191], "gist_earth": 192, "gist_earth_r": 192, "gist_grai": 192, "gist_gray_r": 192, "gist_heat": 192, "gist_heat_r": 192, "gist_ncar": 192, "gist_ncar_r": 192, "gist_rainbow": 192, "gist_rainbow_r": 192, "gist_stern": 192, "gist_stern_r": 192, "gist_yarg": 192, "gist_yarg_r": 192, "git": [118, 119, 176, 177, 178, 179, 180], "gitattribut": 180, "gitchangelog": 118, "github": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 90, 116, 118, 119, 143, 147, 148, 174, 175, 176, 177, 178, 179, 180, 181, 182], "githubusercont": 180, "gitignor": 118, "gitlab": [141, 144], "give": [14, 15, 24, 34, 37, 39, 43, 44, 45, 47, 49, 51, 52, 71, 74, 80, 82, 88, 90, 95, 101, 102, 115, 116, 117, 118, 129, 130, 132, 133, 134, 137, 138, 139, 140, 143, 144, 145, 150, 151, 153, 154, 157, 158, 159, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202], "giveawai": 192, "given": [1, 3, 4, 27, 28, 29, 32, 35, 37, 40, 42, 43, 47, 48, 49, 52, 56, 59, 61, 65, 66, 70, 71, 74, 77, 80, 84, 87, 88, 91, 94, 96, 103, 106, 116, 117, 129, 130, 132, 133, 135, 136, 139, 143, 144, 145, 150, 151, 154, 158, 171, 173, 174, 175, 176, 177, 178, 179, 180, 190, 194, 195, 197, 200, 202], "gkdive": 147, "gkhandl": 147, "gkkick": 147, "gkposit": 147, "gkreflex": 147, "gl": 117, "glaceon": 168, "glacial": 130, "glacier": 130, "glad": 145, "glali": 168, "glaliemega": 168, "glameow": 168, "glanc": 90, "glare": 130, "glass": 130, "glassi": 130, "gleam": 130, "glean": [137, 138], "glenbrook": 130, "gligar": 168, "glimps": [172, 197], "gliscor": 168, "glob": [133, 136, 175, 177, 178, 180], "global": [22, 36, 70, 79, 86, 88, 96, 133, 140, 179], "global_lang": 75, "global_step": 178, "global_var": [75, 76], "globalglob": 75, "gloom": 168, "glori": 130, "gloriou": 130, "glove": 145, "glu": 188, "gmail": 128, "gmtoff": 61, "gmtoff_fract": 61, "gnbu": 192, "gnbu_r": 192, "gnome": 171, "gnuplot": 192, "gnuplot2": 192, "gnuplot2_r": 192, "gnuplot_r": 192, "go": [4, 5, 7, 8, 11, 16, 17, 18, 19, 24, 27, 37, 38, 46, 47, 49, 51, 71, 74, 78, 89, 95, 96, 98, 101, 104, 106, 116, 117, 118, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 150, 168, 185, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210], "goal": [0, 117, 129, 130, 132, 133, 134, 138, 140, 141, 143, 144, 145, 155, 174, 175, 178, 179, 180, 183, 187, 190, 191, 199, 210], "god": [55, 130], "goe": [11, 12, 13, 14, 15, 16, 17, 36, 66, 70, 71, 72, 80, 101, 106, 118, 137, 138, 140, 145, 161, 164, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 191, 197], "gogh": 24, "gogoat": 168, "going_modular": [176, 177, 178, 179, 180, 182, 183], "goku": [178, 180], "golbat": 168, "gold": [130, 137, 138], "goldeen": 168, "goldman": 130, "golduck": 168, "golem": 168, "golett": 168, "golurk": 168, "gone": [130, 145, 171, 175, 178, 179, 180, 190, 194, 200], "gonna": [145, 200], "gonzalez": 118, "goo": 117, "good": [16, 17, 18, 19, 36, 47, 52, 54, 68, 71, 72, 74, 77, 80, 85, 89, 94, 116, 117, 118, 119, 128, 129, 130, 132, 133, 135, 136, 137, 140, 141, 143, 144, 145, 147, 148, 157, 171, 172, 173, 174, 175, 177, 178, 179, 180, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "good_or_bad": 137, "good_str": 116, "goodorbad": 137, "goodra": 168, "googl": [24, 52, 84, 103, 116, 117, 118, 127, 128, 133, 144, 145, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 200], "google_api_kei": 117, "google_cse_id": 117, "googlecod": 118, "googlemap": 117, "googlesearchapiwrapp": 117, "googol": 91, "goomi": 168, "gorebyss": 168, "got": [37, 40, 76, 80, 92, 93, 104, 130, 133, 143, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 196, 197, 210], "got_stream": 130, "gothita": 168, "gothitel": 168, "gothorita": 168, "gotten": [130, 178], "gourgeistaverag": 168, "gourgeistlarg": 168, "gourgeistsmal": 168, "gourgeistsup": 168, "govern": [11, 13, 130, 194, 200], "gplv2": 118, "gpt": [116, 117, 129, 132, 133, 136, 137, 138, 140, 143, 144, 145, 209], "gpt3": 143, "gpt4": [116, 117, 132, 137, 138, 143, 145], "gpt_index": 116, "gpu": [172, 173, 175, 176, 177, 178, 179, 180, 182], "gr": 180, "grab": [134, 138, 140, 143, 198], "gracefulli": [49, 166], "grad": [116, 130, 141, 172, 173, 174, 175, 176, 181, 182], "grad_fn": [171, 173, 174, 179], "grade": [43, 44, 45, 117, 130, 147, 158, 194], "graded_output": 117, "gradient": [18, 19, 172, 173, 174, 175, 177, 179, 210], "gradual": [130, 179], "graduat": [130, 197], "graham": [116, 130, 132, 133, 134], "grai": [174, 189, 192, 194, 195, 202], "graido": 180, "grain": 143, "grainger": 118, "granbul": 168, "grand": 130, "grandeur": 130, "grandli": 130, "grandpar": 103, "grant": [45, 130, 141], "granul": 130, "grape": 47, "graph": [0, 4, 132, 148, 172, 178, 191, 194, 198, 200], "graph_obj": 11, "graphic": [24, 71, 130, 171, 176, 179, 195, 197, 201, 203], "grasp": 132, "grass": 168, "grate": [116, 140], "grather": 140, "gravel": 168, "graviti": [74, 90, 93, 99], "gray_r": 192, "grayscal": [9, 17, 19, 174, 175, 189], "great": [42, 96, 104, 116, 117, 128, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 174, 175, 177, 179, 188, 194, 195, 200, 201, 202, 203], "greater": [43, 45, 46, 48, 49, 72, 80, 82, 90, 95, 104, 130, 150, 153, 157], "greatest": [177, 179, 180], "greatli": 130, "greek": [28, 29, 101, 118, 132], "green": [16, 17, 18, 19, 47, 89, 130, 138, 171, 172, 174, 178, 189, 192, 193, 195], "greenhous": [137, 138], "greens_r": 192, "greet": [37, 74, 77, 94, 102], "greet_modul": 80, "greg": [128, 137, 138, 140, 141, 145], "gregori": [137, 138], "gregorykamradt": [116, 117, 132, 133], "grei": [16, 17, 18, 19, 140, 187, 189, 192, 193, 198], "greninja": 168, "gretta": 77, "grew": [130, 141], "greyish": 189, "greys_r": 192, "grid": [8, 11, 13, 148, 150, 151, 180, 187, 192, 197, 199, 200, 201, 202], "grid_kw": 192, "gridlin": 148, "gridsiz": 197, "gridspec": 202, "gridspec_kw": [197, 202], "grigi": 118, "grill": 131, "grim": 130, "grimer": 168, "grind": 130, "grip": [196, 201], "grotl": 168, "groudon": 168, "groudonprim": 168, "ground": [101, 116, 117, 130, 136, 168, 172, 173, 179, 180], "group": [0, 24, 116, 130, 133, 143, 157, 169, 175, 179, 187, 190, 194, 196, 197, 198, 200], "groupbi": [169, 195, 197], "grouper": 197, "grove": 130, "grovyl": 168, "grow": [22, 74, 83, 94, 116, 130, 133, 134, 136, 145, 179], "growlith": 168, "grown": [136, 143], "growth": [11, 12, 13, 130, 133, 137, 138, 144, 200], "gruesom": 130, "grumpig": 168, "gt": [80, 137, 138], "gti": 130, "gtm": 138, "guancial": 116, "guarante": [54, 68, 71, 117, 130, 140, 178, 202], "guard": 130, "guava": [47, 53, 56, 198], "guess": [14, 15, 38, 72, 133, 140, 145, 151, 157, 172, 173, 175, 177, 178, 179, 186, 195, 196, 198, 199], "guest": [45, 130], "guestim": 143, "gui": [24, 71, 130, 133, 188, 192, 194, 198, 200], "guid": [0, 22, 25, 107, 111, 117, 118, 134, 141, 171, 172, 174, 175, 176, 178, 180, 181, 182, 188, 189, 191], "guidanc": [0, 189], "guidebook": 180, "guidelin": 171, "guilti": 130, "gulpin": 168, "gun": 186, "gunmet": 189, "gurdurr": 168, "gusti": 116, "gusto": 144, "gutaucki": 118, "gutenberg": 116, "gutenbergload": 116, "guthri": 186, "gweriniaeth": 117, "gyarado": 168, "gyaradosmega": 168, "gz": [80, 174], "h": [0, 35, 39, 47, 48, 49, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 93, 95, 153, 174, 175, 177, 179, 186, 196, 198], "h1": 154, "h2": 154, "ha": [3, 7, 11, 13, 16, 17, 18, 19, 22, 24, 27, 28, 29, 32, 34, 36, 37, 38, 39, 40, 42, 44, 45, 47, 49, 51, 52, 55, 56, 57, 59, 65, 66, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 83, 87, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 106, 116, 117, 128, 130, 131, 132, 133, 136, 137, 138, 139, 140, 143, 144, 145, 147, 152, 153, 154, 157, 158, 159, 160, 163, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202], "haas": 118, "habit": 200, "hack": [130, 197], "hackathon": [116, 117], "hacker": [130, 141], "hacker_new": 68, "hackernew": 116, "hackl": 117, "had": [36, 37, 70, 74, 77, 80, 116, 130, 132, 133, 134, 140, 143, 144, 145, 153, 173, 174, 175, 177, 179, 180, 181, 182, 187, 191, 192, 195, 196, 197, 198, 199, 200, 202], "hadlei": [190, 200], "hadn": [130, 133, 175], "hale": 130, "half": [53, 116, 130, 143, 145, 171, 173, 178, 189, 199], "halfwai": 130, "hall": 143, "hallucin": 144, "halt": 71, "halv": [116, 130, 174], "hamm": 30, "hamming_distance_a": 30, "hamming_distance_b": 30, "hamper": 80, "hamster": 179, "hand": [0, 47, 55, 56, 68, 75, 77, 98, 101, 102, 130, 133, 134, 136, 139, 140, 145, 171, 172, 173, 175, 177, 178, 180, 187, 190, 191, 192, 195, 198, 200, 202], "handcraft": [175, 179], "handel": [22, 73], "handi": [24, 116, 133, 147, 148, 157, 168, 169, 175, 179, 182, 190, 191, 194, 195, 197, 200, 201, 202], "handl": [5, 24, 34, 35, 36, 49, 52, 65, 66, 68, 69, 70, 72, 77, 117, 118, 130, 132, 144, 150, 152, 158, 166, 173, 175, 177, 178, 179, 180, 191, 198, 200], "handle_error_respons": 130, "handler": 49, "handwritten": [5, 7, 16, 18, 174], "hang": [130, 171], "hank": 77, "happen": [27, 34, 35, 36, 40, 47, 48, 96, 98, 103, 104, 116, 117, 130, 132, 133, 134, 140, 141, 145, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188], "happi": [4, 11, 13, 49, 52, 53, 74, 87, 94, 101, 128, 140, 145, 172, 191, 196, 200], "happin": 13, "happind": [11, 13], "happini": 168, "har": [175, 179], "hard": [22, 39, 68, 78, 89, 94, 117, 127, 130, 132, 133, 134, 137, 138, 140, 143, 145, 171, 172, 173, 176, 178, 179, 180, 202], "hardcod": [172, 180], "hardcor": 143, "harder": [130, 175, 178], "hardli": [116, 130], "hardtop": 169, "hardwar": [18, 19, 51, 98, 116, 130, 133, 135, 171, 172, 174, 175, 177, 178, 179, 180, 182], "hariyama": 168, "harj": 130, "harmless": 188, "harmon": [1, 27], "harper": 77, "harri": [102, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167], "harsh": 130, "harvard": [130, 133, 197], "has_w2": 90, "hasattr": [102, 140, 144], "hash": [52, 84, 89, 130], "hashabl": 56, "hashtag": 140, "hasn": [172, 173, 175, 178], "hassl": 116, "hat": [32, 175, 178], "hatch": 147, "hatchback": [157, 158, 169], "hate": [131, 133], "haunt": 130, "haunter": 168, "have": [0, 1, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 23, 27, 31, 32, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 104, 106, 109, 115, 116, 117, 118, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210], "haven": [59, 130, 133, 172, 173, 177, 179, 192, 194, 195, 200], "hawk": 39, "hawlucha": 168, "haxoru": 168, "hazard": 130, "hazel": 130, "hazi": 202, "he": [39, 45, 52, 68, 71, 72, 101, 116, 117, 130, 133, 136, 143, 144, 145, 175, 179, 201], "head": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 117, 130, 136, 140, 145, 147, 157, 168, 169, 171, 173, 177, 180, 186, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 202, 204], "headcount": 139, "header": [74, 77, 118, 128, 130, 160, 161, 164, 166, 167, 168, 197, 202], "headlin": [127, 143], "headquart": 130, "heal": 130, "health": [11, 13, 130, 135, 140, 143, 144, 173], "healthcar": [140, 144], "healthi": 130, "healthkit": 117, "heap": 130, "hear": [130, 137, 138, 141, 143], "heard": [130, 145, 180], "heart": [26, 137, 138, 173, 179], "hearti": [130, 131], "heat": [116, 131, 202, 205], "heathkit": [117, 130], "heatmap": [202, 204], "heatmor": 168, "heatran": 168, "heaven": 130, "heavi": [147, 175, 197, 200], "heavier": 130, "heaviest": 130, "heavili": [130, 143, 192, 193], "hedg": 130, "heedless": 130, "heel": 130, "hei": [39, 54, 128, 137, 138, 145, 179], "height": [53, 95, 117, 130, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 188, 191, 192, 198], "height_ratio": 197, "heinlein": 130, "held": [117, 200], "heliolisk": 168, "helioptil": 168, "hello": [22, 24, 35, 36, 37, 39, 43, 44, 47, 52, 53, 54, 56, 66, 70, 74, 77, 80, 84, 89, 90, 92, 93, 94, 95, 96, 100, 102, 103, 128, 182, 194], "hello009": 52, "hello99": 52, "hello99world66": 52, "hello_world": 182, "hellohellohello": 52, "helloworld": [47, 48, 49, 52, 53, 54, 56], "help": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 39, 42, 47, 48, 49, 53, 59, 60, 61, 64, 65, 71, 72, 74, 78, 80, 85, 88, 90, 96, 101, 106, 108, 112, 116, 117, 128, 130, 131, 132, 133, 134, 136, 137, 138, 141, 143, 144, 145, 147, 148, 150, 157, 158, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 184, 187, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 210], "helper": [47, 117, 129, 134, 137, 138, 173, 174, 176, 183], "helper_funct": [173, 174, 177, 179, 180], "helpless": 130, "helsinki": 68, "henc": [42, 43, 47, 48, 49, 51, 52, 53, 54, 57, 59, 68, 75, 79, 80, 92, 94, 95, 96, 98, 101, 104, 133, 152, 171, 172, 173, 179, 186, 187, 190, 191, 198, 199, 200, 202], "hendrik": 118, "her": [94, 116, 130, 140, 143, 145, 199], "heracross": 168, "heracrossmega": 168, "herb": 131, "herdier": 168, "here": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 34, 35, 36, 37, 38, 39, 45, 47, 48, 49, 51, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 101, 102, 103, 104, 107, 108, 111, 112, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 138, 139, 140, 143, 144, 145, 152, 153, 154, 158, 159, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210], "herebi": 130, "hereon": 202, "heroin": 119, "heroku": 130, "heterogen": [54, 157, 159, 165], "hex": [51, 52, 189, 191, 193], "hexa": 80, "hexadecim": [51, 52, 80, 91, 94], "hexagon": 191, "hexpoint": 106, "hf": 180, "hh": 52, "hhmm": [60, 61], "hi": [39, 55, 66, 71, 94, 116, 117, 130, 132, 136, 140, 143, 144, 179, 199, 200], "hiberfil": 69, "hibern": 138, "hidden": [0, 7, 34, 101, 116, 130, 173, 174, 175, 176, 178, 179, 181, 182], "hidden_unit": [173, 174, 175, 176, 181, 182], "hide": [36, 38, 101, 130, 189, 197], "hiden": 174, "hierarch": [157, 158, 160, 167, 204], "hierarchi": 83, "high": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 81, 116, 130, 136, 138, 140, 141, 143, 144, 147, 148, 150, 151, 157, 171, 174, 175, 177, 178, 179, 187, 191, 196, 197, 198, 199, 201], "high_end": 138, "higher": [11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 79, 93, 98, 119, 130, 141, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 190, 191, 197, 199], "higher_order_funct": 36, "highest": [8, 80, 127, 130, 157, 171, 173, 174, 175, 178, 186, 191, 194, 196, 198], "highli": [0, 68, 102, 106, 117, 130, 150, 174, 179, 180, 187, 191, 192, 194, 195, 196, 197, 198, 201], "highlight": [130, 140, 145, 179, 180, 188, 190, 202, 204], "hike": 145, "hill": [4, 5], "hilltop": 130, "him": [116, 130, 134, 144], "himself": [106, 117, 130, 143, 144], "hint": [72, 129, 140, 155, 169, 171, 173, 174, 175, 177, 179, 198], "hip": 130, "hippopota": 168, "hippowdon": 168, "hire": [130, 133, 143], "hispan": 186, "hist": [8, 11, 13, 147, 148, 192, 193, 201, 202], "hist_kw": 188, "histogram": [8, 11, 13, 188, 191, 192, 193, 195, 198, 201], "histohram": [8, 11, 13], "histori": [8, 117, 130, 136, 139, 145], "histplot": 193, "histtyp": 201, "hit": [70, 180], "hitch": 130, "hitmonchan": 168, "hitmonle": 168, "hitmontop": 168, "hl": 189, "hls_palett": 189, "hmm": [140, 179, 180, 197, 201], "hmmm": [178, 199], "hmph": 130, "hn": 130, "hnloader": 116, "ho": [52, 168, 177, 178, 179, 180], "hoax": 130, "hobbi": 158, "hoffman": 186, "hold": [16, 17, 18, 19, 53, 76, 77, 90, 106, 116, 132, 134, 137, 138, 151, 175, 180, 182, 194, 197, 199, 202], "holder": [143, 144], "hole": 130, "holi": 179, "hollow": 130, "home": [101, 116, 130, 139, 141, 171], "home_print": 139, "homebrew": 134, "homemad": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "homepag": [144, 180], "homework": [191, 192, 195, 198, 200], "homogen": [54, 151], "hon": 24, "honchkrow": 168, "honda": 169, "honedg": 168, "honei": 49, "honest": 194, "honestli": [130, 192, 196, 197, 200], "honk": 96, "honor": [118, 200], "hood": [117, 138, 196, 197], "hook": [117, 175], "hoopahoopa": 168, "hoorai": 43, "hoothoot": 168, "hootsuit": 145, "hope": [47, 52, 74, 95, 130, 133, 140, 171, 186, 190, 192, 198, 200, 201], "hopefulli": [130, 132, 133, 140, 143, 174, 175, 177, 179, 180], "hoppip": 168, "horac": [175, 179], "horitzont": 154, "horizon": [130, 175, 199], "horizont": [31, 39, 52, 117, 150, 154, 175, 179, 187, 194, 195, 196, 197, 198, 200, 202], "horizontalalign": 179, "horowitz": 143, "horrai": 43, "horribl": 130, "horrifi": [130, 133], "hors": 130, "horsea": 168, "horsepow": [157, 158, 168, 169], "hose": 172, "hospit": 130, "host": [129, 130, 143, 171, 178, 180], "hostnam": [71, 178], "hot": [25, 107, 111, 130, 131, 180, 192], "hot_r": 192, "hottest": 117, "hotz": 179, "houndoom": 168, "houndoommega": 168, "houndour": 168, "hour": [60, 61, 63, 64, 65, 95, 103, 130, 145, 147, 172, 179, 180, 199, 210], "hous": [0, 102, 130, 133, 145, 171, 200], "how": [0, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 35, 36, 37, 38, 39, 42, 44, 47, 48, 49, 51, 54, 55, 57, 59, 65, 68, 70, 71, 72, 75, 76, 77, 79, 81, 82, 84, 93, 94, 95, 98, 101, 102, 103, 104, 109, 116, 117, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 157, 158, 159, 161, 163, 164, 165, 166, 167, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 190, 191, 195, 197, 198, 199, 200, 201, 202, 207, 210], "how_to_describe_ton": 140, "howard": [172, 177], "howdi": 39, "howev": [38, 39, 43, 44, 47, 54, 56, 57, 66, 71, 72, 76, 89, 90, 92, 93, 96, 98, 101, 102, 103, 104, 106, 130, 133, 139, 143, 144, 145, 151, 152, 153, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 203], "hp": 168, "hr": 133, "href": 171, "hrv": 117, "hspace": [16, 17, 18, 19, 197], "hstack": [8, 11, 150, 201], "hsv": [190, 192, 195, 196, 198, 199], "hsv_r": [192, 195], "html": [24, 25, 52, 53, 68, 101, 107, 111, 117, 118, 130, 136, 137, 138, 142, 143, 144, 145, 153, 157, 172, 173, 174, 189, 200, 204], "http": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 116, 117, 118, 128, 130, 133, 134, 136, 137, 138, 140, 141, 142, 144, 145, 147, 153, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 193, 200, 204], "httplib": 128, "httplib_request_kw": 128, "httplib_respons": 128, "hu": 49, "hub": [116, 177, 179], "hubspot": 145, "hue": [189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "hue_kw": [201, 202], "hue_ord": [190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "hug": 175, "huge": [32, 92, 116, 130, 133, 167, 177, 179, 189, 194, 197, 200, 202], "huggingfac": [174, 177, 179], "huggingface_hub": 180, "huh": 130, "human": [0, 38, 39, 57, 89, 98, 116, 117, 130, 131, 139, 140, 143, 145, 172, 180, 201, 209], "human_input": 117, "human_message_prompt": [129, 131, 145], "human_message_prompt_combin": 145, "human_message_prompt_map": [143, 145], "human_templ": [129, 131, 143, 145], "humanmessag": [116, 117, 131, 135, 137, 139, 145], "humanmessageprompttempl": [116, 117, 129, 131, 135, 143, 145], "humili": 130, "hun": 117, "hundr": [38, 95, 130, 171, 202], "hung": 130, "hungari": 191, "hungri": [44, 177], "hunt": [40, 57, 74, 94, 179], "huntail": 168, "hunter": 130, "husband": [130, 145], "hush": 130, "husl": [189, 198], "hustl": 143, "huyen": 180, "hwc": [174, 175], "hwchase17": 140, "hybrid": [133, 179, 197], "hydreigon": 168, "hyperbol": 82, "hyperparamat": 210, "hyperparamet": [172, 173, 174, 176, 178, 179, 182], "hypno": 168, "hypnot": 119, "hypot": [80, 82], "hypothesi": [7, 118, 119], "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 49, 51, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 107, 109, 110, 111, 113, 118, 119, 120, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 150, 151, 152, 153, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 172, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 209], "i1": 31, "i2": 31, "i3": 31, "i9": 180, "i_1": 31, "i_2": 31, "i_3": 31, "i_m": 31, "i_n": 31, "i_num": 72, "ia": [37, 186], "iat": 157, "ibm": [52, 130], "ic": [9, 130, 137, 168], "icefir": [192, 194, 195, 196, 197, 200, 201, 202], "icefire_r": 192, "iceland": [11, 13, 71], "ici": 130, "icon": [24, 179, 210], "id": [43, 74, 77, 80, 96, 102, 116, 117, 133, 137, 138, 147, 167, 171, 176, 186, 187, 198, 199, 200], "id_var": [196, 202], "idd": 117, "iddob": 118, "idea": [28, 29, 34, 35, 85, 89, 94, 96, 106, 117, 118, 128, 130, 132, 133, 136, 140, 141, 143, 145, 172, 173, 174, 176, 177, 178, 179, 180, 192, 194, 195, 196, 200, 201, 202], "ideal": [48, 135, 144, 172, 173, 174, 177, 178, 179, 180, 186, 187, 189, 194, 197, 198, 200, 201], "idel": 130, "ident": [28, 29, 118, 130, 137, 138, 150, 151, 153, 157, 167, 191, 198, 199, 201], "identif": 8, "identifi": [0, 7, 22, 37, 39, 52, 57, 71, 74, 79, 80, 83, 89, 90, 95, 96, 100, 101, 116, 130, 137, 138, 140, 141, 157, 158, 159, 162, 164, 166, 174, 180, 198, 200], "identitytransform": 195, "ideologi": 179, "idual": 179, "idx": [175, 179], "idx1": 174, "idx3": 174, "ieee754_realbin": 30, "ifetch": 196, "ifram": 180, "igglybuff": 168, "igma": 29, "ignor": [47, 48, 49, 84, 89, 118, 130, 132, 138, 161, 164, 172, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204], "ignore_index": [162, 163], "igor": 176, "ii": [25, 107, 111, 130, 190], "iii": 186, "iinfo": 155, "ij": [28, 29, 31], "ill": [90, 130], "illeg": [70, 89], "illumin": 189, "illumis": 168, "illustr": [3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 35, 47, 48, 56, 71, 72, 85, 94, 106, 130, 175, 179, 186, 187, 188, 195, 197, 201, 202], "iloc": [117, 157, 168], "imag": [0, 4, 5, 7, 9, 16, 17, 18, 19, 24, 25, 68, 78, 91, 102, 107, 111, 117, 130, 140, 171, 172, 173, 174, 176, 181, 182, 184, 187, 189, 191, 200, 201, 202], "image01": [175, 176, 182], "image02": 175, "image101": 175, "image102": 175, "image154": 175, "image155": 175, "image167": 175, "image24": 175, "image25": 175, "image37": 175, "image_batch": 179, "image_class": 175, "image_conv_feature_map": 179, "image_out_of_conv": 179, "image_out_of_conv_flatten": 179, "image_out_of_conv_flattened_reshap": 179, "image_patch_1": 179, "image_patch_1_posit": 179, "image_patch_2": 179, "image_patch_2_posit": 179, "image_patch_3": 179, "image_patch_3_posit": 179, "image_path": [175, 176, 177, 178, 179, 180, 181, 182], "image_path_list": 175, "image_permut": 179, "image_resolut": 179, "image_s": [16, 17, 18, 19, 177, 178], "image_transform": 177, "imageclassif": [177, 178, 179, 180], "imagefold": [176, 181, 182], "imagefoldercustom": 175, "imagenet": [173, 175, 177, 178, 179, 180], "imagenet1k_v1": 177, "imagenet_v1": 177, "imagenet_v2": 177, "imageri": 140, "imagin": [39, 96, 130, 133, 139, 157, 172, 173, 174, 178, 179, 180], "imaginari": [51, 56, 70, 91, 92, 155, 190], "imbal": 188, "imdisk": 69, "img": [69, 174, 175, 177, 180, 181, 182, 191], "img_as_arrai": 175, "img_batch": [175, 181, 182], "img_custom": 175, "img_permut": 175, "img_singl": [175, 181, 182], "img_siz": 179, "imgseek": 24, "imit": [12, 130], "immedi": [35, 44, 47, 48, 65, 66, 71, 74, 87, 106, 130, 179, 180, 186, 210], "immens": [141, 188], "immers": 143, "immut": [47, 52, 53, 54, 55, 56, 74, 91, 92, 154], "imo": 118, "imp": 80, "impa": 144, "impact": [116, 117, 140, 143, 190, 195], "imperfect": 51, "implement": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 36, 37, 38, 49, 51, 53, 54, 72, 74, 80, 89, 98, 101, 103, 104, 106, 118, 127, 130, 144, 145, 153, 171, 172, 173, 174, 177, 179, 190, 191, 192, 202, 209, 210], "impli": [52, 53, 68, 69, 89, 95, 130], "implic": [130, 144, 195], "implicit": [52, 106, 140], "implicitli": [51, 89, 106, 130, 169], "import": [0, 1, 22, 24, 25, 27, 28, 29, 30, 31, 32, 37, 39, 42, 48, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 79, 81, 82, 84, 88, 89, 90, 92, 96, 98, 100, 101, 106, 107, 111, 116, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "import_ipynb": 80, "importantli": 174, "importerror": 70, "importlib": 80, "imposs": [94, 134, 179, 180, 197], "impress": [116, 130, 140, 143], "improp": 70, "improv": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 74, 117, 118, 132, 133, 140, 141, 144, 157, 166, 171, 172, 174, 175, 177, 178, 179, 180, 209], "impur": 130, "imshow": [16, 17, 18, 19, 174, 175, 177, 179], "in_channel": [174, 175, 176, 179, 181, 182], "in_featur": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "inaccur": 118, "inan": 197, "inbox": [128, 130, 133], "inbuilt": [91, 154, 161], "inc": 37, "incas": 171, "inch": [130, 147], "incid": [186, 198], "incit": 130, "includ": [6, 24, 25, 34, 39, 44, 47, 48, 49, 52, 53, 68, 71, 80, 84, 85, 87, 92, 98, 102, 106, 107, 109, 111, 116, 117, 118, 127, 128, 129, 130, 132, 133, 140, 141, 143, 144, 145, 148, 151, 154, 157, 158, 169, 172, 174, 175, 176, 177, 179, 180, 181, 182, 186, 187, 192, 196, 202, 203, 207, 210], "inclus": [80, 81, 151, 157, 189], "incom": [68, 77, 101, 117, 135, 191], "incompat": 179, "incomplet": 89, "inconsist": [70, 171], "incorpor": [130, 131, 174, 175, 178, 179, 187], "incorport": 131, "incorrect": [44, 48, 70, 89, 98, 116, 117, 180], "increas": [7, 11, 12, 13, 14, 15, 16, 17, 48, 49, 53, 89, 132, 133, 137, 138, 143, 144, 173, 174, 175, 177, 178, 179, 180, 189, 191, 195, 196, 199, 200, 202], "incred": [140, 178], "incredibli": 129, "increment": [47, 48, 49, 76, 104], "ind": 53, "inde": [118, 130, 195, 196, 197, 198, 202], "indefinit": 48, "indent": [22, 43, 44, 46, 47, 49, 68, 70, 74, 76, 100, 118, 137, 138], "indentationerror": [70, 89], "independ": [4, 5, 12, 14, 15, 16, 17, 98, 117, 128, 130, 141, 187, 190, 198, 199], "index": [3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 28, 29, 30, 35, 39, 48, 52, 55, 56, 65, 70, 71, 80, 92, 94, 133, 134, 136, 143, 150, 151, 168, 169, 172, 173, 174, 175, 177, 178, 179, 180, 191, 198, 200, 201, 202], "index1": 158, "index2": 158, "index_nam": [134, 143], "index_on": 157, "indexerror": [52, 53, 54], "indi": 117, "india": [37, 53, 54, 57, 68, 137, 140], "indianr": 193, "indic": [1, 8, 12, 16, 17, 18, 19, 43, 52, 53, 54, 65, 68, 70, 89, 130, 132, 152, 161, 162, 165, 172, 176, 177, 178, 179, 180, 181, 182, 186, 190, 192, 194, 196, 197, 198, 200], "indirect": 103, "indirectli": 72, "individu": [52, 55, 68, 80, 130, 138, 140, 143, 152, 173, 176, 179, 188, 192, 194, 196, 197, 198, 199, 200, 201, 203], "indivis": 200, "indonesia": [54, 68], "indulg": 116, "industri": [0, 130, 133, 135, 143, 144, 158, 159, 171], "ineff": 130, "ineffici": [47, 78], "inexpens": 130, "inexplic": 136, "inf": [34, 80, 153, 155, 195], "infam": 179, "infer": [90, 133, 139, 143, 154, 157, 158, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 191, 195, 197, 199, 200, 201, 202], "inference_mod": [173, 174, 175, 176, 177, 180, 181, 182], "inferior": 130, "infernap": 168, "inferno": 192, "inferno_r": 192, "infin": [27, 28, 29, 82, 153, 155], "infinit": [28, 29, 48, 51, 66, 78, 95, 171, 174, 177], "infit": 34, "inflow": 130, "influenc": [130, 138, 173, 180], "influenti": 178, "info": [18, 19, 84, 102, 103, 106, 118, 133, 155, 176, 177, 178, 179, 180, 181, 182, 193], "inform": [0, 6, 8, 25, 45, 59, 68, 69, 71, 76, 90, 106, 107, 109, 111, 116, 117, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 157, 158, 174, 175, 177, 178, 179, 180, 194, 196, 198, 199, 200, 201, 202, 207], "informatin": 117, "infrastructur": 130, "infti": [27, 28, 29, 30], "ing": 39, "ingredi": [116, 173, 175], "inher": [0, 189], "inheret": 178, "inherit": [22, 71, 72, 105, 106, 118, 175, 179], "inhomogen": 152, "ini": 118, "inimit": 130, "init": [6, 8, 106, 109, 116, 132, 134, 143, 178, 207], "init_notebook_mod": 11, "initi": [3, 11, 12, 13, 18, 19, 34, 35, 47, 48, 49, 52, 53, 56, 68, 75, 81, 83, 90, 96, 101, 102, 103, 106, 117, 118, 130, 132, 133, 134, 143, 150, 151, 163, 172, 173, 175, 179, 190, 193, 201, 202], "initialize_ag": [116, 117, 127, 128, 132], "initialzi": 172, "inkai": 168, "inlcud": 179, "inlin": [11, 27, 30, 79, 112, 147, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "inmemorystor": 133, "inner": [2, 7, 36, 37, 47, 48, 49, 75, 132, 153, 157, 171, 195, 196, 197], "inner_arg": 195, "inner_f": 195, "inner_fun": 75, "inner_func": 96, "inner_funct": 96, "inner_kwarg": 195, "innermost": [48, 49], "innov": [117, 140, 144], "innumer": 130, "inplac": [157, 161, 162, 163, 164, 166, 167, 168, 177, 178, 179, 180, 198], "input": [0, 4, 5, 7, 11, 13, 17, 18, 19, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 85, 88, 90, 91, 92, 93, 95, 98, 101, 102, 103, 104, 106, 108, 112, 116, 117, 118, 127, 128, 130, 135, 138, 139, 140, 152, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 175, 176, 177, 178, 181, 182, 184, 190, 194, 195, 196, 200, 201, 202, 203], "input_docu": [130, 134, 141, 143, 144, 145], "input_featur": 173, "input_formatt": 138, "input_i": 173, "input_industri": 135, "input_kei": [117, 130], "input_list": 130, "input_param_nam": 13, "input_param_name_1": 11, "input_param_name_2": 11, "input_s": [175, 177, 178, 179, 180], "input_shap": [174, 175, 176, 177, 178, 181, 182], "input_to_model": 178, "input_vari": [116, 117, 131, 132, 133, 135, 140, 141, 144], "inputsid": 103, "insan": [116, 117, 130], "insert": [52, 55, 56, 84, 102, 116, 117, 128, 141, 150, 158, 167], "insid": [34, 36, 37, 38, 39, 40, 43, 44, 46, 49, 52, 53, 54, 55, 56, 57, 66, 68, 69, 71, 74, 75, 76, 77, 80, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 101, 102, 103, 104, 106, 118, 130, 143, 145, 157, 171, 172, 174, 176, 177, 178, 179, 180, 182, 191, 196, 197, 198, 199, 202], "insight": [0, 130, 140, 141, 143, 144, 191, 195, 196, 198], "inspect": [106, 164, 172, 174, 175, 178, 179], "inspir": [7, 18, 19, 56, 130, 140, 143, 179], "insrantli": 24, "inst_creat": 106, "insta": 152, "instacart": 144, "instagraminstagram": 141, "instal": [68, 80, 87, 116, 117, 118, 127, 132, 133, 134, 136, 139, 144, 171, 173, 174, 175, 177, 178, 179, 180, 188], "instanc": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 37, 47, 51, 53, 61, 68, 70, 71, 80, 84, 89, 90, 92, 96, 103, 106, 130, 153, 154, 157, 164, 165, 172, 173, 174, 175, 176, 179, 180, 181, 182, 194, 197, 202, 203], "instant": 79, "instanti": [51, 59, 101, 102, 106, 117, 172, 173, 174, 176, 178, 179, 180, 181, 182], "instantli": 49, "instead": [7, 9, 16, 17, 18, 19, 24, 35, 36, 38, 40, 44, 48, 70, 80, 90, 98, 101, 102, 103, 104, 118, 130, 131, 133, 134, 141, 153, 157, 159, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 186, 189, 190, 192, 193, 194, 196, 197, 198, 199, 200, 202], "instens": 175, "instinct": 130, "institut": [130, 174], "instruct": [0, 6, 43, 66, 71, 89, 109, 117, 118, 128, 132, 137, 138, 139, 143, 144, 145, 176, 187, 206, 207], "insur": 133, "int": [16, 17, 18, 19, 24, 34, 36, 37, 47, 48, 51, 52, 53, 54, 70, 71, 72, 84, 91, 92, 93, 94, 95, 102, 103, 116, 137, 147, 163, 164, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "int32": [151, 153, 154], "int64": [18, 19, 151, 154, 157, 158, 168, 169, 173, 180], "int8": [171, 177], "int_": 27, "int_1": 91, "int_2": 91, "intact": [130, 190], "intead": 117, "integ": [43, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 59, 68, 71, 74, 78, 80, 81, 82, 84, 89, 91, 92, 93, 95, 118, 139, 150, 151, 157, 158, 159, 171, 173, 175, 176, 178, 181, 182], "integr": [116, 117, 127, 130, 176, 178], "intel": [98, 130, 180], "intellectu": 130, "intellig": [130, 140, 141, 171, 174, 190, 198, 209], "intellij": 187, "intend": [9, 17, 19, 130, 191, 202], "intens": [130, 140, 175, 190], "intent": [84, 116, 128, 190, 198], "inter": [196, 198, 199], "interac": 180, "interact": [0, 7, 11, 23, 24, 25, 35, 68, 80, 87, 94, 102, 107, 111, 116, 130, 131, 143, 144, 157, 171, 178, 180, 187], "intercept": [57, 95, 188], "intercept_stderr": 188, "interchang": [157, 171, 195], "interest": [0, 35, 37, 39, 71, 96, 102, 130, 132, 136, 141, 143, 145, 163, 172, 179, 182, 187, 188, 189, 197, 198, 199, 200, 201], "interfac": [24, 38, 71, 101, 117, 127, 130, 139, 187, 189], "interg": 93, "interleaf": 130, "intermedi": 98, "intermediari": [98, 179], "intermediate_step": [128, 130], "intern": [34, 35, 38, 49, 52, 53, 68, 70, 77, 81, 101, 102, 104, 130, 158, 172, 173, 174, 189], "internal_job_id": [137, 138], "internet": [24, 127, 130, 140, 180, 192], "interp": 155, "interpol": [175, 177, 178, 179, 180, 181, 182, 191, 200], "interpolationmod": [175, 177, 178, 179, 180], "interpret": [22, 24, 35, 39, 43, 47, 48, 49, 52, 70, 71, 74, 77, 78, 80, 84, 87, 88, 89, 93, 94, 95, 96, 100, 130, 173, 175, 190, 198, 199, 200, 201], "interquartil": 197, "interrelationship": 202, "interrupt": 70, "intersect": [47, 92], "intersect1d": 155, "intersection_upd": 56, "interspers": 173, "interst": 132, "interv": [5, 14, 15, 16, 17, 27, 28, 29, 130, 147, 150, 154, 187, 190, 192, 194, 196, 197, 198, 199, 200], "intervent": 209, "interview": [130, 144, 200, 209], "intim": 130, "intimid": [179, 180], "intiuit": 24, "intothinairbook": 132, "intrigu": [0, 186], "intrins": [186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "intro": [40, 130, 137, 138, 206], "introduc": [7, 38, 52, 87, 118, 143, 172, 173, 174, 178, 179, 196, 197, 201, 202], "introduct": [2, 52, 117, 128, 173, 174, 178, 179, 209], "introductori": 191, "introspect": 118, "intrud": 174, "intuit": [8, 23, 38, 157, 172, 174, 175, 178, 194], "inuit": 140, "inv": [31, 150], "invalid": [15, 46, 52, 70, 71, 80, 88, 90, 93, 94, 153], "invalidrequesterror": 130, "invent": [116, 130], "inventor": 47, "inventori": 137, "invers": [26, 49, 65, 82, 132, 150, 153], "invert": [31, 39], "invest": [130, 133, 141, 143, 144, 198], "investig": [173, 178], "investor": [130, 133, 141, 144], "invis": 197, "invit": [130, 143, 145], "invitingli": 130, "invoc": [79, 190], "invok": [37, 57, 102, 104], "involv": [0, 51, 93, 95, 103, 130, 140, 144, 145, 171, 172, 173, 174, 175, 176, 179, 180, 186, 191, 194, 196, 200, 209], "io": [134, 137, 138, 143, 173, 174, 175, 176, 180, 181, 182, 184], "ioerror": 71, "ion": [25, 107, 111], "iot": 210, "ip": [143, 200], "ipad": 117, "iphon": 117, "iplot": 11, "ipo": 133, "ipod": 117, "ipykernel_28927": 128, "ipykernel_3695928": 171, "ipykernel_4303": 130, "ipynb": [20, 24, 69, 80, 108, 112, 171, 175, 178, 180, 183], "ipynb_checkpoint": [69, 180], "ipython": [24, 34, 35, 36, 37, 38, 40, 48, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 88, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 117, 143, 145, 152, 153, 161, 164, 166, 169, 174, 180, 187, 189, 191, 195, 200], "iqr": 196, "ireland": 191, "iri": [3, 5, 10, 14, 147, 186, 189, 191, 192, 194, 195, 196, 204], "iris_data": [147, 204], "iris_typ": [10, 14], "iron": 34, "ironi": 140, "irrespect": 49, "irrespons": 130, "is_avail": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "is_cal": 37, "is_dir": [175, 176, 177, 178, 181, 182], "is_empti": 74, "is_even": [37, 74], "is_explicit_retri": 130, "is_fil": [173, 174, 175, 177, 178, 179], "is_light_on": 90, "is_mar": [45, 47], "is_marri": 90, "is_name_long": 37, "is_odd": 37, "is_prim": 74, "is_return": 37, "is_uniqu": 166, "is_valid_vari": 39, "isalnum": 52, "isalpha": [48, 52], "isatti": 68, "isclos": [80, 174], "isdecim": [48, 52], "isdigit": 52, "isdisjoint": 56, "isfinit": [80, 82], "ish": 132, "ishan": 141, "isidentifi": 52, "isin": [196, 198], "isinf": [80, 82], "isinst": [51, 92, 102, 103, 118, 130], "isl": 116, "island": [37, 133], "islow": 52, "isn": [7, 18, 19, 129, 130, 132, 138, 140, 143, 144, 157, 164, 171, 172, 174, 175, 176, 178, 179, 180, 182, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "isnan": [80, 82], "isnul": 157, "isnumer": 52, "iso": 128, "isol": [24, 96, 130], "isotrop": [28, 29], "isprint": 52, "isqrt": 80, "isspac": [49, 52], "issu": [5, 51, 57, 76, 118, 132, 138, 140, 145, 148, 171, 172, 173, 174, 175, 180, 189, 197, 201], "issubset": 56, "issuecom": 180, "issuperset": 56, "istitl": 52, "isupp": 52, "isuzu": 169, "ita": 117, "ital": 172, "itali": 117, "italian": 130, "item": [8, 11, 13, 16, 17, 18, 19, 34, 35, 37, 39, 40, 47, 48, 52, 56, 57, 70, 71, 74, 79, 80, 84, 92, 102, 116, 117, 118, 130, 137, 138, 140, 142, 144, 150, 158, 161, 171, 172, 173, 174, 175, 176, 178, 180, 181, 182, 198], "items": [151, 154, 155], "iter": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 35, 37, 41, 49, 57, 70, 78, 80, 82, 94, 97, 117, 118, 128, 130, 140, 143, 144, 158, 174, 175, 176, 178, 179, 180, 181, 182, 187, 198, 200, 202], "iter_obj": 34, "iteract": 180, "iterrow": [141, 157, 168, 180], "itertool": [118, 192], "its": [0, 1, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 59, 60, 61, 68, 74, 75, 77, 80, 84, 92, 95, 96, 98, 101, 102, 103, 106, 117, 127, 130, 132, 133, 134, 136, 137, 138, 140, 143, 144, 145, 157, 158, 159, 160, 161, 163, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 191, 195, 196, 197, 202, 203, 204], "itself": [7, 18, 19, 34, 36, 38, 47, 52, 54, 55, 56, 68, 72, 74, 78, 98, 101, 102, 103, 106, 117, 130, 133, 136, 171, 172, 179, 190, 197, 198, 201, 209], "iv": 39, "ivan": 77, "ivysaur": 168, "j": [4, 5, 7, 28, 29, 30, 37, 47, 48, 49, 52, 53, 60, 61, 68, 90, 91, 102, 117, 118, 150, 151, 158, 179, 188, 201], "jab": 134, "jack": 160, "jaguar": 169, "jai": 179, "jaltma": 140, "jam": [52, 133], "jamesnunn": 118, "jan": [60, 61, 87, 171, 186], "jane": [102, 160], "januari": [39, 45, 49, 59, 60, 61, 64, 65, 116, 130, 132, 134, 136], "japan": [68, 169], "japanesecar": 169, "jargon": 95, "jason": 93, "java": [22, 47, 48, 52, 53, 55, 68, 89, 101, 106, 118, 138], "javascrip": 68, "javascript": [39, 52, 57, 68, 71, 98, 101, 116, 117, 118], "jeep": 138, "jeff": 118, "jellic": 168, "jenner": 47, "jeremi": [172, 177], "jeremiah": 118, "jerryjliu": 116, "jessica": 130, "jet": [119, 189, 192], "jet_r": 192, "jetbrain": 187, "jft": 179, "jigglypuff": 168, "jill": 160, "jirachi": 168, "jit": [174, 175], "jitter": [195, 200], "jlufe": 55, "jo": [8, 39, 180], "job": [0, 39, 52, 98, 116, 117, 130, 133, 141, 143, 144, 171, 189, 190, 194, 197, 201], "job_descript": [137, 138], "job_id": [137, 138], "job_index": [137, 138], "joe": [138, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 186], "joei": 116, "john": [28, 54, 77, 130, 136, 147, 186, 200], "joi": 134, "join": [30, 52, 53, 54, 56, 68, 94, 116, 117, 132, 135, 140, 143, 144, 145, 178, 179, 180, 197], "joined_df": 157, "joint": [190, 199, 205], "jointgrid": [191, 193], "jointplot": [191, 192], "joke": [116, 117, 130], "jokingli": 130, "jolteon": 168, "joltik": 168, "jon": 118, "jose": [118, 160], "josh": 118, "journal": 190, "journei": [117, 130, 178, 190, 202, 210], "jpeg": [175, 176, 177, 178, 179, 180, 182], "jpg": [175, 177, 178, 180], "jpn": 117, "jr": [147, 168], "json": [24, 80, 116, 117, 128, 135, 137, 138, 139, 140, 157], "json_exampl": 68, "json_str": [135, 157], "jude": 39, "judg": 117, "judgment": 116, "judson": 116, "juic": 91, "juicebox": 141, "jul": 87, "juli": [45, 130, 133, 179, 180], "julian": [118, 130], "jumbl": [173, 190], "jump": [27, 49, 52, 133, 137, 138, 140, 143, 179, 190, 196, 198, 202], "jumpluff": 168, "jun": [60, 62, 87], "jun21_00": 178, "june": [45, 49, 59, 60, 61, 62, 65, 130, 178, 188], "junior": 130, "jupyt": [6, 9, 20, 22, 25, 70, 94, 107, 108, 109, 111, 112, 116, 134, 175, 176, 178, 181, 182, 187, 189, 206, 207, 209, 210], "jupytext": [6, 109, 207], "just": [5, 9, 16, 17, 18, 19, 34, 35, 37, 49, 52, 79, 83, 84, 87, 89, 92, 94, 106, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 157, 159, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "justcount": 102, "justifi": [52, 94], "justin": [130, 141], "juven": 118, "juventu": 147, "jvm": 98, "jynx": 168, "k": [2, 28, 29, 32, 47, 48, 52, 81, 116, 130, 132, 133, 142, 143, 147, 148, 174, 175, 177, 178, 179, 180, 186, 188, 189, 194, 195], "k_depth": 200, "k_mean": 10, "kabuto": 168, "kabutop": 168, "kadabra": 168, "kaggl": [9, 199], "kakuna": 168, "kamradt": 128, "kan": 130, "kanban": 141, "kangaskhan": 168, "kangaskhanmega": 168, "kappa": 81, "kapur": 5, "karen": 200, "karpathi": 171, "karrablast": 168, "kate": 54, "kb": [80, 174], "kcsy2": 80, "kde": [188, 191, 193, 197, 201], "kdeplot": [189, 191, 192, 201, 202], "kecleon": 168, "keen": [37, 199], "keenli": 130, "keep": [4, 5, 25, 27, 35, 39, 48, 77, 83, 102, 107, 111, 116, 118, 130, 132, 133, 134, 137, 138, 139, 140, 142, 158, 163, 171, 173, 174, 175, 177, 178, 179, 180, 186, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202], "keepdim": 155, "kei": [37, 40, 42, 45, 47, 53, 54, 56, 70, 71, 89, 91, 92, 95, 116, 117, 118, 130, 132, 133, 134, 136, 137, 138, 140, 143, 144, 145, 157, 159, 164, 166, 169, 172, 173, 175, 176, 178, 179, 180, 181, 182, 192, 201], "keldeoordinari": 168, "keldeoresolut": 168, "kenel": 193, "kenneth": [186, 189], "kenya": 140, "kept": [83, 118, 130, 132, 172, 174, 179, 189], "kera": [180, 209], "kernel": [6, 24, 109, 174, 179, 187, 189, 192, 193, 197, 200, 207], "kernel_density_estim": 193, "kernel_list": 193, "kernel_s": [174, 175, 176, 179, 181, 182], "kevin": [117, 130], "keyboard": 22, "keyboardinterrupt": [48, 66, 70, 71, 128, 130], "keyerror": [55, 56, 160, 161, 164, 166], "keystrok": 130, "keyword": [22, 36, 37, 40, 43, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 71, 74, 75, 79, 80, 84, 86, 90, 94, 96, 100, 101, 102, 106, 133, 137, 138, 147, 189, 191, 200, 202], "keyword_ord": 52, "kg": 51, "kgmid": 116, "ki": 140, "kick": [130, 132], "kid": [130, 133, 134, 188], "kidnei": 130, "kilcher": 179, "kill": 202, "killer": 133, "kind": [7, 34, 35, 71, 74, 77, 89, 108, 112, 116, 117, 130, 133, 141, 145, 147, 157, 164, 165, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "kindl": 130, "kindli": 202, "king": 130, "kingdra": 168, "kingler": 168, "kingma": 179, "kirlia": 168, "kit": [117, 130, 180], "kivi": 24, "kiwi": [47, 56, 117], "klang": 168, "klefki": 168, "klink": 168, "klinklang": 168, "km": [103, 117], "kmean": [10, 132], "knew": [116, 117, 130, 139, 175], "know": [10, 23, 35, 36, 37, 38, 45, 47, 48, 49, 51, 71, 74, 77, 78, 80, 87, 90, 92, 94, 98, 103, 104, 106, 116, 117, 130, 132, 133, 134, 136, 137, 138, 140, 141, 143, 145, 150, 152, 154, 160, 161, 164, 166, 171, 172, 173, 175, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210], "knowledg": [7, 72, 117, 130, 132, 136, 138, 175, 177, 200, 201], "known": [1, 8, 10, 11, 13, 24, 28, 29, 36, 47, 48, 51, 54, 55, 75, 79, 90, 93, 98, 101, 102, 104, 130, 133, 140, 153, 171, 172, 173, 174, 175, 176, 179, 180, 186, 190, 192, 194, 195, 196, 198, 200, 201, 202], "knoxvil": 186, "koehrsen": 173, "kof": 168, "kolombia": 117, "kolombiya": 117, "kolumbi": 117, "kolumbia": 117, "kolumbiai": 117, "kolumbian": 117, "kolumbien": 117, "kolumbii": 117, "kolumbija": 117, "kolumbijsk\u00e1": 117, "kool": 52, "kor": [117, 122, 137, 146], "korea": 147, "krabbi": 168, "kricketot": 168, "kricketun": 168, "kristian": 180, "krokorok": 168, "krookodil": 168, "kubernet": 138, "kw": [130, 195, 201, 202], "kwarg": [37, 41, 71, 106, 128, 130, 164, 174, 175, 192, 195, 201, 202], "kwiatkowski": 172, "kyogr": 168, "kyogreprim": 168, "kyurem": 168, "kyuremblack": 168, "kyuremwhit": 168, "k\u00f6zt\u00e1rsas\u00e1g": 117, "l": [7, 11, 27, 35, 39, 47, 48, 49, 52, 53, 54, 55, 56, 71, 79, 93, 130, 147, 172, 179, 180, 198], "l1": 173, "l1loss": [172, 173], "l2": 173, "la": 143, "la_": [25, 107, 111], "lab": [130, 141, 144], "label": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 110, 117, 147, 148, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 172, 174, 175, 177, 179, 180, 181, 182, 190, 197, 198, 200, 201, 202, 204, 206], "label_batch": [175, 179, 181, 182], "label_custom": 175, "label_dist": 193, "label_map": [17, 19], "label_out": 179, "label_singl": [175, 181, 182], "label_smooth": 180, "labelbottom": [16, 17, 18, 19], "labelleft": [16, 17, 18, 19], "labels": 180, "labels_": 132, "labl": [157, 173], "labour": 191, "lack": [0, 130, 145, 177], "laden": 130, "laet": [17, 19], "lai": 130, "lair": 130, "lairon": 168, "lake": 130, "lam": 194, "lambd": 81, "lambda": [27, 30, 35, 37, 88, 130, 140, 144, 157, 197], "lamdba": 118, "lame": 130, "lampent": 168, "lampi\u00e3o": 30, "lanc": 117, "land": [37, 115, 130], "landladi": 130, "landlock": 117, "landmark": 136, "landorusincarn": 168, "landorustherian": 168, "landscap": [130, 144], "lane": 174, "lang": 118, "langchain": [127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 142, 143, 144, 145, 209], "langchainai": 129, "langchaintest": 134, "langsmithhub": 116, "languag": [22, 24, 37, 38, 39, 47, 48, 49, 52, 53, 55, 57, 68, 70, 74, 87, 88, 89, 90, 94, 95, 101, 102, 106, 108, 112, 117, 127, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 144, 171, 174, 177, 179, 201, 209], "lanturn": 168, "laod": 204, "lapra": 168, "larg": [0, 24, 27, 28, 29, 30, 31, 32, 35, 53, 69, 70, 72, 80, 85, 95, 98, 130, 131, 132, 133, 144, 147, 148, 151, 153, 157, 160, 167, 169, 171, 172, 174, 175, 177, 178, 179, 180, 187, 188, 195, 196, 200], "larger": [24, 36, 74, 83, 93, 98, 118, 129, 130, 133, 153, 171, 172, 174, 175, 176, 177, 178, 179, 180, 200], "larger_chunk_relevant_doc": 133, "largest": [56, 80, 82, 117, 143, 171, 179, 180], "lark": 133, "larvesta": 168, "larvitar": 168, "last": [7, 24, 34, 35, 36, 37, 38, 40, 47, 48, 49, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 84, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 116, 128, 130, 133, 134, 140, 144, 145, 152, 153, 154, 157, 164, 166, 167, 171, 174, 175, 178, 179, 180, 187, 191, 192, 195, 197, 198, 200, 202], "last_index": [52, 161], "last_lett": 52, "last_nam": [37, 45, 47, 52, 55, 74, 90], "last_nm": 77, "lastli": [68, 196, 198, 202], "lastnam": [40, 74, 77, 90, 94, 101], "late": [130, 144, 186, 188], "latenc": [1, 8, 9, 143, 174, 180], "latency_from": 8, "latency_grid": 8, "latency_rang": 8, "latency_to": 8, "latent": [179, 199], "later": [35, 38, 49, 72, 84, 89, 90, 94, 95, 102, 116, 117, 130, 133, 134, 140, 143, 144, 145, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 190, 192, 194, 195, 196, 199, 202], "latest": [24, 116, 117, 128, 132, 133, 136, 139, 141, 171, 175, 177, 178, 179, 180, 188, 200], "latex": 179, "latia": 168, "latiasmega": 168, "latin": 130, "latio": 168, "latiosmega": 168, "latitud": 200, "latlng": 117, "latter": [103, 130, 171, 178], "lattic": 201, "latvia": 191, "lauder": 140, "launai": 118, "launch": [24, 130, 141, 143, 178, 180], "laurent": 118, "lavish": 130, "lavishli": 130, "law": [130, 132, 133], "layer": [0, 7, 101, 127, 133, 171, 172, 173, 174, 175, 176, 180, 181, 182], "layer_1": 173, "layer_2": 173, "layer_3": 173, "layer_norm": 179, "layer_numb": [18, 19], "layer_stack": 174, "layout": [11, 130, 176, 180, 182, 202], "lazi": [35, 47], "lb": 147, "lc": [116, 117], "ldexp": [80, 82], "ldot": [52, 179], "le": 118, "lead": [52, 70, 80, 116, 117, 130, 132, 143, 173, 174, 177, 178, 179], "leader": 117, "leadership": 145, "leaf": 130, "leafeon": 168, "leap": 199, "leari": 118, "learn": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 34, 35, 36, 38, 39, 40, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 115, 117, 130, 133, 136, 140, 141, 143, 144, 145, 148, 150, 157, 159, 160, 162, 164, 165, 166, 167, 169, 173, 174, 175, 176, 181, 182, 184, 185, 186, 190, 191, 192, 196, 198, 199, 200, 201, 202, 203], "learnabl": [178, 179], "learnable_embed": 179, "learner": [137, 138, 171, 178], "learning_r": [11, 12, 13, 176, 182], "learnpytorch": 184, "learnt": [18, 19, 194, 195, 196, 200, 202], "least": [7, 18, 19, 24, 35, 39, 53, 55, 66, 89, 96, 102, 106, 130, 132, 134, 140, 153, 173, 174, 175, 177, 179, 180, 188, 191, 192, 194, 195, 196, 198, 200], "leather": 130, "leav": [48, 56, 117, 118, 130, 133, 144, 172, 173, 174, 175, 177, 178, 180, 192, 194, 195, 197, 198, 200, 202], "leavanni": 168, "lectur": [52, 141, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "lecun": 179, "led": [116, 133, 140, 143], "ledft": 188, "ledian": 168, "ledyba": 168, "lee": [130, 147, 186], "left": [16, 17, 18, 19, 27, 28, 30, 32, 34, 39, 47, 52, 60, 61, 63, 83, 94, 95, 103, 104, 130, 133, 147, 148, 152, 157, 173, 174, 175, 177, 178, 179, 180, 187, 188, 191, 195, 197, 198, 199], "leftov": [130, 174], "leg": [55, 103], "legal": [117, 130, 135, 143, 145], "legandari": 168, "legend": [8, 10, 13, 14, 15, 16, 17, 25, 107, 111, 147, 148, 172, 175, 180, 190, 192, 195, 197, 198, 199, 200, 201, 202], "legend_": 195, "legend_el": 180, "legend_out": [190, 199, 202], "legendari": 168, "legit": 130, "lego": [172, 179], "leisur": 140, "lembk": 186, "lemon": [47, 71], "len": [14, 15, 16, 17, 18, 19, 28, 29, 30, 35, 37, 47, 48, 49, 52, 56, 57, 61, 90, 95, 116, 117, 128, 130, 132, 133, 134, 135, 137, 138, 141, 142, 143, 144, 145, 150, 161, 164, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "lenght": 132, "length": [9, 10, 14, 35, 39, 40, 47, 51, 52, 53, 56, 81, 90, 92, 95, 101, 103, 116, 118, 130, 132, 147, 150, 153, 157, 164, 166, 168, 169, 173, 174, 175, 177, 178, 179, 180, 181, 182, 186, 188, 190, 191, 194, 198, 202], "length_1": 180, "length_2": 180, "lengthi": [35, 83, 197], "leq": 27, "lesli": 186, "less": [8, 11, 13, 35, 43, 44, 45, 48, 49, 57, 66, 72, 82, 95, 98, 104, 116, 129, 130, 133, 137, 138, 140, 143, 157, 171, 172, 173, 175, 177, 178, 179, 180, 190, 201], "lesser": [44, 157], "lesson": [130, 133, 143, 144, 157, 177, 178], "let": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 56, 57, 59, 65, 66, 68, 70, 71, 74, 75, 76, 78, 79, 80, 84, 93, 94, 95, 96, 101, 102, 103, 104, 106, 109, 116, 117, 118, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 151, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207], "letter": [28, 29, 37, 39, 47, 48, 49, 52, 56, 57, 70, 80, 88, 90, 117, 118, 130, 171], "lettervalu": [199, 205], "lettter": 118, "level": [5, 8, 14, 15, 16, 17, 22, 24, 46, 51, 83, 115, 117, 118, 122, 127, 130, 141, 143, 145, 147, 157, 158, 160, 161, 166, 174, 175, 178, 180, 182, 186, 187, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "level_0": 158, "level_index": 161, "levelsio": 140, "levenshtein": [118, 119], "leverag": [139, 144, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184, 200], "lewi": 186, "lex": 177, "lf": 180, "lfloor": 95, "lg_doc": 130, "lg_loader": 130, "lgamma": [80, 82], "li": [26, 117, 130], "lib": [52, 61, 80, 116, 117, 118, 128, 130, 132, 133, 134, 155, 161, 164, 165, 166, 171, 174, 175, 186, 189, 193, 195], "librari": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 52, 82, 85, 89, 116, 117, 119, 131, 132, 138, 141, 143, 148, 150, 157, 158, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 209, 210], "licens": [24, 118, 141, 157, 168, 169, 180], "lichen": 117, "lichtenstein": 130, "lickilicki": 168, "lickitung": 168, "lie": [106, 130], "liepard": 168, "life": [11, 13, 23, 75, 118, 127, 130, 132, 133, 134, 136, 140, 143, 145, 179, 201, 210], "lifecycl": 178, "lifelong": [137, 138], "lifestyl": 130, "light": [130, 140, 147, 178, 179, 180, 189], "light_medium": 147, "lightblu": 188, "lighter": 202, "lightest": 130, "lightli": 116, "lightn": 130, "like": [0, 1, 3, 4, 5, 6, 7, 14, 15, 16, 17, 22, 24, 31, 32, 34, 35, 37, 38, 39, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 77, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 106, 108, 109, 112, 116, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 150, 153, 154, 157, 158, 159, 160, 161, 165, 166, 167, 168, 172, 173, 174, 176, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 210], "likelihood": 193, "likewis": [165, 167], "lileep": 168, "lili": 138, "lillig": 168, "lillipup": 168, "lim_": [27, 28, 29, 30], "limb": 130, "lime": 71, "limit": [47, 51, 72, 75, 78, 92, 104, 117, 118, 119, 130, 132, 133, 140, 141, 144, 171, 175, 177, 178, 179, 180, 186, 188, 194, 197, 200, 201, 202, 204], "limitless": 190, "limousin": 200, "linalg": [31, 132, 150, 153, 155], "lindayacc": 140, "line": [4, 6, 11, 12, 13, 14, 15, 16, 17, 22, 24, 25, 26, 36, 38, 39, 42, 48, 49, 52, 56, 57, 68, 70, 71, 74, 75, 77, 79, 80, 88, 91, 92, 95, 96, 98, 102, 107, 108, 109, 111, 112, 116, 117, 118, 128, 130, 140, 145, 153, 154, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202, 207], "line2d": [25, 107, 111], "line_count": 68, "line_kw": [190, 191], "linear": [2, 5, 7, 8, 10, 16, 17, 18, 19, 23, 57, 74, 103, 150, 171, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 194, 196, 199, 200, 202, 209], "linear1": 179, "linear2": 179, "linear_lay": [172, 179], "linear_layer_stack": 173, "linear_regress": [11, 12, 13], "linearli": [7, 18, 19, 190, 200], "linearregress": [11, 12, 13], "linearregressionmodel": 172, "linearregressionmodelv2": 172, "linearsegmentedcolormap": 189, "linecollect": 195, "linefe": 52, "lineplot": 200, "liner": 5, "linestyl": [147, 148, 198], "linetoolong": 128, "linewidth": [147, 148, 187, 188, 194, 195, 196, 197, 200, 201, 202, 203], "linez": 135, "linger": 130, "link": [24, 98, 116, 117, 118, 129, 130, 137, 138, 140, 141, 171, 175, 176, 177, 178, 179, 180, 189, 190, 191, 199, 200, 202], "linkedin": [144, 145], "linkedinindustri": 135, "linkedinlinkedin": 141, "linoon": 168, "linregress": 188, "linregressresult": 188, "linspac": [11, 12, 13, 14, 15, 25, 107, 111, 150, 155, 187, 193, 200, 202], "lint": 118, "linux": 68, "liquid": 131, "lisp": [130, 136], "list": [9, 10, 14, 22, 34, 35, 37, 39, 40, 51, 56, 58, 59, 68, 70, 79, 81, 82, 83, 84, 88, 89, 91, 93, 94, 95, 101, 102, 103, 104, 106, 116, 117, 118, 128, 130, 132, 133, 135, 136, 137, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 157, 161, 163, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202], "list1": [47, 53, 74, 79, 80, 92, 142, 159], "list2": [53, 79, 142, 159], "list3": 53, "list_": 35, "list_1": 102, "list_enumer": 52, "list_nam": 53, "list_of_class_nam": 175, "list_of_cmap": 201, "list_of_hexa_color": 80, "list_of_list": [47, 57], "list_of_rgb_color": 80, "list_siz": 47, "listdir": 180, "listedcolormap": 198, "listen": [141, 143], "listliter": 89, "lit": 130, "liter": [22, 52, 60, 61, 70, 71, 77, 84, 89, 90, 93, 94, 95, 100, 140], "literatur": 140, "lithuania": 191, "litleo": 168, "littl": [8, 10, 16, 17, 18, 19, 96, 103, 116, 130, 131, 133, 134, 145, 152, 171, 173, 174, 178, 179, 180, 188, 190, 194, 195, 197, 198, 199, 201, 202], "litwick": 168, "live": [37, 45, 52, 68, 71, 95, 101, 116, 117, 130, 133, 134, 138, 140, 145, 172, 178, 179, 180], "liverpool": 202, "livestream": 179, "livingston": 130, "lizard": 118, "ljust": [30, 52, 94], "ll": [20, 35, 36, 47, 49, 51, 53, 54, 55, 56, 68, 69, 71, 74, 75, 76, 79, 83, 87, 101, 102, 108, 112, 116, 117, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 203], "llama": 116, "llc": 130, "llm": [117, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 145, 209], "llm3": [132, 143], "llm4": [132, 143], "llm_chain": [117, 130], "llm_output": [116, 131], "llm_prefix": 128, "llmchain": [116, 117, 130, 131, 133, 141, 145], "llmchainextractor": 133, "llmresult": 131, "lm": [189, 200, 205], "lmax": 30, "lmk": 133, "lmplot": [191, 192], "ln_layer": 179, "lo": [39, 116], "load": [68, 80, 84, 98, 116, 117, 132, 135, 136, 139, 140, 142, 143, 144, 145, 177, 179, 181, 182, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205], "load_and_split": 117, "load_dataset": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "load_dotenv": [116, 117, 129, 131, 132, 133, 134, 137, 139, 140, 142, 143, 144], "load_ext": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 178], "load_imag": 175, "load_qa_chain": [130, 134], "load_state_dict": [172, 174, 178, 180], "load_summarize_chain": [116, 117, 130, 132, 141, 143, 144, 145], "load_tool": [116, 117, 127], "loaded_effnetb2_food101": 180, "loaded_model_0": 172, "loaded_model_1": 172, "loaded_model_1_pr": 172, "loaded_model_2": 174, "loaded_model_2_result": 174, "loaded_model_pr": 172, "loader": [117, 132, 133, 134, 136, 141, 142, 144, 175, 176, 178, 179, 181, 182], "loan": 130, "lobbi": 133, "loc": [147, 148, 154, 157, 168, 180, 195, 197, 198], "loc_var": 75, "local": [4, 5, 22, 24, 35, 36, 59, 61, 62, 63, 64, 65, 66, 70, 76, 79, 86, 96, 102, 103, 106, 116, 117, 118, 130, 140, 143, 157, 171, 172, 174, 177, 192], "local_lang": 75, "local_tim": 65, "localtim": [63, 66], "locat": [0, 37, 39, 52, 53, 68, 70, 80, 83, 90, 94, 95, 103, 116, 117, 134, 137, 138, 139, 141, 148, 168, 173, 175, 177, 178, 180, 181, 182, 195, 196, 197, 200], "location_chain": 116, "locator_param": 188, "lock": 130, "locket": 80, "locomot": 130, "log": [69, 80, 81, 82, 118, 129, 130, 133, 138, 150, 154, 178], "log10": [51, 80, 82], "log1p": [80, 82], "log2": [80, 82], "log_dir": 178, "logan": 118, "logarithm": [51, 80, 82], "logdir": 178, "logger": 130, "logic": [42, 44, 78, 104, 106, 116, 118, 140, 157, 161, 164, 175, 180, 210], "logical_and": 155, "logical_not": 155, "logist": [2, 135, 190, 191], "logistic_regress": [8, 10, 14, 15, 16, 17], "logisticregress": [14, 15, 16, 17], "logit": [174, 175, 177, 179, 180, 181, 182], "lognormvari": 81, "logo": [68, 69, 130], "logo1": 69, "logos22": 141, "logspac": [25, 107, 111], "logx": 190, "lombr": 168, "london": [37, 59, 63, 68, 71, 101, 161], "lone": 130, "long": [37, 42, 48, 49, 51, 52, 57, 88, 89, 91, 96, 106, 116, 117, 118, 130, 132, 133, 134, 138, 140, 143, 145, 154, 172, 174, 175, 177, 178, 179, 180, 181, 182, 188, 194, 195, 210], "long_nam": 37, "longer": [11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 52, 80, 101, 118, 130, 133, 143, 145, 172, 173, 174, 175, 177, 178, 179, 180, 193], "longest": 174, "longitud": 200, "longtensor": 173, "look": [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 36, 37, 38, 39, 42, 49, 51, 68, 70, 75, 78, 80, 83, 84, 88, 89, 93, 94, 96, 103, 104, 106, 117, 118, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 168, 171, 172, 173, 174, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "looker": [137, 138], "lookuna": 52, "lookup": [127, 157, 174], "loom": 130, "loop": [4, 22, 37, 40, 42, 50, 52, 53, 54, 55, 56, 66, 68, 71, 74, 77, 89, 94, 117, 128, 132, 144, 153, 157, 171, 176, 178, 179, 180, 181, 182, 198], "loos": [7, 116, 140], "loosen": 133, "lopunni": 168, "lopunnymega": 168, "lose": [68, 130, 133, 145, 172], "loss": [93, 132, 140, 176, 178, 181, 182, 202], "loss_fn": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "lossfunct": 175, "lost": [52, 130], "lot": [4, 5, 22, 25, 35, 47, 48, 52, 78, 80, 83, 98, 107, 111, 116, 117, 127, 130, 132, 133, 134, 135, 140, 144, 145, 152, 171, 172, 173, 174, 175, 177, 178, 179, 188, 190, 198, 200], "lotad": 168, "loud": 130, "loudr": 168, "love": [24, 37, 39, 56, 94, 116, 128, 130, 131, 132, 137, 138, 140, 141, 145, 171, 172, 180], "low": [11, 12, 13, 14, 15, 16, 17, 18, 19, 81, 116, 130, 137, 138, 143, 148, 151, 175, 191, 196, 199], "low_end": 138, "lower": [28, 29, 39, 52, 93, 127, 130, 148, 152, 153, 171, 172, 174, 175, 178, 179, 180, 188, 196, 197, 199, 200, 201], "lowercas": [39, 52, 80, 88, 90, 171], "lowess": [190, 192], "lowest": [80, 157, 171, 174, 175, 178, 196, 198], "lowin": 118, "lowland": [130, 136], "lp": 130, "lr": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "lsr": [188, 191], "lst": [36, 57, 71], "lst_one": 71, "lst_two": 71, "lstrip": 52, "lt": [137, 138], "lucario": 168, "lucariomega": 168, "lucia": 102, "lucidrain": 179, "luck": [130, 132], "lucki": 130, "luckili": [117, 179], "lucr": 0, "ludicolo": 168, "lugia": 168, "lui": 118, "luke": [127, 197], "lumber": 130, "lumineon": 168, "lump": 196, "lunaton": 168, "lunch": [0, 130, 133, 140, 180, 190, 194, 195, 197, 202], "lure": 130, "lusti": 130, "lut": 204, "luvdisc": 168, "lux": 117, "luxembourg": [117, 191], "luxio": 168, "luxrai": 168, "luxuri": [116, 130], "lvplot": 200, "lw": [25, 107, 111, 194, 195, 198, 200, 202], "ly": 130, "m": [3, 4, 5, 8, 28, 29, 31, 39, 47, 49, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 80, 82, 87, 88, 90, 93, 94, 95, 103, 116, 117, 130, 132, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 171, 172, 174, 175, 177, 178, 179, 180, 186, 189, 194, 196, 198, 202], "m1": [31, 171], "m2": [31, 171], "m3": 171, "m_": [28, 29, 31], "ma": [39, 116, 174], "maaan": 39, "mac": [118, 171], "machamp": 168, "machin": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 45, 103, 115, 130, 131, 141, 171, 172, 173, 174, 175, 176, 177, 182, 190, 198, 199, 201, 202, 210], "machine_learn": 198, "machineri": 157, "machok": 168, "machop": 168, "maco": [69, 171], "macreadi": 0, "macro": 130, "macro_cas": 90, "mad": 129, "made": [39, 70, 72, 80, 96, 98, 102, 116, 117, 118, 130, 131, 133, 139, 140, 143, 145, 172, 173, 174, 175, 176, 177, 178, 180, 200], "madrid": 147, "madrig": 118, "mae": [172, 173], "magazin": 130, "magbi": 168, "magcargo": 168, "magic": [37, 104, 117, 129, 130, 134, 136, 178, 179, 180, 182, 187], "magikarp": 168, "magma": [189, 190, 192], "magma_r": 192, "magmar": 168, "magmortar": 168, "magnemit": 168, "magnet": 200, "magneton": 168, "magnezon": 168, "magnific": 130, "magnitud": [4, 5, 32, 103, 104, 175, 190, 198], "mai": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 35, 39, 45, 49, 51, 52, 53, 54, 56, 59, 60, 66, 68, 71, 72, 74, 76, 77, 83, 87, 93, 96, 98, 101, 102, 103, 106, 116, 117, 118, 119, 130, 132, 133, 134, 136, 137, 138, 140, 143, 144, 145, 152, 157, 158, 159, 161, 162, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "mail": [39, 128, 155], "mailbox": 80, "main": [28, 29, 31, 39, 51, 54, 75, 76, 80, 84, 90, 101, 102, 103, 106, 116, 130, 133, 141, 171, 172, 173, 174, 176, 181, 182, 183, 184, 194, 198, 200, 203], "main1": 76, "main_tab_text": 116, "main_tag": 178, "mainfact": 117, "mainli": [47, 116, 130, 179, 182], "maintain": [85, 118, 144, 190], "mainten": 209, "major": [8, 35, 94, 130, 173, 176, 179, 181, 182, 194, 195, 198, 199], "majorli": [157, 158, 190, 194, 195, 199, 200, 202], "make": [0, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28, 29, 35, 36, 37, 38, 39, 40, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 68, 70, 71, 72, 74, 75, 76, 78, 80, 83, 85, 88, 89, 90, 93, 94, 95, 96, 98, 101, 103, 104, 106, 107, 111, 116, 117, 118, 119, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 153, 157, 158, 159, 161, 162, 164, 184, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210], "make_blob": [173, 201], "make_circl": 173, "make_kd": 192, "make_multiplier_of": 36, "make_predict": 174, "make_pretti": 37, "make_sound": 106, "make_type_consist": 118, "make_uppercas": 37, "makedir": 182, "maker": 117, "mako": [192, 200, 204], "mako_r": 192, "makuhita": 168, "malamar": 168, "male": [68, 101, 168, 186, 190, 193, 195, 196, 197, 198, 202], "male_dinn": 197, "male_lunch": 197, "malign": [5, 14, 15, 16, 17], "maltreat": 130, "mammal": 103, "mammalnam": 103, "mamoswin": 168, "man": [38, 39, 116, 117, 130, 140, 196, 198], "manadatori": 190, "manag": [39, 74, 80, 83, 117, 130, 131, 137, 138, 141, 172, 174, 175, 176, 177, 178, 179, 181, 182, 200], "manaphi": 168, "manchest": [101, 147], "mandatori": [54, 59, 74, 77, 89, 102, 106, 190, 194, 195, 202], "mandibuzz": 168, "manectr": 168, "manectricmega": 168, "mango": [45, 47, 53, 56, 71, 74, 91, 94, 159, 198], "manh": 30, "manhattan": 195, "manhattan_dist": 30, "mani": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 28, 29, 39, 47, 48, 49, 52, 54, 56, 68, 69, 71, 72, 80, 84, 90, 95, 101, 102, 106, 108, 109, 112, 116, 117, 130, 132, 133, 134, 138, 143, 144, 145, 147, 153, 154, 157, 162, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 188, 189, 195, 200, 201, 203, 207, 210], "manifest": 118, "manifold": 132, "manipul": [38, 52, 59, 80, 102, 130, 133, 153, 157, 167, 174, 175, 179, 202], "mankei": 168, "mann": 140, "manner": [37, 42, 47, 48, 103, 117, 132, 194, 200], "manner_of_death": 186, "mantin": 168, "mantissa": 82, "mantyk": 168, "manual": [0, 4, 5, 7, 34, 71, 72, 119, 132, 134, 154, 172, 179, 180], "manual_se": [171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182], "manual_transform": [177, 178, 179], "manufactur": [102, 135, 174], "map": [0, 7, 17, 19, 26, 57, 89, 96, 116, 117, 135, 141, 143, 144, 145, 157, 164, 172, 173, 175, 179, 189, 191, 192, 195, 197, 201, 202, 205], "map_chain": 132, "map_datafram": 202, "map_diag": [192, 201], "map_loc": 180, "map_low": [192, 201], "map_offdiag": 201, "map_prompt": [132, 141, 143, 144, 145], "map_prompt_templ": [132, 141, 144], "map_reduc": [116, 117, 130, 132, 141, 143, 144, 145], "map_rerank": 130, "map_upp": [192, 201], "mapper": 164, "mappingmethod": 89, "mapreduc": 144, "mapreducedocumentschain": [116, 130, 141, 145], "maprerankdocumentschain": 130, "mapsto": 30, "maptplotlib": 202, "mar": [87, 128], "maractu": 168, "marathon": 130, "marc": 116, "march": [39, 45, 49, 130, 174], "marco": 130, "mareep": 168, "margin": [11, 130, 175, 191, 194], "margin_titl": [199, 202], "maria": 130, "maril": 168, "marin": [131, 145], "marit": 53, "marital_statu": 55, "mariya": 47, "mark": [42, 43, 47, 55, 74, 84, 87, 89, 94, 102, 116, 130, 147, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 193, 195, 198], "markdown": [24, 116, 117, 135, 137, 138, 144, 176, 179, 206], "markdownfil": [6, 109, 207], "markdownifi": [137, 138, 144], "markedli": [20, 108, 112], "marker": [10, 11, 69, 147, 148, 186, 190, 191, 192, 195, 196, 198, 200, 201, 202], "markeredgecolor": 147, "markerfacecolor": 148, "markers": 147, "market": [0, 101, 117, 130, 132, 133, 141, 143, 144, 145], "marketplac": [137, 141, 143], "marks_df": 157, "marks_dict": 157, "marksaroufim": 171, "markup": [108, 112, 130], "maroon": 130, "marowak": 168, "marri": [45, 90], "marshtomp": 168, "martin": 117, "martrix": 171, "martyr": 130, "marvel": 130, "mask": [161, 202], "masquerain": 168, "mass": [74, 90, 130, 157], "massachusett": 130, "massiv": [157, 160], "master": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 118, 143], "masterstudentclass": 102, "mat": 152, "mat1": [171, 174, 175], "mat2": [171, 175], "match": [61, 77, 117, 118, 119, 122, 128, 130, 133, 135, 138, 141, 146, 161, 164, 166, 171, 172, 173, 175, 177, 178, 179, 180, 191, 193, 196, 197, 202], "match_replac": 39, "match_scor": 135, "matcher": 118, "matching_tone_sampl": 140, "materi": [7, 172, 176, 177, 179, 183], "matern": 140, "math": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 51, 55, 70, 86, 94, 107, 111, 116, 127, 130, 179], "mathbb": [31, 32, 179], "mathbf": [173, 179], "mathemat": [24, 28, 29, 32, 47, 56, 57, 80, 90, 95, 104, 136, 157, 173, 179, 188, 191, 196, 198, 200, 209, 210], "mathemet": 115, "mathew": 147, "mathpix": 179, "matlab": [45, 47, 68, 90, 98, 101, 152, 153], "matmul": [153, 171], "matplotlib": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 30, 107, 111, 132, 172, 173, 174, 175, 177, 178, 179, 180, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205], "matric": [26, 33, 153], "matrix": [7, 8, 16, 17, 18, 19, 26, 28, 29, 57, 150, 151, 152, 154, 157, 173, 178, 201, 202, 203, 204], "matrixmultipl": 171, "matruc": 153, "matter": [37, 49, 71, 74, 77, 90, 130, 133, 134, 140, 171, 175, 178, 194], "matthew": 186, "mattress": 130, "mawil": 168, "mawilemega": 168, "max": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 30, 34, 35, 56, 101, 103, 150, 153, 154, 155, 157, 169, 174, 175, 177, 180, 186, 191, 193, 194, 202], "max_inst": 106, "max_iter": [10, 14, 15, 16, 17, 18, 19], "max_pool_lay": 174, "max_pool_tensor": 174, "max_row": 157, "max_siz": [175, 178, 179, 181, 182], "max_spe": 103, "max_token": [132, 135, 137, 138], "maxim": 0, "maximum": [10, 14, 15, 16, 17, 18, 19, 39, 48, 78, 101, 130, 133, 147, 150, 153, 154, 157, 171, 173, 174, 175, 193, 196, 197], "maxpoo2d": 174, "maxpool2d": [175, 176, 181, 182], "maxsiz": 80, "maxsplit": 39, "maxyear": 59, "maya": 141, "mayb": [47, 116, 130, 133, 137, 138, 143, 172, 200], "mazda": 169, "maze": 0, "mb": [8, 18, 19, 174, 175, 177, 178, 179, 180], "mba": [130, 133, 141], "mbconv": 177, "mbox": [25, 107, 111], "mccann": 118, "mccarthi": [130, 136], "mcguirk": 118, "mckinnei": 130, "mco": 117, "md": [6, 20, 108, 109, 112, 137, 138, 144, 207], "mdkir": 180, "mdoel": 178, "me": [44, 52, 94, 117, 129, 130, 132, 133, 134, 136, 137, 138, 140, 141, 143, 144, 145, 176, 177, 187, 188, 189, 190, 191, 192, 194, 195, 197, 198, 200, 201, 202], "meadow": 130, "meal": [116, 130, 131, 140], "meal_chain": 116, "mealtim": 180, "mean": [1, 2, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 31, 32, 36, 38, 39, 43, 44, 47, 48, 49, 52, 53, 54, 56, 59, 60, 61, 65, 70, 75, 77, 80, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 104, 106, 107, 111, 116, 117, 130, 132, 133, 134, 135, 139, 140, 143, 150, 151, 154, 157, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 188, 190, 191, 194, 195, 196, 198, 199, 200, 201, 202], "meaning": [159, 174, 202], "meant": [117, 118, 130, 136, 177, 186], "meantim": [130, 174], "meantin": 173, "meanwhil": [116, 130, 133, 191, 195, 198, 200, 202], "measur": [0, 9, 10, 14, 33, 101, 116, 130, 172, 173, 174, 186, 188, 191, 194, 195, 196, 199, 200], "meat": [137, 138, 139], "mechan": [23, 84, 153, 179, 190, 200, 203], "media": [117, 135, 145], "median": [53, 80, 101, 147, 150, 154, 157, 195, 196, 197, 198, 200], "medianprop": 147, "medic": [117, 130, 132], "medicham": 168, "medichammega": 168, "medicin": 130, "medit": 116, "meditit": 168, "medium": [25, 35, 107, 111, 116, 130, 131, 147, 171, 189], "medium_heavi": 147, "meet": [43, 116, 117, 128, 130, 143, 144, 145, 195, 196], "mega": 168, "megabyt": [178, 179, 180], "meganium": 168, "melbourn": 138, "melina": 68, "mellon": 7, "meloettaaria": 168, "meloettapirouett": 168, "melt": [130, 194, 195, 196, 202], "melt_df": 196, "member": [38, 56, 101, 102, 130, 143, 191, 197], "membership": [117, 143], "memor": [28, 29, 190], "memori": [18, 19, 34, 47, 51, 52, 53, 68, 70, 78, 90, 92, 95, 96, 98, 101, 102, 117, 130, 150, 154, 157, 171, 172, 174, 175, 179, 187, 200], "memory_kei": 117, "memoryerror": [70, 71], "men": [130, 189], "mennen": 47, "mental": [140, 143], "mention": [7, 35, 52, 71, 84, 116, 118, 129, 130, 133, 137, 138, 143, 145, 157, 178, 179, 187, 191, 195, 198, 199, 200, 202], "mentioned_parent_tweet_text": 129, "mentor": 140, "menu": [91, 141, 175, 189], "meow": 106, "meowsticfemal": 168, "meowsticmal": 168, "meowth": 168, "merced": 169, "mercenari": 130, "merchant": [117, 130], "merci": [116, 130], "mercuri": 130, "mere": [106, 130], "merg": [104, 118, 157, 179, 180, 197], "merrili": 130, "meshgrid": [8, 155, 173], "mesprit": 168, "mess": [130, 168], "messag": [4, 5, 36, 43, 44, 45, 46, 70, 71, 72, 74, 77, 84, 117, 128, 129, 135, 137, 139, 140, 141, 143, 145, 171, 180], "message_id": 128, "message_text": 128, "message_url": 128, "messageprompttempl": 131, "messi": [47, 48, 130, 144, 147], "met": [36, 44, 48, 117, 130, 163], "meta": [39, 171], "metadata": [116, 133, 136, 137, 138, 145, 175], "metadata_field_info": 133, "metagross": 168, "metagrossmega": 168, "metal": 117, "metang": 168, "metaphor": 130, "metapod": 168, "metaprogram": 37, "meteo": 127, "meter": [90, 200], "meth": 106, "method": [24, 28, 29, 31, 34, 35, 36, 37, 38, 47, 48, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 77, 80, 83, 84, 89, 94, 98, 102, 104, 106, 117, 118, 119, 128, 130, 132, 133, 137, 138, 143, 145, 153, 157, 158, 161, 164, 166, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 186, 190, 191, 196, 197, 198, 199, 200, 201, 202, 204, 210], "method_4_prompt_templ": 140, "methodologi": 141, "meticul": 178, "metric": [0, 138, 171, 172, 175, 176, 177, 178, 180, 181, 182, 204], "metropolitan": 117, "mew": 168, "mewtwo": 168, "mewtwomega": 168, "mfm": 143, "mfm_pod_alex": 143, "mfm_pod_rob": 143, "mfm_pod_steph": 143, "mfmpod": 143, "mib": 179, "michael": [118, 141, 186], "michel": 68, "microchip": [5, 15], "microcomput": [117, 130], "microphon": 116, "microprocessor": 140, "microsecond": [60, 61, 63], "microsoft": [52, 130, 137, 138, 140, 141, 171, 180], "mid": [95, 130, 144], "middai": 130, "middl": [45, 53, 54, 71, 130, 143, 152, 173, 175, 194, 196, 197, 198], "midnight": 130, "midwiv": 140, "mienfoo": 168, "mienshao": 168, "mig": 171, "might": [1, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 36, 42, 48, 49, 51, 66, 71, 89, 94, 106, 130, 132, 133, 134, 137, 138, 143, 145, 151, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 188, 190, 194, 195, 196, 197, 198, 199, 201, 202], "mighti": 130, "mightyena": 168, "mike": 130, "milaan": [37, 45, 47, 52, 55, 57, 68, 70, 71, 74, 77, 80, 90, 93, 95, 101, 103, 169], "milan": [52, 68, 102], "mild": 130, "mile": [117, 130, 198], "mileag": [157, 158, 168, 192, 194], "mileagedf": 169, "mileston": [178, 179, 180], "milk": 74, "mill": 130, "miller": 118, "million": [130, 137, 143, 177, 178], "milot": 168, "miltank": 168, "mime": 168, "mimic": [174, 179], "mimick": 140, "min": [4, 11, 12, 13, 14, 15, 56, 101, 150, 153, 154, 155, 157, 186, 191, 193, 194, 199, 202], "min_row": 157, "minc": 116, "minccino": 168, "mind": [27, 42, 57, 77, 130, 132, 133, 134, 137, 138, 140, 143, 174, 175, 176, 178, 179], "mine": [116, 130, 135, 137, 138, 171, 172, 179, 180], "mini": [130, 143, 145, 174, 176, 177, 178, 179, 197], "miniatur": 130, "minim": [3, 7, 79, 130, 133, 140, 176, 178, 181, 182, 186], "minimum": [4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 53, 130, 147, 150, 154, 157, 171, 173, 188, 196, 197, 210], "mink": [30, 130], "minkowski_distance_a": 30, "minkowski_distance_b": 30, "minor": [118, 133], "minu": [95, 196], "minun": 168, "minut": [18, 19, 60, 61, 63, 64, 65, 130, 141, 171, 172, 173, 174, 175, 177, 178, 180, 194, 195, 199], "minyear": 59, "miracul": 130, "mirror": [78, 138, 201], "misc": 84, "misdreavu": 168, "misinterpret": [130, 189], "mislead": 191, "mismagiu": 168, "mismatch": [106, 171, 173, 174], "miss": [11, 12, 13, 14, 15, 16, 17, 44, 70, 71, 77, 118, 128, 130, 132, 133, 134, 136, 151, 158, 167, 180, 198, 200], "missing_label": 164, "mission": 94, "mistak": [53, 70, 98, 116, 130, 133, 196], "mistakenli": 130, "mistress": 130, "mit": [118, 130, 173, 174, 180, 197], "mitchel": 140, "mitsubishi": 169, "mix": [53, 54, 55, 56, 77, 131, 151, 152, 171, 178, 180, 194, 195, 196, 200], "mix_fruit": [47, 53, 56], "mixtur": [116, 131], "mkdir": [80, 172, 174, 175, 176, 177, 178, 180, 181, 182], "ml": [2, 23, 141, 176, 178, 180, 198, 210], "mlc": 195, "mlflow": 178, "mlop": [178, 180], "mlp": 7, "mlp_block": 179, "mlp_block_output": 179, "mlp_dropout": 179, "mlp_layer": 179, "mlp_size": 179, "mlpblock": 179, "mlxtend": 174, "mm": [59, 61, 62, 171, 178], "mmr": 142, "mmr_relevant_doc": 142, "mmxxiii": 116, "mn": [31, 39], "mnemon": 90, "mnist": [5, 7, 16, 17, 18, 19, 174], "mo": 39, "moat": 144, "mobil": [140, 143, 171, 177, 180], "mock": 145, "mod": [80, 118, 155], "modal": 197, "mode": [11, 24, 68, 71, 80, 81, 101, 102, 134, 168, 172, 173, 174, 175, 177, 180, 183, 184, 195, 196], "model": [0, 4, 8, 98, 101, 102, 115, 117, 122, 127, 129, 130, 132, 133, 134, 136, 138, 140, 141, 144, 145, 146, 183, 184, 185, 188, 190, 192, 199, 200, 201, 209, 210], "model_": 201, "model_0": [172, 173, 174, 175, 176, 181, 182], "model_0_df": 175, "model_0_result": [174, 175, 181, 182], "model_1": [172, 174, 175, 182], "model_1_df": 175, "model_1_result": [174, 175], "model_2": [173, 175, 182], "model_2_result": 174, "model_3": 173, "model_4": 173, "model_acc": 174, "model_build": [182, 184], "model_loss": 174, "model_nam": [116, 117, 129, 132, 137, 138, 140, 143, 144, 172, 174, 176, 178, 179, 180, 181, 182], "model_path": [172, 174], "model_s": 180, "model_save_path": [172, 174, 176, 181, 182], "model_select": 173, "model_size_legend": 180, "model_weight": 178, "moder": [130, 140], "modern": [140, 174, 177, 178, 179], "modf": [80, 82], "modif": [38, 101, 103, 154, 161, 164, 166, 167, 195, 198, 199, 200, 202], "modifi": [36, 37, 38, 45, 47, 48, 52, 53, 54, 55, 57, 66, 68, 75, 76, 80, 92, 94, 95, 118, 130, 143, 152, 157, 162, 168, 174, 178, 195, 197, 199, 200, 209], "modul": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 75, 77, 78, 79, 86, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 118, 128, 130, 136, 152, 153, 161, 164, 166, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 190, 195, 200, 202], "modula": 106, "modular": [74, 144, 177, 178, 179, 180, 185], "modulo": [70, 104], "modulu": [90, 95, 104], "mohanda": [178, 180], "moistur": [148, 195], "moisturizersalesdata": 148, "moltr": 168, "moment": [96, 118, 130, 140, 175, 195, 202], "momentum": [133, 173, 179], "mon": [49, 60, 61, 140, 178], "monaco": 117, "mondai": [60, 61, 65, 116, 117], "monei": [130, 133, 141, 143, 144, 194, 195], "monetari": 179, "monferno": 168, "mongodb": 53, "monitor": [145, 180, 209], "monkei": 197, "monologu": 143, "monoton": 103, "monster": 130, "month": [49, 60, 61, 62, 63, 64, 65, 74, 89, 116, 117, 130, 132, 143, 144, 145, 179, 198, 200, 203], "month_numb": 148, "monthli": 180, "monthlist": 148, "montreal": 117, "mood": 140, "moon": [74, 130, 131], "moor": [130, 133], "morain": 130, "moral": [117, 188], "mordern": 22, "more": [0, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 28, 29, 31, 34, 35, 36, 37, 38, 40, 42, 44, 45, 47, 49, 51, 53, 54, 55, 56, 57, 59, 60, 65, 66, 68, 69, 70, 71, 72, 74, 75, 77, 79, 80, 81, 84, 88, 89, 90, 91, 96, 98, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 116, 117, 118, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 151, 152, 153, 154, 157, 158, 163, 166, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 206, 207, 210], "moreland": 189, "moreov": [0, 68, 130], "mormon": 143, "morn": [74, 77, 94, 130], "morphism": 101, "morri": 130, "mortal": 140, "most": [0, 22, 24, 26, 28, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 89, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 106, 108, 112, 116, 117, 128, 130, 131, 132, 133, 134, 135, 137, 138, 140, 143, 144, 152, 153, 157, 159, 161, 164, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 194, 195, 196, 197, 198, 199, 200, 202, 203], "most_frequent_word": 39, "most_populated_countri": [68, 74], "most_spoken_languag": [68, 74], "mostli": [48, 52, 130, 144, 178, 179, 180, 189, 202], "mother": 130, "mothim": 168, "motion": 130, "motiv": [39, 130, 133, 144], "motorcycl": 7, "motto": [117, 171, 172, 173, 174, 178, 179], "mountain": [130, 133], "mous": [53, 54], "move": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 43, 47, 49, 68, 96, 118, 129, 130, 133, 136, 137, 138, 139, 140, 143, 144, 164, 173, 174, 175, 176, 179, 187, 188, 191, 194, 195, 196, 198, 200, 201, 202], "move_fil": 139, "movefiletool": 139, "movement": [0, 138], "movi": [127, 143, 201], "mozzarella": 116, "mp": 171, "mp3": 119, "mpimg": [16, 17, 18, 19], "mpl": 198, "mr": [130, 168], "mrdbourk": [175, 176, 177, 178, 179, 180, 181, 182], "mri": 200, "mro": 103, "mrr": 143, "msa_block": 179, "msa_block_output": 179, "msa_lay": 179, "msablock": 179, "msc": 24, "mse": 173, "mseloss": 173, "msg": [36, 37, 74, 77, 186, 193], "mt": 31, "mtransform": 195, "mu": [8, 81], "mu_param": 8, "much": [0, 4, 7, 11, 12, 13, 22, 24, 28, 29, 35, 38, 55, 80, 116, 117, 130, 131, 132, 133, 136, 137, 138, 143, 145, 154, 171, 172, 173, 174, 175, 176, 179, 180, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202], "mudkip": 168, "muir": 130, "muir_lake_tahoe_in_wint": 130, "muk": 168, "mul": [80, 171], "mulitpl": 171, "mult": [175, 177], "multi": [91, 92, 101, 118, 133, 158, 159, 174, 175, 177, 178, 180, 197, 201, 202], "multi_queri": 133, "multiclass": [173, 174], "multideriv": 103, "multidimension": [150, 152, 157], "multihead": 179, "multihead_attn": 179, "multihead_self_attention_block": 179, "multiheadattent": 179, "multiheadselfattentionblock": 179, "multiindex": [157, 160, 161, 164, 167], "multilay": 7, "multilayer_perceptron": [18, 19], "multilayerperceptron": [18, 19], "multilevel": 198, "multilin": [39, 52, 79, 89, 91, 92], "multiline_str": [52, 91], "multimedia": 24, "multip": 26, "multipl": [0, 4, 7, 12, 18, 19, 24, 28, 29, 35, 37, 45, 47, 49, 52, 53, 56, 57, 68, 75, 77, 79, 88, 89, 91, 95, 98, 101, 102, 104, 106, 116, 117, 118, 130, 133, 145, 150, 151, 157, 158, 160, 162, 163, 167, 169, 172, 173, 174, 178, 179, 180, 188, 189, 190, 194, 195, 196, 197, 200, 201, 202], "multiple_vari": 57, "multipli": [11, 12, 13, 14, 15, 16, 17, 31, 36, 47, 48, 54, 59, 74, 78, 84, 85, 90, 94, 95, 150, 153, 171, 175], "multiqueryretriev": 133, "multitouch": 24, "multivari": [2, 4, 5, 8, 202], "multivariate_gaussian": 8, "multivariate_norm": [189, 190, 191, 201], "mumbai": 57, "munch": 140, "munchlax": 168, "munger": 143, "munna": 168, "murdoch": 143, "murkrow": 168, "musharna": 168, "mushroom": 54, "music": [83, 117, 119, 133], "musk": 143, "must": [27, 31, 34, 36, 37, 46, 47, 51, 52, 53, 54, 55, 56, 68, 69, 71, 74, 75, 77, 78, 80, 81, 83, 84, 88, 89, 90, 92, 93, 96, 98, 102, 103, 106, 117, 118, 128, 130, 134, 138, 148, 152, 158, 162, 163, 171, 172, 173, 179, 180, 187, 188, 195, 202], "mustard": 131, "mut": 194, "mutabl": [47, 53, 54, 55, 56, 92, 157], "mutat": 152, "mute": 197, "mutlipl": [171, 180], "mv": [177, 178, 179, 180], "mx": 171, "my": [5, 48, 51, 52, 68, 71, 75, 76, 84, 90, 92, 102, 106, 116, 117, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 145, 147, 148, 171, 173, 174, 175, 177, 178, 180, 189, 194, 196, 197, 198, 200], "my_addit": 85, "my_ag": 44, "my_data": 69, "my_dict": 55, "my_dict1": 55, "my_dict2": 55, "my_dict3": 55, "my_document_create_tim": 116, "my_document_id": 116, "my_document_sourc": 116, "my_func": 75, "my_gen": 35, "my_info": 53, "my_it": 34, "my_list": [34, 35, 53, 79, 151, 157], "my_list1": [53, 151], "my_list2": [53, 151], "my_list3": 53, "my_list4": 53, "my_list5": 53, "my_matrix": 151, "my_modul": 80, "my_nam": 90, "my_noun": 116, "my_set": [47, 56], "my_str": [35, 52], "my_text": 116, "my_tupl": 54, "my_tuple1": 54, "my_tuple2": 54, "my_tuple3": 54, "my_tuple4": 54, "my_vaccin": 47, "mychesstutor": 143, "myclass": 88, "mygraph": 147, "mymethod": 103, "mynewclass": 102, "myself": [130, 133, 136, 145], "myspac": 129, "myst": 206, "mysteri": [96, 130], "mystifi": 130, "n": [3, 4, 5, 8, 10, 12, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 43, 44, 47, 48, 49, 52, 53, 54, 57, 68, 71, 72, 74, 77, 78, 79, 80, 84, 87, 89, 90, 91, 93, 94, 97, 101, 102, 103, 107, 111, 116, 117, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 150, 151, 154, 157, 158, 159, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 186, 194, 196, 197, 198, 200, 201], "n0": 47, "n1": 47, "n10": 47, "n21": 47, "n28": 47, "n3": 47, "n36": 47, "n45": 47, "n6": 47, "n_": 31, "n_boot": [190, 198, 199, 200], "n_cluster": 132, "n_color": 189, "n_compon": 132, "n_featur": [173, 201], "n_list": 53, "n_sampl": [173, 201], "n_tupl": 54, "na": [133, 157, 161, 162, 167], "na_valu": 169, "nacho": 180, "nafter": [161, 162, 163, 166, 167], "nag": 130, "nail": 186, "naiv": [106, 130, 178], "name": [11, 17, 19, 24, 35, 36, 37, 38, 39, 40, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 61, 65, 66, 68, 69, 70, 71, 74, 75, 77, 79, 83, 84, 85, 88, 89, 91, 92, 93, 95, 97, 101, 102, 103, 104, 106, 116, 117, 118, 128, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 157, 158, 160, 161, 162, 163, 164, 165, 166, 168, 171, 172, 173, 174, 176, 177, 178, 179, 181, 182, 186, 189, 190, 191, 193, 194, 198, 200, 202], "name_to_tool_map": 128, "named_tupl": 65, "nameerror": [36, 38, 52, 53, 54, 55, 71, 75, 91, 92, 102], "nameless": 79, "names_upper_cas": 37, "namespac": [22, 36, 38, 79, 80, 83, 89, 100, 102, 106, 150, 173], "nan": [80, 82, 151, 153, 155, 158, 163, 167, 168, 169, 186, 190, 196, 198], "nanci": 130, "nand": [133, 172], "nangalo": 140, "nangel": 133, "nanoth": 133, "nanswer": 136, "nanyon": 136, "nanywher": 133, "napoleon": 132, "napr": 87, "narendramodi": 140, "narrat": 130, "narrow": [130, 145, 179, 197], "nat": [157, 158, 160, 161, 162, 163, 164, 165, 166, 167], "natali": 116, "nathan": 118, "nation": [117, 130, 147, 174], "nativ": [95, 178, 186, 187], "nativenam": 117, "natu": 168, "natur": [1, 8, 24, 37, 48, 80, 82, 96, 116, 117, 127, 130, 132, 133, 137, 138, 139, 140, 141, 150, 172, 177, 179, 180, 200, 209], "naug": 87, "navan": 144, "navi": 130, "navig": [0, 179], "nayron": [18, 19], "nb": 176, "nbagg": 187, "nbe": 133, "nbecaus": [133, 136], "nbest": 133, "nbetween": 136, "nbin": 188, "nbook": 133, "nbraden": 128, "nbubbl": 133, "nbug": 133, "nbuild": 136, "nbusi": 133, "nbut": [133, 136], "nbyte": [128, 151], "ncalifornia": 131, "ncan": 133, "nceo": 133, "nchat": 128, "ncheaper": 133, "nchw": [174, 175], "ncode": 136, "ncol": [174, 179, 188, 197, 198], "ncolumn": 164, "ncompani": 133, "ncongratul": 72, "ncontain": 68, "ncontradict": 133, "nconv_layer_2": 174, "ndarrai": [150, 151, 154, 157, 158, 159, 171, 203], "ndata": [40, 136], "ndatafram": 167, "ndebug": 133, "ndec": 87, "ndenumer": [155, 188], "ndepart": 133, "ndestroi": 133, "ndframe": 157, "ndim": [30, 150, 151, 171], "ndindex": 155, "ndo": [52, 133], "ne": 147, "nearbi": 145, "nearest": [3, 10, 175, 180], "nearli": [52, 79, 95, 130, 150, 178], "neat": 89, "neatli": 190, "necessari": [24, 34, 46, 48, 84, 116, 117, 140, 145, 166, 172, 175, 176, 178, 179, 180, 181, 182, 183, 187, 192], "necessarili": [134, 157, 174, 179, 180, 186, 190, 195, 196, 202], "necessit": 0, "neck": 130, "need": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 35, 38, 39, 42, 44, 47, 48, 51, 52, 53, 54, 57, 59, 61, 62, 63, 65, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 85, 87, 90, 92, 93, 94, 98, 102, 103, 104, 106, 109, 115, 116, 117, 118, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 203, 207, 210], "need_weight": 179, "needl": 130, "neg": [1, 4, 5, 15, 29, 39, 43, 44, 45, 46, 52, 57, 68, 82, 91, 94, 130, 155, 160, 173, 175, 191, 197], "negat": [39, 95], "negative_numb": 94, "neighbor": 130, "neighborhood": 130, "neither": [27, 46, 52, 75, 82, 130, 177, 197], "neliza": 145, "nenter": 72, "nenuemer": 47, "neq": [30, 31], "nervou": 130, "nescessarili": 153, "nest": [22, 28, 29, 37, 42, 44, 45, 50, 53, 54, 55, 75, 78, 96, 116, 138, 150, 151, 159, 195, 197, 198], "nestl": 130, "net": [130, 145], "netflix": 176, "netherland": [11, 13], "netscap": 133, "netsuit": [137, 138], "network": [0, 2, 71, 115, 130, 135, 143, 154, 171, 172, 175, 176, 177, 179, 180, 181, 182, 209, 210], "networkerror": 71, "neural": [0, 2, 115, 154, 171, 172, 175, 177, 179, 180, 209, 210], "neural_network": [18, 19, 173], "neuron": [18, 19, 173, 174], "never": [34, 48, 49, 51, 71, 90, 95, 98, 116, 118, 130, 133, 143, 157, 172, 179, 180, 187, 189, 194], "nevertheless": 130, "new": [0, 1, 4, 5, 11, 12, 13, 16, 17, 18, 19, 23, 24, 37, 38, 39, 42, 48, 52, 54, 56, 57, 60, 61, 63, 64, 68, 72, 76, 79, 87, 90, 94, 96, 101, 102, 103, 104, 106, 116, 117, 118, 119, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 145, 147, 152, 154, 157, 158, 161, 162, 163, 164, 166, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202], "new_": 157, "new_ag": 164, "new_axi": 161, "new_col": 164, "new_col_nam": 157, "new_df": 168, "new_dict": 55, "new_file_nam": 69, "new_head": 167, "new_index": 164, "new_list": 79, "new_mark": 164, "new_nam": 164, "new_sig": 195, "new_str": 39, "new_valu": 157, "new_year": 63, "new_york": [59, 63], "newaxi": [30, 201], "newdir": 69, "newer": [116, 132, 133, 172, 174, 178, 179], "newli": [106, 167, 172], "newlin": [39, 52, 68, 84, 87, 89, 91, 94, 180], "newshap": 154, "newslett": [141, 180], "newspap": 130, "newton": [74, 116], "nexampl": 116, "nexpens": 133, "nexplicit": 133, "next": [7, 34, 35, 43, 45, 47, 48, 49, 52, 68, 70, 71, 80, 81, 89, 98, 116, 117, 130, 132, 133, 134, 140, 141, 143, 144, 145, 171, 172, 173, 174, 175, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "next_step_output": 128, "nexusgpt": 117, "neymar": [47, 48, 147], "nf": 157, "nfar": 136, "nfeb": 87, "nfirst": [133, 173], "nfor": [47, 133, 136], "nfounder": 133, "nfrom": 136, "ng": 39, "ngeometr": 133, "ngeometri": 136, "nglhx4b33_o": 144, "ngo": 133, "ngood": 52, "ngreg": 145, "nha": 136, "nhand": 133, "nhappen": 133, "nhave": 133, "nhe": 136, "nhead": 179, "nhow": [94, 116, 133], "nhwc": 174, "ni": [47, 133, 136], "nice": [116, 117, 118, 129, 130, 132, 139, 140, 145, 171, 172, 173, 175, 177, 178, 179, 180, 187, 189, 194, 195, 200], "nicer": [52, 198], "nicest": 130, "nichol": 186, "nick": 118, "nidok": 168, "nidoqueen": 168, "nidoran": 168, "nidorina": 168, "nidorino": 168, "nif": 133, "nigeria": 68, "night": [77, 130, 137, 197], "nightclub": 143, "nightli": [177, 178, 179, 180], "nikla": [4, 5], "nin": [52, 133], "nincada": 168, "nine": [39, 130], "ninetal": 168, "nineti": 52, "ninjask": 168, "ninvest": 133, "ninvestor": 133, "nipy_spectr": 192, "nipy_spectral_r": [192, 194], "nissan": 169, "nit": [133, 136], "nj": 31, "njam": 133, "njul": 87, "njun": 87, "njust": [133, 136], "nknow": 133, "nla": 128, "nlabel": 173, "nld": 117, "nlike": 136, "nlist": 165, "nloosen": 133, "nlp": [177, 179], "nltk": 136, "nm": 31, "nmai": 87, "nman": 133, "nmar": 87, "nmarket": 133, "nmatter": 133, "nmax": 174, "nmccarthi": 136, "nmillion": 133, "nmore": 133, "nmulti": 89, "nn": [171, 172, 173, 175, 176, 177, 178, 180, 181, 182, 197], "nnew": 171, "nnois": 133, "nnorm": 133, "nnotat": 136, "nnov": 87, "nnumber": 179, "no_grad": 172, "no_of_nonna_valu": 163, "no_of_sid": 103, "nob": 188, "nobl": 130, "noct": 87, "noctowl": 168, "node": [7, 18, 19, 53, 138], "nof": [133, 136], "noften": 133, "nohtyp": 52, "noibat": 168, "nois": [130, 133, 134, 137, 138, 143, 144, 173, 190, 195], "noisi": 133, "noisier": 197, "noivern": 168, "nolan": 118, "nomin": [5, 14, 15, 16, 17], "non": [2, 4, 5, 7, 10, 18, 19, 31, 36, 40, 43, 48, 52, 68, 69, 77, 81, 102, 116, 118, 128, 133, 157, 163, 175, 177, 179, 180, 186, 187, 190, 192, 194, 200], "non_full_backward_hook": [174, 175], "noncommitt": 140, "nondynamicallyquantizablelinear": 179, "none": [37, 38, 39, 43, 47, 48, 55, 65, 68, 71, 74, 77, 81, 84, 88, 89, 91, 102, 116, 118, 128, 130, 131, 133, 138, 139, 154, 155, 157, 158, 161, 162, 163, 164, 166, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "nonlinear": [4, 7, 12, 18, 19, 190], "nonloc": [22, 76, 86, 88, 96], "nonlov": 75, "nonmarinemamm": 103, "nonneg": [150, 151], "nonparametr": [190, 192], "nonprofit": [135, 145], "nonwingedmamm": 103, "nonzero": 155, "noob": [130, 132], "noodl": 131, "nook": 130, "noondai": 130, "noper": 136, "noqa": 130, "nor": [27, 46, 52, 71, 75, 82, 130, 133, 136, 197], "noraml": 179, "nordic_countri": 71, "nordinari": 133, "norigin": 136, "norm": [32, 38, 82, 132, 153, 179, 188, 193, 195], "norm1": 179, "norm2": 179, "norm_first": 179, "normal": [8, 12, 16, 17, 18, 19, 32, 36, 37, 39, 48, 49, 52, 57, 71, 72, 75, 79, 80, 81, 102, 117, 118, 130, 133, 139, 151, 154, 160, 168, 176, 177, 178, 179, 180, 181, 188, 190, 191, 192, 193, 196, 197, 204], "normal_arrai": 154, "normalis": 203, "normalize_data": [12, 16, 17, 18, 19], "normalized_shap": 179, "normalvari": 81, "north": [130, 145, 198], "northeast": 117, "northern": 130, "norwai": [11, 13, 53, 71], "norwegian": 130, "nose": 130, "nosepass": 168, "notabl": [137, 138], "notaion": 152, "notat": [4, 5, 56, 94, 136, 147, 152, 172, 197], "notation3": 94, "notch": [172, 174, 175, 178, 180, 196], "note": [4, 5, 28, 29, 34, 35, 36, 38, 42, 48, 49, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 75, 77, 80, 84, 89, 90, 91, 94, 95, 96, 101, 102, 103, 108, 112, 116, 117, 118, 130, 132, 133, 134, 137, 138, 139, 140, 143, 145, 148, 151, 152, 153, 157, 158, 160, 161, 164, 165, 166, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 186, 187, 189, 190, 191, 192, 195, 196, 197, 198, 200, 201, 202, 210], "notebook": [9, 11, 20, 26, 70, 94, 108, 112, 116, 127, 129, 133, 134, 139, 171, 173, 174, 175, 177, 178, 179, 180, 183, 184, 187, 189, 190, 191, 192, 199, 200, 202, 206, 209, 210], "notecard": 130, "notepad": 87, "noth": [39, 43, 47, 48, 49, 56, 74, 90, 101, 117, 130, 132, 140, 143, 153, 175, 180, 195, 196, 197, 203], "notic": [27, 28, 29, 37, 49, 51, 55, 57, 59, 70, 92, 94, 102, 103, 116, 117, 130, 132, 133, 136, 138, 140, 143, 144, 157, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 187, 188, 190, 192, 194, 195, 196, 197, 198, 200, 201], "notif": [7, 24], "notimplementederror": 70, "notion": [51, 104, 117, 144], "notnul": 157, "notpad": 87, "notwithstand": 130, "noun": [116, 130], "nour": 136, "noutput": [44, 116, 171], "nov": [87, 172], "novel": 130, "novemb": [45, 130, 133], "now": [5, 7, 8, 10, 11, 12, 13, 14, 15, 22, 27, 35, 36, 37, 38, 39, 42, 43, 44, 47, 48, 57, 59, 60, 62, 63, 64, 68, 70, 71, 74, 75, 76, 77, 79, 80, 83, 84, 87, 89, 91, 93, 94, 96, 101, 102, 103, 104, 106, 116, 117, 118, 128, 129, 130, 132, 133, 134, 137, 139, 140, 141, 143, 144, 145, 153, 164, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 210], "nowher": 157, "np": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 28, 29, 30, 31, 32, 107, 111, 132, 147, 150, 151, 152, 153, 154, 157, 163, 167, 169, 171, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "npack": 133, "npaid": 133, "npatch": 179, "npen": 133, "npeopl": 133, "nperfect": 89, "nprior": 130, "nqualiti": 136, "nquestion": 136, "nquicker": 133, "nread": [116, 133], "nresult": 165, "nrow": [174, 179, 188, 197], "nsaturdai": 116, "nsell": 133, "nsep": 87, "nshape": 175, "nsheet": 68, "nshould": 133, "nsilicon": 133, "nsimplest": 136, "nsize": 175, "nso": 133, "nsoftwar": 133, "nsome": 133, "nsourc": 133, "nspur": 133, "nsqueez": 133, "nstartup": 133, "nsteadili": 136, "nstick": 133, "nstill": 133, "nt": 27, "ntake": 133, "ntell": 133, "ntest": [174, 175, 181, 182], "nthat": 133, "nthe": [133, 136], "nthei": 133, "nthem": [133, 136], "ntheoret": 136, "nthese": 136, "nthi": [68, 72, 128], "nthink": 133, "ntnkvx7sbx": 140, "nto": [128, 133, 136], "ntoo": 133, "ntorchvis": 174, "ntotal": 179, "ntrain": 174, "ntruth": 116, "ntwo": 136, "nuanc": 116, "nuclear": 130, "nude": 130, "null": [27, 47, 48, 56, 118, 128, 137, 138, 139, 157, 163, 190, 202], "num": [30, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 52, 56, 71, 74, 77, 78, 79, 89, 90, 94, 102, 154, 157, 158, 169, 178, 180, 193], "num1": [43, 44, 45, 46, 74, 77, 85, 90, 94, 102], "num2": [43, 44, 45, 46, 74, 77, 85, 90, 94, 102], "num3": 94, "num4": 94, "num_1": [45, 90], "num_2": [45, 90], "num_cel": [16, 17, 18, 19], "num_class": [173, 174, 179, 180], "num_clust": [10, 132], "num_doc": 132, "num_docu": 132, "num_epoch": [175, 176, 178, 181, 182], "num_exampl": [8, 10, 14, 15], "num_featur": 173, "num_flo": 93, "num_float": 93, "num_head": 179, "num_images_to_plot": [177, 178], "num_int": 93, "num_iter": [11, 12, 13], "num_lay": 179, "num_list": [57, 79], "num_magnitude_bin": [175, 180], "num_new": 93, "num_on": 74, "num_param": [177, 178, 179, 180], "num_patch": 179, "num_perceptron": [18, 19], "num_point": [190, 192], "num_str": 93, "num_sum": 93, "num_token": [117, 132], "num_tokens_first_doc": 132, "num_top_class": 180, "num_total_charact": 117, "num_training_exampl": [16, 17, 18, 19], "num_transformer_lay": 179, "num_two": 74, "num_word": 130, "num_work": [175, 176, 180, 181, 182], "numb": 11, "number": [0, 1, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 88, 89, 90, 93, 95, 97, 102, 103, 104, 106, 116, 117, 118, 130, 132, 133, 138, 139, 140, 142, 143, 144, 145, 147, 148, 150, 157, 158, 159, 160, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "number33": 94, "number_arithmet": 46, "number_list": 57, "number_of_paramet": 180, "number_of_patch": 179, "number_of_token": 179, "numbermethod": 89, "numbers_int": 37, "numbers_squar": 37, "numbers_str": 37, "numbers_to_displai": [16, 17, 18, 19], "numel": [168, 180], "numer": [17, 19, 24, 47, 48, 51, 52, 72, 80, 90, 94, 104, 116, 139, 150, 151, 157, 171, 173, 175, 179, 189, 191, 193, 194, 196, 197, 198, 200, 203], "numpi": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 47, 84, 107, 111, 132, 147, 148, 152, 153, 157, 163, 167, 172, 173, 174, 175, 179, 180, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209], "numpy_array_from_list": 151, "numpy_tensor": 171, "nundergrad": 133, "nunderstand": 136, "nunlik": 136, "nurs": 130, "nut": 143, "nutjob": 130, "nutrifi": [175, 177, 180], "nuzleaf": 168, "nvar": 188, "nvidia": [171, 177], "nwa": 133, "nwant": [116, 133], "nwe": [128, 133, 136], "nweekend": 133, "nwhat": [128, 136], "nwhen": 133, "nwhere": 133, "nwhich": 136, "nwhole": 136, "nwill": [116, 136], "nworst": 133, "nx": 136, "ny": [59, 63, 117], "nyc": 200, "nyc_taxi": 200, "nyear": [65, 133], "nyou": 133, "nzip": 47, "o": [22, 24, 35, 39, 47, 49, 52, 53, 54, 55, 56, 57, 69, 73, 91, 92, 93, 94, 100, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 142, 143, 144, 145, 147, 148, 167, 175, 176, 177, 178, 180, 181, 182, 186, 187, 190, 198, 201], "oauthhandl": [140, 144], "ob": 102, "obama": 68, "obj": [24, 34, 38, 57, 101, 102, 106, 161, 172, 174, 176, 181, 182], "obj1": 103, "obj2": 103, "object": [0, 3, 24, 28, 29, 34, 35, 36, 37, 38, 47, 51, 52, 53, 54, 55, 56, 60, 62, 64, 65, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 84, 89, 90, 92, 93, 94, 95, 96, 103, 104, 106, 116, 117, 118, 127, 128, 130, 131, 133, 135, 137, 138, 139, 140, 142, 143, 144, 150, 151, 153, 154, 158, 159, 164, 165, 166, 168, 172, 174, 177, 179, 189, 190, 191, 192, 194, 195, 198, 201, 202], "object1": 103, "object_nam": 102, "obscur": 130, "observ": [0, 3, 8, 10, 37, 38, 43, 49, 101, 116, 117, 127, 128, 130, 144, 157, 167, 179, 187, 188, 190, 191, 193, 194, 196, 197, 198, 199, 200, 202, 203], "obsolet": 130, "obtain": [52, 80, 130, 178, 179, 191, 198, 202], "obviou": [38, 52, 95, 116, 130, 133, 136, 180], "obvious": [130, 195], "occas": 154, "occasion": [130, 140], "occass": [190, 194], "occup": 130, "occupi": 130, "occur": [39, 48, 49, 52, 68, 70, 71, 72, 76, 85, 93, 130, 133, 140, 154, 171, 174, 180, 196], "occurr": [39, 52, 56, 102, 162, 198], "ocean": [192, 201], "ocean_r": 192, "ocr": 180, "oct": 87, "octadecim": 51, "octal": [51, 52, 91, 94], "octilleri": 168, "octob": [45, 130], "od": 101, "odd": [27, 34, 42, 47, 48, 53, 55, 57, 71, 74, 77, 106, 154], "odd_numb": [37, 57], "odd_squar": 55, "oddish": 168, "ofcours": [198, 200, 202], "ofen": 180, "off": [6, 20, 52, 68, 108, 109, 112, 116, 117, 118, 130, 132, 133, 137, 138, 140, 143, 144, 145, 157, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 187, 198, 200, 207], "offer": [0, 24, 51, 53, 81, 95, 117, 130, 138, 139, 141, 145, 152, 155, 171, 173, 174, 176, 180, 186, 189, 192, 194, 195, 197, 198, 199, 200, 201, 202], "offic": [130, 133, 143, 186], "office_print": 139, "offici": [22, 84, 116, 117, 130, 131, 179, 180, 190, 194, 196, 199, 200], "offlin": [11, 180, 197], "offset": [27, 60, 61, 68, 171, 187, 198], "offspr": 194, "often": [1, 5, 8, 48, 52, 53, 87, 94, 101, 106, 116, 130, 133, 137, 138, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 191, 192, 194, 195, 196, 198, 200, 201, 202], "oglethorp": 118, "oh": [168, 175, 198], "ohc": [157, 158, 169], "ohcf": 169, "ohcv": [157, 158, 169], "ohh": 180, "oil": [116, 131], "ok": [52, 89, 117, 130, 132, 133, 136, 140, 141, 144, 179, 180, 186], "okai": [89, 172, 173, 175, 178, 179, 180, 191, 192, 194, 195, 197], "okta": [137, 138], "ol": 129, "old": [39, 44, 71, 84, 94, 101, 106, 116, 117, 118, 129, 130, 132, 133, 134, 140, 155, 157, 164, 177, 178, 188, 191], "old_col": 164, "old_nam": 157, "older": [44, 95, 116, 130, 132, 172], "oldest": [130, 134], "oliv": [116, 131, 189], "olivi": 118, "olli": 141, "omanyt": 168, "omastar": 168, "omit": [39, 116, 140, 179], "omma": 68, "on_chain_end": [128, 130], "on_chain_error": [128, 130], "on_llm_end": 130, "on_llm_error": 130, "on_tool_end": 128, "on_tool_error": 128, "onc": [4, 5, 24, 35, 39, 47, 49, 52, 54, 55, 56, 59, 68, 71, 74, 75, 77, 80, 87, 90, 92, 98, 116, 117, 118, 130, 132, 133, 143, 160, 161, 164, 171, 172, 173, 174, 175, 176, 178, 179, 180, 186, 187, 189, 192, 195, 196, 197, 198, 199, 200, 201, 202, 210], "one": [0, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 24, 34, 35, 36, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 66, 68, 71, 75, 77, 78, 79, 80, 83, 84, 87, 88, 89, 91, 92, 93, 95, 96, 98, 102, 103, 104, 106, 108, 112, 115, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 143, 144, 145, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 166, 167, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204], "one_sent": 145, "onedr": 69, "onedrivetemp": 69, "ones": [5, 52, 80, 116, 130, 132, 133, 134, 135, 140, 144, 150, 151, 153, 154, 155, 164, 166, 173, 174, 175, 176, 177, 178, 179, 180, 194, 196], "ones_lik": 171, "ongo": 200, "onion": [71, 131], "onix": 168, "onli": [7, 13, 22, 27, 35, 36, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 84, 87, 89, 90, 92, 95, 96, 98, 101, 102, 103, 104, 106, 116, 117, 118, 127, 128, 130, 132, 133, 134, 140, 143, 144, 145, 151, 152, 157, 160, 161, 162, 163, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 195, 197, 198, 200, 201, 202], "onlin": [5, 14, 15, 16, 17, 22, 117, 130, 140, 144, 174, 176, 179, 180, 182, 189, 197, 200], "onlinepdfload": 134, "onnx": 180, "ontario": 117, "onto": [129, 130, 131, 133, 144, 172, 179, 180, 191, 199], "onward": 179, "ooo": 52, "oop": [22, 71, 105], "opac": [11, 189], "opaqu": 189, "open": [0, 22, 24, 70, 71, 80, 84, 89, 116, 117, 127, 130, 132, 133, 135, 140, 141, 143, 144, 145, 150, 157, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 209], "open_workbook": 68, "openai": [117, 128, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 171, 209], "openai_api_kei": [116, 117, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "openai_funct": 116, "openaiembed": [116, 117, 132, 133, 134, 136, 142, 143], "opendoor": 144, "openerp": 24, "openingattribut": 117, "openmeteo": 127, "openstreetmap": 117, "openvino": 180, "oper": [1, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 28, 29, 35, 36, 37, 39, 40, 47, 48, 51, 57, 59, 68, 70, 71, 74, 75, 77, 83, 85, 89, 90, 92, 94, 97, 98, 100, 101, 102, 105, 115, 117, 130, 133, 136, 140, 141, 143, 151, 154, 157, 161, 162, 164, 165, 166, 167, 173, 174, 175, 176, 178, 179, 180, 181, 182, 200, 210], "operand": [51, 52, 53, 70, 71, 93, 95, 104], "operatornam": 179, "opex": 139, "opim": 175, "opinion": [129, 140, 194, 198, 200], "opportun": [0, 49, 130, 137, 138, 140, 143, 144, 173, 174, 175, 178, 179, 180, 188], "oppos": 140, "opposit": [79, 131, 140, 157], "opt": [116, 117, 128, 130, 132, 133, 134, 144], "optim": [0, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 49, 55, 92, 98, 118, 130, 132, 140, 141, 143, 144, 161, 175, 176, 177, 178, 180, 181, 182, 210], "optimist": 140, "option": [4, 5, 38, 39, 45, 47, 48, 51, 52, 53, 54, 55, 57, 71, 72, 74, 77, 84, 94, 101, 102, 103, 116, 117, 118, 119, 130, 132, 133, 139, 144, 145, 151, 154, 158, 165, 172, 173, 174, 177, 178, 180, 181, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "oracl": 52, "orang": [45, 47, 53, 56, 71, 91, 95, 117, 130, 159, 180, 189, 192], "oranges_r": 192, "orbital_period": 197, "orchard": 130, "order": [4, 7, 8, 16, 17, 18, 19, 35, 47, 48, 52, 68, 69, 74, 75, 77, 79, 80, 83, 92, 94, 102, 116, 117, 118, 127, 130, 132, 143, 154, 157, 158, 164, 165, 171, 172, 173, 174, 175, 179, 187, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202], "ordereddict": [165, 172, 174], "ordin": [5, 14, 15, 16, 17, 198], "ordinari": [37, 130], "ordinarili": 130, "ore": [39, 202], "oregon": 130, "org": [24, 116, 117, 147, 153, 172, 173, 174, 177, 178, 179, 180, 193, 200, 204], "organ": [24, 53, 59, 74, 80, 83, 94, 101, 116, 130, 140, 141, 143, 177, 200, 204], "orient": [34, 36, 38, 72, 102, 103, 104, 106, 158, 165, 175, 187, 194, 195, 196, 197, 198, 199, 200], "origin": [8, 9, 10, 17, 19, 36, 37, 39, 69, 98, 104, 106, 117, 130, 133, 152, 154, 157, 158, 161, 162, 163, 165, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 187, 191, 196, 200, 201, 204], "orrd": 192, "orrd_r": 192, "orsanmichel": 130, "orthogonol": 26, "os": 130, "oserror": 70, "oshawott": 168, "ot": [39, 46], "otat": 68, "oth": 118, "other": [0, 5, 6, 7, 10, 14, 15, 22, 24, 31, 32, 34, 35, 37, 39, 47, 48, 51, 52, 57, 65, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 95, 98, 101, 102, 103, 104, 106, 109, 116, 117, 118, 127, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 144, 145, 150, 151, 153, 154, 157, 158, 162, 163, 165, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209], "other_kei": 130, "other_mag": 104, "otherwis": [49, 52, 68, 71, 77, 98, 102, 103, 118, 128, 130, 133, 153, 158, 163, 164, 171, 172, 173, 175, 177, 179, 180], "othwerwis": 48, "ottawa": 117, "otter": 130, "ou": 200, "ounc": 133, "ouput": [173, 180], "our": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 34, 38, 39, 44, 48, 49, 51, 68, 69, 70, 71, 72, 74, 78, 80, 83, 84, 85, 87, 88, 94, 101, 104, 106, 116, 117, 129, 130, 132, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 154, 157, 158, 160, 167, 171, 172, 176, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "our_plot": 192, "ourselv": [68, 85, 87, 129, 130, 139, 173, 174, 175, 179, 180], "out": [14, 24, 25, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 68, 70, 72, 74, 77, 79, 80, 87, 88, 89, 90, 91, 92, 95, 104, 107, 111, 116, 117, 118, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 152, 154, 155, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202], "out_channel": [174, 175, 176, 179, 181, 182], "out_featur": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "out_i": 173, "out_proj": 179, "outbound": 141, "outcom": [42, 74, 140, 144, 179, 190], "outer": [36, 46, 47, 48, 75, 153, 157, 171, 180, 196], "outer_fun": 75, "outer_funct": 96, "outermost": 96, "outisd": 177, "outlandish": 130, "outlet": 130, "outlier": [190, 191, 196, 198, 200, 204], "outlier_prop": 200, "outliers_indic": 8, "outlin": [130, 140, 147, 179, 195], "outnumb": 130, "outout": 90, "outperform": [0, 180], "output": [0, 4, 5, 6, 7, 11, 13, 18, 19, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 87, 93, 95, 98, 102, 103, 104, 109, 117, 118, 127, 128, 129, 130, 132, 133, 135, 137, 138, 140, 141, 144, 145, 151, 153, 157, 160, 164, 165, 171, 172, 175, 176, 178, 181, 182, 187, 200, 207, 209], "output_dict": 117, "output_featur": 173, "output_format": 145, "output_kei": [128, 130], "output_param_nam": [11, 13], "output_pars": [116, 117, 131, 135], "output_s": [177, 178, 179, 180], "output_shap": [174, 175, 176, 177, 181, 182], "output_text": [130, 141, 144], "outrun": 179, "outsid": [43, 46, 47, 49, 53, 54, 75, 76, 101, 102, 116, 117, 118, 130, 133, 140, 143, 145, 152, 171, 172, 175, 178, 179, 191, 200, 202], "outstand": [178, 179, 180], "outwardli": 130, "outweigh": [174, 180], "over": [0, 11, 12, 13, 14, 15, 16, 17, 34, 35, 37, 47, 48, 49, 79, 88, 89, 91, 103, 116, 117, 130, 131, 132, 133, 134, 138, 140, 143, 144, 145, 147, 151, 157, 158, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 190, 193, 195, 198, 200, 201], "overal": [98, 140, 145, 147, 171, 175, 178, 179, 180, 187, 192, 197, 198, 200, 201], "overall_chain": 116, "overcom": [51, 144], "overconfid": 130, "overcorrect": 173, "overcurl": 130, "overfit": [11, 12, 13, 14, 15, 16, 17, 18, 19, 173, 174, 177, 179, 180], "overflow": [78, 155], "overflowerror": [70, 95], "overhaul": 118, "overhead": 175, "overkil": 35, "overlai": [191, 198], "overlap": [130, 134, 142, 194, 195, 200], "overlap_cont": 142, "overlap_count": 142, "overli": 201, "overload": [22, 105, 140, 153], "overlook": 130, "overplot": 201, "overrid": [72, 106, 175], "overridden": [72, 103], "overset": 30, "overst": 116, "overt": 130, "overtim": 180, "overvalu": 130, "overview": [14, 15, 20, 27, 30, 89, 108, 112, 116, 154, 171, 172, 190, 191, 198, 199], "overwhelm": 179, "overwrit": [55, 68, 77, 171, 175, 180, 182], "overwritten": 68, "ow": [39, 130], "own": [34, 70, 71, 72, 79, 80, 83, 84, 85, 87, 94, 96, 106, 130, 132, 133, 136, 140, 143, 144, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 195, 196, 197, 198, 200], "owner": 130, "oxford": [94, 197], "oxlei": 133, "ozzie_osman": 116, "p": [1, 24, 27, 30, 31, 39, 47, 49, 52, 53, 54, 56, 57, 60, 61, 66, 90, 94, 97, 101, 137, 138, 144, 171, 175, 177, 178, 179, 180, 188, 192, 195, 198], "p0": 171, "p1": [97, 101, 104, 106, 203], "p100": [171, 177], "p2": [97, 101, 104, 106], "p3": [104, 106], "p4": 106, "p5": 106, "p6": 106, "p7": 106, "p8": 171, "p_": 31, "p_letter": 57, "p_list": 24, "pa": 186, "pace": 140, "pachirisu": 168, "pacif": 145, "pack": [37, 54, 130, 131, 133, 179], "packag": [22, 68, 80, 86, 89, 116, 117, 118, 119, 128, 129, 130, 132, 133, 134, 139, 140, 144, 145, 157, 161, 164, 165, 166, 171, 172, 174, 175, 176, 177, 178, 179, 180, 186, 189, 193, 195, 197, 199, 200, 201, 202], "packagesin": 83, "packing_person_info": 71, "packym": 140, "pad": [52, 60, 61, 94, 95, 174, 175, 176, 179, 181, 182], "padding_mod": 175, "page": [6, 66, 81, 82, 89, 104, 109, 117, 127, 130, 134, 144, 171, 172, 173, 176, 177, 179, 189, 199, 207], "page_cont": [116, 117, 130, 132, 133, 134, 136, 141, 142, 143, 144, 145], "page_data": 141, "pagefil": 69, "pagerduti": 144, "pai": [95, 130, 133, 143, 144, 175, 179, 180], "paid": 130, "pain": [117, 118, 130, 145, 201], "painfulli": 130, "paint": [117, 130, 140], "painter": 130, "pair": [11, 14, 15, 47, 52, 56, 82, 92, 93, 145, 157, 158, 164, 165, 173, 192, 195, 197, 199, 200, 201], "paired_r": 192, "pairgrid": [188, 192, 193, 202, 205], "pairplot": [188, 192, 201, 202], "pairwis": 193, "pakistan": 68, "pal": [30, 127, 202], "pale": [130, 189, 195], "palett": [178, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205], "palkia": 168, "palm": 138, "palpitoad": 168, "palplot": 189, "pan": [117, 131], "pancetta": 116, "pancham": 168, "panda": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 47, 117, 135, 137, 138, 141, 147, 148, 172, 173, 174, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209], "panel": [199, 201], "pangoro": 168, "panopt": 174, "panpour": 168, "pansag": 168, "pansear": 168, "paper": [0, 116, 117, 130, 136, 143, 145, 171, 175, 177, 180, 185, 187, 189, 190, 200, 209], "paperswithcod": [175, 177, 179], "paprika": 131, "par": [177, 179], "para": 168, "para1": 37, "para2": 37, "para3": 37, "paradigm": [101, 180], "paragraph": [39, 145, 179], "parallel": [78, 117, 130, 145, 202], "param": [8, 9, 118, 128, 130, 139, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 190, 195, 196, 200, 201, 202], "param1": 57, "param2": 57, "param3": 57, "param_1": [5, 9, 15], "param_2": [5, 9, 15], "paramet": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 39, 40, 52, 57, 68, 75, 79, 80, 84, 87, 91, 98, 101, 103, 106, 116, 117, 118, 119, 127, 137, 138, 139, 142, 143, 145, 147, 154, 158, 159, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "parameter": 102, "parameter1": [74, 84], "parameter2": 74, "parametr": [102, 200], "paramount": 175, "paranthes": 52, "paranthesi": [54, 89], "parasect": 168, "parch": [196, 198], "parent": [72, 116, 129, 138, 143, 172, 174, 175, 176, 177, 178, 180, 181, 182, 194], "parent_splitt": 133, "parentattr": 103, "parentdocumentretriev": 133, "parenthes": [35, 39, 47, 52, 54, 70, 79, 87, 89, 91, 92, 130, 187], "parenthesi": [35, 70, 75, 154], "parentmethod": 103, "pareto": [81, 198], "paretovari": 81, "pari": [116, 117, 147], "park": [138, 140, 177, 190], "parkpicn": 140, "parmar": [37, 45, 47, 52, 57, 68, 74, 77, 80, 90, 101], "parmesan": 116, "parmet": 130, "parr": 143, "parramet": 202, "parrot": [101, 102], "pars": [65, 68, 70, 98, 117, 135, 137, 138, 143, 144, 157], "parser": [70, 117, 130, 133, 137, 138, 144], "parslei": 116, "part": [1, 37, 39, 47, 48, 49, 51, 52, 80, 82, 91, 92, 95, 96, 116, 118, 130, 132, 133, 136, 138, 139, 141, 143, 145, 147, 150, 152, 162, 165, 171, 172, 173, 174, 177, 178, 179, 180, 183, 184, 186, 196, 200], "parti": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 59, 83, 130, 143, 145], "partial": [7, 118, 177], "partial_ratio": [118, 119], "partial_token_sort_ratio": 119, "partial_vari": [116, 117, 131, 135], "particip": 143, "particl": 39, "particuar": [17, 18, 19], "particular": [42, 47, 48, 49, 51, 55, 56, 59, 64, 80, 90, 92, 101, 103, 117, 130, 132, 151, 157, 160, 161, 163, 164, 165, 167, 172, 173, 175, 179, 186, 187, 188, 190, 191, 195, 196, 197, 198, 200, 201, 202], "particularli": [52, 130, 143, 144, 196, 197], "partit": [3, 10, 52], "partli": 130, "partner": [128, 130, 145], "pascal": 130, "pass": [22, 34, 36, 37, 39, 40, 42, 43, 44, 50, 52, 59, 60, 61, 65, 70, 71, 72, 77, 79, 80, 84, 88, 90, 101, 102, 103, 106, 116, 117, 118, 119, 130, 131, 132, 133, 134, 138, 139, 141, 145, 151, 157, 158, 159, 160, 161, 164, 166, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202], "passag": [130, 132, 140, 200], "passeng": [198, 200, 202, 203], "passenger_count": 200, "passion": [140, 141], "passiv": 140, "passport": 130, "password": [44, 117], "password_check": 44, "past": [116, 130, 132, 136, 143, 144, 145, 148, 172, 174, 175, 176, 177, 178, 179, 180, 182, 187, 192, 195, 196, 197, 200], "pastel1": [192, 197], "pastel1_r": 192, "pastel2": 192, "pastel2_r": 192, "pat": 115, "patch": [118, 180, 194, 198, 201], "patch_and_position_embed": 179, "patch_artist": 147, "patch_embed": 179, "patch_embedded_imag": 179, "patch_embedded_image_with_class_embed": 179, "patch_embedding_class_token": 179, "patch_embedding_lay": 179, "patch_embedding_with_class_token": 179, "patch_height": 179, "patch_siz": 179, "patch_width": 179, "patchcollect": 200, "patched_image_through_mlp_block": 179, "patched_image_through_msa_block": 179, "patchembed": 179, "patcher": 179, "patchifi": 179, "path": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 68, 69, 83, 94, 109, 117, 119, 130, 132, 133, 139, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 207], "path_to_dir": 180, "path_to_model": 180, "pathcollect": [194, 195], "pathlib": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "patienc": 190, "patrat": 168, "patrick": 130, "pattern": [0, 31, 37, 98, 130, 147, 171, 172, 173, 174, 175, 177, 178, 179, 180, 189, 201], "paul": [116, 118, 130, 132, 133, 134, 186], "paul_graham_essai": 132, "paulg": 140, "paulgraham": [116, 130, 142], "paulgrahamessai": [116, 117, 130, 132, 133, 134], "paulgrahamessayslarg": 133, "paulgrahamessaysmal": [132, 136], "paulgrahamessaysmedium": 133, "paulgrahamessayssmal": 133, "paus": 35, "pawniard": 168, "payment": 130, "payoff": 116, "pb": 130, "pc": 180, "pca": 199, "pcie": 171, "pclass": [196, 198], "pctdistanc": 147, "pd": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 117, 135, 137, 138, 141, 147, 148, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 175, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "pd_data": 8, "pd_test_data": [16, 17, 18, 19], "pd_train_data": [16, 17, 18, 19], "pdf": [132, 134, 190, 191, 193, 205], "peach": 198, "peak": [130, 169, 191, 197], "pear": [45, 53, 56, 117, 130], "pearl": 98, "pearsonr": 201, "peculiar": [106, 157], "pedestrian": 7, "pedro": 118, "peek": [16, 17, 18, 19, 186], "peer": 145, "peggi": [101, 103], "pelipp": 168, "penal": 0, "penetr": 130, "penguin": [101, 103, 141], "penicillin": 47, "peo": 39, "peopl": [39, 52, 56, 116, 117, 130, 132, 133, 134, 137, 138, 140, 141, 143, 144, 145, 171, 174, 175, 176, 177, 179, 180, 186, 189, 195, 200], "pep": [84, 118], "pep8": 118, "pepper": [116, 131], "per": [11, 13, 72, 95, 117, 118, 130, 132, 134, 137, 138, 139, 145, 147, 148, 158, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 186, 187, 189, 190, 196, 197, 198, 200, 202], "peramet": 77, "perceiv": [133, 189], "percent": [37, 178, 180], "percentag": [14, 15, 16, 17, 18, 19, 47, 94, 101, 148, 157, 160, 164, 167, 180, 194, 196, 198, 200], "percentil": [101, 154, 157, 200], "percep": [18, 19], "percept": [130, 197], "perceptron": 7, "perceptron_index": [18, 19], "perenni": 130, "perf": 171, "perfect": [1, 48, 89, 130, 132, 140, 145, 173, 180], "perfectli": [88, 89, 116, 172], "perflog": 69, "perform": [0, 7, 10, 18, 19, 24, 34, 36, 40, 42, 47, 48, 51, 52, 53, 54, 55, 56, 57, 68, 71, 74, 79, 80, 85, 87, 92, 93, 94, 95, 98, 101, 104, 115, 116, 118, 127, 130, 132, 139, 150, 153, 157, 161, 164, 166, 167, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 198, 210], "performan": 173, "perhap": [130, 175, 177, 178, 179, 180], "perimet": [74, 95, 103], "perimeter_of_circl": 74, "period": [27, 79, 84, 130, 157, 180, 200], "periodic_function1": 27, "periodic_function2": 27, "perl": 24, "perm": 80, "perman": [68, 180], "permiss": [71, 130], "permit": 198, "permut": [171, 175, 179, 203], "permutebackward0": 179, "persev": 175, "persian": 168, "persist": [140, 171], "person": [0, 45, 47, 68, 74, 77, 84, 89, 90, 95, 101, 102, 103, 116, 117, 122, 128, 130, 132, 133, 137, 138, 140, 145, 146, 173, 175, 178, 179, 180, 195, 198, 200], "person_dct": 68, "person_info": [90, 101, 103], "person_json": 68, "person_schema": 138, "personaccount": 101, "persons_nam": 144, "perspect": [131, 133, 137, 138, 140, 145, 174, 175, 178, 179], "peso": 117, "pet": [130, 145], "petal": [9, 10, 14, 186, 194], "petal_length": [3, 5, 10, 14, 186, 189, 191, 192, 194, 195, 201, 204], "petal_width": [3, 5, 10, 14, 186, 194, 195, 201, 204], "petallengthcm": 147, "petalwidthcm": 147, "petilil": 168, "pg": 116, "pg2148": 116, "pg_work": 116, "ph": 197, "phanpi": 168, "phantump": 168, "phase": [27, 133], "phd": 130, "phenomen": 179, "phenomena": 130, "philosohpi": 173, "philosoph": [132, 180], "philosophi": [130, 132], "philosophia": 132, "phind": 141, "phion": 168, "phone": [40, 94, 97, 130, 134, 140, 145, 180], "phone_num": 97, "phone_numb": 94, "photo": [140, 147, 173, 174, 175, 177, 178, 179, 180], "photograph": [0, 130], "photorealist": 130, "photoshop": 145, "php": [55, 98], "phrase": [52, 117, 132, 137, 138, 140], "physic": [78, 101, 116, 130, 140, 143, 179, 186], "pi": [27, 29, 30, 39, 51, 52, 70, 74, 80, 82, 90, 94, 95, 99, 101, 130, 168, 180], "piazza": 130, "picalo": 24, "pichu": 168, "pick": [3, 8, 10, 14, 117, 130, 132, 137, 138, 145, 152, 172, 174, 175, 178, 179, 186, 189, 190, 192, 198, 200], "picki": 134, "pickl": [84, 172], "pickler": 84, "pickletool": 84, "pickup_datetim": 200, "pickup_latitud": 200, "pickup_longitud": 200, "picnic": 130, "pictori": 198, "pictur": [3, 4, 5, 7, 16, 17, 18, 19, 49, 129, 130, 140, 143, 179, 202], "pid": 171, "pidgei": 168, "pidgeot": 168, "pidgeotmega": 168, "pidgeotto": 168, "pidov": 168, "pie": 180, "piec": [38, 116, 117, 129, 130, 132, 133, 134, 138, 140, 141, 143, 144, 145, 152, 171, 172, 174, 175, 176, 178, 179, 180, 182, 198], "piecem": 136, "piechart": 147, "pignit": 168, "pikachu": 168, "pil": [174, 175, 177, 180], "pile": 198, "piloswin": 168, "pilot": [116, 117], "pin": [134, 179], "pin_memori": [176, 179, 182], "pinch": 133, "pine": 130, "pineappl": [117, 198], "pineco": 168, "pinecon": 116, "pinecone_api_env": 134, "pinecone_api_kei": [134, 143], "pinecone_env": 143, "ping": [137, 138], "pink": [47, 131, 189, 192], "pink_r": 192, "pinsir": 168, "pinsirmega": 168, "pinterest": 144, "pioneer": 141, "pip": [24, 68, 80, 116, 117, 118, 119, 127, 132, 133, 134, 136, 139, 144, 173, 174, 175, 177, 178, 179, 180], "pip3": [177, 178, 179, 180], "pipe": [127, 197], "pipelin": [0, 117, 175, 177, 178, 179, 180, 182, 197], "piplein": 175, "piplup": 168, "pirat": [116, 117, 140], "pitti": 130, "pittsbugh": 117, "pivot": [157, 203], "pivot_t": 157, "pixel": [5, 7, 9, 16, 17, 18, 19, 130, 147, 171, 174, 175, 179], "pixel1": [17, 19], "pixel2": [17, 19], "pixel3": [17, 19], "pixel4": [17, 19], "pixel5": [17, 19], "pixel6": [17, 19], "pixel7": [17, 19], "pixel775": [17, 19], "pixel776": [17, 19], "pixel777": [17, 19], "pixel778": [17, 19], "pixel779": [17, 19], "pixel780": [17, 19], "pixel781": [17, 19], "pixel782": [17, 19], "pixel783": [17, 19], "pixel784": [17, 19], "pixel8": [17, 19], "pixel9": [17, 19], "piyg": 192, "piyg_r": 192, "pizel": [17, 18, 19], "pizza": [175, 176, 177, 178, 179, 180, 181, 182], "pizza_steak_sushi": [175, 176, 177, 178, 179, 181, 182], "pizza_steak_sushi_20_perc": [178, 180], "pl": 130, "place": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 37, 38, 51, 52, 53, 54, 55, 56, 59, 68, 71, 72, 77, 78, 80, 83, 89, 90, 92, 94, 103, 106, 116, 130, 132, 133, 136, 138, 140, 143, 171, 172, 174, 175, 176, 177, 178, 179, 180, 186, 198, 202, 203], "placehold": [49, 52, 94, 116, 132, 143], "plagu": 130, "plai": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 89, 96, 103, 117, 130, 132, 133, 134, 140, 143, 144, 145, 157, 171, 173, 180, 187, 189, 190, 192, 194, 195, 196, 198, 199, 200, 201, 202], "plain": [14, 15, 34, 106, 118, 137, 138, 179, 197], "plan": [101, 117, 130, 133, 141, 143, 145, 173, 180, 200], "plane": [11, 15, 26, 116, 135], "planet": 197, "planets_data": 197, "plant": [116, 138, 173], "plant_schema": 138, "plant_typ": 138, "plasma": [192, 197, 200], "plasma_r": 192, "plate": 198, "platform": [22, 24, 68, 98, 127, 141, 145, 171, 200], "platon": 130, "plausibl": 130, "plausibli": 130, "player": [47, 48, 101, 103, 147], "playground": [7, 173], "ple": 39, "pleas": [48, 116, 117, 118, 130, 132, 137, 138, 139, 140, 141, 143, 144, 158, 177, 180, 187, 189, 190, 191, 193, 197, 198, 200, 202], "pleasur": [130, 140], "plenti": [70, 130, 157, 172, 173, 175, 177, 178, 179, 180], "plot": [4, 25, 107, 111, 116, 130, 132, 172, 173, 174, 178, 180, 186, 201, 202, 203, 204, 205], "plot_confusion_matrix": [173, 174], "plot_data": 11, "plot_decision_boundari": 173, "plot_figur": 11, "plot_func": 202, "plot_function1": 27, "plot_function2": 27, "plot_index": [16, 17, 18, 19], "plot_joint": 191, "plot_kw": 192, "plot_layout": 11, "plot_loss_curv": [175, 177, 179, 180], "plot_predict": [172, 173], "plot_predictions_trac": 11, "plot_test_trac": 11, "plot_training_trac": 11, "plot_transformed_imag": 175, "plotcontour": 30, "plotdist": 30, "plotli": [11, 191], "plotlin": 148, "plotnonfinit": 195, "plotter": 195, "plottext": 30, "plotting_context": 187, "plt": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 30, 107, 111, 132, 147, 148, 172, 173, 174, 175, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "plu": [95, 130, 137, 138, 140, 143, 145, 171, 175, 199], "plug": [133, 145, 180], "plugin": [116, 117], "plural": 138, "plusl": 168, "pm": [29, 60, 61, 66, 145], "png": [30, 68, 69, 117, 147, 148, 175, 191], "po": [161, 179, 198], "pocoo": 24, "podcast": [117, 143, 144, 145, 172, 177], "podcastnot": 143, "poetri": [24, 130], "pofession": 202, "point": [4, 5, 8, 35, 36, 38, 39, 51, 52, 56, 65, 66, 70, 80, 81, 82, 91, 92, 95, 102, 104, 106, 116, 117, 118, 130, 132, 133, 136, 140, 143, 144, 145, 147, 154, 171, 172, 173, 174, 175, 177, 178, 180, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 203], "point_color": 195, "pointer": 68, "pointplot": [194, 198], "poison": 168, "poisson": 194, "pokemon": 168, "pokemon_data": 168, "pol": 117, "poli": [101, 141], "polic": 186, "policekillingsu": 186, "polici": 141, "polio": 47, "polito": 168, "poliwag": 168, "poliwhirl": 168, "poliwrath": 168, "pollut": 38, "polluzion": 130, "poloclub": [174, 175, 176, 181, 182], "poly1d": 188, "polyfit": 188, "polygon": 103, "polynomi": [11, 12, 13, 14, 15, 16, 17, 150, 190], "polynomial_degre": [11, 12, 13, 14, 15, 16, 17], "ponyta": 168, "poochyena": 168, "pool": [130, 174], "pool_timeout": 128, "poor": [130, 171, 172, 173, 175, 177, 180], "poorli": [116, 175, 189], "pop": [42, 55, 56, 132, 147, 192, 196, 201, 204], "popitem": 55, "popul": [37, 57, 68, 74, 81, 117, 131, 177, 178, 200, 202], "popular": [22, 24, 52, 66, 80, 84, 98, 101, 116, 117, 130, 136, 171, 172, 173, 175, 179, 182], "populu": 177, "por": 117, "poriod": 27, "pork": 131, "porn": 130, "porsch": 169, "port": [98, 118, 130, 144], "portabl": [22, 84, 98, 118], "portal": [127, 140, 199], "portfolio": [180, 209], "portion": [52, 53, 71, 75, 96, 117, 130, 174, 175, 177, 178, 179, 186], "portrai": 189, "portrait": 130, "portug": [117, 147], "portugues": 68, "porygon": 168, "porygon2": 168, "posit": [0, 1, 15, 29, 37, 39, 40, 43, 44, 45, 46, 52, 57, 71, 74, 78, 79, 82, 91, 127, 128, 130, 132, 137, 138, 140, 143, 145, 157, 166, 167, 173, 175, 189, 191, 194, 195, 196, 198, 202], "position_embed": 179, "positional_or_keyword": 164, "positional_ord": 52, "positive_even_numb": 57, "positive_no": 79, "positive_numb": 94, "posixpath": [175, 178, 179, 180, 181, 182], "possess": 190, "possibl": [0, 8, 11, 16, 17, 18, 19, 38, 39, 44, 47, 49, 52, 54, 57, 71, 78, 80, 83, 90, 91, 94, 116, 117, 118, 130, 136, 137, 138, 143, 144, 147, 153, 154, 157, 159, 160, 172, 173, 175, 176, 177, 179, 180, 189, 192, 194, 197, 200, 202, 203, 210], "possibli": [7, 102, 133, 175, 198], "post": [25, 64, 107, 111, 129, 130, 137, 138, 140, 144, 145, 175, 176, 178, 179, 180, 186, 189, 194, 195, 196, 197], "postag": 201, "postal": 174, "postalcod": 117, "postdoc": 130, "poster": 187, "postscript": 130, "pot": [116, 131], "potato": [71, 74, 95, 131, 137, 138, 139], "potenti": [116, 117, 140, 141, 143, 144, 145, 147, 157, 172, 173, 174, 175, 178, 179, 180, 192, 199, 201], "pound": 199, "pour": 116, "poverti": 140, "pow": [70, 80, 82], "pow2": [53, 57], "power": [34, 35, 47, 52, 53, 57, 70, 80, 82, 89, 90, 95, 96, 103, 104, 108, 112, 116, 117, 120, 127, 130, 136, 137, 138, 139, 140, 141, 143, 150, 151, 153, 157, 171, 172, 174, 175, 177, 178, 179, 180, 200, 202], "powtwo": [34, 35], "powtwogen": 35, "pp": 39, "pple": 39, "ppp": 28, "pprint": 172, "pr": 118, "practic": [22, 23, 28, 29, 39, 54, 71, 72, 74, 80, 85, 106, 130, 132, 133, 138, 143, 145, 151, 157, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 187, 191, 197, 198, 199, 200, 202, 209], "practical_estimation_of_the_bandwidth": 193, "praction": [177, 178], "practition": [178, 179], "prantsus": 117, "prantsusmaa": 117, "pre": [0, 80, 98, 133, 141, 143, 172, 175, 177, 179, 190, 198, 199, 200, 202], "prebuilt": 24, "prec": 30, "preced": [43, 60, 61, 71, 77, 89, 103, 130, 191], "precis": [1, 51, 95, 130, 133, 162, 167, 171, 173, 187, 190, 194, 200, 202], "precision_histori": 8, "precision_scor": 173, "preciss": [8, 16, 17, 18, 19], "pred": [173, 174, 175, 177, 180, 181, 182], "pred_and_plot": 179, "pred_and_plot_imag": [175, 177, 178, 179, 184], "pred_and_stor": 180, "pred_class": [174, 180], "pred_dict": 180, "pred_label": [174, 180], "pred_labels_and_prob": 180, "pred_list": 180, "pred_logit": [174, 180], "pred_prob": [174, 180], "pred_tim": 180, "predefin": [0, 5, 11, 68, 74, 80, 93, 130, 187], "predetermin": 116, "predicit": [173, 180], "prediciton": 174, "predict": [0, 4, 5, 14, 15, 98, 117, 129, 130, 133, 140, 144, 181, 182, 184, 190, 200], "predict_and_pars": [133, 138], "predict_messag": 139, "predicted_label": [16, 17, 18, 19], "prediction_kei": 117, "predictions_num": [11, 12, 13], "predicton": 174, "predictor": 190, "predomin": 26, "prefer": [35, 36, 51, 89, 103, 116, 118, 132, 143, 147, 158, 172, 173, 174, 175, 176, 180, 187, 194, 197, 198], "prefix": [51, 83, 96, 101, 102, 116, 187, 189], "preidction": 177, "prematur": 130, "premis": [174, 175, 177, 179, 180], "premium": 143, "prep_output": [128, 130], "prep_prompt": 130, "prepar": [132, 134, 143, 144, 176, 177, 178, 180, 181, 182, 184, 186, 201, 209], "prepare_request": 128, "prepend": [153, 179], "preprend": 179, "preprocess": [118, 175, 177, 179, 180], "prescript": 130, "presenc": [6, 51, 95, 109, 130, 145, 179, 191, 207], "present": [45, 47, 49, 52, 55, 56, 69, 71, 79, 84, 95, 118, 130, 132, 140, 143, 145, 157, 160, 161, 164, 171, 174, 175, 178, 179, 180, 182, 187, 188, 190, 191, 192, 194, 195, 197, 198, 199, 200, 201, 202, 210], "preserv": [51, 130, 140, 180], "preset": 187, "presid": [130, 140], "press": [48, 89, 130, 141, 178, 189], "pression": 39, "pressur": 200, "prestig": 130, "prestigi": 130, "presum": 130, "pretend": 144, "preternatur": 130, "pretrain": [173, 174, 175, 180], "pretrained_effnetb2_food101_model_s": 180, "pretrained_effnetb2_model_s": 180, "pretrained_vit": 179, "pretrained_vit_model_s": [179, 180], "pretrained_vit_result": 179, "pretrained_vit_transform": 179, "pretrained_vit_weight": 179, "pretti": [14, 15, 24, 37, 64, 87, 92, 130, 132, 133, 140, 145, 157, 172, 173, 175, 177, 178, 180, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "prevent": [11, 12, 13, 14, 15, 16, 17, 18, 19, 83, 90, 101, 103, 133, 140, 174, 175, 177, 179, 180], "preview": [116, 117, 130, 132, 137, 138, 141, 145, 186, 188, 190, 191, 192, 196, 197, 198, 200, 202], "previou": [7, 38, 44, 51, 68, 75, 80, 96, 106, 118, 143, 152, 171, 172, 173, 174, 176, 177, 178, 179, 180, 187, 191, 192, 194, 195, 196, 197, 199, 200, 202], "previous": [71, 80, 118, 141, 143, 175, 176, 177, 178, 179, 180, 191, 192, 195, 197, 200, 201, 202], "prgn": 192, "prgn_r": 192, "price": [0, 4, 5, 101, 102, 130, 133, 137, 138, 141, 145, 147, 157, 158, 159, 168, 179, 200], "price_df": 159, "price_list": 159, "pricedf": 169, "primari": [130, 175, 179, 189, 200], "primarili": [47, 48, 140], "prime": [47, 48, 74, 179], "primeap": 168, "primit": 130, "princeton": 200, "princip": 199, "principl": [101, 117, 130, 175, 178, 179, 200], "prinplup": 168, "print": [6, 8, 10, 11, 12, 13, 14, 15, 18, 19, 24, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 89, 90, 91, 92, 93, 95, 96, 97, 101, 102, 103, 104, 106, 109, 116, 117, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 194, 200, 207], "print_data": 75, "print_financial_forecast": 139, "print_full_nam": 37, "print_fullnam": [74, 77], "print_hello": 66, "print_hello_three_tim": 66, "print_hi": 66, "print_hi_three_tim": 66, "print_list": 74, "print_msg": 36, "print_this_to_screen": 88, "print_train_tim": 174, "printer": [36, 37, 130, 139], "printer_nam": 139, "printf": 52, "printhello": 96, "printinfo": 77, "printnam": 101, "printoutput": [137, 138], "printstudentdata": 102, "prior": [7, 130, 172, 174, 175, 177, 200], "priori": 0, "priorit": [117, 134, 143], "prioriti": [143, 145], "prism": [192, 201], "prism_r": 192, "privaci": [141, 180, 209], "privat": [38, 80, 101, 102, 130, 144, 180], "privatenam": 89, "privileg": 201, "priyav": 143, "pro": [171, 175, 178, 180], "proactiv": 143, "prob": [173, 175, 177, 180, 181, 182], "probabl": [1, 5, 8, 11, 12, 13, 23, 51, 90, 116, 118, 130, 133, 145, 147, 151, 172, 174, 175, 177, 178, 179, 180, 181, 182, 189, 191, 196, 197, 203, 209], "problem": [0, 12, 24, 29, 36, 38, 40, 52, 71, 78, 101, 116, 117, 127, 130, 132, 133, 140, 143, 172, 174, 175, 177, 178, 179, 180, 189, 197, 201, 202, 210], "probopass": 168, "proce": [7, 49, 94, 192], "procedur": [102, 200], "process": [0, 7, 11, 13, 14, 15, 17, 18, 19, 24, 28, 29, 31, 35, 48, 49, 54, 57, 66, 71, 78, 93, 98, 101, 102, 103, 106, 117, 118, 130, 132, 133, 134, 136, 141, 143, 144, 145, 157, 159, 163, 171, 174, 175, 177, 179, 180, 190, 201, 202, 209], "processor": [98, 118, 130, 174], "processtest": 118, "procrastin": [130, 133], "prod": [28, 80], "prod_": 28, "prod_i": 28, "prod_j": 28, "produc": [9, 15, 35, 39, 44, 71, 87, 103, 116, 130, 147, 148, 153, 161, 164, 171, 172, 173, 174, 178, 179, 180, 187, 209], "product": [11, 23, 26, 78, 80, 84, 90, 98, 104, 116, 117, 130, 132, 133, 137, 138, 140, 141, 143, 144, 145, 150, 153, 171, 174, 175, 176, 179, 189, 190, 191, 192, 202, 209], "production": 145, "profession": [130, 147, 187, 188, 189, 194, 195, 197], "professor": [117, 130], "profici": 190, "profil": [130, 143, 144, 178, 180], "profit": [117, 130, 143, 144], "profit_rang": 148, "profitlist": 148, "program": [0, 7, 18, 19, 24, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 96, 102, 103, 104, 106, 116, 117, 130, 131, 136, 141, 145, 175, 176, 178, 180, 190, 200, 209], "programdata": [61, 69, 80, 161, 164, 165, 166, 186, 189, 193, 195], "programm": [0, 38, 51, 57, 71, 74, 84, 89, 91, 101, 106, 130, 192], "programmar": 85, "programmat": [172, 178], "progress": [24, 132, 140, 141, 143, 172, 173, 174, 175, 178], "project": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 59, 83, 85, 116, 117, 118, 130, 133, 137, 138, 140, 141, 143, 144, 172, 173, 175, 176, 178, 179, 180, 182, 190, 192, 199, 202, 209], "promin": 194, "promis": [106, 116, 133, 144, 175, 179, 186, 192, 200], "promontori": 130, "promopt": [132, 144], "promot": [93, 95, 133], "prompt": [45, 74, 80, 94, 95, 117, 129, 130, 133, 135, 137, 138, 139, 140, 144, 150, 180], "prompt_templ": [116, 133], "prompt_token": [137, 138], "prompttempl": [116, 117, 129, 131, 132, 133, 140, 141, 144], "promptvalu": 116, "prone": [175, 179], "pronoun": 101, "pronounc": [179, 201], "prop": [172, 180, 195, 198], "prop_cycl": [25, 107, 111], "proper": [70, 101, 117, 118, 130, 145, 162, 180], "properli": [68, 69, 70, 87, 102, 145, 196, 197, 202], "properti": [22, 41, 80, 101, 103, 116, 133, 137, 139, 143, 160, 195, 200], "propon": 177, "proport": [0, 4, 5, 11, 13, 16, 17, 18, 19, 32, 130, 173, 180, 196, 198, 200], "proportion": 130, "propos": [106, 131, 132, 140], "prospect": [0, 130, 133, 141, 145], "protect": [54, 71, 92, 101, 102, 143, 145], "protein": [131, 171, 172], "protocol": [24, 34], "prototaxit": 117, "prototyp": [3, 10, 22, 102, 130], "proud": 178, "prove": [116, 130, 140], "proven": 177, "provid": [0, 22, 24, 36, 38, 42, 47, 49, 51, 52, 53, 55, 66, 69, 71, 72, 74, 77, 80, 84, 94, 101, 102, 103, 116, 117, 119, 127, 128, 130, 132, 133, 140, 141, 143, 148, 150, 153, 155, 157, 158, 159, 161, 164, 169, 174, 176, 179, 180, 189, 191, 194, 196, 200, 201, 202, 210], "provinc": 117, "proxi": [70, 103, 128, 180], "prudent": [130, 143], "prune": [134, 188], "prwrxu49dd": 140, "pry": 133, "pseudo": [71, 81, 117], "pseudocod": 179, "pseudocolor": 189, "pseudorandom": 171, "psychic": 168, "psyduck": 168, "pt": [172, 176, 181, 182], "pth": [172, 174, 176, 178, 179, 180, 181, 182], "ptp": 194, "pubic": 180, "public": [84, 101, 135, 140, 178, 179, 180], "publicli": [130, 178], "publish": [130, 136, 177, 179, 180, 200], "pubu": 192, "pubu_r": 192, "pubugn": 192, "pubugn_r": 192, "pull": [117, 118, 130, 133, 137, 138, 139, 140, 143, 145, 152, 179, 189, 198, 199, 202], "pull_from_greenhous": [137, 138], "pull_from_websit": 144, "pullov": [17, 19, 174], "pullstat": 118, "puls": [130, 199], "pump": 133, "pumpkabooaverag": 168, "pumpkaboolarg": 168, "pumpkaboosmal": 168, "pumpkaboosup": 168, "punch": 130, "punctuat": [80, 118], "puor": 192, "puor_r": 192, "pupitar": 168, "purchas": [0, 145, 173, 175, 180], "purd": 192, "purd_r": 192, "pure": [118, 172, 178, 180], "puri": 143, "purpl": [189, 192, 194], "purples_r": 192, "purpos": [7, 22, 24, 42, 68, 72, 79, 80, 81, 89, 90, 101, 102, 103, 104, 108, 112, 130, 159, 171, 172, 173, 175, 178, 179, 182, 188, 189, 190, 195, 196, 199, 200, 202], "purposefulli": 117, "purrloin": 168, "pursuit": 130, "purugli": 168, "push": [130, 180], "put": [38, 39, 43, 44, 49, 52, 53, 71, 87, 94, 96, 116, 117, 130, 132, 133, 134, 137, 138, 140, 143, 144, 145, 155, 174, 176, 177, 178, 180, 181, 182], "puzzl": [130, 174, 179, 180], "pvalu": 188, "pwr": 171, "py": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 37, 52, 61, 72, 76, 80, 83, 84, 87, 90, 94, 116, 117, 118, 119, 128, 130, 132, 133, 134, 161, 164, 165, 166, 171, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 186, 189, 193, 195], "py2": 118, "py26": 118, "py3": [80, 118], "py33": 118, "py_list": 53, "py_tupl": 54, "pybrain": 24, "pyc": 180, "pycharm": [24, 187], "pycodestyl": [117, 118, 119], "pydant": 116, "pydantic_schema": 137, "pydantic_v1": [116, 137], "pydata": [186, 200, 204], "pygam": 24, "pygment": 118, "pyguid": 118, "pykyra": 24, "pynb": 80, "pypdf": 134, "pypdfload": [132, 134], "pypi": [118, 119], "pyplot": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 27, 107, 111, 132, 147, 148, 172, 173, 174, 175, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "pypy3": 118, "pyqt": 24, "pyramid": [24, 47, 52], "pyroar": 168, "pyscript": 80, "pytest": [118, 119], "pyth0ndatatyp": 52, "pythagora": 132, "pythagorean": 130, "pytho": 52, "python": [97, 98, 116, 117, 118, 119, 127, 128, 132, 136, 141, 147, 152, 153, 160, 161, 164, 167, 171, 172, 174, 175, 177, 178, 179, 181, 183, 184, 188, 190, 192, 195, 197, 200, 201, 209, 210], "python3": [55, 71, 116, 117, 118, 128, 130, 132, 133, 134, 174, 175, 180], "python32": 52, "python38": 80, "python4datasci": 80, "python99": [44, 68, 69], "python_datatyp": 52, "python_dataypes_2021": 52, "python_learn": 69, "python_repl": 127, "python_studi": 69, "pythonblogsoftwar": 24, "pythondatatyp": 52, "pythonpath": 80, "pythonregex": 39, "pythonthi": 89, "pythonwikiengin": 24, "pythonwin": 80, "pytorch": [47, 181, 184, 209], "pytorch_project": 182, "pytz": [59, 63], "pyweek": 24, "q": [31, 90, 118, 122, 146, 171, 174, 177, 178, 179, 180, 192, 196], "q9trqo4yau": 144, "qa": [117, 136, 143], "qaevalchain": 117, "qkv": 179, "qratio": 118, "qspeci": 117, "quad": [27, 31, 32], "quadrat": 74, "quagsir": 168, "qualit": [177, 178, 189], "qualiti": [117, 130, 132, 133, 134, 140, 141, 143, 147, 148, 174, 175, 177], "quantil": [147, 196], "quantit": [177, 196, 198, 201], "quantiti": [134, 138, 198], "quantiz": 189, "quarter": 200, "quarterli": 202, "quartet": 192, "quartil": [147, 196, 197, 198], "queen": 195, "queenstown": 196, "queer": 130, "queri": [118, 127, 130, 136, 137, 139, 140, 143, 157, 179, 190, 200], "query_constructor": 133, "question": [48, 53, 116, 122, 127, 130, 132, 133, 143, 144, 145, 146, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 182, 201], "question_answ": [117, 130, 134], "question_kei": 117, "questoin": 144, "quetion": 144, "quick": [84, 116, 117, 132, 133, 143, 155, 175, 176, 179, 180, 188, 195, 201], "quicker": [177, 178, 180], "quickest": [130, 180], "quickli": [116, 117, 130, 133, 141, 143, 154, 175, 176, 177, 178, 179, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202], "quiet": 133, "quietli": 130, "quilava": 168, "quilladin": 168, "quintero": 186, "quit": [7, 11, 13, 47, 54, 70, 71, 130, 133, 152, 154, 171, 172, 175, 177, 178, 179, 180, 188, 190, 191, 192, 193, 194, 195, 199, 200, 202, 203], "quo": 132, "quot": [52, 68, 74, 84, 89, 91, 92, 130, 137, 138, 140, 144, 172, 179, 187, 189], "quotat": [84, 87, 116], "quoted_statu": [140, 144], "quux": 53, "quz": 53, "qwilfish": 168, "qxzw7gfumi": 140, "r": [4, 11, 12, 13, 30, 31, 32, 45, 47, 48, 49, 52, 53, 54, 55, 56, 61, 66, 68, 69, 71, 74, 90, 91, 95, 101, 102, 117, 119, 128, 132, 133, 140, 145, 147, 148, 152, 157, 165, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "r1": 151, "race": [130, 186, 194], "rachel": [117, 138], "ractangular": 31, "rad": [32, 147], "rad2deg": 32, "radian": [80, 82], "radio": [130, 145], "radiu": [90, 95, 101, 130], "rag": 130, "rage": [117, 143], "raichu": 168, "raikou": 168, "rail": 130, "railroad": 130, "railwai": 129, "rain": [5, 130], "rainbow": [189, 192, 195, 197, 198, 200], "rainbow_r": 192, "rais": [8, 34, 35, 38, 49, 52, 53, 54, 55, 56, 61, 68, 70, 72, 80, 82, 84, 88, 95, 104, 106, 128, 130, 133, 140, 161, 166, 175, 195], "raise_for_statu": 128, "raise_from": 128, "raison": 130, "raleigh": 143, "ralf": 118, "ralph": 130, "ralt": 168, "ram": 68, "rambl": 130, "ramen": 180, "ramp": [117, 144, 189], "rampardo": 168, "ramsauer": 118, "ran": [47, 70, 71, 87, 101, 102, 130, 171], "rana": 151, "rand": [80, 157, 171, 192, 194, 200, 201, 203], "randaug": 175, "randint": [80, 81, 174, 192, 201], "randn": [25, 107, 111, 172, 174, 178, 179, 193, 196, 200], "random": [1, 3, 8, 11, 13, 16, 17, 18, 19, 22, 25, 51, 56, 68, 86, 107, 111, 118, 132, 134, 150, 157, 172, 173, 177, 178, 179, 180, 181, 182, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "random_idx": 174, "random_image_path": [175, 180], "random_image_size_tensor": 171, "random_image_tensor": 179, "random_index": 179, "random_input_imag": 179, "random_input_image_error": 179, "random_numb": 80, "random_sampl": 151, "random_samples_idx": 175, "random_se": [171, 173], "random_split": 180, "random_split_1": 180, "random_split_2": 180, "random_st": [132, 173, 201], "random_tensor": [171, 174], "random_tensor_a": 171, "random_tensor_b": 171, "random_tensor_c": 171, "random_tensor_d": 171, "random_user_id": 80, "randomhorizontalflip": 175, "randomli": [3, 172, 173, 175, 177, 178, 180, 188, 200], "randomlist": 71, "randomst": 190, "randon": 201, "randrang": [51, 80, 81], "rang": [4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 35, 39, 48, 49, 52, 53, 54, 55, 57, 66, 70, 71, 72, 74, 80, 81, 89, 92, 101, 103, 107, 111, 130, 132, 138, 150, 151, 152, 153, 157, 158, 159, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "rangeindex": [18, 19, 157, 167], "rank": [9, 11, 13, 150, 151, 152, 153], "rank_bm25": 133, "ranska": 117, "ranskan": 117, "rant": 130, "rapid": [22, 130, 144], "rapidash": 168, "rapidli": [22, 130, 180], "rapidroad": 141, "rare": [8, 71, 106, 130, 138, 171], "rarer": 130, "raspberri": 180, "rate": [4, 5, 11, 12, 13, 95, 130, 138, 140, 143, 147, 172, 173, 174, 175, 176, 178, 179, 180, 182, 191, 194, 195, 199], "ratelimiterror": 140, "rather": [5, 7, 18, 19, 59, 66, 80, 84, 89, 103, 116, 130, 132, 133, 137, 139, 140, 143, 144, 157, 158, 160, 164, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 187, 196, 198, 200], "ratic": 168, "ratio": [0, 5, 14, 15, 16, 17, 82, 118, 134, 143, 144, 180, 202], "ration": [51, 132], "rational": 180, "ratiotest": 118, "rattata": 168, "raw": [39, 91, 117, 133, 137, 138, 140, 144, 174, 175, 176, 177, 178, 179, 180, 181, 182, 200], "raw__payload__headers__deliv": 128, "raw_str": 91, "rayquaza": 168, "rayquazamega": 168, "rb": 68, "rbg": 204, "rbodi": 130, "rc": [187, 189, 198], "rcode": 130, "rcparam": [25, 27, 107, 111, 198, 200, 201], "rdbm": 202, "rdbu": [173, 192], "rdbu_r": 192, "rdgy": 192, "rdgy_r": 192, "rdpu": 192, "rdpu_r": 192, "rdwtg8e7gpws62or6": 117, "rdylbu": [173, 192], "rdylbu_r": 192, "rdylgn": 192, "rdylgn_r": 192, "re": [0, 7, 11, 24, 48, 52, 53, 74, 80, 116, 117, 118, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 145, 157, 166, 167, 168, 181, 183, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 202], "rea": 47, "reacal": 8, "reach": [1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 38, 47, 49, 68, 115, 117, 130, 137, 138, 143, 175], "react": [52, 53, 68, 116, 117, 127, 128, 132], "reaction": 133, "reactor": 130, "read": [22, 35, 36, 39, 40, 66, 70, 71, 74, 75, 76, 84, 89, 90, 96, 98, 102, 116, 117, 128, 129, 130, 132, 133, 137, 138, 140, 141, 143, 145, 151, 152, 153, 157, 165, 171, 172, 173, 174, 175, 177, 178, 179, 180, 186, 190, 191, 201, 209], "read_clipboard": [141, 157], "read_csv": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 135, 147, 148, 157, 158, 165, 168, 169, 186, 191, 197, 198], "read_excel": [157, 168], "read_html": 157, "read_imag": 175, "read_json": 157, "read_sql": 157, "read_sql_queri": 117, "read_tabl": 157, "read_timeout": 128, "readabl": [22, 28, 29, 42, 57, 68, 79, 80, 89, 98, 106, 118, 158], "reader": [68, 116, 130, 132, 140], "readi": [71, 101, 103, 116, 117, 130, 136, 137, 138, 143, 144, 171, 172, 174, 175, 177, 178, 179, 180, 210], "readili": [85, 94], "readinto": 128, "readlin": [68, 128, 180], "readm": [68, 118], "readthedoc": 173, "real": [1, 3, 4, 7, 8, 10, 23, 24, 31, 51, 90, 91, 92, 101, 102, 117, 118, 130, 133, 135, 140, 141, 143, 145, 157, 172, 173, 175, 176, 177, 178, 180, 182, 190, 195, 196, 197, 200, 201, 209], "realist": 130, "realiti": [90, 127, 130, 179], "realiz": [130, 133, 134, 197], "realli": [16, 17, 18, 19, 39, 101, 102, 116, 117, 118, 130, 131, 133, 134, 136, 138, 140, 141, 143, 144, 145, 171, 172, 174, 175, 177, 178, 179, 180, 186, 188, 190, 191, 194, 195, 196, 197, 200, 201, 202, 203], "rear": 138, "rearrang": [171, 175, 178, 179], "reason": [4, 12, 35, 36, 37, 38, 51, 74, 79, 96, 102, 106, 116, 117, 127, 128, 130, 132, 133, 136, 143, 144, 154, 163, 171, 174, 179, 180, 186, 188, 195, 197, 202], "reassign": [37, 52, 54, 90, 163, 164, 171, 175], "rebas": 118, "rebel": 130, "rebind": 96, "recal": [1, 130, 173, 174, 178, 179], "recalcul": [172, 173], "recall_histori": 8, "recall_scor": 173, "recap": [143, 173], "receiv": [7, 43, 44, 57, 77, 106, 116, 128, 130, 137, 179, 180], "recent": [34, 35, 36, 37, 38, 40, 48, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 118, 128, 130, 140, 152, 161, 164, 166, 171, 174, 175, 177, 195, 200], "reciev": 24, "recip": [116, 133, 136, 172, 176, 180], "reciproc": 71, "recogn": [0, 5, 7, 16, 17, 18, 19, 38, 80, 175, 177, 178], "recognit": [0, 7, 16, 17, 133, 179, 180], "recollect": 192, "recomend": 90, "recommend": [0, 24, 38, 39, 40, 60, 61, 66, 68, 83, 89, 90, 102, 116, 130, 132, 133, 143, 144, 145, 150, 151, 171, 172, 175, 177, 179, 180, 182, 190, 192, 194, 195, 196, 198, 201, 209], "record": [97, 116, 130, 145, 165, 171, 186, 200, 202], "recount": [130, 143], "recours": 117, "recov": [118, 175], "recoveri": 69, "recreat": [135, 174, 175, 177, 179, 180, 181, 182], "recruit": [130, 175], "rect": [101, 194], "rectangl": [47, 95, 101, 194, 196, 198, 202], "rectangular": [198, 202, 203], "rectifi": [44, 173], "rectifier_": 173, "recur": 106, "recurr": 209, "recurs": [22, 31, 86, 103, 118, 180], "recursionerror": 78, "recursivecharactertextsplitt": [116, 117, 130, 132, 133, 134, 136, 141, 142, 143, 144, 145], "recursor": 78, "recv_into": 128, "recycl": 69, "red": [4, 8, 16, 17, 18, 19, 47, 89, 102, 117, 130, 138, 147, 148, 171, 172, 174, 178, 189, 192, 193, 195], "reddit": 130, "redeclar": 90, "redefin": [103, 118, 200], "redirect": 128, "rediu": 101, "redownload": [177, 180], "reds_r": 192, "reduc": [4, 5, 11, 12, 13, 18, 19, 37, 47, 48, 74, 78, 116, 118, 131, 137, 138, 140, 143, 144, 145, 155, 157, 172, 173, 175, 179, 180, 191, 197, 199, 200], "reduce_chain": 132, "reduceat": 155, "reduced_data_tsn": 132, "reduct": [0, 26, 132, 140, 209], "redund": [106, 118, 157, 161], "redux": 53, "refactor": [38, 172], "refect": 190, "refer": [22, 24, 36, 37, 49, 52, 53, 54, 68, 70, 80, 83, 84, 85, 90, 91, 95, 96, 101, 103, 106, 112, 116, 117, 118, 127, 130, 132, 133, 139, 140, 153, 154, 155, 157, 171, 172, 173, 174, 175, 177, 179, 180, 181, 182, 184, 186, 187, 189, 190, 192, 195, 196, 198, 199, 200, 201, 202, 206], "referec": 200, "referenc": [75, 76, 171, 175, 179, 186, 195, 196], "reference_vari": 101, "referenceerror": 70, "referr": 145, "refil": 143, "refin": [140, 190], "refinedocumentschain": 130, "reflect": [78, 130, 133, 140, 172, 179, 180, 190, 194, 196, 198, 200, 202], "reform": 202, "reformat": [52, 116], "refresh": [23, 130, 172, 180, 187], "refus": 130, "reg": [39, 189, 191, 192, 193, 200, 205], "regard": [130, 141, 188, 195, 200], "regardless": [43, 171, 172, 180], "regensburg": 118, "regex": [22, 41, 117, 118, 168], "regex101": 39, "regex_pattern": 39, "regic": 168, "regigiga": 168, "regim": [178, 179], "region": [117, 130, 140], "regirock": 168, "regist": [84, 175], "registeel": 168, "reglot": 190, "regplot": [188, 192, 194, 201], "regress": [2, 7, 9, 172, 173, 187, 188, 190, 191, 194, 200, 201, 205, 209], "regret": 134, "regular": [20, 39, 47, 52, 57, 108, 112, 133, 143, 144, 157, 173, 174, 175, 177, 178, 179, 180, 181, 196, 200], "regularization_param": [11, 12, 13, 14, 15, 16, 17, 18, 19], "regularli": [101, 130], "reheat": 131, "reign": 175, "reilli": 130, "reindex": 161, "reindex_axi": 198, "reinforc": 209, "reinvent": 200, "reiter": 173, "reject": 49, "rejoic": 130, "rel": [98, 116, 134, 174, 177, 187, 194, 198, 200], "relat": [4, 23, 59, 65, 66, 68, 70, 71, 77, 104, 116, 117, 133, 134, 137, 138, 173, 175, 179, 180, 186, 188, 195, 196, 199, 200, 201, 202, 203], "relationa": 157, "relationship": [0, 4, 5, 11, 12, 13, 14, 15, 16, 17, 32, 130, 172, 175, 188, 189, 190, 191, 192, 193, 198, 202], "releas": [71, 74, 116, 118, 130, 133, 147, 171, 177, 179, 180], "release_conn": 128, "relentlessli": 134, "relev": [117, 118, 129, 133, 137, 138, 140, 143, 145, 157, 174, 187, 191, 195, 199, 202, 203], "reli": [52, 68, 130, 180], "reliabl": [117, 137, 138], "relicanth": 168, "relief": 130, "reliev": 130, "reload": [8, 172, 199], "reload_ext": 8, "relplot": 200, "relu": [173, 174, 175, 176, 181, 182], "rem": 77, "remain": [9, 16, 17, 18, 19, 54, 68, 95, 130, 133, 173, 174, 175, 177, 179, 180, 186, 187, 190, 191, 192, 194, 199, 200, 201], "remaind": [48, 49, 77, 80, 82, 90, 95, 104, 147], "remark": [130, 136, 140], "remean": 49, "rememb": [16, 17, 18, 19, 35, 36, 47, 49, 69, 74, 75, 90, 91, 95, 103, 106, 116, 130, 151, 171, 172, 173, 174, 175, 177, 178, 179, 194, 195, 196, 197, 198, 200, 210], "remind": [130, 134, 140, 172, 173, 178, 180, 189], "reminisc": 129, "remoraid": 168, "remot": [71, 118, 141, 143, 171, 178, 179], "remov": [0, 27, 36, 39, 47, 51, 52, 54, 68, 70, 74, 80, 102, 116, 117, 118, 128, 131, 132, 133, 137, 140, 143, 144, 161, 162, 163, 167, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 187, 190, 193, 195, 196, 197, 200, 201], "remove_item": 74, "remove_ponctu": 118, "remove_punctu": 118, "remove_sourc": 178, "remove_support_word": 68, "renam": [15, 24, 118, 130, 139, 150, 167, 198, 202], "rename_axi": 164, "render": [11, 13, 24, 69, 108, 112], "renown": 130, "rent": [130, 179], "reorder": 118, "reorgan": 130, "rep": [141, 145], "repeat": [0, 47, 48, 52, 53, 54, 55, 68, 74, 78, 85, 87, 101, 103, 133, 145, 151, 154, 171, 172, 174, 179, 180, 200, 202], "repeatedli": [42, 47, 48, 49], "repel": 130, "repetit": [39, 47], "rephras": [145, 196], "repl": 127, "replac": [9, 17, 19, 35, 38, 39, 49, 52, 57, 90, 102, 103, 118, 130, 132, 140, 141, 152, 157, 164, 166, 169, 180, 187, 189, 191, 193, 195, 197, 200], "repli": [122, 128, 130, 139, 144, 146], "replic": [172, 174, 176, 180, 181, 182, 185, 200], "repo": [117, 133, 143, 173, 174, 180], "repons": [117, 139], "report": [11, 13, 117, 118, 130, 137, 138, 143, 145, 173], "repositori": [9, 37, 52, 171, 176, 179, 180, 182], "repr": 24, "repres": [1, 8, 16, 17, 18, 19, 28, 29, 31, 51, 52, 60, 61, 62, 64, 65, 70, 71, 77, 84, 88, 91, 92, 98, 101, 102, 106, 116, 130, 132, 140, 161, 164, 166, 167, 171, 172, 173, 174, 179, 186, 187, 189, 190, 191, 194, 196, 197, 198, 200, 202, 203], "represent": [0, 24, 51, 52, 60, 61, 84, 101, 130, 157, 172, 175, 177, 178, 179, 180, 186, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "reprint": 130, "reproduc": [25, 107, 111, 171, 173, 175, 176, 178, 179, 180, 197], "reproducbl": 171, "repubblica": 117, "republ": 117, "republiek": 117, "republik": 117, "republika": 117, "republiken": 117, "rep\u00fablica": 117, "request": [24, 117, 118, 127, 128, 130, 137, 138, 139, 140, 144, 145, 152, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "request_id": 130, "request_timeout": [130, 132, 143], "requestor": 130, "requir": [0, 4, 11, 12, 13, 24, 26, 34, 35, 38, 42, 47, 48, 51, 57, 70, 71, 72, 74, 77, 79, 83, 89, 90, 91, 93, 98, 101, 102, 103, 106, 115, 116, 117, 118, 130, 132, 137, 139, 143, 157, 161, 163, 164, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 210], "required_datatyp": 93, "requires_cons": [137, 138], "requires_grad": [171, 172, 173, 177, 178, 179, 180], "requires_processing_cons": [137, 138], "requires_retention_cons": [137, 138], "requis": 195, "requset": 144, "reread": 130, "rerun": 172, "resampl": 200, "resarch": 52, "rescan": 130, "rescu": [35, 38], "research": [52, 56, 117, 122, 130, 132, 141, 143, 146, 171, 173, 174, 175, 177, 180, 185, 189, 190, 195, 196, 198, 199, 202, 209], "resembl": [140, 200, 202], "reserv": [88, 90], "reset": [118, 171, 172, 174, 175, 187], "reset_index": [157, 158, 168, 198], "resghap": 8, "reshap": [0, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 30, 138, 150, 153, 155, 175, 177, 179, 203], "reshiram": 168, "resid": [80, 193], "residplot": 201, "residu": [11, 13, 179, 192], "resiz": [68, 130, 147, 150, 175, 176, 177, 178, 179, 181, 182], "resize_s": [177, 178, 179, 180], "resnet": [177, 179], "resnet18": 177, "resnet50": 177, "resolut": [140, 147, 179], "resolv": [140, 159, 179, 180, 201], "reson": 200, "resound": 130, "resourc": [34, 68, 71, 141, 144, 171, 172, 177, 179, 189, 191, 192, 197, 198, 199, 200], "resp": [128, 130, 131], "respecitv": 175, "respect": [52, 59, 66, 71, 77, 92, 93, 94, 102, 130, 158, 160, 164, 165, 171, 172, 173, 174, 179, 180, 182, 188, 189, 190, 191, 198, 199, 200, 201, 202], "respectivv": 198, "respond": [116, 117, 129, 130, 139, 140, 143, 144, 145], "respons": [104, 116, 128, 129, 130, 131, 132, 135, 137, 138, 139, 140, 141, 143, 144, 180, 195, 199, 209], "response_kw": 128, "response_schema": [116, 117, 135], "responseschema": [116, 117, 135], "rest": [6, 47, 49, 52, 53, 68, 71, 74, 84, 109, 130, 139, 145, 161, 164, 174, 175, 179, 180, 187, 190, 192, 194, 195, 196, 198, 199, 200, 201, 207], "restart": [35, 47, 80, 174, 178, 179, 180, 187], "restaur": [130, 143, 190, 194, 195, 197], "restcountri": 117, "restor": [81, 138], "restrict": [38, 101, 106, 130, 138, 197], "restructur": 84, "result": [3, 7, 11, 12, 13, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 44, 45, 47, 48, 49, 51, 52, 53, 54, 65, 66, 70, 71, 74, 75, 77, 78, 80, 85, 88, 89, 94, 95, 103, 104, 116, 117, 118, 119, 128, 130, 133, 135, 136, 138, 140, 141, 142, 143, 152, 153, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 176, 177, 179, 181, 182, 183, 187, 189, 190, 191, 192, 198, 199, 200, 201, 202], "resum": 130, "resurc": 199, "ret": 195, "retail": [130, 135], "retain": [174, 179], "retention_period": [137, 138], "rethink": 177, "retir": 130, "retool": 144, "retrac": 136, "retri": [128, 130, 137, 138, 140], "retriev": [38, 52, 55, 77, 84, 92, 117, 122, 134, 136, 142, 143, 145, 166, 171, 177], "retrievalqa": [117, 136, 143], "retrieved_doc": 133, "retriever_from_llm": 133, "retriever_mmr": 142, "retriever_vanilla": 142, "retro": 144, "retrospect": 130, "retry_decor": 130, "retry_object": 130, "retry_st": 130, "retry_with": 130, "retrycallst": 130, "return": [8, 11, 13, 16, 17, 18, 19, 24, 30, 34, 35, 37, 38, 39, 45, 47, 48, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 94, 95, 101, 102, 103, 104, 106, 116, 117, 118, 127, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 151, 152, 153, 154, 157, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 187, 188, 189, 194, 195, 197, 200, 201, 202], "return_direct": 128, "return_full_docu": 133, "return_intermediate_step": [116, 117, 130], "return_only_output": [128, 130], "return_source_docu": 136, "return_split_parent_docu": 133, "retweet": [140, 144], "retweeted_statu": [140, 144], "reuniclu": 168, "reus": [24, 38, 101, 130, 152, 175, 176, 178, 179, 181, 182], "reusabl": [40, 74, 80, 101, 103, 176, 179, 182, 183], "rev": 147, "rev_str": 35, "reveal": [106, 175, 179, 180, 189, 201, 210], "reveng": 143, "revenu": [137, 145, 189], "revers": [35, 37, 52, 54, 55, 74, 118, 130, 140, 144, 150, 171, 189], "reverse_list": 74, "reverse_list1": 74, "review": [116, 117, 118, 137, 145, 150, 175, 179, 180, 194, 195], "revis": [197, 198], "revisit": [143, 191, 192], "reviv": 130, "revolut": 147, "revolution": [0, 144], "revolv": 145, "reward": [0, 39, 52, 117, 145], "rewrit": [44, 74, 176, 182], "rewritten": 57, "rewrot": 118, "rf": [177, 178, 179, 180], "rfind": 52, "rfloor": 95, "rgb": [11, 80, 174, 175, 177, 181, 182, 189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "rgb_color_gen": 80, "rgba": [189, 191], "rheader": 130, "rhydon": 168, "rhyhorn": 168, "rhyperior": 168, "ribbon": 130, "ricasoli": 130, "rich": [130, 133, 143, 196, 200, 201], "richard": 178, "rid": [130, 133, 173, 187, 193, 195, 197], "ride": [130, 140], "rideau": 117, "ridg": 130, "right": [27, 28, 30, 32, 42, 52, 72, 77, 84, 89, 94, 95, 102, 103, 104, 116, 117, 129, 130, 133, 134, 140, 143, 145, 147, 148, 152, 157, 171, 172, 173, 174, 175, 177, 178, 179, 180, 187, 188, 190, 191, 194, 195, 196, 197, 198, 199, 202], "rightarrow": [27, 28, 29, 31, 32], "rigid": 133, "rigor": [130, 200], "rim": 130, "rindex": 52, "riolu": 168, "rippl": 144, "risd": 130, "rise": 179, "risk": [116, 133, 140, 145, 200, 201], "riski": 116, "river": [117, 130], "rjust": [30, 52, 94], "rm": [177, 178, 179, 180], "rmdir": 80, "rmtree": [69, 180], "road": 177, "roam": 80, "robert": [130, 133, 172, 189], "robocal": 143, "robot": 0, "robust": [22, 98, 138, 143, 154, 175, 190, 204], "rock": 168, "rocket": [24, 130, 192, 194, 195, 197, 198, 199, 200, 201, 202], "rocket_r": 192, "rocki": 130, "rococo": 130, "rodrigu": 118, "rodriguez": 186, "roduct": 28, "roger": 147, "roggenrola": 168, "rohan": [5, 141], "roi": [130, 200], "rolando": 118, "role": [20, 89, 103, 131, 139, 140, 141, 143, 144, 145, 157, 209], "roll": [130, 155, 166, 172, 179], "roman": 130, "rome": 116, "romeo_and_juliet": 68, "romero": [157, 158, 169], "ron": 130, "ronald": [10, 14], "ronaldo": [47, 48, 147], "roof": [130, 138], "room": [4, 130, 133, 140, 143], "roommat": 130, "root": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 68, 71, 80, 82, 117, 130, 150, 153, 174, 175, 180, 181, 182], "root_dir": 117, "rootsoflisp": 136, "rose": [138, 160], "roselia": 168, "roserad": 168, "rosini": 130, "ross": 174, "rostislav": 118, "rot": [130, 189], "rotat": [175, 179, 180, 189], "rotom": 168, "rotomfan": 168, "rotomfrost": 168, "rotomheat": 168, "rotommow": 168, "rotomwash": 168, "rough": [144, 200], "roughli": [116, 130, 179, 180, 191, 202], "round": [31, 35, 43, 52, 57, 80, 93, 95, 118, 133, 144, 173, 180], "rout": [133, 180], "routin": [87, 153, 198, 200], "row": [8, 9, 12, 15, 16, 17, 18, 19, 31, 47, 48, 57, 68, 117, 130, 147, 150, 151, 152, 153, 154, 157, 161, 162, 164, 166, 167, 168, 171, 174, 177, 179, 180, 188, 190, 191, 192, 194, 198, 199, 201, 202, 203, 204], "row1": 163, "row2": 163, "row_color": 204, "row_index": 165, "row_index1": 159, "row_index2": 159, "row_labl": 157, "row_ord": [190, 199, 202], "row_posit": 157, "row_r1": 152, "row_r2": 152, "row_set": [177, 178, 179, 180], "royalti": 130, "rpm": 169, "rss": 130, "rst": 118, "rstrip": 52, "rt": 68, "rtm": 130, "rtol": 174, "rtx": [171, 177], "ru": [71, 117], "rubi": 98, "rufflet": 168, "rug": [130, 188, 193], "rule": [0, 7, 18, 19, 31, 32, 52, 74, 98, 103, 153, 157, 171, 172, 173, 180, 195, 198, 202], "run": [6, 22, 23, 24, 34, 35, 36, 37, 47, 48, 49, 51, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 75, 76, 77, 80, 89, 90, 96, 98, 101, 103, 109, 116, 117, 118, 119, 127, 128, 130, 132, 134, 136, 137, 138, 139, 140, 141, 144, 145, 172, 173, 174, 175, 176, 177, 179, 182, 183, 187, 189, 197, 199, 200, 207], "run_as_str": 128, "runawai": 130, "runnabl": 98, "runner": 130, "runtim": [70, 71, 80, 103, 136, 172, 174, 175, 177, 178, 179, 180, 182, 186], "runtimeerror": [70, 71, 171, 174, 175], "runtimewarn": 153, "rupert": 143, "russel": 130, "russia": [37, 53, 71], "russian": 68, "rust": 118, "rusti": 130, "rvalu": 188, "rvert_": 27, "rw": 172, "rwightman": 177, "r\u00e9publiqu": 117, "s1": [59, 101, 166, 167], "s2": [59, 101, 166, 167], "s2023": 141, "s3": [166, 167, 174], "s4": 167, "s_car": 103, "saa": 141, "sabley": 168, "sableyemega": 168, "sach": 130, "sacrific": [171, 174, 180], "sad": 36, "sadist": 118, "safe": [54, 68, 101, 118, 130, 133, 137, 138, 141, 189, 193], "safer": [68, 69, 140], "safeti": 135, "sagemak": 180, "sai": [1, 4, 5, 7, 37, 39, 48, 77, 80, 90, 102, 103, 116, 117, 128, 129, 130, 131, 133, 134, 139, 143, 144, 145, 157, 171, 173, 174, 175, 176, 177, 178, 179, 180, 187, 188, 189, 190, 191, 192, 195, 196, 198, 199, 200, 201, 202], "said": [1, 8, 52, 103, 130, 131, 132, 133, 136, 143, 153, 173, 175, 179, 187, 189, 190, 191], "saint": 147, "sake": [130, 158, 186], "salad": [116, 131, 137], "salam": 168, "salamencemega": 168, "salari": [72, 101, 103, 133, 147, 161], "salary_rang": 138, "salarynotinrangeerror": 72, "sale": [117, 130, 137, 138, 141, 145, 200], "sales_data_of_bathingsoap": 148, "sales_rep": 141, "sales_rep_compani": 145, "sales_rep_nam": 145, "salesdata": 148, "salesforc": 137, "salk": 47, "salli": 116, "salmon": 198, "salt": 116, "salvag": 130, "sam": [116, 130, 132, 141, 143, 158, 160, 161, 162, 163, 164, 167], "same": [7, 9, 17, 19, 20, 28, 29, 31, 32, 34, 35, 37, 40, 43, 44, 47, 49, 52, 56, 71, 74, 75, 76, 77, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 108, 112, 117, 118, 128, 130, 132, 133, 137, 138, 139, 140, 143, 144, 148, 150, 151, 152, 153, 154, 157, 160, 161, 162, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202], "samkennerli": 118, "sampl": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 25, 34, 68, 81, 91, 101, 103, 107, 111, 116, 134, 137, 138, 140, 144, 151, 154, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 191, 192, 194, 195, 196, 197, 200, 201, 202], "sample_1": 196, "sample_2": 196, "sample_3": 196, "sample_cmap": 189, "sample_color": 189, "sample_combo": 196, "sample_decscription_str": 140, "sample_descript": 140, "sample_melt": [194, 202], "samsara": 144, "samsung": 77, "samurott": 168, "san": [116, 117, 130, 139, 141, 143, 145, 147, 186], "san_francisco_tre": 117, "sandal": [7, 17, 19, 174], "sandil": 168, "sandshrew": 168, "sandslash": 168, "sandwich": 140, "sandwichlov": 140, "sanit": 140, "sanitize_sequ": 195, "santa": 130, "sapp": 186, "sarah": 143, "sarban": 133, "sarcasm": 129, "sassi": 129, "sat": [171, 195, 196, 197, 198], "satisfi": [31, 37, 42, 48, 49, 57, 103, 130, 152, 179], "satur": [189, 196, 197, 198, 200], "sauerkraut": 131, "saunter": 130, "sausag": 131, "saut\u00e9": 131, "save": [24, 30, 34, 35, 80, 87, 98, 116, 130, 133, 135, 138, 140, 141, 143, 147, 171, 173, 175, 177, 178], "save_filepath": 178, "save_model": [176, 178, 179, 180, 181, 182], "saved_model": 182, "saved_model_01": 172, "savefig": [30, 147, 148, 180], "savor": [134, 140], "saw": [24, 102, 130, 139, 143, 173, 177, 178, 179, 180], "sawk": 168, "sawsbuck": 168, "scalabl": [132, 180, 202], "scalar": [26, 153, 154, 157, 158, 173, 178, 197, 198], "scale": [0, 130, 143, 144, 145, 147, 154, 173, 174, 176, 177, 178, 179, 180, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "scale_hu": 197, "scan": [98, 130, 175, 201], "scandic": 53, "scandir": 175, "scar": 130, "scarc": 130, "scare": 130, "scari": 130, "scatter": [8, 10, 11, 12, 13, 14, 15, 132, 159, 172, 173, 180, 188, 190, 192, 193, 194, 195, 199, 201, 202, 205], "scatter3d": 11, "scatter_kw": [190, 191, 192, 194, 201], "scatterbug": 168, "scatterplot": [190, 191, 192, 194, 195, 202], "scc": 191, "scenario": [0, 4, 76, 103, 139, 143, 175, 179, 180, 187, 190, 191, 195, 196, 197, 200, 210], "scene": [11, 171, 172, 174, 178], "sceneri": 116, "sceptil": 168, "sceptilemega": 168, "schedul": [145, 172, 179], "schema": [131, 132, 135, 137, 138, 139, 143, 145], "scheme": [130, 133, 179, 189], "schnitzel": 131, "school": [23, 51, 116, 117, 129, 130, 133, 140, 141, 158, 171, 197, 198], "schtick": 130, "scienc": [0, 1, 8, 22, 24, 52, 55, 68, 74, 80, 116, 117, 127, 130, 132, 134, 137, 138, 140, 143, 157, 160, 170, 172, 173, 179, 182, 188, 190, 199, 200, 202, 210], "scientif": [24, 150, 179, 189, 197], "scientist": [116, 117, 129, 173, 178], "scikit": [47, 143, 150, 173, 201, 209], "scipi": [24, 153, 188, 193, 200, 201], "scizor": 168, "scizormega": 168, "scoliped": 168, "scope": [22, 36, 70, 75, 76, 80, 89, 94, 100, 118, 129, 133, 144, 173, 195, 196, 202], "score": [1, 4, 8, 9, 11, 13, 45, 117, 118, 130, 135, 158, 173, 196, 198], "scorebook": 198, "scorecard": [198, 202], "scorer": [118, 119], "scott": [140, 197], "scrafti": 168, "scraggi": 168, "scrap": 130, "scrape": [144, 145], "scratch": [34, 101, 103, 132, 171, 176, 177, 178, 179, 180], "scream": 130, "screen": [52, 59, 87, 94, 140, 190, 199], "screen_nam": [140, 144], "screw": 130, "script": [24, 71, 80, 95, 98, 118, 129, 130, 143, 144, 173, 174, 175, 177, 178, 179, 183], "scroll": 172, "scrub": 143, "scrum": 141, "scrumptiou": 140, "sculptur": 130, "scyther": 168, "sd": [154, 198, 200], "sdk": 180, "se": [130, 143], "sea": 130, "seaborn": [191, 192, 193, 198, 199, 200, 201, 202, 203, 204], "seadra": 168, "seagreen": 202, "seak": 168, "seal": 130, "sealeo": 168, "search": [38, 52, 55, 83, 96, 103, 116, 117, 127, 128, 132, 133, 137, 138, 169, 174, 178, 179, 180, 199], "search_kwarg": [133, 142], "search_str": 128, "search_term": 128, "search_typ": 142, "searchabl": 116, "season": [45, 74, 130], "seat": 130, "seatgeek": [118, 119], "sec": 145, "second": [7, 31, 34, 35, 37, 46, 47, 52, 53, 54, 57, 60, 61, 63, 64, 65, 66, 70, 71, 75, 77, 80, 85, 90, 94, 95, 102, 103, 106, 130, 131, 139, 140, 141, 142, 145, 152, 160, 161, 164, 166, 169, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 187, 195, 196, 197, 198, 200, 202], "second_last": 52, "second_lett": 52, "second_numb": 94, "second_respons": 139, "secondari": 46, "secondli": [137, 138, 171, 190, 200], "secret": [179, 210], "section": [2, 7, 36, 51, 52, 57, 68, 70, 89, 94, 115, 116, 117, 118, 132, 140, 141, 145, 157, 158, 159, 160, 161, 162, 165, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 197, 199, 200, 210], "sector": [14, 15, 144], "secur": [101, 117, 133, 137, 138, 141, 145, 172, 174], "sedan": [157, 158, 169], "sediment": 130, "see": [4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 34, 35, 36, 37, 38, 39, 40, 44, 47, 48, 49, 51, 52, 55, 57, 66, 68, 70, 71, 74, 75, 76, 77, 79, 80, 81, 84, 87, 88, 89, 92, 93, 94, 95, 98, 101, 103, 104, 106, 107, 108, 109, 111, 112, 116, 117, 118, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 150, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 206, 207], "seed": [25, 81, 107, 111, 118, 130, 133, 172, 174, 175, 177, 179, 180, 181, 182, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "seedot": 168, "seek": [68, 171], "seek_set": 68, "seekabl": 68, "seeker": [130, 137, 138], "seel": 168, "seem": [51, 83, 106, 116, 117, 130, 132, 133, 134, 136, 173, 174, 178, 179, 180, 188, 196, 197, 199, 200, 201, 202], "seen": [36, 38, 68, 90, 106, 118, 130, 133, 140, 157, 158, 166, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 192, 193, 194, 195, 196, 201, 202], "segment": [0, 85, 117, 143, 174, 187, 188, 190, 194, 199], "segreg": [187, 194, 197, 198, 200, 202], "seismic": 192, "seismic_r": 192, "seismitoad": 168, "seiz": 143, "seldom": 130, "select": [0, 4, 5, 24, 52, 116, 117, 130, 132, 143, 144, 145, 147, 150, 152, 158, 161, 164, 169, 177, 178, 180, 189, 197, 200, 201, 202], "select_difficulti": 83, "select_threshold": 8, "selectbackward0": [173, 179], "selected_doc": 132, "selected_indic": 132, "self": [0, 34, 35, 38, 57, 71, 72, 84, 101, 103, 104, 117, 128, 130, 138, 161, 164, 166, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 186, 195], "self_attn": 179, "self_mag": 104, "self_queri": 133, "selfattent": 179, "selfqueryretriev": 133, "sell": [101, 130, 132, 133, 141, 143], "seller": 133, "semant": [116, 132, 133, 135, 136], "semanticsimilarityexampleselector": 116, "semenov": 118, "semest": 172, "semi": [24, 103, 177], "send": [128, 137, 138, 139, 143, 145, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 200], "senior": 138, "sens": [0, 4, 11, 12, 13, 37, 47, 88, 90, 130, 134, 136, 140, 153, 157, 172, 173, 174, 176, 179, 182, 186], "sensat": 179, "sensibl": 104, "sensit": [49, 88, 90, 95, 178, 189, 200], "sent": [7, 117, 130, 131, 138, 139, 143, 145, 180], "sentenc": [39, 47, 52, 56, 94, 95, 116, 117, 129, 130, 134, 140, 141, 143, 145, 179], "sentiment": 145, "sentinel": 34, "sentret": 168, "sep": [60, 61, 84, 87, 94, 154, 168], "sepal": [9, 10, 14, 147, 186, 194], "sepal_length": [10, 14, 186, 192, 194, 195, 201, 204], "sepal_width": [10, 14, 186, 191, 192, 194, 195, 201, 204], "sepallength": 147, "sepallengthcm": 147, "sepalwidthcm": 147, "separ": [7, 18, 19, 44, 47, 51, 52, 53, 54, 55, 56, 57, 68, 69, 71, 72, 74, 88, 89, 90, 92, 94, 95, 96, 101, 103, 116, 117, 118, 130, 132, 133, 140, 143, 145, 148, 159, 165, 172, 173, 174, 175, 187, 188, 190, 192, 194, 196, 197, 200, 201, 202], "separatelli": 15, "seper": 175, "septemb": [45, 130, 137], "seq": [28, 29, 81], "sequenc": [28, 29, 34, 35, 47, 49, 53, 54, 55, 68, 69, 70, 74, 78, 79, 80, 81, 87, 89, 91, 92, 93, 95, 96, 116, 118, 119, 137, 152, 154, 166, 167, 171, 177, 179, 190, 191, 200, 201], "sequencematch": 118, "sequencemethod": 89, "sequenti": [0, 166, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "sequoia": 138, "serbian": 68, "seren": 186, "serena": 132, "seri": [29, 35, 46, 47, 48, 64, 80, 98, 116, 117, 132, 133, 135, 140, 141, 143, 169, 172, 174, 175, 176, 177, 179, 180, 190, 193, 194, 197, 199, 202, 209], "serial": [84, 172], "serie_function1": 27, "serie_function2": 27, "serif": [198, 200], "seriou": [129, 130], "serp_api_kei": 116, "serpapi": [116, 127], "serpapi_api_kei": [116, 127], "serperior": 168, "serv": [3, 9, 10, 17, 19, 72, 84, 108, 112, 116, 130, 131, 139, 144, 172, 179, 199], "server": [1, 8, 130, 133, 140, 178, 180, 200], "servic": [116, 130, 135, 139, 141, 144, 174, 176, 178, 180], "servin": 168, "session": [80, 128, 145, 175, 178], "set": [0, 1, 3, 4, 9, 10, 12, 13, 14, 15, 22, 24, 34, 38, 39, 48, 52, 53, 58, 68, 69, 74, 80, 91, 93, 95, 101, 102, 103, 116, 117, 118, 128, 130, 131, 132, 133, 134, 139, 140, 141, 144, 145, 147, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 171, 173, 174, 176, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210], "set1": [190, 192, 195, 198, 202], "set1_cont": 142, "set1_r": 192, "set2": [192, 196, 197, 198, 201], "set2_cont": 142, "set2_r": 192, "set3": [192, 196, 197], "set3_r": 192, "set_": 195, "set_1": 102, "set_access_token": [140, 144], "set_axis_label": [199, 202], "set_context": 187, "set_except": 130, "set_fonts": 198, "set_hatch": 147, "set_index": [157, 165, 174, 180, 198], "set_opt": 157, "set_printopt": 155, "set_se": [178, 179, 180], "set_styl": [187, 189, 191, 197, 198], "set_temperatur": 38, "set_titl": [148, 175, 180, 199, 202], "set_transform": 195, "set_vis": 201, "set_xlabel": [179, 180, 197, 198, 200], "set_xtick": [179, 198], "set_xticklabel": [197, 199], "set_ylabel": [179, 180, 197, 198, 200], "set_ytick": [179, 198], "setattr": [102, 103], "setenec": 141, "seterr": 155, "setlevel": 133, "setmaxpric": 101, "setosa": [9, 10, 14, 147, 186, 194, 204], "setstat": 81, "settabl": 51, "setter": 101, "settl": [130, 143], "settler": 130, "setup": [14, 15, 18, 19, 118, 119, 171, 172, 175, 176, 181, 182], "setuptool": 118, "seven": [47, 80, 130, 141, 144, 145], "sever": [4, 5, 9, 10, 14, 24, 35, 39, 45, 53, 65, 66, 71, 80, 94, 130, 133, 152, 171, 173, 175, 176, 177, 178, 179, 180, 182, 197], "severli": 179, "sevip": 168, "sewaddl": 168, "sex": [173, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202], "sex_tim": 197, "sfdc": 137, "sfp": 130, "sftree": 117, "sgd": [172, 173, 174, 179], "sgml": 130, "sh": 101, "shaan": 143, "shaanvp": 140, "shade": [130, 189, 191], "shadow": [130, 190], "shake": [130, 173], "shakespear": 132, "shale": 118, "shall": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "shame": 130, "shampoo": 148, "shampoosalesdata": 148, "shanghai": 57, "shape": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 101, 130, 144, 150, 151, 152, 153, 154, 157, 161, 172, 176, 177, 178, 180, 181, 182, 186, 190, 194, 197], "sharabl": 101, "share": [9, 17, 19, 80, 102, 106, 116, 128, 130, 132, 134, 140, 141, 143, 144, 145, 157, 171, 176, 177, 178, 179, 180, 188, 189, 195, 200, 202], "shareabl": [178, 180], "sharei": [30, 179, 188, 190, 199, 202], "sharex": [30, 148, 179, 188, 190, 197, 199, 202], "sharpedo": 168, "sharpedomega": 168, "sharpli": 175, "shayminland": 168, "shayminski": 168, "she": [72, 101, 116, 119, 130, 140, 143, 145], "shear": 130, "shedinja": 168, "sheet": [130, 149, 156, 157, 170, 172], "sheet_nam": 68, "shelfwar": 145, "shelgon": 168, "shell": [35, 36, 37, 66, 87, 90, 127, 171, 180, 190], "shellder": 168, "shello": 168, "shelmet": 168, "shelter": 130, "shelton": 186, "shepherd": 145, "shibbi": 117, "shieldon": 168, "shift": [24, 44, 47, 48, 49, 89, 95, 104, 130, 137, 171, 178, 201], "shiftri": 168, "shimmer": 130, "shine": [130, 179, 192, 194, 197], "shinx": 168, "ship": [116, 117, 140], "shirt": [17, 19, 130, 174], "shoe": 130, "shoot": [130, 186], "shop": [130, 133], "shopifi": 117, "shopper": 130, "shore": 130, "short": [45, 47, 57, 74, 79, 84, 89, 90, 116, 129, 130, 132, 134, 140, 145, 165, 171, 174, 175, 176, 178, 179, 180, 182, 199], "short_list": [140, 144], "shortcut": [22, 31, 171], "shorten": [71, 118], "shorter": 133, "shortest": 130, "shorthand": [118, 147], "shortli": [179, 180, 190, 197, 201], "shot": [116, 117, 127, 128, 130, 132, 186, 198, 200], "should": [4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 35, 36, 37, 39, 40, 43, 44, 47, 51, 55, 57, 68, 69, 71, 74, 80, 84, 89, 90, 94, 98, 102, 106, 109, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 147, 148, 152, 153, 157, 158, 161, 162, 165, 166, 167, 171, 172, 173, 176, 179, 180, 181, 182, 188, 189, 190, 191, 195, 196, 200, 202, 207, 209], "shouldn": [118, 174, 175, 178, 195, 200], "shout": 179, "shovel": 130, "show": [4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 34, 48, 49, 52, 60, 61, 65, 75, 77, 78, 79, 80, 91, 98, 101, 102, 104, 108, 109, 112, 116, 117, 130, 132, 134, 136, 141, 143, 144, 147, 157, 158, 160, 163, 164, 165, 167, 171, 172, 174, 175, 177, 179, 180, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 207], "show_config": 155, "show_progress": 133, "showcap": 194, "showcas": [140, 171, 177, 179, 180], "showflier": [194, 196], "shown": [3, 34, 37, 38, 44, 47, 49, 52, 53, 70, 83, 98, 101, 138, 157, 158, 159, 161, 162, 163, 164, 165, 176, 187, 196, 198, 203], "showon": 118, "showroom": 157, "shrdlu": 130, "shrimp": 131, "shroomish": 168, "shuckl": 168, "shuffl": [51, 80, 81, 130, 174, 175, 176, 180, 181, 182], "shuffle_list": 80, "shuppet": 168, "shutil": [69, 180], "si": 116, "sibl": 7, "sibsp": [196, 198], "side": [95, 103, 117, 130, 131, 145, 157, 171, 174, 175, 176, 181, 182, 187, 194, 196, 202], "sierra": 130, "sig": 195, "sight": [34, 130], "sigilyph": 168, "sigma": [8, 28, 81], "sigma_squar": 8, "sigmoid": [5, 7, 173], "sigmoidbackward0": 173, "sign": [25, 29, 77, 82, 89, 90, 107, 111, 117, 118, 130, 137, 138, 145, 180, 190, 195], "signal": [0, 7, 134, 137, 138, 140, 143, 144, 180, 200], "signatur": [106, 130], "signer": 145, "signific": [23, 51, 90, 145, 157, 174, 179, 186, 189, 190], "significantli": [8, 11, 12, 13, 130], "signs_of_mental_il": 186, "silcoon": 168, "silenc": 165, "silent": 130, "silicon": [129, 130, 140], "siliconoracl": 129, "siliconvallei": 133, "silu": 177, "silver": 175, "silverman": 197, "simiar": 92, "similar": [0, 4, 7, 8, 11, 13, 33, 35, 37, 39, 40, 47, 48, 52, 54, 57, 68, 74, 80, 83, 89, 96, 102, 108, 112, 116, 117, 130, 132, 133, 135, 140, 142, 143, 152, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 187, 190, 191, 193, 194, 195, 197, 199, 200, 202, 203, 204], "similar_prompt": 116, "similari": 95, "similarity_": 30, "similarity_search": [133, 134], "similarli": [31, 32, 38, 39, 51, 52, 56, 68, 69, 75, 76, 83, 91, 92, 96, 101, 102, 103, 104, 106, 130, 160, 167, 174, 179, 186, 188, 189], "similiar": [173, 174, 178, 179], "simipour": 168, "simisag": 168, "simisear": 168, "simmer": 131, "simmon": 189, "simpl": [7, 18, 19, 20, 22, 24, 34, 35, 36, 37, 38, 48, 52, 55, 59, 68, 71, 72, 80, 87, 91, 95, 97, 98, 102, 106, 108, 112, 118, 130, 132, 134, 136, 141, 144, 145, 159, 161, 164, 165, 167, 172, 173, 175, 178, 180, 181, 182, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 209], "simple_transform": [175, 178], "simplefilt": [118, 132], "simpler": [24, 78, 116, 118, 173, 190, 191, 197, 201], "simplesequentialchain": 116, "simplest": [43, 47, 52, 80, 127, 151, 153, 174, 179, 180, 190, 196, 198], "simpli": [34, 35, 37, 38, 48, 52, 74, 83, 89, 95, 96, 102, 103, 117, 118, 130, 133, 140, 143, 145, 153, 161, 179, 199], "simplier": [11, 12, 13, 14, 15, 16, 17, 18, 19], "simplif": 179, "simplifi": [5, 7, 37, 117, 118, 161, 175, 179], "simul": [104, 116, 130], "simultan": [4, 5, 77, 191, 192, 197, 200], "sin": [11, 12, 13, 14, 15, 16, 17, 27, 80, 82, 150, 153, 187, 200, 202], "sinc": [7, 8, 10, 11, 12, 13, 35, 37, 39, 44, 47, 49, 53, 54, 55, 56, 65, 66, 68, 71, 74, 77, 80, 81, 87, 92, 101, 102, 103, 104, 106, 117, 118, 129, 130, 133, 134, 140, 143, 144, 145, 152, 154, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 192, 193, 194], "sine": [27, 80, 82, 150, 187, 200], "sing": [94, 101, 130, 171], "singapor": 54, "singer": 116, "singl": [4, 11, 13, 26, 37, 39, 47, 52, 53, 56, 66, 71, 76, 79, 91, 92, 94, 98, 101, 106, 118, 130, 132, 133, 137, 138, 140, 141, 142, 143, 144, 151, 152, 157, 159, 166, 171, 173, 174, 176, 178, 180, 181, 182, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204], "single_feature_map": 179, "single_flattened_feature_map": 179, "singular": [31, 138, 153], "sinh": [51, 80, 82], "sink": 130, "sinlg": 180, "sinplot": 187, "sinusoid": [4, 11, 12, 13, 14, 15, 16, 17, 202], "sinusoid_degre": [11, 12, 13, 14, 15, 16, 17], "sister": [130, 138], "sit": [117, 130], "sitcom": 133, "site": [80, 116, 117, 127, 128, 130, 132, 133, 134, 145, 161, 164, 165, 166, 175, 186, 189, 193, 195], "sitter": 130, "situat": [35, 46, 54, 71, 74, 77, 93, 130, 140, 187], "six": [37, 80, 106, 128, 130, 157, 158, 169, 189], "sixteen": 130, "size": [4, 5, 8, 9, 11, 12, 13, 16, 17, 18, 19, 47, 48, 49, 52, 68, 83, 101, 116, 130, 132, 133, 141, 143, 145, 150, 151, 153, 154, 157, 158, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204], "size_func": 201, "skarmori": 168, "sketch": [101, 102, 130], "skew": [180, 200], "skewer": 131, "skiddo": 168, "skiff": 130, "skill": [0, 45, 47, 55, 68, 90, 101, 103, 130, 138, 147, 177, 179, 180, 200, 201], "skillet": [116, 131], "skim": 130, "skinnier": 197, "skip": [43, 44, 47, 48, 49, 52, 71, 77, 118, 130, 134, 144, 173, 174, 175, 177, 178, 179, 180, 182], "skiploom": 168, "skitti": 168, "sklearn": [132, 173, 174, 201], "skorupi": 168, "skrelp": 168, "skuntank": 168, "sky": [130, 189], "slack": [117, 128, 145], "slake": 168, "slakoth": 168, "slash": [52, 69, 197], "slashdot": 130, "sled": 130, "sleep": [22, 67, 80, 87, 130], "sleev": 134, "slice": [56, 89, 92, 131, 152, 157, 201], "slice_a": 152, "slicebackward0": [173, 179], "slick": 130, "slide": 130, "slidingtackl": 147, "sliggoo": 168, "slight": [20, 54, 108, 112, 118, 174, 180, 202], "slightli": [66, 88, 118, 130, 133, 171, 172, 175, 177, 178, 179, 180, 186, 195], "slip": [130, 133], "slk": 117, "slope": [57, 74, 95, 130, 188, 198], "sloppi": [117, 132], "slot": 152, "slow": [118, 130, 133, 153, 161, 180], "slowbro": 168, "slowbromega": 168, "slower": [98, 180], "slowk": 168, "slowli": [130, 175, 178, 179, 180, 194, 195, 196, 200], "slowpok": 168, "slugma": 168, "slurpuff": 168, "sm_doc": 130, "sm_loader": 130, "small": [7, 11, 12, 13, 20, 49, 57, 72, 80, 85, 98, 108, 112, 116, 117, 118, 130, 132, 133, 134, 141, 143, 145, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 192, 194, 198, 200, 201, 202], "smaller": [45, 46, 74, 93, 117, 130, 132, 133, 143, 150, 153, 160, 171, 172, 174, 175, 177, 178, 179, 180, 192, 194, 201], "smallest": [56, 82, 132, 179], "smallpox": 47, "smart": [90, 116, 129, 130, 143, 179, 180], "smart_divid": 37, "smarter": 141, "smartest": 143, "smartphon": [174, 179, 180], "smash": 177, "smeargl": 168, "smfyb": 80, "smi": 171, "smile": 130, "smim": 158, "smith": [116, 143, 158], "smoke": [130, 173, 200, 202], "smoker": [190, 193, 194, 195, 196, 197, 198, 199, 200, 202], "smoochum": 168, "smoot": 200, "smooth": [136, 180, 197, 200], "smoother": 190, "smoothli": 77, "sn": [186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "snail": 140, "snake": 90, "snake_cas": 90, "sname": 164, "snapshot": [137, 138], "sne": 132, "sneak": [130, 186], "sneaker": [17, 19, 143, 174], "sneaki": 179, "sneasel": 168, "snippet": [116, 117, 135], "snivi": 168, "snore": 133, "snorlax": 168, "snorunt": 168, "snover": 168, "snow": [5, 130], "snowfal": 130, "snowflak": 130, "snowi": 130, "snowsho": 130, "snubbul": 168, "so": [1, 3, 6, 7, 14, 15, 17, 18, 19, 22, 27, 31, 32, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 68, 70, 71, 74, 75, 77, 79, 80, 81, 85, 88, 89, 90, 91, 93, 95, 96, 98, 101, 102, 103, 104, 106, 109, 116, 117, 118, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 150, 152, 153, 157, 158, 161, 163, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207], "soak": 140, "soar": 199, "soccer": [147, 202], "social": [1, 8, 130, 145], "societi": [127, 130, 133, 140], "socket": [24, 128], "socketerror": 128, "sockettimeout": 128, "sofifa": 147, "soften": [130, 131], "softmax": [171, 173, 174, 175, 176, 177, 180, 181, 182], "softwar": [22, 24, 45, 130, 133, 135, 138, 141, 145, 177, 179, 180, 190], "solar": 140, "sold": [117, 130, 137, 138, 143, 148], "sole": [188, 189, 200], "solemn": 130, "solid": [130, 140, 144, 180, 187], "solo": 116, "solosi": 168, "solrock": 168, "solut": [0, 36, 38, 40, 70, 74, 76, 93, 132, 133, 140, 141, 144, 148, 153, 169, 180, 197, 200, 202], "solv": [31, 57, 76, 101, 127, 130, 132, 140, 159, 179, 189, 190, 210], "solve_quadratic_eqn": 74, "som": 144, "some": [1, 5, 7, 20, 21, 23, 24, 25, 28, 29, 34, 35, 36, 37, 38, 39, 42, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 68, 70, 71, 74, 76, 78, 80, 84, 87, 90, 92, 94, 95, 98, 101, 103, 106, 107, 108, 110, 111, 112, 113, 116, 117, 118, 122, 130, 131, 132, 133, 134, 139, 140, 141, 143, 144, 145, 146, 152, 153, 154, 157, 158, 161, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 206, 210], "some_tensor": 171, "some_transform": [176, 182], "somebodi": 145, "somedai": 200, "somehow": [118, 190, 198], "someon": [85, 117, 130, 132, 136, 137, 138, 144, 145, 171, 173, 176, 179, 180, 200], "somersault": 130, "someth": [17, 18, 19, 34, 35, 39, 44, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 78, 80, 89, 94, 117, 118, 128, 130, 132, 133, 134, 136, 140, 141, 143, 145, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202], "sometim": [47, 49, 52, 71, 72, 74, 77, 78, 87, 94, 101, 118, 130, 133, 137, 138, 151, 157, 164, 165, 171, 172, 173, 174, 175, 176, 179, 180, 181, 182, 187, 195, 197, 201], "somewher": [49, 53, 118, 130, 140, 172, 174, 189, 196], "son": [130, 134], "song": [83, 101, 117, 119, 171, 172, 175, 180], "songwrit": 116, "soon": [47, 70, 101, 102, 116, 117, 127, 128, 130, 133, 134, 141, 173, 174, 179, 190, 192], "sophiaamoruso": 140, "sophist": [117, 171], "sophomor": 130, "sorri": [129, 130, 140], "sort": [37, 47, 56, 80, 118, 130, 132, 133, 140, 143, 144, 145, 167, 172, 174, 175, 178, 180, 194, 195, 197, 202], "sort_kei": [137, 138], "sort_valu": [157, 168, 169, 197, 198, 202], "sorted_point": 39, "sorted_tweet": [140, 144], "sota": 175, "sought": 0, "sound": [28, 29, 130, 133, 140, 145, 175, 180, 188, 198], "soup": [91, 131, 137, 138, 144], "sourc": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 84, 87, 89, 94, 98, 116, 117, 118, 127, 130, 132, 133, 134, 137, 139, 144, 150, 152, 154, 157, 162, 165, 168, 169, 171, 172, 175, 176, 177, 178, 179, 180, 186, 209], "source_docu": 136, "source_path": 139, "south": [117, 147], "southampton": [196, 198], "southern": 117, "sox": 117, "sp": [165, 168], "spa": 117, "space": [26, 39, 42, 45, 47, 49, 52, 70, 74, 77, 84, 87, 89, 94, 115, 117, 130, 132, 133, 140, 143, 144, 150, 154, 157, 173, 174, 175, 177, 179, 189, 191, 193, 197, 200, 202], "spaghetti": 116, "spain": [117, 147], "spam": [4, 5, 14, 15, 16, 17, 130, 143], "span": [108, 112, 117, 137, 138, 194, 202], "spanish": [68, 117], "spare": 130, "spatial": [179, 198, 200], "speak": [34, 35, 106, 140, 145, 171, 198, 202], "speaker": [130, 133, 143, 187], "spearow": 168, "spec": 130, "speci": [9, 10, 14, 101, 102, 117, 130, 147, 186, 189, 192, 194, 195, 201, 204], "special": [4, 12, 34, 37, 40, 88, 89, 90, 102, 106, 108, 112, 130, 132, 137, 138, 144, 157, 175, 179, 182, 186, 187, 199, 201, 202], "specialattribut": 89, "specialidentifi": 89, "specialist": 130, "specialmethod": 89, "specialti": 130, "specif": [0, 4, 7, 11, 13, 16, 17, 18, 19, 40, 47, 48, 52, 68, 74, 80, 84, 85, 93, 94, 98, 101, 103, 108, 112, 116, 117, 119, 127, 128, 129, 130, 133, 139, 140, 141, 143, 144, 145, 148, 152, 157, 161, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 187, 188, 189, 190, 191, 195, 196, 197, 199, 200, 201, 202, 203], "specifi": [0, 37, 38, 47, 49, 52, 66, 68, 69, 71, 79, 81, 89, 90, 91, 103, 104, 116, 117, 118, 128, 138, 139, 142, 145, 147, 150, 151, 152, 154, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 171, 177, 178, 179, 180, 182, 189, 191, 192, 200, 202], "specifici": [173, 175], "specimen": 130, "spectacular": 130, "spectacularli": 130, "spectral": 192, "spectral_r": 192, "speech": 68, "speech_barack_obama": 68, "speech_donald_trump": 68, "speech_melina_trump": 68, "speech_michelle_obama": 68, "speed": [103, 116, 117, 118, 130, 140, 157, 168, 171, 175, 177, 178, 179, 202], "speed_of_light": 90, "speedup": [118, 119, 173, 179], "spell": 116, "spelt": 173, "spend": [130, 133, 134, 140, 172, 173, 174, 175, 177, 179], "spent": [116, 130, 140, 175, 180], "spewpa": 168, "spheal": 168, "sphere": 24, "sphinx": [20, 84, 108, 112], "spike": 200, "spinach": 116, "spinarak": 168, "spinda": 168, "spine": [130, 187, 191, 196, 197], "spirit": [118, 175, 178, 200], "spiritomb": 168, "spiritu": 130, "split": [3, 9, 10, 15, 24, 30, 37, 47, 52, 56, 94, 116, 117, 118, 130, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 150, 157, 165, 174, 177, 178, 180, 187, 194, 195, 197, 201], "split_dataset": 180, "split_docu": [116, 117, 130, 133, 134, 136, 141, 142], "split_siz": 180, "split_string_decor": 37, "splitlin": 68, "splitted_str": 37, "splitter": [117, 132, 133, 136, 143, 144], "splunk": 138, "spoiler": [137, 138], "spoink": 168, "spoke": [145, 187], "spoken": [37, 68, 74], "spontan": 130, "spook": 133, "sporad": 175, "sport": [103, 130], "sports_car_info": 103, "sportscar": 103, "spot": 138, "spotifi": 116, "spread": [140, 180, 190, 196, 197, 200, 202], "spreadsheet": [68, 157, 172, 174], "spring": [45, 74, 106, 130, 138, 192, 196, 198], "spring_r": 192, "sprinkl": [131, 179], "sprint": 141, "sprintf": [52, 94], "spritze": 168, "sprung": 130, "spur": 130, "spyder": 187, "sp\u00e4tzle": 131, "sqaur": [16, 17, 18, 19], "sql": [53, 117, 138, 141, 157, 165], "sql_databas": 117, "sqldatabas": 117, "sqldatabasechain": 117, "sqlite": 117, "sqlite3": 117, "sqlite_db_path": 117, "sqlqueri": 117, "sqlresult": 117, "sqr": 79, "sqrt": [16, 17, 18, 19, 30, 32, 80, 82, 150, 153, 155], "squar": [3, 4, 16, 17, 18, 19, 31, 35, 36, 37, 43, 47, 48, 49, 52, 53, 54, 55, 57, 79, 80, 82, 84, 101, 106, 130, 144, 150, 151, 153, 171, 173, 174, 175, 181, 188, 191, 192, 201, 202, 203], "square_numb": [74, 77], "squash": 130, "squeez": [53, 173, 174, 175, 179], "squeezebackward0": 173, "squeezebackward1": 174, "squirrel": 130, "squirtl": 168, "sr": 164, "src": 180, "srp": 117, "ssh": [119, 171], "ssl": 128, "sss": 29, "st": 55, "st_size": [178, 179, 180], "stabil": [130, 199], "stabl": [172, 173], "stack": [53, 78, 79, 130, 137, 138, 145, 153, 154, 155, 158, 174, 179, 186, 198, 199, 200, 202], "stackexchang": 5, "stackoverflow": 171, "stackplot": 148, "staff": [130, 138], "stage": [130, 133, 134, 144, 175, 178, 179, 188, 200], "stai": [130, 132, 133, 141, 145, 158, 161, 171, 174, 179, 180, 188], "staid": 130, "stair": 179, "stakehold": 201, "stamp": [200, 201], "stan": 37, "stanc": 140, "stand": [20, 37, 68, 108, 112, 130, 133, 172, 173, 174, 175, 178, 179, 180, 196], "standard": [24, 31, 71, 72, 74, 80, 82, 84, 90, 94, 101, 116, 122, 127, 130, 135, 137, 138, 150, 151, 154, 157, 160, 167, 172, 173, 174, 175, 176, 177, 178, 179, 188, 189, 190, 196, 198, 204], "standard_scal": 204, "standardized_industri": 135, "standardtransform": [175, 181, 182], "standarized_industri": 135, "standingtackl": 147, "standpoint": 178, "standup": 136, "stanford": 141, "stantler": 168, "stanza": 140, "star": [37, 47, 97, 177], "staraptor": 168, "starat": 168, "staravia": 168, "stare": 134, "starli": 168, "starmi": 168, "start": [0, 6, 7, 20, 22, 34, 35, 37, 42, 43, 47, 48, 52, 53, 54, 66, 68, 71, 74, 81, 83, 88, 89, 90, 92, 96, 108, 109, 112, 115, 116, 117, 130, 131, 132, 133, 137, 138, 139, 140, 141, 143, 144, 145, 150, 152, 154, 157, 158, 159, 160, 161, 163, 164, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 194, 195, 196, 197, 198, 200, 202, 207, 210], "start_color": 128, "start_dim": [174, 175, 179, 181, 182], "start_index": 24, "start_tim": [175, 177, 180, 181, 182], "startindex": 152, "startofweek": 117, "startswith": 52, "startup": [116, 117, 130, 132, 133, 141, 144], "startupidea": 132, "startuplesson": 133, "staryu": 168, "stat": [154, 178, 179, 186, 188, 191, 193, 197, 198, 200, 201], "stat_meth": 106, "state": [0, 25, 35, 68, 81, 96, 101, 107, 111, 116, 117, 130, 131, 133, 139, 145, 147, 151, 172, 173, 174, 175, 176, 177, 179, 180, 186, 191, 195, 196], "state_dict": [174, 176, 178, 180, 181, 182], "statement": [22, 35, 50, 53, 55, 59, 66, 68, 70, 72, 79, 87, 94, 95, 98, 100, 101, 102, 116, 118, 134, 140, 152, 202], "static": [94, 106, 116, 130], "staticmethod": 106, "station": 130, "statist": [1, 4, 8, 12, 45, 51, 101, 130, 169, 180, 186, 188, 190, 191, 194, 196, 197, 198, 199, 200, 201, 202, 205, 209, 210], "statistician": 201, "statsmodel": [192, 197], "statu": [53, 117, 118, 128, 132, 140, 144, 173, 186], "status_cod": [130, 137, 138], "std": [101, 102, 150, 154, 155, 157, 177, 178, 179, 180, 186, 191, 193, 198, 202], "std1": 102, "std2": 102, "std3": 102, "stderr": [118, 188], "stdev": 80, "stdout": [84, 94], "steadi": 194, "steak": [175, 176, 177, 178, 179, 180, 181, 182], "steak_sushi": 179, "steam": 130, "steamboat": 130, "steel": [27, 168, 186], "steelix": 168, "steelixmega": 168, "steep": [130, 133], "steer": 138, "stefan": 118, "stem": [175, 180], "steno": 143, "step": [0, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 37, 47, 52, 53, 54, 68, 78, 81, 94, 96, 102, 117, 118, 130, 132, 133, 136, 140, 144, 145, 150, 154, 157, 167, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 201], "step3": 94, "step_siz": 47, "steph": 143, "stephen": 201, "stephsmithio": 140, "stepsiz": 152, "stern": 130, "stetement": 45, "steve": [130, 132], "stick": [133, 171, 173, 174, 177, 178, 179, 180, 197, 198, 200], "still": [28, 29, 36, 52, 84, 89, 101, 102, 106, 116, 117, 130, 132, 133, 134, 137, 138, 158, 160, 161, 164, 167, 171, 172, 173, 174, 175, 177, 179, 180, 187, 188, 190, 198, 199, 200, 201], "sting": 68, "stipend": 130, "stir": [116, 131], "stochast": [172, 173, 179, 200], "stock": [130, 138, 192, 197, 198], "stockprice_data": 157, "stockx": 143, "stoke": 202, "stone": [130, 173, 174], "stop": [39, 47, 48, 49, 52, 53, 54, 68, 71, 74, 78, 81, 90, 128, 130, 133, 134, 150, 154, 157, 167, 175, 178, 180, 200], "stopiter": [34, 35, 49, 70], "storag": [101, 133, 171, 175, 179, 180], "store": [24, 34, 35, 36, 38, 47, 49, 51, 52, 53, 60, 64, 68, 71, 72, 76, 83, 90, 93, 94, 95, 96, 98, 101, 103, 116, 117, 130, 132, 133, 137, 138, 140, 143, 144, 153, 157, 158, 159, 165, 171, 172, 174, 175, 176, 177, 178, 179, 181, 187, 192, 200], "store_and_fwd_flag": 200, "storefront": 130, "stori": [116, 127, 130, 132, 140, 143, 144, 174, 180, 199], "storm": 130, "stoutland": 168, "stove": 130, "str": [10, 15, 24, 39, 49, 52, 53, 61, 68, 70, 74, 84, 92, 93, 94, 102, 103, 104, 116, 117, 128, 130, 137, 139, 142, 147, 164, 168, 174, 175, 176, 177, 178, 180, 181, 182, 197, 198], "str1": 52, "str2": 52, "str3": 52, "str4": 52, "straight": [4, 70, 92, 116, 130, 171, 172, 174, 179, 180, 182, 191, 203], "straightforward": [116, 117, 140, 189], "strang": [130, 132, 136, 179], "stranger": 130, "stranieri": 130, "strat": 52, "strateg": [137, 138], "strategi": [116, 132, 133, 143, 144, 157], "strawberri": [91, 102], "streak": 130, "stream": [68, 84, 128, 130], "stream_error": 130, "streaming_stdout": 131, "streamingstdoutcallbackhandl": 131, "streamlin": 183, "streamlit": [144, 180], "street": [45, 47, 116, 130], "strength": 7, "stress": [102, 130, 190], "stretch": 130, "strftime": [22, 61, 62, 63, 64, 66, 67, 137, 138, 178], "strict": [130, 171], "strictli": [130, 188], "stride": [174, 175, 176, 179, 181, 182], "stride_trick": 155, "strike": 133, "string": [22, 34, 35, 36, 37, 38, 43, 49, 51, 54, 56, 58, 62, 63, 64, 65, 68, 69, 70, 71, 74, 79, 87, 89, 90, 93, 95, 101, 102, 104, 117, 118, 119, 127, 130, 131, 132, 133, 135, 137, 138, 139, 140, 143, 144, 157, 158, 164, 166, 175, 178, 180, 189, 190, 202], "string1": 52, "string2": 52, "string_process": [117, 118], "stringifi": [68, 128], "stringmatch": 118, "stringmethod": 89, "stringprocessingtest": 117, "stringprocessor": 117, "strip": [52, 117, 130, 132, 135, 147, 164, 180, 186, 189, 194, 196, 199, 200, 205], "strip_data": 195, "stripe": 144, "stripplot": [186, 189, 194, 195, 196, 200], "strive": 153, "strlist": 197, "stroke": [130, 169], "stroll": 140, "strong": [27, 130, 137, 138, 140], "stronger": 191, "strongest": 130, "strongli": 179, "strptime": [22, 60, 67], "struck": 130, "structur": [0, 9, 17, 19, 20, 24, 37, 42, 47, 53, 68, 70, 83, 84, 88, 101, 108, 112, 117, 118, 122, 130, 133, 135, 136, 139, 140, 144, 146, 147, 148, 157, 158, 159, 165, 166, 167, 168, 169, 171, 172, 174, 175, 176, 177, 179, 182, 183, 186, 194, 202, 209], "structured_data": 135, "structuredoutputpars": [116, 117, 135], "struggl": [140, 195], "strung": [116, 117], "stuck": [130, 133, 179, 197], "stud": 101, "stud1": 158, "stud2": 158, "stud3": 158, "stud_ag": 164, "stud_mark": 164, "stud_nam": 164, "student": [45, 47, 53, 55, 94, 101, 102, 116, 130, 132, 140, 143, 157, 158, 160, 161, 165, 166, 167, 194, 195, 198, 202], "student_count": 102, "student_data": 165, "student_df": [157, 158, 160, 161, 162, 163, 164, 166, 167], "student_dict": [157, 158, 160, 161, 162, 163, 164, 166, 167], "student_id": 198, "student_nam": 47, "studentdf": 165, "studentdict": 165, "students_enrol": 197, "studentstud": 102, "studi": [23, 26, 35, 87, 101, 117, 130, 132, 143, 154, 172, 177, 191, 200, 202, 203, 209, 210], "studio": [130, 143], "studnet": 102, "stuff": [103, 117, 118, 132, 133, 134, 136, 143], "stuffdocumentschain": [130, 145], "stumbl": 130, "stunfisk": 168, "stunki": 168, "style": [89, 90, 94, 117, 118, 130, 131, 137, 138, 140, 143, 145, 147, 154, 157, 158, 161, 164, 168, 169, 172, 174, 176, 177, 181, 182, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "styleguid": 118, "sub": [36, 54, 69, 74, 78, 83, 84, 150, 198, 200, 202], "sub_doc": 133, "subalpin": 130, "subarrai": 152, "subcategori": 198, "subclass": [71, 84, 103, 172, 173, 174, 175, 179], "subdirectori": [69, 83, 175], "subdiretori": 175, "subdivid": 200, "subgroup": 39, "subject": [116, 128, 130, 138, 140, 171, 188, 200], "sublim": 130, "submit": 130, "subplot": [8, 10, 16, 17, 18, 19, 25, 30, 107, 111, 173, 174, 175, 179, 180, 187, 188, 197, 199, 201, 202], "subplot_kw": 202, "subplots_adjust": [16, 17, 18, 19], "subprocess": [175, 181, 182], "subregion": 117, "subscript": [89, 92], "subsect": [181, 182], "subsequ": [0, 34, 53, 174, 175, 179, 182], "subset": [0, 11, 16, 17, 18, 19, 56, 66, 130, 132, 140, 143, 157, 162, 163, 175, 177, 178, 190, 201, 202, 209], "subsistut": 117, "substack": 171, "substanti": 143, "substitut": [39, 103], "substr": [39, 52], "substract": [95, 150, 171], "subtli": 130, "subtract": [26, 51, 74, 90, 95, 104, 139, 150, 153, 171], "succe": [117, 141, 144], "success": [0, 35, 39, 116, 117, 130, 133, 137, 138, 143, 144, 145, 173, 175, 180, 200], "successful": [14, 15, 24], "successful_request": [137, 138], "successfulli": [38, 71, 144, 172, 178, 180, 195, 197], "succinct": 132, "sudden": [71, 144], "suddenli": [130, 177], "sudowoodo": 168, "suffic": 130, "suffici": [130, 132], "suffix": [116, 117], "sugar": [37, 131], "suggest": [59, 70, 116, 117, 118, 130, 132, 133, 137, 138, 140, 141, 143, 172, 178, 179, 190, 196, 202], "suhail": 140, "suhsi": 178, "suicun": 168, "suit": [98, 101, 116, 134, 141, 157, 173, 175, 176, 178, 179, 180, 189, 194, 195, 200], "suitabl": [35, 52, 190, 198], "sulli": 179, "sum": [3, 7, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 35, 36, 40, 47, 48, 51, 53, 56, 59, 74, 77, 80, 82, 84, 85, 89, 93, 101, 104, 117, 130, 148, 150, 153, 154, 168, 169, 173, 175, 176, 180, 181, 182, 193, 196, 198], "sum1": 94, "sum_": [27, 29, 30], "sum_1": 31, "sum_al": 71, "sum_all_num": 77, "sum_all_numb": 74, "sum_i": [29, 32], "sum_j": 29, "sum_numb": 36, "sum_of_even": 74, "sum_of_five_num": 71, "sum_of_kd": 193, "sum_of_numb": 74, "sum_of_odd": 74, "sum_two_numb": 74, "sumbackward0": 173, "summar": [36, 84, 122, 128, 137, 138, 141, 143, 145, 146, 158, 173, 179, 186, 195], "summari": [84, 116, 128, 130, 132, 141, 143, 144, 145, 147, 175, 178, 180, 196, 197, 198, 201], "summaris": [171, 175], "summary_chain": 132, "summary_list": 132, "summary_output_opt": 145, "summary_prompt": 132, "summaryif": 130, "summat": [28, 36, 153], "summer": [45, 74, 130, 192], "summer_r": 192, "summit": 130, "sun": [39, 60, 61, 130, 190, 193, 195, 196, 197, 198, 202], "sundai": [60, 61], "sunflora": 168, "sung": 180, "sunkern": 168, "sunni": [5, 130, 139], "sunroof": 102, "sunshin": 140, "super": [72, 101, 106, 116, 117, 128, 130, 143, 154, 161, 164, 172, 173, 174, 175, 176, 179, 181, 182, 202], "superclass": 103, "superflu": 118, "superhead": 202, "superintellig": 140, "superior": 0, "supervis": [7, 18, 19, 173, 209, 210], "suppli": [69, 71, 117, 130, 164], "support": [6, 15, 24, 47, 49, 51, 53, 54, 56, 68, 74, 82, 90, 91, 92, 98, 101, 103, 109, 116, 117, 118, 127, 128, 130, 131, 132, 133, 140, 141, 143, 145, 153, 176, 177, 178, 189, 190, 193, 198, 200, 202, 207], "support_word": 68, "suppos": [35, 38, 40, 42, 49, 57, 59, 80, 83, 84, 101, 104, 106, 116, 130, 153, 158, 159, 163, 164, 165, 166, 167, 200], "suppport": [10, 14], "supress": 161, "suptitl": [30, 175, 179, 193, 197, 202], "sure": [4, 24, 25, 39, 40, 71, 76, 107, 111, 116, 117, 118, 127, 129, 130, 132, 133, 137, 138, 139, 140, 141, 145, 150, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 187, 190, 194, 196, 197, 198, 200], "surfac": [74, 130, 171, 180], "surfaceaxi": 11, "surnam": [77, 84, 160, 167], "surpass": 130, "surplu": 130, "surpris": [130, 133, 180], "surreptiti": 130, "surround": [0, 35, 89, 91, 130, 143], "surskit": 168, "survei": 189, "surviv": [130, 196, 198], "suryansh": [4, 5], "susan": 116, "sushi": [175, 176, 177, 178, 179, 180, 181, 182], "susmelj": 176, "suspect": 196, "suspend": [65, 66], "suspens": [66, 140], "suspicion": [8, 130], "sustain": 140, "sutton": 178, "suv": 130, "svd": [26, 155], "sven": 118, "svg": 117, "svn": 118, "sw": 71, "swablu": 168, "swadloon": 168, "swahili": 68, "swalot": 168, "swampert": 168, "swampertmega": 168, "swampi": 136, "swanna": 168, "swap": [52, 74, 116, 117, 135, 140, 143, 144, 171, 179], "swapcas": 52, "swapfil": 69, "swarm": [186, 196, 199], "swarmplot": [186, 189, 194, 195, 196], "swartz": 130, "swe": 117, "sweatystartup": 140, "sweden": [11, 13, 53, 71], "sweep": 130, "sweet": [49, 132, 145], "swellow": 168, "swelter": 130, "swim": [101, 103, 130], "swing": 140, "swinub": 168, "swirlix": 168, "swiss": 130, "switch": [130, 132, 134, 137, 138, 143, 145, 171, 187, 191, 200], "switzerland": [11, 13, 117, 191], "swoobat": 168, "sx": 52, "sy": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 59, 69, 70, 71, 83, 84, 94, 130, 171, 178], "syantax": 53, "sylveon": 168, "symbol": [28, 29, 37, 39, 40, 52, 80, 84, 88, 89, 90, 95, 104, 117, 140, 171, 179], "symmetr": 47, "symmetri": 7, "symmetric_differ": 56, "symmetric_difference_upd": 56, "synaps": 7, "sync": 150, "syntact": [37, 74, 87], "syntax": [20, 22, 35, 37, 38, 39, 52, 53, 54, 55, 56, 69, 71, 74, 79, 84, 88, 93, 94, 98, 101, 102, 103, 108, 112, 118, 140, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 187, 199, 200, 202], "syntaxerror": [52, 70, 77, 88, 90], "syntaxwarn": 95, "synthet": [133, 202], "syslog": 138, "system": [7, 18, 19, 24, 31, 34, 49, 51, 65, 68, 69, 70, 80, 89, 104, 116, 117, 119, 130, 131, 140, 143, 145, 172, 175, 180, 209], "system_message_prompt": [129, 131, 145], "system_message_prompt_combin": 145, "system_message_prompt_map": [143, 145], "system_templ": [129, 143], "systemat": 132, "systemerror": 70, "systemexit": [70, 128], "systemmessag": [116, 131, 137, 145], "systemmessageprompttempl": [129, 131, 143, 145], "t": [7, 10, 11, 17, 18, 19, 25, 27, 31, 32, 38, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 61, 63, 65, 68, 71, 74, 76, 80, 83, 87, 90, 91, 92, 93, 94, 98, 101, 102, 103, 104, 106, 107, 111, 116, 117, 118, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 150, 153, 154, 155, 157, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "t1": [54, 59, 63, 65, 66], "t10": 189, "t10k": 174, "t2": [54, 59, 63, 66], "t3": [54, 59, 63], "t4": [54, 59], "t5": 59, "t6": 59, "t_i": 27, "tab": [42, 52, 70, 89, 91, 132, 180, 189], "tab10": 192, "tab10_r": 192, "tab20": 192, "tab20_r": 192, "tab20b": 192, "tab20b_r": 192, "tab20c": 192, "tab20c_r": 192, "taberror": 70, "tabl": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 47, 49, 51, 60, 61, 80, 95, 104, 116, 117, 130, 143, 157, 158, 165, 171, 172, 173, 174, 178, 194, 203], "table_nam": 157, "tableau": [189, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "tableau_20": [191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "tablespoon": 116, "tablet": 140, "tabul": [53, 55, 104], "tabular": [68, 157, 166, 167, 173, 180], "tacit": 130, "tackl": [0, 137, 190], "taco": 180, "tag": [5, 24, 68, 116, 138, 143], "tag_scalar_dict": 178, "taggar": 130, "taho": 130, "tail": [7, 157, 168, 169, 200], "taillow": 168, "take": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 39, 40, 43, 47, 48, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 84, 89, 90, 94, 98, 101, 102, 103, 106, 116, 117, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 145, 153, 157, 158, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 202, 203], "taken": [68, 130, 136, 143, 172, 180, 199, 200], "takewhil": 118, "tal": 118, "talk": [65, 66, 116, 117, 130, 132, 133, 139, 140, 141, 143, 144, 145, 171, 173, 174, 179, 180, 187, 192, 196, 202], "tall": 117, "talli": 202, "talonflam": 168, "tamper": [52, 57, 90, 101], "tan": [80, 82, 118], "tangela": 168, "tangent": [80, 82], "tangrowth": 168, "tanh": [80, 82], "tap": 201, "tar": 80, "targ_dir": 175, "targ_imag": 175, "targ_image_adjust": 175, "targ_label": 175, "targ_sampl": 175, "target": [0, 5, 14, 15, 16, 17, 66, 98, 137, 138, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 189], "target_dir": [176, 178, 179, 180, 181, 182], "target_dir_path": [176, 181, 182], "target_directori": 175, "target_fil": 178, "target_imag": 175, "target_image_pr": [175, 177], "target_image_pred_label": [175, 177], "target_image_pred_prob": [175, 177], "target_transform": [174, 175, 181, 182], "tasavalta": 117, "taser": 186, "task": [0, 7, 18, 19, 24, 37, 47, 48, 53, 55, 56, 62, 65, 66, 71, 74, 78, 80, 85, 87, 94, 95, 98, 104, 116, 117, 129, 132, 139, 140, 141, 143, 173, 174, 175, 177, 179, 189, 199, 200, 209], "tast": [116, 133, 145], "tau": 80, "taught": 130, "tauro": 168, "tax": 130, "taxi": [130, 200], "tbd": 117, "tchapter": 52, "tchp": 52, "tdatatyp": 52, "te": 39, "tea": [39, 133], "teach": [0, 37, 39, 52, 56, 130, 155, 174, 183], "teacher": [39, 52, 56, 68, 130], "teal": 189, "team": [77, 116, 117, 118, 137, 138, 141, 145, 147, 175, 176, 178, 179, 180, 200, 202], "teas": 179, "tech": [129, 130, 137, 138, 144, 210], "techcrunch": 141, "technic": [34, 106, 117, 130, 133, 141, 179], "technician": 138, "techniqu": [0, 7, 18, 19, 36, 80, 129, 143, 144, 173, 175, 177, 178, 179, 180, 194, 195, 200, 201, 209, 210], "technolog": 140, "technologi": [0, 117, 127, 130, 133, 137, 138, 140, 144, 145, 171, 174], "teddiursa": 168, "tediou": [130, 175], "tell": [43, 44, 49, 68, 71, 87, 94, 116, 117, 130, 132, 133, 138, 139, 140, 145, 152, 171, 172, 173, 174, 175, 178, 179, 180, 188], "temp": [74, 90, 135, 171], "temp_convert": 71, "temperatur": [38, 74, 116, 117, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145], "templ": 143, "templat": [117, 118, 133, 135, 140, 143, 144, 145], "template_format": 131, "tempor": 200, "temporari": [103, 130, 197], "temporarili": 187, "tempt": [130, 180], "ten": [36, 37, 47, 68, 74, 130, 148, 180], "ten_zero": 171, "tenac": 130, "tend": [27, 103, 116, 130, 136], "tendenc": [101, 186, 190, 194, 196, 197, 198], "tender": 131, "tension": 140, "tensor": [26, 172, 174, 175, 176, 178, 179, 181, 182], "tensor_a": 171, "tensor_b": 171, "tensor_back_on_cpu": 171, "tensor_c": 171, "tensor_d": 171, "tensor_float16": 171, "tensor_int8": 171, "tensor_on_gpu": 171, "tensordot": 155, "tensorflow": [7, 150, 173, 178, 209], "tentacool": 168, "tentacruel": 168, "tepig": 168, "terabyt": 202, "term": [4, 5, 29, 35, 37, 78, 85, 116, 117, 130, 132, 136, 141, 145, 171, 173, 174, 177, 179, 180, 187, 188, 190, 191, 194, 195, 196, 197, 198, 199, 200, 202], "termin": [34, 35, 47, 48, 49, 70, 71, 87, 127, 130, 150, 176, 180], "terminologi": 143, "terrain": 192, "terrain_r": 192, "terrakion": 168, "terri": 130, "terribli": 130, "terrif": 180, "terrifi": 178, "territori": [130, 191], "ters": 90, "tesla": [171, 180], "test": [12, 14, 15, 24, 39, 43, 44, 48, 49, 68, 69, 70, 71, 76, 80, 87, 95, 102, 117, 118, 130, 133, 134, 139, 140, 168, 171, 176, 178, 179, 181, 182, 198, 200], "test1": 80, "test_1": [68, 69], "test_2": [68, 69], "test_acc": [173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "test_accuraci": [175, 176, 181, 182], "test_cost": [11, 13], "test_data": [11, 13, 16, 17, 18, 19, 172, 173, 174, 175, 176, 180, 181, 182], "test_data_custom": 175, "test_data_food101_20_perc": 180, "test_data_path": 180, "test_data_simpl": 175, "test_dataload": [174, 175, 176, 177, 178, 179, 180, 181, 182], "test_dataloader_custom": 175, "test_dataloader_effnetb2": 180, "test_dataloader_food101_20_perc": 180, "test_dataloader_pretrain": 179, "test_dataloader_simpl": 175, "test_dataloader_vit": 180, "test_dir": [175, 176, 177, 178, 179, 180, 181, 182], "test_express": 48, "test_imag": 174, "test_image01": 176, "test_image02": 176, "test_image_01": 182, "test_image_02": 182, "test_image_path_list": [177, 178], "test_image_path_sampl": [177, 178], "test_image_through_conv": 174, "test_image_through_conv_and_max_pool": 174, "test_label": [172, 173, 174], "test_logit": 173, "test_loss": [172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "test_loss_valu": 172, "test_modul": 80, "test_pr": [172, 173, 174], "test_precis": [16, 17, 18, 19], "test_pred_dict": 180, "test_pred_label": [175, 176, 181, 182], "test_pred_logit": [175, 176, 181, 182], "test_predict": [11, 13], "test_predictions_t": [11, 13], "test_replace_non_letters_non_numbers_with_whitespac": 117, "test_sampl": 174, "test_siz": 173, "test_step": [174, 178], "test_str": 39, "test_thefuzz": 118, "test_transform": 175, "testcas": 117, "tester": 39, "testfil": [69, 71], "tex": [25, 107, 111], "text": [6, 20, 21, 27, 32, 39, 44, 52, 68, 74, 84, 95, 108, 109, 110, 112, 113, 127, 128, 129, 130, 131, 134, 136, 140, 141, 144, 145, 157, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 191, 193, 197, 198, 200, 202, 206, 207, 209], "text_1": 68, "text_embed": 116, "text_splitt": [116, 117, 130, 132, 133, 134, 136, 141, 142, 143, 144, 145], "textbook": [130, 179], "textcoord": 198, "textil": [118, 130], "textiobas": 68, "textiowrapp": 68, "textload": [116, 117, 134], "textrequestswrapp": 117, "textual": [52, 62], "textwrap": 52, "th": [1, 4, 5, 12, 39, 52], "tha": 39, "thailand": 54, "than": [4, 8, 10, 11, 16, 17, 18, 19, 22, 24, 35, 36, 39, 40, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 57, 59, 60, 66, 72, 78, 79, 80, 82, 90, 91, 92, 94, 95, 96, 98, 102, 103, 104, 106, 116, 117, 118, 130, 132, 133, 137, 140, 143, 145, 150, 152, 153, 157, 158, 160, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 189, 192, 194, 196, 197, 198, 199, 200, 202], "thanh": 118, "thank": [94, 130, 137, 138, 141, 145, 172, 173, 174, 177, 178, 179, 180, 190], "that_particular_class": 198, "that_particular_class_men": 198, "thaw": 130, "thefuzz": [117, 118], "thei": [0, 7, 8, 11, 13, 18, 19, 34, 35, 37, 38, 42, 44, 46, 49, 51, 52, 53, 54, 55, 56, 68, 70, 72, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 106, 108, 112, 116, 117, 118, 128, 129, 130, 132, 133, 134, 137, 138, 141, 143, 144, 145, 151, 153, 157, 162, 166, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202], "theirs": [13, 35, 45, 130], "them": [8, 14, 15, 16, 17, 18, 19, 24, 32, 34, 36, 51, 52, 53, 54, 55, 56, 66, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 82, 90, 94, 95, 96, 101, 102, 103, 104, 115, 117, 118, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 154, 157, 159, 171, 172, 173, 174, 175, 177, 178, 179, 186, 187, 189, 191, 192, 194, 195, 197, 200, 202, 203, 210], "theme": [140, 143, 187, 189], "themselv": [39, 130, 132, 133, 179, 209], "theologi": 116, "theorem": [0, 130], "theoret": [28, 29, 34, 130], "theori": [35, 116, 130, 132, 134, 196, 199], "therefor": [38, 39, 52, 98, 101, 175, 180], "thermodynam": 38, "thesi": 130, "theta": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 32], "theta_index": 15, "theta_t": [11, 12, 13], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 210], "thick": [187, 197, 198], "thicken": 187, "thimbl": [128, 145], "thimbleai": [128, 145], "thin": [130, 131, 132, 197], "thing": [6, 24, 27, 35, 37, 42, 47, 49, 52, 57, 69, 80, 89, 96, 102, 103, 106, 109, 116, 117, 118, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 145, 151, 154, 157, 171, 172, 174, 175, 177, 178, 179, 180, 188, 189, 190, 196, 202, 207, 210], "think": [64, 90, 101, 102, 116, 117, 128, 130, 132, 133, 135, 137, 138, 140, 143, 144, 145, 151, 171, 172, 173, 174, 175, 177, 179, 180, 187, 190, 196, 198, 199], "thinker": 130, "thinnest": 130, "third": [24, 52, 59, 80, 83, 92, 94, 103, 116, 130, 139, 140, 147, 154, 157, 160, 171, 172, 180, 190, 196, 198], "third_respons": 139, "thirti": [52, 130], "this_is_a_long_vari": 88, "thise": [132, 195], "thoma": 118, "thorn": 130, "thorugh": 174, "those": [24, 42, 66, 75, 79, 80, 81, 85, 96, 101, 102, 108, 112, 116, 117, 118, 129, 130, 132, 133, 140, 143, 144, 145, 155, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 187, 189, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202], "though": [18, 19, 52, 71, 75, 84, 103, 116, 117, 119, 130, 133, 153, 157, 158, 162, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 189, 195, 197, 198, 199, 200, 201, 202], "thought": [42, 116, 117, 128, 130, 132, 133, 137, 138, 140, 174, 180, 189, 195, 196, 197, 198], "thousand": [38, 130, 138, 140, 171, 174], "thread": [65, 66, 80, 117, 130, 131, 132, 180], "threat": 186, "threat_level": 186, "threaten": 186, "three": [3, 7, 9, 10, 14, 15, 18, 19, 38, 39, 40, 42, 47, 48, 52, 53, 54, 57, 59, 68, 76, 77, 90, 93, 94, 96, 102, 103, 106, 116, 117, 130, 132, 133, 139, 143, 144, 157, 160, 163, 164, 165, 171, 172, 173, 174, 175, 177, 179, 180, 186, 190, 194, 195, 196, 200, 201, 202, 203], "thresh": [157, 163], "threshold": [1, 7], "thrice": 196, "throguh": 179, "throh": 168, "through": [0, 8, 16, 17, 18, 19, 35, 47, 48, 49, 51, 57, 71, 77, 78, 87, 104, 116, 117, 130, 131, 132, 134, 137, 138, 139, 144, 145, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 202, 203, 209, 210], "throughout": [89, 117, 132, 171, 175, 176, 178, 179, 180, 181, 182, 188, 190, 194, 201], "throughput": [8, 9], "throughput_from": 8, "throughput_grid": 8, "throughput_rang": 8, "throughput_to": 8, "throw": [24, 71, 75, 98, 158, 160, 161, 164, 166, 178, 180], "thu": [10, 27, 38, 47, 48, 52, 65, 71, 89, 98, 101, 106, 130, 177, 179, 180, 189, 190, 191, 196, 197, 198, 200, 201, 202, 203], "thumb": [172, 173, 175, 177, 179, 195, 198], "thump": 133, "thundurusincarn": 168, "thundurustherian": 168, "thur": [195, 198], "thursdai": [116, 130, 196], "ti": [68, 140, 190], "tick": [179, 180, 187, 192, 193, 199, 201, 202], "tick_param": [16, 17, 18, 19, 180], "ticket": 198, "ticklabel_format": 197, "tickmark": 147, "tide": 130, "tidi": [118, 190, 194, 195, 199], "tier": [140, 179], "tight": [30, 130, 178, 210], "tightli": [117, 130, 191], "tile": 153, "till": [47, 48, 49, 68, 92, 130, 158, 161, 164, 167, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202], "tim": 186, "timberlin": 130, "timburr": 168, "time": [0, 5, 7, 24, 30, 31, 34, 35, 37, 42, 46, 47, 48, 49, 51, 52, 54, 61, 75, 78, 79, 80, 88, 89, 90, 96, 98, 102, 103, 104, 106, 116, 117, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 145, 147, 153, 157, 161, 162, 171, 172, 173, 175, 176, 177, 178, 179, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 209, 210], "time_for_pr": 180, "time_left_for_newyear": 63, "time_per_pred_cpu": 180, "time_str": 65, "timedelta": 63, "timedelta64": 155, "timeit": [174, 175, 177, 180, 181, 182], "timeout": [128, 130, 132, 171], "timeout_valu": 128, "timepoint": 200, "timer": [174, 175, 177, 180, 181, 182], "times2": 31, "times3": 36, "times5": 36, "timescal": 180, "timeseri": 205, "timestamp": [22, 67, 178], "timezon": 117, "timm": [174, 177, 179], "timplay": 24, "tine": 177, "ting": 39, "tini": [130, 197], "tinker": [117, 144], "tinyvgg": [174, 176, 177, 184], "tip": [39, 140, 177, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 202], "tire": [130, 194], "tirtouga": 168, "titan": [171, 177, 186, 188, 196, 200, 202], "titl": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 45, 52, 118, 132, 133, 137, 138, 139, 147, 148, 172, 173, 174, 175, 177, 179, 180, 190, 193, 202, 203], "title_text": 174, "titledata": 118, "tivat": 39, "tk": 24, "tkinter": 80, "tl": 116, "tlc": 200, "tld": 117, "tldr": 117, "tm_hour": 65, "tm_isdst": 65, "tm_mdai": 65, "tm_min": 65, "tm_mon": 65, "tm_sec": 65, "tm_wdai": 65, "tm_ydai": 65, "tm_year": 65, "tmdb": 127, "tmp": [69, 171], "to__email": 128, "to_csv": [157, 168, 169], "to_dict": 157, "to_excel": [157, 168], "to_fahreheit": 38, "to_fahrenheit": 38, "to_json": 157, "to_messag": [117, 129, 131, 135], "to_sql": 157, "to_str": 138, "to_usernam": 128, "todai": [0, 63, 64, 116, 117, 130, 132, 133, 134, 137, 138, 140, 143, 144, 145, 188, 191, 195, 196, 197, 198, 199, 200, 201], "todo": 118, "togekiss": 168, "togepi": 168, "toget": 168, "togeth": [7, 8, 18, 19, 35, 52, 90, 98, 104, 116, 117, 130, 133, 135, 140, 141, 143, 144, 153, 176, 178, 180, 182, 191, 194, 196, 200], "toi": [143, 173, 174, 186], "toilet": 143, "toiletri": 133, "token": [117, 118, 130, 132, 137, 138, 140, 141, 143, 144, 145], "token_set": 118, "token_set_ratio": 119, "token_sort_ratio": [118, 119], "tokex_sort": 118, "told": [49, 130, 133, 139, 140, 191], "toler": 174, "tolist": [147, 148, 197], "tom": 130, "tomato": [71, 74, 95, 116], "tomb": 130, "tomorrow": 116, "ton": [52, 80, 116, 117, 132, 140, 144], "tone": [122, 129, 146], "tone_sampl": 140, "too": [4, 5, 37, 70, 72, 95, 96, 116, 117, 119, 130, 131, 132, 133, 140, 143, 145, 171, 172, 173, 174, 175, 177, 178, 179, 180, 195], "took": [37, 116, 130, 140, 174, 175, 177, 180, 181, 182], "tool": [39, 84, 108, 112, 117, 128, 132, 137, 138, 139, 141, 143, 145, 147, 148, 150, 157, 168, 169, 173, 178, 179, 180, 191, 200, 201, 202, 209, 210], "tool_input": 128, "tool_nam": 127, "toolchain": 141, "toolkit": [24, 117, 128, 132, 171], "tooth": 148, "toothpastesalesdata": 148, "top": [6, 8, 16, 17, 18, 19, 90, 109, 116, 127, 131, 132, 140, 141, 144, 145, 150, 152, 153, 157, 171, 173, 174, 176, 179, 180, 182, 187, 189, 190, 191, 196, 197, 198, 200, 202, 207], "topbar": 198, "topic": [52, 77, 117, 130, 132, 133, 140, 144, 146, 148, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 192, 194, 196, 197, 198, 200, 201, 202, 210], "topic_nam": 143, "topic_timestamp": 143, "topics_found": 143, "topics_structur": 143, "toprow": 160, "torch": [171, 173, 174, 175, 176, 177, 178, 180, 181, 182], "torch_transformer_encoder_lay": 179, "torchaudio": [175, 177, 178, 179, 180], "torchdata": 175, "torchic": 168, "torchinfo": [178, 179, 180], "torchmetr": [173, 174], "torchmetrics_accuraci": 173, "torchrec": [175, 177], "torchscript": 180, "torchserv": 180, "torchtext": [175, 177], "torchvis": [174, 176, 178, 180, 181, 182], "torkoal": 168, "tornadusincarn": 168, "tornadustherian": 168, "toronto": 117, "torterra": 168, "toss": 131, "total": [7, 10, 14, 47, 48, 51, 59, 74, 77, 79, 90, 92, 102, 104, 117, 128, 132, 133, 137, 138, 142, 151, 157, 168, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 190, 191, 194, 195, 196, 197, 198, 199, 200, 202], "total_bil": [187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "total_cost": [137, 138], "total_expens": 101, "total_incom": 101, "total_list1": 142, "total_list2": 142, "total_profit": 148, "total_second": 59, "total_stud": 197, "total_tim": 174, "total_token": [137, 138], "total_train_time_model_0": 174, "total_train_time_model_1": 174, "total_train_time_model_2": 174, "total_women_per_class": 198, "totensor": [174, 175, 176, 177, 178, 179, 181, 182], "totodil": 168, "touch": [117, 130, 154, 191, 202, 210], "tough": [117, 179], "tourist": 130, "toward": [116, 130, 132, 136, 140, 172, 175, 179, 180, 210], "town": [116, 143, 196, 198], "tox": 118, "toxicroak": 168, "toyotadf": 169, "tp": 1, "tpg": 117, "tpuv3": 179, "tpython": 52, "tqdm": [134, 174, 175, 176, 178, 180, 181, 182], "tqdmexperimentalwarn": 134, "tr": 130, "trace": [130, 153, 178, 190, 200], "traceback": [34, 35, 36, 37, 38, 40, 48, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 89, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 128, 130, 152, 161, 164, 166, 171, 174, 175, 195, 200], "track": [35, 116, 118, 130, 139, 140, 141, 145, 171, 172, 175, 177, 179, 180, 185, 196, 198, 200], "tracker": 178, "tractor": 171, "tradeoff": [175, 177], "tradit": [0, 115, 130, 131, 176, 181, 182], "tradition": 139, "trail": [51, 52, 54, 116, 117, 145], "train": [0, 1, 3, 4, 7, 9, 115, 116, 130, 143, 144, 171, 183, 184], "train_acc": [174, 175, 176, 177, 178, 179, 180, 181, 182], "train_accuraci": [175, 176, 181, 182], "train_cost": [11, 13], "train_data": [11, 13, 16, 17, 18, 19, 172, 173, 174, 175, 176, 180, 181, 182], "train_data_aug": 175, "train_data_custom": 175, "train_data_food101_20_perc": 180, "train_data_simpl": 175, "train_dataload": [174, 175, 176, 177, 178, 179, 180, 181, 182], "train_dataloader_10_perc": 178, "train_dataloader_20_perc": 178, "train_dataloader_aug": 175, "train_dataloader_custom": 175, "train_dataloader_effnetb2": 180, "train_dataloader_food101_20_perc": 180, "train_dataloader_pretrain": 179, "train_dataloader_simpl": 175, "train_dataloader_vit": 180, "train_dir": [175, 176, 177, 178, 179, 180, 181, 182], "train_dir_10_perc": 178, "train_dir_20_perc": 178, "train_features_batch": 174, "train_image01": 176, "train_image_01": 182, "train_image_02": 182, "train_label": [172, 173], "train_labels_batch": 174, "train_loss": [174, 175, 176, 177, 178, 179, 180, 181, 182], "train_loss_valu": 172, "train_precis": [16, 17, 18, 19], "train_split": [172, 173], "train_step": [174, 178], "train_test_split": 173, "train_time_end_model_2": 174, "train_time_end_on_cpu": 174, "train_time_end_on_gpu": 174, "train_time_start_model_2": 174, "train_time_start_on_cpu": 174, "train_time_start_on_gpu": 174, "train_transform": 175, "train_transform_trivial_aug": 175, "trainabl": [175, 177, 178, 179, 180], "trainbl": 180, "traingin": 12, "training_tim": 174, "traininggggggg": 180, "trainint": [12, 13], "trajectori": 130, "tranform": [52, 175], "tranquil": 168, "transact": [5, 14, 15, 16, 17, 173, 180], "transax": 201, "transcript": [68, 117, 122, 143, 144, 146], "transcript_path": 143, "transcript_subsection_charact": 143, "transfer": [35, 47, 48, 49, 130, 173, 174, 175, 178, 179, 180, 184, 185, 209], "transform": [7, 26, 31, 98, 130, 137, 138, 139, 140, 171, 174, 176, 181, 182, 189, 209], "transformed_imag": [175, 177, 180], "transformer_encod": 179, "transformer_encoder_block": 179, "transformerencod": 179, "transformerencoderblock": 179, "transformerencoderlay": 179, "transit": [138, 140, 145], "translat": [70, 98, 102, 117, 130, 136, 189], "transluc": 200, "transmit": 7, "transpar": [145, 189, 191, 195], "transport": 135, "transpos": [26, 27, 57, 150, 153, 158, 159, 165, 171, 194], "transposed_row": 57, "transposit": 31, "trap": 130, "trapinch": 168, "trapper": 130, "travel": [7, 94, 116, 135, 140, 176, 179, 198], "travers": [7, 47, 175], "travi": 118, "treasur": [130, 179], "treat": [6, 36, 39, 70, 75, 76, 101, 109, 130, 133, 139, 153, 180, 207], "treatment": 118, "tree": [0, 10, 14, 68, 116, 117, 130, 138], "treecko": 168, "trekhleb": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "trelli": [201, 202], "trend": [128, 143, 177, 178, 179, 180, 190, 194, 196, 200], "treven": 168, "trevi": 116, "trevor": [130, 133], "tri": [37, 70, 94, 101, 104, 130, 133, 136, 143, 151, 164, 171, 173, 175, 177, 179, 180, 188, 191, 196, 197, 200], "trial": [0, 137, 138], "triangl": [47, 95, 103, 201], "triangular": 81, "triband": 117, "tribe": 130, "tribut": 140, "tributari": 130, "trick": [130, 132, 133, 145, 150, 152, 171, 173, 175, 188, 195], "trickeri": 130, "tricki": 54, "trigger": 49, "trignometr": 200, "trigonometri": 51, "trio": 143, "trip": [130, 133, 140, 200], "trip_dur": 200, "tripl": [52, 74, 84, 89, 91, 92, 132, 179], "triple_quot": 138, "tristan": 118, "triu_indices_from": 201, "trivial": 175, "trivialaug": 175, "trivialaugmentwid": [175, 180], "trophi": 130, "tropiu": 168, "troubl": [176, 177], "troubleshoot": [138, 173], "trouser": [17, 19, 174], "trout": 130, "trove": 118, "trubbish": 168, "truck": [7, 103], "truck_info": 103, "trucke": 130, "true": [1, 12, 16, 17, 18, 19, 30, 34, 35, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 66, 68, 70, 72, 74, 79, 80, 82, 88, 89, 90, 91, 92, 94, 95, 102, 103, 104, 116, 117, 118, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 140, 141, 143, 144, 145, 147, 148, 151, 152, 154, 157, 161, 162, 163, 164, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204], "true_divid": 153, "truecal": 143, "truli": [130, 140, 178, 180], "trump": 68, "trunc": [80, 82, 155], "truncat": [51, 68, 82, 92, 93, 95, 190], "trunk": 118, "trust": [11, 13, 140, 172], "trusti": 178, "trustworthi": 200, "truth": [95, 116, 117, 130, 172, 173, 174, 175, 180], "truth_label": 174, "truthvalu": 89, "try": [0, 4, 8, 10, 14, 15, 17, 18, 19, 34, 36, 39, 43, 44, 45, 49, 52, 53, 54, 55, 57, 59, 68, 70, 72, 74, 75, 77, 88, 89, 90, 92, 93, 95, 96, 101, 102, 104, 106, 116, 117, 118, 128, 130, 132, 133, 134, 136, 137, 138, 140, 144, 145, 153, 158, 161, 171, 172, 173, 174, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "tryagain": 130, "tryton": 24, "tsne": 132, "tsplot": 200, "tsv": 157, "tt": 61, "ttopic": 52, "tue": 60, "tuesdai": [116, 130], "tuft": [130, 201], "tug": 130, "tukei": 200, "tumor": [5, 14, 15, 16, 17], "tune": [116, 140, 143, 161, 172, 177, 179, 180, 200, 210], "tunnel": 130, "tupl": [22, 24, 34, 35, 36, 37, 39, 40, 52, 56, 57, 58, 65, 68, 74, 77, 80, 89, 91, 93, 94, 95, 102, 103, 118, 150, 151, 154, 158, 159, 169, 174, 175, 176, 177, 180, 181, 182, 189, 191], "tuple1": 92, "tuple_1": 102, "tupleliter": 89, "tuppl": 151, "tur": 117, "turbo": [116, 117, 129, 132, 137, 138, 139, 140, 143, 145], "ture": 130, "turn": [34, 51, 68, 71, 95, 98, 104, 116, 117, 118, 130, 136, 139, 140, 144, 171, 172, 174, 176, 177, 178, 181, 182, 183, 194, 196, 197, 200, 201, 202], "turtwig": 168, "tutori": [22, 34, 37, 44, 52, 68, 90, 96, 103, 104, 116, 117, 134, 143, 144, 145, 150, 169, 175, 178, 180, 188, 200], "twa": 130, "tweak": [175, 177, 179, 187, 189, 194, 199, 202], "tweepi": [140, 144], "tweepy_result": [140, 144], "tweet": [117, 128, 129, 137, 138, 143, 144, 145, 172, 180], "tweet_exampl": 140, "tweet_mod": [140, 144], "tweets_to_pul": [140, 144], "tweets_to_return": [140, 144], "twelv": 39, "twenti": [130, 133], "twice": [103, 117, 130, 133, 178], "twilight": 189, "twist": 131, "twitch": [130, 143, 179], "twitter": [116, 117, 122, 128, 130, 132, 135, 137, 138, 143, 145, 146, 175, 179], "twitter_access_token": [140, 144], "twitter_access_token_secret": [140, 144], "twitter_api_kei": [140, 144], "twitter_api_key_secret": 140, "twitter_api_secret": 144, "twittertwitt": 141, "two": [6, 8, 10, 14, 15, 24, 31, 32, 34, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 61, 66, 68, 70, 71, 72, 75, 77, 78, 80, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 108, 109, 112, 116, 117, 129, 130, 132, 133, 136, 139, 141, 142, 143, 144, 145, 151, 152, 153, 157, 159, 160, 161, 164, 165, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 186, 187, 188, 190, 191, 193, 194, 196, 197, 198, 199, 200, 201, 202, 207], "two_power_of_f": 57, "twofold": 116, "tworld": 87, "txt": [39, 69, 70, 71, 116, 117, 118, 119, 130, 132, 133, 134, 136, 143, 145, 154, 168], "ty": 52, "tympol": 168, "tynamo": 168, "typ": 55, "typanski": 118, "type": [4, 5, 7, 10, 14, 17, 19, 24, 34, 36, 39, 40, 42, 47, 48, 49, 52, 56, 57, 59, 61, 63, 64, 70, 71, 75, 77, 78, 80, 87, 88, 89, 90, 95, 96, 98, 100, 101, 104, 106, 116, 117, 118, 122, 130, 132, 133, 135, 136, 137, 138, 139, 143, 145, 147, 150, 152, 153, 154, 157, 164, 165, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "type1": 168, "typecast": 93, "typeerror": [40, 52, 53, 55, 56, 71, 77, 80, 92, 93, 104, 128, 171], "typeobject": 89, "typescript": [116, 117, 138], "typeset": 130, "typewrit": 130, "typhlos": 168, "typic": [7, 49, 104, 119, 130, 131, 133, 153, 157, 172, 173, 174, 177, 179, 180, 197, 200], "typo": [70, 118], "tyranitar": 168, "tyranitarmega": 168, "tyrantrum": 168, "tyrogu": 168, "tyrunt": 168, "tz_london": [59, 63], "tz_ny": [59, 63], "tzinfo": 59, "tzname": 61, "u": [0, 14, 15, 32, 34, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 68, 69, 70, 71, 74, 77, 80, 85, 87, 91, 94, 96, 98, 101, 102, 103, 104, 106, 116, 117, 118, 128, 129, 130, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 153, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "u00dc": 91, "u00dcnic": 91, "u00f6": 91, "u00f6d": 91, "u_": 32, "u_1": 32, "u_2": 32, "u_i": 32, "u_n": 32, "ubgxofi7uxswaykn": 80, "ubyt": 174, "uc": 141, "uci": 9, "ud83c": 117, "udde8": 117, "uddeb": 117, "uddf4": 117, "uddf7": 117, "uesd": 117, "uganda": 140, "uhd": 141, "ui": [24, 117, 130], "uint8": 175, "uk": 59, "ukool": 52, "ular": 39, "ulivi": 130, "ultim": [130, 145, 179, 199], "um": 29, "umbreon": 168, "umpteen": 195, "unari": [89, 95], "unarm": 186, "unauthor": 101, "unavail": 202, "unawar": 200, "unbound": 168, "unboundlocalerror": [70, 75, 76], "unbridg": 130, "uncertainti": [140, 200], "unchang": [56, 91, 171, 174], "unchart": 191, "unclear": 157, "uncom": [56, 173, 174, 177, 178, 179, 180], "uncommon": 196, "uncorr": 171, "uncov": 132, "und": 39, "undefin": 102, "under": [0, 31, 47, 49, 51, 59, 70, 82, 85, 92, 117, 129, 130, 138, 140, 145, 147, 167, 172, 178, 180, 196, 197, 200, 201], "underestim": 116, "underfit": [173, 177, 179], "undergrad": 130, "undergradu": 130, "underli": [68, 82, 96, 98, 116, 133, 150, 157, 164, 172, 177, 189, 191, 194, 195, 197, 198, 199, 200, 202, 203], "undermin": 201, "underneath": [117, 130], "underpaint": 130, "underscor": [0, 38, 80, 88, 90, 101, 102, 103, 104], "underset": 30, "understand": [0, 6, 11, 12, 13, 14, 15, 16, 17, 22, 23, 26, 36, 37, 39, 42, 47, 48, 49, 51, 57, 84, 85, 89, 96, 98, 101, 106, 109, 115, 116, 130, 132, 136, 139, 140, 145, 147, 148, 157, 158, 171, 172, 173, 174, 175, 176, 177, 179, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 207, 209, 210], "understat": 130, "understood": [27, 98, 117, 130], "undervalu": 117, "undestand": [27, 117], "undetermin": 186, "undoubtedli": 187, "uneasi": [116, 130], "unequ": 179, "uner": [116, 130], "unexpect": [49, 71], "unfamiliar": [172, 189], "unfez": 168, "unfold": 140, "unfortun": [130, 133], "unfrozen": 178, "unhandl": 70, "unhash": 56, "unhelp": [116, 117], "unicod": [39, 52, 70, 89, 90, 92, 118], "unicode_liter": 118, "unicodedecodeerror": 70, "unicodeencodeerror": 70, "unicodeerror": 70, "unicodetranslateerror": 70, "unifi": 91, "uniform": [52, 80, 81, 118, 151, 154, 155, 200, 201], "uniform_data": 203, "unifrom": [16, 17], "unimport": 130, "unind": [43, 89], "unint": 148, "uninterruptedli": 130, "union": [47, 92, 117, 133], "uniqu": [47, 55, 56, 74, 80, 81, 92, 96, 106, 130, 131, 137, 138, 140, 142, 157, 159, 166, 175, 200, 204], "unique_doc": 133, "unique_label": [14, 15, 16, 17], "unique_to_list1": 142, "unique_to_list1_cont": 142, "unique_to_list1_count": 142, "unique_to_list2": 142, "unique_to_list2_cont": 142, "unique_to_list2_count": 142, "unit": [18, 19, 68, 116, 117, 118, 137, 138, 139, 147, 148, 171, 173, 174, 175, 176, 177, 178, 179, 181, 182, 186, 190, 191, 197, 198, 199, 200, 202], "unittest": 117, "univari": [2, 4, 193, 195, 196, 199, 201, 202], "univers": [0, 7, 94, 118, 197, 198], "university_nam": 197, "unix": [59, 64, 65, 130], "unknowingli": 102, "unknown": [4, 10, 11, 12, 13, 16, 17, 18, 19, 45, 70, 116, 161, 164, 166, 186, 196, 200], "unknowncol": 164, "unlabel": 0, "unless": [39, 46, 74, 89, 130, 133, 171, 173, 174, 177, 187, 190, 200], "unlik": [35, 53, 54, 68, 102, 151, 153, 157, 160, 173, 179, 182, 190, 200], "unlimit": [71, 141, 173, 177, 180], "unlock": 141, "unmemb": 117, "unmodifi": 173, "unnam": [147, 169, 199], "unnatur": 130, "unnecessari": [38, 118, 133, 179], "unnot": 130, "unobserv": 199, "unoffici": 175, "unord": [47, 55, 56, 92, 157], "unorderd": 56, "unown": 168, "unpack": [52, 53, 54], "unpackbit": 155, "unpacking_person_info": 71, "unpickl": [84, 172], "unpredict": 117, "unprestigi": 130, "unravel": 0, "unravel_index": 155, "unreferenc": [68, 102], "unriv": 130, "unruffl": 197, "unseen": [172, 175, 179], "unsolicit": 130, "unsqueez": [172, 173, 174, 175, 177, 179, 180, 181, 182], "unstructur": [117, 134, 136, 137, 174], "unstructured_fil": 136, "unstructuredfileload": 130, "unstructuredpdfload": 134, "unstructuredurlload": [116, 141], "unsuccess": 39, "unsuervis": 10, "unsupervis": [10, 209, 210], "unsuperwis": 10, "unsupport": [70, 93, 104], "unsur": [39, 40, 179], "until": [4, 34, 47, 48, 49, 68, 71, 72, 77, 78, 94, 116, 128, 130, 131, 153, 166, 179, 180], "untrain": [177, 178, 179], "untrained_pr": 173, "unus": 118, "unusu": [36, 51, 136], "unzip": [175, 176, 177, 178, 180, 181, 182], "uolp": 52, "up": [11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 38, 42, 47, 48, 49, 51, 68, 71, 74, 75, 77, 78, 85, 87, 89, 92, 93, 94, 98, 116, 117, 118, 128, 129, 130, 132, 136, 137, 138, 139, 140, 144, 145, 150, 157, 168, 171, 172, 173, 174, 176, 180, 181, 188, 189, 190, 191, 193, 196, 198, 201, 202, 210], "upcom": [141, 177, 180, 186, 188, 194, 202], "updat": [4, 5, 38, 48, 53, 56, 76, 116, 118, 130, 132, 133, 137, 138, 139, 157, 160, 161, 162, 163, 164, 166, 167, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 186, 188, 192, 195, 201], "updated_at": [137, 138], "upfront": [98, 171], "upgrad": [118, 134, 139, 174, 175, 179, 180], "upload": [134, 175, 178], "upon": [0, 34, 49, 72, 103, 104, 106, 130, 174, 178, 179, 186, 195, 200, 201, 202, 210], "upper": [28, 29, 37, 39, 52, 94, 130, 148, 164, 171, 188, 196, 197, 200, 201], "uppercas": [37, 39, 52, 53, 80, 88, 90, 95, 171], "uppercase_decor": 37, "upscal": 174, "upstream": 118, "uptil": 92, "upto": [195, 200, 202], "upvot": 130, "upward": [177, 199], "uq": 118, "uqratio": 118, "urd": 117, "urg": 192, "urgent": [130, 132], "url": [116, 117, 127, 128, 130, 137, 138, 141, 144, 157, 174, 177, 178, 179, 180, 193], "urllib3": 128, "urlopen": 128, "ursar": 168, "us": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 31, 34, 37, 40, 42, 43, 44, 45, 46, 49, 52, 55, 56, 57, 61, 62, 64, 65, 66, 68, 69, 70, 72, 74, 75, 77, 78, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 102, 103, 104, 109, 118, 119, 122, 127, 129, 130, 131, 132, 133, 134, 136, 139, 140, 141, 142, 145, 146, 147, 151, 152, 153, 154, 157, 162, 163, 167, 168, 173, 176, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209], "usa": [37, 117, 131, 147], "usabl": [38, 84, 171, 175, 179, 180], "usag": [18, 19, 23, 38, 79, 98, 157, 158, 171, 173, 176, 178, 181, 182, 189, 190, 197, 202], "usd": [117, 137, 138, 147, 179, 197, 202], "useabl": 24, "useless": 7, "user": [22, 24, 34, 37, 42, 44, 45, 47, 48, 51, 55, 57, 69, 70, 71, 73, 74, 77, 80, 86, 89, 90, 93, 95, 104, 116, 117, 118, 127, 128, 129, 130, 131, 132, 133, 135, 139, 143, 144, 145, 155, 161, 164, 169, 171, 178], "user_check": 45, "user_id_gen_by_us": 80, "user_industri": 135, "user_inform": 144, "user_input": [116, 135], "user_loc": [116, 139], "user_m": 116, "user_prompt": 117, "user_queri": 139, "user_request": 139, "user_screen_nam": 140, "user_screenname_str": 140, "user_select": 145, "user_timelin": [140, 144], "user_tweet": 144, "user_unit": 139, "userdict": 118, "usernam": 117, "users_tweet": [140, 144], "userwarn": [116, 117, 132, 133, 171, 177, 186], "usless": 0, "usr": [171, 174], "usual": [0, 27, 37, 48, 49, 57, 71, 74, 83, 90, 92, 98, 103, 116, 130, 132, 133, 138, 144, 145, 151, 157, 163, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 190, 196], "utc": [59, 60, 61, 64, 65, 117], "utf": [68, 71, 117, 130], "uti": 180, "util": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 57, 116, 117, 118, 128, 130, 132, 133, 164, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 184, 198, 202], "utmost": [189, 196, 200, 201], "uuaoqyxbtl": 140, "uv": 32, "uw": 118, "uwratio": 118, "uxi": 168, "v": [7, 24, 26, 32, 47, 52, 55, 68, 71, 90, 100, 117, 130, 133, 143, 144, 153, 173, 174, 175, 177, 178, 190, 192, 194, 195, 199, 205], "v0": [177, 178, 179, 180, 187], "v1": [104, 128, 137, 138, 154, 202], "v2": [104, 154, 202], "v3": [24, 117], "v_": 32, "v_1": [32, 202], "v_2": [32, 202], "v_i": 32, "v_n": 32, "va": [188, 198], "vabariik": 117, "vacanc": 143, "vacant": 130, "vacat": 130, "vaccin": 47, "vagu": [7, 18, 19, 190], "vairabl": 94, "val": [38, 47, 49], "valid": [5, 11, 13, 15, 16, 17, 18, 19, 39, 52, 54, 74, 88, 89, 96, 106, 117, 118, 127, 157, 172, 174, 175, 180, 181, 189], "validate_str": 118, "validate_templ": 131, "vallei": [129, 130, 133], "valu": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 27, 32, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 51, 52, 56, 57, 59, 65, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 82, 84, 87, 89, 91, 92, 93, 95, 96, 102, 116, 117, 118, 128, 130, 132, 133, 135, 138, 140, 141, 143, 145, 147, 150, 151, 152, 153, 154, 157, 159, 161, 162, 164, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203], "valuabl": [0, 17, 18, 19, 130, 133, 144, 145], "value1": 53, "value2": 53, "value3": 53, "value_count": [147, 157, 169, 173, 180], "value_var": 202, "valueerror": [38, 71, 93, 94, 106, 128, 130, 152, 158, 166, 194], "valuen": 53, "valuetoolargeerror": 72, "valuetoosmallerror": 72, "vancouv": 117, "vanilla": [145, 179], "vanilla_relevant_doc": 142, "vanillish": 168, "vanillit": 168, "vanillux": 168, "vanish": 130, "vanishingli": 130, "vaporeon": 168, "var": [71, 77, 101, 128, 130, 147, 192, 201], "var_1": 88, "var_nam": [177, 178, 179, 180, 194, 195, 196], "var_scope_test": 75, "vari": [8, 11, 13, 71, 88, 101, 130, 132, 138, 143, 157, 173, 175, 177, 178, 179, 180, 187, 189, 194, 202], "variabel": 203, "variabl": [1, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 22, 24, 28, 29, 35, 38, 39, 40, 43, 44, 45, 47, 48, 49, 51, 52, 53, 57, 59, 60, 62, 64, 70, 71, 74, 79, 80, 83, 84, 88, 91, 92, 93, 94, 95, 100, 102, 103, 106, 116, 117, 118, 134, 137, 138, 139, 140, 144, 145, 161, 163, 164, 166, 167, 171, 172, 174, 179, 180, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202], "variable1": 88, "varianc": [1, 3, 101, 151, 154, 190], "variant": [177, 179], "variat": [1, 20, 44, 45, 47, 108, 112, 189, 191, 194, 195, 196, 197, 198, 199, 200, 202], "varieti": [24, 52, 137, 138, 144, 175, 194, 198, 201, 202], "variou": [0, 2, 24, 37, 39, 47, 48, 51, 52, 53, 54, 55, 57, 68, 80, 84, 91, 92, 95, 96, 117, 130, 133, 140, 143, 144, 150, 157, 162, 165, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 187, 188, 191, 192, 198, 201, 202, 203, 210], "variti": 194, "vartupl": 77, "vast": [0, 150, 157, 160, 179, 180], "vaswani": 179, "vatican": 116, "vb": 134, "vc": [128, 130, 133, 143], "vcsqueez": 133, "vdot": [31, 32], "ve": [16, 17, 18, 19, 39, 71, 116, 117, 118, 130, 133, 134, 135, 140, 144, 145, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202], "vec": 32, "vector": [3, 4, 11, 16, 17, 18, 19, 26, 30, 31, 33, 104, 116, 117, 133, 134, 143, 153, 154, 173, 174, 177, 178, 179, 194, 198, 200], "vectordb": [133, 142], "vectorestor": 117, "vectorestoreretriev": 116, "vectorstor": [117, 132, 133, 134, 136, 142, 143], "vectorstoreretriev": 116, "veg": 71, "vega": 143, "veget": [54, 71, 117, 131], "vehicl": [103, 138, 140, 157, 200], "vehicle_info": 103, "ven": 117, "vendor": [145, 176, 180, 200], "vendor_id": 200, "veniped": 168, "venomoth": 168, "venonat": 168, "ventur": [128, 130, 133, 143], "venusaur": 168, "venusaurmega": 168, "venv": [24, 180], "verb": 130, "verbos": [90, 116, 117, 127, 128, 130, 131, 132, 133, 141, 143, 144, 145, 177, 178], "verdana": 198, "verfi": 180, "veri": [0, 1, 4, 5, 8, 22, 24, 27, 28, 29, 35, 42, 48, 52, 53, 55, 56, 57, 68, 79, 87, 89, 92, 98, 106, 115, 116, 130, 132, 133, 140, 145, 150, 153, 154, 157, 158, 160, 161, 163, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 188, 189, 190, 192, 193, 194, 196, 197, 198, 200, 201, 202], "veriabl": 75, "verif": 118, "verifi": [103, 128, 171, 178, 179, 180], "verify_integr": 166, "verison": 174, "versa": [31, 172], "versatil": [52, 53, 201], "versicolor": [9, 10, 14, 186, 194], "version": [24, 66, 68, 79, 80, 81, 95, 116, 118, 128, 130, 132, 133, 134, 139, 143, 144, 153, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 188, 189, 193, 201], "versor": 32, "versu": [144, 172, 174, 179, 180], "vert": 195, "vertex": 180, "vertiac": 197, "vertic": [39, 52, 106, 117, 132, 153, 154, 194, 195, 196, 197, 198, 199, 202], "verticalalign": 179, "vespiquen": 168, "vest": [130, 133], "vet": 141, "vgg": 177, "vgg16": 177, "via": [38, 49, 103, 116, 117, 118, 119, 130, 133, 134, 143, 144, 172, 174, 175, 176, 177, 178, 179, 180, 182, 200], "viabl": 179, "viaweb": 130, "vibrava": 168, "vice": [31, 172], "victini": 168, "victreebel": 168, "video": [24, 116, 117, 122, 132, 140, 143, 144, 146, 171, 172, 173, 174, 175, 179, 180, 202, 210], "video_edit": 116, "video_text": 144, "video_url": 144, "videos_text": 144, "view": [70, 103, 130, 132, 133, 138, 140, 141, 143, 152, 155, 160, 171, 173, 174, 177, 179, 180, 186, 188, 190, 198, 199, 203], "viewabl": 178, "viewer": 189, "vigoroth": 168, "vijai": 102, "vileplum": 168, "villain": 130, "vinegar": 131, "violin": [189, 196, 198, 199, 200, 205], "violinplot": [194, 195, 197], "viral": [129, 144], "virginica": [9, 10, 14, 186, 194], "viridi": [189, 192, 198], "viridian": 189, "viridis_r": 192, "virizion": 168, "virtual": 196, "virtualenv": [24, 118], "virtuou": 133, "visibl": [75, 80, 94, 102, 130, 141, 145, 190, 197, 200, 201, 202], "visibli": 188, "vision": [130, 141, 144, 171, 173, 175, 176, 177, 179, 180, 185], "visiontransform": 177, "visit": [22, 34, 38, 39, 52, 59, 65, 66, 70, 72, 74, 75, 81, 82, 84, 89, 103, 104, 116, 130, 140, 157, 190], "visual": [0, 11, 12, 13, 27, 52, 53, 103, 115, 130, 141, 147, 148, 171, 172, 173, 176, 177, 178, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 209, 210], "visuali": 190, "visualizaion": 202, "visualstudio": 24, "vit": 177, "vit_average_time_per_pr": 180, "vit_b_16": [177, 179, 180], "vit_b_16_weight": [179, 180], "vit_b_32": 177, "vit_result": 180, "vit_stat": 180, "vit_test_pred_df": 180, "vit_test_pred_dict": 180, "vit_total_param": 180, "vit_transform": 180, "vivid": 140, "vividli": [130, 200], "vivillon": 168, "vlag": 192, "vlag_r": 192, "vmax": [18, 19, 195, 203], "vmin": [18, 19, 195, 203], "vocabulari": 130, "vodka": 133, "voic": [129, 140], "voil": 127, "volatil": [68, 171], "volbeat": 168, "volcanion": 168, "volcarona": 168, "volkswagen": [157, 158, 169], "voltorb": 168, "volum": 69, "volvo": [157, 158, 169], "vonmis": 81, "vonmisesvari": 81, "vound": 143, "vowel": [53, 54, 90, 91], "vpython": 24, "vscode": [24, 171, 178], "vstack": 150, "vullabi": 168, "vulpix": 168, "vv": 153, "vw": 130, "vx0qtjbfxt": 140, "vysxuyy7rje0xreyvcvzxa": 178, "w": [0, 47, 48, 49, 52, 53, 54, 56, 60, 61, 68, 71, 116, 117, 118, 129, 132, 133, 134, 139, 153, 171, 174, 175, 177, 179, 180, 186, 189, 201, 202], "w320": 117, "w_i": 30, "wa": [0, 14, 15, 34, 35, 36, 37, 38, 39, 44, 47, 49, 52, 57, 68, 70, 71, 75, 80, 87, 90, 94, 103, 104, 106, 116, 117, 118, 119, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 152, 153, 158, 171, 172, 173, 174, 175, 177, 178, 179, 180, 184, 186, 187, 188, 190, 196, 198, 200, 201, 202], "wage": 200, "wagon": [157, 158, 169], "wai": [0, 22, 24, 34, 35, 37, 38, 42, 46, 47, 48, 51, 52, 54, 55, 56, 57, 59, 62, 63, 68, 71, 72, 77, 80, 83, 85, 89, 92, 94, 95, 96, 104, 106, 116, 117, 118, 130, 131, 132, 133, 134, 136, 138, 140, 141, 142, 145, 147, 151, 152, 157, 158, 159, 160, 161, 165, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 200, 201, 203, 210], "wailmer": 168, "wailord": 168, "wait": [44, 66, 130, 133, 134, 140, 174, 175, 178, 179, 180], "walk": [117, 130, 133, 175, 179, 199], "walk_through_dir": 175, "walker": 130, "walkthrough": 179, "wall": [130, 143, 144, 171, 178], "walli": 28, "wallow": 130, "walrein": 168, "wandb": 178, "wang": 179, "wanna": [132, 140, 145], "want": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 35, 37, 38, 39, 42, 44, 46, 47, 48, 49, 51, 52, 53, 68, 69, 71, 75, 80, 83, 87, 89, 90, 94, 96, 101, 102, 103, 104, 106, 107, 111, 116, 117, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 192, 195, 196, 197, 200, 201, 202, 210], "warm": [103, 130, 189], "warmest": 130, "warmup": 179, "warn": [98, 116, 117, 118, 132, 133, 144, 153, 165, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "warner": 118, "wartortl": 168, "wash": 148, "washington": 186, "wasn": [116, 130, 133, 143, 178, 180], "wast": [116, 130, 133, 134, 210], "wat": 192, "watch": [47, 130, 134, 140, 144, 145, 172, 173, 174, 210], "watchog": 168, "water": [116, 130, 168], "watev": 52, "watson": 47, "wave": [130, 132, 187, 202], "wayve_ai": 140, "wb": [68, 173, 174, 175, 176, 177, 178, 179, 181, 182], "we": [0, 1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 26, 27, 31, 32, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 115, 116, 117, 118, 128, 129, 130, 132, 133, 134, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 181, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210], "we6ptjwdnp": 140, "weak": [70, 84], "wealth": 142, "weapon": [186, 200], "wear": 186, "weather": [5, 116, 127, 130, 139], "weather_info": 139, "weaviat": 116, "weavil": 168, "web": [22, 24, 98, 130, 133, 144, 180, 189], "web_tech": 52, "webbaseload": 142, "weber": 130, "webinar": 117, "webpag": [116, 117, 174], "websit": [24, 90, 116, 117, 141, 142, 171, 172, 173, 174, 175, 176, 181, 182, 189], "website_data": 144, "wed": [128, 171], "wednesdai": [116, 145], "weedl": 168, "week": [59, 60, 61, 63, 74, 130, 141, 145, 179, 195, 197, 198], "weekdai": [60, 61], "weekend": [133, 134, 145, 196, 198], "weekli": [95, 147], "weep": 103, "weepinbel": 168, "weez": 168, "weibul": 81, "weibullvari": 81, "weight": [7, 74, 133, 138, 147, 161, 171, 172, 173, 174, 175, 177, 178, 179, 180, 188, 192, 198, 200], "weight_decai": 179, "weight_of_object": 74, "weird": [130, 157], "weirder": 37, "welcom": [37, 52, 68, 74, 80, 87, 101, 116, 144, 178, 180, 190, 195, 196, 197, 199, 200, 201, 202], "well": [4, 5, 11, 12, 13, 16, 17, 18, 19, 24, 25, 36, 42, 44, 45, 47, 48, 49, 51, 52, 63, 69, 71, 79, 83, 89, 90, 95, 96, 101, 102, 103, 104, 107, 111, 116, 118, 130, 132, 133, 135, 138, 140, 141, 143, 145, 157, 159, 160, 161, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202], "went": [71, 116, 118, 130, 133, 134, 138, 139, 144, 173, 174, 177, 178], "were": [9, 10, 14, 27, 39, 40, 49, 68, 70, 71, 77, 94, 95, 103, 106, 116, 117, 118, 130, 132, 133, 137, 138, 140, 141, 143, 144, 145, 153, 171, 172, 175, 177, 178, 179, 180, 184, 186, 194, 199], "weren": [130, 143, 179], "west": [117, 130], "western": 117, "wget": 180, "what": [4, 5, 7, 11, 13, 14, 15, 16, 17, 18, 19, 22, 27, 35, 36, 37, 38, 39, 40, 43, 49, 51, 57, 64, 71, 75, 81, 84, 88, 89, 95, 102, 104, 127, 128, 130, 131, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 169, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 209], "whatev": [87, 102, 104, 116, 130, 134, 135, 171, 172, 174, 175, 176, 182, 190], "whatsoev": 202, "wheel": [118, 130, 138, 157, 158, 168, 169, 179, 200], "when": [4, 5, 6, 10, 14, 15, 16, 17, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 106, 108, 109, 112, 116, 117, 118, 127, 128, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 143, 144, 147, 148, 151, 153, 154, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 202, 207], "whenev": [38, 48, 70, 84, 102, 106, 117, 132, 161, 164, 166, 167, 171, 178, 197, 198], "where": [0, 1, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 34, 36, 37, 38, 46, 48, 49, 51, 52, 53, 54, 57, 65, 68, 70, 71, 74, 75, 76, 80, 92, 93, 94, 95, 96, 98, 102, 103, 106, 116, 117, 118, 130, 132, 133, 136, 137, 140, 143, 144, 152, 153, 155, 157, 159, 160, 161, 162, 164, 165, 166, 167, 171, 172, 173, 175, 178, 181, 182, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "wherea": [39, 47, 51, 54, 59, 60, 75, 98, 101, 106, 108, 112, 130, 140, 158, 165, 166, 167, 175, 187, 191, 200, 201], "wherebi": 130, "whereupon": [130, 133], "wherev": [133, 143, 177, 180], "whether": [0, 5, 14, 15, 16, 17, 18, 19, 20, 42, 43, 44, 49, 68, 71, 72, 76, 84, 95, 103, 108, 112, 133, 137, 139, 152, 157, 161, 162, 163, 164, 166, 167, 172, 173, 174, 175, 177, 178, 179, 180, 190, 191, 192, 199, 200], "whi": [195, 196], "which": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 23, 24, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 45, 47, 49, 51, 52, 54, 55, 56, 57, 62, 64, 66, 68, 69, 71, 72, 74, 75, 79, 80, 85, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 106, 109, 116, 117, 118, 127, 130, 132, 133, 134, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 150, 151, 152, 153, 154, 157, 158, 159, 161, 162, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 178, 179, 180, 182, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 207, 210], "whichev": [191, 197], "while": [22, 34, 35, 38, 40, 42, 50, 51, 52, 55, 56, 66, 68, 70, 72, 74, 77, 79, 80, 83, 88, 89, 93, 95, 96, 98, 101, 102, 103, 106, 117, 128, 130, 132, 133, 134, 138, 140, 141, 152, 158, 159, 163, 165, 166, 172, 174, 175, 177, 178, 179, 180, 186, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202], "whilst": [173, 174, 176, 179, 180, 201], "whimsicott": 168, "whirl": 130, "whirliped": 168, "whiscash": 168, "whisk": 116, "whisker": [7, 11, 13, 195, 196, 198, 200], "whiskerprop": 194, "whismur": 168, "whisper": 144, "white": [7, 42, 49, 52, 117, 130, 132, 138, 145, 186, 187, 197, 198], "whitegrid": [187, 189, 190, 191, 192, 195, 197, 198, 200, 202], "whitespac": [47, 52, 89, 117, 118], "whitish": 133, "whl": [177, 178, 179, 180], "who": [44, 52, 117, 127, 130, 132, 136, 137, 138, 140, 143, 144, 145, 155, 180, 186, 196, 198, 200, 210], "whoisthi": [101, 103], "whole": [24, 39, 49, 52, 66, 74, 80, 95, 130, 132, 133, 136, 144, 145, 157, 158, 160, 172, 174, 175, 176, 177, 178, 179, 180], "wholesal": 133, "wholist": 132, "wholli": 130, "whoop": [37, 137, 138, 144], "whose": [1, 8, 75, 79, 90, 102, 116, 130, 161, 164, 179], "why": [35, 37, 38, 44, 51, 52, 70, 71, 84, 89, 130, 133, 136, 137, 138, 140, 143, 144, 145, 153, 172, 173, 174, 175, 181, 182, 186, 194, 195, 196, 198], "wichita": 186, "wickham": 190, "wide": [24, 94, 116, 130, 154, 157, 164, 171, 174, 175, 177, 178, 179, 180, 194, 195, 198], "wide_to_long": 194, "widen": 202, "wider": [117, 143, 145, 173, 197, 200], "widespread": [158, 178], "width": [9, 10, 11, 14, 52, 95, 101, 117, 143, 145, 148, 171, 174, 175, 177, 178, 179, 180, 181, 182, 186, 191, 192, 194, 196, 197, 198, 200, 202], "width_ratio": 202, "wife": 143, "wifi": 135, "wigglytuff": 168, "wightman": 174, "wiki": [118, 132, 173, 193], "wikipedia": [1, 3, 4, 5, 7, 132, 171, 172, 173, 177, 193], "wikipediaapiwrapp": 132, "wild": [116, 117, 130, 140, 173, 180], "wildcard": 143, "wilder": 200, "wildli": 130, "william": [132, 143], "willing": [116, 130, 132], "wimpi": 130, "win": 202, "win32": [24, 80], "wind": [130, 171], "windi": 139, "window": [24, 68, 69, 87, 102, 130, 138, 186, 189, 200], "windshield": 138, "wine": 145, "winerror": [68, 80], "wing": 140, "wingul": 168, "winograd": 130, "winre_backup_partit": 69, "winreag": 69, "winter": [45, 74, 130, 192], "winter_r": [192, 201], "wirh": 168, "wisdom": [116, 132], "wise": [129, 148, 150, 157, 165, 168, 171, 179, 189, 192, 200], "wish": [38, 39, 49, 52, 74, 94, 133, 180, 189, 191, 196, 198, 200, 201, 202], "wistia": 192, "wistia_r": 192, "wit": [129, 130], "within": [0, 3, 24, 34, 39, 48, 49, 54, 68, 69, 74, 76, 83, 92, 101, 103, 117, 130, 132, 133, 140, 154, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 192, 194, 195, 196, 197, 198, 200, 202, 204], "without": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 34, 37, 43, 49, 52, 54, 56, 57, 60, 61, 68, 71, 76, 77, 79, 80, 83, 95, 96, 98, 101, 102, 103, 104, 116, 117, 118, 130, 132, 133, 134, 135, 141, 145, 153, 154, 161, 163, 166, 168, 171, 172, 174, 178, 179, 180, 186, 187, 188, 189, 194, 196, 197, 198, 200, 201, 202, 209], "withpoli": 141, "witti": 129, "wizzi": 118, "woah": [172, 177, 179, 180], "wobbuffet": 168, "wolfpaulu": 134, "wolfram_alpha_appid": 127, "wolframalpha": 127, "wolpert": 0, "woman": [39, 130, 196, 198], "women": 140, "won": [74, 103, 117, 130, 131, 132, 133, 134, 139, 143, 144, 145, 154, 157, 171, 172, 173, 174, 175, 177, 179, 180, 186, 187, 190, 194, 200, 202], "wonder": [59, 74, 116, 117, 127, 130, 134, 136, 140, 173, 174, 175, 177, 178, 179, 180, 200], "wonderfulli": 130, "wont": [102, 171], "woo": [101, 117], "woobat": 168, "wood": 130, "woof": 132, "woohoo": [172, 175, 176, 179, 180], "wooper": 168, "wor": 52, "word": [0, 5, 7, 28, 29, 32, 47, 49, 52, 56, 57, 68, 80, 88, 90, 95, 101, 102, 103, 116, 127, 130, 131, 132, 134, 140, 143, 145, 171, 173, 174, 175, 177, 178, 179, 180, 190, 191, 198, 201], "work": [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 35, 36, 37, 39, 40, 47, 48, 49, 51, 53, 55, 57, 59, 68, 69, 71, 75, 78, 80, 85, 92, 94, 95, 98, 101, 102, 103, 104, 107, 111, 117, 118, 129, 130, 132, 133, 134, 135, 137, 140, 141, 143, 144, 145, 150, 152, 153, 157, 160, 164, 171, 172, 173, 174, 175, 177, 178, 179, 180, 186, 187, 189, 190, 191, 192, 195, 197, 200, 201, 202, 210], "workabl": 210, "workaround": [117, 144], "workbook": 200, "worker": [175, 176, 182], "workflow": [117, 141, 173, 174, 175, 178, 180, 185, 202], "workforc": [137, 138], "workload": [85, 179], "workplac": 192, "works_for_al": 37, "world": [4, 10, 11, 13, 22, 23, 24, 44, 47, 52, 70, 74, 78, 80, 84, 90, 92, 95, 96, 100, 101, 102, 117, 128, 130, 133, 140, 143, 157, 171, 172, 173, 174, 175, 177, 178, 179, 180, 182, 187, 190, 195, 196, 200, 209], "world66": 52, "worldli": 130, "worm": [130, 144], "wormadampl": 168, "wormadamsandi": 168, "wormadamtrash": 168, "worn": 130, "worri": [90, 117, 130, 143, 145, 178, 179, 193, 202], "wors": [130, 173, 174, 179], "worst": [1, 130, 173], "worth": [130, 136, 145, 178, 179, 180, 194, 195, 199], "would": [0, 6, 7, 23, 24, 34, 36, 37, 38, 40, 42, 47, 49, 57, 68, 69, 70, 71, 77, 78, 80, 83, 85, 88, 89, 90, 94, 102, 103, 106, 109, 115, 116, 117, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 171, 172, 173, 174, 175, 177, 178, 179, 180, 186, 188, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 207, 210], "wouldn": [130, 132, 133, 143, 179, 180, 190, 198, 201], "wow": [130, 132, 140], "wozniak": 132, "wp": 134, "wqzg1bdotc": 140, "wrangl": [170, 192, 200], "wrap": [77, 101, 130, 131, 135, 138, 164, 179], "wrapped_f": 130, "wrappedfn": 130, "wrapper": [37, 127, 128, 164, 190, 195, 201], "wrapper___slow_conv2d_forward": 175, "wrapper_accepting_paramet": 37, "wrapper_addmm": 174, "wrapper_cuda_addmm": 174, "wratio": 118, "wreckag": 130, "wrestl": 130, "writ": 80, "writabl": 68, "write": [5, 6, 20, 22, 24, 39, 45, 47, 48, 49, 52, 54, 57, 70, 74, 75, 76, 80, 84, 85, 89, 90, 91, 92, 94, 95, 98, 101, 103, 106, 108, 109, 112, 116, 117, 130, 132, 133, 140, 143, 145, 151, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 197, 206, 207], "writeabl": 155, "writefil": [176, 180, 182], "writelin": 68, "writer": [116, 130, 133, 140], "written": [6, 24, 43, 51, 52, 57, 68, 71, 74, 80, 84, 85, 87, 88, 90, 91, 92, 98, 108, 109, 112, 130, 136, 140, 175, 176, 177, 178, 179, 180, 182, 207], "wrong": [44, 45, 71, 72, 116, 118, 130, 171, 172, 173, 174, 175, 178, 180], "wrote": [68, 87, 89, 116, 117, 130, 136, 173, 176, 177, 178, 179], "wspace": [16, 17, 18, 19], "wt": 194, "wtxmut": 194, "wurmpl": 168, "wuzzi": 119, "www": [24, 116, 117, 137, 138, 141, 142, 144], "wxwidget": 24, "wynaut": 168, "wysiwyg": 130, "x": [1, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 24, 28, 29, 30, 31, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 60, 61, 68, 74, 75, 76, 77, 79, 80, 82, 84, 89, 90, 91, 92, 94, 95, 102, 103, 104, 106, 116, 117, 132, 140, 144, 147, 148, 150, 151, 152, 153, 154, 157, 158, 164, 168, 169, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "x1": [11, 12, 13, 14, 15, 16, 17, 75, 95, 173, 191], "x11": 189, "x2": [11, 12, 13, 14, 15, 16, 17, 95, 147, 173, 191], "x3": 95, "x45": 52, "x48": 52, "x58": 52, "x61": 52, "x86": 69, "x97": 136, "x_": [28, 29], "x_1": [28, 29], "x_2": [28, 29], "x_3": [28, 29], "x_4": [28, 29], "x_5": [28, 29], "x_axi": [10, 11, 14, 15, 193], "x_bin": 190, "x_blob": 173, "x_blob_test": 173, "x_blob_train": 173, "x_ci": 190, "x_data": 194, "x_estim": 190, "x_flatten": 179, "x_i": [28, 29, 30, 173], "x_index": [11, 14, 15], "x_input": 179, "x_jitter": 190, "x_m": [28, 29], "x_max": [11, 14, 15, 193], "x_med": 195, "x_min": [11, 14, 15, 193], "x_origin": 171, "x_output_mlp_block": 179, "x_output_msa_block": 179, "x_partial": 190, "x_patch": 179, "x_permut": 171, "x_predict": [11, 12, 13], "x_regress": 173, "x_reshap": 171, "x_sampl": 173, "x_squeez": 171, "x_stack": 171, "x_sum": 48, "x_test": [11, 13, 16, 17, 18, 19, 172, 173], "x_test_regress": 173, "x_train": [10, 11, 13, 14, 15, 16, 17, 18, 19, 172, 173], "x_train_regress": 173, "x_unsqueez": 171, "x_valu": 11, "x_var": [192, 201], "x_y_index": 11, "xatu": 168, "xavier": 197, "xaxi": [11, 198], "xeon": 180, "xernea": 168, "xerox": 130, "xgboost": 174, "xhh": 52, "xkcd": 189, "xkcd_palett": 189, "xkcd_rgb": [189, 195], "xl": 68, "xlabel": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 132, 147, 148, 172, 174, 175, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 200], "xlim": [188, 202], "xlist": 197, "xlrd": 68, "xlsx": 168, "xmax": 194, "xmin": 194, "xml": 24, "xml_exampl": 68, "xmpmcoyqhi": 140, "xor": [95, 104], "xorg": 171, "xtick": [147, 148, 179, 198], "xticklabel": [179, 202], "xy": [180, 198, 201], "xycoord": [188, 201], "xytext": 198, "xyz": [47, 54, 69, 71, 94, 141, 171], "xyzvalu": 94, "xz": 39, "y": [4, 5, 8, 11, 12, 13, 14, 15, 28, 29, 30, 35, 39, 40, 45, 46, 47, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 74, 75, 77, 79, 80, 82, 90, 91, 92, 94, 95, 102, 103, 104, 106, 116, 117, 130, 132, 136, 137, 138, 141, 147, 148, 150, 151, 153, 154, 157, 168, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202], "y1": [95, 191], "y134sdnnjb2rllxjlbw90zq": 171, "y2": [95, 191], "y3": 95, "y312sdnnjb2rllxjlbw90zq": 171, "y_axi": [10, 11, 14, 15], "y_blob": 173, "y_blob_test": 173, "y_blob_train": 173, "y_combinator_url": 141, "y_data": 194, "y_i": [28, 29, 30], "y_index": [11, 14, 15], "y_jitter": 190, "y_logit": [173, 174], "y_max": [11, 14, 15], "y_med": 195, "y_min": [11, 14, 15], "y_partial": 190, "y_pred": [172, 173, 174, 175, 176, 181, 182], "y_pred_class": [175, 176, 181, 182], "y_pred_label": 173, "y_pred_prob": 173, "y_pred_tensor": 174, "y_predict": [11, 12, 13], "y_regress": 173, "y_sampl": 173, "y_test": [11, 13, 16, 17, 18, 19, 172, 173], "y_test_predict": [16, 17, 18, 19], "y_test_regress": 173, "y_train": [11, 13, 14, 15, 16, 17, 18, 19, 172, 173], "y_train_predict": [14, 15, 16, 17, 18, 19], "y_train_regress": 173, "y_true": [173, 174], "y_valu": 11, "y_var": [192, 201], "ya": 30, "yahoo": [130, 133], "yale": 130, "yamask": 168, "yanke": 117, "yanma": 168, "yanmega": 168, "yannic": 179, "yaxi": [11, 198], "yb": 30, "yc": [130, 141], "ycarc5yrrupyg00": 80, "ycombin": [116, 117, 141], "yd7efwnqkns7qxat": 80, "ye": [35, 37, 49, 55, 70, 117, 130, 145, 158, 161, 164, 173, 174, 175, 177, 179, 182, 190, 196, 198, 201, 202], "yeah": [143, 145, 180], "year": [44, 47, 52, 60, 61, 62, 63, 64, 65, 71, 84, 95, 97, 101, 106, 116, 117, 130, 132, 133, 134, 136, 137, 138, 139, 140, 143, 144, 147, 179, 198, 202, 203], "year2021": 90, "year_2021": 90, "year_born": 71, "yellow": [117, 130, 200], "yesmail": 40, "yet": [24, 49, 116, 130, 133, 137, 138, 172, 174, 175, 177, 178, 179, 180, 198], "yg1di2srj": 140, "yield": [34, 35, 88, 136, 152, 153, 187], "yield_kei": 133, "yj": [51, 92], "ylabel": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 132, 147, 148, 172, 174, 186, 187, 188, 189, 190, 193, 194, 195, 196, 197, 198, 200], "ylgn": 192, "ylgn_r": 192, "ylgnbu": 192, "ylgnbu_r": 192, "ylim": [188, 193, 201, 202], "ylist": 197, "ylorbr": 192, "ylorbr_r": 192, "ylorrd": 192, "ylorrd_r": 192, "ymax": 194, "ymin": 194, "yml": 118, "yo": [39, 188], "yoga": 143, "york": [116, 117, 119, 130], "yorker": 130, "yorkvil": [117, 130], "yosemit": 130, "you": [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 106, 107, 108, 109, 111, 112, 115, 116, 117, 118, 119, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 148, 150, 151, 152, 153, 154, 157, 158, 159, 161, 164, 165, 166, 167, 169, 172, 173, 174, 175, 180, 181, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 210], "young": [117, 132, 141], "younger": [130, 133], "your": [6, 20, 23, 25, 34, 36, 39, 42, 43, 44, 49, 52, 53, 54, 63, 68, 69, 71, 72, 74, 80, 82, 83, 87, 88, 89, 90, 94, 95, 98, 101, 102, 107, 108, 109, 111, 112, 115, 117, 118, 119, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 142, 144, 145, 147, 150, 153, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 207, 210], "your_ag": 44, "your_api_kei": 138, "your_space_nam": 180, "your_usernam": 180, "yourapikei": [116, 128, 132, 133, 134, 136, 137, 142], "yourapikeyifnotset": [117, 131, 139, 140, 143, 144], "yourkei": 129, "yourself": [57, 59, 74, 90, 94, 101, 130, 133, 138, 171, 173, 178, 200], "youtub": [140, 143, 172, 178, 179, 180], "youtubeload": 144, "youtubesearchtool": 139, "youtubeyoutub": 141, "ypyp3": 118, "yt": [30, 144], "ytho": 52, "ython": 39, "ytick": [147, 148, 179, 193, 201], "yticklabel": 179, "yummi": 140, "yurtsev": 138, "yveltal": 168, "yy": [59, 62], "yyyi": [59, 61, 178], "z": [7, 11, 14, 15, 40, 47, 52, 53, 54, 60, 61, 77, 88, 90, 95, 103, 151, 157, 168, 171, 173, 179, 201], "z2d5xgsemj": 140, "z_predict": 11, "z_score": 204, "z_setosa": 14, "z_versicolor": 14, "z_virginica": 14, "za": 52, "zalando": [9, 17, 19, 174], "zangoos": 168, "zapdo": 168, "zapier_nla_api_kei": 128, "zapiernlawrapp": 128, "zapiertoolkit": [122, 128, 146], "zaxi": 11, "zealand": [11, 13], "zebstrika": 168, "zekrom": 168, "zen": [96, 106], "zero": [7, 11, 14, 15, 27, 34, 37, 38, 43, 44, 45, 46, 48, 49, 51, 52, 57, 60, 61, 70, 71, 91, 93, 95, 102, 106, 116, 117, 127, 128, 130, 132, 141, 150, 151, 153, 154, 161, 164, 168, 172, 173, 174, 175, 176, 179, 180, 181, 182, 198, 201], "zero_grad": [172, 173, 174, 175, 176, 181, 182], "zero_to_ten": 171, "zero_to_ten_deprec": 171, "zerodivisionerror": [37, 70, 71], "zeros_lik": 171, "zfill": 52, "zho": 117, "zigzagoon": 168, "zip": [30, 47, 80, 92, 151, 159, 165, 175, 176, 177, 178, 179, 180, 181, 182, 195, 198, 201, 204], "zip_ref": [175, 176, 177, 178, 181, 182], "zipcod": [45, 47], "zipfil": [175, 176, 177, 178, 181, 182], "zone": [60, 61, 63, 141], "zoom": [130, 145], "zoroark": 168, "zorua": 168, "zp7xfripv9": 140, "zubat": 168, "zurich": 161, "zweilou": 168, "zxoyh": 80, "zygarde50": 168, "\u00b5": 171, "\u00bd": 116, "\u00e2": 130, "\u00f6": 91, "\u00fb": 32, "\u00fc": 91, "\u00fcnic\u00f6d": 91, "\u03b8": 32, "\u03c0": 74, "\u03c6\u03b9\u03bb\u03bf\u03c3\u03bf\u03c6\u03af\u03b1": 132, "\u043a\u043e\u043b\u0443\u043c\u0431\u0438\u044f": 117, "\u043a\u043e\u043b\u0443\u043c\u0431\u0438\u0458\u0430": 117, "\u043f\u0430\u0439\u043a\u043e\u0432": 118, "\u0440\u0435\u043f\u0443\u0431\u043b\u0438\u043a\u0430": 117, "\u0440\u0435\u0441\u043f\u0443\u0431\u043b\u0438\u043a\u0430": 117, "\u0444\u0440\u0430\u043d\u0446\u0438\u044f": 117, "\u0444\u0440\u0430\u043d\u0446\u0443\u0437\u0441\u043a\u0430\u044f": 117, "\u0444\u0440\u0430\u043d\u0446\u0443\u0441\u043a\u0430": 117, "\u044e\u0440\u0438\u0439": 118, "\u0627\u0644\u062c\u0645\u0647\u0648\u0631\u064a\u0629": 117, "\u0627\u0644\u0641\u0631\u0646\u0633\u064a\u0629": 117, "\u062c\u0645\u0647\u0648\u0631\u064a\u0629": 117, "\u062c\u0645\u0647\u0648\u0631\u06cc": 117, "\u062c\u0645\u06c1\u0648\u0631\u06cc\u06c1": 117, "\u0641\u0631\u0627\u0646\u0633": 117, "\u0641\u0631\u0627\u0646\u0633\u0647": 117, "\u0641\u0631\u0646\u0633\u0627": 117, "\u0643\u0648\u0644\u0648\u0645\u0628\u064a\u0627": 117, "\u06a9\u0644\u0645\u0628\u06cc\u0627": 117, "\u06a9\u0648\u0644\u0645\u0628\u06cc\u0627": 117, "\u30b3\u30ed\u30f3\u30d3\u30a2": 117, "\u30b3\u30ed\u30f3\u30d3\u30a2\u5171\u548c\u56fd": 117, "\u30d5\u30e9\u30f3\u30b9": 117, "\u30d5\u30e9\u30f3\u30b9\u5171\u548c\u56fd": 117, "\u54e5\u4f26\u6bd4\u4e9a": 117, "\u54e5\u4f26\u6bd4\u4e9a\u5171\u548c\u56fd": 117, "\u6cd5\u5170\u897f\u5171\u548c\u56fd": 117, "\u6cd5\u56fd": 117, "\uacf5\ud654\uad6d": 117, "\ucf5c\ub86c\ube44\uc544": 117, "\ud504\ub791\uc2a4": 117}, "titles": ["Introduction to Machine Learning! \ud83d\ude80", "Anomaly Detection Using Gaussian Distribution", "Concepts at glance", "K-Means Algorithm", "Linear Regression", "Logistic Regression", "Notebooks with MyST Markdown", "Neural Network", "Anomaly Detection Using Gaussian Distribution", "Datasets", "K-Means Algorithm Demo", "Multivariate Linear Regression Demo", "Non-linear Regression Demo", "Univariate Linear Regression Demo", "Logistic Regression With Linear Boundary Demo", "Logistic Regression With Non-Linear Boundary Demo", "Multivariate Logistic Regression Demo", "Multivariate Logistic Regression Demo", "Neural Network (Multilayer Perceptron) Demo", "Neural Network (Multilayer Perceptron) Demo", "Markdown Files", "Here\u2019s my sample title", "Learn Python Programming", "Mathematics for Machine Learning", "Getting Started with Python", "Content with notebooks", "Linear Algebra", "Calculus - Fourier Series", "Capital-pi notation", "Capital-sigma notation", "Dissimilarity Measure", "Linear Algebra - Matrices", "Linear Algebra - Vectors", "Mathematics essentials", "Python Iterators", "Python Python Generators", "Python Closures", "Python Decorators", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator", "Python RegEx", "Python <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code></strong>", "Python Advanced Topics", "Python Flow-Control (Decision-Making) Statements", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-else</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-elif-else</span></code> statement", "Python Nested <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Loops in Python", "Loops in Python", "Control Statements in Python", "Python Flow Control", "Python Numbers, Type Conversion and Mathematics", "Python Strings", "Python List", "Python Tuple", "Python Dictionary", "Python Sets", "Python List Comprehension", "Python Data Types", "Python datetime", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strftime()</span></code>", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strptime()</span></code>", "How to get current date and time in Python?", "Python Get Current time", "Python timestamp to datetime and vice-versa", "Python time Module", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">sleep()</span></code>", "Python Date &amp; Time Module", "Python File I/O", "Python Directory and Files Management", "Python Errors and Built-in Exceptions", "Python Exceptions Handling Using <code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">except</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">finally</span></code> statement", "Python Custom Exceptions", "Python Files", "Python Functions", "Python Global, Local and Nonlocal variables", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code> Keyword", "Function Argument and Parameter", "Python Recursion", "Python Anonymous/<strong><code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span></code></strong> Function", "Python Modules", "Python Random Module", "Python Mathematical Functions", "Python Package", "Python Docstrings", "Python User-defined Functions", "Python Functions", "Python Hello, World", "Python Keywords and Identifiers", "Python Statement, Indentation and Comments", "Python Variables and Constants", "Python Literals", "Python Data Types", "Python Type Conversion and Type Casting", "Python Input, Output and Import", "Python Operators", "Python Namespace and Scope", "Data structures and algorithms", "Differences Between Interpreter and Compiler", "&lt;no title&gt;", "Python Introduction", "Python OOPs Concepts", "Python  Classes and Objects", "Python Inheritance", "Python Operator Overloading", "Python Object Class", "self in Python, Demystified", "Content with notebooks", "Markdown Files", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "Content with notebooks", "Markdown Files", "Here\u2019s my sample title", "Introduction to HuggingFace", "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80", "LangChain Cookbook \ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73", "LangChain Cookbook Part 2: Use Cases\ud83d\udc68\u200d\ud83c\udf73\ud83d\udc69\u200d\ud83c\udf73", "Changelog", "TheFuzz", "Table of Contents", "Langchain modules", "Langchain", "LangGraphs", "LangServe", "LangSmith", "Langchain expression language", "Agents - Make OpenAI Do Things For you", "Zapier Natural Language Actions API", "Twitter Reply Bot", "Load Documents", "0. Simple Input/Output Still works", "5 Levels Of Summarization: Novice to Expert", "Advanced Retrieval With LangChain", "Top-K Similarity Search - Ask A Book A Question", "To Do", "Sources", "Extract Structured Data From Text: Expert Mode (Using Function Calling)", "Extract Structured Data From Text: Expert Mode (Using Kor)", "Function Calling with OpenAI\u2019s GPT Models: An Interactive Tutorial", "Instructing LLMs To Match Tone", "Personalized email generation", "&lt;no title&gt;", "Topic Modeling With Language Models", "Using LLMs To Summarize Personal Research", "Extract Data From Calls &amp; Video Transcripts/Interviews", "Langchain projects gallery", "Matplotlib", "Python Matplotlib", "Python Matplotlib", "Python NumPy", "Python NumPy Array:", "Array indexing", "Array math", "Arrays reorganizing", "Python NumPy Exercises", "Python Numpy Module", "Python Pandas", "Create Pandas DataFrame from Python Dictionary", "Create Pandas DataFrame from Python List", "Pandas DataFrame head, tail, at, iat", "Drop columns in pandas DataFrame", "Drop duplicates in pandas DataFrame", "Drop columns with NA in pandas DataFrame", "Rename columns in Pandas DataFrame", "Convert Pandas DataFrame to Python dictionary", "Set index in pandas DataFrame", "Reset index in pandas DataFrame", "Python Pandas", "Python Pandas", "Python Pandas Module", "PyTorch Fundamentals", "PyTorch Workflow Fundamentals", "PyTorch Neural Network Classification", "PyTorch Computer Vision", "PyTorch Custom Datasets", "PyTorch Going Modular", "PyTorch Transfer Learning", "PyTorch Experiment Tracking", "PyTorch Paper Replicating", "PyTorch Model Deployment", "Going Modular: Part 1 (cell mode)", "Going Modular: Part 2 (script mode)", "05. PyTorch Going Modular", "Going Modular Scripts", "Pytorch", "Loading Datasets in Seaborn", "Controlling Aesthetics of Seaborn Plots", "Matplotlib vs. Seaborn Plotting Code", "Seaborn Color Palettes", "LM Plot and Reg Plot", "Scatter Plot and Joint Plot", "Additional Regression Plots", "What is Distribution Plots?", "Seaborn: Categorical Data Plots", "Seaborn: Strip Plot", "Seaborn: Box Plot", "Seaborn: Violin Plot", "Bar Plot, Point Plot and Count plot", "Factor Plot", "Time Series &amp; LV Plot", "PairGrid", "FacetGrid", "What is heat map?", "What is cluster map?", "Python Seaborn", "Here\u2019s my sample title", "Notebooks with MyST Markdown", "Tools required to work with neural networks", "AI/ML Learning Path", "Welcome to my technical diary \ud83e\udd2f"], "titleterms": {"": [21, 39, 53, 55, 59, 60, 62, 87, 110, 113, 117, 139, 155, 169, 172, 175, 178, 179, 180, 181, 182, 193, 206], "0": [39, 118, 131, 155, 167, 174, 175], "01": 118, "02": 118, "03": 118, "04": 118, "05": 183, "06": 118, "07": 118, "08": 118, "09": 118, "1": [0, 27, 35, 37, 39, 45, 46, 47, 49, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 74, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 116, 118, 131, 132, 134, 140, 143, 147, 148, 155, 161, 164, 167, 169, 171, 174, 175, 179, 180, 181, 182, 193, 195, 198, 201], "10": [39, 59, 118, 148, 155, 169, 180], "100": 155, "100th": 155, "10x10": 155, "10x3": 155, "11": [39, 59, 118, 155, 180], "12": [59, 118, 155], "13": [59, 118, 155], "14": [59, 118, 155], "15": [59, 118, 155], "16": [59, 118, 155], "16x16": 155, "17": [118, 155], "18": [118, 155], "19": [118, 155], "1d": [152, 155], "2": [0, 35, 37, 39, 45, 46, 47, 49, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 70, 74, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 116, 117, 118, 127, 132, 134, 140, 143, 147, 148, 155, 169, 171, 174, 175, 179, 180, 181, 182, 193, 198], "20": [118, 155], "2014": 118, "2015": 118, "2016": [118, 155], "2017": [9, 118], "2018": 118, "21": 155, "22": [118, 155], "23": 155, "24": [118, 155], "25": [118, 155], "26": [118, 155], "27": [118, 155], "28": 155, "29": 155, "2d": [152, 155], "2x2x2": 155, "3": [0, 35, 37, 39, 45, 47, 49, 52, 53, 54, 56, 59, 60, 62, 63, 66, 68, 70, 74, 80, 84, 89, 90, 91, 92, 94, 95, 118, 127, 132, 140, 147, 148, 155, 169, 171, 174, 179, 180, 193, 198], "30": [118, 155], "31": [118, 155], "32": 155, "33": 155, "34": 155, "35": 155, "36": 155, "37": 155, "38": 155, "39": 155, "3x3": 155, "3x4": 155, "4": [0, 35, 39, 59, 63, 66, 68, 70, 84, 89, 92, 95, 118, 132, 140, 148, 155, 169, 171, 179, 180, 193], "40": 155, "41": 155, "42": 155, "43": 155, "44": 155, "45": 155, "46": 155, "47": 155, "48": 155, "49": 155, "4x4": 155, "5": [39, 59, 63, 70, 84, 92, 95, 118, 132, 148, 155, 169, 180, 193], "50": 155, "51": 155, "52": 155, "53": 155, "54": 155, "55": 155, "56": 155, "57": 155, "58": 155, "59": 155, "5x2": 155, "6": [39, 59, 63, 70, 92, 95, 118, 148, 155, 169, 180], "60": 155, "61": 155, "62": 155, "63": 155, "64": 155, "65": 155, "66": 155, "67": 155, "68": 155, "69": 155, "6x3": 155, "6x6": 155, "7": [39, 59, 70, 118, 148, 155, 169, 180], "70": 155, "71": 155, "72": 155, "73": 155, "74": 155, "75": 155, "76": 155, "77": 155, "78": 155, "79": 155, "8": [39, 59, 70, 118, 148, 155, 169, 180], "80": 155, "81": 155, "82": 155, "83": 155, "84": 155, "85": 155, "86": 155, "87": 155, "88": 155, "89": 155, "8x8": 155, "9": [39, 59, 70, 118, 148, 155, 169, 175], "90": 155, "91": 155, "92": 155, "93": 155, "94": 155, "95": 155, "96": 155, "97": 155, "98": 155, "99": 155, "9_": 39, "9x9": 155, "A": [39, 117, 130, 134, 137, 138, 155], "As": [117, 137, 138], "Be": [106, 152], "By": 39, "For": [57, 119, 127, 139], "If": [53, 55], "In": [24, 53, 80, 102], "Into": [11, 13, 16, 17, 18, 19], "No": 71, "Of": [103, 117, 132, 140], "One": [5, 39, 44, 171], "The": [3, 38, 43, 44, 52, 53, 54, 55, 68, 71, 80, 116, 143, 158, 161, 162, 163, 164, 165, 166, 167, 173, 175, 179], "These": 193, "To": [106, 135, 140, 144, 157], "With": [14, 15, 131, 133, 138, 143], "_": 39, "__doc__": 84, "__init__": 106, "__new__": 106, "about": 22, "accept": 94, "access": [47, 52, 53, 54, 55, 94, 102], "account": 140, "accumul": 155, "across": [76, 180], "action": 128, "activ": 173, "ad": [55, 139, 150, 164], "add": [6, 53, 55, 109, 155, 207], "addit": [31, 32, 192], "adjust": [173, 178], "advanc": [22, 41, 52, 133, 154, 209], "advantag": [54, 78, 80, 85], "aesthet": 187, "agent": [116, 117, 127, 128, 132], "aggreg": [168, 171], "agnost": [174, 175], "ai": [116, 140, 209], "algebra": [26, 31, 32], "algorithm": [1, 3, 7, 10, 97], "align": 94, "all": [5, 52, 53, 55, 80, 148, 155, 161, 162, 163, 164, 169, 171, 172, 179], "allow": 193, "alpha": 127, "alphabet": 39, "alphanumer": 39, "alreadi": 55, "also": [39, 151], "altern": 39, "amount": [132, 168], "an": [6, 34, 39, 53, 55, 56, 71, 102, 109, 128, 132, 139, 155, 172, 175, 179, 180, 207], "analyz": [11, 12, 13, 14, 15, 16, 17], "anatomi": [196, 197], "angl": 32, "ani": [39, 53, 55, 74, 155], "anomali": [1, 8], "anonym": 79, "anoth": 77, "answer": [117, 134], "anyth": 55, "api": [117, 127, 128], "app": 180, "appart": 52, "appear": 53, "append": 53, "appl": 171, "appli": 157, "applic": 24, "appropri": 60, "ar": [39, 53, 55, 56, 79, 80, 83, 85, 155, 158, 163, 178, 193], "arang": 154, "arbitrari": [77, 155], "architectur": 173, "area": [24, 155], "arg": 40, "argmax": 151, "argmin": 151, "argument": [53, 71, 74, 77, 94], "arithmat": 95, "arithmet": 95, "around": 155, "arrai": [150, 151, 152, 153, 154, 155], "artifici": 9, "asarrai": 154, "ascend": [53, 54, 55], "asctim": 65, "ask": [134, 140], "assign": [90, 95], "assist": 140, "attent": 179, "attribut": [68, 84, 102, 137, 138, 151, 155, 157], "attributeerror": 70, "audienc": 210, "augment": 175, "auto": 177, "automat": 178, "avail": 55, "averag": [155, 169], "avoid": 106, "awai": 155, "axi": [155, 161, 164, 193], "b": [39, 47, 48, 155], "back": [37, 134, 171], "background": 194, "backpropag": 7, "backslash": 39, "backward": 47, "balanc": 175, "bar": [147, 148, 198], "base": [155, 177, 178], "baselin": 174, "basic": [52, 77, 132, 147, 150, 151, 171], "batch": [4, 5, 131, 174], "bath": 148, "becom": [155, 175], "befor": 39, "begin": 39, "beginn": [2, 209], "below": 155, "best": [8, 132, 174, 178], "better": [56, 174], "between": [32, 35, 59, 63, 98, 155, 175, 181, 182], "big": 180, "binari": 155, "bincount": 155, "bit": [56, 155], "bitwis": 95, "blank": 87, "block": [25, 107, 111, 155, 179], "blue": 173, "bolt": 116, "bonu": 143, "book": [132, 134], "boolean": [74, 91, 95, 152, 154, 155], "bootstrap": 155, "border": 155, "bot": 129, "both": [94, 98, 155], "bottom": 160, "boundari": [14, 15], "box": [147, 195, 196], "boxplot": 198, "brace": 39, "bracket": 39, "brain": 116, "break": [47, 48, 49, 52, 87], "breath": 24, "bring": 180, "broadcast": [153, 154], "build": [34, 155, 172, 173, 174, 175, 178, 180, 189], "built": [37, 52, 53, 54, 55, 56, 70, 80, 102], "busi": [137, 138], "byte": 155, "c": [47, 48, 155], "calcul": [14, 15, 16, 17, 18, 19, 24, 148, 179], "calculu": 27, "call": [74, 116, 137, 139, 145], "can": [57, 106, 116, 155, 171, 173, 176, 177, 179], "canberra": 30, "capit": [28, 29], "car": 169, "care": [152, 155], "caret": 39, "cart": 39, "cartesian": 155, "case": [117, 143, 210], "cast": 93, "catch": [49, 71], "categor": [194, 195], "cauchi": 155, "cell": [6, 109, 176, 181, 182, 207], "center": 155, "chain": [37, 116], "chang": [52, 53, 54, 55, 68, 69, 90, 145, 155, 158, 159, 167, 168, 171, 177, 178], "changelog": 118, "chapter": 143, "charact": [39, 52, 91], "chart": [147, 148], "chat": [116, 131], "chatbot": 117, "chdir": 69, "chebyshev": 30, "check": [24, 150, 155, 172, 179, 180], "checkerboard": 155, "choic": 24, "chroma": [134, 143], "chunk": 134, "cij": 155, "circl": 173, "class": [5, 7, 22, 37, 38, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 59, 64, 65, 68, 70, 71, 72, 74, 80, 84, 90, 95, 101, 102, 103, 105, 155, 173, 175, 179, 180], "class_nam": 180, "classif": [5, 7, 173], "classifi": 178, "claus": 71, "clean": [157, 169], "clear": [53, 55], "clock": 66, "close": 68, "closest": 155, "closur": [36, 37], "cloud": 134, "cluster": [10, 204], "cnn": 174, "code": [24, 25, 60, 61, 87, 98, 107, 111, 117, 174, 175, 178, 179, 188], "collect": [91, 180], "color": [155, 189, 203], "column": [155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169], "combin": [57, 140, 150, 155, 157, 175, 176, 179, 181, 182], "comma": 90, "command": [87, 155], "comment": [84, 89], "common": [52, 148, 155, 171], "compani": [141, 169], "compar": [155, 161, 174, 175, 180], "comparis": [80, 98], "comparison": [95, 104, 150], "compil": [53, 98], "complier": 54, "compon": [87, 116], "compos": 155, "comprehens": [53, 55, 57], "compress": 133, "comput": [7, 155, 171, 174], "con": 176, "concaten": [52, 169], "concept": [2, 24, 101, 210], "condit": [42, 57, 157, 168, 169], "confid": 155, "configur": 155, "confus": 174, "consecut": 155, "consid": [39, 155], "constant": [80, 90], "construct": [155, 175], "constructor": [101, 102, 106, 157, 158, 159], "consum": 155, "contain": [39, 155], "content": [25, 107, 111, 120, 172], "context": 117, "contextu": 133, "contigu": 155, "continu": [47, 48, 49], "control": [22, 42, 47, 48, 49, 50, 187], "conv2d": [174, 179], "convent": 90, "convers": [51, 91, 93, 157], "convert": [54, 155, 165], "convolut": 174, "cookbook": [116, 117], "coordin": 155, "copi": [53, 55, 150, 152, 155], "core": 210, "correspond": 155, "cosin": 30, "cost": [3, 4, 5, 7], "count": [53, 169, 198], "coupl": 132, "cours": 210, "cover": [155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182], "cpu": 171, "cream": 148, "creat": [6, 35, 52, 53, 54, 55, 56, 57, 60, 66, 72, 80, 102, 109, 134, 143, 151, 155, 157, 158, 159, 167, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 189, 207], "creation": [157, 177], "credit": 140, "csv": [68, 157, 169], "ctime": 65, "cubehelix": 189, "current": [59, 62, 63, 69], "curriculum": 177, "curv": [175, 177, 179, 180], "custom": [34, 72, 141, 143, 145, 157, 159, 175, 177, 178, 179], "d": [39, 155], "dai": 59, "data": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 51, 58, 92, 97, 102, 117, 134, 137, 138, 143, 144, 145, 147, 148, 154, 157, 158, 159, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 193, 194, 203, 209], "data_setup": 176, "datafram": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167], "dataload": [174, 175, 176, 177, 178, 179, 180, 181, 182], "dataset": [9, 16, 17, 18, 19, 169, 174, 175, 176, 177, 178, 179, 180, 181, 182, 186, 193, 198, 201], "datatyp": [24, 56, 151, 171], "date": [22, 59, 60, 62, 64, 67, 155], "datetim": [59, 60, 61, 63, 64], "deal": 175, "decim": [39, 51, 80], "decis": [14, 15, 42], "declar": 90, "decor": [37, 38], "deep": [0, 24, 171], "default": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 77, 80, 90, 95, 101], "defin": [36, 72, 74, 85, 102, 106, 158, 162, 163, 164], "definit": [3, 4, 5, 7], "degre": 155, "del": 161, "delet": [52, 53, 54, 68, 102, 161], "demo": [1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 180], "demystifi": 106, "densiti": 1, "depend": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "deploi": 180, "deploy": 180, "descend": [53, 54, 55], "descent": [4, 5, 11, 12, 13, 14, 15, 16, 17], "describ": [140, 155, 168], "descript": [3, 140, 143], "desir": 168, "detail": 169, "detect": [1, 8], "determin": [31, 153], "devic": [174, 175], "diagon": 155, "diari": 210, "dict": [53, 54, 55, 157, 158, 165], "dict2": 55, "dictionari": [47, 55, 68, 71, 92, 158, 165], "differ": [0, 35, 43, 44, 56, 59, 62, 63, 87, 98, 155, 178, 180, 181, 182], "digit": [9, 39, 66], "dimens": 155, "dimension": 155, "dir": 80, "direct": [108, 112], "directori": [69, 180], "disadvantag": 78, "discuss": 193, "disk": 148, "displai": [94, 148, 157, 175], "dissimilar": 30, "distanc": [30, 155], "distort": 3, "distplot": 193, "distribut": [1, 8, 155, 193], "dive": 24, "do": [36, 127, 135, 182], "doc": 134, "docstr": [74, 84, 89], "document": [116, 117, 130, 133, 134, 154, 155], "doe": [55, 174], "dollar": 39, "dot": [32, 155], "down": 87, "download": [178, 180], "draw": [14, 15, 155, 195, 201], "drop": [157, 161, 162, 163], "drop_dupl": 162, "dropna": 163, "dtype": 155, "duplic": [162, 163, 166], "durat": 59, "e": 155, "each": [148, 155, 169, 201], "easi": 35, "edit": 139, "editor": 24, "effici": 35, "effnetb2": 180, "einsum": 155, "either": [53, 54, 55], "eleg": 53, "element": [53, 54, 55, 56, 150, 155], "elif": 45, "els": [44, 45, 47, 48, 49, 71], "email": 141, "embed": [116, 117, 134, 179], "empti": 56, "encapsul": 101, "encod": 179, "end": [39, 53, 87], "engin": 210, "enjoi": 210, "ensembl": 133, "entir": 132, "enumer": [71, 155], "environ": 24, "equal": [55, 155], "equat": [4, 179], "equidist": 155, "equival": [39, 155], "error": [53, 70, 161, 164, 171], "escap": [39, 52], "essenti": [33, 172, 210], "estim": 1, "etc": [53, 171], "euclidian": 30, "evalu": [1, 117, 173, 174, 175, 176, 177, 181, 182], "even": 27, "everi": 155, "everytim": 106, "exampl": [6, 7, 27, 28, 29, 39, 46, 47, 48, 49, 59, 60, 61, 62, 63, 64, 66, 72, 76, 80, 87, 90, 95, 103, 109, 116, 117, 137, 138, 139, 140, 147, 165, 179, 180, 207], "except": [49, 70, 71, 72, 160], "exclud": 155, "exercis": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 80, 90, 95, 101, 148, 155, 169], "exist": 155, "expand": 143, "expens": 169, "experi": [174, 178, 180], "expert": [132, 137, 138, 209], "explicit": 93, "explicitli": 106, "explor": 179, "export": [157, 168], "express": [35, 126, 155, 164], "extend": 53, "extens": 68, "extra": [140, 172, 173, 174, 175, 176, 177, 178, 179, 180], "extract": [117, 137, 138, 143, 145, 155], "extractor": [178, 179, 180], "f": [39, 155], "face": [148, 180], "facetgrid": 202, "facewash": 148, "factor": 199, "fals": [53, 55], "faq": [48, 49], "fashion": 9, "faster": [155, 171, 180], "featur": [4, 178, 179, 180], "feedback": [137, 138], "feedforward": 7, "field": 138, "fifa": 147, "figur": 179, "file": [20, 22, 68, 69, 73, 108, 112, 154, 155, 169, 179, 180], "fill": 155, "filter": [37, 79, 157, 168], "final": 71, "financi": 139, "find": [8, 155, 169, 171, 177, 179], "findal": 39, "fing": 8, "first": [21, 53, 110, 113, 143, 155, 160, 161, 162, 169, 206], "fit": [8, 143, 173], "five": 169, "fix": 155, "flatten": [154, 179], "float": [51, 94, 155], "flow": [22, 42, 50], "flower": 9, "folder": [180, 182], "follow": [148, 155, 169], "food101": 180, "foodvis": 180, "forecast": 139, "form": [27, 175], "format": [52, 59, 60, 61, 62, 84, 94, 168, 203], "forward": [7, 175], "found": 143, "four": [155, 179], "fourier": 27, "fraction": 51, "frame": 169, "freez": [177, 178], "frequent": 155, "from": [53, 54, 55, 56, 59, 60, 80, 83, 94, 137, 138, 141, 144, 145, 154, 155, 157, 158, 159, 160, 161, 162, 163, 167, 169, 171, 173, 177, 179], "from_dict": 158, "fromkei": 55, "frozenset": 56, "fuction": 116, "function": [3, 4, 5, 7, 22, 27, 35, 36, 37, 47, 52, 53, 54, 55, 56, 57, 74, 76, 77, 78, 79, 80, 82, 84, 85, 86, 94, 103, 104, 116, 137, 139, 151, 153, 155, 158, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182], "fundament": [171, 172], "further": 174, "fusion": 140, "g": 155, "galleri": [122, 146], "game": 155, "gaussian": [1, 8, 155], "gener": [27, 35, 57, 116, 141, 154, 155, 189], "get": [24, 37, 53, 55, 59, 62, 63, 69, 94, 115, 134, 140, 143, 148, 155, 157, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "getcwd": 69, "getter": 38, "give": 55, "given": [53, 54, 55, 155, 169], "glanc": 2, "global": [75, 76], "gmtime": 65, "go": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184], "good": 210, "got": 182, "gpt": 139, "gpu": [171, 174], "gradient": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17], "gradio": 180, "graph": 147, "group": [39, 195], "groupbi": [157, 168], "h": 155, "ha": [155, 182], "ham": 30, "hand": [43, 44, 179], "handl": [59, 71], "handwritten": 9, "happen": 106, "happi": 9, "hard": 148, "have": 36, "head": [160, 178, 179], "header": 165, "heat": 203, "heatmap": 203, "hello": [71, 87, 137, 138], "help": [84, 89, 140, 176, 177], "helper": [175, 178], "here": [21, 52, 106, 110, 113, 206], "hidden": [17, 18, 19], "hide": 102, "hierarch": [103, 159], "higesht": 169, "high": 98, "higher": [36, 37], "histogram": [147, 148], "histori": 116, "hoc": 139, "hold": 24, "hour": 59, "how": [22, 52, 53, 56, 60, 61, 62, 74, 80, 87, 150, 155, 160, 175, 180], "hstack": 154, "html": 141, "hug": 180, "huggingfac": [114, 180], "hybrid": 103, "hypothesi": [4, 5], "i": [0, 20, 31, 32, 39, 47, 48, 52, 53, 54, 55, 56, 68, 74, 76, 78, 82, 96, 98, 106, 108, 112, 116, 117, 154, 155, 157, 163, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 193, 203, 204, 210], "iat": 160, "idea": [137, 138, 175], "ideal": 175, "ident": [31, 95, 155], "identifi": 88, "ignor": [52, 155], "illustr": [17, 18, 19], "iloc": 161, "imag": [155, 175, 177, 178, 179, 180], "imagefold": 175, "immut": 155, "implement": [7, 35, 155, 193], "implicit": 93, "import": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 80, 83, 94, 120, 150, 155, 157, 171, 175], "improv": 173, "includ": 178, "indent": 89, "index": [47, 53, 54, 116, 152, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171], "indexerror": 70, "indic": 155, "infer": 172, "inference_mod": 172, "infinit": [34, 35], "info": 157, "inform": [24, 171], "inherit": [101, 103], "init": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "initi": 7, "inlin": 89, "inner": 155, "inplac": 155, "input": [94, 131, 173, 174, 179, 180], "insert": [53, 157], "insid": [24, 47, 48, 59, 155], "inspect": [52, 157, 180], "instal": [24, 119, 120, 150], "instanc": [57, 101, 102, 178], "instead": 51, "instruct": [116, 140], "int": 155, "integ": [94, 152, 155], "interact": [117, 139, 189], "interest": [137, 138], "interfac": [116, 180], "interleav": 155, "intermedi": [140, 209], "intern": 106, "interpret": [98, 155], "intersect": 56, "interv": 155, "interview": 145, "introduct": [0, 22, 24, 40, 100, 114, 120, 171], "invers": 31, "investor": [137, 138], "iri": [9, 201], "issubclass": 103, "item": [53, 54, 55, 155], "iter": [34, 42, 47, 48, 52, 53, 54, 55, 56, 155, 157], "itm": 55, "its": 94, "j": 155, "januari": 155, "java": 98, "job": [137, 138], "join": 157, "joint": 191, "jointplot": 193, "journei": 24, "json": 68, "jupyt": [1, 3, 4, 5, 7, 24], "just": 155, "justif": 94, "k": [3, 10, 134], "kdeplot": 193, "keep": [162, 166], "kei": [55, 57, 74, 93, 98, 101, 158, 165], "keyerror": 70, "keyword": [76, 77, 88, 103], "kind": 178, "kor": 138, "kwarg": 40, "label": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 80, 90, 95, 101, 160, 173], "lambda": [57, 79, 164], "langchain": [116, 117, 120, 121, 122, 126, 133, 139, 141, 146], "langgraph": 123, "langserv": 124, "langsmith": 125, "languag": [98, 116, 126, 128, 143], "larg": [116, 155, 168], "largest": 155, "last": [148, 155, 160, 161, 162, 169], "launch": 115, "layer": [17, 18, 19, 177, 178, 179], "layernorm": 179, "lead": 164, "learn": [0, 22, 23, 37, 171, 172, 177, 178, 179, 180, 209, 210], "least": 163, "len": [53, 54, 55], "length": [55, 77, 155, 158], "let": [87, 90, 193], "letter": 200, "level": [37, 39, 45, 47, 53, 54, 56, 64, 68, 71, 74, 80, 90, 98, 101, 132, 140, 164, 167, 209], "librari": [147, 151, 174], "life": [155, 180], "like": [101, 140, 155, 171, 175], "line": [43, 44, 47, 84, 87, 89, 90, 94, 147, 148, 155, 173], "linear": [4, 9, 11, 12, 13, 14, 15, 26, 31, 32, 172, 173, 174], "linspac": 154, "list": [24, 44, 45, 47, 48, 52, 53, 54, 55, 57, 60, 61, 69, 71, 74, 80, 92, 127, 138, 155, 158, 159, 164, 165, 166, 180], "listdir": 69, "liter": 91, "llm": [116, 130, 140, 143, 144], "lm": 190, "lmplot": 190, "ln": 179, "load": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 130, 133, 134, 141, 147, 151, 154, 168, 172, 174, 175, 178, 180, 186], "loader": 116, "loc": 161, "local": [60, 75, 134, 180], "localtim": 65, "logic": [45, 70, 95], "logist": [5, 7, 10, 14, 15, 16, 17], "logit": 173, "logspac": 154, "longer": 117, "look": [101, 175], "loop": [34, 35, 47, 48, 49, 57, 140, 141, 172, 173, 174, 175], "loss": [172, 173, 174, 175, 177, 179, 180], "lv": 200, "machin": [0, 23, 98, 178, 179, 180, 209], "made": 179, "magic": 141, "main": [117, 175, 177, 178, 179, 180], "make": [42, 69, 127, 155, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "manag": [24, 69], "manhattan": 30, "mani": [140, 151], "manipul": [150, 171], "manual": [177, 178], "map": [37, 79, 130, 132, 180, 203, 204], "mark": 39, "markdown": [6, 20, 25, 107, 108, 109, 111, 112, 207], "mask": 154, "match": [39, 53, 140], "math": [80, 82, 153], "mathemat": [23, 33, 51, 82, 150, 153], "matplotlib": [22, 147, 148, 149, 188], "matric": [31, 152, 155, 171], "matrix": [31, 153, 155, 171, 174], "max": [53, 54, 151, 171], "maximum": [53, 54, 155], "maxpool2d": 174, "mean": [3, 10, 155, 171], "measur": 30, "member": 103, "membership": [52, 53, 54, 55, 56, 95], "memori": [35, 116, 155], "merg": 169, "messag": [116, 131], "metacharact": 39, "metadata": [6, 109, 157, 207], "method": [39, 52, 53, 54, 55, 56, 68, 101, 103, 116, 140, 151, 155], "metric": [173, 174], "microchip": 9, "microsecond": 59, "mileag": 169, "mimic": 140, "min": [53, 54, 151, 171], "mini": 180, "minimum": [54, 155], "minkowski": 30, "minut": 59, "miscellan": 154, "miss": [163, 173, 179], "mkdir": 69, "mktime": 65, "ml": [0, 209], "mlp": [18, 19, 179], "mnist": 9, "mode": [137, 138, 176, 181, 182], "model": [5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 116, 137, 139, 143, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "model_1": 173, "model_2": 174, "model_build": 176, "modif": 157, "modifi": [56, 101, 102], "modul": [22, 63, 65, 67, 76, 80, 81, 82, 83, 84, 121, 156, 170, 171, 179], "modular": [176, 181, 182, 183, 184], "modulenotfounderror": 70, "month": [59, 148, 155], "more": [39, 52, 150, 173], "most": [148, 155, 169, 171], "move": [171, 180], "msa": 179, "mul": 155, "mulitpli": 155, "multi": [5, 7, 84, 89, 160, 161, 164, 166, 167, 173, 179], "multidimension": [28, 29], "multilay": [18, 19, 179], "multilevel": 103, "multilin": [94, 148], "multinomi": 155, "multipl": [31, 32, 71, 74, 80, 90, 94, 103, 132, 137, 138, 140, 153, 159, 161, 164, 166, 171], "multipli": 155, "multiqueri": 133, "multithread": 66, "multivari": [11, 16, 17], "mutli": 173, "my": [21, 110, 113, 176, 179, 206, 210], "myst": [6, 20, 25, 107, 108, 109, 111, 112, 207], "n": [39, 155, 160, 161], "na": 163, "name": [80, 90, 94, 96, 155, 159, 167, 169, 175, 180], "nameerror": 70, "namespac": 96, "natur": 128, "nearest": 155, "necessari": [147, 155], "need": [101, 171, 177], "neg": [53, 54, 59], "negat": 155, "nest": [36, 46, 47, 48, 49, 57, 76, 158], "network": [7, 18, 19, 173, 174, 208], "neural": [7, 18, 19, 173, 174, 208], "neuron": 7, "new": [53, 55, 69, 155, 167, 210], "nn": [174, 179], "non": [9, 12, 15, 39, 155, 173, 174], "nonloc": [36, 75], "normal": [1, 4, 35, 155], "notat": [28, 29], "note": 176, "notebook": [6, 24, 25, 107, 109, 111, 176, 181, 182, 207], "novic": 132, "np": 155, "nth": 155, "null": 155, "number": [48, 51, 53, 54, 55, 57, 91, 92, 94, 151, 154, 155, 163, 166, 167], "numer": [91, 155], "numpi": [22, 150, 151, 154, 155, 156, 171], "nut": 116, "o": [68, 80], "object": [22, 39, 59, 61, 63, 68, 98, 101, 102, 105, 157], "observ": 195, "old": [52, 166], "onc": 155, "one": [39, 43, 47, 90, 94, 155, 163, 165, 174, 175], "ones": 171, "onli": [94, 155, 158], "oop": 101, "open": [68, 137, 138], "openai": [116, 127, 139], "oper": [9, 31, 32, 45, 52, 53, 54, 55, 56, 80, 95, 104, 150, 153, 171], "opposit": 39, "optim": [172, 173, 174, 179], "option": [134, 143, 157, 175], "order": [36, 37, 53, 54, 55, 103, 155], "orient": 101, "orthogon": 32, "other": [53, 54, 55, 56, 122, 167, 175], "otherwis": [53, 54], "our": [133, 168, 173, 174, 175, 177, 178, 179, 180], "outer": [49, 155], "outlier": 8, "outlin": 180, "output": [25, 94, 101, 107, 111, 116, 131, 143, 155, 173, 174, 177, 179, 180], "over": [54, 155], "overfit": [4, 5, 175], "overload": 104, "overrid": [101, 103], "overview": [179, 180], "p": 155, "p0": 155, "p1": 155, "pack": 71, "packag": [24, 83, 84, 120, 155], "pad": 155, "page": [132, 141], "pair": 55, "pairgrid": 201, "pairplot": 193, "pairwis": 201, "palett": 189, "panda": [22, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "paper": 179, "paragraph": 132, "parallel": 32, "paramet": [1, 4, 9, 36, 37, 74, 77, 102, 157, 165, 178], "parent": [101, 103, 133], "pars": 116, "parser": 116, "part": [117, 155, 176, 181, 182, 198, 201], "partial": 119, "pass": [47, 48, 49, 53, 55, 74, 140, 143, 175], "patch": 179, "path": [80, 155, 209], "pattern": [39, 47, 48, 155], "per": [143, 169], "percentil": 155, "perceptron": [17, 18, 19, 179], "perform": [174, 180], "period": 39, "person": [141, 144], "persona": [137, 138], "perspect": 173, "pi": 28, "pie": [147, 148], "piec": 173, "pinecon": [134, 143], "pipelin": 35, "place": [155, 161, 162, 163, 164, 166, 167], "placehold": 150, "plot": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 147, 148, 175, 177, 179, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200], "plu": 39, "point": [57, 63, 93, 94, 101, 155, 198], "polar": 155, "polymorph": 101, "polynomi": 4, "pop": [53, 161], "posit": [68, 77, 94, 155, 160, 161, 164, 171, 179], "power": 155, "practic": 94, "precis": [8, 14, 15, 16, 17, 18, 19], "predict": [11, 12, 13, 16, 17, 18, 19, 172, 173, 174, 175, 177, 178, 179, 180], "prefix": [39, 164], "prepar": [15, 172, 173, 174, 175, 179], "prepara": [10, 14], "prerequisit": 37, "pretrain": [177, 178, 179], "price": 169, "print": [16, 17, 47, 48, 59, 87, 94, 155, 157, 169], "printabl": 55, "privat": 103, "pro": 176, "probabl": 173, "problem": [4, 5, 94, 173], "process": [52, 119, 140], "produc": [55, 155], "product": [28, 32, 148, 155], "profit": 148, "program": [22, 66, 71, 87, 98, 101, 155], "progress": [8, 11, 12, 13, 14, 15, 16, 17], "project": [122, 146], "prompt": [116, 131, 132, 141, 143, 145], "promptless": 145, "propag": 7, "properti": [28, 29, 31, 38, 102, 148], "provid": 151, "pull": 144, "put": [171, 172, 173, 175, 179], "py": [176, 180], "pydant": 137, "python": [22, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 148, 149, 150, 151, 155, 156, 157, 158, 159, 165, 166, 168, 169, 170, 176, 180, 182, 205], "python3": 53, "pytorch": [171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185], "q": [117, 130], "quantifi": 39, "queri": [117, 133, 134], "question": [39, 117, 134, 148], "quickli": [6, 109, 207], "quiz": 152, "r": [39, 155], "rais": [71, 164], "rand": 151, "randint": 151, "randn": 151, "random": [7, 80, 81, 151, 154, 155, 171, 174, 175], "randomli": 155, "rang": [47, 148, 155, 161, 166, 167, 171], "rank": [130, 155], "ratio": 119, "raw": [52, 173], "re": [39, 130, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182], "read": [68, 148, 155, 168], "readi": [134, 173], "real": [137, 138, 147, 155, 210], "recal": 8, "recommend": 155, "record": 155, "recreat": 173, "recurs": 78, "red": 173, "reduc": [79, 130, 132], "refer": [1, 3, 4, 5, 7], "refin": 130, "reg": 190, "regardless": 155, "regex": 39, "regplot": 190, "regress": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 192], "regular": [4, 5, 155], "reinforc": 0, "relat": [52, 95], "relationship": 201, "reload": 80, "rememb": [40, 57, 88, 93, 101], "remov": [53, 55, 56, 69, 150, 164], "renam": [69, 80, 157, 164], "reorgan": 154, "repeat": [141, 155], "replac": 155, "repli": 129, "replic": [52, 173, 175, 179], "report": 9, "repres": [35, 59, 63, 155], "represent": [55, 132, 155], "requir": [119, 158, 180, 208], "resampl": 155, "research": [144, 179], "reset": [162, 163, 167], "reset_index": 167, "reshap": [154, 171], "residplot": 192, "resolut": 103, "resourc": [22, 149, 156, 170, 173, 174, 175, 176, 178, 180, 185, 205], "respons": 117, "result": [10, 16, 17, 137, 155, 174, 175, 178, 180], "retriev": [116, 133], "return": [36, 53, 54, 55, 74], "revers": [47, 48, 53, 155], "rins": 141, "rmdir": 69, "role": [108, 112], "round": 155, "row": [155, 158, 159, 160, 163, 165, 169], "rsourc": 179, "rugplot": 193, "rule": [76, 88, 90], "run": [87, 143, 171, 178, 180, 181], "salari": 138, "sale": 148, "same": [53, 54, 155, 179], "sampl": [21, 108, 110, 112, 113, 155, 206], "save": [68, 148, 168, 172, 174, 176, 179, 180, 181, 182], "scalar": [31, 32, 155, 171], "scale": 4, "scatter": [148, 191], "scatterplot": 201, "schema": [116, 117], "scienc": 209, "scope": 96, "script": [84, 155, 176, 180, 181, 182, 184], "seaborn": [186, 187, 188, 189, 190, 194, 195, 196, 197, 205], "search": [39, 80, 134], "second": [59, 155], "section": [21, 110, 113, 206], "see": [90, 148, 173], "seed": [171, 178], "segment": 155, "select": [8, 155, 157, 160, 171], "selector": 116, "self": [102, 106, 133, 179], "semant": 134, "semicolon": 90, "sentenc": 132, "separ": 97, "seq": [54, 55], "sequenc": [39, 52, 97], "sequenti": [116, 189], "seri": [27, 157, 165, 166, 178, 200], "serp": 127, "server": 9, "servic": [137, 138], "set": [5, 7, 11, 16, 17, 18, 19, 47, 55, 56, 92, 119, 143, 155, 160, 166, 172, 175, 177, 178, 179], "set_axi": 164, "set_index": 166, "setdefault": 55, "setter": 38, "setup": [173, 174, 177, 178, 179, 180], "shallow": [53, 55], "shape": [155, 171, 173, 174, 175, 179], "share": [76, 155], "shift": 155, "short": [43, 44, 117, 143], "shortcut": [43, 44], "should": [53, 54, 101, 155, 174, 175, 177, 178], "show": 148, "sigma": 29, "sign": [94, 155], "signific": 171, "silicon": 171, "similar": [55, 98, 134], "simpl": [116, 117, 119, 131, 140], "singl": [74, 84, 89, 103, 158, 161, 164, 175, 179], "sixth": 155, "size": [155, 179, 180], "sleep": [65, 66], "slice": [52, 53, 54, 150], "slide": 155, "small": 155, "smaller": 134, "soap": 148, "solut": [4, 5], "some": 193, "sort": [53, 54, 55, 119, 150, 155, 157, 168, 169], "sourc": 136, "space": [164, 180], "span": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 80, 90, 95, 101], "special": [39, 91, 95, 104], "specif": [24, 53, 54, 55, 71, 160, 179], "specifi": [39, 53, 94, 140], "speed": [174, 180], "split": [11, 13, 16, 17, 18, 19, 39, 172, 173, 179], "splitter": 116, "spread": 71, "squar": 39, "squeez": 171, "stack": [148, 171], "stai": 106, "star": 39, "start": [24, 39, 167], "stat": 180, "state_dict": 172, "statement": [42, 43, 44, 45, 46, 47, 48, 49, 57, 71, 74, 80, 89], "statist": [80, 150, 154, 157, 168], "step": [98, 143, 174], "still": 131, "store": [180, 182], "str": 55, "straight": 173, "stream": [35, 131], "strftime": [59, 60, 65], "string": [24, 39, 47, 48, 52, 53, 55, 57, 59, 60, 61, 80, 84, 91, 92, 94, 116], "strip": 195, "strptime": [59, 61, 65], "struct_tim": 65, "structur": [97, 116, 137, 138, 143, 155, 180, 210], "stuff": 130, "style": [52, 148], "sub": 39, "subclass": 155, "subn": 39, "subpart": 155, "subplot": 148, "subsequ": 155, "subset": [13, 150, 155, 180], "subtract": [31, 32, 155], "suffix": 164, "suit": 177, "sum": [155, 171], "summar": [116, 117, 130, 132, 144], "summari": [39, 52, 53, 54, 55, 56, 117, 152, 157, 177, 179], "summarywrit": 178, "summat": 29, "super": 103, "supervis": 0, "support": [52, 139], "suppress": 161, "swap": 155, "swarm": [194, 195], "sy": 80, "symmetr": 56, "syntax": [43, 44, 45, 46, 47, 48, 57, 70], "system": 0, "t": 39, "tabl": [120, 179], "tabular": 117, "tail": 160, "takeawai": [175, 177, 178, 179, 180], "target": 210, "technic": 210, "techniqu": 140, "tell": 155, "templat": [116, 131, 132, 141], "tensor": [171, 173], "tensorboard": 178, "terminologi": 179, "test": [9, 11, 13, 16, 17, 18, 19, 53, 54, 55, 56, 119, 157, 172, 173, 174, 175, 177, 180], "test_step": [175, 176, 181, 182], "text": [94, 116, 117, 132, 133, 137, 138, 143], "than": [56, 155], "thefuzz": 119, "thei": 155, "them": [116, 155, 176, 180, 181, 182], "thi": [53, 55, 101, 140, 148, 171, 181, 182], "thing": [40, 88, 127, 173, 176], "those": 134, "threshold": 8, "through": [34, 52, 53, 54, 55, 56, 140, 141, 143, 174, 175], "throw": [53, 54], "tile": 155, "time": [22, 39, 53, 59, 60, 62, 63, 64, 65, 66, 67, 152, 155, 174, 180, 200], "timedelata": 63, "timedelta": 59, "timestamp": [59, 60, 64, 143], "timezon": [59, 63], "tinyvgg": [175, 181, 182], "tip": [198, 201], "titan": 198, "titl": [21, 110, 113, 143, 206], "to_dict": 165, "todai": [59, 62, 155], "togeth": [172, 173, 175, 179], "token": [119, 179], "tomorrow": 155, "tone": 140, "tool": [115, 116, 127, 208], "toolbox": 210, "toolkit": 116, "toothpast": 148, "top": [134, 160, 195], "topic": [22, 41, 89, 122, 143, 209], "torch": [172, 179], "torchinfo": [175, 177], "torchvis": [175, 177, 179], "total": [55, 148, 155, 169], "toward": 176, "toyota": 169, "track": 178, "tradeoff": [174, 180], "trail": 164, "train": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182], "train_step": [175, 176, 181, 182], "transcript": 145, "transfer": [42, 177], "transform": [175, 177, 178, 179, 180], "transpos": 31, "triangl": 155, "tricki": 56, "triplet": 155, "true": [53, 55, 155], "try": [71, 175], "tupl": [47, 53, 54, 55, 71, 92], "turn": [143, 173, 175, 179, 180], "tutori": [24, 139], "tweet": 140, "twitter": [129, 140, 144], "two": [52, 59, 63, 74, 155, 166, 169, 176], "txt": [68, 180], "type": [0, 22, 51, 53, 54, 55, 58, 68, 74, 91, 92, 93, 94, 102, 103, 151, 155, 158, 159, 180], "typeerror": [54, 70], "typic": 0, "u": [90, 193], "ubyt": 155, "under": 155, "underfit": 175, "underscor": 39, "understand": 117, "unequ": 155, "unicod": 91, "union": 56, "uniqu": 155, "unit": [7, 32], "univari": 13, "univers": 153, "unknown": 132, "unpack": [71, 97], "unsqueez": 171, "unsupervis": 0, "untidi": 203, "up": [80, 133, 134, 141, 143, 175, 177, 178, 179], "upcom": 24, "updat": [55, 169, 178], "upload": 180, "us": [1, 8, 24, 35, 36, 38, 39, 47, 48, 51, 53, 54, 59, 60, 63, 71, 76, 79, 80, 84, 90, 94, 101, 106, 116, 117, 120, 128, 137, 138, 143, 144, 148, 150, 155, 158, 159, 160, 161, 164, 165, 166, 169, 171, 172, 174, 175, 177, 178, 179, 180, 210], "usag": 119, "user": [72, 85, 94, 137, 138, 140, 158], "util": 176, "v": [5, 39, 57, 84, 98, 158, 161, 176, 180, 188], "valid": 90, "valu": [36, 53, 54, 55, 74, 90, 94, 101, 155, 158, 160, 163, 165, 200], "valueerror": [61, 70], "vanilla": [117, 139], "variabl": [4, 36, 55, 75, 76, 77, 90, 96, 97, 101, 158, 195], "variou": 94, "vector": [7, 32, 132, 155, 171], "vectorstor": 116, "versa": 64, "version": [150, 155], "vertic": [155, 193], "vice": 64, "video": 145, "view": [157, 178], "violin": [195, 197], "violinplot": 198, "virtual": 24, "vision": 174, "visual": [8, 174, 175, 179, 180, 193], "vit": [179, 180], "vstack": 154, "w": [39, 155], "wai": [39, 53, 178, 180], "want": [57, 176], "warn": 155, "we": [24, 36, 54, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182], "websit": 144, "welcom": 210, "what": [0, 20, 31, 32, 47, 48, 52, 53, 54, 55, 56, 59, 74, 76, 78, 79, 80, 82, 83, 85, 96, 98, 106, 108, 112, 116, 117, 154, 155, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 193, 203, 204], "when": [36, 48, 51, 53, 55, 152, 155], "where": [39, 158, 163, 174, 176, 177, 179, 180], "which": [53, 155, 177], "while": [47, 48, 49, 94, 157, 164], "whisker": 147, "whitespac": 39, "who": 171, "whose": 155, "why": [0, 22, 47, 48, 54, 103, 106, 116, 117, 150, 171, 176, 177, 178, 179, 180], "wich": 155, "wide": 203, "widget": 189, "width": 94, "wild": [176, 182], "window": 155, "without": [38, 74, 155, 165, 167, 175], "wolfram": 127, "word": 39, "work": [34, 52, 60, 61, 116, 131, 138, 168, 176, 208], "workflow": [0, 172, 176, 179], "world": [9, 71, 87, 137, 138, 147, 210], "would": [55, 140, 176], "wrap": 80, "write": [68, 71, 87, 88, 141, 155], "writer": 178, "x": [9, 155], "xi": 155, "xlsx": 68, "xml": 68, "y": [9, 155], "yaml": [6, 109, 207], "year": [59, 148], "yesterdai": 155, "yj": 155, "you": [57, 101, 127, 140, 143, 171, 176, 177, 178, 179], "your": [24, 116, 130, 134, 140, 141, 143, 148], "youtub": 144, "z": [39, 155], "z0": 39, "za": 39, "zapier": 128, "zero": [39, 155, 171], "zip": 71}})