Search.setIndex({"alltitles": {"0. Computer vision libraries in PyTorch": [[149, "computer-vision-libraries-in-pytorch"]], "05. PyTorch Going Modular": [[158, "pytorch-going-modular"]], "1 distplot()": [[168, "distplot"]], "1. Arithmatic Operators": [[95, "arithmatic-operators"]], "1. Bar Plot": [[173, "bar-plot"]], "1. Basic Operators for concatenation of two or more strings": [[52, "basic-operators-for-concatenation-of-two-or-more-strings"]], "1. Changing a Tuple": [[54, "changing-a-tuple"]], "1. Dictionary Membership Test": [[55, "dictionary-membership-test"]], "1. Docstrings for Python Modules": [[84, "docstrings-for-python-modules"]], "1. Easy to Implement": [[35, "easy-to-implement"]], "1. Getting a GPU": [[146, "getting-a-gpu"]], "1. Identity operators": [[95, "identity-operators"]], "1. Implicit Type Conversion": [[93, "implicit-type-conversion"]], "1. Import the numpy package under the name np and print the numpy version and the configuration (\u2605\u2606\u2606)": [[130, "import-the-numpy-package-under-the-name-np-and-print-the-numpy-version-and-the-configuration"]], "1. Indexing": [[54, "indexing"]], "1. List Membership Test": [[53, "list-membership-test"]], "1. Numeric Literals": [[91, "numeric-literals"]], "1. Opening Files in Python": [[68, "opening-files-in-python"]], "1. Python Keywords": [[88, "python-keywords"]], "1. Python Numbers": [[92, "python-numbers"]], "1. Python Output Using print() function": [[94, "python-output-using-print-function"]], "1. Python Statement": [[89, "python-statement"]], "1. Python Syntax Errors": [[70, "python-syntax-errors"]], "1. Python Variables": [[90, "python-variables"]], "1. Python break statement": [[49, "python-break-statement"]], "1. Set Membership Test": [[56, "set-membership-test"]], "1. Single lined comment:": [[89, "single-lined-comment"]], "1. Strip Plot": [[170, "strip-plot"]], "1. Supervised Learning \ud83c\udf93": [[0, "supervised-learning"]], "1. Tuple Membership Test": [[54, "tuple-membership-test"]], "1. [] - Square brackets": [[39, "square-brackets"]], "1. break Statement in Nested Loop": [[49, "break-statement-in-nested-loop"]], "1. continue Statement in Nested Loop": [[49, "continue-statement-in-nested-loop"]], "1. match.group()": [[39, "match-group"]], "1. re.findall()": [[39, "re-findall"]], "10. () - Group": [[39, "group"]], "10. Creating FoodVision Big": [[155, "creating-foodvision-big"]], "10. Find indices of non-zero elements from [3,7,0,0,9,0] (\u2605\u2606\u2606)": [[130, "find-indices-of-non-zero-elements-from-3-7-0-0-9-0"]], "10.2 Getting data for FoodVision Big": [[155, "getting-data-for-foodvision-big"]], "10.3 Creating a subset of the Food101 dataset for faster experimenting": [[155, "creating-a-subset-of-the-food101-dataset-for-faster-experimenting"]], "10.4 Turning our Food101 datasets into DataLoaders": [[155, "turning-our-food101-datasets-into-dataloaders"]], "10.5 Training FoodVision Big model": [[155, "training-foodvision-big-model"]], "10.6 Inspecting loss curves of FoodVision Big model": [[155, "inspecting-loss-curves-of-foodvision-big-model"]], "10.7 Saving and loading FoodVision Big": [[155, "saving-and-loading-foodvision-big"]], "10.8 Checking FoodVision Big model size": [[155, "checking-foodvision-big-model-size"]], "100. Compute bootstrapped 95% confidence intervals for the mean of a 1D array X (i.e., resample the elements of an array with replacement N times, compute the mean of each sample, and then compute percentiles over the means). (\u2605\u2605\u2605)": [[130, "compute-bootstrapped-95-confidence-intervals-for-the-mean-of-a-1d-array-x-i-e-resample-the-elements-of-an-array-with-replacement-n-times-compute-the-mean-of-each-sample-and-then-compute-percentiles-over-the-means"]], "11. Create a 4x4 identity matrix (\u2605\u2606\u2606)": [[130, "create-a-4x4-identity-matrix"]], "11. Turning our FoodVision Big model into a deployable app": [[155, "turning-our-foodvision-big-model-into-a-deployable-app"]], "11. \\ - Backslash": [[39, "backslash"]], "11.1 Downloading an example image and moving it to the examples directory": [[155, "downloading-an-example-image-and-moving-it-to-the-examples-directory"]], "11.2 Saving Food101 class names to file (class_names.txt)": [[155, "saving-food101-class-names-to-file-class-names-txt"]], "11.3 Turning our FoodVision Big model into a Python script (model.py)": [[155, "turning-our-foodvision-big-model-into-a-python-script-model-py"]], "11.4 Turning our FoodVision Big Gradio app into a Python script (app.py)": [[155, "turning-our-foodvision-big-gradio-app-into-a-python-script-app-py"]], "11.5 Creating a requirements file for FoodVision Big (requirements.txt)": [[155, "creating-a-requirements-file-for-foodvision-big-requirements-txt"]], "11.6 Downloading our FoodVision Big app files": [[155, "downloading-our-foodvision-big-app-files"]], "11.7 Deploying our FoodVision Big app to HuggingFace Spaces": [[155, "deploying-our-foodvision-big-app-to-huggingface-spaces"]], "12. Create a 2x2x2 array with random values (\u2605\u2606\u2606)": [[130, "create-a-2x2x2-array-with-random-values"]], "13. Create a 9x9 array with random values and find the minimum and maximum values (\u2605\u2606\u2606)": [[130, "create-a-9x9-array-with-random-values-and-find-the-minimum-and-maximum-values"]], "15. Create a 2d array with 1 on the border and 0 inside (\u2605\u2606\u2606)": [[130, "create-a-2d-array-with-1-on-the-border-and-0-inside"]], "16. How to add a border (filled with 0\u2019s) around an existing array? (\u2605\u2606\u2606)": [[130, "how-to-add-a-border-filled-with-0s-around-an-existing-array"]], "17. What is the result of the following expression? (\u2605\u2606\u2606)": [[130, "what-is-the-result-of-the-following-expression"]], "18. Create a 6x6 matrix with values 1,2,3,4 just below the diagonal (\u2605\u2606\u2606)": [[130, "create-a-6x6-matrix-with-values-1-2-3-4-just-below-the-diagonal"]], "19. Create a 6x6 matrix and fill it with a checkerboard pattern (\u2605\u2606\u2606)": [[130, "create-a-6x6-matrix-and-fill-it-with-a-checkerboard-pattern"]], "2 jointplot()": [[168, "jointplot"]], "2. . - Period": [[39, "period"]], "2. Closing Files in Python": [[68, "closing-files-in-python"]], "2. Comparison/Relational operators": [[95, "comparison-relational-operators"]], "2. Constants": [[90, "constants"]], "2. Convert a list of numeric value into a one-dimensional NumPy array (\u2605\u2606\u2606)": [[130, "convert-a-list-of-numeric-value-into-a-one-dimensional-numpy-array"]], "2. Deleting a Tuple": [[54, "deleting-a-tuple"]], "2. Docstrings for Python Functions": [[84, "docstrings-for-python-functions"]], "2. Explicit Type Conversion": [[93, "explicit-type-conversion"]], "2. Getting PyTorch to run on the GPU": [[146, "getting-pytorch-to-run-on-the-gpu"]], "2. Inline comments": [[89, "inline-comments"]], "2. Iterating Through a Dictionary": [[55, "iterating-through-a-dictionary"]], "2. Iterating Through a List": [[53, "iterating-through-a-list"]], "2. Iterating Through a Set": [[56, "iterating-through-a-set"]], "2. Iterating Through a Tuple": [[54, "iterating-through-a-tuple"]], "2. Membership operators": [[95, "membership-operators"]], "2. Memory Efficient": [[35, "memory-efficient"]], "2. Negative Indexing": [[54, "negative-indexing"]], "2. Point Plot": [[173, "point-plot"]], "2. Python Identifiers": [[88, "python-identifiers"]], "2. Python Indentation": [[89, "python-indentation"]], "2. Python Input Using input() function": [[94, "python-input-using-input-function"]], "2. Python List []": [[92, "python-list"]], "2. Python Logical Errors (Exceptions)": [[70, "python-logical-errors-exceptions"]], "2. Python String Membership Operators": [[52, "python-string-membership-operators"]], "2. Python continue statement": [[49, "python-continue-statement"]], "2. String literals (unicode character strings)": [[91, "string-literals-unicode-character-strings"]], "2. Unsupervised Learning \ud83e\udde9": [[0, "unsupervised-learning"]], "2. break Statement in Outer Loop": [[49, "break-statement-in-outer-loop"]], "2. continue Statement in Outer Loop": [[49, "continue-statement-in-outer-loop"]], "2. match.start(), match.end() and match.span()": [[39, "match-start-match-end-and-match-span"]], "2. re.split()": [[39, "re-split"]], "2.1 Getting PyTorch to run on Apple Silicon": [[146, "getting-pytorch-to-run-on-apple-silicon"]], "20. Consider a (8,9,10) shape array, what is the index (x,y,z) of the 100th element? (\u2605\u2606\u2606)": [[130, "consider-a-8-9-10-shape-array-what-is-the-index-x-y-z-of-the-100th-element"]], "21. Create a checkerboard 8x8 matrix using the tile function (\u2605\u2606\u2606)": [[130, "create-a-checkerboard-8x8-matrix-using-the-tile-function"]], "22. Normalize a 6x6 random matrix (\u2605\u2606\u2606)": [[130, "normalize-a-6x6-random-matrix"]], "23. find the number of elements of an array, length of one array element in bytes and total bytes consumed by the elements. (\u2605\u2606\u2606)": [[130, "find-the-number-of-elements-of-an-array-length-of-one-array-element-in-bytes-and-total-bytes-consumed-by-the-elements"]], "24. Multiply a 6x3 matrix by a 3x4 matrix (real matrix product) (\u2605\u2606\u2606)": [[130, "multiply-a-6x3-matrix-by-a-3x4-matrix-real-matrix-product"]], "25. Given a 1D array, negate all elements which are between 3 and 8, in place. (\u2605\u2606\u2606)": [[130, "given-a-1d-array-negate-all-elements-which-are-between-3-and-8-in-place"]], "26. What is the output of the following script? (\u2605\u2606\u2606)": [[130, "what-is-the-output-of-the-following-script"]], "27. Write a Python program compare two arrays using numpy (\u2605\u2606\u2606)": [[130, "write-a-python-program-compare-two-arrays-using-numpy"]], "28. What are the result of the following expressions? (\u2605\u2606\u2606)": [[130, "what-are-the-result-of-the-following-expressions"]], "29. How to round away from zero a float array ? (\u2605\u2606\u2606)": [[130, "how-to-round-away-from-zero-a-float-array"]], "3 pairplot()": [[168, "pairplot"]], "3. Boolean literals": [[91, "boolean-literals"]], "3. Count Plot": [[173, "count-plot"]], "3. Create a null vector of size 9 (\u2605\u2606\u2606)": [[130, "create-a-null-vector-of-size-9"]], "3. Deep Learning \ud83e\udde0": [[0, "deep-learning"]], "3. Docstrings for Python Classes": [[84, "docstrings-for-python-classes"]], "3. Logical/Boolean operators": [[95, "logical-boolean-operators"]], "3. Multi lined comment:": [[89, "multi-lined-comment"]], "3. Other List Operations in Python": [[53, "id1"]], "3. Putting tensors (and models) on the GPU": [[146, "putting-tensors-and-models-on-the-gpu"]], "3. Python Comments": [[89, "python-comments"]], "3. Python Import function": [[94, "python-import-function"]], "3. Python NameError": [[70, "python-nameerror"]], "3. Python Relational Operators": [[52, "python-relational-operators"]], "3. Python Tuple ()": [[92, "python-tuple"]], "3. Python pass statement": [[49, "python-pass-statement"]], "3. Represent Infinite Stream": [[35, "represent-infinite-stream"]], "3. Slicing": [[54, "slicing"]], "3. Writing to Files in Python": [[68, "writing-to-files-in-python"]], "3. ^ - Caret": [[39, "caret"]], "3. match.re and match.string": [[39, "match-re-and-match-string"]], "3. re.sub()": [[39, "re-sub"]], "3.2.2 Exploring the Four Equations": [[154, "exploring-the-four-equations"]], "3.3 Creating a training loop and training a model on batches of data": [[149, "creating-a-training-loop-and-training-a-model-on-batches-of-data"]], "30. How to find common values between two arrays? (\u2605\u2606\u2606)": [[130, "how-to-find-common-values-between-two-arrays"]], "31. How to ignore all numpy warnings (not recommended)? (\u2605\u2606\u2606)": [[130, "how-to-ignore-all-numpy-warnings-not-recommended"]], "32. Is the following expressions true? (\u2605\u2606\u2606)": [[130, "is-the-following-expressions-true"]], "33. How to get the dates of yesterday, today and tomorrow? (\u2605\u2606\u2606)": [[130, "how-to-get-the-dates-of-yesterday-today-and-tomorrow"]], "34. How to get all the dates corresponding to the month of January 2016? (\u2605\u2605\u2606)": [[130, "how-to-get-all-the-dates-corresponding-to-the-month-of-january-2016"]], "35. How to compute ((A+B)*(-A/2)) in place (without copy)? (\u2605\u2605\u2606)": [[130, "how-to-compute-a-b-a-2-in-place-without-copy"]], "36. Extract the integer part of a random array of positive numbers using 4 different methods (\u2605\u2605\u2606)": [[130, "extract-the-integer-part-of-a-random-array-of-positive-numbers-using-4-different-methods"]], "37. Create a 3x3 matrix with row values ranging from 0 to 2 (\u2605\u2605\u2606)": [[130, "create-a-3x3-matrix-with-row-values-ranging-from-0-to-2"]], "38. Consider a generator function that generates 9 integers and use it to build an array (\u2605\u2606\u2606)": [[130, "consider-a-generator-function-that-generates-9-integers-and-use-it-to-build-an-array"]], "39. Create a vector of size 10 with values ranging from 0 to 1, both excluded (\u2605\u2605\u2606)": [[130, "create-a-vector-of-size-10-with-values-ranging-from-0-to-1-both-excluded"]], "4 rugplot()": [[168, "rugplot"]], "4. $ - Dollar": [[39, "dollar"]], "4. Bitwise operators": [[95, "bitwise-operators"]], "4. Docstrings for Python Scripts": [[84, "docstrings-for-python-scripts"]], "4. Docstrings in Python": [[89, "docstrings-in-python"]], "4. How to find the memory size of any array (\u2605\u2606\u2606)": [[130, "how-to-find-the-memory-size-of-any-array"]], "4. Moving tensors back to the CPU": [[146, "moving-tensors-back-to-the-cpu"]], "4. Pipelining Generators": [[35, "pipelining-generators"]], "4. Python IndexError": [[70, "python-indexerror"]], "4. Python Strings": [[92, "python-strings"]], "4. Reading Files in Python": [[68, "reading-files-in-python"]], "4. Reinforcement Learning \ud83c\udfae": [[0, "reinforcement-learning"]], "4. re.subn()": [[39, "re-subn"]], "40. Create a random vector of size 10 and sort it (\u2605\u2605\u2606)": [[130, "create-a-random-vector-of-size-10-and-sort-it"]], "41. How to sum a small array faster than np.sum? (\u2605\u2605\u2606)": [[130, "how-to-sum-a-small-array-faster-than-np-sum"]], "42. Consider two random array A and B, check if they are equal (\u2605\u2605\u2606)": [[130, "consider-two-random-array-a-and-b-check-if-they-are-equal"]], "43. Make an array immutable (read-only) (\u2605\u2605\u2606)": [[130, "make-an-array-immutable-read-only"]], "44. Consider a random 5x2 matrix representing cartesian coordinates, convert them to polar coordinates (\u2605\u2605\u2606)": [[130, "consider-a-random-5x2-matrix-representing-cartesian-coordinates-convert-them-to-polar-coordinates"]], "45. Create random vector of size 5 and replace the maximum value by 0 (\u2605\u2605\u2606)": [[130, "create-random-vector-of-size-5-and-replace-the-maximum-value-by-0"]], "46. Create a structured array with x and y coordinates covering the [0,1]x[0,1] area (\u2605\u2605\u2606)": [[130, "create-a-structured-array-with-x-and-y-coordinates-covering-the-0-1-x-0-1-area"]], "47. Given two arrays, X and Y, construct the Cauchy matrix C (Cij =1/(xi - yj)) (\u2605\u2605\u2606)": [[130, "given-two-arrays-x-and-y-construct-the-cauchy-matrix-c-cij-1-xi-yj"]], "48. Print the minimum and maximum representable value for each numpy scalar type (\u2605\u2605\u2606)": [[130, "print-the-minimum-and-maximum-representable-value-for-each-numpy-scalar-type"]], "49. How to print all the values of an array? (\u2605\u2605\u2606)": [[130, "how-to-print-all-the-values-of-an-array"]], "5 kdeplot()": [[168, "kdeplot"]], "5. * - Star": [[39, "star"]], "5. Assignment operators": [[95, "assignment-operators"]], "5. Docstrings for Python Packages": [[84, "docstrings-for-python-packages"]], "5. How to get the documentation of the numpy add function from the command line? (\u2605\u2606\u2606)": [[130, "how-to-get-the-documentation-of-the-numpy-add-function-from-the-command-line"]], "5. Python ModuleNotFoundError": [[70, "python-modulenotfounderror"]], "5. Python Set {}": [[92, "python-set"]], "5. re.search()": [[39, "re-search"]], "50. How to find the closest value (to a given scalar) in a vector? (\u2605\u2605\u2606)": [[130, "how-to-find-the-closest-value-to-a-given-scalar-in-a-vector"]], "51. Create a structured array representing a position (x,y) and a color (r,g,b) (\u2605\u2605\u2606)": [[130, "create-a-structured-array-representing-a-position-x-y-and-a-color-r-g-b"]], "52. Consider a random vector with shape (100,2) representing coordinates, find point by point distances (\u2605\u2605\u2606)": [[130, "consider-a-random-vector-with-shape-100-2-representing-coordinates-find-point-by-point-distances"]], "53. How to convert a float (32 bits) array into an integer (32 bits) in place?": [[130, "how-to-convert-a-float-32-bits-array-into-an-integer-32-bits-in-place"]], "54. How to read the following file? (\u2605\u2605\u2606)": [[130, "how-to-read-the-following-file"]], "55. What is the equivalent of enumerate for numpy arrays? (\u2605\u2605\u2606)": [[130, "what-is-the-equivalent-of-enumerate-for-numpy-arrays"]], "56. Generate a generic 2D Gaussian-like array (\u2605\u2605\u2606)": [[130, "generate-a-generic-2d-gaussian-like-array"]], "57. How to randomly place e elements in a 2D array? (\u2605\u2605\u2606)": [[130, "how-to-randomly-place-e-elements-in-a-2d-array"]], "58. Subtract the mean of each row of a matrix (\u2605\u2605\u2606)": [[130, "subtract-the-mean-of-each-row-of-a-matrix"]], "59. How to sort an array by the nth column? (\u2605\u2605\u2606)": [[130, "how-to-sort-an-array-by-the-nth-column"]], "6# 6# 14. Create a random vector of size 20 and find the mean value (\u2605\u2606\u2606)": [[130, "create-a-random-vector-of-size-20-and-find-the-mean-value"]], "6. + - Plus": [[39, "plus"]], "6. Create a null vector of size 12 but the sixth value which is 1 (\u2605\u2606\u2606)": [[130, "create-a-null-vector-of-size-12-but-the-sixth-value-which-is-1"]], "6. Python AttributeError": [[70, "python-attributeerror"]], "6. Python Dictionary {}": [[92, "python-dictionary"]], "6. Special operators": [[95, "special-operators"]], "60. How to tell if a given 2D array has null columns? (\u2605\u2605\u2606)": [[130, "how-to-tell-if-a-given-2d-array-has-null-columns"]], "61. Find the nearest value from a given value in an array (\u2605\u2605\u2606)": [[130, "find-the-nearest-value-from-a-given-value-in-an-array"]], "62. Considering two arrays with shape (1,3) and (3,1), how to compute their sum using an iterator? (\u2605\u2605\u2606)": [[130, "considering-two-arrays-with-shape-1-3-and-3-1-how-to-compute-their-sum-using-an-iterator"]], "63. Create an array class that has a name attribute (\u2605\u2605\u2606)": [[130, "create-an-array-class-that-has-a-name-attribute"]], "64. Consider a given vector, how to add 1 to each element indexed by a second vector (be careful with repeated indices)? (\u2605\u2605\u2605)": [[130, "consider-a-given-vector-how-to-add-1-to-each-element-indexed-by-a-second-vector-be-careful-with-repeated-indices"]], "65. How to accumulate elements of a vector (X) to an array (F) based on an index list (I)? (\u2605\u2605\u2605)": [[130, "how-to-accumulate-elements-of-a-vector-x-to-an-array-f-based-on-an-index-list-i"]], "66. Considering a (w,h,3) image of (dtype=ubyte), compute the number of unique colors (\u2605\u2605\u2606)": [[130, "considering-a-w-h-3-image-of-dtype-ubyte-compute-the-number-of-unique-colors"]], "67. Considering a four dimensions array, how to get sum over the last two axis at once? (\u2605\u2605\u2605)": [[130, "considering-a-four-dimensions-array-how-to-get-sum-over-the-last-two-axis-at-once"]], "68. Considering a one-dimensional vector D, how to compute means of subsets of D using a vector S of same size describing subset  indices? (\u2605\u2605\u2605)": [[130, "considering-a-one-dimensional-vector-d-how-to-compute-means-of-subsets-of-d-using-a-vector-s-of-same-size-describing-subset-indices"]], "69. How to get the diagonal of a dot product? (\u2605\u2605\u2605)": [[130, "how-to-get-the-diagonal-of-a-dot-product"]], "7. ? - Question Mark": [[39, "question-mark"]], "7. Create a vector with values ranging from 20 to 59 (\u2605\u2606\u2606)": [[130, "create-a-vector-with-values-ranging-from-20-to-59"]], "7. Python KeyError": [[70, "python-keyerror"]], "70. Consider the vector [1, 2, 3, 4, 5], how to build a new vector with 3 consecutive zeros interleaved between each value? (\u2605\u2605\u2605)": [[130, "consider-the-vector-1-2-3-4-5-how-to-build-a-new-vector-with-3-consecutive-zeros-interleaved-between-each-value"]], "71. Consider an array of dimension (5,5,3), how to mulitply it by an array with dimensions (5,5)? (\u2605\u2605\u2605)": [[130, "consider-an-array-of-dimension-5-5-3-how-to-mulitply-it-by-an-array-with-dimensions-5-5"]], "72. How to swap two rows of an array? (\u2605\u2605\u2605)": [[130, "how-to-swap-two-rows-of-an-array"]], "73. Consider a set of 10 triplets describing 10 triangles (with shared vertices), find the set of unique line segments composing all the  triangles (\u2605\u2605\u2605)": [[130, "consider-a-set-of-10-triplets-describing-10-triangles-with-shared-vertices-find-the-set-of-unique-line-segments-composing-all-the-triangles"]], "74. Given a sorted array C that corresponds to a bincount, how to produce an array A such that np.bincount(A) == C? (\u2605\u2605\u2605)": [[130, "given-a-sorted-array-c-that-corresponds-to-a-bincount-how-to-produce-an-array-a-such-that-np-bincount-a-c"]], "75. How to compute averages using a sliding window over an array? (\u2605\u2605\u2605)": [[130, "how-to-compute-averages-using-a-sliding-window-over-an-array"]], "76. Consider a one-dimensional array Z, build a two-dimensional array whose first row is (Z[0],Z[1],Z[2]) and each subsequent row is  shifted by 1 (last row should be (Z[-3],Z[-2],Z[-1]) (\u2605\u2605\u2605)": [[130, "consider-a-one-dimensional-array-z-build-a-two-dimensional-array-whose-first-row-is-z-0-z-1-z-2-and-each-subsequent-row-is-shifted-by-1-last-row-should-be-z-3-z-2-z-1"]], "77. How to negate a boolean, or to change the sign of a float inplace? (\u2605\u2605\u2605)": [[130, "how-to-negate-a-boolean-or-to-change-the-sign-of-a-float-inplace"]], "78. Consider 2 sets of points P0,P1 describing lines (2d) and a point p, how to compute distance from p to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[130, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-point-p-how-to-compute-distance-from-p-to-each-line-i-p0-i-p1-i"]], "79. Consider 2 sets of points P0,P1 describing lines (2d) and a set of points P, how to compute distance from each point j (P[j]) to each line i (P0[i],P1[i])? (\u2605\u2605\u2605)": [[130, "consider-2-sets-of-points-p0-p1-describing-lines-2d-and-a-set-of-points-p-how-to-compute-distance-from-each-point-j-p-j-to-each-line-i-p0-i-p1-i"]], "8. Python TypeError": [[70, "python-typeerror"]], "8. Reverse a vector (first element becomes last) (\u2605\u2606\u2606)": [[130, "reverse-a-vector-first-element-becomes-last"]], "8. {} - Braces": [[39, "braces"]], "80. Consider an arbitrary array, write a function that extract a subpart with a fixed shape and centered on a given element (pad with a fill value when necessary) (\u2605\u2605\u2605)": [[130, "consider-an-arbitrary-array-write-a-function-that-extract-a-subpart-with-a-fixed-shape-and-centered-on-a-given-element-pad-with-a-fill-value-when-necessary"]], "81. Consider an array a = [1,2,3,4,5,6,7,8,9,10,11,12,13,14], how to generate an array b = [[1,2,3,4], [2,3,4,5], [3,4,5,6], \u2026, [11,12,13,14]]? (\u2605\u2605\u2605)": [[130, "consider-an-array-a-1-2-3-4-5-6-7-8-9-10-11-12-13-14-how-to-generate-an-array-b-1-2-3-4-2-3-4-5-3-4-5-6-11-12-13-14"]], "82. Compute a matrix rank (\u2605\u2605\u2605)": [[130, "compute-a-matrix-rank"]], "83. How to find the most frequent value in an array?": [[130, "how-to-find-the-most-frequent-value-in-an-array"]], "84. Extract all the contiguous 3x3 blocks from a random 10x10 matrix (\u2605\u2605\u2605)": [[130, "extract-all-the-contiguous-3x3-blocks-from-a-random-10x10-matrix"]], "85. Create a 2D array subclass such that a[i,j] == a[j,i] (\u2605\u2605\u2605)": [[130, "create-a-2d-array-subclass-such-that-a-i-j-a-j-i"]], "86. Consider a set of p matrices wich shape (n,n) and a set of p vectors with shape (n,1). How to compute the sum of of the p matrix products at once? (result has shape (n,1)) (\u2605\u2605\u2605)": [[130, "consider-a-set-of-p-matrices-wich-shape-n-n-and-a-set-of-p-vectors-with-shape-n-1-how-to-compute-the-sum-of-of-the-p-matrix-products-at-once-result-has-shape-n-1"]], "87. Consider a 16x16 array, how to get the block-sum (block size is 4x4)? (\u2605\u2605\u2605)": [[130, "consider-a-16x16-array-how-to-get-the-block-sum-block-size-is-4x4"]], "88. How to implement the Game of Life using numpy arrays? (\u2605\u2605\u2605)": [[130, "how-to-implement-the-game-of-life-using-numpy-arrays"]], "89. How to get the n largest values of an array (\u2605\u2605\u2605)": [[130, "how-to-get-the-n-largest-values-of-an-array"]], "9. Create a 3x3 matrix with values ranging from 12 to 20 (\u2605\u2606\u2606)": [[130, "create-a-3x3-matrix-with-values-ranging-from-12-to-20"]], "9. Python ValueError": [[70, "python-valueerror"]], "9. | - Alternation": [[39, "alternation"]], "9.1 Create transform with data augmentation": [[150, "create-transform-with-data-augmentation"]], "90. Given an arbitrary number of vectors, build the cartesian product (every combinations of every item) (\u2605\u2605\u2605)": [[130, "given-an-arbitrary-number-of-vectors-build-the-cartesian-product-every-combinations-of-every-item"]], "91. How to create a record array from a regular array? (\u2605\u2605\u2605)": [[130, "how-to-create-a-record-array-from-a-regular-array"]], "92. Consider a large vector A, compute A to the power of 3 using 3 different methods (\u2605\u2605\u2605)": [[130, "consider-a-large-vector-a-compute-a-to-the-power-of-3-using-3-different-methods"]], "93. Consider two arrays A and B of shape (8,3) and (2,2). How to find rows of A that contain elements of each row of B regardless of the order of the elements in B? (\u2605\u2605\u2605)": [[130, "consider-two-arrays-a-and-b-of-shape-8-3-and-2-2-how-to-find-rows-of-a-that-contain-elements-of-each-row-of-b-regardless-of-the-order-of-the-elements-in-b"]], "94. Considering a 10x3 matrix, extract rows with unequal values (e.g. [2,2,3]) (\u2605\u2605\u2605)": [[130, "considering-a-10x3-matrix-extract-rows-with-unequal-values-e-g-2-2-3"]], "95. Convert a vector of ints into a matrix binary representation (\u2605\u2605\u2605)": [[130, "convert-a-vector-of-ints-into-a-matrix-binary-representation"]], "96. Given a two dimensional array, how to extract unique rows? (\u2605\u2605\u2605)": [[130, "given-a-two-dimensional-array-how-to-extract-unique-rows"]], "97. Considering 2 vectors A & B, write the einsum equivalent of inner, outer, sum, and mul function (\u2605\u2605\u2605)": [[130, "considering-2-vectors-a-b-write-the-einsum-equivalent-of-inner-outer-sum-and-mul-function"]], "98. Considering a path described by two vectors (X,Y), how to sample it using equidistant samples (\u2605\u2605\u2605)?": [[130, "considering-a-path-described-by-two-vectors-x-y-how-to-sample-it-using-equidistant-samples"]], "99. Given an integer n and a 2D array X, select from X the rows which can be interpreted as draws from a multinomial distribution with n degrees, i.e., the rows which only contain integers and which sum to n. (\u2605\u2605\u2605)": [[130, "given-an-integer-n-and-a-2d-array-x-select-from-x-the-rows-which-can-be-interpreted-as-draws-from-a-multinomial-distribution-with-n-degrees-i-e-the-rows-which-only-contain-integers-and-which-sum-to-n"]], "AI/ML Learning Path": [[184, "ai-ml-learning-path"]], "About Python Programming": [[22, "about-python-programming"]], "Accept float input from User": [[94, "accept-float-input-from-user"]], "Accept multiline input from a user": [[94, "accept-multiline-input-from-a-user"]], "Accepting User Inputs (as both integer and string)": [[94, "accepting-user-inputs-as-both-integer-and-string"]], "Accepting User Inputs (only as integer)": [[94, "accepting-user-inputs-only-as-integer"]], "Access Tuple Elements": [[54, "access-tuple-elements"]], "Access elements from a list": [[53, "access-elements-from-a-list"]], "Accessing Attributes with self Parameter": [[102, "accessing-attributes-with-self-parameter"]], "Accessing Elements from Dictionary": [[55, "accessing-elements-from-dictionary"]], "Accessing output string arguments by name": [[94, "accessing-output-string-arguments-by-name"]], "Accessing the index in for loop": [[47, "accessing-the-index-in-for-loop"]], "Add/Change List Elements": [[53, "add-change-list-elements"]], "Adding or Removing Elements": [[125, "adding-or-removing-elements"]], "Additional Regression Plots": [[167, "additional-regression-plots"]], "Adjust train() function to track results with SummaryWriter()": [[153, "adjust-train-function-to-track-results-with-summarywriter"]], "Adjusting model_1 to fit a straight line": [[148, "adjusting-model-1-to-fit-a-straight-line"]], "Advanced Level": [[184, "advanced-level"]], "Advanced string processing": [[52, "advanced-string-processing"]], "Advantage": [[80, "advantage"]], "Advantages of Recursion": [[78, "advantages-of-recursion"]], "Advantages of Tuple over List": [[54, "advantages-of-tuple-over-list"]], "Advantages of user-defined functions": [[85, "advantages-of-user-defined-functions"]], "Aggregate Statistics (Groupby)": [[143, "aggregate-statistics-groupby"]], "Algorithm Evaluation": [[1, "algorithm-evaluation"]], "An example cell": [[6, "an-example-cell"], [109, "an-example-cell"], [182, "an-example-cell"]], "Analyze Gradient Descent Progress": [[11, "analyze-gradient-descent-progress"], [12, "analyze-gradient-descent-progress"], [13, "analyze-gradient-descent-progress"], [14, "analyze-gradient-descent-progress"], [15, "analyze-gradient-descent-progress"], [16, "analyze-gradient-descent-progress"], [17, "analyze-gradient-descent-progress"]], "Anatomy of Box Plot": [[171, "anatomy-of-box-plot"]], "Anatomy of Violin Plot": [[172, "anatomy-of-violin-plot"]], "Angle between vectors": [[32, "angle-between-vectors"]], "Anomaly Detection Algorithm": [[1, "anomaly-detection-algorithm"]], "Anomaly Detection Using Gaussian Distribution": [[1, "anomaly-detection-using-gaussian-distribution"], [8, "anomaly-detection-using-gaussian-distribution"]], "Apply condition": [[132, "apply-condition"]], "Architecture of a classification neural network": [[148, "architecture-of-a-classification-neural-network"]], "Argument of an Exception": [[71, "argument-of-an-exception"]], "Array": [[125, "array"]], "Array Attributes and Methods": [[126, "array-attributes-and-methods"]], "Array Manipulation": [[125, "array-manipulation"]], "Array datatypes": [[126, "array-datatypes"]], "Array indexing": [[127, "array-indexing"]], "Array math": [[128, "array-math"]], "Arrays reorganizing": [[129, "arrays-reorganizing"]], "Assigning value to constant in Python": [[90, "assigning-value-to-constant-in-python"]], "Assigning values to Variables in Python": [[90, "assigning-values-to-variables-in-python"]], "Backpropagation": [[7, "backpropagation"]], "Backpropagation Algorithm": [[7, "backpropagation-algorithm"]], "Backward Iteration using the reversed() function": [[47, "backward-iteration-using-the-reversed-function"]], "Bar Chart": [[122, "bar-chart"]], "Bar Plot, Point Plot and Count plot": [[173, "bar-plot-point-plot-and-count-plot"]], "Basic Graph": [[122, "basic-graph"]], "Basic Statistics": [[125, "basic-statistics"]], "Basic operations": [[146, "basic-operations"]], "Batch Gradient Descent": [[4, "batch-gradient-descent"], [5, "batch-gradient-descent"]], "Be careful when copying arrays!!!": [[127, "be-careful-when-copying-arrays"]], "Become one with the data (data preparation)": [[150, "become-one-with-the-data-data-preparation"]], "Beginner": [[2, "beginner"]], "Beginner Level": [[184, "beginner-level"]], "Boolean Masking and Advanced Indexing": [[129, "boolean-masking-and-advanced-indexing"]], "Boolean array indexing": [[127, "boolean-array-indexing"]], "Box and Whiskers Chart": [[122, "box-and-whiskers-chart"]], "Box plot #1": [[122, "box-plot-1"]], "Box plot #2": [[122, "box-plot-2"]], "Breaking appart strings": [[52, "breaking-appart-strings"]], "Bringing FoodVision Mini to life by creating a Gradio demo": [[155, "bringing-foodvision-mini-to-life-by-creating-a-gradio-demo"]], "Broadcasting": [[128, "broadcasting"]], "Broadcasting with array reorganizing": [[129, "broadcasting-with-array-reorganizing"]], "Build model": [[147, "build-model"]], "Building Custom Iterators": [[34, "building-custom-iterators"]], "Building a Gradio interface": [[155, "building-a-gradio-interface"]], "Building a PyTorch linear model": [[147, "building-a-pytorch-linear-model"]], "Building a model": [[148, "building-a-model"]], "Building a model with non-linearity": [[148, "building-a-model-with-non-linearity"]], "Building a multi-class classification model in PyTorch": [[148, "building-a-multi-class-classification-model-in-pytorch"]], "Building a training and testing loop": [[148, "building-a-training-and-testing-loop"]], "Building color palettes:": [[164, "building-color-palettes"]], "Built-In Class Attributes": [[102, "built-in-class-attributes"]], "Built-in Functions with Set": [[56, "built-in-functions-with-set"]], "Built-in Higher Order Functions": [[37, "built-in-higher-order-functions"]], "Built-in functions to Work with Python": [[52, "built-in-functions-to-work-with-python"]], "Calculate Model Training Precision": [[14, "calculate-model-training-precision"], [15, "calculate-model-training-precision"], [16, "calculate-model-training-precision"], [17, "calculate-model-training-precision"], [18, "calculate-model-training-precision"], [19, "calculate-model-training-precision"]], "Calculating patch embedding input and output shapes by hand": [[154, "calculating-patch-embedding-input-and-output-shapes-by-hand"]], "Calculus - Fourier Series": [[27, "calculus-fourier-series"]], "Canberra Distance": [[30, "canberra-distance"]], "Capital-pi notation": [[28, "capital-pi-notation"]], "Capital-sigma notation": [[29, "capital-sigma-notation"]], "Cart ^": [[39, "cart"]], "Catching Exceptions in Python": [[71, "catching-exceptions-in-python"]], "Catching Specific Exceptions in Python": [[71, "catching-specific-exceptions-in-python"]], "Catching exceptions with continue statement": [[49, "catching-exceptions-with-continue-statement"]], "Categorical Data Background": [[169, "categorical-data-background"]], "Cell mode vs. script mode": [[151, "cell-mode-vs-script-mode"]], "Chaining Decorators in Python": [[37, "chaining-decorators-in-python"]], "Change tensor datatype": [[146, "change-tensor-datatype"]], "Changing Dictionary to JSON": [[68, "changing-dictionary-to-json"]], "Changing Directory chdir() -": [[69, "changing-directory-chdir"]], "Changing JSON to Dictionary": [[68, "changing-json-to-dictionary"]], "Changing and Adding Dictionary elements": [[55, "changing-and-adding-dictionary-elements"]], "Chebyshev Distance": [[30, "chebyshev-distance"]], "Check python datatypes": [[24, "check-python-datatypes"]], "Checking the contents of a PyTorch model": [[147, "checking-the-contents-of-a-pytorch-model"]], "Checking the size of EffNetB2 feature extractor": [[155, "checking-the-size-of-effnetb2-feature-extractor"]], "Checking the size of ViT feature extractor": [[155, "checking-the-size-of-vit-feature-extractor"]], "Class": [[101, "class"]], "Class Constructor": [[101, "class-constructor"]], "Class Without Getters and Setters": [[38, "class-without-getters-and-setters"]], "Code blocks and outputs": [[25, "code-blocks-and-outputs"], [107, "code-blocks-and-outputs"], [111, "code-blocks-and-outputs"]], "Collecting EffNetB2 feature extractor stats": [[155, "collecting-effnetb2-feature-extractor-stats"]], "Collecting ViT feature extractor stats": [[155, "collecting-vit-feature-extractor-stats"]], "Combining Arrays": [[125, "combining-arrays"]], "Common Python String Methods": [[52, "common-python-string-methods"]], "Compare DataFrame drop() vs. pop() vs. del": [[136, "compare-dataframe-drop-vs-pop-vs-del"]], "Compare model results": [[150, "compare-model-results"]], "Compare model results and training time": [[149, "compare-model-results-and-training-time"]], "Comparing model results, prediction times and size": [[155, "comparing-model-results-prediction-times-and-size"]], "Comparision operators in Python": [[80, "comparision-operators-in-python"]], "Comparison": [[125, "comparison"]], "Concepts": [[185, "concepts"]], "Concepts at glance": [[2, "concepts-at-glance"]], "Conclusion": [[116, "conclusion"]], "Conditional Changes": [[143, "conditional-changes"]], "Conditional statements": [[42, "conditional-statements"]], "Conditionals in List Comprehension": [[57, "conditionals-in-list-comprehension"]], "Constants  -": [[80, "constants"]], "Construct and train Model 1": [[150, "construct-and-train-model-1"]], "Constructors in Python": [[102, "constructors-in-python"]], "Content with notebooks": [[25, "content-with-notebooks"], [107, "content-with-notebooks"], [111, "content-with-notebooks"]], "Control Flow Statements": [[42, "control-flow-statements"]], "Control Statements in Python": [[49, "control-statements-in-python"]], "Control Statements in Python FAQs": [[49, "control-statements-in-python-faqs"]], "Controlling Aesthetics of Seaborn Plots": [[162, "controlling-aesthetics-of-seaborn-plots"]], "Convert Pandas DataFrame to Python dictionary": [[140, "convert-pandas-dataframe-to-python-dictionary"]], "Copying/Sorting": [[125, "copying-sorting"]], "Core engineering": [[185, "core-engineering"]], "Cosine Distance": [[30, "cosine-distance"]], "Cost Function": [[4, "cost-function"], [5, "cost-function"], [7, "cost-function"]], "Cost Function (Distortion)": [[3, "cost-function-distortion"]], "Course Structure": [[185, "course-structure"]], "Create DataFrame from Hierarchical lists as columns": [[134, "create-dataframe-from-hierarchical-lists-as-columns"]], "Create DataFrame from dict using constructor": [[133, "create-dataframe-from-dict-using-constructor"]], "Create DataFrame from hierarchical lists as rows": [[134, "create-dataframe-from-hierarchical-lists-as-rows"]], "Create DataFrame from list by changing data type": [[134, "create-dataframe-from-list-by-changing-data-type"]], "Create DataFrame from list of dict": [[133, "create-dataframe-from-list-of-dict"]], "Create DataFrame from list using constructor": [[134, "create-dataframe-from-list-using-constructor"]], "Create DataFrame from list with a customized column name": [[134, "create-dataframe-from-list-with-a-customized-column-name"]], "Create DataFrame from list with a customized index": [[134, "create-dataframe-from-list-with-a-customized-index"]], "Create DataFrame from multiple lists": [[134, "create-dataframe-from-multiple-lists"]], "Create DataLoaders for ViT": [[155, "create-dataloaders-for-vit"]], "Create DataLoaders using automatically created transforms": [[153, "create-dataloaders-using-automatically-created-transforms"]], "Create DataLoaders using manually created transforms": [[153, "create-dataloaders-using-manually-created-transforms"]], "Create Datasets and DataLoaders": [[152, "create-datasets-and-dataloaders"], [153, "create-datasets-and-dataloaders"], [154, "create-datasets-and-dataloaders"], [156, "create-datasets-and-dataloaders"], [157, "create-datasets-and-dataloaders"]], "Create Datasets and DataLoaders (data_setup.py)": [[151, "create-datasets-and-dataloaders-data-setup-py"]], "Create Datasets and DataLoaders (script mode)": [[157, "create-datasets-and-dataloaders-script-mode"]], "Create Generators in Python": [[35, "create-generators-in-python"]], "Create Pandas DataFrame from Python Dictionary": [[133, "create-pandas-dataframe-from-python-dictionary"]], "Create Pandas DataFrame from Python List": [[134, "create-pandas-dataframe-from-python-list"]], "Create Test Objects": [[132, "create-test-objects"]], "Create TinyVGG model class": [[150, "create-tinyvgg-model-class"]], "Create a NumPy Array": [[126, "create-a-numpy-array"]], "Create a custom Dataset to replicate ImageFolder": [[150, "create-a-custom-dataset-to-replicate-imagefolder"]], "Create a function to display random images": [[150, "create-a-function-to-display-random-images"]], "Create a helper function to build SummaryWriter() instances": [[153, "create-a-helper-function-to-build-summarywriter-instances"]], "Create a helper function to set seeds": [[153, "create-a-helper-function-to-set-seeds"]], "Create a notebook with MyST Markdown": [[6, "create-a-notebook-with-myst-markdown"], [109, "create-a-notebook-with-myst-markdown"], [182, "create-a-notebook-with-myst-markdown"]], "Create experiments and set up training code": [[153, "create-experiments-and-set-up-training-code"]], "Create feature extractor models": [[153, "create-feature-extractor-models"]], "Create the Transformer Encoder": [[154, "create-the-transformer-encoder"]], "Create train & test loop functions": [[150, "create-train-test-loop-functions"]], "Create train and test Dataset\u2019s and DataLoader\u2019s": [[150, "create-train-and-test-datasets-and-dataloaders"]], "Creating Custom Exceptions": [[72, "creating-custom-exceptions"]], "Creating DataLoaders for EffNetB2": [[155, "creating-dataloaders-for-effnetb2"]], "Creating Instance Objects": [[102, "creating-instance-objects"]], "Creating Python Dictionary": [[55, "creating-python-dictionary"]], "Creating Python List": [[53, "creating-python-list"]], "Creating Python Sets": [[56, "creating-python-sets"]], "Creating Python Tuple": [[54, "creating-python-tuple"]], "Creating a Lambda Function": [[57, "creating-a-lambda-function"]], "Creating a Transformer Encoder by combining our custom made layers": [[154, "creating-a-transformer-encoder-by-combining-our-custom-made-layers"]], "Creating a Transformer Encoder with PyTorch\u2019s Transformer layers": [[154, "creating-a-transformer-encoder-with-pytorchs-transformer-layers"]], "Creating a ViT feature extractor": [[155, "creating-a-vit-feature-extractor"]], "Creating a demos folder to store our FoodVision Mini app files": [[155, "creating-a-demos-folder-to-store-our-foodvision-mini-app-files"]], "Creating a folder for storing Python scripts": [[157, "creating-a-folder-for-storing-python-scripts"]], "Creating a folder of example images to use with our FoodVision Mini demo": [[155, "creating-a-folder-of-example-images-to-use-with-our-foodvision-mini-demo"]], "Creating a function to make an EffNetB2 feature extractor": [[155, "creating-a-function-to-make-an-effnetb2-feature-extractor"]], "Creating a function to make predictions across the test dataset": [[155, "creating-a-function-to-make-predictions-across-the-test-dataset"]], "Creating a function to map our inputs and outputs": [[155, "creating-a-function-to-map-our-inputs-and-outputs"]], "Creating a function to save the model": [[156, "creating-a-function-to-save-the-model"], [157, "creating-a-function-to-save-the-model"]], "Creating a function to save the model (script mode)": [[157, "creating-a-function-to-save-the-model-script-mode"]], "Creating a function to save the model (utils.py)": [[151, "creating-a-function-to-save-the-model-utils-py"]], "Creating a function to time our experiments": [[149, "creating-a-function-to-time-our-experiments"]], "Creating a helper function to get class names": [[150, "creating-a-helper-function-to-get-class-names"]], "Creating a list of example images": [[155, "creating-a-list-of-example-images"]], "Creating a loss function": [[154, "creating-a-loss-function"]], "Creating a loss function and optimizer for a multi-class PyTorch model": [[148, "creating-a-loss-function-and-optimizer-for-a-multi-class-pytorch-model"]], "Creating a loss function and optimizer in PyTorch": [[147, "creating-a-loss-function-and-optimizer-in-pytorch"]], "Creating a model and transforms for FoodVision Big": [[155, "creating-a-model-and-transforms-for-foodvision-big"]], "Creating a module in Python": [[80, "creating-a-module-in-python"]], "Creating a range and tensors like": [[146, "creating-a-range-and-tensors-like"]], "Creating a requirements file for FoodVision Mini (requirements.txt)": [[155, "creating-a-requirements-file-for-foodvision-mini-requirements-txt"]], "Creating a train() function to combine train_step() and test_step()": [[150, "creating-a-train-function-to-combine-train-step-and-test-step"]], "Creating a training and testing loop for a multi-class PyTorch model": [[148, "creating-a-training-and-testing-loop-for-a-multi-class-pytorch-model"]], "Creating a transform for torchvision.models (auto creation)": [[152, "creating-a-transform-for-torchvision-models-auto-creation"]], "Creating a transform for torchvision.models (manual creation)": [[152, "creating-a-transform-for-torchvision-models-manual-creation"]], "Creating an EffNetB2 feature extractor": [[155, "creating-an-effnetb2-feature-extractor"]], "Creating an Object in Python": [[102, "creating-an-object-in-python"]], "Creating an empty set is a bit tricky.": [[56, "creating-an-empty-set-is-a-bit-tricky"]], "Creating an optimization loop in PyTorch": [[147, "creating-an-optimization-loop-in-pytorch"]], "Creating an optimizer": [[154, "creating-an-optimizer"]], "Creating image patches with torch.nn.Conv2d()": [[154, "creating-image-patches-with-torch-nn-conv2d"]], "Creating mutli-class classification data": [[148, "creating-mutli-class-classification-data"]], "Creating tensors": [[146, "creating-tensors"]], "Creating the class token embedding": [[154, "creating-the-class-token-embedding"]], "Creating the position embedding": [[154, "creating-the-position-embedding"]], "Creating train_step() and test_step() functions and train() to combine them": [[151, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [156, "creating-train-step-and-test-step-functions-and-train-to-combine-them"], [157, "creating-train-step-and-test-step-functions-and-train-to-combine-them"]], "Creating train_step() and test_step() functions and train() to combine them (script mode)": [[157, "creating-train-step-and-test-step-functions-and-train-to-combine-them-script-mode"]], "Creating transforms and loading data for Model 0": [[150, "creating-transforms-and-loading-data-for-model-0"]], "Customizing Exception Classes": [[72, "customizing-exception-classes"]], "Data": [[147, "data"], [168, "data"]], "Data (preparing and loading)": [[147, "data-preparing-and-loading"]], "Data Cleaning": [[132, "data-cleaning"]], "Data Hiding": [[102, "data-hiding"]], "Data structures and algorithms": [[97, "data-structures-and-algorithms"]], "DataFrame Attributes": [[132, "dataframe-attributes"]], "DataFrame GroupBy": [[132, "dataframe-groupby"]], "DataFrame Iteration": [[132, "dataframe-iteration"]], "DataFrame Join": [[132, "dataframe-join"]], "DataFrame Options": [[132, "dataframe-options"]], "DataFrame Sorting": [[132, "dataframe-sorting"]], "DataFrame constructor": [[132, "dataframe-constructor"]], "DataFrame constructor vs from_dict()": [[133, "dataframe-constructor-vs-from-dict"]], "DataFrame conversion": [[132, "dataframe-conversion"]], "DataFrame creation": [[132, "dataframe-creation"]], "DataFrame filter columns": [[132, "dataframe-filter-columns"]], "DataFrame from dict by changing the column data type": [[133, "dataframe-from-dict-by-changing-the-column-data-type"]], "DataFrame from dict nested dict": [[133, "dataframe-from-dict-nested-dict"]], "DataFrame from dict where values are variable-length lists": [[133, "dataframe-from-dict-where-values-are-variable-length-lists"]], "DataFrame from dict with a single value": [[133, "dataframe-from-dict-with-a-single-value"]], "DataFrame from dict with dict keys as a row": [[133, "dataframe-from-dict-with-dict-keys-as-a-row"]], "DataFrame from dict with key and value as a column": [[133, "dataframe-from-dict-with-key-and-value-as-a-column"]], "DataFrame from dict with required columns only": [[133, "dataframe-from-dict-with-required-columns-only"]], "DataFrame from dict with user-defined indexes": [[133, "dataframe-from-dict-with-user-defined-indexes"]], "DataFrame metadata": [[132, "dataframe-metadata"]], "DataFrame modification": [[132, "dataframe-modification"]], "DataFrame rename columns": [[132, "dataframe-rename-columns"]], "DataFrame selection": [[132, "dataframe-selection"]], "DataFrame to dict by row": [[140, "dataframe-to-dict-by-row"]], "DataFrame to dict by row index": [[140, "dataframe-to-dict-by-row-index"]], "DataFrame to dict using into parameter": [[140, "dataframe-to-dict-using-into-parameter"]], "DataFrame to dict with a list of values": [[140, "dataframe-to-dict-with-a-list-of-values"]], "DataFrame to dict with one column as the key": [[140, "dataframe-to-dict-with-one-column-as-the-key"]], "DataFrame to dict with pandas series of values": [[140, "dataframe-to-dict-with-pandas-series-of-values"]], "DataFrame to dict without header and index": [[140, "dataframe-to-dict-without-header-and-index"]], "Dataframe from CSV": [[132, "dataframe-from-csv"]], "Dataframe from dict": [[132, "dataframe-from-dict"]], "Datasets": [[9, "datasets"]], "Decorating Functions with Parameters": [[37, "decorating-functions-with-parameters"]], "Decorators in Python": [[37, "decorators-in-python"]], "Defining a Class in Python": [[102, "defining-a-class-in-python"]], "Defining a Closure Function": [[36, "defining-a-closure-function"]], "Defining a Function": [[74, "defining-a-function"]], "Defining a function with parameters": [[74, "defining-a-function-with-parameters"]], "Defining a function with parameters and return value": [[74, "defining-a-function-with-parameters-and-return-value"]], "Defining a function without any parameters": [[74, "defining-a-function-without-any-parameters"]], "Defining a function without parameters and return value": [[74, "defining-a-function-without-parameters-and-return-value"]], "Definition": [[3, "definition"], [4, "definition"], [5, "definition"], [7, "definition"]], "Delete Objects": [[102, "delete-objects"]], "Delete object properties": [[102, "delete-object-properties"]], "Delete/Remove List Elements": [[53, "delete-remove-list-elements"]], "Deleting Files": [[68, "deleting-files"]], "Density Estimation": [[1, "density-estimation"]], "Deployed Gradio app structure": [[155, "deployed-gradio-app-structure"]], "Deploying our FoodVision Mini app to HuggingFace Spaces": [[155, "deploying-our-foodvision-mini-app-to-huggingface-spaces"]], "Description": [[3, "description"]], "Determinant": [[128, "determinant"]], "Dictionary Built-in Dictionary Functions": [[55, "dictionary-built-in-dictionary-functions"]], "Differences Between Interpreter and Compiler": [[98, "differences-between-interpreter-and-compiler"]], "Differences between Generator function and Normal function": [[35, "differences-between-generator-function-and-normal-function"]], "Different types of ML \ud83d\udcda": [[0, "different-types-of-ml"]], "Different types of machine learning model deployment": [[155, "different-types-of-machine-learning-model-deployment"]], "Different ways to track machine learning experiments": [[153, "different-ways-to-track-machine-learning-experiments"]], "Disadvantages of Recursion": [[78, "disadvantages-of-recursion"]], "Display numbers in floating-point format": [[94, "display-numbers-in-floating-point-format"]], "Display output Number in various type format": [[94, "display-output-number-in-various-type-format"]], "Dissimilarity Measure": [[30, "dissimilarity-measure"]], "Docstring Formats": [[84, "docstring-formats"]], "Docstrings": [[74, "docstrings"]], "Dot product": [[32, "dot-product"]], "Download different datasets": [[153, "download-different-datasets"]], "Downloading our FoodVision Mini app files": [[155, "downloading-our-foodvision-mini-app-files"]], "Draw Decision Boundaries": [[14, "draw-decision-boundaries"], [15, "draw-decision-boundaries"]], "Draw a scatterplot for each pairwise relationship": [[176, "draw-a-scatterplot-for-each-pairwise-relationship"]], "Draw strips of observations on top of a box plot": [[170, "draw-strips-of-observations-on-top-of-a-box-plot"]], "Draw strips of observations on top of a violin plot": [[170, "draw-strips-of-observations-on-top-of-a-violin-plot"]], "Draw swarm observations on top of a violin plot": [[170, "draw-swarm-observations-on-top-of-a-violin-plot"]], "Drop NA from defined rows": [[138, "drop-na-from-defined-rows"]], "Drop all duplicates": [[137, "drop-all-duplicates"]], "Drop all the columns using loc": [[136, "drop-all-the-columns-using-loc"]], "Drop column by index position": [[136, "drop-column-by-index-position"]], "Drop column by suppressing errors": [[136, "drop-column-by-suppressing-errors"]], "Drop column from multi-index DataFrame": [[136, "drop-column-from-multi-index-dataframe"]], "Drop column in place": [[136, "drop-column-in-place"]], "Drop column using a function": [[136, "drop-column-using-a-function"]], "Drop column using pandas DataFrame delete": [[136, "drop-column-using-pandas-dataframe-delete"]], "Drop column using pandas DataFrame.pop() function": [[136, "drop-column-using-pandas-dataframe-pop-function"]], "Drop column where all values are missing": [[138, "drop-column-where-all-values-are-missing"]], "Drop column where at least one value is missing": [[138, "drop-column-where-at-least-one-value-is-missing"]], "Drop column with missing values in place": [[138, "drop-column-with-missing-values-in-place"]], "Drop column with the number of NA": [[138, "drop-column-with-the-number-of-na"]], "Drop columns": [[132, "drop-columns"]], "Drop columns in pandas DataFrame": [[136, "drop-columns-in-pandas-dataframe"]], "Drop columns with NA in pandas DataFrame": [[138, "drop-columns-with-na-in-pandas-dataframe"]], "Drop duplicates and reset the index": [[137, "drop-duplicates-and-reset-the-index"], [138, "drop-duplicates-and-reset-the-index"]], "Drop duplicates but keep first": [[137, "drop-duplicates-but-keep-first"]], "Drop duplicates but keep last": [[137, "drop-duplicates-but-keep-last"]], "Drop duplicates from defined columns": [[137, "drop-duplicates-from-defined-columns"]], "Drop duplicates in pandas DataFrame": [[137, "drop-duplicates-in-pandas-dataframe"]], "Drop duplicates in place": [[137, "drop-duplicates-in-place"]], "Drop first n columns": [[136, "drop-first-n-columns"]], "Drop multiple columns": [[136, "drop-multiple-columns"]], "Drop range of columns using iloc": [[136, "drop-range-of-columns-using-iloc"]], "Drop single column": [[136, "drop-single-column"]], "Drop the last column": [[136, "drop-the-last-column"]], "Encapsulation": [[101, "encapsulation"]], "Enjoy Learning \ud83d\ude03": [[185, "enjoy-learning"]], "Enumerate": [[71, "enumerate"]], "Equation 1 overview": [[154, "equation-1-overview"]], "Equation 1: Split data into patches and creating the class, position and patch embedding": [[154, "equation-1-split-data-into-patches-and-creating-the-class-position-and-patch-embedding"]], "Equation 2 overview": [[154, "equation-2-overview"]], "Equation 2: Multi-Head Attention (MSA)": [[154, "equation-2-multi-head-attention-msa"]], "Equation 3 overview": [[154, "equation-3-overview"]], "Equation 3: Multilayer Perceptron (MLP)": [[154, "equation-3-multilayer-perceptron-mlp"]], "Equation 4 overview": [[154, "equation-4-overview"]], "Error Handling": [[116, "error-handling"]], "Escape Sequence": [[52, "escape-sequence"]], "Escape character \\": [[39, "escape-character"]], "Essentials": [[185, "essentials"]], "Estimating Parameters for a Gaussian": [[1, "estimating-parameters-for-a-gaussian"]], "Euclidian Distance": [[30, "euclidian-distance"]], "Evaluate model by plotting loss curves": [[152, "evaluate-model-by-plotting-loss-curves"]], "Evaluating a model trained with non-linear activation functions": [[148, "evaluating-a-model-trained-with-non-linear-activation-functions"]], "Example 1. Even function": [[27, "example-1-even-function"]], "Example 10: Print year, month, hour, minute and timestamp": [[59, "example-10-print-year-month-hour-minute-and-timestamp"]], "Example 11: Difference between two dates and times": [[59, "example-11-difference-between-two-dates-and-times"]], "Example 12: Difference between two timedelta objects": [[59, "example-12-difference-between-two-timedelta-objects"]], "Example 13: Printing negative timedelta object": [[59, "example-13-printing-negative-timedelta-object"]], "Example 14: Time duration in seconds": [[59, "example-14-time-duration-in-seconds"]], "Example 15: Format date using strftime()": [[59, "example-15-format-date-using-strftime"]], "Example 16: strptime()": [[59, "example-16-strptime"]], "Example 1:": [[46, "example-1"], [87, "example-1"]], "Example 1: Current time using datetime object": [[63, "example-1-current-time-using-datetime-object"]], "Example 1: Declaring and assigning value to a constant": [[90, "example-1-declaring-and-assigning-value-to-a-constant"]], "Example 1: Declaring and assigning value to a variable": [[90, "example-1-declaring-and-assigning-value-to-a-variable"]], "Example 1: Get Current Date and Time": [[59, "example-1-get-current-date-and-time"]], "Example 1: Python get today\u2019s date": [[62, "example-1-python-get-todays-date"]], "Example 1: Python sleep()": [[66, "example-1-python-sleep"]], "Example 1: Python timestamp to datetime": [[64, "example-1-python-timestamp-to-datetime"]], "Example 1: datetime to string using strftime()": [[60, "example-1-datetime-to-string-using-strftime"]], "Example 1: string to datetime object": [[61, "example-1-string-to-datetime-object"]], "Example 2:": [[46, "example-2"], [87, "example-2"]], "Example 2: Creating string from a timestamp": [[60, "example-2-creating-string-from-a-timestamp"]], "Example 2: Current date in different formats": [[62, "example-2-current-date-in-different-formats"]], "Example 2: Current time using time module": [[63, "example-2-current-time-using-time-module"]], "Example 2: Declaring multiple variables in one line** using comma  ,  and semicolon ;": [[90, "example-2-declaring-multiple-variables-in-one-line-using-comma-and-semicolon"]], "Example 2: Get Current Date": [[59, "example-2-get-current-date"]], "Example 2: Python create a digital clock": [[66, "example-2-python-create-a-digital-clock"]], "Example 2: Python datetime to timestamp": [[64, "example-2-python-datetime-to-timestamp"]], "Example 2: string to datetime object": [[61, "example-2-string-to-datetime-object"]], "Example 3: Changing the value of a variable": [[90, "example-3-changing-the-value-of-a-variable"]], "Example 3: Current time of a timezone": [[63, "example-3-current-time-of-a-timezone"]], "Example 3: Date object to represent a date": [[59, "example-3-date-object-to-represent-a-date"]], "Example 3: Get the current date and time": [[62, "example-3-get-the-current-date-and-time"]], "Example 3: Locale\u2019s appropriate date and time": [[60, "example-3-locales-appropriate-date-and-time"]], "Example 3: Python multithreading": [[66, "example-3-python-multithreading"]], "Example 4: Get current date": [[59, "example-4-get-current-date"]], "Example 4: Time Objects to Represent Time": [[63, "example-4-time-objects-to-represent-time"]], "Example 4: sleep() in a multithreaded program": [[66, "example-4-sleep-in-a-multithreaded-program"]], "Example 5: Difference Between Two Points in Time Using": [[63, "example-5-difference-between-two-points-in-time-using"]], "Example 5: Get date from a timestamp": [[59, "example-5-get-date-from-a-timestamp"]], "Example 6: Difference Between Two Points in Time Using timedelata": [[63, "example-6-difference-between-two-points-in-time-using-timedelata"]], "Example 6: Print today\u2019s year, month and day": [[59, "example-6-print-todays-year-month-and-day"]], "Example 7: Time object to represent time": [[59, "example-7-time-object-to-represent-time"]], "Example 8: Print hour, minute, second and microsecond": [[59, "example-8-print-hour-minute-second-and-microsecond"]], "Example 9: Python datetime object": [[59, "example-9-python-datetime-object"]], "Example : Arithmetic operators in Python": [[95, "example-arithmetic-operators-in-python"]], "Example : Comparison operators in Python": [[95, "example-comparison-operators-in-python"]], "Example : Identity operators in Python": [[95, "example-identity-operators-in-python"]], "Example : Logical operators in Python": [[95, "example-logical-operators-in-python"]], "Example : Membership operators in Python": [[95, "example-membership-operators-in-python"]], "Example : Share a global Variable Across Python Modules": [[76, "example-share-a-global-variable-across-python-modules"]], "Example Using decimal Module": [[80, "example-using-decimal-module"]], "Example Using math Module": [[80, "example-using-math-module"]], "Example Using operator Module": [[80, "example-using-operator-module"]], "Example Using os Module": [[80, "example-using-os-module"]], "Example Using random Module": [[80, "example-using-random-module"]], "Example Using statistics Module": [[80, "example-using-statistics-module"]], "Example Using string Module": [[80, "example-using-string-module"]], "Example Using sys Module": [[80, "example-using-sys-module"]], "Example of Inheritance in Python": [[103, "example-of-inheritance-in-python"]], "Example of Method Overriding in Python": [[103, "example-of-method-overriding-in-python"]], "Example of RegEx with Metacharacters": [[39, "example-of-regex-with-metacharacters"]], "Example to convert pandas DataFrame to dict": [[140, "example-to-convert-pandas-dataframe-to-dict"]], "Example:": [[49, "example"], [87, "example"]], "Example: Nested for loop": [[47, "example-nested-for-loop"]], "Example: Nested for loop to print pattern": [[47, "example-nested-for-loop-to-print-pattern"]], "Example: Nested while loop": [[48, "example-nested-while-loop"]], "Example: Nested while loop to print the pattern": [[48, "example-nested-while-loop-to-print-the-pattern"]], "Example: User-Defined Exception in Python": [[72, "example-user-defined-exception-in-python"]], "Examples": [[28, "examples"], [29, "examples"]], "Exceptions in Python": [[71, "exceptions-in-python"]], "Exercise 10: Merge two data frames using the following condition": [[144, "exercise-10-merge-two-data-frames-using-the-following-condition"]], "Exercise 1: From the given dataset print the first and last five rows": [[144, "exercise-1-from-the-given-dataset-print-the-first-and-last-five-rows"]], "Exercise 1: Read Total profit of all months and show it using a line plot": [[123, "exercise-1-read-total-profit-of-all-months-and-show-it-using-a-line-plot"]], "Exercise 2: Clean the dataset and update the CSV file": [[144, "exercise-2-clean-the-dataset-and-update-the-csv-file"]], "Exercise 2: Get total profit of all months and show line plot with the following Style properties": [[123, "exercise-2-get-total-profit-of-all-months-and-show-line-plot-with-the-following-style-properties"]], "Exercise 3: Find the most expensive car company name": [[144, "exercise-3-find-the-most-expensive-car-company-name"]], "Exercise 3: Read all product sales data and show it  using a multiline plot": [[123, "exercise-3-read-all-product-sales-data-and-show-it-using-a-multiline-plot"]], "Exercise 4: Print All Toyota Cars details": [[144, "exercise-4-print-all-toyota-cars-details"]], "Exercise 4: Read toothpaste sales data of each month and show it using a scatter plot": [[123, "exercise-4-read-toothpaste-sales-data-of-each-month-and-show-it-using-a-scatter-plot"]], "Exercise 5: Count total cars per company": [[144, "exercise-5-count-total-cars-per-company"]], "Exercise 5: Read face cream and facewash product sales data and show it using the bar chart": [[123, "exercise-5-read-face-cream-and-facewash-product-sales-data-and-show-it-using-the-bar-chart"]], "Exercise 6: Find each company\u2019s Higesht price car": [[144, "exercise-6-find-each-companys-higesht-price-car"]], "Exercise 6: Read sales data of bathing soap of all months and show it using a bar chart. Save this plot to your hard disk": [[123, "exercise-6-read-sales-data-of-bathing-soap-of-all-months-and-show-it-using-a-bar-chart-save-this-plot-to-your-hard-disk"]], "Exercise 7: Find the average mileage of each car making company": [[144, "exercise-7-find-the-average-mileage-of-each-car-making-company"]], "Exercise 7: Read the total profit of each month and show it using the histogram to see the most common profit ranges": [[123, "exercise-7-read-the-total-profit-of-each-month-and-show-it-using-the-histogram-to-see-the-most-common-profit-ranges"]], "Exercise 8: Calculate total sale data for last year for each product and show it using a Pie chart": [[123, "exercise-8-calculate-total-sale-data-for-last-year-for-each-product-and-show-it-using-a-pie-chart"]], "Exercise 8: Sort all cars by Price column": [[144, "exercise-8-sort-all-cars-by-price-column"]], "Exercise 9: Concatenate two data frames using the following conditions": [[144, "exercise-9-concatenate-two-data-frames-using-the-following-conditions"]], "Exercise 9: Read Bathing soap facewash of all months and display it using the Subplot": [[123, "exercise-9-read-bathing-soap-facewash-of-all-months-and-display-it-using-the-subplot"]], "Exercise Question 10: Read all product sales data and show it using the stack plot": [[123, "exercise-question-10-read-all-product-sales-data-and-show-it-using-the-stack-plot"]], "Exercises \u279e <span class='label label-default'>Level 1</span>": [[37, "exercises-level-1"], [39, "exercises-level-1"], [45, "exercises-level-1"], [47, "exercises-level-1"], [53, "exercises-level-1"], [54, "exercises-level-1"], [56, "exercises-level-1"], [64, "exercises-level-1"], [68, "exercises-level-1"], [71, "exercises-level-1"], [74, "exercises-level-1"], [80, "exercises-level-1"], [90, "exercises-level-1"], [101, "exercises-level-1"]], "Exercises \u279e <span class='label label-default'>Level 2</span>": [[37, "exercises-level-2"], [39, "exercises-level-2"], [45, "exercises-level-2"], [47, "exercises-level-2"], [53, "exercises-level-2"], [54, "exercises-level-2"], [56, "exercises-level-2"], [68, "exercises-level-2"], [74, "exercises-level-2"], [80, "exercises-level-2"], [90, "exercises-level-2"], [101, "exercises-level-2"]], "Exercises \u279e <span class='label label-default'>Level 3</span>": [[37, "exercises-level-3"], [39, "exercises-level-3"], [45, "exercises-level-3"], [47, "exercises-level-3"], [56, "exercises-level-3"], [74, "exercises-level-3"], [80, "exercises-level-3"]], "Expert Level": [[184, "expert-level"]], "Exploring Figure 1": [[154, "exploring-figure-1"]], "Exploring Table 1": [[154, "exploring-table-1"]], "Exporting Data": [[132, "exporting-data"]], "Extra learning": [[147, "extra-learning"]], "Extra resources": [[148, "extra-resources"], [149, "extra-resources"], [150, "extra-resources"], [151, "extra-resources"], [153, "extra-resources"], [155, "extra-resources"]], "Extra rsources": [[154, "extra-rsources"]], "Extra-curriculum": [[152, "extra-curriculum"]], "FacetGrid": [[177, "facetgrid"], [177, "id1"]], "Factor Plot": [[174, "factor-plot"]], "Fashion MNIST": [[9, "fashion-mnist"]], "Feature 1": [[116, "feature-1"]], "Feature 2": [[116, "feature-2"]], "Feature 3": [[116, "feature-3"]], "Feature Scaling": [[4, "feature-scaling"]], "Features (variables)": [[4, "features-variables"]], "File Positions": [[68, "file-positions"]], "File Types": [[68, "file-types"]], "File with csv Extension": [[68, "file-with-csv-extension"]], "File with json Extension": [[68, "file-with-json-extension"]], "File with txt Extension": [[68, "file-with-txt-extension"]], "File with xlsx Extension": [[68, "file-with-xlsx-extension"]], "File with xml Extension": [[68, "file-with-xml-extension"]], "Files": [[68, "files"]], "Filter, Sort, and Groupby": [[132, "filter-sort-and-groupby"]], "Filtering Data": [[143, "filtering-data"]], "Find Anomalies Using Gaussian Distribution": [[8, "find-anomalies-using-gaussian-distribution"]], "Finding the min, max, mean, sum, etc (aggregation)": [[146, "finding-the-min-max-mean-sum-etc-aggregation"]], "Fing Outliers": [[8, "fing-outliers"]], "Flatten Data": [[129, "flatten-data"]], "Flattening the patch embedding with torch.nn.Flatten()": [[154, "flattening-the-patch-embedding-with-torch-nn-flatten"]], "FoodVision Mini model deployment experiment outline": [[155, "foodvision-mini-model-deployment-experiment-outline"]], "For instance if you want to generate a list of numbers": [[57, "for-instance-if-you-want-to-generate-a-list-of-numbers"]], "Format Code List": [[60, "format-code-list"], [61, "format-code-list"]], "Format output strings by its positions": [[94, "format-output-strings-by-its-positions"]], "Forward (or Feedforward) Propagation": [[7, "forward-or-feedforward-propagation"]], "Forward Propagation Example": [[7, "forward-propagation-example"]], "Freezing the base model and changing the output layer to suit our needs": [[152, "freezing-the-base-model-and-changing-the-output-layer-to-suit-our-needs"]], "Frozenset methods": [[56, "frozenset-methods"]], "Function Argument and Parameter": [[77, "function-argument-and-parameter"]], "Function as a Parameter": [[36, "function-as-a-parameter"]], "Function as a Parameter of Another Function": [[77, "function-as-a-parameter-of-another-function"]], "Function as a Return Value": [[36, "function-as-a-return-value"]], "Function pass Statement": [[74, "function-pass-statement"]], "Function return Statement": [[74, "function-return-statement"]], "Functionizing training and test loops": [[149, "functionizing-training-and-test-loops"]], "Functions in Python Math Module": [[82, "functions-in-python-math-module"]], "Gaussian (Normal) Distribution": [[1, "gaussian-normal-distribution"]], "General form": [[27, "general-form"]], "Generate Random Numbers": [[129, "generate-random-numbers"]], "Generators in Python": [[35, "generators-in-python"]], "Generic Seaborn Plots:": [[164, "generic-seaborn-plots"]], "Get Current Directory getcwd() -": [[69, "get-current-directory-getcwd"]], "Get Data": [[154, "get-data"]], "Get data": [[150, "get-data"], [151, "get-data"], [152, "get-data"], [153, "get-data"], [156, "get-data"], [157, "get-data"]], "Get multiple input values from a user in one line": [[94, "get-multiple-input-values-from-a-user-in-one-line"]], "Get the statistics of DataFrame": [[132, "get-the-statistics-of-dataframe"]], "Getting Started with Python": [[24, "getting-started-with-python"]], "Getting a dataset": [[149, "getting-a-dataset"]], "Getting a pretrained ViT model and creating a feature extractor": [[154, "getting-a-pretrained-vit-model-and-creating-a-feature-extractor"]], "Getting a pretrained model": [[152, "getting-a-pretrained-model"]], "Getting a pretrained model, freezing the base layers and changing the classifier head": [[153, "getting-a-pretrained-model-freezing-the-base-layers-and-changing-the-classifier-head"]], "Getting a summary of our model with torchinfo.summary()": [[152, "getting-a-summary-of-our-model-with-torchinfo-summary"]], "Getting a visual summary of our ViT model": [[154, "getting-a-visual-summary-of-our-vit-model"]], "Getting back to Decorators": [[37, "getting-back-to-decorators"]], "Getting data": [[155, "getting-data"]], "Getting information from tensors": [[146, "getting-information-from-tensors"]], "Getting prediction probabilities for a multi-class PyTorch model": [[148, "getting-prediction-probabilities-for-a-multi-class-pytorch-model"]], "Getting setup": [[152, "getting-setup"], [153, "getting-setup"], [154, "getting-setup"], [155, "getting-setup"]], "Getting specific: What\u2019s ViT made of?": [[154, "getting-specific-whats-vit-made-of"]], "Global Variables": [[75, "global-variables"]], "Global Variables Across Python Modules": [[76, "global-variables-across-python-modules"]], "Global and local variables": [[75, "global-and-local-variables"]], "Global in Nested Functions": [[76, "global-in-nested-functions"]], "Going Modular Scripts": [[159, "going-modular-scripts"]], "Going Modular: Part 1 (cell mode)": [[156, "going-modular-part-1-cell-mode"]], "Going Modular: Part 2 (script mode)": [[157, "going-modular-part-2-script-mode"]], "Going from raw model outputs to predicted labels (logits -> prediction probabilities -> prediction labels)": [[148, "going-from-raw-model-outputs-to-predicted-labels-logits-prediction-probabilities-prediction-labels"]], "Good news is \ud83d\ude0d": [[185, "good-news-is"]], "Gradient Computation": [[7, "gradient-computation"]], "Gradio overview": [[155, "gradio-overview"]], "Group the strips by a categorical variable": [[170, "group-the-strips-by-a-categorical-variable"]], "HIGH-LEVEL LANGUAGES": [[98, "high-level-languages"]], "Hamming Distance": [[30, "hamming-distance"]], "Handling timezone in Python": [[59, "handling-timezone-in-python"]], "Help topics": [[89, "help-topics"]], "Here is a list of all the escape sequences supported by Python.": [[52, "here-is-a-list-of-all-the-escape-sequences-supported-by-python"]], "Here\u2019s my first section": [[21, "heres-my-first-section"], [110, "heres-my-first-section"], [113, "heres-my-first-section"], [181, "heres-my-first-section"]], "Here\u2019s my sample title": [[21, "heres-my-sample-title"], [110, "heres-my-sample-title"], [113, "heres-my-sample-title"], [181, "heres-my-sample-title"]], "Hierarchical Inheritance": [[103, "hierarchical-inheritance"]], "Higher Order Functions": [[36, "higher-order-functions"]], "Histogram": [[122, "histogram"]], "How Are Sets Better Than Other DataTypes?": [[56, "how-are-sets-better-than-other-datatypes"]], "How strftime() works?": [[60, "how-strftime-works"]], "How strptime() works?": [[61, "how-strptime-works"]], "How to Install NumPy?": [[125, "how-to-install-numpy"]], "How to access characters in a string?": [[52, "how-to-access-characters-in-a-string"]], "How to call a function in python?": [[74, "how-to-call-a-function-in-python"]], "How to change or delete a string?": [[52, "how-to-change-or-delete-a-string"]], "How to create a string in Python?": [[52, "how-to-create-a-string-in-python"]], "How to deal with overfitting": [[150, "how-to-deal-with-overfitting"]], "How to deal with underfitting": [[150, "how-to-deal-with-underfitting"]], "How to get current date and time in Python?": [[62, "how-to-get-current-date-and-time-in-python"]], "How to import modules in Python?": [[80, "how-to-import-modules-in-python"]], "How to learn Python?": [[22, "how-to-learn-python"]], "How to print blank lines": [[87, "how-to-print-blank-lines"]], "How to slice a string in Python?": [[52, "how-to-slice-a-string-in-python"]], "How to slice lists in Python?": [[53, "how-to-slice-lists-in-python"]], "How to use DataFrame.head() function": [[135, "how-to-use-dataframe-head-function"]], "How to use DataFrame.tail() function": [[135, "how-to-use-dataframe-tail-function"]], "How\u2019s it going to function?": [[155, "hows-it-going-to-function"]], "Hybrid Inheritance": [[103, "hybrid-inheritance"]], "Hypothesis": [[4, "hypothesis"]], "Hypothesis (the Model)": [[5, "hypothesis-the-model"]], "Identity matrix": [[31, "identity-matrix"]], "Illustrate Hidden Layers Perceptrons": [[17, "illustrate-hidden-layers-perceptrons"], [18, "illustrate-hidden-layers-perceptrons"], [19, "illustrate-hidden-layers-perceptrons"]], "Import Dependencies": [[8, "import-dependencies"], [10, "import-dependencies"], [11, "import-dependencies"], [12, "import-dependencies"], [13, "import-dependencies"], [14, "import-dependencies"], [15, "import-dependencies"], [16, "import-dependencies"], [17, "import-dependencies"], [18, "import-dependencies"], [19, "import-dependencies"]], "Import NumPy and Check Version": [[125, "import-numpy-and-check-version"]], "Importing Data": [[132, "importing-data"]], "Importing PyTorch": [[146, "importing-pytorch"]], "Importing PyTorch and setting up device-agnostic code": [[150, "importing-pytorch-and-setting-up-device-agnostic-code"]], "Importing module from a package": [[83, "importing-module-from-a-package"]], "Importing the Package": [[116, "importing-the-package"]], "Improving a model (from a model perspective)": [[148, "improving-a-model-from-a-model-perspective"]], "In the upcoming tutorials, we will deep dive into specific concepts of Python, hold on your breath and start your journey": [[24, "in-the-upcoming-tutorials-we-will-deep-dive-into-specific-concepts-of-python-hold-on-your-breath-and-start-your-journey"]], "Index": [[132, "index"]], "Indexing": [[132, "indexing"]], "Indexing (selecting data from tensors)": [[146, "indexing-selecting-data-from-tensors"]], "Indexing a 1D array": [[127, "indexing-a-1d-array"]], "Indexing a 2D array (matrices)": [[127, "indexing-a-2d-array-matrices"]], "Informal introduction to python: using python as calculator": [[24, "informal-introduction-to-python-using-python-as-calculator"]], "Inheritance": [[101, "inheritance"]], "Inheritance in Python": [[103, "inheritance-in-python"]], "Init and Train Linear Regression Model": [[11, "init-and-train-linear-regression-model"], [12, "init-and-train-linear-regression-model"], [13, "init-and-train-linear-regression-model"]], "Init and Train Logistic Regression Model": [[10, "init-and-train-logistic-regression-model"], [14, "init-and-train-logistic-regression-model"], [15, "init-and-train-logistic-regression-model"], [16, "init-and-train-logistic-regression-model"], [17, "init-and-train-logistic-regression-model"]], "Init and Train MLP Model": [[18, "init-and-train-mlp-model"], [19, "init-and-train-mlp-model"]], "Initializing the Langchain": [[116, "initializing-the-langchain"]], "Input and output shapes": [[148, "input-and-output-shapes"]], "Input and output shapes of a computer vision model": [[149, "input-and-output-shapes-of-a-computer-vision-model"]], "Inputs and outputs, layers and blocks": [[154, "inputs-and-outputs-layers-and-blocks"]], "Insert columns": [[132, "insert-columns"]], "Inspecting EffNetB2 loss curves": [[155, "inspecting-effnetb2-loss-curves"]], "Inspecting Strings": [[52, "inspecting-strings"]], "Inspecting ViT loss curves": [[155, "inspecting-vit-loss-curves"]], "Installation": [[116, "installation"]], "Instance Variables and Methods": [[101, "instance-variables-and-methods"]], "Integer array indexing": [[127, "integer-array-indexing"]], "Interactive widget to create a sequential cubehelix palette:": [[164, "interactive-widget-to-create-a-sequential-cubehelix-palette"]], "Intermediate Level": [[184, "intermediate-level"]], "Interpreter Vs Compiler": [[98, "interpreter-vs-compiler"]], "Introduction": [[116, "introduction"]], "Introduction to *args and **kwargs in Python": [[40, "introduction-to-args-and-kwargs-in-python"]], "Introduction to HuggingFace": [[114, "introduction-to-huggingface"]], "Introduction to Machine Learning! \ud83d\ude80": [[0, "introduction-to-machine-learning"]], "Introduction to tensors": [[146, "introduction-to-tensors"]], "Iris Flowers": [[9, "iris-flowers"]], "Iterate Dictionary using for loop": [[47, "iterate-dictionary-using-for-loop"]], "Iterate List using for loop": [[47, "iterate-list-using-for-loop"]], "Iterate List using while loop": [[48, "iterate-list-using-while-loop"]], "Iterate Numbers using while loop": [[48, "iterate-numbers-using-while-loop"]], "Iterate Set using for loop": [[47, "iterate-set-using-for-loop"]], "Iterate String using for loop": [[47, "iterate-string-using-for-loop"]], "Iterate String using while loop": [[48, "iterate-string-using-while-loop"]], "Iterate Tuple using for loop": [[47, "iterate-tuple-using-for-loop"]], "Iterating Through a string": [[52, "iterating-through-a-string"]], "Iterating Through an Iterator": [[34, "iterating-through-an-iterator"]], "Iterative statements": [[42, "iterative-statements"]], "Iterators in Python": [[34, "iterators-in-python"]], "Java is both Compiled and Interpreted.": [[98, "java-is-both-compiled-and-interpreted"]], "Join/Combine": [[132, "join-combine"]], "Jupyter Demos": [[1, "jupyter-demos"], [3, "jupyter-demos"], [4, "jupyter-demos"], [5, "jupyter-demos"], [7, "jupyter-demos"]], "K-Means Algorithm": [[3, "k-means-algorithm"]], "K-Means Algorithm Demo": [[10, "k-means-algorithm-demo"]], "KEY DIFFERENCE": [[98, "key-difference"]], "KEY SIMILARITIES": [[98, "key-similarities"]], "Key Points to Remember": [[57, "key-points-to-remember"], [93, "key-points-to-remember"]], "Key Points to Remember:": [[101, "key-points-to-remember"]], "LM Plot and Reg Plot": [[165, "lm-plot-and-reg-plot"]], "Lambda Function": [[57, "lambda-function"]], "LangGraphs": [[118, "langgraphs"]], "LangServe": [[119, "langserve"]], "LangSmith": [[120, "langsmith"]], "Langchain expression language": [[121, "langchain-expression-language"]], "Langchain modules": [[117, "langchain-modules"]], "Learn Python Programming": [[22, "learn-python-programming"]], "Let us see valid variable names": [[90, "let-us-see-valid-variable-names"]], "Letter Value (LV) Plot": [[175, "letter-value-lv-plot"]], "Let\u2019s break down the different components of the code.": [[87, "lets-break-down-the-different-components-of-the-code"]], "Let\u2019s discuss some plots that allow us to visualize the distribution of a dataset. These plots are:": [[168, "lets-discuss-some-plots-that-allow-us-to-visualize-the-distribution-of-a-dataset-these-plots-are"]], "Let\u2019s implement with dataset": [[168, "lets-implement-with-dataset"]], "Line Graph": [[122, "line-graph"]], "Linear Algebra": [[26, "linear-algebra"]], "Linear Algebra - Matrices": [[31, "linear-algebra-matrices"]], "Linear Algebra - Vectors": [[32, "linear-algebra-vectors"]], "Linear Regression": [[4, "linear-regression"]], "Linspace": [[129, "linspace"]], "List Comprehension vs String vs For Loop in Python": [[57, "list-comprehension-vs-string-vs-for-loop-in-python"]], "List Comprehension: Elegant way to create new List": [[53, "list-comprehension-elegant-way-to-create-new-list"]], "List Comprehensions vs Lambda functions": [[57, "list-comprehensions-vs-lambda-functions"]], "List Directories and Files listdir() -": [[69, "list-directories-and-files-listdir"]], "List Index": [[53, "list-index"]], "List comprehension can be combined with if statement": [[57, "list-comprehension-can-be-combined-with-if-statement"]], "Literal Collections": [[91, "literal-collections"]], "Load Data from File": [[129, "load-data-from-file"]], "Load Fifa Data": [[122, "load-fifa-data"]], "Load Necessary Libraries": [[122, "load-necessary-libraries"]], "Load in NumPy Library": [[126, "load-in-numpy-library"]], "Load in the best model and make predictions with it": [[153, "load-in-the-best-model-and-make-predictions-with-it"]], "Load the Data": [[8, "load-the-data"], [10, "load-the-data"], [11, "load-the-data"], [12, "load-the-data"], [13, "load-the-data"], [14, "load-the-data"], [15, "load-the-data"], [16, "load-the-data"], [17, "load-the-data"], [18, "load-the-data"], [19, "load-the-data"]], "Loading Datasets in Seaborn": [[161, "loading-datasets-in-seaborn"]], "Loading a saved PyTorch model\u2019s state_dict()": [[147, "loading-a-saved-pytorch-models-state-dict"]], "Loading data into Pandas": [[143, "loading-data-into-pandas"]], "Loading in a custom image with PyTorch": [[150, "loading-in-a-custom-image-with-pytorch"]], "Local Variables": [[75, "local-variables"]], "LogSpace": [[129, "logspace"]], "Logistic Regression": [[5, "logistic-regression"]], "Logistic Regression With Linear Boundary Demo": [[14, "logistic-regression-with-linear-boundary-demo"]], "Logistic Regression With Non-Linear Boundary Demo": [[15, "logistic-regression-with-non-linear-boundary-demo"]], "Loops in Python": [[47, "loops-in-python"], [48, "loops-in-python"]], "MACHINE CODE": [[98, "machine-code"]], "MNIST (Handwritten Digits)": [[9, "mnist-handwritten-digits"]], "Main takeaways": [[150, "main-takeaways"], [152, "main-takeaways"], [153, "main-takeaways"], [154, "main-takeaways"], [155, "main-takeaways"]], "Make a prediction on a custom image": [[150, "make-a-prediction-on-a-custom-image"]], "Make and evaluate random predictions with best model": [[149, "make-and-evaluate-random-predictions-with-best-model"]], "Make classification data and get it ready": [[148, "make-classification-data-and-get-it-ready"]], "Make predictions and evaluate the model": [[148, "make-predictions-and-evaluate-the-model"]], "Make predictions and get Model 0 results": [[149, "make-predictions-and-get-model-0-results"]], "Make predictions on a custom image": [[154, "make-predictions-on-a-custom-image"]], "Make predictions on images from the test set": [[152, "make-predictions-on-images-from-the-test-set"]], "Making a New Directory mkdir() -": [[69, "making-a-new-directory-mkdir"]], "Making a confusion matrix for further prediction evaluation": [[149, "making-a-confusion-matrix-for-further-prediction-evaluation"]], "Making a model (TinyVGG)": [[156, "making-a-model-tinyvgg"], [157, "making-a-model-tinyvgg"]], "Making a model (TinyVGG) (script mode)": [[157, "making-a-model-tinyvgg-script-mode"]], "Making a model (model_builder.py)": [[151, "making-a-model-model-builder-py"]], "Making and evaluating predictions with a PyTorch multi-class model": [[148, "making-and-evaluating-predictions-with-a-pytorch-multi-class-model"]], "Making and timing predictions with EffNetB2": [[155, "making-and-timing-predictions-with-effnetb2"]], "Making and timing predictions with ViT": [[155, "making-and-timing-predictions-with-vit"]], "Making changes to the data": [[143, "making-changes-to-the-data"]], "Making predictions": [[147, "making-predictions"]], "Making predictions on a custom image": [[152, "making-predictions-on-a-custom-image"]], "Making predictions using torch.inference_mode()": [[147, "making-predictions-using-torch-inference-mode"]], "Making predictions with a trained PyTorch model (inference)": [[147, "making-predictions-with-a-trained-pytorch-model-inference"]], "Making predictions with our trained models and timing them": [[155, "making-predictions-with-our-trained-models-and-timing-them"]], "Manhattan Distance": [[30, "manhattan-distance"]], "Manipulating tensors (tensor operations)": [[146, "manipulating-tensors-tensor-operations"]], "Markdown + notebooks": [[25, "markdown-notebooks"], [107, "markdown-notebooks"], [111, "markdown-notebooks"]], "Markdown Files": [[20, "markdown-files"], [108, "markdown-files"], [112, "markdown-files"]], "Match object": [[39, "match-object"]], "Mathematics": [[125, "mathematics"]], "Mathematics essentials": [[33, "mathematics-essentials"]], "Mathematics for Machine Learning": [[23, "mathematics-for-machine-learning"]], "Matplotlib": [[122, "matplotlib"]], "Matplotlib vs. Seaborn Plotting Code": [[163, "matplotlib-vs-seaborn-plotting-code"]], "Matrices": [[146, "matrices"]], "Matrix Multiplication": [[128, "matrix-multiplication"]], "Matrix addition": [[31, "matrix-addition"]], "Matrix determinant": [[31, "matrix-determinant"]], "Matrix inverse": [[31, "matrix-inverse"]], "Matrix multiplication": [[31, "matrix-multiplication"]], "Matrix multiplication (is all you need)": [[146, "matrix-multiplication-is-all-you-need"]], "Matrix operations": [[31, "matrix-operations"]], "Matrix subtraction": [[31, "matrix-subtraction"]], "Matrix transpose": [[31, "matrix-transpose"]], "MetaCharacters": [[39, "metacharacters"]], "Metadata info of DataFrame": [[132, "metadata-info-of-dataframe"]], "Method Overriding": [[103, "method-overriding"]], "Method Resolution Order in Python": [[103, "method-resolution-order-in-python"]], "Method to Modify Class Default Values": [[101, "method-to-modify-class-default-values"]], "Microchips Tests (Artificial)": [[9, "microchips-tests-artificial"]], "Minkowski Distance": [[30, "minkowski-distance"]], "Miscellaneous": [[129, "miscellaneous"]], "Model 0: Build a baseline model": [[149, "model-0-build-a-baseline-model"]], "Model 0: TinyVGG without data augmentation": [[150, "model-0-tinyvgg-without-data-augmentation"]], "Model 1: Building a better model with non-linearity": [[149, "model-1-building-a-better-model-with-non-linearity"]], "Model 1: TinyVGG with Data Augmentation": [[150, "model-1-tinyvgg-with-data-augmentation"]], "Model 2: Building a Convolutional Neural Network (CNN)": [[149, "model-2-building-a-convolutional-neural-network-cnn"]], "Modify Object Properties": [[102, "modify-object-properties"]], "Modifying a set in Python": [[56, "modifying-a-set-in-python"]], "More": [[125, "more"], [125, "id2"]], "More classification evaluation metrics": [[148, "more-classification-evaluation-metrics"]], "Moving our trained EffNetB2 model to our FoodVision Mini demo directory": [[155, "moving-our-trained-effnetb2-model-to-our-foodvision-mini-demo-directory"]], "Multi-class Classification": [[7, "multi-class-classification"]], "Multi-class Classification (One-vs-All)": [[5, "multi-class-classification-one-vs-all"]], "Multi-line Docstrings in Python": [[84, "multi-line-docstrings-in-python"]], "Multi-line statement": [[89, "multi-line-statement"]], "Multidimensional": [[28, "multidimensional"], [29, "multidimensional"]], "Multithreading in Python": [[66, "multithreading-in-python"]], "Multivariate Linear Regression Demo": [[11, "multivariate-linear-regression-demo"]], "Multivariate Logistic Regression Demo": [[16, "multivariate-logistic-regression-demo"], [17, "multivariate-logistic-regression-demo"]], "My workflow": [[151, "my-workflow"]], "My workflow for replicating papers": [[154, "my-workflow-for-replicating-papers"]], "MyST markdown": [[25, "myst-markdown"], [107, "myst-markdown"], [111, "myst-markdown"]], "Need of Encapsulation": [[101, "need-of-encapsulation"]], "Negative indexing": [[53, "negative-indexing"]], "Nested Loops in List Comprehension": [[57, "nested-loops-in-list-comprehension"]], "Nested break loops": [[49, "nested-break-loops"]], "Nested continue loops": [[49, "nested-continue-loops"]], "Nested for loops": [[47, "nested-for-loops"]], "Nested while loops": [[48, "nested-while-loops"]], "Network Model (Set of Neurons)": [[7, "network-model-set-of-neurons"]], "Neural Network": [[7, "neural-network"]], "Neural Network (Multilayer Perceptron) Demo": [[18, "neural-network-multilayer-perceptron-demo"], [19, "neural-network-multilayer-perceptron-demo"]], "Neuron Model (Logistic Unit)": [[7, "neuron-model-logistic-unit"]], "Non-Linear Y(X) Dependency (Artificial)": [[9, "non-linear-y-x-dependency-artificial"]], "Non-linear Regression Demo": [[12, "non-linear-regression-demo"]], "Nonlocal Variables": [[75, "nonlocal-variables"]], "Nonlocal variable in a nested function": [[36, "nonlocal-variable-in-a-nested-function"]], "Normal Equation": [[4, "normal-equation"]], "Notebooks with MyST Markdown": [[6, "notebooks-with-myst-markdown"], [109, "notebooks-with-myst-markdown"], [182, "notebooks-with-myst-markdown"]], "NumPy Array Types:": [[126, "numpy-array-types"]], "NumPy Basics": [[125, "numpy-basics"], [125, "id1"]], "Number Data Type in Python": [[51, "number-data-type-in-python"]], "Numpy Array basics": [[126, "numpy-array-basics"]], "Numpy Documentation": [[129, "numpy-documentation"]], "Numpy also provides many functions to create arrays:": [[126, "numpy-also-provides-many-functions-to-create-arrays"]], "OBJECT CODE": [[98, "object-code"]], "Object": [[101, "object"]], "Object Default Methods": [[101, "object-default-methods"]], "Object Method": [[101, "object-method"]], "Object Oriented Programming": [[101, "object-oriented-programming"]], "Object Properties": [[102, "object-properties"]], "Old style formatting": [[52, "old-style-formatting"]], "One of the most common errors in deep learning (shape errors)": [[146, "one-of-the-most-common-errors-in-deep-learning-shape-errors"]], "One or more times +": [[39, "one-or-more-times"]], "Operations": [[125, "operations"]], "Option 1: Loading Image Data Using ImageFolder": [[150, "option-1-loading-image-data-using-imagefolder"]], "Option 2: Loading Image Data with a Custom Dataset": [[150, "option-2-loading-image-data-with-a-custom-dataset"]], "Orthogonality and Parallelism": [[32, "orthogonality-and-parallelism"]], "Other Dictionary Operations": [[55, "other-dictionary-operations"]], "Other Frozenset methods": [[56, "other-frozenset-methods"]], "Other List Operations in Python": [[53, "other-list-operations-in-python"]], "Other Python Set Methods": [[56, "other-python-set-methods"]], "Other Set Operations": [[56, "other-set-operations"]], "Other Tuple Operations": [[54, "other-tuple-operations"]], "Other forms of transforms (data augmentation)": [[150, "other-forms-of-transforms-data-augmentation"]], "Output String justification": [[94, "output-string-justification"]], "Output formatting": [[94, "output-formatting"]], "Output text alignment specifying a width": [[94, "output-text-alignment-specifying-a-width"]], "Overfitting Problem": [[4, "overfitting-problem"], [5, "overfitting-problem"]], "Overloading Comparison Operators": [[104, "overloading-comparison-operators"]], "Overloading the + Operator": [[104, "overloading-the-operator"]], "Overriding parent method": [[101, "overriding-parent-method"]], "Package manager and virtual environment": [[24, "package-manager-and-virtual-environment"]], "Packing": [[71, "packing"]], "Packing Dictionaries": [[71, "packing-dictionaries"]], "Packing Lists": [[71, "packing-lists"]], "Packing and Unpacking Arguments in Python": [[71, "packing-and-unpacking-arguments-in-python"]], "PairGrid": [[176, "pairgrid"]], "Pandas DataFrame head, tail, at, iat": [[135, "pandas-dataframe-head-tail-at-iat"]], "Parameters": [[4, "parameters"]], "Parameters:": [[132, "parameters"]], "Part 1: with Iris dataset": [[176, "part-1-with-iris-dataset"]], "Part 1: with Tips dataset": [[176, "part-1-with-tips-dataset"]], "Part 1: with Titanic dataset": [[173, "part-1-with-titanic-dataset"]], "Part 2: with Tips dataset": [[173, "part-2-with-tips-dataset"]], "Passing Arguments with Key and Value": [[74, "passing-arguments-with-key-and-value"]], "Performance-speed tradeoff": [[149, "performance-speed-tradeoff"]], "Period .": [[39, "id3"]], "Pie Chart": [[122, "pie-chart"]], "Pie Chart #1": [[122, "pie-chart-1"]], "Pie Chart #2": [[122, "pie-chart-2"]], "Pie Chart #3": [[122, "pie-chart-3"]], "Placeholders": [[125, "placeholders"]], "Plot Precision/Recall Progress": [[8, "plot-precision-recall-progress"]], "Plot Test Dataset Predictions": [[16, "plot-test-dataset-predictions"], [17, "plot-test-dataset-predictions"], [18, "plot-test-dataset-predictions"], [19, "plot-test-dataset-predictions"]], "Plot feature extractor ViT model loss curves": [[154, "plot-feature-extractor-vit-model-loss-curves"]], "Plot the Clustering Results": [[10, "plot-the-clustering-results"]], "Plot the Data": [[8, "plot-the-data"], [10, "plot-the-data"], [12, "plot-the-data"], [14, "plot-the-data"], [15, "plot-the-data"], [16, "plot-the-data"], [17, "plot-the-data"], [18, "plot-the-data"], [19, "plot-the-data"]], "Plot the Model Predictions": [[11, "plot-the-model-predictions"], [12, "plot-the-model-predictions"], [13, "plot-the-model-predictions"]], "Plot the distribution on the vertical axis:": [[168, "plot-the-distribution-on-the-vertical-axis"]], "Plot the loss curves of Model 0": [[150, "plot-the-loss-curves-of-model-0"]], "Plot the loss curves of Model 1": [[150, "plot-the-loss-curves-of-model-1"]], "Plot the loss curves of our ViT model": [[154, "plot-the-loss-curves-of-our-vit-model"]], "Polymorphism": [[101, "polymorphism"]], "Polynomial Regression": [[4, "polynomial-regression"]], "Positional Arguments (Basic)": [[77, "positional-arguments-basic"]], "Positional min/max": [[146, "positional-min-max"]], "Practice Problem": [[94, "practice-problem"]], "Predict on a custom image with the best model": [[153, "predict-on-a-custom-image-with-the-best-model"]], "Predicting on custom images with a trained PyTorch model": [[150, "predicting-on-custom-images-with-a-trained-pytorch-model"]], "Prepara the Data for Training": [[10, "prepara-the-data-for-training"], [14, "prepara-the-data-for-training"]], "Prepare DataLoader": [[149, "prepare-dataloader"]], "Prepare the Data for Training": [[15, "prepare-the-data-for-training"]], "Prepare transforms for images": [[154, "prepare-transforms-for-images"]], "Preparing data for the pretrained ViT model": [[154, "preparing-data-for-the-pretrained-vit-model"]], "Preparing data to see if our model can model a straight line": [[148, "preparing-data-to-see-if-our-model-can-model-a-straight-line"]], "Prerequisites for learning decorators": [[37, "prerequisites-for-learning-decorators"]], "Print Training Results": [[16, "print-training-results"], [17, "print-training-results"]], "Print end command": [[87, "print-end-command"]], "Private members of parent class": [[103, "private-members-of-parent-class"]], "Product notation": [[28, "product-notation"]], "Programming Steps Comparision:": [[98, "programming-steps-comparision"]], "Properties": [[28, "properties"], [29, "properties"]], "Properties of identity matrix": [[31, "properties-of-identity-matrix"]], "Properties of matrix addition": [[31, "properties-of-matrix-addition"]], "Properties of matrix determinant": [[31, "properties-of-matrix-determinant"]], "Properties of matrix multiplication": [[31, "properties-of-matrix-multiplication"]], "Properties of matrix subtraction": [[31, "properties-of-matrix-subtraction"]], "Properties of matrix transpose": [[31, "properties-of-matrix-transpose"]], "Properties of scalar multiplication": [[31, "properties-of-scalar-multiplication"]], "Pros and cons of notebooks vs Python scripts": [[151, "pros-and-cons-of-notebooks-vs-python-scripts"]], "Putting custom image prediction together: building a function": [[150, "putting-custom-image-prediction-together-building-a-function"]], "Putting it all together": [[147, "putting-it-all-together"]], "Putting it all together to create ViT": [[154, "putting-it-all-together-to-create-vit"]], "Putting it all together: from image to embedding": [[154, "putting-it-all-together-from-image-to-embedding"]], "Putting things together by building a multi-class PyTorch model": [[148, "putting-things-together-by-building-a-multi-class-pytorch-model"]], "PyTorch Computer Vision": [[149, "pytorch-computer-vision"]], "PyTorch Custom Datasets": [[150, "pytorch-custom-datasets"]], "PyTorch Experiment Tracking": [[153, "pytorch-experiment-tracking"]], "PyTorch Fundamentals": [[146, "pytorch-fundamentals"]], "PyTorch Going Modular": [[151, "pytorch-going-modular"]], "PyTorch Model Deployment": [[155, "pytorch-model-deployment"]], "PyTorch Neural Network Classification": [[148, "pytorch-neural-network-classification"]], "PyTorch Paper Replicating": [[154, "pytorch-paper-replicating"]], "PyTorch Transfer Learning": [[152, "pytorch-transfer-learning"]], "PyTorch Workflow Fundamentals": [[147, "pytorch-workflow-fundamentals"]], "PyTorch in the wild": [[151, "pytorch-in-the-wild"], [157, "pytorch-in-the-wild"]], "PyTorch model building essentials": [[147, "pytorch-model-building-essentials"]], "PyTorch tensors & NumPy": [[146, "pytorch-tensors-numpy"]], "PyTorch testing loop": [[147, "pytorch-testing-loop"]], "PyTorch training loop": [[147, "pytorch-training-loop"]], "Python  Classes and Objects": [[102, "python-classes-and-objects"]], "Python **kwargs": [[40, "python-kwargs"]], "Python *args": [[40, "python-args"]], "Python *args and **kwargs": [[40, "python-args-and-kwargs"]], "Python - filter Function": [[37, "python-filter-function"]], "Python - map Function": [[37, "python-map-function"]], "Python @property decorator": [[38, "python-property-decorator"]], "Python Advanced Topics": [[22, "python-advanced-topics"], [41, "python-advanced-topics"]], "Python Anonymous/lambda Function": [[79, "python-anonymous-lambda-function"]], "Python Applications Area": [[24, "python-applications-area"]], "Python Arbitrary/Variable-length Arguments": [[77, "python-arbitrary-variable-length-arguments"]], "Python Built-In Modules Examples": [[80, "python-built-in-modules-examples"]], "Python Built-in Exceptions": [[70, "python-built-in-exceptions"]], "Python Built-in List Functions": [[53, "python-built-in-list-functions"]], "Python Built-in Tuple Functions": [[54, "python-built-in-tuple-functions"]], "Python Classes and Objects": [[102, "id1"]], "Python Closures": [[36, "python-closures"]], "Python Comments": [[84, "python-comments"]], "Python Comments Using Strings": [[84, "python-comments-using-strings"]], "Python Comments vs Docstrings": [[84, "python-comments-vs-docstrings"]], "Python Custom Exceptions": [[72, "python-custom-exceptions"]], "Python Data Types": [[22, "python-data-types"], [58, "python-data-types"], [92, "python-data-types"]], "Python DataFrame": [[132, "python-dataframe"]], "Python Date & Time Module": [[22, "python-date-time-module"], [67, "python-date-time-module"]], "Python Decimal": [[51, "python-decimal"]], "Python Decorators": [[37, "python-decorators"]], "Python Default Arguments": [[77, "python-default-arguments"]], "Python Dictionary": [[55, "python-dictionary"]], "Python Dictionary Comprehension": [[55, "python-dictionary-comprehension"]], "Python Dictionary Methods": [[55, "python-dictionary-methods"]], "Python Directory": [[69, "python-directory"]], "Python Directory and Files Management": [[69, "python-directory-and-files-management"]], "Python Docstrings": [[84, "python-docstrings"]], "Python Errors and Built-in Exceptions": [[70, "python-errors-and-built-in-exceptions"]], "Python Exceptions Handling Using try, except and finally statement": [[71, "python-exceptions-handling-using-try-except-and-finally-statement"]], "Python File I/O": [[68, "python-file-i-o"]], "Python File Methods": [[68, "python-file-methods"]], "Python Files": [[22, "python-files"], [73, "python-files"]], "Python Flow Control": [[22, "python-flow-control"], [50, "python-flow-control"]], "Python Flow-Control (Decision-Making) Statements": [[42, "python-flow-control-decision-making-statements"]], "Python Fractions": [[51, "python-fractions"]], "Python Frozenset": [[56, "python-frozenset"]], "Python Function Arguments": [[77, "python-function-arguments"]], "Python Functions": [[22, "python-functions"], [74, "python-functions"], [86, "python-functions"]], "Python Generator Expression": [[35, "python-generator-expression"]], "Python Generators with a Loop": [[35, "python-generators-with-a-loop"]], "Python Get Current time": [[63, "python-get-current-time"]], "Python Global, Local and Nonlocal variables": [[75, "python-global-local-and-nonlocal-variables"]], "Python Hello, World": [[87, "python-hello-world"]], "Python Infinite Iterators": [[34, "python-infinite-iterators"]], "Python Inheritance": [[103, "python-inheritance"]], "Python Input, Output and Import": [[94, "python-input-output-and-import"]], "Python Installation": [[24, "python-installation"]], "Python Introduction": [[22, "python-introduction"], [100, "python-introduction"]], "Python Iterators": [[34, "python-iterators"]], "Python Keyword Arguments": [[77, "python-keyword-arguments"]], "Python Keywords and Identifiers": [[88, "python-keywords-and-identifiers"]], "Python List": [[53, "python-list"]], "Python List Comprehension": [[57, "python-list-comprehension"]], "Python List Methods": [[53, "python-list-methods"]], "Python List Operations": [[53, "python-list-operations"]], "Python Literals": [[91, "python-literals"]], "Python Mathematical Functions": [[82, "python-mathematical-functions"]], "Python Mathematics": [[51, "python-mathematics"]], "Python Matplotlib": [[123, "python-matplotlib"], [124, "python-matplotlib"]], "Python Matplotlib Module": [[22, "python-matplotlib-module"]], "Python Module Search Path": [[80, "python-module-search-path"]], "Python Modules": [[80, "python-modules"]], "Python Modules List": [[80, "python-modules-list"]], "Python Multilevel Inheritance": [[103, "python-multilevel-inheritance"]], "Python Multiple Inheritance": [[103, "python-multiple-inheritance"]], "Python Namespace and Scope": [[96, "python-namespace-and-scope"]], "Python Nested if statement": [[46, "python-nested-if-statement"]], "Python NumPy": [[125, "python-numpy"]], "Python NumPy Array:": [[125, "python-numpy-array"], [126, "python-numpy-array"]], "Python NumPy Exercises": [[130, "python-numpy-exercises"]], "Python Numbers, Type Conversion and Mathematics": [[51, "python-numbers-type-conversion-and-mathematics"]], "Python Numpy Module": [[22, "python-numpy-module"], [131, "python-numpy-module"]], "Python OOPs Concepts": [[101, "python-oops-concepts"]], "Python Object Class": [[22, "python-object-class"], [105, "python-object-class"]], "Python Operator Overloading": [[104, "python-operator-overloading"], [104, "id1"]], "Python Operators": [[95, "python-operators"]], "Python Package": [[83, "python-package"]], "Python Pandas": [[132, "python-pandas"], [143, "python-pandas"], [144, "python-pandas"]], "Python Pandas Module": [[22, "python-pandas-module"], [145, "python-pandas-module"]], "Python Python Generators": [[35, "python-python-generators"]], "Python Random Module": [[81, "python-random-module"]], "Python Recursion": [[78, "python-recursion"]], "Python Recursive Function": [[78, "python-recursive-function"]], "Python RegEx": [[39, "python-regex"]], "Python RegEx Methods": [[39, "python-regex-methods"]], "Python Resources": [[22, "python-resources"]], "Python Seaborn": [[180, "python-seaborn"]], "Python Set Operations": [[56, "python-set-operations"]], "Python Sets": [[56, "python-sets"]], "Python Single Inheritance": [[103, "python-single-inheritance"]], "Python Special Functions": [[104, "python-special-functions"]], "Python Statement, Indentation and Comments": [[89, "python-statement-indentation-and-comments"]], "Python String Formatting": [[52, "python-string-formatting"]], "Python String Replication Operator (*)": [[52, "python-string-replication-operator"]], "Python Strings": [[24, "python-strings"], [52, "python-strings"]], "Python Strings Operations": [[52, "python-strings-operations"]], "Python Tuple": [[54, "python-tuple"]], "Python Type Conversion and Type Casting": [[93, "python-type-conversion-and-type-casting"]], "Python User-defined Functions": [[85, "python-user-defined-functions"]], "Python Variable Scope": [[96, "python-variable-scope"]], "Python Variables and Constants": [[90, "python-variables-and-constants"]], "Python __doc__ attribute": [[84, "python-doc-attribute"]], "Python datetime": [[59, "python-datetime"]], "Python docstrings": [[84, "id1"]], "Python for Loop": [[47, "python-for-loop"]], "Python format datetime": [[59, "python-format-datetime"]], "Python from-import statement": [[80, "python-from-import-statement"]], "Python global Keyword": [[76, "python-global-keyword"]], "Python if statement": [[43, "python-if-statement"]], "Python if-elif-else statement": [[45, "python-if-elif-else-statement"]], "Python if-else statement": [[44, "python-if-else-statement"]], "Python import statement": [[80, "python-import-statement"]], "Python lists": [[24, "python-lists"]], "Python sleep()": [[66, "python-sleep"]], "Python strftime()": [[60, "python-strftime"]], "Python strftime() - datetime object to string": [[59, "python-strftime-datetime-object-to-string"]], "Python strptime()": [[61, "python-strptime"]], "Python strptime() - string to datetime": [[59, "python-strptime-string-to-datetime"]], "Python super() function": [[103, "python-super-function"]], "Python time Module": [[65, "python-time-module"]], "Python time.asctime()": [[65, "python-time-asctime"]], "Python time.ctime()": [[65, "python-time-ctime"]], "Python time.gmtime()": [[65, "python-time-gmtime"]], "Python time.localtime()": [[65, "python-time-localtime"]], "Python time.mktime()": [[65, "python-time-mktime"]], "Python time.sleep()": [[65, "python-time-sleep"]], "Python time.strftime()": [[65, "python-time-strftime"]], "Python time.strptime()": [[65, "python-time-strptime"]], "Python time.time()": [[65, "python-time-time"]], "Python timestamp to datetime and vice-versa": [[64, "python-timestamp-to-datetime-and-vice-versa"]], "Python try with else clause": [[71, "python-try-with-else-clause"]], "Python try-finally Clause": [[71, "python-try-finally-clause"]], "Python while Loop": [[48, "python-while-loop"]], "Pytorch": [[160, "pytorch"]], "Quantifier {}": [[39, "quantifier"]], "Quickly add YAML metadata for MyST Notebooks": [[6, "quickly-add-yaml-metadata-for-myst-notebooks"], [109, "quickly-add-yaml-metadata-for-myst-notebooks"], [182, "quickly-add-yaml-metadata-for-myst-notebooks"]], "Quiz time": [[127, "quiz-time"]], "Raise error while renaming a column": [[139, "raise-error-while-renaming-a-column"]], "Raising Exceptions in Python": [[71, "raising-exceptions-in-python"]], "Raising an Exception": [[71, "raising-an-exception"]], "Random Initialization": [[7, "random-initialization"]], "Random number": [[126, "random-number"]], "Random tensors": [[146, "random-tensors"]], "Raw String to ignore escape sequence": [[52, "raw-string-to-ignore-escape-sequence"]], "Reading Data in Pandas": [[143, "reading-data-in-pandas"]], "Real World Examples": [[122, "real-world-examples"]], "Real world use cases": [[185, "real-world-use-cases"]], "Recreating non-linear data (red and blue circles)": [[148, "recreating-non-linear-data-red-and-blue-circles"]], "References": [[1, "references"], [3, "references"], [4, "references"], [5, "references"], [7, "references"]], "Regularization": [[4, "regularization"], [5, "regularization"]], "Reloading a module": [[80, "reloading-a-module"]], "Removing a Directory or a File remove() and rmdir() -": [[69, "removing-a-directory-or-a-file-remove-and-rmdir"]], "Removing elements from Dictionary": [[55, "removing-elements-from-dictionary"]], "Removing elements from a set": [[56, "removing-elements-from-a-set"]], "Rename a single column": [[139, "rename-a-single-column"]], "Rename all columns with a list": [[139, "rename-all-columns-with-a-list"]], "Rename column by adding prefix/suffix": [[139, "rename-column-by-adding-prefix-suffix"]], "Rename column by index position": [[139, "rename-column-by-index-position"]], "Rename column in multi-index DataFrame": [[139, "rename-column-in-multi-index-dataframe"]], "Rename column using DataFrame.set_axis()": [[139, "rename-column-using-dataframe-set-axis"]], "Rename column using a function": [[139, "rename-column-using-a-function"]], "Rename columns by removing leading and trailing spaces": [[139, "rename-columns-by-removing-leading-and-trailing-spaces"]], "Rename columns in Pandas DataFrame": [[139, "rename-columns-in-pandas-dataframe"]], "Rename columns in all levels": [[139, "rename-columns-in-all-levels"]], "Rename columns in defined level": [[139, "rename-columns-in-defined-level"]], "Rename columns in place": [[139, "rename-columns-in-place"]], "Rename multiple columns": [[139, "rename-multiple-columns"]], "Renaming a Directory or a File rename() -": [[69, "renaming-a-directory-or-a-file-rename"]], "Replicating Equation 2 with PyTorch layers": [[154, "replicating-equation-2-with-pytorch-layers"]], "Replicating Equation 3 with PyTorch layers": [[154, "replicating-equation-3-with-pytorch-layers"]], "Replicating non-linear activation functions": [[148, "replicating-non-linear-activation-functions"]], "Replicating the ViT paper: an overview": [[154, "replicating-the-vit-paper-an-overview"]], "Reset index and change column name": [[142, "reset-index-and-change-column-name"]], "Reset index and creates new column in level": [[142, "reset-index-and-creates-new-column-in-level"]], "Reset index and name other level": [[142, "reset-index-and-name-other-level"]], "Reset index by level": [[142, "reset-index-by-level"]], "Reset index in pandas DataFrame": [[142, "reset-index-in-pandas-dataframe"]], "Reset index in place": [[142, "reset-index-in-place"]], "Reset index starts from 1": [[142, "reset-index-starts-from-1"]], "Reset index to starts at 0": [[142, "reset-index-to-starts-at-0"]], "Reset index to the range of numbers": [[142, "reset-index-to-the-range-of-numbers"]], "Reset index without new column": [[142, "reset-index-without-new-column"]], "Reset multi-level index": [[142, "reset-multi-level-index"]], "Reshape Data": [[129, "reshape-data"]], "Reshaping, stacking, squeezing and unsqueezing": [[146, "reshaping-stacking-squeezing-and-unsqueezing"]], "Residplot()": [[167, "residplot"]], "Resources": [[124, "resources"], [131, "resources"], [145, "resources"], [160, "resources"], [180, "resources"]], "Return Boolean Values": [[74, "return-boolean-values"]], "Return Multiple Values": [[74, "return-multiple-values"]], "Return Single Value": [[74, "return-single-value"]], "Return a List": [[74, "return-a-list"]], "Reverse for loop": [[47, "reverse-for-loop"]], "Reverse for loop using range()": [[47, "reverse-for-loop-using-range"]], "Reverse while loop": [[48, "reverse-while-loop"]], "Rules and Naming Convention for Variables and constants": [[90, "rules-and-naming-convention-for-variables-and-constants"]], "Rules for writing identifiers": [[88, "rules-for-writing-identifiers"]], "Rules of global Keyword": [[76, "rules-of-global-keyword"]], "Running a notebook in cell mode": [[156, "running-a-notebook-in-cell-mode"]], "Running our FoodVision Mini demo locally": [[155, "running-our-foodvision-mini-demo-locally"]], "Running tensors on GPUs (and making faster computations)": [[146, "running-tensors-on-gpus-and-making-faster-computations"]], "Running the \u201cHello, World!\u201d Program": [[87, "running-the-hello-world-program"]], "Sample Roles and Directives": [[108, "sample-roles-and-directives"], [112, "sample-roles-and-directives"]], "Save and load best performing model": [[149, "save-and-load-best-performing-model"]], "Save feature extractor ViT model and check file size": [[154, "save-feature-extractor-vit-model-and-check-file-size"]], "Saving EffNetB2 feature extractor": [[155, "saving-effnetb2-feature-extractor"]], "Saving ViT feature extractor": [[155, "saving-vit-feature-extractor"]], "Saving a PyTorch model\u2019s state_dict()": [[147, "saving-a-pytorch-models-state-dict"]], "Saving and loading a PyTorch model": [[147, "saving-and-loading-a-pytorch-model"]], "Saving and loading a model": [[147, "saving-and-loading-a-model"]], "Saving as JSON File": [[68, "saving-as-json-file"]], "Saving our Data (Exporting into Desired Format)": [[143, "saving-our-data-exporting-into-desired-format"]], "Scalar": [[146, "scalar"]], "Scalar multiplication": [[31, "scalar-multiplication"], [32, "scalar-multiplication"]], "Scatter Plot and Joint Plot": [[166, "scatter-plot-and-joint-plot"]], "Seaborn Color Palettes": [[164, "seaborn-color-palettes"]], "Seaborn Lmplots:": [[165, "seaborn-lmplots"]], "Seaborn Regplots:": [[165, "seaborn-regplots"]], "Seaborn: Box Plot": [[171, "seaborn-box-plot"]], "Seaborn: Categorical Data Plots": [[169, "seaborn-categorical-data-plots"]], "Seaborn: Strip Plot": [[170, "seaborn-strip-plot"]], "Seaborn: Violin Plot": [[172, "seaborn-violin-plot"]], "Select best threshold": [[8, "select-best-threshold"]], "Select bottom n rows in pandas DataFrame": [[135, "select-bottom-n-rows-in-pandas-dataframe"]], "Select bottom rows except for first n rows": [[135, "select-bottom-rows-except-for-first-n-rows"]], "Select bottom rows from the multi index DataFrame": [[135, "select-bottom-rows-from-the-multi-index-dataframe"]], "Select top n rows in pandas DataFrame": [[135, "select-top-n-rows-in-pandas-dataframe"]], "Select top rows except for last n rows": [[135, "select-top-rows-except-for-last-n-rows"]], "Select top rows from multi-index DataFrames": [[135, "select-top-rows-from-multi-index-dataframes"]], "Select value using row and column labels using DataFrame.at": [[135, "select-value-using-row-and-column-labels-using-dataframe-at"]], "Select value using row and column position using DataFrame.iat": [[135, "select-value-using-row-and-column-position-using-dataframe-iat"]], "Selection": [[132, "selection"]], "Self Can Be Avoided": [[106, "self-can-be-avoided"]], "Self Is Here To Stay": [[106, "self-is-here-to-stay"]], "Series": [[132, "series"]], "Server Operational Parameters": [[9, "server-operational-parameters"]], "Set Difference": [[56, "set-difference"]], "Set Intersection": [[56, "set-intersection"]], "Set Symmetric Difference": [[56, "set-symmetric-difference"]], "Set Union": [[56, "set-union"]], "Set index but keep column": [[141, "set-index-but-keep-column"]], "Set index by column number": [[141, "set-index-by-column-number"]], "Set index by keeping old index": [[141, "set-index-by-keeping-old-index"]], "Set index in pandas DataFrame": [[141, "set-index-in-pandas-dataframe"]], "Set index in place": [[141, "set-index-in-place"]], "Set index using a Python range": [[141, "set-index-using-a-python-range"]], "Set index using a column": [[141, "set-index-using-a-column"]], "Set index using a column with duplicates": [[141, "set-index-using-a-column-with-duplicates"]], "Set index using a list": [[141, "set-index-using-a-list"]], "Set index using multiple columns": [[141, "set-index-using-multiple-columns"]], "Set multi-index using a list and column": [[141, "set-multi-index-using-a-list-and-column"]], "Set multi-index using two Python series": [[141, "set-multi-index-using-two-python-series"]], "Set specific value in pandas DataFrame": [[135, "set-specific-value-in-pandas-dataframe"], [135, "id1"]], "Setting up a pretrained model": [[152, "setting-up-a-pretrained-model"]], "Setting up a series of modelling experiments": [[153, "setting-up-a-series-of-modelling-experiments"]], "Setting up training code for our ViT model": [[154, "setting-up-training-code-for-our-vit-model"]], "Setup a loss function and optimizer for model_2": [[149, "setup-a-loss-function-and-optimizer-for-model-2"]], "Setup device agnostic-code (for using a GPU if there is one)": [[149, "setup-device-agnostic-code-for-using-a-gpu-if-there-is-one"]], "Setup loss function and optimizer": [[148, "setup-loss-function-and-optimizer"]], "Setup loss, optimizer and evaluation metrics": [[149, "setup-loss-optimizer-and-evaluation-metrics"], [149, "id1"]], "Shortcut for if statement (Short-hand if or one-line if)": [[43, "shortcut-for-if-statement-short-hand-if-or-one-line-if"]], "Shortcut of if else (Short Hand if \u2026 else or One line if else)": [[44, "shortcut-of-if-else-short-hand-if-else-or-one-line-if-else"]], "Significance of random seeding": [[146, "significance-of-random-seeding"]], "Single Parameter:": [[74, "single-parameter"]], "Single-line docstrings in Python": [[84, "single-line-docstrings-in-python"]], "Slicing and Subsetting": [[125, "slicing-and-subsetting"]], "Solution to Overfitting": [[4, "solution-to-overfitting"], [5, "solution-to-overfitting"]], "Sorting/Describing Data": [[143, "sorting-describing-data"]], "Special Sequences": [[39, "special-sequences"]], "Special literals": [[91, "special-literals"]], "Specify Pattern Using RegEx": [[39, "specify-pattern-using-regex"]], "Specifying a sign while displaying output numbers": [[94, "specifying-a-sign-while-displaying-output-numbers"]], "Split data into training and test sets": [[147, "split-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Sets": [[11, "split-the-data-into-training-and-test-sets"], [16, "split-the-data-into-training-and-test-sets"], [17, "split-the-data-into-training-and-test-sets"], [18, "split-the-data-into-training-and-test-sets"], [19, "split-the-data-into-training-and-test-sets"]], "Split the Data Into Training and Test Subsets": [[13, "split-the-data-into-training-and-test-subsets"]], "Spreading in Python": [[71, "spreading-in-python"]], "Square Brackets []": [[39, "id2"]], "Statistics": [[129, "statistics"], [132, "statistics"]], "Stepping through nn.Conv2d()": [[149, "stepping-through-nn-conv2d"]], "Stepping through nn.MaxPool2d()": [[149, "stepping-through-nn-maxpool2d"]], "String Concatenation Operator (+)": [[52, "string-concatenation-operator"]], "Summary": [[52, "summary"], [53, "summary"], [54, "summary"], [55, "summary"], [56, "summary"], [132, "summary"]], "Summary - MetaCharacters": [[39, "summary-metacharacters"]], "Summary:": [[127, "summary"], [132, "id1"]], "Summation notation": [[29, "summation-notation"]], "Swarm Plot": [[169, "swarm-plot"], [170, "swarm-plot"]], "Syntax :": [[44, "syntax"], [47, "syntax"]], "Syntax of List Comprehension": [[57, "syntax-of-list-comprehension"]], "Syntax:": [[43, "syntax"], [45, "syntax"], [46, "syntax"], [48, "syntax"]], "Table of Contents": [[116, "table-of-contents"]], "Target Audience \ud83e\uddd0": [[185, "target-audience"]], "Tensor datatypes": [[146, "tensor-datatypes"]], "Tensors": [[146, "tensors"]], "Terminology": [[154, "terminology"]], "The @property Decorator": [[38, "the-property-decorator"]], "The Algorithm": [[3, "the-algorithm"]], "The DataFrame.drop() function": [[136, "the-dataframe-drop-function"]], "The DataFrame.drop_duplicates() function": [[137, "the-dataframe-drop-duplicates-function"]], "The DataFrame.dropna() function": [[138, "the-dataframe-dropna-function"]], "The DataFrame.rename() function": [[139, "the-dataframe-rename-function"]], "The DataFrame.reset_index() function": [[142, "the-dataframe-reset-index-function"]], "The DataFrame.set_index() function": [[141, "the-dataframe-set-index-function"]], "The DataFrame.to_dict() function": [[140, "the-dataframe-to-dict-function"]], "The Difference\u2026": [[43, "the-difference"]], "The LayerNorm (LN) layer": [[154, "the-layernorm-ln-layer"]], "The MLP layer(s)": [[154, "the-mlp-layer-s"]], "The Multi-Head Self Attention (MSA) layer": [[154, "the-multi-head-self-attention-msa-layer"]], "The balance between overfitting and underfitting": [[150, "the-balance-between-overfitting-and-underfitting"]], "The difference\u2026": [[44, "the-difference"]], "The dir() built-in function": [[80, "the-dir-built-in-function"]], "The except Clause with Multiple Exceptions": [[71, "the-except-clause-with-multiple-exceptions"]], "The except Clause with No Exceptions": [[71, "the-except-clause-with-no-exceptions"]], "The file Object Attributes": [[68, "the-file-object-attributes"]], "The format() Method for Formatting Strings": [[52, "the-format-method-for-formatting-strings"]], "The from_dict() function": [[133, "the-from-dict-function"]], "The missing piece: non-linearity": [[148, "the-missing-piece-non-linearity"]], "The property Class": [[38, "the-property-class"]], "Things to Remember": [[88, "things-to-remember"]], "Things to Remember:": [[40, "things-to-remember"]], "Things to note": [[151, "things-to-note"]], "Time Series & LV Plot": [[175, "time-series-lv-plot"]], "Time-Series Plot": [[175, "time-series-plot"]], "To customize the display of DataFrame while printing": [[132, "to-customize-the-display-of-dataframe-while-printing"]], "Toolbox": [[185, "toolbox"]], "Tools required to work with neural networks": [[183, "tools-required-to-work-with-neural-networks"]], "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80": [[115, "tools-to-get-a-launch"]], "Topics on Learning Data Science and Machine Learning": [[184, "topics-on-learning-data-science-and-machine-learning"]], "Train and Evaluate Model 0": [[150, "train-and-evaluate-model-0"]], "Train feature extractor ViT model": [[154, "train-feature-extractor-vit-model"]], "Train model": [[148, "train-model"], [152, "train-model"]], "Train model and track results": [[153, "train-model-and-track-results"]], "Train the model": [[147, "train-the-model"]], "Train, evaluate and save the model": [[156, "train-evaluate-and-save-the-model"], [157, "train-evaluate-and-save-the-model"]], "Train, evaluate and save the model (script mode)": [[157, "train-evaluate-and-save-the-model-script-mode"]], "Train, evaluate and save the model (train.py)": [[151, "train-evaluate-and-save-the-model-train-py"]], "Training": [[147, "training"]], "Training EffNetB2 feature extractor": [[155, "training-effnetb2-feature-extractor"]], "Training Set": [[5, "training-set"]], "Training ViT feature extractor": [[155, "training-vit-feature-extractor"]], "Training a model with non-linearity": [[148, "training-a-model-with-non-linearity"]], "Training and testing model_2 using our training and test functions": [[149, "training-and-testing-model-2-using-our-training-and-test-functions"]], "Training our ViT model": [[154, "training-our-vit-model"]], "Transfer statements": [[42, "transfer-statements"]], "Transform Datasets and create DataLoaders": [[153, "transform-datasets-and-create-dataloaders"]], "Transforming data": [[150, "transforming-data"]], "Transforming data with torchvision.transforms": [[150, "transforming-data-with-torchvision-transforms"]], "Try a forward pass on a single image (to test the model)": [[150, "try-a-forward-pass-on-a-single-image-to-test-the-model"]], "Tuple Methods": [[54, "tuple-methods"]], "Tuple Operations": [[54, "tuple-operations"]], "Turn custom loaded images into DataLoader\u2019s": [[150, "turn-custom-loaded-images-into-dataloaders"]], "Turn data into tensors and create train and test splits": [[148, "turn-data-into-tensors-and-create-train-and-test-splits"]], "Turn images into DataLoader\u2019s": [[154, "turn-images-into-dataloaders"]], "Turn loaded images into DataLoader\u2019s": [[150, "turn-loaded-images-into-dataloaders"]], "Turning a single image into patches": [[154, "turning-a-single-image-into-patches"]], "Turning our EffNetB2 model into a Python script (model.py)": [[155, "turning-our-effnetb2-model-into-a-python-script-model-py"]], "Turning our FoodVision Mini Gradio Demo into a deployable app": [[155, "turning-our-foodvision-mini-gradio-demo-into-a-deployable-app"]], "Turning our FoodVision Mini Gradio app into a Python script (app.py)": [[155, "turning-our-foodvision-mini-gradio-app-into-a-python-script-app-py"]], "Turning the ViT patch embedding layer into a PyTorch module": [[154, "turning-the-vit-patch-embedding-layer-into-a-pytorch-module"]], "Two Parameter:": [[74, "two-parameter"]], "Type Conversion": [[51, "type-conversion"]], "Type Conversion of Numbers in Python": [[91, "type-conversion-of-numbers-in-python"]], "Types Of Inheritance": [[103, "types-of-inheritance"]], "Types of Constructors": [[102, "types-of-constructors"]], "Types of Functions": [[74, "types-of-functions"]], "Typical workflow for a ML system": [[0, "typical-workflow-for-a-ml-system"]], "Unit vector": [[32, "unit-vector"]], "Univariate Linear Regression Demo": [[13, "univariate-linear-regression-demo"]], "Universal  Array Functions (Mathematical operations)": [[128, "universal-array-functions-mathematical-operations"]], "Unpacking": [[71, "unpacking"]], "Unpacking Dictionaries": [[71, "unpacking-dictionaries"]], "Unpacking List or a Tuple": [[71, "unpacking-list-or-a-tuple"]], "Unpacking Lists": [[71, "unpacking-lists"]], "Unpacking a sequence into separate variables": [[97, "unpacking-a-sequence-into-separate-variables"]], "Update the train() function to include a writer parameter": [[153, "update-the-train-function-to-include-a-writer-parameter"]], "Uploading to Hugging Face": [[155, "uploading-to-hugging-face"]], "Use __new__ or __init__?": [[106, "use-new-or-init"]], "Use lambda expressions to rename": [[139, "use-lambda-expressions-to-rename"]], "Use of Python Generators": [[35, "use-of-python-generators"]], "Use of global Keyword": [[76, "use-of-global-keyword"]], "Use of inheritance": [[101, "use-of-inheritance"]], "Use of lambda Function in python": [[79, "use-of-lambda-function-in-python"]], "Use torchinfo to get an idea of the shapes going through our model": [[150, "use-torchinfo-to-get-an-idea-of-the-shapes-going-through-our-model"]], "Using Control Statement in for loops in Python": [[47, "using-control-statement-in-for-loops-in-python"]], "Using Control Statement in while loops in Python": [[48, "using-control-statement-in-while-loops-in-python"]], "Using Getters and Setters": [[38, "using-getters-and-setters"]], "Using Langchain": [[116, "using-langchain"]], "Using Python inside Jupyter notebook": [[24, "using-python-inside-jupyter-notebook"]], "Using a code editor of your choice": [[24, "using-a-code-editor-of-your-choice"]], "Using a pretrained ViT from torchvision.models on the same dataset": [[154, "using-a-pretrained-vit-from-torchvision-models-on-the-same-dataset"]], "Using drop with axis='columns' or axis=1": [[136, "using-drop-with-axis-columns-or-axis-1"]], "Using python in a jupyter notebook": [[24, "using-python-in-a-jupyter-notebook"]], "Using r prefix before RegEx": [[39, "using-r-prefix-before-regex"]], "Using rename with axis='columns' or axis=1": [[139, "using-rename-with-axis-columns-or-axis-1"]], "Using the help() Function for Docstrings": [[84, "using-the-help-function-for-docstrings"]], "Utilizing Langchain Features": [[116, "utilizing-langchain-features"]], "ValueError in strptime()": [[61, "valueerror-in-strptime"]], "Variable Function Arguments": [[77, "variable-function-arguments"]], "Vector addition": [[32, "vector-addition"]], "Vector operations": [[32, "vector-operations"]], "Vector subtraction": [[32, "vector-subtraction"]], "Vectorized Implementation of Forward Propagation": [[7, "vectorized-implementation-of-forward-propagation"]], "Vectors": [[146, "vectors"]], "View experiments in TensorBoard": [[153, "view-experiments-in-tensorboard"]], "View our model\u2019s results in TensorBoard": [[153, "view-our-models-results-in-tensorboard"]], "Viewing/Inspecting Data": [[132, "viewing-inspecting-data"]], "Visualize a single image": [[154, "visualize-a-single-image"]], "Visualize an image": [[150, "visualize-an-image"]], "Visualize the Fit": [[8, "visualize-the-fit"]], "Visualizing our data": [[149, "visualizing-our-data"]], "Visualizing the speed vs. performance tradeoff": [[155, "visualizing-the-speed-vs-performance-tradeoff"]], "Ways to deploy a machine learning model": [[155, "ways-to-deploy-a-machine-learning-model"]], "Welcome to my technical diary \ud83e\udd2f": [[185, "welcome-to-my-technical-diary"]], "What Happens Internally?": [[106, "what-happens-internally"]], "What are lambda functions in Python?": [[79, "what-are-lambda-functions-in-python"]], "What are modules in Python?": [[80, "what-are-modules-in-python"]], "What are packages?": [[83, "what-are-packages"]], "What are user-defined functions in Python?": [[85, "what-are-user-defined-functions-in-python"]], "What can PyTorch be used for?": [[146, "what-can-pytorch-be-used-for"]], "What experiments are we going to run?": [[153, "what-experiments-are-we-going-to-run"]], "What has script mode got to do with PyTorch?": [[157, "what-has-script-mode-got-to-do-with-pytorch"]], "What is Compiler?": [[98, "what-is-compiler"]], "What is DataFrame in Pandas": [[132, "what-is-dataframe-in-pandas"]], "What is Dictionary in Python?": [[55, "what-is-dictionary-in-python"]], "What is Distribution Plots?": [[168, "what-is-distribution-plots"]], "What is Hugging Face Spaces?": [[155, "what-is-hugging-face-spaces"]], "What is Interpreter?": [[98, "what-is-interpreter"]], "What is List in Python?": [[53, "what-is-list-in-python"]], "What is Machine Learning? \ud83e\udde0": [[0, "what-is-machine-learning"]], "What is MyST?": [[20, "what-is-myst"], [108, "what-is-myst"], [112, "what-is-myst"]], "What is Name in Python?": [[96, "what-is-name-in-python"]], "What is PyTorch?": [[146, "what-is-pytorch"]], "What is Set in Python?": [[56, "what-is-set-in-python"]], "What is String in Python?": [[52, "what-is-string-in-python"]], "What is Tuple in Python?": [[54, "what-is-tuple-in-python"]], "What is a Namespace in Python?": [[96, "what-is-a-namespace-in-python"]], "What is a classification problem?": [[148, "what-is-a-classification-problem"]], "What is a custom dataset?": [[150, "what-is-a-custom-dataset"]], "What is a function in Python?": [[74, "what-is-a-function-in-python"]], "What is a machine learning research paper?": [[154, "what-is-a-machine-learning-research-paper"]], "What is a matrix?": [[31, "what-is-a-matrix"]], "What is a vector?": [[32, "what-is-a-vector"]], "What is cell mode?": [[156, "what-is-cell-mode"]], "What is cluster map?": [[179, "what-is-cluster-map"]], "What is experiment tracking?": [[153, "what-is-experiment-tracking"]], "What is for loop in Python?": [[47, "what-is-for-loop-in-python"]], "What is global keyword?": [[76, "what-is-global-keyword"]], "What is going modular?": [[151, "what-is-going-modular"]], "What is heat map?": [[178, "what-is-heat-map"]], "What is hstack?": [[129, "what-is-hstack"]], "What is machine learning model deployment?": [[155, "what-is-machine-learning-model-deployment"]], "What is math module in Python?": [[82, "what-is-math-module-in-python"]], "What is paper replicating?": [[154, "what-is-paper-replicating"]], "What is recursion?": [[78, "what-is-recursion"]], "What is script mode?": [[157, "what-is-script-mode"]], "What is self in Python?": [[106, "what-is-self-in-python"]], "What is transfer learning?": [[152, "what-is-transfer-learning"]], "What is vstack?": [[129, "what-is-vstack"]], "What is while loop in Python?": [[48, "what-is-while-loop-in-python"]], "What kind of experiments should you run?": [[153, "what-kind-of-experiments-should-you-run"]], "What model should I use?": [[149, "what-model-should-i-use"]], "What our training setup is missing": [[154, "what-our-training-setup-is-missing"]], "What should an ideal loss curve look like?": [[150, "what-should-an-ideal-loss-curve-look-like"]], "What we\u2019re going to cover": [[147, "what-were-going-to-cover"], [148, "what-were-going-to-cover"], [149, "what-were-going-to-cover"], [150, "what-were-going-to-cover"], [151, "what-were-going-to-cover"], [152, "what-were-going-to-cover"], [153, "what-were-going-to-cover"], [154, "what-were-going-to-cover"], [155, "what-were-going-to-cover"], [157, "what-were-going-to-cover"]], "What we\u2019re going to cover in this module": [[146, "what-were-going-to-cover-in-this-module"]], "What we\u2019re working towards": [[151, "what-were-working-towards"]], "What\u2019s inside datetime?": [[59, "whats-inside-datetime"]], "What\u2019s the difference between this notebook (Part 1) and the script mode notebook (Part 2)?": [[156, "whats-the-difference-between-this-notebook-part-1-and-the-script-mode-notebook-part-2"]], "What\u2019s the difference between this notebook (Part 2) and the cell mode notebook (Part 1)?": [[157, "whats-the-difference-between-this-notebook-part-2-and-the-cell-mode-notebook-part-1"]], "When do we have closures?": [[36, "when-do-we-have-closures"]], "When to use Decimal instead of float?": [[51, "when-to-use-decimal-instead-of-float"]], "When to use closures?": [[36, "when-to-use-closures"]], "Where can you find code examples for machine learning research papers?": [[154, "where-can-you-find-code-examples-for-machine-learning-research-papers"]], "Where can you get help?": [[151, "where-can-you-get-help"], [152, "where-can-you-get-help"]], "Where does computer vision get used?": [[149, "where-does-computer-vision-get-used"]], "Where to find pretrained models": [[152, "where-to-find-pretrained-models"]], "Where\u2019s it going to go?": [[155, "wheres-it-going-to-go"]], "Which pretrained model should you use?": [[152, "which-pretrained-model-should-you-use"]], "While loop in Python FAQs": [[48, "while-loop-in-python-faqs"]], "Who uses PyTorch?": [[146, "who-uses-pytorch"]], "Why Learn Machine Learning? \ud83e\udd14": [[0, "why-learn-machine-learning"]], "Why Learn Python?": [[22, "why-learn-python"]], "Why and When to use while loop in Python": [[48, "why-and-when-to-use-while-loop-in-python"]], "Why deploy a machine learning model?": [[155, "why-deploy-a-machine-learning-model"]], "Why is self explicitly defined everytime?": [[106, "why-is-self-explicitly-defined-everytime"]], "Why replicate a machine learning research paper?": [[154, "why-replicate-a-machine-learning-research-paper"]], "Why should we use Tuple? (Advantages of Tuple)": [[54, "why-should-we-use-tuple-advantages-of-tuple"]], "Why super() keyword": [[103, "why-super-keyword"]], "Why track experiments?": [[153, "why-track-experiments"]], "Why two parts?": [[151, "why-two-parts"]], "Why use NumPy?": [[125, "why-use-numpy"]], "Why use PyTorch?": [[146, "why-use-pytorch"]], "Why use a pretrained model?": [[154, "why-use-a-pretrained-model"]], "Why use for loop?": [[47, "why-use-for-loop"]], "Why use transfer learning?": [[152, "why-use-transfer-learning"]], "Why would you want to go modular?": [[151, "why-would-you-want-to-go-modular"]], "Wide format (untidy)": [[178, "wide-format-untidy"]], "Working of for loop for Iterators": [[34, "working-of-for-loop-for-iterators"]], "Working with large amounts of data": [[143, "working-with-large-amounts-of-data"]], "World Happiness Report 2017": [[9, "world-happiness-report-2017"]], "Wrap up": [[80, "wrap-up"]], "Writing the \u201cHello, World!\u201d Program": [[71, "writing-the-hello-world-program"], [87, "writing-the-hello-world-program"]], "Zero or more times *": [[39, "zero-or-more-times"]], "Zero or one time ?": [[39, "zero-or-one-time"]], "Zeros and ones": [[146, "zeros-and-ones"]], "Zip": [[71, "zip"]], "[] . ^ $ * + ? {} () \\ |": [[39, "id1"]], "\\A - Matches if the specified characters are at the start of a string.": [[39, "a-matches-if-the-specified-characters-are-at-the-start-of-a-string"]], "\\B - Opposite of \\b. Matches if the specified characters are not at the beginning or end of a word.": [[39, "b-opposite-of-b-matches-if-the-specified-characters-are-not-at-the-beginning-or-end-of-a-word"]], "\\S - Matches where a string contains any non-whitespace character. Equivalent to [^ \\t\\n\\r\\f\\v].": [[39, "s-matches-where-a-string-contains-any-non-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\W - Matches any non-alphanumeric character. Equivalent to [^a-zA-Z0-9_].": [[39, "w-matches-any-non-alphanumeric-character-equivalent-to-a-za-z0-9"]], "\\Z - Matches if the specified characters are at the end of a string.": [[39, "z-matches-if-the-specified-characters-are-at-the-end-of-a-string"]], "\\b - Matches if the specified characters are at the beginning or end of a word.": [[39, "b-matches-if-the-specified-characters-are-at-the-beginning-or-end-of-a-word"]], "\\d - Matches any non-decimal digit. Equivalent to [^0-9]": [[39, "d-matches-any-non-decimal-digit-equivalent-to-0-9"]], "\\s - Matches where a string contains any whitespace character. Equivalent to [ \\t\\n\\r\\f\\v].": [[39, "s-matches-where-a-string-contains-any-whitespace-character-equivalent-to-t-n-r-f-v"]], "\\w - Matches any alphanumeric character (digits and alphabets). Equivalent to [a-zA-Z0-9_]. By the way, underscore _ is also considered an alphanumeric character.": [[39, "w-matches-any-alphanumeric-character-digits-and-alphabets-equivalent-to-a-za-z0-9-by-the-way-underscore-is-also-considered-an-alphanumeric-character"]], "__init__() is not a constructor": [[106, "init-is-not-a-constructor"]], "a) break in for loop": [[47, "a-break-in-for-loop"]], "a) break in while loop": [[48, "a-break-in-while-loop"]], "all(dict) - The all() function returns True when all elements in the given iterable are true. If not, it returns False.": [[55, "all-dict-the-all-function-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "all(list) - The method all() method returns True when all elements in the given iterable are true. If not, it returns False.": [[53, "all-list-the-method-all-method-returns-true-when-all-elements-in-the-given-iterable-are-true-if-not-it-returns-false"]], "any(dict) - The any() function returns True if any element of an iterable is True. If not, any() returns False.": [[55, "any-dict-the-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "any(list) - any() function returns True if any element of an iterable is True. If not, any() returns False.": [[53, "any-list-any-function-returns-true-if-any-element-of-an-iterable-is-true-if-not-any-returns-false"]], "append() - The append() method adds an item to the end of the list.": [[53, "append-the-append-method-adds-an-item-to-the-end-of-the-list"]], "arange()": [[129, "arange"]], "asarray()": [[129, "asarray"]], "b) continue in for loop": [[47, "b-continue-in-for-loop"]], "b) continue in while loop": [[48, "b-continue-in-while-loop"]], "boxplot() and violinplot()": [[173, "boxplot-and-violinplot"]], "c) pass in for loop": [[47, "c-pass-in-for-loop"]], "c) pass in while loop": [[48, "c-pass-in-while-loop"]], "clear() - The clear() method removes all items from the list.": [[53, "clear-the-clear-method-removes-all-items-from-the-list"]], "clear() - The method clear() removes all items from the dictionary.": [[55, "clear-the-method-clear-removes-all-items-from-the-dictionary"]], "continue statement in while loop": [[49, "continue-statement-in-while-loop"]], "continue statement with else statements": [[49, "continue-statement-with-else-statements"]], "copy()  - The copy() method returns a shallow copy of the list.": [[53, "copy-the-copy-method-returns-a-shallow-copy-of-the-list"]], "copy() - The method copy() returns a shallow copy of the dictionary.": [[55, "copy-the-method-copy-returns-a-shallow-copy-of-the-dictionary"]], "count() - The count() method returns the number of times the specified element appears in the list.": [[53, "count-the-count-method-returns-the-number-of-times-the-specified-element-appears-in-the-list"]], "datetime.date Class": [[59, "datetime-date-class"]], "datetime.datetime": [[59, "datetime-datetime"]], "datetime.time": [[59, "datetime-time"]], "datetime.timedelta": [[59, "datetime-timedelta"]], "extend() - The extend() method adds all the elements of an iterable (list, tuple, string etc.) to the end of the list.": [[53, "extend-the-extend-method-adds-all-the-elements-of-an-iterable-list-tuple-string-etc-to-the-end-of-the-list"]], "for  loop in one line": [[47, "for-loop-in-one-line"]], "for loop inside for loop": [[47, "for-loop-inside-for-loop"]], "for loop inside while loop": [[48, "for-loop-inside-while-loop"]], "for loop with else": [[47, "for-loop-with-else"]], "for loop with if-else": [[47, "for-loop-with-if-else"]], "for loop with range() function": [[47, "for-loop-with-range-function"]], "fromkeys() - The method fromkeys() creates a new dictionary with keys from seq and values set to value.": [[55, "fromkeys-the-method-fromkeys-creates-a-new-dictionary-with-keys-from-seq-and-values-set-to-value"]], "heatmap": [[178, "heatmap"]], "heatmap colors": [[178, "heatmap-colors"]], "heatmap data": [[178, "heatmap-data"]], "if-elif-else statements and Logical Operator": [[45, "if-elif-else-statements-and-logical-operator"]], "if-elif-else statements or Logical Operator": [[45, "if-elif-else-statements-or-logical-operator"]], "if-elif-else statements with logical operators": [[45, "if-elif-else-statements-with-logical-operators"]], "import all names": [[80, "import-all-names"]], "import multiple modules": [[80, "import-multiple-modules"]], "import with renaming": [[80, "import-with-renaming"]], "index() - The index() method returns the index of the specified element in the list.": [[53, "index-the-index-method-returns-the-index-of-the-specified-element-in-the-list"]], "insert() - The insert() method inserts an element to the list at the specified index.": [[53, "insert-the-insert-method-inserts-an-element-to-the-list-at-the-specified-index"]], "issubclass()": [[103, "issubclass"]], "itmes() - The method items() returns a list of dict\u2019s (key, value) tuple pairs.": [[55, "itmes-the-method-items-returns-a-list-of-dicts-key-value-tuple-pairs"]], "keys() - The method keys() returns a list of all the available keys in the dictionary.": [[55, "keys-the-method-keys-returns-a-list-of-all-the-available-keys-in-the-dictionary"]], "lambda function use with filter()": [[79, "lambda-function-use-with-filter"]], "lambda function with map()": [[79, "lambda-function-with-map"]], "lambda function with reduce()": [[79, "lambda-function-with-reduce"]], "len(dict) - The len() function gives the total length of the dictionary. This would be equal to the number of items in the dictionary.": [[55, "len-dict-the-len-function-gives-the-total-length-of-the-dictionary-this-would-be-equal-to-the-number-of-items-in-the-dictionary"]], "len(list) - The len() method returns the number of elements in the list.": [[53, "len-list-the-len-method-returns-the-number-of-elements-in-the-list"]], "len(tuple) - The len() method returns the number of elements in the tuple.": [[54, "len-tuple-the-len-method-returns-the-number-of-elements-in-the-tuple"]], "math module Functions:": [[80, "math-module-functions"]], "max(list) - The max() method returns the elements from the list with maximum value.": [[53, "max-list-the-max-method-returns-the-elements-from-the-list-with-maximum-value"]], "max(tuple) - The max() method returns the elements from the tuple with maximum value. Type of element should be same otherwise complier throw TypeError.": [[54, "max-tuple-the-max-method-returns-the-elements-from-the-tuple-with-maximum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "max, min, argmax, argmin": [[126, "max-min-argmax-argmin"]], "min(list) - this method is used to get min value from the list. In Python3 lists element\u2019s type should be same otherwise compiler throw type Error.": [[53, "min-list-this-method-is-used-to-get-min-value-from-the-list-in-python3-lists-elements-type-should-be-same-otherwise-compiler-throw-type-error"]], "min(tuple) - The min() method returns the elements from the tuple with minimum value. Type of element should be same otherwise complier throw TypeError.": [[54, "min-tuple-the-min-method-returns-the-elements-from-the-tuple-with-minimum-value-type-of-element-should-be-same-otherwise-complier-throw-typeerror"]], "pop() - The pop() method removes the item at the given index from the list and returns the removed item.": [[53, "pop-the-pop-method-removes-the-item-at-the-given-index-from-the-list-and-returns-the-removed-item"]], "rand": [[126, "rand"]], "randint": [[126, "randint"]], "randn": [[126, "randn"]], "remove() - The remove() method removes the first matching element (which is passed as an argument) from the list.": [[53, "remove-the-remove-method-removes-the-first-matching-element-which-is-passed-as-an-argument-from-the-list"]], "reverse()  - The reverse() method reverses the elements of the list.": [[53, "reverse-the-reverse-method-reverses-the-elements-of-the-list"]], "self in Python, Demystified": [[106, "self-in-python-demystified"]], "setdefault() - The method setdefault() is similar to get but will set dict[key] = default if key is not already in dict.": [[55, "setdefault-the-method-setdefault-is-similar-to-get-but-will-set-dict-key-default-if-key-is-not-already-in-dict"]], "sort()  - The sort() method sorts the elements of a given list in a specific ascending or descending order.": [[53, "sort-the-sort-method-sorts-the-elements-of-a-given-list-in-a-specific-ascending-or-descending-order"]], "sorted(dict) - The sorted() function sorts the elements of a given iterable in a specific order (either ascending or descending) and returns the sorted iterable as a list.": [[53, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [54, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"], [55, "sorted-dict-the-sorted-function-sorts-the-elements-of-a-given-iterable-in-a-specific-order-either-ascending-or-descending-and-returns-the-sorted-iterable-as-a-list"]], "str(dict) - The str() function produces a printable string representation of a dictionary.": [[55, "str-dict-the-str-function-produces-a-printable-string-representation-of-a-dictionary"]], "time.sleep() in multithreaded programs": [[66, "time-sleep-in-multithreaded-programs"]], "time.struct_time Class": [[65, "time-struct-time-class"]], "tuple(seq) - The tuple() method converts a list of items into tuples.": [[54, "tuple-seq-the-tuple-method-converts-a-list-of-items-into-tuples"]], "type() - The type() function returns the type of the passed variable. If passed variable is dictionary then it would return a dictionary type.": [[55, "type-the-type-function-returns-the-type-of-the-passed-variable-if-passed-variable-is-dictionary-then-it-would-return-a-dictionary-type"]], "update() - The method update() adds dictionary dict2\u2019s key-values pairs in to dict. This function does not return anything.": [[55, "update-the-method-update-adds-dictionary-dict2s-key-values-pairs-in-to-dict-this-function-does-not-return-anything"]], "value() - The method values() returns a list of all the values available in a given dictionary.": [[55, "value-the-method-values-returns-a-list-of-all-the-values-available-in-a-given-dictionary"]], "while loop inside for loop": [[47, "while-loop-inside-for-loop"]], "while loop inside while loop": [[48, "while-loop-inside-while-loop"]], "while loop with else": [[48, "while-loop-with-else"]], "while loop with if-else": [[48, "while-loop-with-if-else"]], "you output should look like this:": [[101, "you-output-should-look-like-this"]], "\ud83d\udcbb Exercises  \u279e <span class='label label-default'>List</span>": [[44, "exercises-list"], [53, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Date and Time</span>": [[64, "exercises-date-and-time"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Dictionary</span>": [[55, "exercises-dictionary"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Exceptions Handling</span>": [[71, "exercises-exceptions-handling"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Files</span>": [[68, "exercises-files"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Functions</span>": [[74, "exercises-functions"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Higher order functions, Closure and Decorators</span>": [[37, "exercises-higher-order-functions-closure-and-decorators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List Comprehension</span>": [[57, "exercises-list-comprehension"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>List</span>": [[45, "exercises-list"], [47, "exercises-list"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Module</span>": [[80, "exercises-module"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Objects and Classes</span>": [[101, "exercises-objects-and-classes"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Operators</span>": [[95, "exercises-operators"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Python Errors</span>": [[70, "exercises-python-errors"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>RegEx</span>": [[39, "exercises-regex"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Sets</span>": [[56, "exercises-sets"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>String</span>": [[52, "exercises-string"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Tuple</span>": [[54, "exercises-tuple"]], "\ud83d\udcbb Exercises \u279e <span class='label label-default'>Variables</span>": [[90, "exercises-variables"]]}, "docnames": ["content/concepts/Introduction_to_ml", "content/concepts/anomaly-detection", "content/concepts/concepts", "content/concepts/k-means", "content/concepts/linear-regression", "content/concepts/logistic-regression", "content/concepts/markdown-notebooks", "content/concepts/neural-networks", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo", "content/concepts/notebooks/data/README", "content/concepts/notebooks/k_means/k_means_demo", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo", "content/concepts/notebooks/linear_regression/non_linear_regression_demo", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo", "content/core/markdown", "content/core/mymarkdown", "content/essentials/000_Intro_to_Python", "content/essentials/intro_mathematics", "content/essentials/intro_python", "content/essentials/intro_statistics", "content/essentials/mathematics/1_linear_algebra", "content/essentials/mathematics/calculus_fourier-series", "content/essentials/mathematics/capital-pi-notation", "content/essentials/mathematics/capital-sigma-notation", "content/essentials/mathematics/dissimilarity_measures", "content/essentials/mathematics/linear-algebra_matrices", "content/essentials/mathematics/linear-algebra_vectors", "content/essentials/mathematics/mathematics_toc", "content/essentials/python/advanced/001_Python_Iterators", "content/essentials/python/advanced/002_Python_Generators", "content/essentials/python/advanced/003_Python_Closure", "content/essentials/python/advanced/004_Python_Decorators", "content/essentials/python/advanced/005_Python_Property", "content/essentials/python/advanced/006_Python_RegEx", "content/essentials/python/advanced/Python_args_and_kwargs", "content/essentials/python/advanced/advanced_toc", "content/essentials/python/controlflow/000_Python_Flow_Control_statement", "content/essentials/python/controlflow/001_Python_if_statement", "content/essentials/python/controlflow/002_Python_if_else_statement", "content/essentials/python/controlflow/003_Python_if_elif_else_statement", "content/essentials/python/controlflow/004_Python_Nested_if_statement", "content/essentials/python/controlflow/005_Python_for_Loop", "content/essentials/python/controlflow/006_Python_while_Loop", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements", "content/essentials/python/controlflow/controlflow_toc", "content/essentials/python/datatypes/001_Python_Numbers", "content/essentials/python/datatypes/002_Python_String", "content/essentials/python/datatypes/003_Python_List", "content/essentials/python/datatypes/004_Python_Tuple", "content/essentials/python/datatypes/005_Python_Dictionary", "content/essentials/python/datatypes/006_Python_Sets", "content/essentials/python/datatypes/Python_List_Comprehension", "content/essentials/python/datatypes/datatypes_toc", "content/essentials/python/datetime/001_Python_datetime_Module", "content/essentials/python/datetime/002_Python_strftime", "content/essentials/python/datetime/003_Python_strptime", "content/essentials/python/datetime/004_Python_current_date_and_time", "content/essentials/python/datetime/005_Python_get_current_time", "content/essentials/python/datetime/006_Python_timestamp_to_datetime", "content/essentials/python/datetime/007_Python_time_Module", "content/essentials/python/datetime/008_Python_sleep", "content/essentials/python/datetime/datetime_toc", "content/essentials/python/files/001_Python_File_Input_Output", "content/essentials/python/files/002_Python_File_Directory", "content/essentials/python/files/003_Python_File_Exception", "content/essentials/python/files/004_Python_Exceptions_Handling", "content/essentials/python/files/005_Python_User_defined_Exceptions", "content/essentials/python/files/files_toc", "content/essentials/python/functions/001_Python_Functions", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal", "content/essentials/python/functions/003_Python_Function_global_Keywords", "content/essentials/python/functions/004_Python_Function_Arguments", "content/essentials/python/functions/005_Python_Function_Recursion", "content/essentials/python/functions/006_Python_Function_Anonymous", "content/essentials/python/functions/007_Python_Function_Module", "content/essentials/python/functions/008_Python_Function_random_Module", "content/essentials/python/functions/009_Python_Function_math_Module", "content/essentials/python/functions/010_Python_Function_Package", "content/essentials/python/functions/Python_Docstrings", "content/essentials/python/functions/Python_User_defined_Functions", "content/essentials/python/functions/functions_toc", "content/essentials/python/introduction/002_Hello_World", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments", "content/essentials/python/introduction/005_Python_Variables_&_Constants", "content/essentials/python/introduction/006_Python_Literals", "content/essentials/python/introduction/007_Python_Data_Types", "content/essentials/python/introduction/008_Python_Type_Conversion", "content/essentials/python/introduction/009_Python_Input_Output_Import", "content/essentials/python/introduction/010_Python_Operators", "content/essentials/python/introduction/011_Python_Namespace_and_Scope", "content/essentials/python/introduction/1_data_structures_and_agorithms", "content/essentials/python/introduction/Interpreter_Vs_Compiler", "content/essentials/python/introduction/constant", "content/essentials/python/introduction/intro_toc", "content/essentials/python/objects/001_Python_OOPs_Concepts", "content/essentials/python/objects/002_Python_Classes_and_Objects", "content/essentials/python/objects/003_Python_Inheritance", "content/essentials/python/objects/004_Python_Operator_Overloading", "content/essentials/python/objects/objects_toc", "content/essentials/python/objects/self_in_Python_Demystified", "content/essentials/statistics/statistics", "content/markdown", "content/markdown-notebooks", "content/mymarkdown", "content/notebooks", "content/real-world/markdown", "content/real-world/mymarkdown", "content/tools/hf/intro", "content/tools/intro_tools", "content/tools/langchain/intro", "content/tools/langchain/langchain-modules", "content/tools/langchain/langgraph", "content/tools/langchain/langserve", "content/tools/langchain/langsmith", "content/tools/langchain/lcel", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2", "content/tools/matplotlib/matplotlib_toc", "content/tools/numpy/001_Python_NumPy", "content/tools/numpy/002_Python_NumPy_Array_Part1", "content/tools/numpy/003_Python_NumPy_Array_Part2", "content/tools/numpy/004_Python_NumPy_Array_Part3", "content/tools/numpy/005_Python_NumPy_Array_Part4", "content/tools/numpy/Python_Numpy_Exercises_with_hints", "content/tools/numpy/numpy_toc", "content/tools/pandas/001_Python_Pandas_DataFrame", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index", "content/tools/pandas/002_Python_Pandas_Exercise_1", "content/tools/pandas/003_Python_Pandas_Exercise_2", "content/tools/pandas/pandas_toc", "content/tools/pytorch/00_pytorch_fundamentals", "content/tools/pytorch/01_pytorch_workflow", "content/tools/pytorch/02_pytorch_classification", "content/tools/pytorch/03_pytorch_computer_vision", "content/tools/pytorch/04_pytorch_custom_datasets", "content/tools/pytorch/05_pytorch_going_modular", "content/tools/pytorch/06_pytorch_transfer_learning", "content/tools/pytorch/07_pytorch_experiment_tracking", "content/tools/pytorch/08_pytorch_paper_replicating", "content/tools/pytorch/09_pytorch_model_deployment", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode", "content/tools/pytorch/going_modular/README", "content/tools/pytorch/going_modular/going_modular/README", "content/tools/pytorch/pytorch_toc", "content/tools/seaborn/001_Seaborn_Loading_Dataset", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics", "content/tools/seaborn/003_Matplotlib_vs_Seaborn", "content/tools/seaborn/004_Seaborn_Color_Palettes", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots", "content/tools/seaborn/008_Seaborn_Distribution_Plots", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot", "content/tools/seaborn/016_Seaborn_PairGrid_Plot", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot", "content/tools/seaborn/018_Seaborn_Heat_Map", "content/tools/seaborn/019_Seaborn_Cluster_Map", "content/tools/seaborn/seaborn_toc", "content/tools/tools-for-llms", "content/tools/tools-for-ml", "content/tools/tools-for-nn", "curriculum", "intro"], "envversion": {"sphinx": 61, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1}, "filenames": ["content/concepts/Introduction_to_ml.md", "content/concepts/anomaly-detection.md", "content/concepts/concepts.md", "content/concepts/k-means.md", "content/concepts/linear-regression.md", "content/concepts/logistic-regression.md", "content/concepts/markdown-notebooks.md", "content/concepts/neural-networks.md", "content/concepts/notebooks/anomaly_detection/anomaly_detection_gaussian_demo.ipynb", "content/concepts/notebooks/data/README.md", "content/concepts/notebooks/k_means/k_means_demo.ipynb", "content/concepts/notebooks/linear_regression/multivariate_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/non_linear_regression_demo.ipynb", "content/concepts/notebooks/linear_regression/univariate_linear_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/logistic_regression_with_non_linear_boundary_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_demo.ipynb", "content/concepts/notebooks/logistic_regression/multivariate_logistic_regression_fashion_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_demo.ipynb", "content/concepts/notebooks/neural_network/multilayer_perceptron_fashion_demo.ipynb", "content/core/markdown.md", "content/core/mymarkdown.md", "content/essentials/000_Intro_to_Python.ipynb", "content/essentials/intro_mathematics.ipynb", "content/essentials/intro_python.ipynb", "content/essentials/intro_statistics.ipynb", "content/essentials/mathematics/1_linear_algebra.ipynb", "content/essentials/mathematics/calculus_fourier-series.ipynb", "content/essentials/mathematics/capital-pi-notation.ipynb", "content/essentials/mathematics/capital-sigma-notation.ipynb", "content/essentials/mathematics/dissimilarity_measures.ipynb", "content/essentials/mathematics/linear-algebra_matrices.ipynb", "content/essentials/mathematics/linear-algebra_vectors.ipynb", "content/essentials/mathematics/mathematics_toc.md", "content/essentials/python/advanced/001_Python_Iterators.ipynb", "content/essentials/python/advanced/002_Python_Generators.ipynb", "content/essentials/python/advanced/003_Python_Closure.ipynb", "content/essentials/python/advanced/004_Python_Decorators.ipynb", "content/essentials/python/advanced/005_Python_Property.ipynb", "content/essentials/python/advanced/006_Python_RegEx.ipynb", "content/essentials/python/advanced/Python_args_and_kwargs.ipynb", "content/essentials/python/advanced/advanced_toc.md", "content/essentials/python/controlflow/000_Python_Flow_Control_statement.ipynb", "content/essentials/python/controlflow/001_Python_if_statement.ipynb", "content/essentials/python/controlflow/002_Python_if_else_statement.ipynb", "content/essentials/python/controlflow/003_Python_if_elif_else_statement.ipynb", "content/essentials/python/controlflow/004_Python_Nested_if_statement.ipynb", "content/essentials/python/controlflow/005_Python_for_Loop.ipynb", "content/essentials/python/controlflow/006_Python_while_Loop.ipynb", "content/essentials/python/controlflow/007_Python_break_continue_pass_statements.ipynb", "content/essentials/python/controlflow/controlflow_toc.md", "content/essentials/python/datatypes/001_Python_Numbers.ipynb", "content/essentials/python/datatypes/002_Python_String.ipynb", "content/essentials/python/datatypes/003_Python_List.ipynb", "content/essentials/python/datatypes/004_Python_Tuple.ipynb", "content/essentials/python/datatypes/005_Python_Dictionary.ipynb", "content/essentials/python/datatypes/006_Python_Sets.ipynb", "content/essentials/python/datatypes/Python_List_Comprehension.ipynb", "content/essentials/python/datatypes/datatypes_toc.md", "content/essentials/python/datetime/001_Python_datetime_Module.ipynb", "content/essentials/python/datetime/002_Python_strftime.ipynb", "content/essentials/python/datetime/003_Python_strptime.ipynb", "content/essentials/python/datetime/004_Python_current_date_and_time.ipynb", "content/essentials/python/datetime/005_Python_get_current_time.ipynb", "content/essentials/python/datetime/006_Python_timestamp_to_datetime.ipynb", "content/essentials/python/datetime/007_Python_time_Module.ipynb", "content/essentials/python/datetime/008_Python_sleep.ipynb", "content/essentials/python/datetime/datetime_toc.md", "content/essentials/python/files/001_Python_File_Input_Output.ipynb", "content/essentials/python/files/002_Python_File_Directory.ipynb", "content/essentials/python/files/003_Python_File_Exception.ipynb", "content/essentials/python/files/004_Python_Exceptions_Handling.ipynb", "content/essentials/python/files/005_Python_User_defined_Exceptions.ipynb", "content/essentials/python/files/files_toc.md", "content/essentials/python/functions/001_Python_Functions.ipynb", "content/essentials/python/functions/002_Python_Function_Global_Local_Nonlocal.ipynb", "content/essentials/python/functions/003_Python_Function_global_Keywords.ipynb", "content/essentials/python/functions/004_Python_Function_Arguments.ipynb", "content/essentials/python/functions/005_Python_Function_Recursion.ipynb", "content/essentials/python/functions/006_Python_Function_Anonymous.ipynb", "content/essentials/python/functions/007_Python_Function_Module.ipynb", "content/essentials/python/functions/008_Python_Function_random_Module.ipynb", "content/essentials/python/functions/009_Python_Function_math_Module.ipynb", "content/essentials/python/functions/010_Python_Function_Package.ipynb", "content/essentials/python/functions/Python_Docstrings.ipynb", "content/essentials/python/functions/Python_User_defined_Functions.ipynb", "content/essentials/python/functions/functions_toc.md", "content/essentials/python/introduction/002_Hello_World.ipynb", "content/essentials/python/introduction/003_Python_Keywords_and_Identifiers.ipynb", "content/essentials/python/introduction/004_Python_Statement_Indentation_Comments.ipynb", "content/essentials/python/introduction/005_Python_Variables_&_Constants.ipynb", "content/essentials/python/introduction/006_Python_Literals.ipynb", "content/essentials/python/introduction/007_Python_Data_Types.ipynb", "content/essentials/python/introduction/008_Python_Type_Conversion.ipynb", "content/essentials/python/introduction/009_Python_Input_Output_Import.ipynb", "content/essentials/python/introduction/010_Python_Operators.ipynb", "content/essentials/python/introduction/011_Python_Namespace_and_Scope.ipynb", "content/essentials/python/introduction/1_data_structures_and_agorithms.ipynb", "content/essentials/python/introduction/Interpreter_Vs_Compiler.ipynb", "content/essentials/python/introduction/constant.ipynb", "content/essentials/python/introduction/intro_toc.md", "content/essentials/python/objects/001_Python_OOPs_Concepts.ipynb", "content/essentials/python/objects/002_Python_Classes_and_Objects.ipynb", "content/essentials/python/objects/003_Python_Inheritance.ipynb", "content/essentials/python/objects/004_Python_Operator_Overloading.ipynb", "content/essentials/python/objects/objects_toc.md", "content/essentials/python/objects/self_in_Python_Demystified.ipynb", "content/essentials/statistics/statistics.ipynb", "content/markdown.md", "content/markdown-notebooks.md", "content/mymarkdown.md", "content/notebooks.ipynb", "content/real-world/markdown.md", "content/real-world/mymarkdown.md", "content/tools/hf/intro.md", "content/tools/intro_tools.ipynb", "content/tools/langchain/intro.md", "content/tools/langchain/langchain-modules.md", "content/tools/langchain/langgraph.md", "content/tools/langchain/langserve.md", "content/tools/langchain/langsmith.md", "content/tools/langchain/lcel.md", "content/tools/matplotlib/002_Python_Matplotlib_Exercise_1.ipynb", "content/tools/matplotlib/003_Python_Matplotlib_Exercise_2.ipynb", "content/tools/matplotlib/matplotlib_toc.md", "content/tools/numpy/001_Python_NumPy.ipynb", "content/tools/numpy/002_Python_NumPy_Array_Part1.ipynb", "content/tools/numpy/003_Python_NumPy_Array_Part2.ipynb", "content/tools/numpy/004_Python_NumPy_Array_Part3.ipynb", "content/tools/numpy/005_Python_NumPy_Array_Part4.ipynb", "content/tools/numpy/Python_Numpy_Exercises_with_hints.ipynb", "content/tools/numpy/numpy_toc.md", "content/tools/pandas/001_Python_Pandas_DataFrame.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/001_Python_Pandas_DataFrame_from_Dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/002_Python_Pandas_DataFrame_from_List.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/003_Python_Pandas_DataFrame_head_and_tail.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/004_Python_Pandas_DataFrame_drop_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/005_Python_Pandas_DataFrame_drop_duplicates.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/006_Python_Pandas_DataFrame_drop_columns_with_NA.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/007_Python_Pandas_DataFrame_rename_columns.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/008_Python_Pandas_DataFrame_to_Python_dictionary.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/009_Python_Pandas_DataFrame_set_index.ipynb", "content/tools/pandas/001_Python_Pandas_Methods/010_Python_Pandas_DataFrame_reset_index.ipynb", "content/tools/pandas/002_Python_Pandas_Exercise_1.ipynb", "content/tools/pandas/003_Python_Pandas_Exercise_2.ipynb", "content/tools/pandas/pandas_toc.md", "content/tools/pytorch/00_pytorch_fundamentals.ipynb", "content/tools/pytorch/01_pytorch_workflow.ipynb", "content/tools/pytorch/02_pytorch_classification.ipynb", "content/tools/pytorch/03_pytorch_computer_vision.ipynb", "content/tools/pytorch/04_pytorch_custom_datasets.ipynb", "content/tools/pytorch/05_pytorch_going_modular.md", "content/tools/pytorch/06_pytorch_transfer_learning.ipynb", "content/tools/pytorch/07_pytorch_experiment_tracking.ipynb", "content/tools/pytorch/08_pytorch_paper_replicating.ipynb", "content/tools/pytorch/09_pytorch_model_deployment.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_cell_mode.ipynb", "content/tools/pytorch/going_modular/05_pytorch_going_modular_script_mode.ipynb", "content/tools/pytorch/going_modular/README.md", "content/tools/pytorch/going_modular/going_modular/README.md", "content/tools/pytorch/pytorch_toc.md", "content/tools/seaborn/001_Seaborn_Loading_Dataset.ipynb", "content/tools/seaborn/002_Seaborn_Controlling_Aesthetics.ipynb", "content/tools/seaborn/003_Matplotlib_vs_Seaborn.ipynb", "content/tools/seaborn/004_Seaborn_Color_Palettes.ipynb", "content/tools/seaborn/005_Seaborn_LM_Plot_and_Reg_Plot.ipynb", "content/tools/seaborn/006_Seaborn_Scatter_Plot_and_Joint_Plot.ipynb", "content/tools/seaborn/007_Seaborn_Additional_Regression_Plots.ipynb", "content/tools/seaborn/008_Seaborn_Distribution_Plots.ipynb", "content/tools/seaborn/009_Seaborn_Categorical_Swarm_Plot.ipynb", "content/tools/seaborn/010_Seaborn_Categorical_Strip_Plot.ipynb", "content/tools/seaborn/011_Seaborn_Categorical_Box_Plot.ipynb", "content/tools/seaborn/012_Seaborn_Categorical_Violin_Plot.ipynb", "content/tools/seaborn/013_Seaborn_Categorical_Bar_Plot_Point_Plot_and_Count_Plot.ipynb", "content/tools/seaborn/014_Seaborn_Categorical_Factor_Plot.ipynb", "content/tools/seaborn/015_Seaborn_TimeSeries_and_LetterValue_Plot.ipynb", "content/tools/seaborn/016_Seaborn_PairGrid_Plot.ipynb", "content/tools/seaborn/017_Seaborn_FacetGrid_Plot.ipynb", "content/tools/seaborn/018_Seaborn_Heat_Map.ipynb", "content/tools/seaborn/019_Seaborn_Cluster_Map.ipynb", "content/tools/seaborn/seaborn_toc.md", "content/tools/tools-for-llms.md", "content/tools/tools-for-ml.md", "content/tools/tools-for-nn.md", "curriculum.md", "intro.md"], "indexentries": {}, "objects": {}, "objnames": {}, "objtypes": {}, "terms": {"": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 27, 30, 31, 34, 35, 36, 37, 38, 42, 43, 46, 47, 48, 49, 51, 52, 54, 57, 61, 63, 64, 65, 66, 68, 70, 71, 74, 75, 76, 78, 79, 80, 82, 84, 85, 89, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 126, 129, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 148, 149, 151, 152, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 182, 185], "0": [1, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 65, 66, 68, 70, 71, 72, 74, 76, 77, 79, 80, 81, 82, 88, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 106, 107, 111, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "00": [59, 60, 61, 63, 65, 66, 94, 132, 133, 135, 146, 148, 149, 157, 165, 166, 172, 175], "000": [51, 149, 150, 152, 155, 166, 171], "0000": [14, 65, 95, 147, 148, 149, 154], "00000": 132, "000000": [52, 60, 61, 94, 132, 143, 144, 161, 166, 177], "00000000": 146, "0000003": 52, "000007": 16, "000013": 17, "000032": 16, "000036": 17, "000066": 16, "000079": 16, "0000a3": 173, "0000e": 148, "0001": [51, 59, 65, 147, 149], "000110011001100110011": 51, "000112": 16, "000126": 16, "000155": 16, "000174": 17, "000191": 16, "000214": 16, "000216": 16, "000238": 17, "000269": 17, "000285": 17, "0003": 149, "000301": 17, "000325": 17, "000367": 17, "000385": 16, "000410": 17, "000456": 17, "000465": 17, "000550": 17, "0006": 155, "000683": 11, "000743": 17, "0009": 149, "000917": 16, "000a": 51, "001": [60, 61, 147, 150, 151, 152, 153, 156, 157], "0010": [95, 157], "0011": [95, 149], "001100": 17, "001139": 17, "001178": 17, "00121062e": 175, "001232": 17, "001262": 17, "0012645035749301314": 147, "001270": 16, "001354": 17, "00140327e": 175, "0016": 149, "001619": 17, "001665": 17, "0017": 149, "0018": 149, "001835": 16, "001868": 177, "001873": 16, "001899": 17, "0019": [156, 157], "001_python_file_input_output": 69, "002": [60, 61], "0020": 149, "002108": 17, "002177": 17, "002200": 17, "0023": 154, "002327879593869": 129, "00232788": 129, "0024": 149, "002464": 17, "002513": 17, "0027": 149, "0028": 154, "002841": 17, "002895": 17, "002940": 17, "002_python_file_directori": 69, "003": [13, 154], "0030": 149, "003029": 17, "0031": 149, "003152": 17, "003456": 16, "003478": 17, "0035": 149, "00357518e": 175, "0037": 149, "003780": 17, "003845": 17, "0039": 149, "003_python_file_except": 69, "004": 152, "004079": 16, "004274": 17, "004291": 17, "0043": 149, "004785": 13, "004838": 16, "0049": 149, "004_python_exceptions_handl": 69, "005": 175, "0051": 149, "0052": 149, "005294": 17, "005308": 17, "005356": 177, "005408": 17, "005436": 16, "0055": [146, 149], "0056": 149, "0057": 149, "005742": 17, "005743": 16, "0058": 149, "005837": 16, "005978": 17, "005_python_user_defined_except": 69, "0060": 149, "00603": 148, "00615": 148, "00616708": 126, "006191": 173, "0062": 149, "006201": 17, "006215683650225401": 147, "0063": 149, "0065": 149, "0067": 156, "006730": 16, "0069": 149, "007": [94, 152, 175], "007120": 16, "0072": 154, "007234": 177, "0073": 149, "007320": 17, "0075": 149, "007525": 16, "00778181e": 175, "0078": 149, "007860": 17, "00786338": 129, "007995": 16, "007_python_function_modul": 68, "0080": 149, "00826323e": 175, "0083": 149, "0084": 149, "00856914e": 175, "0086": 148, "008831": 17, "0089": 149, "009": 52, "0090": [149, 156], "009066": 17, "0092": 149, "0094": 149, "009417": 16, "0095": [149, 154, 156, 157], "009509": 17, "009529": 17, "00960206e": 175, "009757": 17, "009783552028238773": 155, "00_pytorch_fundament": 146, "01": [11, 13, 52, 59, 60, 61, 63, 65, 66, 94, 146, 147, 148, 149, 150, 155, 157, 161, 165, 168, 170, 171, 172, 173, 175, 177], "010": [52, 175], "0100": [95, 148], "010000": 132, "0101": [95, 149], "0102": [149, 156], "010289": 17, "0103": 149, "010311": 16, "01032310e": 175, "01051775e": 175, "010527": 17, "01061": 148, "0107": [148, 149], "010755": 17, "0109": 149, "011": [152, 153], "0110": 149, "011255": 16, "0114": 149, "011523": 173, "011630": 17, "01169557310640812": 155, "011743": 17, "0118": 149, "01183409e": 175, "0119": 149, "012098": 17, "012345": 52, "0123456789": 80, "0124": 149, "0125": 149, "0126": 149, "0127": 149, "012986": 17, "0131": 149, "013148": 17, "01326": 148, "013316": 17, "013350": 17, "0134": 149, "01345985e": 175, "013474": 17, "0135": 149, "013555": 17, "013648": 148, "013763": 17, "013801801018416882": 147, "013853": 17, "0140": 149, "014086711220443249": 147, "0141": [149, 157], "014127": 17, "0142": [148, 149], "01426": 148, "0143": 149, "014374": 16, "0146": 149, "014745": 17, "0148": 149, "0149": [148, 149], "0150": 149, "0152": 149, "0155": 149, "0156": 149, "015672": 16, "0157": [149, 150], "01580": 154, "015862": 17, "015877": 17, "0160": [149, 150], "0161": [149, 154], "016288": 17, "0163": 149, "016412": 155, "0165": 149, "0167": 149, "016705": 15, "0168": 148, "0169": 149, "0170": 149, "0171": 149, "01710843e": 175, "0173": 149, "0177": 149, "017837": 17, "0180": 149, "0181": 149, "0182": 149, "0187": 149, "0188": 149, "0190": 149, "019028": 16, "01919923e": 175, "0192": 149, "0193": 149, "0194": 149, "019404": 17, "019542": 17, "019561": 16, "0196": [149, 150], "019608": 132, "019675": 17, "019745": 17, "0198": 149, "0199": 149, "019922": 12, "019968": 149, "01996805111821": 149, "01_learn_python4data": [69, 80, 144], "01_pytorch_workflow_model_0": 147, "01_pytorch_workflow_model_1": 147, "01x345": 52, "02": [12, 59, 60, 61, 65, 66, 147, 148, 149, 150, 157, 161, 175], "0200": [147, 148], "02004": 148, "0201": 149, "0203": 149, "020391": 16, "0204": 149, "020408": 143, "0205": 149, "0207": 149, "0208": [156, 157], "0209": 149, "0210": [149, 157], "021069": 173, "02127": 148, "0213": 149, "0214": 156, "021509": 148, "0216": 149, "021708": 15, "0218": 149, "021838": 17, "021854": 16, "02210": [45, 47], "0222": 156, "0223": [149, 151, 156, 157], "022326": 16, "0225": 149, "0226": 149, "022727": 143, "0228": 149, "0229": 149, "022960": 17, "0231": 149, "02319487": 129, "0232": 149, "0233": 149, "0235": [149, 154], "0236": 149, "023622": 17, "0237": 149, "0238": 149, "0240": 149, "024045": 17, "024052": 15, "0241": 149, "0242": 149, "02423": 148, "024253": 17, "0244": 149, "0245": 149, "0247": 149, "0248": 149, "0249": 149, "025000": 166, "0252": 149, "0253": 149, "025347": 17, "025388": 17, "02539500e": 175, "0254": 149, "025531": 17, "025549": 16, "0256": [149, 155], "025678": 17, "0257": 149, "0258": 149, "02587": 148, "0259": 149, "0260": 149, "026005": 17, "026023": 17, "0261": 149, "0262": 149, "0263": [149, 155], "026366": 17, "0264": [149, 155], "0266": 149, "026648": 17, "0268": 149, "02683718e": 175, "0269": 155, "027": 155, "0271": 149, "0272": 149, "0273": 149, "0274": 149, "027404": 17, "0275": 149, "027513": 17, "0277": 149, "0278": 149, "02788739837706089": 147, "02799": 148, "0280": 149, "028090": 17, "0283": 149, "0284": 149, "028452": 15, "0285": 149, "02850": 148, "0286": 149, "0288": 149, "028944": 17, "028969": 17, "0290": 149, "02901": 148, "0291": 149, "02919730e": 175, "0292": 149, "02928161e": 175, "029371": 17, "029398": 17, "0294": 149, "0295": 149, "0297": 149, "02989209e": 175, "0299": 149, "02f": 32, "03": [24, 52, 66, 146, 148, 149, 150, 151, 155, 157, 161, 175], "0300": 148, "030114": 173, "0304": 149, "0306": 149, "03068156e": 175, "0307": 149, "030774": 161, "03083": 148, "030971": 17, "030e2eec799d": 37, "031": 155, "0310": 149, "031250": 143, "0313": 149, "03132382780313492": 147, "0314": [149, 150], "03145352": 129, "0315": 149, "0316": 149, "0318": 149, "0319": 149, "032258": 143, "0323": 149, "0324": 149, "032475": 16, "03247675": 129, "0326": 149, "032878": 16, "0330": 149, "03300": 148, "033011": 17, "033088": 17, "033175": 16, "033192": 17, "0333": 149, "033395": 17, "03348578e": 175, "0335": 149, "0336": 149, "03387531e": 175, "033911": 17, "0342": 149, "0343": 149, "034357": 15, "0344": 149, "03448": 148, "0345": 149, "03461004": 129, "03476089984178543": 147, "03486": 148, "0349": 149, "035009": 17, "03505598723366": 80, "0351": 146, "035149": 16, "0352": [149, 150], "0353": [149, 150], "0354": 149, "0355": 149, "0356": [149, 154], "035714": 143, "0359": 149, "0360": 149, "036166": 17, "036300": 17, "0364": 149, "03643": 148, "0365": 149, "0366": 149, "0367": 149, "0369": 149, "0370": 149, "0371": 148, "037224": 16, "0373": 149, "0374": 149, "037445": 17, "0375": 149, "0376": 149, "0377": 149, "037732": 17, "037747": 17, "0381": 149, "03818932920694351": 147, "038202": 17, "0383": 149, "0384": 149, "0385": 149, "038580": 16, "0386": 149, "0388": 149, "0389": 149, "0390": 149, "03910": 148, "0392": [149, 150], "0395": 149, "039631": 173, "039698": 17, "0397": 149, "0398": 149, "0399": 149, "039919": 17, "03_daniels_macbook_pro": 153, "03_pytorch_computer_vision_model_2": 149, "03ed55": 80, "03pm": 60, "04": [59, 65, 66, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 165], "0400": [147, 148], "040000": 132, "0401": 149, "0402": 149, "0404": 149, "0406": 149, "0408": 149, "0409": 149, "04098": 148, "040986": 17, "0411": 149, "0412": 149, "0413": 149, "0415": 149, "04167863354086876": 147, "041750": 17, "0420": [148, 149], "042011": 16, "0421": [148, 149], "042190": 15, "0422": 149, "0424": 149, "0426": 149, "0427": 149, "0428": 149, "042849": 8, "042857": 143, "0429": 149, "04295": 148, "042991": 17, "0430": 149, "0431": [149, 150], "0432": 149, "04324": 148, "043293": 17, "0433": 149, "0440": 149, "0441": 149, "0443": 149, "044382": 17, "0444": 149, "0446": 149, "0447": 149, "0448": 149, "0449": 149, "0450": 149, "045016": 17, "0452": 149, "04543796554207802": 147, "0455": 149, "0457": 149, "0458": 149, "0459": 149, "045985": 17, "0461": 154, "04617067e": 175, "0462": 149, "0463": 149, "046456": [11, 13], "046484": 17, "0465": 154, "0467": 149, "0468": 149, "046815": 8, "0469": 149, "0470": 149, "04702762e": 175, "0471": 149, "0472": 149, "047295": 16, "0473": 149, "047347": 17, "0474": 149, "04763428": 126, "0477": 149, "0478": 149, "0481": 149, "048227": 17, "0485": 149, "04857": 148, "0486": 149, "048779": 17, "0488": 149, "048819": 12, "0489": 149, "04892": 148, "0494": 155, "0496": 149, "0497": 149, "049796": 17, "0498": 149, "04_custom_data_cr": [150, 155], "04_python_funct": [68, 80], "05": [8, 60, 61, 66, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161], "0500": [171, 173], "05017144e": 175, "050218": 17, "0505": 149, "050755": 17, "05082974": 126, "0510": [149, 150], "051020": 143, "051179": 17, "0512": 149, "051267": 15, "05133": 148, "0515": 149, "0516": 149, "051891": 17, "0521": 149, "05233094e": 175, "052387": 12, "0524": 149, "0525": 149, "0527": 149, "0528": 153, "0529": 149, "0530": 149, "053148526698350906": 147, "0532": 149, "0533": 149, "0534": 149, "0535": 149, "0537": [151, 153, 156, 157], "053816": 17, "0539": 149, "0540": 149, "0541": 149, "0542": [149, 154], "0544": 149, "0546": 149, "05473060e": 175, "0549": [149, 150], "0551": 149, "0552": 149, "055217": 17, "0553": 149, "0554": 149, "0555": 149, "0556": 149, "0557": 149, "05571": 148, "0558": 149, "0559": 149, "055903": 17, "05599": 148, "0560": 149, "0562": 149, "0563": 149, "056380": 16, "0564": 149, "05655136772680869": 81, "0566": 149, "05669558e": 175, "0567": 149, "0568": 149, "05698": 148, "0570": 149, "057333": 161, "0574": 149, "0577": 149, "0578": 150, "0579": 149, "0580": 149, "0583": 149, "0584": 149, "058497": 16, "0585": 149, "0586": 149, "0587": 149, "058710": 17, "0588": [149, 150], "058824": 143, "058849": 17, "0590": 149, "05908a030c74": 102, "0592": 149, "05924": 148, "0594": 149, "0595": 149, "059554": 17, "0596": 149, "0597": 149, "0598": [148, 149], "0599": 149, "05_going_modular_cell_mode_tinyvgg_model": [151, 156, 157], "05_going_modular_script_mode_tinyvgg_model": [151, 157], "05_going_modular_tingvgg_model": [151, 156, 157], "05_python_fil": 69, "05_pytorch_going_modular_cell_mod": 158, "05_pytorch_going_modular_script_mod": 158, "06": [59, 60, 61, 62, 63, 65, 66, 153, 154, 155, 157, 159, 161, 163], "0600": 147, "0602": 149, "0603": 149, "0605": 149, "0607": 149, "061065": 17, "06107": 148, "06109": 148, "0613": 149, "0616": [149, 151, 153, 156, 157], "06161913e": 175, "061689": 17, "0617": 149, "0618": 149, "061915": 17, "0620": 149, "0622": 149, "0623": 149, "0624": 149, "062439": 17, "062500": 143, "0627": [150, 155, 156], "0629": 149, "0630": 157, "0631": 149, "0632": 155, "0633": 149, "0634": [149, 150], "0635": 149, "063577": 177, "0636": 149, "0637": 149, "0638": [149, 155], "0639": 149, "0641": 155, "064182": 155, "06418210905976593": 155, "0642": 155, "0643": 149, "0645": 149, "064516": 143, "0646": [146, 149], "0647": 149, "06473556160926819": 147, "0649": 149, "0650": 154, "0651": 149, "065211": [11, 13], "065444": 17, "06563599e": 175, "0657": 149, "065897": 17, "0659": 149, "065937": 17, "0661": 149, "0662": 155, "0663": 149, "0665": 149, "0666": 149, "06663512e": 175, "066667": 132, "0667": [149, 150], "0669": 149, "0672": 149, "0673": 149, "0674": 149, "06745": 148, "0676": 149, "0677": 149, "0678": 149, "0680": 149, "068044": 12, "0681": 149, "0684": 149, "0685": 149, "068645": 15, "0688": 149, "0689": 149, "0690": 149, "0691": 149, "0692": 149, "0693": [149, 155], "0694": 149, "06947804e": 175, "0696": 149, "069723": 12, "0699": 149, "06_pytorch_transfer_learn": 153, "07": [60, 61, 63, 66, 146, 147, 149, 153, 155], "0701": 149, "070254": 17, "070279": 17, "0704": 149, "070574": 17, "0706": [149, 150], "0708": 171, "0709": 149, "0711": 149, "0713": 149, "0714": 149, "0717": 149, "07216": 148, "072182": 15, "0722": 149, "07232122868299484": 147, "0724": 149, "0726": 148, "0729": 155, "0730": 149, "0731": 149, "073129": 11, "073160": 16, "0734": 149, "0735": 149, "073595": 17, "0736": 149, "073709": 175, "07376": 148, "0738": 149, "073953": 17, "0740": 154, "074074": 143, "0742": 149, "0745": [149, 150], "07450952e": 175, "0747": 149, "0750": [149, 171], "0752": 149, "0754": 149, "0755": [148, 149], "0757": 154, "0758": 149, "0759": 155, "0761": 154, "0763": 149, "07659773e": 175, "0766": 149, "0769": 149, "076923": 143, "077036": 173, "0772": 149, "0773": 149, "0774": 149, "0775": 149, "0776": [149, 154], "0777": [149, 155], "0778": 148, "0779": 149, "0780": 149, "078020": 17, "0781": 149, "0782": 149, "0783": 149, "0785": 149, "0786": 149, "0787": 149, "0788": 149, "0789": 149, "0790": 149, "0791": 150, "0793": 149, "079365": 17, "0796": 149, "0797": [149, 154], "0799": 149, "07_": 153, "07_effnetb0_data_10_percent_10_epoch": 153, "07_effnetb0_data_10_percent_5_epoch": 153, "07_effnetb0_data_20_percent_10_epoch": 153, "07_effnetb0_data_20_percent_5_epoch": 153, "07_effnetb2_data_10_percent_10_epoch": 153, "07_effnetb2_data_10_percent_5_epoch": 153, "07_effnetb2_data_20_percent_10_epoch": 153, "07_effnetb2_data_20_percent_5_epoch": 153, "08": [59, 63, 65, 66, 146, 149, 155], "0800": 147, "080169": 175, "0803": [149, 150], "0804": 149, "0805": 149, "0805937647819519": 147, "0806": 149, "08062": 148, "0808": 149, "0808e": 149, "0810": 149, "0813": 149, "0814": 149, "08143941": 126, "0816": 149, "0817": 149, "0818": 149, "0820": 149, "0823": 149, "0824": 150, "0825": 149, "083": 152, "0830": [149, 155], "08309749e": 175, "083132": 15, "083174": 17, "083261": 17, "0833": 157, "08333022e": 175, "083333": [132, 143], "0835": 149, "0837": [149, 157], "0838": 149, "0840": 149, "0842": 149, "0843": 149, "0844": 155, "084423": 17, "0845": 149, "0847": [149, 150], "084713": 150, "0848": 149, "0850": 149, "0851": [149, 157], "0853": 149, "0855": [149, 154], "08553692": 128, "085536923187668": 80, "0857": 149, "0859": 149, "0861": 149, "0862": 149, "0863": [149, 150], "086334": 17, "0864": 149, "086505": 17, "0866": 149, "086688": 12, "086780": 16, "087": 11, "0871": 149, "0872": 149, "087328": 17, "0875": 149, "0876": 149, "087777": 17, "0878": 149, "0880": 150, "0881": 149, "0882": 149, "0883": [149, 157], "0886": 149, "0888": 149, "08886633068323135": 147, "0890": 149, "08908725529909134": 147, "0891": 149, "089286": 143, "0894": 149, "0896": 149, "0897": 149, "0899": 155, "08_pretrained_vit_feature_extractor_pizza_steak_sushi": 154, "09": [60, 61, 66, 146, 152, 155], "0901": 149, "0902": [149, 150], "0903": 149, "0904": 149, "0905": 149, "090909": 143, "09090909090909": 80, "0911": 149, "0913": 149, "0914": 149, "0915": 149, "0916": 149, "091695": 17, "0918": 149, "091864": 11, "0919": 146, "09199": 149, "0920": 149, "0923754647374153": 153, "0924": [152, 153], "0926": 149, "0927": 149, "092742": 15, "0928": [149, 153, 155], "0929": 149, "09309": 148, "0932": 149, "0933": [149, 155], "093484": 17, "0936": 149, "0937": 149, "0938": [149, 154], "0939": 149, "0940": 149, "0941": 150, "0945": 149, "0947": 149, "0948": 149, "0949": 149, "0950": [149, 155], "0953": 149, "0955": 156, "095564": 150, "0956": [150, 157], "0957": 149, "0958": 149, "0959": 149, "0960": 149, "0961": 149, "096154": 143, "096220": 17, "0963": 149, "0964": 149, "0965": 149, "0968": 149, "096812": 17, "0969": 149, "09708521e": 175, "0972": 149, "0974": 149, "097538": [11, 13], "0977": 149, "0978": 149, "09790012e": 175, "098": 11, "0980": [149, 150], "0981": 149, "098383": 17, "0984": 149, "0985": 150, "098520": 150, "098661": 17, "0987": 149, "098811": 17, "0989": [148, 149], "09919948130846024": 147, "0992": 149, "0993": 149, "099350157876355": 129, "09935016": 129, "0994": 149, "09_pretrained_effnetb2_feature_extractor_food101_20_perc": 155, "09_pretrained_effnetb2_feature_extractor_pizza_steak_sushi_20_perc": 155, "09_pretrained_vit_feature_extractor_pizza_steak_sushi_20_perc": 155, "09_pytorch_model_deploy": 155, "0_": 52, "0a4959e7a13b": 53, "0b": 51, "0b0001": 51, "0b10": [51, 95], "0b1010": 91, "0b1101011": 51, "0d17a834dca2": 77, "0ef33cc3a94d": 70, "0f0f0f": 164, "0f0f0f0f": 164, "0f73a35e8ce2": 88, "0j": [91, 95], "0m": 149, "0mib": 146, "0o": 51, "0o12": 51, "0o15": 51, "0o310": 91, "0th": [146, 154], "0x": 51, "0x0000012c87c0af70": 36, "0x000001d284b3b430": 35, "0x000001d8aec3ac10": 102, "0x000001d8aec44eb0": 102, "0x000001d8aec7e1f0": 102, "0x000001d8aec7e4c0": 102, "0x000001d8aec7e5e0": 102, "0x00000218ffc65220": 104, "0x0000021e45765b20": 101, "0x0000021e45765dc0": 101, "0x00007ffad7cb2770": 36, "0x000a": 51, "0x12c": 91, "0x12c4cb88d90": 176, "0x12c4df5c1c0": 176, "0x12c4e273c70": 176, "0x12c50e26c10": 176, "0x12c53a52d60": 176, "0x12c53affc10": 176, "0x163ca247070": 179, "0x163cdf926d0": 179, "0x163ce3245e0": 179, "0x163cfcc79d0": 179, "0x163d0288250": 179, "0x163d05bfa60": 179, "0x163d0f2ae20": 179, "0x1662f00ac70": 167, "0x16633986eb0": 167, "0x166339f84c0": 167, "0x16635a26b80": 167, "0x16635a63550": 167, "0x170b84f24a0": 38, "0x1a11b1a6e80": 170, "0x1a11b2e7a00": 170, "0x1a11b349eb0": 170, "0x1a2186f5940": 177, "0x1a21896cac0": 177, "0x1a218c77d30": 177, "0x1a218d2d6a0": 177, "0x1a218de36a0": 177, "0x1a21a1a7310": 177, "0x1a21a449490": 177, "0x1a21a492c70": 177, "0x1a21b6eba00": 177, "0x1be276a14a8": 179, "0x1bfbd546670": 168, "0x1bfbe8c42b0": 168, "0x1bfbe8d2640": 168, "0x1bfbeacc8b0": 168, "0x1bfbf65d610": 168, "0x1ce07cb24f0": 173, "0x1ce07cc58e0": 173, "0x1da1f804700": 174, "0x1da1f8bf520": 174, "0x1da209c66d0": 174, "0x1da20f86b20": 174, "0x1da20fa4c10": 174, "0x1da214a06d0": 174, "0x1edcdfafd30": 175, "0x219288a7220": 166, "0x2192d5bb3a0": 166, "0x2192de12c70": 166, "0x2192dfa48b0": 166, "0x2192e06b910": 166, "0x2192e0be9d0": 166, "0x2192e328640": 166, "0x22c3a5e3ac0": 172, "0x22c3a722fd0": 172, "0x22c3b278670": 172, "0x22c3c78df40": 172, "0x22c3c8f1040": 172, "0x263397171f0": 164, "0x264e0145a90": 163, "0x26bc28689d0": 165, "0x26bc65bb8b0": 165, "0x26bc7611700": 165, "0x26bc7dd6cd0": 165, "0x26bc7eaf0a0": 165, "0x26bc8131250": 165, "0x26bc81b38b0": 165, "0x26bc81e5730": 165, "0x29872f94b20": 171, "0x7f122dd0f0d0": 155, "0x7f17f3f5f520": 154, "0x7f18845ff0d0": 154, "0x7f53c0b9dca0": 150, "0x7f53c0b9de50": 150, "0x7f53c6d64040": 150, "0x7f5460ab8400": 150, "0x7f5460ab8490": 150, "0x7f5460ad23d0": 150, "0x7f5460ad2f70": 150, "0x7f5461f70c40": 150, "0x7f5461f70c70": 150, "0x7f853747b550": 156, "0x7f853747bbe0": 156, "0x7fa942951460": 152, "0x7fa942951550": 152, "0x7fa9429a37c0": 152, "0x7fa9429a3a60": 152, "0x7fc991463cd0": 149, "0x7fc991475120": 149, "0x7fca2e3445b0": 157, "0x7fca2e344760": 157, "0x7febf1d213a0": 153, "0x7febf1d21490": 153, "0x7febf1d216a0": 153, "0x7febf1d218e0": 153, "0xfb": 51, "1": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32, 34, 36, 38, 40, 43, 44, 48, 51, 57, 65, 72, 75, 76, 77, 78, 79, 81, 82, 85, 96, 98, 102, 103, 104, 106, 107, 111, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 140, 141, 143, 145, 147, 148, 151, 152, 153, 158, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 175, 177, 178, 179], "10": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 29, 31, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 60, 63, 66, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 82, 88, 89, 90, 91, 92, 93, 94, 95, 97, 101, 102, 104, 106, 107, 111, 122, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "100": [13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 29, 35, 39, 45, 47, 48, 49, 53, 55, 57, 74, 79, 80, 91, 95, 103, 104, 107, 111, 122, 126, 127, 129, 132, 133, 134, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 157, 162, 163, 166, 167, 168, 171, 172, 176, 177], "1000": [12, 14, 19, 48, 51, 57, 78, 90, 95, 101, 123, 129, 147, 148, 150, 152, 154, 155, 165, 171, 172, 173, 174, 175], "10000": [9, 16, 17, 18, 57, 123, 129, 132, 149], "100000": [15, 57, 123, 161], "1000000000000000055511151231257827021181583404541015625": 51, "1001": 149, "1002": 149, "10026431e": 175, "1003": 149, "1004": 149, "1005": 149, "1006": 149, "1008": 149, "101": [77, 102, 142, 143, 150, 153, 155, 172, 173, 176, 177], "1010": [95, 148, 149], "1011": 149, "1012": 154, "1016": 149, "1017": 149, "1018": 149, "101803": 13, "102": [77, 102, 132, 133, 142, 143, 144, 150, 152], "1020": [149, 150], "1021": 149, "1024": [57, 153, 154, 155], "10276143": 126, "1029": 149, "103": [102, 142, 143, 144, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1031": 149, "1034": 149, "1039": 149, "104": [31, 102, 132, 133, 143, 144, 150], "1041": 149, "1043": 149, "1044": 149, "104504": 16, "1046": 149, "1049": 149, "105": [11, 39, 80, 143], "1050": [52, 149], "1051": 149, "1052": 149, "1053": [139, 149], "1054": [139, 149], "1055": [139, 149], "1056": 139, "1057": [139, 149], "1058": 150, "1059": [149, 150], "106": [143, 146], "1060": 149, "1061": [146, 149], "1062": 149, "1063": [147, 149], "1065": 149, "106628291529549": 80, "1067": 154, "106846": 17, "10696289e": 175, "107": [51, 143, 150], "1070": 149, "107072": 17, "1070e": 149, "1072": 155, "107221": 14, "107353": 13, "1074": [149, 150], "1077": 149, "1078": [149, 150], "107833": 150, "108": [143, 150], "1080": 149, "108178": 17, "1082": 149, "1084": [149, 154], "1086": 149, "1087": 149, "1088": 149, "109": [77, 132, 143, 153, 155], "1092": 149, "109299": 173, "1093": 149, "1095": 149, "1095522857580948": 169, "109553": 17, "1096": 149, "1097": [149, 154], "1097501": 126, "1098": [150, 154], "1099": 149, "1099_file": 90, "10_epoch": 153, "10_python_pandas_modul": 144, "10ffff_": 52, "10fp": 155, "10k": 154, "10mb": 155, "10x256": 150, "11": [12, 15, 17, 31, 35, 38, 44, 47, 49, 51, 52, 53, 55, 57, 61, 65, 66, 75, 79, 89, 91, 92, 95, 97, 101, 102, 122, 126, 127, 128, 129, 132, 136, 141, 143, 144, 146, 148, 149, 150, 152, 154, 161, 163, 171, 176, 177], "110": [143, 144, 146, 155], "1100": 52, "1101": 149, "110110": 98, "1104": 157, "1105": 146, "110560": 17, "1105e": 148, "111": [95, 132, 133, 143, 144, 150, 155], "1110": [95, 149], "1111": [39, 95, 149], "111111": [94, 143], "11111111": 129, "1112": [149, 151, 156, 157], "1114": 149, "1115": 149, "1117": 149, "112": [143, 144, 149, 152], "1120": 149, "1121": 149, "11222578": 8, "1123": 149, "1124": 149, "112483": 17, "1126": 150, "1127": 150, "1128": 150, "11289431e": 175, "1129": 150, "113": [143, 149, 150], "1130": [149, 150], "1131": [150, 157], "1132": [149, 150], "1134": 170, "1135": [149, 170], "113538": 17, "1136": 170, "11360953003168106": 147, "1137": [149, 150, 170], "1138": [149, 157, 170], "1139": 149, "114": [132, 133, 143, 144, 149, 150], "1140": 149, "11421774e": 175, "1143": 149, "1144": 149, "1145": 149, "1146": 149, "1147": 149, "1148": 149, "1149": 149, "115": [132, 133, 143, 144, 149], "1150": 149, "1151515151515152": 163, "1154": 149, "115551": 17, "115697": 150, "1157": [150, 154], "115799": 11, "1158": 170, "1159": 170, "115971": 17, "116": [143, 149], "1160": 170, "1161": 170, "1162": 170, "1163": 155, "117": [143, 146], "1170": 149, "1172": 150, "11734513e": 175, "117543": 17, "1176": 150, "117647": 143, "117668": 17, "118": 143, "1181": 149, "11818328e": 175, "119": [143, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "119e50d96cfb": 70, "11x": [154, 155], "12": [8, 10, 12, 14, 16, 18, 19, 24, 29, 31, 32, 35, 39, 40, 43, 44, 45, 46, 47, 49, 51, 52, 53, 55, 57, 60, 61, 63, 64, 65, 66, 70, 72, 74, 75, 79, 80, 91, 92, 94, 95, 97, 101, 106, 126, 127, 128, 129, 136, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 163, 164, 165, 170, 172, 173, 175, 177, 178], "120": [4, 49, 77, 80, 132, 134, 143, 144, 146, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1200": [95, 147], "12000": 123, "121": 143, "1212": 97, "121486": 148, "121492": 17, "1216": [150, 154], "122": [12, 143], "1224": [149, 154], "122967": 17, "123": [12, 52, 93, 97, 143], "12336799": 126, "123456789": 52, "1234567890": [40, 91], "1234567890123456789": [51, 92], "12345678901234568": [51, 92], "12345678910": 48, "123774": 11, "1238": 157, "123xyz": 155, "124": [12, 93, 143, 150], "1240": 148, "124377": 17, "1246": 154, "125": [12, 48, 57, 80, 122, 128, 143], "125000": 143, "1251": 154, "1252": 161, "1255": 150, "1257": 149, "1258": [149, 154], "12587": 172, "126": [12, 143, 152], "1262": 149, "126257": 173, "126960000": 68, "127": [12, 122, 143, 155, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1270": 155, "1277": [149, 155], "1278387305019275": 163, "128": [12, 53, 57, 143, 149], "1280": [152, 153, 154], "12800": 149, "128440": 132, "1285": [149, 150], "12872044e": 175, "1288": [147, 149], "128x": 154, "129": [12, 143], "1294": 150, "12940": [132, 133, 144, 166], "12945": 144, "1295210000": 68, "1296": [57, 161], "129861": 11, "13": [8, 12, 15, 28, 29, 31, 35, 38, 48, 51, 52, 53, 55, 57, 60, 61, 63, 66, 70, 75, 77, 79, 80, 91, 93, 95, 101, 122, 127, 128, 129, 136, 143, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 166, 173, 175, 177], "130": [12, 132, 143, 146, 150, 152], "1300": 149, "13037": 148, "1309": 146, "131": [12, 31, 143], "1313": 155, "1316": 149, "1318": 157, "131910": 15, "132": [12, 143], "1320": 149, "1322": 149, "1324": 148, "1325": 149, "1326244364": 59, "1328": 154, "133": [12, 143, 155], "1331": 154, "1332": 146, "1333": [150, 171], "1336": 146, "134": [12, 143], "13409426e": 175, "13415": [132, 133, 144], "1345": 39, "13495": [132, 133, 144], "13499": 144, "135": [12, 143], "135432": 155, "135925": 144, "136": [12, 143, 150], "1360": 150, "136041": 150, "1366": 154, "13680419e": 175, "137": [12, 143, 150], "1373": [149, 150], "1375": 154, "13756537093": 94, "1377": 154, "137723281": 12, "1377422166": 68, "138": [12, 122, 143, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1382": 150, "138264": 132, "1383": 154, "138373": 150, "1384": 150, "139": [12, 143, 150], "13914421e": 175, "13915538e": 175, "13950": [132, 133, 144], "1396": 155, "13960670e": 175, "1399": 149, "14": [8, 12, 13, 15, 17, 19, 24, 31, 32, 38, 39, 47, 49, 52, 53, 54, 55, 57, 62, 64, 66, 70, 74, 75, 90, 91, 92, 95, 99, 101, 102, 106, 122, 127, 128, 129, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "140": [12, 143, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1400": 147, "14003": 166, "1403": 149, "1404": 149, "140708960741200": 96, "140708960741232": 96, "140708960741424": 96, "1408": [153, 155], "141": [12, 143, 144, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "14112001": 128, "1412": 149, "1415": 52, "14159": [80, 82], "141592653589793": [51, 80, 94], "14183273e": 175, "142": [12, 143, 155], "14204329": 129, "1425": 150, "1426": 150, "142631": 150, "142705": 17, "142857": 143, "143": [12, 143, 150], "1437": 154, "14398": 148, "144": [12, 28, 48, 95, 143, 150], "1445": [161, 170], "1446": 170, "14464017748832703": 147, "1447": [154, 170], "1448": 170, "1449": 170, "145": [12, 143, 150, 155], "1453": 161, "14577043e": 175, "1459": 157, "146": [12, 35, 143, 146, 150], "146124": 17, "14613738e": 175, "1465": 149, "146599183": 68, "147": [12, 143, 150], "1472": 150, "14770535": 126, "147751": 17, "147760": 148, "148": [12, 128, 143, 150, 155, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "148148": 143, "14847551e": 175, "149": [12, 143, 150], "1490": 150, "149320": 17, "1495": 148, "1499": 149, "14it": 149, "14j": 91, "14m": 154, "15": [8, 12, 15, 16, 17, 18, 19, 29, 31, 36, 38, 39, 40, 43, 44, 46, 47, 49, 51, 52, 53, 54, 55, 57, 60, 61, 65, 66, 71, 72, 74, 80, 92, 95, 101, 102, 122, 127, 128, 143, 144, 149, 150, 152, 153, 154, 155, 161, 163, 165, 170, 171, 173, 174, 175], "150": [12, 14, 15, 91, 104, 122, 123, 132, 143, 150, 155, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1500": [149, 165, 167], "15000": [72, 123], "150000": 123, "1501": 149, "1502": 149, "1503": 149, "1505": 149, "1506": 148, "15097": 12, "151": [12, 143], "151165": 173, "1511893559": 59, "1513": 149, "15150": 155, "151786": 143, "152": [12, 143, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "152862": 17, "1528797322": 60, "153": [48, 143], "1531": 148, "15325888": 148, "153259": 148, "1533": 148, "153319": 11, "153527": [11, 13], "153883": 17, "154": [132, 133, 143, 144, 150], "1541": 149, "1545730073": 64, "1545925769": 65, "1545966844": 65, "1549": 140, "155": 143, "15514180e": 175, "1554": 154, "1556": 154, "156": [24, 143, 144, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "156250": 143, "156586": 16, "1568291": 172, "15687723e": 175, "1569": 149, "157": [143, 146], "15750": 144, "1576": 154, "158": [143, 144, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "158023": 122, "1582568": 172, "1589": [149, 154], "159": 143, "1590": 149, "159689": 13, "159790": 17, "16": [8, 12, 15, 27, 30, 31, 32, 34, 37, 38, 47, 48, 49, 51, 53, 54, 55, 57, 66, 72, 79, 80, 85, 90, 91, 92, 95, 101, 102, 103, 127, 128, 129, 143, 144, 146, 147, 150, 152, 154, 155, 161, 165, 166, 168, 170, 171, 172, 173, 176, 177], "160": [132, 143, 144, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1600": 147, "1608": [149, 150], "161": 143, "161006790": 68, "161290": 143, "161491": 16, "16188": 132, "16189161": 149, "162": [74, 143], "1620": [149, 150], "162014": 150, "1623": 150, "1624370069": 64, "1624370297": 65, "16280mib": 146, "162875": 8, "163": [143, 150], "163778": 17, "164": 143, "1640": 154, "1647": [150, 168], "1648": 146, "165": [143, 150], "16500": [132, 133, 144], "1652": 154, "166": [17, 19, 143], "1664": 149, "1666": 148, "1669": 155, "167": 143, "167204": 17, "168": [132, 133, 143, 144], "16807": 57, "168321": 60, "1685": 150, "1686": 150, "169": [143, 144], "1690": [156, 157], "169322": 148, "1695": 154, "1697": 150, "169704": 150, "16j": 91, "16pt": 173, "16x": 150, "16x16": 154, "17": [12, 15, 38, 47, 48, 51, 53, 55, 57, 65, 66, 71, 72, 92, 101, 102, 103, 127, 135, 143, 144, 148, 150, 154, 155, 161, 169, 173, 177, 178], "170": 143, "1700": 18, "1701": 154, "170215": 17, "17041474e": 175, "171": [132, 133, 143, 144, 146, 150], "1711e": 149, "17137357e": 175, "171588": 17, "171995": 144, "172": [65, 143, 150], "1725": [149, 150], "17254901960784313": 166, "173": [143, 150], "173282": 148, "17328203": 148, "1733": 148, "1734": 149, "173469": 143, "1736": 148, "174": [143, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "174260": 8, "17450": [132, 133, 144], "175": [80, 122, 143], "175000": 123, "1751": 149, "1752011936438014": 51, "176": [77, 80, 132, 133, 143, 144, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "176471": 143, "1765": 150, "1766": 155, "177": 143, "1772": 154, "177mib": 146, "178": 143, "179": 143, "179027": 17, "17951135e": 175, "179585": 11, "1796": 47, "17995": 144, "18": [12, 15, 27, 29, 32, 34, 38, 43, 44, 47, 49, 55, 56, 57, 59, 60, 62, 63, 66, 68, 72, 94, 95, 97, 102, 103, 122, 127, 132, 133, 135, 143, 144, 148, 150, 154, 155, 161, 172, 176, 177], "180": [48, 143, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1800": 147, "18000": 123, "1802": 149, "1804": [148, 150, 154], "18089902e": 175, "181": [143, 150], "1815": 149, "18176766975113706": 163, "1819": [74, 77], "182": [143, 144, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1821": 74, "1822565": 172, "183": [80, 143, 155], "18324209e": 175, "18344": 144, "184": [143, 144, 150], "184080": 12, "1843": 150, "1845": 149, "185": [143, 155], "1850": 149, "186": 143, "18644463e": 175, "1865": 149, "1867": 149, "1869": 149, "186988000": 68, "187": [143, 144, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1872": 148, "187264": [11, 13], "1873": 149, "1875": 149, "187500": 143, "188": [132, 133, 143, 144, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1882": [149, 150], "1882615260180538": 169, "188828": 17, "1889": 148, "189": [143, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "18920": 144, "19": [12, 15, 34, 38, 40, 47, 48, 52, 53, 56, 57, 65, 66, 72, 74, 75, 77, 91, 95, 102, 122, 127, 128, 132, 133, 135, 137, 138, 139, 141, 142, 143, 144, 146, 149, 150, 152, 154, 163, 166, 169, 172], "190": [143, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1900": 132, "19000": 103, "1902": 149, "190337": 15, "190504": 171, "190871": 122, "191": 143, "1910": 149, "19116": 102, "1913": 148, "192": [143, 152], "1920e": 148, "1922": 150, "192250": 15, "1926": 71, "1927": 149, "1928": 47, "192985": 122, "193": [143, 144, 150], "19305918e": 175, "193080": 122, "193451495": 146, "1937": 24, "194": [143, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "194125062": 68, "1942": 39, "1945": 148, "195": 143, "1953": 47, "1955": 154, "19566591e": 175, "195915": 8, "196": [122, 129, 143, 154, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1961": 150, "196526332130161": 129, "1966": 52, "19680801": [25, 107, 111], "19692239e": 175, "197": [143, 144, 154, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "1970": [59, 64, 65, 146], "1973": 149, "19735756e": 175, "197483": 15, "1976713240146637": 147, "1977": 175, "19789154e": 175, "1979": [150, 154, 157], "197917": 150, "198": 143, "1984": [149, 154], "1989": 154, "199": [143, 144, 155, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "199128": 16, "199333": 161, "1996": 0, "1997": 0, "1999": 149, "19a": 70, "1a2": 39, "1ab34": 39, "1b9ae9b69587": 128, "1d": [125, 126, 149, 154], "1e": [30, 149, 150, 154, 155], "1e100": 91, "1e6": [28, 29], "1e8": 172, "1ee33d": 80, "1f": [52, 123, 173], "1first_nam": 39, "1gcsgplmabavqz26": 80, "1j": [31, 91, 130], "1k": [148, 154], "1m": [31, 122], "1min": 153, "1n": 31, "1num": 90, "1p": 93, "1st": [37, 53, 75, 76, 77, 78, 80, 146], "1variabl": 88, "1x": 155, "1x1": [16, 18], "1x2": [16, 18], "1x3": [16, 18], "1x4": [16, 18], "1x5": [16, 18], "1x6": [16, 18], "1x7": [16, 18], "1x8": [16, 18], "1x9": [16, 18], "2": [3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 30, 31, 32, 34, 36, 40, 42, 43, 44, 48, 51, 57, 65, 71, 72, 75, 76, 77, 78, 79, 81, 82, 83, 96, 98, 102, 103, 104, 106, 109, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 151, 152, 153, 158, 159, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 182], "20": [11, 12, 13, 15, 16, 17, 18, 19, 28, 29, 32, 34, 36, 38, 40, 46, 47, 48, 49, 51, 52, 53, 56, 57, 59, 63, 66, 71, 72, 74, 75, 77, 79, 80, 92, 95, 101, 102, 122, 125, 127, 128, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 152, 153, 154, 155, 157, 163, 165, 166, 171, 173], "200": [55, 74, 77, 80, 91, 103, 122, 127, 143, 147, 148, 154, 155, 166, 175, 177], "2000": 123, "200000": [123, 132], "200000000000003": 85, "20040757": 129, "200555": 63, "200882": 17, "201": [59, 143], "2011": [122, 148], "2012": [59, 97], "2013": [60, 61], "201300": 173, "2015": [154, 161, 177], "2016": [175, 177], "2017": [11, 13, 59, 148, 154, 163, 177], "2018": [39, 59, 60, 61, 64, 65, 122, 177], "2019": [59, 60, 61, 63, 64, 65, 77, 146, 154], "202": [74, 143], "2020": [63, 132], "20200": 155, "2021": [52, 59, 60, 62, 65, 74, 146, 155], "2021pythondatatyp": 52, "2021pythondatayp": 52, "2022": [71, 146, 149, 150, 152, 153, 154, 155], "2023": [24, 146], "20240789e": 175, "202563": 166, "2028": 149, "202998": 8, "203": [17, 19, 143], "2032": 154, "2039": [149, 150], "204": 143, "2044": 154, "204451": 17, "20491465": 129, "205": 143, "2050": 154, "2052": 149, "205306": 15, "2056": 168, "206": 143, "206135893": 68, "2064": 154, "207": [143, 144, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "2074": 154, "2076": 154, "20784702e": 175, "208": [143, 144, 152], "20800138e": 175, "20801": 122, "20843398e": 175, "2087a9c41308": 38, "209": 143, "209539": 15, "209800": 15, "20994144e": 175, "20it": 157, "20x20": 7, "21": [12, 15, 31, 38, 40, 47, 48, 49, 52, 53, 56, 57, 59, 61, 62, 65, 66, 72, 77, 80, 103, 122, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 149, 150, 152, 165, 168, 170, 171, 172, 173, 177], "210": [143, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "2102": 39, "2106": 149, "2109": 146, "211": [143, 162], "211349": [11, 13], "211538": 143, "2117351": 155, "2118": [148, 149], "212": [143, 162], "2124579": 150, "2126": 161, "21260800e": 175, "2129": 154, "213": [143, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "21330910940589698": 169, "2134": 149, "21355": 12, "2137": 154, "213710": 15, "21379529e": 175, "214": [17, 19, 143, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "214286": 143, "214695": 175, "214782": 12, "215": [143, 149], "2150": 154, "2154": 129, "2157": [149, 150], "216": [48, 57, 80, 143, 149], "2162": 146, "217": [143, 149], "21728": 12, "21729660034179688": 147, "217391": 143, "21741122e": 175, "21748794e": 175, "218": [143, 149, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "2181": 149, "2183": 149, "21855997e": 175, "2189884": 12, "219": [128, 143, 149, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "2191": 149, "2196": 149, "21987980e": 175, "21k": 154, "22": [12, 15, 24, 29, 31, 52, 53, 56, 57, 59, 60, 62, 63, 65, 66, 72, 77, 79, 80, 95, 127, 128, 129, 133, 143, 146, 149, 150, 154, 161, 171, 173, 177], "220": 143, "2200": 154, "220087": 173, "22026": 51, "2205": 154, "220657": 17, "2209": 149, "221": [143, 153, 155], "2210": 148, "2211": 149, "222": 143, "222222": 143, "22222222": 129, "22291790e": 175, "223": [143, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "223188": 8, "2235": 149, "22357762": 129, "22389": 166, "223905": [11, 13], "22397933e": 175, "224": [143, 146, 150, 152, 153, 154, 155], "22417715e": 175, "224369": 11, "2244": 148, "224x224": 152, "225": [143, 150, 152, 153, 154, 155, 156, 157], "225000": 123, "2251799813685248": 51, "2256": 148, "2258": 149, "225806": 143, "22592182e": 175, "226": [122, 143], "2261": 154, "226677": 13, "22672978": 126, "227": [143, 153, 155, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "2270": 148, "22709318e": 175, "22722896e": 175, "2275": [149, 150], "2279": 154, "228": [122, 143], "2281": 154, "228173": 155, "228434": 173, "22897": 172, "229": [143, 146, 152, 153, 154, 155, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "22911": 166, "2292": [146, 154], "22931538e": 175, "22949": 166, "23": [12, 15, 31, 39, 47, 48, 52, 53, 59, 60, 61, 63, 65, 66, 80, 93, 102, 122, 127, 132, 133, 143, 144, 146, 149, 150, 153, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "230": 143, "2303": 149, "2305ca5": 24, "231": 143, "2314": 150, "23148074": 148, "231481": 148, "2315": 148, "23180804": 126, "2319": 149, "232": [143, 152, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "2328": 149, "233": [48, 143], "2331": 149, "233336": 11, "233423": 59, "23379671": 129, "2339e": 148, "234": 143, "2344": 154, "2345": 149, "234566": 59, "2347": [149, 154], "234922": 11, "235": 143, "2351": 154, "2352": 154, "2353": 150, "2354": 149, "2358": 154, "236": 143, "2360": 149, "23600": 144, "23606798": 128, "23611012e": 175, "2368": 146, "237": 143, "2377": 154, "238": 143, "2381": 148, "23845": 144, "2389": 154, "239": 143, "2391": 154, "2392": [149, 150], "24": [12, 15, 29, 40, 47, 49, 53, 55, 56, 57, 60, 61, 66, 68, 79, 80, 101, 102, 122, 127, 132, 133, 143, 144, 149, 150, 152, 154, 155, 165, 168, 170, 171, 172, 173, 177], "240": [143, 152], "2400": 148, "2401": [57, 149], "241": 143, "2412": 154, "2418": 154, "242": 143, "2422": 154, "24271445e": 175, "24299133e": 175, "242b77ef2a87": 92, "243": [57, 143], "2431": [149, 150], "2432": 149, "244": [80, 143], "2445": 154, "2446": 154, "244898": 177, "2449": 149, "245": 143, "2454": 154, "245426098662": 136, "245483": [11, 13], "2456": 149, "245614": 143, "2457": 28, "24576mib": 146, "2458": 161, "246": 143, "246154": 132, "2465": 149, "24674836e": 175, "24677": 166, "247": [143, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "2471": 149, "247597": [11, 13], "2476979795053773": 51, "248": [143, 154], "24813498e": 175, "248490": [11, 13], "24865": 172, "249": 143, "2493": 154, "249765": 149, "2499": 149, "25": [12, 16, 17, 18, 19, 24, 30, 37, 40, 47, 48, 49, 51, 53, 55, 56, 57, 60, 64, 66, 68, 71, 80, 91, 92, 94, 95, 101, 102, 122, 123, 127, 128, 132, 143, 148, 150, 155, 161, 163, 165, 166, 168, 172, 173, 177], "250": [104, 143, 149, 150, 154, 155], "2500": [47, 150, 171, 173], "250000": [123, 132, 143, 166], "2505": 148, "250fe64180f3": 102, "250w": 146, "251": [51, 143], "2510": [149, 150], "252": 143, "2521": 149, "25231985e": 175, "25250": 155, "2526": 154, "252785": 13, "253": [51, 143], "2531": 155, "2534156": 172, "2535": 161, "2536": 149, "254": [101, 143], "2541": 154, "2549": [148, 149], "25490048e": 175, "255": [9, 11, 16, 17, 18, 19, 80, 143, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "2550": 47, "2557": 168, "2558": 149, "2559205": 126, "256": [30, 53, 57, 143, 149, 150, 152, 153, 154], "2560": [149, 150], "25600": 149, "2560x3": 150, "2566": 146, "2569": 149, "257": [84, 143], "2573": 154, "2578": 150, "257812": 150, "258": 143, "2581": 149, "2582289": 155, "258364": 15, "2587": 149, "258705000": 68, "258745": 172, "2588": 149, "259": 143, "259259": 143, "259490": 161, "25hmlxtend": 149, "25th": 132, "26": [12, 52, 53, 54, 56, 57, 63, 66, 80, 101, 122, 127, 132, 133, 143, 144, 161, 165, 171, 173], "260": 143, "2604": [150, 154, 157], "260417": 150, "2606": 154, "2609": 149, "261": 143, "2617": 154, "261842": 166, "262": [143, 152], "262144": 52, "262680": 16, "2627": 149, "263": 143, "2633": 154, "2635": 154, "263600": 15, "2637": 154, "2638": 149, "264": 143, "2641": [151, 153, 156, 157], "26421880": 149, "264672": 17, "265": 143, "265008": 12, "26568259e": 175, "26571389e": 175, "266": 143, "2660": 154, "2664": 149, "2669": 149, "267": 143, "2671131": 146, "2671256": 146, "268": 143, "2686": 149, "2688": 149, "269": 143, "2694": 154, "2697": 154, "269809": 149, "27": [12, 36, 40, 47, 48, 49, 56, 57, 63, 65, 68, 77, 79, 94, 95, 101, 122, 127, 128, 132, 133, 143, 144, 146, 149, 150, 152, 171], "270": 143, "2706": 149, "2707": 154, "271": 143, "2711": 148, "2713": 149, "2714": 155, "271429": 143, "272": 143, "27216990e": 175, "272699": 173, "272727": 143, "273": [38, 143], "2738": 154, "274": 143, "2741": 149, "2748": 148, "275": [143, 170], "27500": 132, "2751": 154, "2752603": 155, "2753": 149, "2754": 154, "27541": 155, "275510": 143, "275862": 155, "276": 143, "2761": 11, "2766": 154, "276716": [11, 13], "27672348": 126, "277": 143, "277027": [11, 13], "2771": 154, "2772": 154, "2773": 154, "27764243": 126, "2779": 149, "278": 143, "2780": 153, "2782": 154, "278711": 17, "27891384e": 175, "279": 143, "2793": 154, "2795": [146, 154], "27j": 91, "27w": 146, "28": [12, 15, 31, 38, 47, 48, 49, 56, 57, 59, 65, 71, 80, 101, 122, 127, 143, 144, 149, 150, 152, 153, 173], "280": [143, 150], "2804": 154, "2805": 155, "280702": 143, "2809": [149, 154], "280w": 146, "281": [143, 152], "281250": 143, "28128674924373626": 155, "281287": 155, "2813": 155, "2815": 148, "2817": 170, "2818": 170, "2819": 170, "282": 143, "2820": 170, "2821": 170, "2822": 161, "2824": [148, 149, 150], "28254475e": 175, "282662": [11, 13], "283": 143, "2833": [149, 171, 173], "28366219": 128, "284": [11, 13, 143], "2840": [149, 154], "28418980453852622603883856494709731311218158362293224700445543940796643776911788129508577246309929258069598467896008287596053863082109746801947722280783720032649818198464452375358348619120021135797251857019557032565638659667745421115194468559021541269027438746788486392649581405327516658718317011453858465218779880972140612551504149701082164179367484198570734230003528355826545644223794779911723917115845213739921327820409005460708547942445234906498880588411276755120002108963510955276534630522965966177951626038063994937181228938844252668098515385045718428663547788122173798704717510979319749834083419004355222012043715855123615249682039587844431246269017612728291710718821388840627277407189863509789929339102406655115786899696829902032282666983426897111750208839152830573688512831984602085360572485861376": 95, "2842": [148, 149], "2848": 154, "285": 143, "2852": 157, "286": 143, "2863": 149, "28675168e": 175, "2869": 155, "287": 143, "287372": [11, 13], "2874848": 155, "288": [143, 152, 153, 155], "2881": 148, "2883": 150, "28883356e": 175, "289": 143, "2890": 148, "289000": 122, "2891": 154, "289474": 166, "28x19": [16, 18], "28x20": [16, 18], "28x21": [16, 18], "28x22": [16, 18], "28x23": [16, 18], "28x24": [16, 18], "28x25": [16, 18], "28x26": [16, 18], "28x27": [16, 18], "28x28": [5, 7, 9, 16, 17, 18, 19, 149], "29": [12, 15, 19, 38, 47, 48, 65, 68, 101, 127, 128, 143, 144, 150, 153, 154, 155, 164, 165, 170, 172, 177], "290": [143, 152], "2902": 149, "290549": [11, 13], "2906": 148, "291": 143, "291667": 143, "2917": 149, "2918": 148, "291853": 14, "292": 143, "2920": 149, "2920e": 149, "29235": 12, "292969": 150, "293": 143, "2930": [150, 157], "293987": 12, "294": 143, "29402596": 129, "2941": 149, "29431485e": 175, "2946014910624595": 80, "294804": [11, 13], "294850": 13, "295": 143, "29515": 149, "29534113": 129, "295455": 143, "29560668e": 175, "295817": 11, "296": 143, "2969": 154, "297": 143, "2972": 153, "2973": [151, 153, 156, 157], "298": 143, "2981": 149, "298226": 11, "299": 143, "2992": 154, "29995": 144, "2b7b22686f73744e616d65223a22544954414e2d525458227d": 146, "2d": [15, 122, 123, 125, 126, 132, 148, 149, 154, 169, 178], "2d7f5e": 173, "2darrai": [136, 139], "2f": [11, 12, 13, 52, 94, 103, 122, 148, 149, 173, 176], "2f7f4e5fdb49": 66, "2j": [31, 51, 91, 92], "2k": 149, "2min": 153, "2n": 31, "2nd": [37, 52, 53, 54, 75, 76, 78, 146], "2p": 27, "2rgxf": 80, "2x": [95, 122, 154, 155], "2x2": [126, 177], "3": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 30, 31, 32, 34, 36, 38, 40, 43, 44, 46, 48, 51, 55, 57, 61, 65, 71, 72, 75, 76, 77, 78, 79, 82, 85, 87, 88, 93, 96, 98, 99, 101, 102, 103, 104, 106, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 147, 148, 150, 151, 152, 153, 156, 157, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 174, 175, 176, 177, 178, 179], "30": [14, 17, 19, 28, 29, 36, 37, 38, 44, 47, 48, 49, 52, 53, 57, 59, 60, 61, 63, 65, 71, 74, 75, 76, 77, 80, 90, 92, 95, 96, 101, 122, 127, 132, 143, 146, 147, 148, 149, 152, 154, 155, 163, 166, 168, 170, 171, 174], "300": [18, 38, 53, 90, 91, 122, 143, 147, 148, 154, 164], "3000": [17, 18, 72, 147, 148], "300000": [123, 161], "3000000000000003": 51, "300000e": 94, "3008": 154, "301": 143, "301184": [11, 13], "30119580e": 175, "3013": 149, "3015": 149, "302": 143, "3020": 149, "302078": 11, "3024": 150, "3025": 147, "303": [143, 155], "3031": 149, "30378713e": 175, "3038": 155, "303m": 154, "304": 143, "3047": 150, "305": 143, "305880": 15, "306": 143, "3061": 146, "306264": 173, "30668723": 126, "307": [143, 154], "3070": 148, "3072": 154, "3076": 149, "307m": 154, "308": 143, "3083": 149, "308492": 15, "3087": 154, "309": [143, 155], "30911403e": 175, "3092": 153, "30920635": 126, "30c": 146, "30fp": 155, "31": [31, 38, 47, 48, 59, 60, 61, 65, 80, 101, 122, 143, 144, 149, 150, 152, 155, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "310": [139, 143], "31002414e": 175, "3100563": 155, "3102": 146, "310634": 15, "3106e": 148, "3107": 148, "311": [13, 139, 143], "311099": 16, "3112": 154, "3114": 154, "312": [139, 143], "3125": [57, 148], "312500": 143, "31287314e": 175, "31288138031959534": 147, "3129": 155, "313": [139, 143, 149], "313125": 14, "3137": 149, "313707": [11, 13], "31390556e": 175, "314": [11, 13, 74, 139, 143], "3140": [147, 148], "3141": 154, "3142": 148, "3143": 13, "3145": 154, "3149": 154, "315": 143, "315317": 11, "3153600000": 95, "31576734e": 175, "3159": 154, "315964": [11, 13], "316": [11, 13, 143], "3169": 148, "317": 143, "31701798e": 175, "31708111e": 175, "318": 143, "3187": 153, "318750": 132, "319": 143, "3191": 149, "31m10": 149, "31m54": 149, "31x31": 149, "32": [15, 31, 32, 34, 38, 47, 49, 53, 57, 61, 74, 101, 128, 132, 143, 146, 149, 150, 151, 152, 153, 154, 155, 157, 161, 173, 177], "320": [143, 152], "3208": 154, "320879": 13, "3209": 154, "321": 143, "3210": 148, "321004": 173, "32105794e": 175, "3212": [149, 154], "3216": 149, "322": 143, "322715": [11, 13], "323": 143, "3230": 146, "32354": 149, "323947000": 68, "324": 143, "324129": 173, "3242": 149, "3246": 148, "3248": 149, "325": 143, "325394": 11, "326": 143, "3261": 154, "3263": 154, "326574": [11, 13], "3268": 155, "327": [143, 154, 155], "3275": 154, "32768": 57, "3277": 150, "3278": 154, "328": 143, "3280": [147, 148], "3285697102546692": 149, "32857": 149, "328570": 149, "329": 143, "3295": [156, 157], "3298": 154, "329871": 11, "32m1": 149, "32m519": 149, "33": [13, 15, 29, 31, 47, 52, 59, 66, 77, 80, 93, 94, 101, 103, 122, 129, 143, 144, 146, 153, 155], "330": [49, 143], "3301": 154, "3307": 154, "3308": 153, "33094796e": 175, "331": 143, "33114510e": 175, "331191": 62, "33142653": 126, "332": 143, "33205527e": 175, "3323": 154, "333": [52, 59, 95, 143], "3333": [156, 157], "333333": 144, "33333333": [51, 128, 129], "333333333333333": 95, "333333333333333481363069950020872056484222412109375": 80, "3333333333333335": 80, "334": 143, "3345": 154, "334694": 17, "3349": 153, "335": 143, "3350": 148, "33516842e": 175, "3352": 150, "3353": 154, "336": 143, "33662976e": 175, "3367": [147, 149], "337": 143, "3371": [150, 156, 157], "3372": 154, "3374": 154, "33768743e": 175, "3377": [148, 149, 154], "3378": 150, "338": 143, "3380": 148, "3383": 153, "33856867e": 175, "338695217273813": 129, "339": 143, "3393": 149, "3399": 149, "33it": 157, "34": [39, 48, 59, 66, 80, 95, 101, 127, 129, 143, 144, 146, 149, 154, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "340": [47, 48, 143], "3400": [151, 153, 156, 157], "3401": 146, "3407": 149, "340730": 12, "3409": 149, "340909": 143, "341": 143, "3410": 154, "3412": 150, "3417": 148, "342": 143, "3420": 147, "34238": 59, "342380": 59, "3428": 154, "343": [48, 57, 143], "343280": 11, "343750": 143, "3438": 154, "344": [13, 143], "344095": [11, 13], "34435993e": 175, "3448": [148, 154], "345": 143, "345081": 15, "3451": 149, "3452": 152, "3454": 153, "3456": 39, "345673": 39, "3456789": 52, "34567890": 94, "3457": [52, 155], "3458": 154, "346": [94, 143], "3463551998138428": 147, "3464": 154, "347": [61, 143], "348": [61, 143], "3483": 153, "3486": [149, 154], "3487": 152, "348722": 149, "349": [61, 143, 149], "3492": 152, "3493": 149, "349540": 14, "3496": 154, "35": [8, 32, 39, 47, 49, 52, 53, 62, 65, 92, 94, 122, 127, 143, 144, 150, 152, 161, 170, 171, 172, 173], "350": [19, 61, 143, 152], "350000": [123, 161], "351": [61, 143], "3512": 155, "3513": 147, "352": 143, "35266299": 126, "352682": 11, "353": 143, "3535e": 148, "3539": 148, "354": 143, "3547": 155, "354839": 143, "35488217e": 175, "3549": 148, "355": 143, "3551": 153, "355280": [11, 13], "356": [39, 143], "3560": 147, "356651": [11, 13], "3567": 154, "3568": 153, "357": 143, "3570": 154, "35713": 149, "357143": 143, "357150": 13, "3572": 154, "35731444e": 175, "357765": 11, "358": 143, "3581": 154, "3582": 149, "359": 143, "3594": 154, "35994688e": 175, "35c": 146, "35it": 157, "36": [35, 47, 48, 49, 52, 57, 74, 88, 94, 122, 143, 149, 161, 164], "360": 143, "36000": 144, "3606": 154, "3608": 149, "360856": 171, "3609": 149, "361": [65, 143], "361467": 11, "36149": 149, "362": [65, 143], "3620": 153, "362012": [11, 13], "3622237": 155, "3624": 149, "362880": 28, "363": 143, "363636": 143, "364": 143, "3649": 146, "36492380e": 175, "365": [52, 143], "366": [60, 61, 65, 143], "3662": 149, "3664": 154, "36699927e": 175, "367": 143, "367007": [11, 13], "3673": 149, "3677": 154, "36782780e": 175, "368": 143, "3681b3969e27": 72, "36880": 144, "369": 143, "36938945e": 175, "3694": 149, "36m0": 149, "37": [15, 38, 47, 48, 101, 132, 133, 143, 144, 148, 152, 177], "370": 143, "3700": [147, 154], "3702": 154, "37028": 144, "370370": 143, "3705": 153, "371": 143, "3711": 153, "3712": 157, "37144872e": 175, "3715": 148, "37181743e": 175, "372": 143, "3723": 148, "3726": 154, "3727": [149, 154], "373": [143, 152], "3733": 149, "3736": [149, 154], "3738": 150, "37380679e": 175, "374": 143, "3741": 154, "3742": 154, "3743": 146, "3745": [149, 153], "3749": 155, "375": [68, 143], "375000": [15, 143], "3752": 149, "3757": [148, 155], "3759": 149, "376": 143, "37644": 166, "377": [11, 13, 48, 143], "3770514": 155, "3776": 154, "37796264e": 175, "378": 143, "3781": 154, "378594": 149, "37859424920129": 149, "3787": 154, "379": 143, "379273": 11, "379510": [11, 13], "38": [15, 63, 101, 122, 143, 148, 149, 150, 166, 171, 173, 175, 177], "380": [143, 154], "3801": 148, "381": 143, "382": 143, "3820": 154, "38209653": 126, "38223": 166, "38224839e": 175, "382612": [11, 13], "382817": [11, 13], "3829": [146, 155], "383": 143, "38336447": 129, "3835": 149, "38385823e": 175, "384": [143, 150], "3840": 147, "38400": 149, "3841": 149, "384232": 15, "38429280e": 175, "3843": 149, "384398": 11, "384399": [11, 13], "384403": [11, 13], "3849": 149, "385": 143, "385399": [11, 13], "38568225e": 175, "38575866e": 175, "385965": 143, "385970": [11, 13], "386": 143, "3860": 148, "3862": 153, "3864": 146, "3867": [156, 157], "387": 143, "3870": 149, "387097": 143, "38787858e": 175, "388": 143, "3882": 149, "3889": 153, "389": 143, "3890561": 128, "389559": 13, "3897": 155, "39": [47, 52, 59, 66, 122, 143, 150, 161, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "390": 143, "3904": 146, "3906": [153, 154], "3909": 153, "391": [143, 152, 153], "39119225e": 175, "3913": 154, "3915": 155, "39169378e": 175, "392": 143, "392857": 143, "393": 143, "393174": 11, "3934": 154, "393413": 173, "3937": 148, "39373073": 148, "393731": 148, "3938": 149, "394": 143, "3945": [151, 153, 156, 157], "3946": 148, "39461": 155, "395": 143, "39594634e": 175, "396": 143, "3961": 150, "397": 143, "39764517e": 175, "39771": 149, "398": 143, "3980": [147, 154], "39801": 39, "398040": 15, "3982": [147, 154], "3984": [152, 153, 154], "3984375": 153, "39878883": 126, "399": [53, 143], "39957927e": 175, "3bfaa309574d": 56, "3blue1brown": [7, 147], "3d": [8, 11, 24, 127, 146, 149], "3da34cc7641": 52, "3e": 154, "3e859d37287a": 88, "3ec8c6652eef": 78, "3f": [52, 94, 149, 150, 152, 156, 157], "3j": [24, 51, 91, 92, 102], "3m": 154, "3n": 31, "3rd": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 53, 76, 78, 125, 165], "3x2": 146, "4": [3, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 71, 74, 75, 76, 77, 78, 79, 80, 82, 87, 88, 90, 93, 94, 98, 101, 102, 103, 106, 107, 111, 122, 125, 126, 127, 128, 129, 131, 132, 133, 135, 137, 139, 141, 143, 147, 148, 149, 150, 151, 152, 153, 156, 157, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "40": [12, 15, 28, 29, 47, 49, 57, 66, 71, 77, 92, 94, 95, 122, 127, 134, 143, 146, 147, 148, 150, 152, 157, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "400": [7, 143, 147, 148, 149, 166], "4000": [123, 149, 150], "400000": [123, 144, 161], "40015831": 126, "400770": [11, 13], "4008": 154, "4009": 154, "401": 143, "4012e": 149, "402": 143, "4023": 154, "4027": 148, "403": [11, 143], "4032": 150, "4033": 154, "403509": 143, "403846": 143, "4039": 150, "404": 143, "404206": 14, "404240": 15, "4044": 154, "4049": 147, "405": 143, "4054": 149, "405706": [11, 13], "406": [143, 152, 153, 154, 155], "40603744": 129, "4061": 148, "40636423e": 175, "4064": 149, "406469": 8, "407": 143, "4071": 146, "4078": 150, "408": 143, "408520": 8, "408781": 11, "409": [143, 152, 170], "40904134e": 175, "409091": 143, "4092": 149, "4094": 149, "4096": [57, 154], "40960": 144, "40it": 157, "41": [32, 47, 48, 65, 66, 122, 143, 144, 148, 149, 150, 152, 155, 175], "410": [143, 170], "4102": 157, "410458": [11, 13], "41083552e": 175, "411": [143, 170], "411377": 15, "4114": 149, "4115": 154, "4116": 147, "412": [143, 170], "4120": [147, 154], "41276190e": 175, "4129": 154, "41292267e": 175, "413": [143, 170], "41315": 144, "4131591": 128, "4133": [156, 157], "4134": 148, "414": 143, "41405704e": 175, "41406033e": 175, "414062": 150, "4141": [150, 157], "41421356": 128, "414368": 175, "4147": 148, "415": 143, "4151": 136, "4152": 136, "4153": 136, "4154": [136, 148], "4155": 136, "4157": 149, "416": 143, "41614684": 128, "416667": 143, "417": 143, "4175e": 149, "4178": 154, "418": 143, "4184": 147, "4186": 136, "4187": 136, "4188": [136, 154], "4189": 136, "419": 143, "4190": 136, "4196": [149, 150], "419745": 13, "42": [47, 49, 55, 59, 66, 103, 129, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 167], "420": 143, "421": 143, "422": [11, 143], "4224": 146, "4227": 153, "4228": 149, "4229": 154, "423": 143, "4235": 150, "423522": 12, "423851": 15, "424": 143, "4242": 153, "4245": 155, "42477796076938": 80, "42499377e": 175, "425": 143, "4251": 147, "42530": 172, "42538101e": 175, "4256": 149, "425781": 150, "4258": [150, 154], "426": 143, "4260": 147, "42612988": 129, "426227": [11, 13], "42651757188499": 149, "426518": 149, "427": 143, "4271": 149, "4272": 154, "427426": [11, 13], "4275": 149, "4277": 149, "4279": 148, "428": 143, "428571": 143, "42857143": 128, "4286f4": 122, "428939": [11, 13], "429": 143, "4290": 155, "43": [17, 19, 32, 47, 48, 66, 128, 143, 148, 149, 150, 155], "430": 143, "430182": [11, 13], "4306": 136, "4307": 136, "4308": 136, "4309": 136, "430905": 13, "431": 143, "4310": 136, "4312": 148, "4318": 147, "43186c7d3555": 88, "4319": 149, "43196619e": 175, "432": 143, "433": 143, "4330": 149, "4332": 148, "433627": 11, "434": 143, "4340020aef34": 102, "4344": 153, "43469003": 129, "435": 143, "4353": 150, "4355": 155, "435540": [11, 13], "43563027": 126, "435633": 59, "435866": 161, "436": 143, "4364": 149, "4366": 154, "4368": 154, "437": 143, "4372": 149, "437500": 143, "4378": 154, "438": 143, "4381": 155, "4386": 147, "4388": [149, 155], "439": 143, "439305": 15, "44": [29, 65, 66, 143, 149, 150, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "440": 143, "4400": [156, 157], "4404": 153, "441": 143, "4411": 149, "44120621e": 175, "4414": 149, "4417": 149, "442": 143, "4422": 148, "44220765": 148, "442208": 148, "4422102": 149, "44225798": 126, "442308": [132, 143], "4428": [146, 154], "443": [143, 155], "443572": [11, 13], "443705": 15, "4439": 139, "444": 143, "4440": 139, "4441": [139, 148], "4442": 139, "4443": 139, "444444": 143, "44444444": 129, "445": 143, "4451": 149, "4453": 147, "4455": 149, "4458": 153, "446": 143, "4462": 153, "44666284e": 175, "4469": 146, "447": 143, "4474": 155, "44794755e": 175, "448": [143, 152], "4482": 154, "449": [143, 150], "4492": 154, "4493": 149, "449489742783178": 80, "4496": 170, "4497": 170, "4498": 170, "4499": 170, "45": [14, 15, 47, 48, 49, 66, 68, 80, 89, 97, 122, 140, 143, 146, 148, 150, 161, 170, 177], "450": [143, 146, 150, 155], "4500": [16, 170], "45000": 132, "451": [143, 150], "4510": 149, "45103300e": 175, "4515": 154, "452": [143, 150], "4520": 147, "4522": 154, "453": [143, 150], "4533": [156, 157], "4535": 154, "45359369": 126, "454": [143, 150], "4540": 154, "45400": 144, "45409876e": 175, "454545": 143, "45468093e": 175, "455": 143, "45503": 149, "455357": 143, "4555": 153, "4559": 148, "456": [52, 93, 143, 150, 152, 153, 154, 155], "456140": 143, "4566": 146, "4569": 149, "457": [143, 150], "4570": 154, "4575": 153, "458": 143, "4583": 171, "458333": 143, "4584": 154, "458614": 14, "4588": [147, 149], "459": 143, "4592": 154, "45d582f31548": 102, "46": [15, 40, 66, 74, 122, 143, 144, 146, 148, 150, 153, 170, 177], "460": [143, 146], "4601": 149, "46063092e": 175, "46075265e": 175, "4609": 149, "461": [143, 157], "4618": 147, "462": 143, "462272": [11, 13], "463": 143, "4631": 154, "464": 143, "4640": 153, "4641": 129, "4644": 154, "4647": 149, "465": 143, "4651": 148, "4653": 155, "465640": 15, "465794806718": 51, "4658": 154, "466": 143, "466366": 13, "4666666666666668": 163, "4667": [149, 150, 156], "466b90e7ef2f": 92, "467": 143, "4678": 153, "468": 143, "468750": 143, "4688": 146, "469": [11, 13, 143], "4691": 147, "469388": 143, "4694": 154, "47": [47, 48, 59, 66, 143, 144, 148, 150, 155, 161, 170], "470": 143, "47016730e": 175, "4702": 153, "470490": [11, 13], "470689": 13, "471": 143, "4714": 146, "4717": 154, "472": 143, "4722": 154, "4726e": 148, "473": 143, "473137c03db7": 88, "4732": 154, "47320909e": 175, "474": 143, "4740": 148, "474232": 17, "4744512": 149, "4745": 149, "475": 143, "475540": [11, 13], "476": 143, "476004": 15, "47633": 149, "4764": 147, "47663894295692444": 149, "476639": 149, "47664": 149, "477": 143, "4770": 149, "4771": 154, "477273": 143, "477699": [11, 13], "4777": [141, 146], "4778": 141, "4779": 141, "477962": 15, "478": 143, "4780": 141, "4781": [141, 154], "478125": 173, "478162": [11, 13], "4784": 149, "4785": 154, "4787": 154, "479": 143, "479139": 11, "479204": [11, 13], "4794": 153, "4795": 148, "479556": [11, 13], "479646": 148, "47989": 149, "4799": 149, "48": [31, 47, 49, 52, 59, 66, 95, 103, 133, 135, 142, 143, 144, 146, 148, 150, 155, 170], "480": 143, "48013283e": 175, "48048431": 126, "480633": [11, 13], "4807": [146, 149], "481": 143, "48106518387794495": 147, "48122198e": 175, "481349": [11, 13], "4814": 149, "482": 143, "482383": [11, 13], "4824": 149, "4825": 154, "483": 143, "4830": 149, "4836": 147, "48383283e": 175, "484": 143, "4840": 154, "4844": 155, "484415": [11, 13], "4846": 149, "485": [143, 152, 153, 154, 155], "4854": 148, "486": 143, "4863": 150, "4868": 154, "487": 143, "4873": 149, "48755100e": 175, "4876": 149, "488": 143, "488215": 13, "488412": 11, "4886": 153, "489": 143, "4895": 35, "489796": 132, "49": [45, 47, 48, 49, 55, 57, 65, 66, 80, 143, 144, 148, 150], "490": [143, 149], "490625": 166, "4908": 153, "4909": [147, 155], "490946": 11, "491": 143, "491228": 143, "4915": 154, "4917": 149, "491723": 16, "4919": 146, "492": [143, 152], "4920": 154, "492727": 11, "492754": 143, "4928": 154, "49291": 166, "493": [13, 143], "4930": [153, 154], "49332966e": 175, "4937": 155, "494": [11, 13, 143], "494387": [11, 13], "495": [143, 146], "4950701": 149, "4951": 149, "49521424": 129, "49529338e": 175, "49574452": 129, "4958": [146, 154], "49587": 166, "496": 143, "4961": 153, "496714": 132, "49690158e": 175, "497": 143, "4970": 154, "4972": 154, "49769501e": 175, "49798680e": 175, "498": 143, "4980": 149, "4982": 147, "49890664e": 175, "499": [143, 146], "4999": 19, "49e421f2057c": 93, "4a9f159cd120": 52, "4b26ab49e29c": 34, "4c669126467b": 52, "4d": 149, "4d4a0e714c73": 88, "4ed3868a9a2": 53, "4f": [14, 15, 16, 17, 18, 19, 52, 150, 151, 153, 156, 157], "4m": 122, "4n": 28, "4th": [53, 54], "4x": 155, "5": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 89, 90, 91, 93, 94, 96, 98, 101, 102, 103, 104, 106, 107, 111, 122, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 139, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "50": [10, 39, 43, 45, 47, 48, 49, 51, 52, 55, 57, 63, 66, 68, 74, 75, 80, 97, 122, 128, 129, 132, 134, 135, 143, 144, 146, 147, 148, 150, 153, 161, 165, 166, 168, 170, 171, 172, 173, 175, 177], "500": [11, 12, 13, 134, 143, 147, 148, 175], "5000": [9, 17, 19, 72, 175], "50000": [12, 122], "500000": [123, 132, 143, 144, 161], "500005": [11, 13], "5003": 149, "5006": 155, "501": 143, "5012": 149, "502": 143, "502190": 15, "502418": 12, "503": 143, "5032": 154, "503945": [11, 13], "504": [11, 13, 143], "505": 143, "5050": [47, 74, 155], "5054": 147, "50547116e": 175, "506": 143, "50628105e": 175, "5069": 154, "507": 143, "507192": 17, "5078": 148, "508": 143, "5081": 154, "5085": 154, "509": 143, "5095": 153, "50954": 149, "5098": [149, 150], "50b154750974": 88, "50th": 132, "51": [12, 66, 74, 122, 143, 144, 148, 171], "510": 143, "5100": 149, "510042": [11, 13], "51026454": 126, "511": 143, "5111": 157, "5113": 154, "5114": 149, "5116": 155, "512": [48, 53, 57, 79, 143, 148, 149, 150], "5120": 154, "51200": 149, "5127": 147, "512x512": 150, "513": 143, "5132": 149, "513250": 15, "513433": 175, "513890": 15, "514": 143, "51479": 12, "5148": 149, "515": [143, 146], "5157": 146, "5158": 154, "515941f58fe7": 76, "516": 143, "51601397e": 175, "516129": 143, "5166": 149, "51681": 166, "516912": [11, 13], "517": 143, "5176": 153, "51782e52f201": 71, "517857": 143, "518": 143, "518519": 143, "5188": 154, "519": [95, 143, 149], "5197": 149, "5199": 149, "52": [31, 66, 122, 132, 133, 143, 144, 148, 150], "520": 143, "5200": [147, 156], "5202": 153, "52037": 12, "52063": 166, "521": 143, "522": [11, 13, 143], "5220": 146, "523": 143, "5239": 155, "524": 143, "524770": 15, "525": [13, 143], "5255": 149, "5257e": 148, "52580": 166, "526": 143, "526373": 177, "527": [11, 143], "5272": 147, "527393": 59, "527542": [11, 13], "5276": 154, "528": 143, "5283": 154, "5285": 146, "529": 143, "529412": 143, "53": [47, 48, 55, 60, 61, 64, 66, 143, 144, 148, 161, 170, 171, 173], "530": 143, "53037048e": 175, "530624": 13, "5308": 154, "5309": 148, "531": 143, "531250": 143, "5313": 149, "531874": 12, "532": 143, "5326": 149, "533": 143, "5333": [149, 150], "5334": 154, "53341062e": 175, "533524": [11, 13], "53360752e": 175, "534": 143, "5347": 154, "5348": 144, "5349": 154, "535": 143, "535714": 143, "53590397e": 175, "536": 143, "536747": 11, "536997": 15, "537": [11, 13, 143], "53783010e": 175, "538": 143, "5384": 149, "5387": 155, "5388": 148, "539": 143, "53901780e": 175, "53909609": 126, "5394": 154, "5396": 149, "5397727272727273": 153, "5398": [152, 153], "5398e": 148, "5399": 149, "53mib": 146, "54": [47, 48, 49, 59, 66, 79, 90, 101, 122, 128, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 148, 155, 171], "540": 143, "540222": 16, "540247": [11, 13], "54030231": 128, "5404": 149, "5406e": 149, "5409": 149, "541": 143, "5412": 150, "54143": 148, "5416": 154, "541667": 143, "5417": 154, "5418903291546293": 169, "542": 143, "5425": [153, 172], "542734": 175, "54275813": 126, "543": 143, "5432": 154, "54321": 47, "5435": 153, "5439": 148, "544": 143, "545": 143, "54507446": 146, "54510477e": 175, "5455131": 172, "5458": 148, "546": 143, "546523": 14, "5467": 157, "54682": 172, "547": 143, "547083": 175, "547509": 11, "54777888": 126, "5478": 154, "548": [143, 152, 153], "5480": 154, "548052": 15, "54808": 172, "548195": [11, 13], "5483": 146, "5485": 154, "5486": 149, "5489": 149, "549": 143, "54902750e": 175, "5493": 146, "5494": [154, 155], "55": [47, 48, 59, 66, 74, 80, 129, 134, 136, 139, 143, 148, 150, 169, 177], "550": 143, "551": 143, "551020": 143, "55109787e": 175, "551122": [11, 13], "5513833499989991": 169, "551792": 12, "552": 143, "5521": 153, "5523": 154, "55283762": 126, "5529": [149, 150], "553": 143, "5531": 148, "553519": 173, "55360672": 126, "55382448e": 175, "554": 143, "555": [48, 52, 97, 143], "5550161930871431": 129, "555108164c58": 55, "5551779866218567": 147, "55555556": 129, "5557": 154, "5558": 149, "555816": 173, "556": 143, "5566": 153, "557": 143, "5570": 154, "5573": 153, "558": 143, "5581": 154, "5589": [136, 149], "559": 143, "5590": 136, "5591": 136, "5592": 136, "5593": 136, "5595": 149, "55965906e": 175, "5599": [148, 149], "56": [24, 28, 46, 47, 49, 55, 59, 63, 66, 80, 132, 133, 135, 142, 143, 144, 148, 152, 155, 177], "560": [143, 152], "5604": 155, "5606": 154, "56077258e": 175, "5608": 150, "561": 143, "5610": 149, "5611": 153, "561772": [11, 13], "562": 143, "5622": 153, "562500": 143, "563": 143, "5630": 149, "56348096e": 175, "564": 143, "5644": 157, "5645": 154, "5646e": 149, "5647": [149, 150], "5649": 155, "564980": [11, 13], "565": 143, "56580759e": 175, "566": [61, 143], "56650192e": 175, "567": [61, 143, 154], "56705": 12, "5671": 154, "5676": 153, "5678": 154, "5679": 153, "568": [61, 143], "5686": [149, 150], "569": [61, 143], "5692": 154, "5696": 148, "5698": 172, "57": [13, 32, 64, 66, 122, 132, 133, 143, 144, 155], "570": [61, 143], "57057605": 129, "5706": [151, 153, 156, 157], "571": [143, 154], "571429": 143, "572": [143, 152], "5720": 154, "572094": 13, "5721": 154, "5722": 154, "5724": 154, "5725": [149, 150], "5728": 153, "57292499e": 175, "573": 143, "57330710e": 175, "57367853e": 175, "5739": 154, "5739762187004089": 147, "574": 143, "5745": 146, "575": 143, "5750": 154, "5753": 154, "5755": 155, "5757": 154, "576": 143, "5764": 154, "5765": 150, "5767": 149, "576700": 8, "5768": 154, "5768efa4a35f": 103, "577": 143, "5778": 157, "578": 143, "5783": 154, "5784": 147, "5785": 154, "57861": 148, "579": [93, 143], "5790": 154, "5793": 154, "57953b0b580c": 38, "5796": 154, "5798": 153, "5799": 148, "58": [11, 59, 60, 65, 66, 122, 132, 133, 143, 144, 148, 153, 177], "580": 143, "5804": 150, "5808771025513102": 169, "58099293e": 175, "581": 143, "5810": 155, "5816": 154, "581728": [11, 13], "582": 143, "5822": 156, "5823": 154, "5824": 154, "5826": 154, "5828025": 65, "583": 143, "584": 143, "5843": [150, 154], "5844": 148, "5845": 154, "5847": 154, "5849": 154, "585": 143, "5850": 154, "5853": 154, "585384": [11, 13], "5854679515581645": 51, "58556641e": 175, "586": 143, "5866": 149, "58662330e": 175, "5867": 156, "5868": 154, "5869": 155, "587": [143, 152], "5870": [153, 154], "5876": [154, 155], "5877": 154, "58776": 12, "588": 143, "5880": 154, "5882": [149, 150], "588235": 143, "5885": 148, "588767": 11, "5888": 154, "58883361": 129, "58899709e": 175, "589": 143, "58900": 144, "5897": [153, 154], "58it": 149, "59": [11, 18, 45, 59, 60, 61, 63, 65, 66, 132, 133, 143, 144, 148, 150, 154, 165, 168, 170, 171, 172, 173, 177], "590": 143, "5900": 154, "59039": 149, "59049": 57, "59068226": 129, "591": 143, "5918": 148, "592": 143, "5920": 149, "5924": 149, "592799": 155, "593": 143, "59302": 149, "5932": 149, "5935": 155, "5936": 146, "59362951e": 175, "59371929e": 175, "594": 143, "594445": [11, 13], "5949": [149, 153], "595": 143, "5951": 148, "596": 143, "5961": 150, "59621339e": 175, "597": 143, "5975": 148, "598": 143, "5980": 153, "59815003": 128, "599": 143, "5990": 148, "5997": 149, "5998": 148, "59b7b8cc9b5b": 102, "5_epoch": 153, "5aa728677edf": 80, "5b2db8c64782": 52, "5b50fb5d02c4": 77, "5e2": 91, "5f": [148, 149], "5f195de51d93": 104, "5m": 122, "5th": [52, 53], "5x": 155, "6": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 85, 87, 88, 89, 90, 91, 93, 94, 101, 102, 103, 106, 122, 125, 126, 127, 128, 129, 132, 133, 135, 139, 143, 146, 148, 149, 150, 152, 153, 154, 159, 161, 163, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179], "60": [12, 44, 45, 47, 48, 49, 57, 77, 80, 94, 96, 122, 132, 133, 134, 143, 144, 146, 147, 148, 149, 150, 157, 166, 167, 169], "600": [48, 95, 143, 147, 148, 152], "6000": [16, 19, 123], "60000": [9, 16, 17, 18, 19, 101, 122, 149], "600000": 161, "60000000000001": 38, "6002": 146, "60059908": 129, "6009": 146, "601": 143, "6010": 148, "60124": 166, "60154": 166, "6016": 148, "601607": [11, 13], "602": 143, "6020": 148, "6022": 153, "603": 143, "60332219e": 175, "603704": 173, "6039": [149, 150], "604": 143, "605": 143, "605370": 161, "6055": 146, "6058": 149, "6059": 149, "606": 143, "60600": 155, "60631cbc73b0": 75, "60683359e": 175, "607": 143, "6078": 149, "60786967": 126, "608": 143, "60811794e": 175, "60818266e": 175, "609": [11, 143], "609060": 17, "60966": 12, "61": [55, 65, 132, 133, 143, 144, 146, 149, 150, 165, 168, 170, 171, 172, 173, 177], "610": [48, 143], "610574": [11, 13], "611": [13, 143], "6111": 153, "611101": [11, 13], "611172": 173, "6117": 148, "6118": 149, "612": 143, "6127": 153, "612924": [11, 13], "613": 143, "614": 143, "614062": [11, 13], "614349": 12, "61440440e": 175, "614655": 15, "615": 143, "6150": 154, "61500": 144, "616": 143, "616463": [11, 13], "6167": 153, "61670566e": 175, "61675899e": 175, "6168": 146, "617": 143, "617722": 12, "6177e": 149, "61784629": 126, "617951": [11, 13], "618": 143, "6186": 148, "619": 143, "6194": 146, "6197751905438615": 80, "62": [74, 143, 144, 148, 149, 172], "620": 143, "6200": 153, "620071": [11, 13], "6203": 153, "621": 143, "621415": 173, "62145": 148, "622": 143, "622030": [11, 13], "622167": 173, "6223": 149, "62242956e": 175, "6227": 153, "623": 143, "62311335e": 175, "6235": 149, "62362": 148, "624": 143, "625": [57, 143], "62500": 132, "62503489e": 175, "6254": 152, "626": 143, "6260": 152, "626007": [11, 13], "62636": 166, "6267": 157, "627": 143, "627163": [11, 13], "6274509803921569": 166, "62792336e": 175, "628": 143, "6286": 146, "6289": 149, "629": 143, "629630": 143, "62996541e": 175, "62x62": 149, "63": [47, 49, 70, 71, 74, 93, 94, 143, 170, 177], "630": 143, "63033250e": 175, "6306": 149, "631": 143, "6311": 156, "6314": 149, "631579": 143, "63158859": 126, "6317": 155, "6319": 148, "632": 143, "63212579e": 175, "63238643": 129, "6325": 153, "632m": 154, "633": [77, 143], "6335": 149, "6338": 144, "633974": 13, "634": 143, "6345": 149, "63465586e": 175, "635": [13, 143], "635423": [11, 13], "635457": 16, "635574": 15, "636": 143, "637": 143, "6372": 152, "6377": 144, "638": 143, "6380": 149, "6386": 149, "639": 143, "6392": [149, 150], "63it": 149, "64": [16, 17, 18, 19, 24, 47, 48, 49, 53, 57, 79, 128, 143, 146, 148, 149, 150, 151, 152, 156, 157, 177], "640": 143, "64000": 122, "64034418e": 175, "6404": 153, "641": 143, "64154651": 172, "642": 143, "643": 143, "6430": 154, "6431": 149, "6436": 149, "64387910e": 175, "644": 143, "6445": 153, "645": 143, "645161": 143, "6454": 149, "646": 143, "647": 143, "6471": 150, "64757": 148, "647689": 132, "648": 143, "6485e": 149, "6488": 144, "649": [143, 154], "6494": 148, "64x64": 150, "65": [43, 44, 45, 52, 93, 133, 135, 142, 143, 148, 149, 150, 177], "650": 143, "65000": 122, "650667": 13, "651": 143, "6510": 149, "651253": 177, "65160": 148, "652": [13, 143], "65235094": 129, "653": 143, "65364362": 128, "6538": 146, "654": 143, "6541": [146, 149], "6542": 154, "6545": 153, "654593": 64, "6549": 149, "654x": 152, "655": 143, "65575249e": 175, "65596512e": 175, "656": [143, 154], "6561": 57, "6562": 153, "65625": 153, "65628077": 126, "656404": 173, "657": 143, "6575": 144, "6579": 148, "658": 143, "6585": 155, "6588": 149, "659": 143, "65903086e": 175, "66": [46, 47, 52, 76, 94, 143, 144, 150, 165, 168, 170, 171, 172, 173, 177], "660": 143, "66000": 122, "660125": 15, "6608": 146, "661": 143, "6610": 153, "6611852": 172, "6612": 149, "662": 143, "6627": 149, "663": 143, "66322": 148, "664": 143, "665": 143, "666": [55, 143], "666451": 8, "66659": 148, "66666667": 129, "6667": 149, "667": 143, "6673": 153, "667565": 173, "668": 143, "669": 143, "6698": 153, "6698453426361084": 153, "6699": 148, "67": [48, 52, 128, 143, 144, 148, 177], "670": 143, "67027": 149, "670396": 177, "6705": 146, "6706": [149, 150], "671": 143, "672": 143, "6722926497459412": 153, "6723": 153, "67285": 148, "673": 143, "6737": 149, "674": 143, "6745": [149, 150], "6746": 153, "6746167540550232": 153, "675": 143, "67515": 148, "67526014e": 175, "676": 143, "67631096e": 175, "676366": 8, "676435": 148, "6766": 155, "6768": 154, "6769": 153, "6769256368279457": 153, "677": 143, "67761063e": 175, "678": 143, "6784": [149, 150], "6785": 144, "678571": 143, "679": 143, "67941": 148, "67it": 149, "68": [122, 136, 139, 143, 144, 146, 165, 168, 170, 171, 172, 173, 175, 177], "680": 143, "680027": 13, "681": 143, "68102": 148, "681159": 143, "682": 143, "682091": 177, "6826": 146, "683": [143, 150], "6833": 16, "68334519e": 175, "683673": 143, "6839": 149, "684": 143, "68411": 148, "684211": 143, "684940": 15, "685": 143, "68500": 149, "6850008964538574": 149, "685001": 149, "6851": 153, "68517": 148, "6852": 148, "68572271": 129, "686": 143, "68602648": 126, "68603251e": 175, "6863": 149, "68671849e": 175, "687": 143, "68723": 148, "68744134": 126, "68747069e": 175, "68795": 148, "688": 143, "6881": [149, 153], "689": 143, "6891": 148, "68940": 148, "6894e": 148, "68977": 148, "69": [45, 47, 133, 143, 144, 177], "690": 143, "69001671e": 175, "6902": 149, "691": 143, "69102": 148, "69115": 148, "6918": 144, "692": 143, "692250": 15, "69258130e": 175, "69261": 148, "69272794e": 175, "69288277": 148, "692883": 148, "6928e": 149, "6929": 148, "69295": 148, "69298": 148, "69299": 148, "6929e": 148, "693": [143, 150], "69301": 148, "69302": 148, "69303": 148, "69305": 148, "69308": 148, "6931471805599453": 80, "69319": 148, "69343173": 126, "69349": 148, "693597": 13, "69361323e": 175, "69379": 148, "69396": 148, "694": 143, "6940": 149, "6941": 149, "69432": 148, "69437": 148, "69458": 148, "69465": 148, "69467": 148, "69468": 148, "695": 143, "69537": 148, "69543": 148, "69551": 148, "69563": 148, "69583": 148, "696": 143, "69623": 148, "69659": 148, "6968": 147, "697": 143, "69714": 148, "69736459e": 175, "69791535": 126, "698": 143, "6980": 149, "6984": 148, "698874": 15, "699": 143, "69901020e": 175, "6992": 153, "69942": 148, "699560": 15, "6ab0f28c63a7": 72, "6ac8e81b6f0c": 70, "6f47904706aa": 128, "6f8260f6f5bb": 75, "6j": [51, 92, 102], "6m": 122, "6p": 94, "6th": 52, "6x": [95, 155], "7": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 30, 31, 32, 34, 37, 38, 40, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 63, 65, 66, 68, 71, 74, 75, 76, 77, 79, 80, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 106, 122, 126, 127, 128, 129, 132, 133, 139, 143, 146, 147, 148, 149, 150, 152, 153, 154, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179], "70": [43, 45, 47, 49, 57, 77, 122, 133, 135, 140, 142, 143, 144, 146, 147, 148, 165, 166, 177], "700": [143, 147, 148, 176], "700557": 15, "7008": 146, "701": 143, "7010": 149, "7011": 149, "70166723e": 175, "702": 143, "7020": 149, "7023": 155, "70291": 148, "703": 143, "703704": 143, "704": 143, "7043": 149, "7044": 148, "704545": 143, "705": [143, 153, 155], "70542": 148, "7055": 149, "705882": 143, "7059": 149, "706": 143, "706461": 13, "7064960040152073": 153, "7065": 153, "706585": 11, "707": 143, "707107": 132, "7076": 153, "708": 143, "70805473e": 175, "709": 143, "7091468499697177e": 163, "7097": 153, "70974533": 8, "7098": [149, 150], "7099": 149, "71": [143, 144, 149, 165, 171, 172, 173], "710": [143, 152], "7108": 152, "711": 143, "7113": 155, "712": 143, "713": 143, "7134": 149, "7137": [149, 150], "714": 143, "71400": 144, "714286": 144, "71432477e": 175, "715": 143, "7150": 153, "715070": 171, "716": 143, "71671100e": 175, "7168": 148, "717": [143, 152], "7173": 149, "7175": [153, 155], "71755233e": 175, "7176": 149, "718": 143, "71828": [80, 82], "718281828459045": 80, "71828183": 128, "71875": 153, "7188": 153, "719": 143, "7191": [149, 153], "7196": 154, "7197": 148, "72": [28, 47, 49, 74, 132, 135, 143, 150, 155, 177], "720": [51, 78, 80, 143], "7200": 149, "7205": 149, "72090": 148, "721": 143, "7216": 150, "7219": 149, "72196": 148, "722": 143, "72223991e": 175, "72227": 149, "72247358e": 175, "7227": 154, "723": 143, "72352380e": 175, "724": 143, "724490": 143, "724638": 143, "725": 143, "7255": 149, "726": 143, "72638167e": 175, "727": [143, 154], "72708198e": 175, "727273": 143, "72765023e": 175, "728": 143, "7280": 149, "7283": 149, "72888392e": 175, "729": [48, 57, 79, 143], "7294": 149, "72964213e": 175, "7298": 153, "73": [39, 143, 149], "730": 143, "730464": 155, "730982": 12, "731": 143, "731755": 161, "7318": 149, "732": 143, "73205081": 128, "733": 143, "7333": 149, "73370838": 129, "734": [143, 154], "7342": 149, "734673": 177, "7347": 148, "735": 143, "73524094": 129, "7359b7dba965": 48, "736": 143, "7360": 154, "7367": 148, "737": 143, "73712819e": 175, "7373": 149, "738": 143, "739": 143, "74": [143, 148], "740": 143, "7402e": 149, "7408": 155, "7409": 149, "74098031e": 175, "741": 143, "741152": 8, "7412": 149, "74149939e": 175, "741935": 143, "742": 143, "7426e": 148, "7427": 154, "743": 143, "74304829e": 175, "74307119e": 175, "74371246e": 175, "744": [101, 143], "74400348e": 175, "744281": 177, "7444": 154, "744415": 11, "74486871e": 175, "745": 143, "74509907e": 175, "7451": [149, 150], "746": 143, "746011": 177, "74609375": 153, "7461": 153, "7463": 152, "7469": 146, "746921": 155, "747": 143, "748": 143, "7489": 154, "749": 143, "7490": 149, "7498": 154, "74m": 155, "75": [66, 122, 129, 132, 133, 143, 146, 148, 149, 150, 155, 156, 157, 161, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "750": [143, 150, 155], "7500": 155, "750000": [132, 143, 144, 166, 177], "750615": 171, "75075a70c90": 127, "7507bdc665d5": 37, "751": 143, "7511": 153, "751712": 12, "752": 143, "75209323e": 175, "7524": 149, "7529": 149, "753": 143, "7532": 155, "7539": 152, "754": 143, "7542": 148, "754246": 148, "75424625": 148, "7548e": 149, "755": 143, "755102": 177, "7553": 149, "756": 143, "75615888": 148, "756159": 148, "7562": 148, "75665366e": 175, "7568025": 128, "7569": [149, 150], "757": 143, "75750": 155, "7578": 153, "758": [143, 154], "758000": 161, "7589": 154, "759": 143, "75986": 148, "75th": 132, "76": [39, 129, 143, 172, 177], "760": [143, 154], "7601": 148, "7604": 153, "7608": 149, "76093000e": 175, "761": 143, "761378": 12, "762": 143, "762238": 161, "762329": 177, "7624": 154, "76249894": 129, "763": 143, "763270": 8, "76344": 12, "764": 143, "7642": 148, "7645": 147, "7647": 149, "7648": 152, "765": 143, "765298": 161, "765539": 11, "7656": 153, "766": [129, 143], "7661": 148, "766294": 14, "7665": [148, 154], "767": 143, "7670": 155, "768": [143, 154, 155, 161], "7685": 155, "7686": 149, "7687": 146, "769": 143, "769231": 143, "7695": 153, "76a0a5ce1450": 66, "76bf7a927991": 77, "77": [47, 77, 92, 94, 127, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 152, 165, 172], "770": 143, "7705221": 155, "7708": 154, "771": 143, "7711": 148, "7712": 149, "7714": 148, "771513": 148, "772": 143, "77237368": 129, "7725": 149, "772579": 16, "772900": 17, "773": [97, 143, 146], "7736742424242425": 153, "7737": 153, "774": 143, "775": [16, 17, 143], "7754": 149, "775403": 13, "776": [16, 17, 143], "7765": 149, "7767": 153, "77678046e": 175, "777": [16, 17, 143], "7773": [152, 153], "7776": 57, "77777778": 129, "777778": 143, "778": [16, 17, 143], "779": [16, 17, 143], "78": [79, 129, 132, 143, 149, 150, 165, 177], "780": [16, 17, 143], "7804": 149, "780573": 12, "781": [16, 17, 143], "78101": 149, "7812": 153, "781250": 143, "782": [16, 17, 143], "782dbd1412fe": 139, "783": [16, 17, 143], "7833": 149, "7837507526079813": 153, "7838": 153, "7839": 149, "784": [9, 16, 17, 18, 19, 143, 149], "7843": 149, "784433": 15, "7849e": 149, "785": [9, 16, 17, 18, 19, 143], "7852": 152, "785269": 172, "785280": 172, "785714": 143, "786": 143, "7860": 155, "7861e": 149, "78673234e": 175, "787": 143, "7870": 149, "788": 143, "78883111e": 175, "789": [52, 143], "7898": 144, "78993856e": 175, "79": [80, 132, 143, 144, 148], "790": 143, "7900723": 146, "79018354e": 175, "79025614": 129, "791": 143, "7912": 152, "792": 143, "7922": 149, "792566": [11, 13], "79270929e": 175, "793": 143, "7930": [152, 153], "793456": 148, "7935": 149, "7936": 146, "794": [143, 161], "795": 143, "795455": 143, "795521": 15, "7956": 149, "796": 143, "7961": 149, "7963": 149, "796667": [11, 13], "79671774e": 175, "797": 143, "797101": 143, "7975": [132, 133, 144], "7978": 149, "798": 143, "79823164": 126, "7986e": 148, "799": 143, "7993": 148, "7994": 148, "7995": [132, 133, 144], "79998373e": 175, "7c9145eb11e9": 95, "7e786bcbd078": 72, "7f1fefd4d3f0": 55, "7fce570bf337": 92, "7m": 155, "7w": 146, "8": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 30, 31, 32, 34, 37, 38, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 87, 89, 90, 92, 93, 94, 95, 99, 101, 102, 104, 106, 122, 126, 127, 128, 129, 132, 133, 135, 136, 139, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 175, 176, 177, 178], "80": [11, 13, 16, 17, 18, 19, 45, 47, 49, 57, 80, 122, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 152, 155, 157, 166, 170, 174, 177], "800": [143, 147, 148, 154, 155, 166], "8000": [17, 19, 123, 149], "80000": 132, "800000": [143, 161], "8008": 153, "801": 39, "801005": 12, "8016": 146, "803349": 148, "8036360430009386": 51, "8037": 153, "803724929690361": 153, "8039": 149, "804460": 155, "8049": 153, "8049242424242425": 153, "806452": 143, "8069e": 149, "807018": 143, "8078": 149, "8080e": 148, "8086": 153, "809158": [11, 13], "80966303e": 175, "8099": 153, "81": [43, 47, 48, 49, 55, 57, 74, 93, 132, 133, 143, 144], "810696": [11, 13], "8111": 149, "8112": 148, "8117": 149, "8118": 149, "8125": 153, "812500": 143, "8127": 149, "8138": 153, "8138b0729954": 55, "8141": 147, "8144": 153, "814809": 175, "8153": [152, 153], "81539193": 148, "815392": 148, "8154": 148, "8157": 149, "816327": 143, "816653826391969": 106, "816760": [11, 13], "81788758": 129, "8189": 144, "81893678": 126, "81945073e": 175, "8196": 149, "82": [132, 133, 143, 144, 149, 150], "8201e": 148, "8206": 149, "821429": 143, "822132": 8, "8235": 149, "8236": 149, "8242": 153, "8256": 147, "8258": 153, "82636160e": 175, "82647438e": 175, "82701252e": 175, "827153": 175, "8275": 149, "828066": 161, "82974801e": 175, "83": [17, 74, 132, 133, 143, 146, 149], "8300": 147, "830770": 173, "830875": [11, 13], "83098322e": 175, "8314": 149, "831415": 11, "83161031e": 175, "831681": 155, "8324": 154, "83263141": 8, "83288998e": 175, "83319662e": 175, "8333333333333334": 95, "833552": [11, 13], "834558": [11, 13], "8346": 149, "83464298e": 175, "835299": 166, "8353": 149, "8354": 153, "8365": 149, "8372": 147, "83727878e": 175, "83770503": 126, "83847501e": 175, "8392": 149, "84": [103, 132, 143], "8400": 148, "840201": 11, "84147098": 128, "8421": 149, "8424": 154, "84254180e": 175, "843": [152, 153, 155], "8431": 149, "843333": 161, "8436": 149, "843750": 143, "8438": [153, 155], "843887": [11, 13], "8446": 149, "8458": 153, "8466": [149, 153], "846939": 143, "846976": 173, "847": 97, "8471": 149, "8474": 146, "8479": 153, "8484": 149, "8488": 147, "84915141e": 175, "85": [11, 94, 122, 126, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 152, 154, 155, 166, 167, 174], "8500": 153, "850000": 166, "85051737e": 175, "8510": 149, "8515": 149, "8515625": 153, "8516": 153, "851852": 143, "8524": 149, "853181": 8, "8549": 149, "85505447": 126, "8551": 146, "855366": 13, "8560606060606061": 153, "8561": [152, 153], "8563": 149, "8564": 149, "857142857142854": 94, "857143": 143, "85800963": 155, "858131": [11, 13], "8588": 149, "858904": 14, "859": 156, "85956433e": 175, "85mb": 155, "86": [63, 132, 133, 143, 144, 149, 154, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "8600": 147, "8603": 147, "8604": [153, 155], "8608": 156, "8613": 146, "8615": 155, "8620": 146, "8625": 171, "8627": 149, "86299475e": 175, "863636": 143, "864": 152, "8646": 153, "8652": 157, "8655": [148, 152, 153], "86635ab2cc7": 102, "8665": 154, "8667": 149, "868809": 15, "869565": 143, "8698": 148, "86m": 154, "87": [122, 132, 133, 135, 142, 143, 144, 149, 150, 172], "8705": 149, "8706": 149, "8711": [149, 153], "871429": 143, "8717": 152, "8719": 147, "872": 11, "87236687": 126, "87285499e": 175, "87380356": 129, "8739": 147, "8743": [151, 156, 157], "8745": 149, "8747": 153, "875000": 143, "8759": [153, 154], "87646883e": 175, "8769": 153, "8771": [153, 155], "8778": [144, 154], "87786341e": 175, "877976": 149, "878": 149, "8784": 149, "87853325e": 175, "87970769e": 175, "88": [15, 122, 129, 132, 133, 140, 143, 144, 148, 149, 155, 165, 174], "8804": 149, "8812": 155, "88165065e": 175, "8823": 146, "8824": 149, "8835": 147, "884058": 143, "8843": 154, "8854": 153, "8856": 149, "885bc9be9cd": 149, "88618684": 129, "8863": 149, "8863636363636364": 153, "8864": 153, "8867": 153, "8873": 153, "8878": 147, "8883": 154, "88888889": 129, "8896": [153, 155], "89": [12, 18, 39, 45, 48, 80, 122, 132, 143, 144, 172], "8902": 149, "8904402624046048": 169, "8913": 156, "891691": 8, "8917": 155, "8935": 149, "8938": 153, "89380846e": 175, "8941": 149, "8948": 148, "894992": 175, "8950": 147, "8958": 155, "8959": 155, "89632087": 126, "8967": 148, "896723": 148, "89672343": 148, "8974628075957298": 153, "8975": 153, "8977": [153, 154], "8979": 153, "8980": 149, "8983": 149, "8984": 153, "8985": [151, 156, 157], "8988": 146, "899084": 8, "8994": 157, "8b5cab780f33": 75, "8cc0f1bdc5ed": 90, "8f0bbdfdf6e5": 53, "8th": 54, "9": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 31, 32, 34, 35, 36, 37, 40, 43, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 101, 102, 104, 106, 122, 125, 126, 127, 128, 129, 132, 133, 135, 139, 140, 141, 143, 146, 148, 149, 152, 153, 154, 155, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179], "90": [12, 16, 28, 32, 45, 47, 48, 49, 52, 57, 74, 75, 77, 90, 91, 94, 96, 101, 122, 133, 135, 140, 142, 143, 146, 147, 148, 153, 154, 155, 166, 170, 174], "900": [75, 101, 147, 148, 152, 155], "900000": 161, "900000e": 52, "9007": 149, "90093797e": 175, "9013": 149, "901514": 15, "9018": 147, "9020": 149, "90264482e": 175, "90328251e": 175, "903846": 143, "9042": 153, "9062": 155, "906250": 143, "9066": 147, "9072": 153, "907975": 11, "9081": [153, 154], "90891100e": 175, "909091": 143, "90929743": 128, "9096": 149, "909784": 13, "9098": 149, "90m": 149, "91": [12, 68, 93, 122, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 150, 161], "910": 150, "9104": [153, 155], "91174698": 129, "9131": 155, "9132757981618246": 153, "9133": [152, 153], "91348997e": 175, "9137": 149, "9138": 148, "9141": 153, "9143": 148, "9145": 154, "914559": 13, "914701": 8, "9150": 146, "9157": 147, "91703708e": 175, "9176": [149, 153, 154], "9179": 148, "9182": 147, "9186": 153, "919264": 16, "91940167": 126, "92": [12, 122, 143, 174], "9200": 146, "9216": 149, "9217": 153, "922403": 8, "922826": 17, "924": 150, "9247": 153, "9250": [153, 171, 173], "9255": 149, "925579": 13, "925926": 143, "9260": 154, "9269": 149, "9271": 153, "927536": 143, "9280": [153, 154], "928539": 13, "928571": 143, "9290": 155, "9293": 155, "9294": 149, "9296": 147, "92fab552c144": 80, "93": [17, 19, 47, 122, 143, 149, 174], "93054890e": 175, "93082264e": 175, "93102691": 126, "9312": 149, "93143051": 126, "932169": 13, "932537": 13, "932585": 16, "9331e": 148, "9333": 149, "9336": 153, "9346": 146, "9347": 155, "935": 150, "9352": 148, "9354": 149, "9369": 146, "9373": 149, "9375": 155, "9381": 155, "9384": [153, 154], "9396": 153, "93fed76e63a5": 149, "94": [122, 132, 133, 143, 144, 149, 174], "9401": 149, "9408": 146, "9409": 155, "9412": [18, 149], "9416": 149, "9436": 147, "9443": 155, "944681": 11, "9451": 149, "9453": 154, "9456e": 149, "946429": 143, "947368": [143, 166], "9478274870593494": 81, "948141": 15, "9485": 149, "9486": 149, "9489": 153, "9490": 149, "9492": 153, "9499": 155, "95": [12, 122, 132, 143, 144, 146, 148, 155, 164, 165, 172, 173, 174, 175], "9500": 155, "9508": 148, "952": 152, "9521": 148, "9529": 149, "9531": 154, "9534": 155, "9536": 146, "9537": 149, "9539e": 149, "954": 164, "9542": 155, "95501935e": 175, "9552": 156, "9557": 153, "956": 11, "9560342718892494": 81, "9563": 155, "95636": 149, "9569": 149, "9570": 154, "9571": 149, "9575": 147, "9576": [148, 149], "9577": 153, "95892427": 128, "9591": 157, "9593": 146, "95966987": 126, "96": [12, 14, 16, 18, 44, 45, 46, 47, 48, 52, 55, 70, 71, 77, 90, 101, 122, 132, 143, 155, 165], "9602": 155, "96052f3c0c69": 52, "9608": 149, "96139878e": 175, "9618232": 65, "96238081e": 175, "96248829": 129, "9625": 155, "963": [154, 155], "963404": 171, "964286": 143, "9646": 155, "9647": 149, "965323": 17, "9663": 146, "966365e": 52, "96652011": 129, "9666": [146, 148], "96671753e": 175, "966907": 15, "96875": 155, "9688": 155, "9693": 155, "97": [12, 52, 68, 132, 133, 143, 144, 174], "9704": 154, "97087710e": 175, "971014": 143, "9714": 147, "9716": 146, "9717076499418887": 163, "97187673e": 175, "9722": 155, "9725": 149, "9727": 154, "97305419e": 175, "9739": 148, "9752e": 149, "9753e": 148, "9754": 146, "976073": 173, "9765": 149, "9766": 154, "977": 152, "9771": 155, "97739775e": 175, "9775": 149, "977733270": 155, "977974": 17, "978": 153, "9784": 155, "9785208702087402": 155, "9792": 155, "97964329e": 175, "97mib": 146, "98": [38, 52, 132, 143, 155, 168, 177], "9804": 149, "980769": 143, "981": 74, "9812": 155, "98237187e": 175, "9830": 153, "9831": 15, "9833": 155, "9834262422606419": 169, "9838": 146, "9839": 154, "9844": 154, "984659090909091": 155, "9847": 155, "98514058e": 175, "9854": 147, "98547": 172, "9856": 155, "986095083415364e": 8, "986e6d871071": 40, "987": 48, "98749888": 126, "9883": 154, "9893": 155, "9894": 148, "9899925": 128, "98a1ccc168e9": 77, "99": [29, 31, 44, 47, 52, 55, 60, 61, 89, 91, 92, 94, 126, 132, 133, 143, 144, 148, 155, 165, 168, 169, 170, 171, 172, 173, 177], "9909e": 148, "9924": 149, "99262966e": 175, "9932": 149, "9933": 155, "994": [153, 170], "994177": 63, "9942": 148, "994667": 13, "995": 170, "9950": 148, "996": [154, 170], "9960": 146, "9961": 157, "9966e": 148, "997": 170, "9971": 155, "99714633e": 175, "9976563219": 40, "997677": 177, "99771051": 8, "998": 170, "9986": [149, 157], "9988e": 148, "999": [52, 55, 75, 76, 129, 154], "9992e": 149, "9995": [132, 133, 144], "999703": 177, "9999": [18, 59, 65, 80], "999926": 177, "999999": [60, 61, 94], "999999999999998": 48, "999999999999999": 128, "9b450cb47d30": 53, "9b9247988596": 70, "9df797f83624": 52, "9e95083e441a": 52, "9mib": 146, "A": [0, 1, 7, 8, 9, 18, 19, 24, 31, 32, 34, 35, 36, 37, 38, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 64, 66, 68, 69, 70, 71, 74, 75, 77, 78, 80, 83, 84, 87, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 106, 122, 125, 126, 127, 129, 132, 133, 135, 136, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 164, 169, 170, 171, 172, 173, 174, 175, 177, 178], "AND": 104, "And": [0, 34, 35, 47, 52, 71, 91, 95, 133, 134, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "As": [24, 25, 27, 32, 34, 36, 38, 39, 40, 47, 48, 49, 51, 54, 55, 66, 68, 70, 71, 74, 76, 77, 83, 84, 87, 90, 91, 93, 94, 95, 98, 101, 102, 106, 107, 111, 132, 133, 134, 135, 137, 138, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 163, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178], "At": [39, 96, 98, 106, 150, 154, 162, 166, 173, 175, 177], "BUT": [164, 166, 169, 171, 172, 173, 175], "Be": [18, 19, 34, 146], "Being": 56, "But": [4, 5, 7, 10, 25, 35, 36, 37, 42, 45, 48, 49, 51, 52, 54, 56, 57, 71, 77, 79, 80, 85, 89, 90, 92, 94, 95, 101, 102, 104, 107, 111, 132, 133, 134, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 163, 164, 165, 166, 172, 173, 174, 175], "By": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 47, 48, 49, 59, 62, 78, 80, 87, 102, 106, 132, 133, 134, 136, 137, 138, 139, 141, 142, 144, 146, 150, 151, 153, 154, 157, 164, 166, 171, 172, 173, 175], "For": [3, 4, 5, 7, 12, 14, 15, 16, 17, 20, 23, 24, 25, 28, 29, 31, 32, 35, 37, 38, 39, 40, 42, 46, 47, 48, 49, 51, 52, 61, 65, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 88, 89, 90, 94, 95, 96, 98, 101, 102, 103, 104, 107, 108, 111, 112, 126, 127, 128, 129, 132, 133, 134, 135, 137, 138, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "IN": 57, "IT": [94, 102, 133], "If": [1, 4, 5, 6, 24, 27, 28, 34, 35, 37, 39, 42, 43, 44, 45, 47, 48, 49, 52, 54, 56, 57, 59, 61, 62, 63, 65, 68, 69, 70, 71, 74, 75, 76, 77, 78, 80, 81, 83, 84, 85, 89, 90, 94, 96, 98, 101, 102, 103, 106, 109, 115, 125, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 166, 167, 172, 173, 174, 175, 176, 177, 182, 185], "In": [0, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 103, 104, 106, 115, 116, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "It": [0, 7, 9, 17, 18, 19, 20, 22, 24, 26, 27, 28, 29, 34, 35, 36, 37, 38, 39, 43, 44, 45, 47, 48, 49, 51, 52, 53, 54, 56, 57, 59, 60, 64, 68, 69, 70, 71, 74, 76, 78, 79, 80, 82, 84, 85, 88, 89, 90, 91, 92, 94, 95, 98, 101, 102, 103, 104, 106, 108, 112, 125, 126, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 167, 168, 169, 172, 174, 175, 176, 177, 178, 184, 185], "Its": [7, 18, 19, 22, 24, 185], "NO": 56, "NOT": [10, 95, 104, 164, 165, 185], "Near": 155, "No": [0, 39, 43, 47, 48, 70, 74, 89, 92, 98, 132, 133, 136, 139, 146, 154, 155, 165, 168, 170, 171, 172, 173, 177], "Not": [53, 54, 55, 71, 81, 82, 95, 98, 104, 106, 125, 126, 138, 148, 149, 150, 152, 153, 155, 161, 170], "OR": [39, 95, 104, 161, 172], "Of": [148, 154, 155], "On": [4, 8, 16, 17, 18, 19, 34, 36, 48, 55, 56, 68, 75, 77, 80, 98, 102, 125, 146, 155, 166, 173, 177], "One": [0, 7, 28, 35, 38, 52, 59, 66, 80, 83, 89, 90, 101, 106, 127, 147, 148, 149, 150, 152, 153, 154, 155, 156, 162, 163, 164, 165, 171, 173, 175], "Or": [7, 48, 139, 140, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 163, 175], "Such": [7, 18, 19, 37, 48, 132, 133, 136, 140, 150, 153, 155], "TO": [37, 143, 175], "That": [6, 24, 36, 42, 45, 52, 54, 68, 71, 104, 109, 146, 147, 148, 149, 150, 152, 153, 154, 155, 163, 170, 172, 173, 174, 176, 177, 178, 182], "The": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 42, 45, 46, 47, 48, 49, 51, 56, 57, 59, 60, 61, 65, 66, 69, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 109, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 144, 146, 147, 149, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182], "Their": [146, 169], "Then": [1, 49, 53, 62, 63, 64, 66, 72, 75, 76, 80, 90, 91, 101, 102, 103, 133, 147, 148, 149, 150, 151, 154, 155, 164, 170, 171, 172, 175, 177], "There": [0, 4, 24, 25, 31, 34, 35, 38, 39, 40, 42, 47, 48, 52, 53, 54, 56, 62, 63, 68, 70, 77, 80, 84, 88, 90, 91, 92, 95, 102, 104, 106, 107, 111, 132, 133, 135, 136, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 163, 164, 165, 167, 169, 170, 171, 173, 174, 175, 177], "These": [0, 14, 15, 16, 17, 23, 37, 38, 51, 52, 66, 70, 71, 77, 78, 80, 81, 87, 89, 96, 101, 104, 139, 146, 148, 149, 150, 152, 154, 155, 161, 164, 165, 166, 169, 171, 173, 175, 185], "To": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 34, 35, 38, 39, 40, 42, 44, 48, 49, 51, 52, 56, 57, 59, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 80, 82, 84, 89, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 116, 125, 126, 128, 129, 133, 134, 136, 137, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 167, 168, 169, 171, 173, 174, 176, 177], "Will": [77, 148, 150, 153], "With": [0, 5, 6, 24, 43, 54, 57, 71, 104, 109, 129, 146, 147, 148, 149, 152, 153, 154, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 175, 176, 177, 182], "_": [27, 28, 29, 30, 31, 35, 38, 80, 88, 90, 97, 101, 102, 103, 139, 153, 154, 155, 170, 172, 176], "_0": 154, "_1": 30, "_2": [30, 32], "__": [101, 102, 104], "__add__": 104, "__and__": 104, "__bases__": 102, "__builtins__": [59, 70, 80], "__cached__": [59, 80], "__call__": 37, "__class__": [71, 101, 102, 149], "__closure__": 36, "__d": 103, "__dict__": [38, 84, 102], "__div__": 104, "__doc__": [59, 74, 80, 89, 102], "__eq__": 104, "__file__": [59, 80], "__floordiv__": 104, "__ge__": 104, "__getitem__": [47, 132, 150], "__gt__": 104, "__iadd__": 104, "__idiv__": 104, "__imod__": 104, "__imul__": 104, "__init__": [34, 35, 38, 72, 83, 84, 101, 102, 103, 104, 147, 148, 149, 150, 151, 154, 156, 157, 170], "__invert__": 104, "__ipow__": 104, "__isub__": 104, "__iter__": [34, 35], "__le__": 104, "__len__": 150, "__loader__": [59, 80], "__lshift__": 104, "__lt__": 104, "__main__": [84, 101, 102, 103, 104, 106, 150], "__maxpric": 101, "__mod__": 104, "__module__": 102, "__mro__": 103, "__mul__": 104, "__name__": [59, 80, 102, 149, 170], "__ne__": 104, "__next__": [34, 35], "__or__": 104, "__package__": [59, 80], "__peg_parser__": 88, "__pow__": 104, "__pycache__": 155, "__rshift__": 104, "__salari": 101, "__secretcount": 102, "__spec__": [59, 80], "__str__": [72, 104], "__sub__": 104, "__truediv__": 104, "__version__": [84, 125, 130, 146, 147, 149, 150, 152, 153, 154, 155], "__weakref__": [84, 102], "__xor__": 104, "_add_numeric_oper": 132, "_age": 90, "_age_": 139, "_ax": 170, "_backward_hook": 150, "_call_impl": [149, 150], "_classname__attrnam": 102, "_conv_forward": 150, "_decor": [139, 164, 170], "_drop_axi": 136, "_epoch": 153, "_forward_hook": 150, "_forward_pre_hook": 150, "_global_backward_hook": [149, 150], "_global_backward_pre_hook": 149, "_global_forward_hook": [149, 150], "_global_forward_pre_hook": [149, 150], "_if": 90, "_indentation_": 42, "_init_": 71, "_io": 68, "_justcounter__secretcount": 102, "_m": 87, "_m_m_m_m_m_m_m_m_m": 87, "_marks_": 139, "_name_": 139, "_output": 30, "_p": 30, "_pair": 150, "_reversed_padding_repeated_twic": 150, "_sinplot_": 162, "_strptime": 61, "_strptime_datetim": 61, "_temperatur": 38, "_transform_index": 139, "_y": 173, "a04242241123": 52, "a1": 169, "a2": 169, "a3": 169, "a3e12f": 80, "a46e692b8bdd": 149, "a8dfd56d4d8": 70, "a_": 31, "a_0": 27, "a_copi": 127, "a_g_": 90, "a_n": 27, "aa": 39, "aabbcc": 122, "aabc": 39, "ab": [24, 39, 53, 59, 68, 130, 154, 167, 173, 176], "ab123csd": 39, "abacu": 39, "abbrevi": [52, 60, 61, 62, 140, 164, 170, 171], "abc": [39, 47, 53, 54, 94], "abc12d": 39, "abc12de23f456": 39, "abcdef": 122, "abcdefghijklmnopqrstuvwxyzabcdefghijklmnopqrstuvwxyz": 80, "abil": [52, 101, 103, 148, 151, 153, 154, 155, 170], "abl": [4, 7, 23, 34, 36, 77, 93, 96, 103, 147, 148, 150, 152, 154, 155, 157, 162, 165, 169, 171, 172, 173, 175, 176], "abnorm": 49, "abomasnow": 143, "abomasnowmega": 143, "abort": 49, "about": [6, 7, 8, 10, 20, 24, 25, 30, 34, 36, 37, 38, 39, 40, 42, 47, 51, 52, 53, 54, 55, 56, 57, 59, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 82, 84, 88, 89, 90, 91, 92, 93, 94, 96, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 126, 127, 129, 132, 133, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 163, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 182], "abov": [4, 5, 7, 24, 34, 35, 36, 37, 38, 39, 40, 43, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 66, 68, 70, 71, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 89, 90, 91, 93, 96, 101, 102, 103, 104, 106, 125, 127, 132, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "abra": 143, "abraham": 150, "abruptli": [47, 48], "absenc": 51, "absol": 143, "absolmega": 143, "absolut": [24, 30, 36, 38, 42, 74, 82, 147, 148, 149], "absolute_valu": 74, "abstract": [70, 101, 154, 169, 171, 172, 175], "abus": 36, "abxz": 39, "abyss": 39, "ac": 39, "academ": 133, "acc": [127, 148, 149, 155], "acceler": [146, 147, 149, 150, 152, 153, 154, 155, 157], "accelgor": 143, "accent": 167, "accent_r": 167, "accept": [52, 72, 102, 108, 112, 149, 154, 155, 161, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "access": [24, 36, 38, 45, 56, 60, 65, 68, 70, 74, 75, 76, 79, 80, 82, 83, 84, 89, 92, 95, 96, 101, 103, 106, 125, 126, 127, 132, 133, 134, 135, 146, 147, 151, 152, 154, 155, 164, 165, 172], "access_level": 45, "accessor": 132, "accident": 101, "acco": 143, "accomod": 146, "accomplish": [52, 56, 57, 62, 94], "accord": [45, 74, 85, 95, 104, 154, 175, 177, 178], "accordingli": [48, 68, 96, 149, 153, 155, 162, 164, 165, 166, 175], "account": [15, 37, 152, 153, 154, 155, 169, 173], "account_bal": 101, "account_info": 101, "accum": 149, "accumul": [147, 148, 149, 150, 151, 156, 157], "accur": [0, 4, 5, 11, 13, 16, 17, 18, 19, 44, 45, 51, 82, 92, 146, 166], "accuraci": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "accuracy_fn": [148, 149], "accuracy_scor": 148, "acd": 39, "acdbea": 39, "ach": 39, "achiev": [49, 101, 104, 140, 146, 148, 150, 152, 153, 154, 155, 162, 163, 166, 167, 172, 175], "achiv": 52, "acm": 97, "aco": [80, 82], "acordingli": 175, "acosh": [80, 82], "acquaint": [165, 166, 174, 175, 176, 177], "acquir": [101, 103, 154], "acronym": [52, 154], "across": [0, 106, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177], "act": [24, 37, 42, 75, 84, 95, 101, 102, 170, 176], "action": [0, 42, 54, 71, 74, 87, 101, 106, 132, 146, 149, 150, 152, 154, 155, 163, 177], "activ": [7, 18, 19, 24, 64, 146, 149, 150, 152, 153, 154, 155, 177, 184], "actual": [10, 14, 15, 16, 17, 18, 19, 34, 35, 37, 38, 52, 66, 68, 72, 77, 90, 92, 102, 103, 104, 106, 123, 128, 132, 140, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185], "actviat": 148, "ad": [4, 5, 11, 12, 13, 14, 15, 16, 17, 24, 37, 38, 39, 47, 49, 51, 53, 54, 56, 64, 70, 74, 93, 94, 103, 128, 129, 132, 133, 134, 140, 142, 146, 148, 149, 150, 151, 152, 154, 156, 157, 161, 162, 163, 165, 170, 171, 172, 173, 175], "adam": [147, 148, 150, 151, 152, 153, 154, 155, 156, 157], "adapt": [152, 153, 154, 168, 172, 175, 176, 177], "adaptiveavgpool2d": [152, 153], "add": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 36, 37, 39, 40, 44, 45, 47, 48, 54, 56, 57, 70, 71, 74, 76, 77, 79, 80, 85, 89, 90, 91, 93, 94, 95, 101, 102, 103, 104, 122, 123, 125, 128, 129, 132, 133, 134, 139, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 162, 165, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 179], "add_": [25, 107, 111], "add_6_and_3": 88, "add_all_num": 74, "add_binari": 84, "add_collect": 170, "add_expens": 101, "add_graph": 153, "add_incom": 101, "add_item": 74, "add_legend": [176, 177], "add_legend_data": 170, "add_patch": 169, "add_prefix": 139, "add_scalar": 153, "add_skil": 101, "add_subplot": 149, "add_suffix": 139, "add_ten": [36, 74], "add_two_num": 57, "add_two_numb": [74, 77], "addbackward0": 154, "adder": 40, "addit": [7, 11, 12, 13, 14, 15, 16, 17, 24, 26, 29, 40, 51, 71, 74, 77, 79, 84, 90, 93, 94, 95, 101, 103, 104, 125, 146, 154, 162, 163, 165, 166, 170, 172, 175, 180], "addition": [23, 101, 166, 173, 175, 176, 177], "addmmbackward0": [146, 154], "address": [4, 5, 45, 47, 55, 68, 90, 173], "adher": 153, "adienc": 176, "adjust": [7, 95, 146, 147, 149, 150, 151, 152, 154, 155, 156, 157, 169, 170, 171, 174, 175], "admin": 45, "adopt": [90, 155], "adrish": 154, "adult_mal": [171, 173], "advanc": [10, 24, 49, 77, 90, 148, 149, 153, 154, 155, 162, 173], "advantag": [10, 34, 98, 162, 172], "advers": 173, "adversari": 184, "advic": 173, "advis": [80, 90, 166, 173], "aegislashblad": 143, "aegislashshield": 143, "aerodactyl": 143, "aerodactylmega": 143, "aesthet": [155, 161, 163, 164, 165, 166, 170, 173, 175, 177, 180], "af0f59439c9b": 36, "affect": [75, 132, 166], "afford": 162, "afmhot": 167, "afmhot_r": 167, "afoo": 39, "afootbal": 39, "afootest": 39, "after": [0, 7, 31, 34, 39, 45, 47, 48, 49, 51, 52, 53, 54, 65, 66, 68, 70, 71, 74, 75, 76, 77, 80, 84, 88, 89, 90, 92, 93, 94, 98, 102, 104, 106, 127, 128, 129, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 167, 172, 177], "ag": [40, 44, 45, 47, 52, 53, 55, 70, 71, 74, 77, 80, 84, 90, 94, 95, 101, 102, 103, 106, 122, 132, 133, 135, 136, 137, 138, 139, 141, 142, 148, 149, 161, 163, 166, 170, 171, 173, 177], "again": [43, 48, 53, 66, 68, 70, 72, 78, 80, 101, 103, 104, 106, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "against": [39, 128, 133, 140, 149, 163, 165, 166, 170, 176, 177], "age_": 90, "agenda": [161, 163, 165, 172, 175], "agent": 0, "agg": [132, 144], "aggfunc": 132, "aggreg": [7, 175], "aggron": 143, "aggronmega": 143, "agnost": [146, 147, 148, 151, 152, 153, 154, 155, 157], "agonistc": 154, "agre": 163, "agricultur": 146, "ahead": [155, 163, 166], "ai": [24, 115, 146, 151, 152, 153, 154, 155, 173, 185], "aid": [155, 176], "aim": [0, 3, 10, 132, 136, 174], "aipom": 143, "airlin": 178, "ak": 154, "akin": [0, 150], "al": 154, "alakazam": 143, "alakazammega": 143, "alammar": 154, "alan": [47, 48, 74, 77, 133], "alan99": 49, "alan99whit": 48, "alfa": [132, 133, 144], "algebra": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 125, 166, 184], "algorithm": [0, 2, 4, 5, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 28, 29, 47, 103, 146, 147, 154, 165, 176, 184, 185], "alia": [39, 155], "align": [0, 25, 27, 28, 29, 31, 32, 52, 107, 111, 123, 132, 152, 154, 166], "alina": 122, "aliv": [171, 173], "all": [0, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 31, 32, 34, 35, 36, 38, 39, 45, 46, 47, 48, 49, 51, 54, 56, 59, 60, 61, 66, 68, 69, 70, 71, 72, 74, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 106, 109, 125, 126, 127, 128, 129, 132, 133, 134, 135, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 185], "all_even": 35, "all_kei": 55, "allan": 52, "allclos": 130, "alll": 123, "alloc": [79, 101, 175], "allow": [11, 12, 13, 14, 15, 16, 17, 20, 22, 24, 36, 37, 38, 39, 40, 42, 45, 47, 48, 51, 53, 54, 70, 71, 76, 77, 89, 90, 91, 94, 95, 101, 102, 103, 104, 106, 108, 112, 127, 128, 132, 133, 139, 140, 141, 146, 148, 150, 151, 152, 153, 154, 155, 157, 164, 167, 171, 172, 176, 177], "almost": [24, 146, 147, 148, 150, 151, 152, 153, 154, 155, 165, 174, 175], "aloha": 161, "alomomola": 143, "alon": [154, 169, 171, 173], "along": [8, 10, 11, 14, 15, 37, 47, 70, 71, 74, 77, 79, 80, 84, 102, 103, 106, 125, 126, 128, 146, 148, 150, 154, 155, 162, 165, 167, 169, 170, 172, 174, 175, 185], "alongisd": 147, "alongsid": [148, 149, 150, 155], "alot": 154, "alow": 49, "alpha": [8, 18, 19, 31, 32, 81, 90, 155, 164, 166, 167, 168, 169, 170, 172, 177], "alphabet": [28, 29, 48, 49, 52, 76, 80, 91], "alphanumer": 52, "alreadi": [8, 23, 36, 37, 45, 52, 53, 56, 68, 70, 80, 85, 98, 106, 132, 133, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 165, 166, 167, 169, 170, 171, 172, 174, 175, 177], "alright": [147, 148, 149, 150, 152, 154, 155, 168], "also": [0, 6, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 34, 35, 36, 37, 38, 42, 43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 68, 69, 70, 71, 72, 74, 75, 76, 77, 79, 80, 83, 84, 87, 89, 90, 91, 93, 94, 95, 96, 98, 101, 102, 103, 106, 107, 109, 111, 123, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 185], "altaria": 143, "altariamega": 143, "alter": [37, 42, 92, 132, 150, 154, 155, 162, 165, 167, 169, 170, 172, 173, 174, 175], "altern": [27, 29, 31, 36, 52, 68, 77, 80, 91, 136, 139, 154, 155, 172, 175, 177], "although": [4, 12, 28, 29, 36, 74, 75, 79, 83, 95, 96, 102, 148, 155, 162, 163, 164, 170, 171, 175, 176], "alu": 68, "alwai": [24, 27, 29, 34, 42, 43, 71, 72, 74, 80, 81, 82, 85, 87, 88, 89, 93, 95, 96, 102, 103, 106, 127, 132, 146, 147, 148, 150, 152, 153, 154, 155, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175], "am": [37, 39, 52, 56, 60, 61, 75, 84, 94, 106, 150, 162, 165, 167, 169, 170, 171, 172, 173, 175, 177], "amaura": 143, "amax": [18, 19], "amaz": [51, 152, 177], "amazon": [52, 155], "amazonaw": 149, "amber": 164, "ambigu": 85, "ambipom": 143, "amd": [98, 153], "amd64": 24, "amelia": 106, "america": [59, 63, 68], "american": 161, "ami": [40, 47, 102], "amin": [18, 19], "among": [45, 66, 102, 164, 165, 173, 174, 177], "amongst": 150, "amoonguss": 143, "amount": [0, 42, 44, 72, 89, 92, 98, 125, 146, 147, 148, 149, 152, 153, 154, 155, 166, 170, 171, 172, 177], "ampharo": 143, "ampharosmega": 143, "ampl": 175, "an": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 27, 28, 29, 31, 32, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 57, 60, 64, 65, 66, 68, 69, 70, 72, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 103, 104, 106, 112, 125, 126, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 151, 152, 153, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "anaconda": [80, 125, 162], "anaconda3": [61, 80, 136, 139, 140, 141, 161, 164, 168, 170], "analog": [83, 132], "analys": [5, 14, 15, 16, 17, 98, 115, 162], "analysi": [0, 3, 4, 5, 12, 14, 15, 16, 17, 64, 98, 132, 133, 136, 143, 144, 155, 161, 162, 164, 165, 169, 170, 171, 173, 174, 175, 177, 178, 184], "analyst": [132, 140, 163], "analyt": [0, 132, 165], "analyz": [7, 71, 98, 122, 123, 132, 133, 134, 137, 138, 140, 143, 144, 169, 177], "anana": 39, "andrej": 146, "android": 155, "angl": 82, "ani": [4, 6, 7, 18, 19, 22, 24, 27, 31, 32, 34, 35, 37, 38, 46, 47, 48, 49, 51, 52, 54, 56, 57, 64, 70, 71, 75, 76, 77, 78, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 109, 116, 125, 126, 128, 129, 132, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 185], "anim": [7, 18, 19, 103, 154], "anisotrop": [28, 29], "ankl": [17, 19, 149], "anlayt": 185, "ann": [7, 18, 19], "anniversari": 39, "annoi": 129, "annot": [155, 163, 172, 173, 176], "annotate_ax": 170, "annual": [24, 133, 166], "anomal": 1, "anomali": [2, 184], "anomaly_detect": 8, "anonym": [22, 35, 57, 86], "anorith": 143, "anoth": [3, 7, 22, 28, 29, 31, 32, 35, 36, 37, 44, 45, 46, 47, 48, 49, 51, 52, 53, 56, 57, 62, 68, 70, 74, 75, 76, 80, 83, 84, 88, 89, 91, 93, 94, 95, 96, 101, 102, 103, 122, 127, 128, 132, 133, 134, 141, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "anscomb": [165, 167], "answer": [51, 149, 150, 151, 152, 153, 154, 155, 157, 175], "antialia": [150, 153, 154, 156, 157], "antibiot": 47, "anuko": 52, "anukool": [52, 69], "any_fun": 84, "anymor": 176, "anyon": [52, 90, 153, 155], "anyth": [24, 43, 52, 74, 102, 106, 136, 139, 141, 142, 146, 147, 148, 149, 150, 153, 154, 155, 162, 169, 172, 177], "anytim": [154, 163], "anywai": [44, 150, 155, 171, 172, 176], "anywher": [39, 146, 153, 155, 167], "apart": [4, 24, 53, 128, 166, 169, 175], "api": [136, 139, 146, 152, 153, 154, 155], "app": [149, 150, 151, 152, 153, 164], "appart": 49, "appdata": 80, "appeal": [162, 163, 173], "appear": [52, 75, 76, 79, 84, 89, 103, 148, 149, 154, 155, 162, 164, 165, 166, 173, 177], "appen": 129, "append": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 47, 57, 68, 71, 74, 79, 80, 84, 94, 101, 125, 129, 132, 139, 141, 144, 147, 149, 150, 151, 153, 155, 156, 157, 165, 167, 168, 169, 170, 177], "appendex": 154, "appendix": 154, "appl": [39, 47, 52, 53, 55, 56, 91, 92, 95, 102, 134, 155, 173], "apple_pi": 155, "appli": [24, 31, 32, 37, 38, 70, 79, 135, 136, 138, 139, 140, 142, 146, 148, 149, 150, 152, 154, 164, 165, 169, 172, 174, 175, 176, 177], "applic": [0, 22, 28, 29, 31, 32, 39, 51, 52, 64, 68, 80, 83, 101, 102, 116, 128, 133, 139, 146, 147, 151, 154, 155, 157, 169, 184, 185], "approach": [7, 26, 101, 128, 136, 139, 147, 153, 176, 177], "appropri": [0, 5, 14, 15, 16, 17, 43, 44, 45, 46, 51, 61, 74, 152, 153, 154, 155, 164, 169], "approx": 32, "approxim": [4, 5, 51, 154, 174, 175], "apr": 87, "april": [45, 49, 150, 155], "apython": 39, "ar": [0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 81, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 108, 109, 112, 115, 123, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185], "arab": 68, "arang": [8, 28, 29, 122, 125, 127, 128, 130, 146, 147, 148, 177, 178], "arbitrari": [27, 55, 56, 71, 74, 106, 127, 132, 150, 164], "arbok": 143, "arc": 82, "arcanin": 143, "arcco": 32, "arceu": 143, "archen": 143, "archeop": 143, "architectur": [7, 149, 150, 151, 152, 153, 154, 155, 156, 157], "architecur": 154, "architecutur": 152, "architetur": 154, "archiv": [150, 154], "arctan2": 130, "arcx": 52, "arcxarcx": 52, "area": [0, 74, 90, 95, 101, 103, 150, 154, 155, 166, 172, 175, 176], "area_of_circl": [74, 90], "aren": [57, 146, 147, 149, 150, 152, 153, 154, 155, 171, 173, 175], "arg": [37, 41, 49, 61, 71, 77, 106, 139, 148, 149, 150, 151, 153, 154, 155, 156, 157, 164, 167, 170, 176], "arg1": [57, 77], "arg2": 57, "arg3": 57, "argentina": 122, "argmax": [130, 146, 148, 149, 150, 151, 152, 155, 156, 157], "argmin": [130, 146], "argpars": [151, 157], "argpartit": 130, "argsort": 130, "argu": 148, "argument": [22, 34, 35, 37, 38, 39, 40, 52, 56, 57, 59, 60, 61, 65, 66, 68, 69, 70, 72, 75, 79, 80, 84, 86, 90, 102, 106, 122, 126, 129, 149, 150, 151, 152, 162, 163, 164, 165, 166, 168, 171, 175, 177], "argument1": 80, "argument2": 80, "argument_list": 79, "argv": 80, "ariado": 143, "aris": [37, 48], "arithmet": [38, 51, 70, 74, 101, 104, 128], "arm": [98, 161], "armaldo": 143, "arnold": 161, "aromatiss": 143, "aron": 143, "around": [52, 77, 84, 92, 146, 152, 155, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177], "arr": [37, 126, 128], "arrai": [14, 15, 18, 19, 22, 24, 25, 28, 29, 30, 31, 32, 47, 52, 55, 57, 68, 74, 80, 107, 111, 131, 132, 146, 148, 150, 165, 166, 167, 169, 175, 176, 177, 178], "arrang": [31, 69, 143, 146, 165, 170, 173, 174], "array_equ": [125, 130], "arriv": [169, 172], "arrow": [70, 154], "arrrai": 132, "arsen": [175, 176, 177], "art": [0, 49, 148, 149, 150, 151, 152, 154, 155], "arthur": [37, 40, 45, 47, 55, 57, 74, 77, 94, 101, 102, 103], "arthurhunt": 40, "articl": [9, 17, 19, 48, 63, 64, 65, 66, 76, 77, 106, 132, 133, 136, 138, 139, 148, 154, 155, 166], "articuno": 143, "artif": 15, "artifici": [0, 7, 12, 15, 18, 19, 146, 149, 150, 155, 173, 184], "artificial_intellig": 173, "artist": [153, 170], "arxiv": 154, "as_cmap": 164, "as_strid": 130, "asabeneh": [24, 68], "asarrai": 150, "ascend": [132, 143, 144], "ascii": [52, 68], "ascii_lett": 80, "ascontiguousarrai": 130, "asian": [54, 161], "asian_countri": 54, "asid": [146, 173], "asin": [80, 82], "asinh": [80, 82], "ask": [24, 35, 42, 51, 72, 94, 148, 150, 151, 152, 154, 155, 175], "aspect": [101, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 174, 175, 176, 177], "assaria": 161, "assert": [70, 71, 88, 89, 149, 151, 152, 153, 154, 155, 156, 157], "assertionerror": 70, "assess": 174, "assign": [3, 7, 17, 19, 36, 37, 38, 47, 52, 53, 54, 55, 56, 57, 62, 70, 75, 76, 77, 79, 84, 89, 91, 92, 93, 96, 97, 101, 104, 106, 132, 133, 136, 139, 141, 142, 148, 150, 162, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177], "assist": [164, 176], "associ": [0, 9, 17, 19, 28, 29, 55, 80, 84, 89, 90, 96, 102, 163, 166, 170, 171, 175, 177], "assosci": [152, 155], "assum": [1, 4, 7, 11, 13, 38, 95, 136, 150, 155, 164], "assumpt": [166, 175], "assur": [154, 169, 171, 175], "asterisk": [40, 77, 80], "astyp": [125, 129, 130, 132, 172, 177], "async": 88, "atan": [80, 82], "atan2": [80, 82], "atanh": [80, 82], "ath": 39, "atk": 143, "atlanta": 103, "atlanti": 40, "atleast": 167, "atleast_2d": 130, "atmospher": 163, "atol": 149, "attach": [36, 38, 49, 90, 101, 132, 146, 152, 154, 163, 164, 165, 166, 167, 170, 172, 174, 175, 177], "attack": [143, 161], "attain": 173, "attempt": [152, 155, 163, 171, 175], "attent": [150, 155, 170, 172, 177], "attn_dropout": 154, "attn_output": 154, "attr": [102, 103], "attract": [94, 162], "attrib": 68, "attribut": [36, 37, 38, 39, 56, 59, 65, 70, 72, 74, 80, 82, 89, 94, 101, 103, 106, 128, 136, 139, 146, 149, 150, 152, 153, 154, 155, 157, 167, 169, 170, 175], "attributeerror": [56, 101, 102, 103, 170, 175], "attributemethod": 89, "au": 32, "audi": [132, 133, 144], "audienc": 176, "audino": 143, "audinomega": 143, "audio": [24, 146, 147, 149, 150, 152, 155, 177], "aug": 87, "augment": [149, 152, 153, 155], "augmentedassign": 89, "august": 45, "auli": 154, "auroru": 143, "australia": [11, 13, 122, 166], "author": 154, "auto": [143, 144, 149, 150, 151, 153, 154, 155, 156, 157], "auto_transform": 152, "autograd": 147, "autom": [0, 24, 47, 48], "automat": [0, 7, 34, 35, 38, 51, 80, 90, 93, 101, 102, 106, 132, 147, 148, 150, 152, 154, 155, 162, 163, 166, 168], "automatic_transform": 153, "automobil": 132, "automobile_data": [132, 133, 144], "automobile_data1": 144, "autopct": [122, 123], "autoregress": 175, "autoreload": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "autumn": [45, 74, 161, 167], "autumn_r": 167, "ava": 68, "avail": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 51, 52, 53, 54, 56, 68, 80, 82, 84, 87, 89, 91, 92, 94, 96, 103, 104, 128, 132, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 164, 165, 166, 172, 173, 175, 176, 177], "availalbl": 147, "avalugg": 143, "averag": [1, 4, 47, 53, 74, 123, 132, 133, 149, 150, 151, 152, 153, 155, 156, 157, 166, 171, 175, 177], "avg": 143, "avgpool": 152, "avgpool2d": 149, "avocado": 95, "avoid": [36, 45, 46, 49, 56, 57, 68, 78, 83, 93, 101, 126, 136, 146, 149, 154, 166, 175], "avov": [166, 167], "aw": [146, 155], "awai": [11, 12, 13, 14, 15, 16, 17, 24, 39, 90, 149, 153, 157, 162, 165, 166, 171, 173], "await": [88, 155, 163], "awar": [18, 19, 68, 146, 147, 149, 154, 155, 166, 170], "award": 175, "awesom": [24, 167], "awhil": 90, "awk": 24, "ax": [8, 11, 14, 15, 25, 30, 107, 111, 136, 139, 146, 149, 150, 154, 155, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "ax1": [176, 178], "ax2": 176, "ax4": 176, "ax5": 176, "ax6": 176, "ax_joint": 166, "axarr": 123, "axes_styl": [162, 173], "axessubplot": [161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175, 178], "axew": 143, "axhlin": 177, "axi": [11, 14, 15, 16, 17, 18, 19, 27, 30, 39, 122, 123, 125, 126, 128, 129, 132, 138, 143, 146, 149, 150, 152, 154, 155, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177], "axis_nam": 136, "axisgrid": [163, 165, 166, 167, 168, 171, 174, 175, 176, 177], "axz": 39, "ax\u00b2": 74, "az": 161, "azelf": 143, "azumaril": 143, "azur": [146, 155], "azuril": 143, "b": [11, 30, 37, 45, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 65, 68, 69, 71, 74, 75, 76, 77, 80, 81, 82, 84, 90, 91, 92, 94, 95, 96, 102, 103, 104, 106, 122, 125, 126, 127, 128, 132, 133, 135, 136, 137, 138, 139, 142, 146, 147, 154, 155, 161, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "b1": 104, "b2": 104, "b312893cfb9a": 55, "b334ef": 80, "b3ac65e67ae9": 75, "b4c816180ad9": 94, "b72af0bfcd83": 53, "b8ab82a1062c": 77, "b8eab4452d4b": 102, "b942612e6b6a": 53, "b951d4fef2c8": 71, "b977fb738e16": 101, "b_0": 27, "b_n": 27, "ba": 154, "baby_back_rib": 155, "babydog": 103, "bac": 39, "back": [8, 52, 69, 77, 94, 98, 104, 115, 125, 132, 136, 139, 140, 141, 142, 143, 147, 149, 150, 153, 154, 155, 163, 170, 171, 172, 173, 174, 175], "back_end": 53, "backbon": [152, 153, 154], "backend": [146, 162, 165, 177], "background": [35, 147, 154, 162, 164, 166, 172, 173, 175], "backlash": 39, "backpropag": [18, 19, 147, 148], "backslash": [52, 69, 89, 91], "backspac": 52, "backward": [38, 48, 52, 69, 92, 106, 147, 148, 149, 150, 151, 152, 155, 156, 157, 172], "bad": [71, 132, 147, 149, 152, 155, 171], "baevski": 154, "bag": [17, 19, 90, 149], "bagon": 143, "baidu": [77, 90], "baklava": 155, "balanc": [148, 152], "ball": [47, 55, 91], "baltoi": 143, "banana": [39, 45, 47, 53, 56, 71, 91, 92, 94, 95, 134], "band": 175, "bandwidth": [168, 172, 175], "banett": 143, "banettemega": 143, "bang": 146, "bangladesh": [68, 166], "bank": [155, 170], "bar": [39, 53, 55, 76, 149, 150, 163, 169, 170, 171, 172, 174, 175, 177, 180], "bar1": 173, "bar2": 173, "bar3": 173, "barack": 68, "barbaracl": 143, "barboach": 143, "barcelona": 122, "barchart": 122, "bare": [148, 185], "barebon": 149, "barh": 149, "bark": 103, "barn": 40, "barplot": [162, 169, 173, 174], "basculin": 143, "base": [0, 3, 4, 5, 6, 7, 10, 11, 13, 14, 15, 17, 18, 19, 24, 27, 31, 32, 47, 48, 49, 51, 52, 57, 59, 60, 61, 65, 70, 71, 72, 78, 80, 82, 83, 93, 94, 95, 98, 101, 102, 103, 106, 109, 115, 129, 132, 133, 135, 136, 143, 144, 146, 147, 148, 149, 150, 151, 154, 155, 164, 166, 167, 172, 173, 175, 177, 178, 181, 182], "base1": 103, "base2": 103, "baseclass": [101, 103], "basel": 29, "baselin": [154, 173], "baseto": 80, "basi": [24, 52, 53, 152, 154, 165, 167, 168, 169, 171], "basic": [23, 28, 29, 32, 37, 38, 39, 49, 51, 65, 72, 76, 80, 101, 128, 132, 147, 148, 150, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 185], "basicli": 54, "basicmethod": 89, "bastiodon": 143, "bat": 103, "batch": [150, 151, 152, 153, 154, 155, 156, 157], "batch_first": 154, "batch_siz": [149, 150, 151, 152, 153, 154, 155, 156, 157], "batchnorm2d": 152, "bathingsoap": 123, "bathingsoapsalesdata": 123, "bathroom": 146, "battl": 52, "bayleef": 143, "baz": 53, "bb": 39, "bb99b9cebaa8": 55, "bbox_inch": 30, "bc9e07fcbe69": 56, "bcaaeab6bf17": 93, "bceloss": [147, 148], "bcelosswithlogit": 148, "bcewithlogitsloss": 148, "beach": 155, "beak": 47, "bear": 44, "beartic": 143, "beat": 155, "beauti": [39, 87, 150, 153, 154, 155, 161, 175], "beautifi": 68, "beautifli": 143, "beautifulli": [155, 170], "beautifulsoup": 24, "becasu": 88, "becaus": [7, 24, 27, 35, 37, 47, 48, 49, 52, 60, 70, 71, 74, 75, 76, 77, 79, 87, 88, 89, 90, 91, 92, 93, 95, 101, 102, 103, 106, 133, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "becom": [35, 38, 47, 48, 52, 75, 106, 132, 133, 134, 147, 148, 155, 175], "bedroom": [0, 146], "bee": 169, "beedril": 143, "beedrillmega": 143, "beef_carpaccio": 155, "beef_tartar": 155, "been": [3, 7, 14, 15, 16, 17, 18, 19, 39, 49, 52, 53, 54, 55, 56, 68, 70, 71, 84, 90, 102, 106, 115, 130, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 163, 164, 165, 166, 169, 170, 172, 174, 175, 176, 177], "beeswarm": [169, 170], "beet_salad": 155, "befor": [0, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 35, 36, 37, 38, 40, 47, 48, 51, 57, 59, 65, 66, 69, 71, 75, 76, 77, 79, 84, 93, 98, 102, 103, 106, 129, 132, 133, 134, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 161, 163, 164, 165, 166, 167, 171, 172, 173, 175, 176, 177, 185], "beforehand": 48, "began": 177, "begin": [25, 27, 28, 29, 31, 32, 38, 47, 52, 53, 54, 65, 68, 80, 84, 89, 90, 102, 104, 106, 107, 111, 141, 142, 143, 146, 148, 149, 150, 152, 153, 154, 155, 161, 162, 163, 165, 166, 167, 169, 170, 171, 173, 174, 175, 177], "beginn": [22, 87, 98, 155, 165, 171, 172, 185], "behav": [68, 91, 104, 106, 128], "behavior": [0, 27, 51, 84, 101, 102, 103, 106, 137, 141, 142, 146, 152, 165], "behaviour": [27, 95], "beheeyem": 143, "behind": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 78, 79, 146, 147, 149, 150, 153, 154, 169, 172, 174, 177], "beignet": 155, "being": [0, 7, 14, 15, 18, 19, 24, 27, 38, 39, 48, 53, 55, 56, 74, 77, 92, 101, 103, 108, 112, 146, 147, 148, 149, 150, 152, 153, 154, 155, 162, 165, 166, 167, 169, 171, 173, 175, 176], "beldum": 143, "belgium": [122, 166], "believ": [170, 175], "bell": 52, "bella": [47, 101, 102, 106], "bellossom": 143, "bellsprout": 143, "belong": [3, 10, 51, 91, 92, 101, 102, 148, 154], "below": [3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 26, 35, 37, 38, 43, 44, 47, 48, 49, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 77, 78, 80, 83, 84, 87, 88, 90, 91, 92, 94, 95, 101, 103, 104, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 155, 162, 166, 168, 176, 177, 178], "ben": 101, "benchmark": [9, 17, 19, 148, 150, 152, 154, 155], "bend": 165, "benefici": [90, 135, 152], "benefit": [52, 80, 103, 148, 149, 150, 151, 152, 154, 155, 156, 157], "benz": 144, "beret": 153, "bergmit": 143, "bergum": 155, "bert": [154, 184], "besid": 125, "best": [0, 1, 4, 24, 35, 37, 47, 49, 52, 53, 68, 85, 98, 123, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 164, 165, 166, 167, 169, 172, 175], "best_model": 153, "best_model_path": 153, "beta": [31, 81, 150, 152, 154, 165], "beta_": 154, "betavari": 81, "better": [11, 13, 36, 39, 42, 47, 48, 66, 84, 89, 98, 103, 104, 106, 122, 123, 132, 146, 147, 148, 150, 152, 153, 154, 155, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 184], "betw": 11, "between": [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 19, 29, 37, 39, 47, 48, 49, 51, 52, 53, 54, 56, 64, 68, 78, 80, 81, 84, 94, 95, 102, 106, 128, 129, 132, 146, 147, 148, 149, 151, 152, 153, 154, 155, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 177, 178], "beverag": 54, "bewar": [150, 153, 154], "beyond": [148, 171, 175], "bfc5aa62a0ff": 95, "bfoo": 39, "bia": [7, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 184], "bias": [147, 153], "bibarel": 143, "bibimbap": 155, "bibl": 163, "bicub": [152, 153, 155], "bidirect": 154, "bidoof": 143, "big": [11, 12, 13, 147, 149, 150, 152, 153, 154, 156, 175, 176, 177, 184, 185], "bigger": [4, 7, 8, 10, 16, 17, 18, 19, 38, 44, 56, 94, 127, 153, 154, 155, 167, 169, 176], "biggest": [126, 149, 150, 152, 153, 154, 155, 162], "biggr": 27, "bilinear": [150, 153, 154, 156, 157], "bill": [37, 47, 52, 57, 74, 77, 165, 166, 169, 170, 171, 172, 175, 177], "billion": 146, "bin": [69, 84, 95, 122, 146, 155, 163, 166, 168, 172, 173, 177], "binacl": 143, "binari": [5, 14, 15, 16, 17, 51, 52, 68, 84, 89, 91, 94, 95, 98, 147, 148, 149, 167], "binary_r": 167, "binary_sum": 84, "bind": [96, 102, 170], "binder": 24, "binomi": 166, "biolog": [7, 18, 19], "bird": [55, 101, 103], "birth": [39, 166], "birth_year": [74, 77, 90], "birthdai": 74, "bisharp": 143, "bit": [4, 5, 8, 10, 16, 17, 18, 19, 24, 54, 81, 95, 98, 146, 147, 148, 150, 152, 153, 154, 155, 163, 167, 178], "bitter": [152, 153], "bitwis": [89, 104], "bivarait": 166, "bivari": [168, 174, 177], "bject": 68, "black": [7, 10, 161, 169, 170, 173], "blank": 84, "blastois": 143, "blastoisemega": 143, "blaziken": 143, "blazikenmega": 143, "blend": 177, "blind": 164, "blissei": 143, "blitzl": 143, "blob": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 148, 155, 176], "blobmodel": 148, "block": [6, 42, 43, 44, 45, 46, 47, 48, 49, 68, 71, 74, 89, 101, 109, 132, 146, 147, 150, 155, 168, 175, 178, 182], "block_1": [149, 156, 157], "block_2": [149, 156, 157], "blog": [64, 106, 151, 153, 154, 155], "blood": [103, 175], "blood_pressur": 175, "blu": 101, "blue": [47, 89, 122, 146, 147, 149, 153, 155, 164, 165, 167, 170, 178], "blueprint": [101, 102, 106], "blues_r": 167, "bmatrix": [28, 29, 31, 32], "bmv": 144, "bmw": [103, 144], "bob": 90, "bodi": [34, 43, 44, 45, 46, 47, 48, 49, 74, 75, 79, 89, 101, 103, 132, 133, 143, 144, 154, 161], "body_camera": 161, "bog": 154, "bokeh": 166, "bold": [122, 154, 172, 173, 175, 177], "bolder": 177, "boldor": 143, "bond": [52, 94], "bone": 167, "bone_r": 167, "bonsli": 143, "bonu": [155, 173], "book": [6, 20, 25, 90, 104, 107, 108, 109, 111, 112, 155, 159, 164, 173, 181, 182], "bookmark": 174, "bool": [102, 103, 149, 150, 153], "bool_a": 127, "bool_idx": 127, "boolean": [16, 17, 18, 19, 37, 45, 52, 80, 89, 102, 125, 126, 132, 136, 137, 138, 139, 141, 142], "boost": [54, 149], "booster": 163, "boot": [17, 19, 149], "boot_trac": 175, "bootstrap": [173, 175], "boottel": 69, "bore": [49, 155], "born": [39, 71, 154], "borrow": 106, "bot": 32, "both": [16, 17, 18, 19, 35, 37, 39, 44, 47, 49, 51, 52, 53, 54, 55, 56, 57, 59, 65, 68, 69, 71, 75, 76, 80, 89, 91, 95, 96, 101, 103, 106, 108, 112, 128, 132, 133, 134, 136, 139, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 166, 170, 172, 173, 177], "bother": [154, 163, 165], "bottl": 52, "bottleneck": [149, 153], "bottom": [16, 17, 18, 19, 24, 127, 132, 148, 149, 155, 163, 171, 173, 175], "bottom_plot": 173, "bottombar": 173, "bottomrow": 135, "bouffal": 143, "bought": 150, "bound": [28, 29, 36, 37, 70, 81, 98, 102, 132, 147, 170], "boundari": [5, 9, 148], "box": [108, 112, 172, 173, 174, 175, 177, 180], "boxen": 175, "boxenplot": 175, "boxplot": [122, 162, 164, 169, 170, 171, 172, 175, 177], "boxprop": [122, 169], "bp": 122, "brace": [52, 55, 56, 89, 92, 94], "bracket": [35, 43, 47, 48, 52, 53, 54, 55, 57, 89, 91, 92, 126, 127, 146], "brain": [7, 18, 19, 176], "braixen": 143, "brand": 177, "braviari": 143, "brazil": [68, 122], "brbg": 167, "brbg_r": 167, "bread": [52, 155], "bread_pud": 155, "break": [7, 22, 34, 42, 50, 71, 72, 74, 80, 88, 89, 91, 94, 147, 148, 149, 150, 153, 154, 155, 176, 177], "breakdown": [155, 158, 159, 169], "breakfast_burrito": 155, "breed": 55, "breez": 171, "breloom": 143, "breviti": [127, 153, 154], "brew": 164, "brewer": 164, "brg": 167, "brg_r": 167, "brick": 154, "bridg": [154, 155], "brief": [27, 28, 29, 65, 68, 81, 82, 102, 129], "briefli": 164, "bright": 164, "brilliant": 52, "bring": [52, 68, 146, 149, 154, 165, 167, 171, 173, 177], "broad": 154, "broader": [170, 175], "broadli": 70, "brock": 161, "broken": [38, 78], "bronzong": 143, "bronzor": 143, "brooklyn": 170, "broswer": 155, "brother": 101, "brown": [161, 164], "browser": [24, 155, 164], "brrrr": [150, 154], "bruce": 77, "bruyn": 122, "bsd": [132, 143, 144], "btw": 125, "bu": 146, "buck": 161, "bucket": 164, "budew": 143, "bue": 178, "buffer": 68, "bug": 143, "bugn": 167, "bugn_d": 173, "bugn_r": 167, "build": [8, 11, 13, 14, 15, 24, 35, 38, 39, 101, 102, 108, 112, 132, 146, 152, 154, 162, 168, 170, 184], "built": [6, 24, 34, 36, 38, 47, 49, 51, 57, 68, 71, 72, 74, 79, 84, 85, 87, 89, 90, 94, 96, 101, 103, 104, 109, 123, 132, 136, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 182], "builtin": [24, 84, 146], "buizel": 143, "bulbasaur": 143, "bulk": 169, "bullet": 150, "bunch": [0, 52, 146, 147, 148, 149, 150, 152, 153, 155, 163], "buneari": 143, "bunnelbi": 143, "bupu": 167, "bupu_r": 167, "burlington": 161, "burmi": 143, "busi": [0, 24, 132, 165, 170, 173], "bussi": 24, "butter": 52, "butterfre": 143, "bw": [172, 174], "bwmeq": 80, "bwr": [167, 174], "bwr_r": 167, "bx": [74, 166], "bypass": 49, "byte": [68, 69, 132, 153, 154, 155], "bytetensor": 150, "c": [8, 10, 22, 24, 29, 37, 38, 39, 45, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 63, 68, 69, 70, 71, 74, 79, 80, 82, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 106, 122, 123, 126, 127, 128, 129, 132, 136, 137, 138, 139, 140, 141, 143, 144, 146, 147, 148, 149, 150, 153, 154, 155, 161, 164, 166, 168, 169, 170, 171, 173, 178], "c0": [163, 164], "c00e5d7d3c3": 70, "c02acf54079b": 144, "c1": [102, 103, 164], "c2": 164, "c3": 164, "c3f637926d7e": 68, "c4": 164, "c454c1331524": 72, "c5": 164, "c6": 164, "c7": 164, "c761920b81b0": 71, "c8": 164, "c8f749f7a9ca": 144, "c9": 164, "c92d9f2b36de": 92, "c_name": 103, "ca": [39, 161], "cab": [39, 175], "cabbag": 71, "cabxz": 39, "cach": [155, 170], "cacnea": 143, "cacturn": 143, "cacul": [147, 148], "cad": 24, "cake": 155, "calcuat": 148, "calcul": [4, 7, 8, 11, 13, 27, 32, 43, 47, 49, 51, 64, 74, 82, 89, 90, 94, 95, 101, 103, 106, 132, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 162, 164, 166, 168, 169, 170, 172, 173, 175], "calcula": 23, "calculate_ag": [74, 77], "calculate_area": 101, "calculate_mean": 74, "calculate_median": 74, "calculate_mod": 74, "calculate_rang": 74, "calculate_slop": 74, "calculate_std": 74, "calculate_vari": 74, "calculu": 184, "calculus_fourierseries__util": 27, "calendar": 175, "call": [1, 7, 8, 18, 19, 20, 24, 34, 35, 36, 37, 38, 39, 40, 42, 46, 47, 48, 52, 53, 54, 55, 56, 57, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 108, 112, 127, 134, 135, 136, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 164, 170, 172, 173, 175, 176, 177, 178], "callabl": [34, 37, 55, 80, 139, 170, 172], "callablemethod": 89, "callback": 37, "caller": 35, "calul": 147, "cambridg": 172, "came": [150, 152], "camelcas": 90, "camera": [149, 161], "camerupt": 143, "cameruptmega": 143, "can": [0, 4, 6, 7, 11, 13, 18, 19, 22, 24, 25, 27, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 107, 109, 111, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 149, 150, 153, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 184, 185], "canada": [11, 13, 122], "canb": 30, "canberra_dist": 30, "candi": 102, "candid": 155, "canidaefamili": 103, "cannon": 95, "cannot": [35, 37, 38, 40, 47, 49, 51, 52, 54, 55, 56, 61, 68, 70, 71, 75, 76, 77, 79, 80, 88, 90, 91, 92, 93, 94, 95, 98, 101, 106, 129, 133, 136, 138, 146, 150, 161, 167, 173], "canon": 24, "cap": [146, 150, 173], "capabl": [0, 39, 146, 147, 148, 149, 150, 152, 154, 155, 177], "capac": [148, 155], "capit": [30, 37, 52, 74, 80, 90], "capita": [11, 13], "capital_c": 90, "capitalis": 52, "capitalize_list_item": 74, "capsiz": 173, "captial": 52, "caption": 149, "captur": [71, 81, 95, 154, 157], "capword": [80, 90], "car": [0, 7, 102, 103, 132, 133, 146, 149, 152, 154, 155, 161], "car_horsepow": 144, "car_info": 103, "car_manufactur": 144, "car_park": 146, "car_pric": 144, "carbink": 143, "card": 148, "care": [34, 68, 128, 132, 146, 150, 153, 154, 165, 166, 175, 178], "career": 0, "carefulli": 49, "carnegi": 7, "carnivin": 143, "carpricedf": 144, "carracosta": 143, "carri": [51, 56, 95, 104, 142], "carriag": 52, "carrot": [71, 155], "carsdf": 144, "carsdf1": 144, "carsdf2": 144, "carshorsepowerdf": 144, "carson": 77, "carter": 101, "cartesian": 11, "carvanha": 143, "cascoon": 143, "case": [3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 36, 37, 39, 42, 43, 44, 47, 49, 51, 52, 55, 56, 66, 70, 71, 80, 88, 89, 90, 91, 94, 95, 96, 98, 101, 103, 106, 116, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 178, 184], "cast": 126, "castform": 143, "cat": [7, 47, 91, 92, 106, 148, 149, 154, 167], "cat1": 106, "cat2": 106, "cat_po": 170, "catbackward0": 154, "catch": [42, 72, 172, 177], "cateat": 122, "categor": [0, 5, 14, 15, 16, 17, 80, 132, 133, 161, 164, 165, 168, 171, 172, 173, 174, 175, 176, 177, 180], "categori": [10, 14, 15, 17, 19, 42, 51, 70, 92, 143, 148, 155, 161, 164, 167, 169, 173, 176], "categoricalindex": 132, "categorize_countri": 37, "category_point": [165, 167], "caterpi": 143, "cathi": 47, "catplot": 175, "caught": [34, 49, 71], "caus": [37, 38, 49, 56, 68, 70, 71, 72, 87, 148, 150, 155], "cautiou": 177, "cb8ac02fbcd3": 70, "cbar": 178, "cbook": 170, "cd": [80, 155], "cde": 39, "cdn": 122, "cdot": [27, 28, 29, 31, 32, 146, 148, 154], "cdotp": 30, "ceil": [16, 17, 18, 19, 80, 82, 130], "ceil_mod": [149, 150, 156, 157], "celebi": 143, "cell": [16, 17, 18, 19, 24, 36, 75, 146, 147, 149, 150, 153, 154, 155, 158, 162, 178], "cell_cont": 36, "celsiu": 38, "center": [27, 52, 71, 94, 129, 148, 154, 163, 168, 171, 172, 173, 176], "centimet": [9, 10, 14], "centimetr": 161, "centr": 165, "central": [101, 149, 161, 165, 169, 171, 172, 173, 175], "centroid": [3, 10], "centroid_id": 10, "centuri": [60, 61], "certain": [1, 11, 12, 13, 14, 15, 16, 17, 31, 39, 42, 49, 52, 53, 54, 61, 63, 70, 71, 80, 85, 90, 132, 146, 148, 149, 150, 152, 153, 155, 162, 171], "certainli": [90, 154, 155, 163, 166, 169, 172, 173, 175, 176], "ch": [47, 57], "chaang": 143, "chain": [45, 90, 95, 103, 133, 136, 137, 142], "chairman": 175, "challeng": [52, 102, 149, 153, 154, 155, 176], "chanc": [146, 147, 148, 149, 150, 153, 154, 157], "chandelur": 143, "chandler": 161, "chang": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 37, 43, 47, 48, 51, 56, 57, 64, 70, 71, 74, 75, 76, 77, 80, 92, 93, 94, 98, 101, 102, 103, 104, 122, 126, 127, 129, 132, 135, 136, 137, 138, 139, 141, 147, 148, 149, 150, 151, 154, 155, 156, 157, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "changabl": 155, "change_to_upp": 37, "changelog": 148, "channel": [146, 149, 150, 151, 152, 153, 154, 155, 156, 157], "chansei": 143, "chapter": [52, 151, 152, 153, 154, 155], "char": [35, 47, 91], "charact": [24, 37, 42, 47, 48, 49, 60, 61, 68, 80, 87, 89, 90, 92, 94, 139, 162], "characterist": [0, 5, 7, 56, 101, 143, 144, 155, 175], "charcter": 52, "charg": 155, "charizard": 143, "charizardmega": 143, "charmand": 143, "charmeleon": 143, "chart": [173, 175, 176], "chase": 161, "chatot": 143, "chdir": 80, "che": 39, "cheat": [124, 131, 145, 147], "cheatsheet": 147, "cheb": 30, "chebyshev_dist": 30, "check": [11, 13, 14, 15, 16, 17, 18, 19, 25, 35, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 68, 71, 74, 76, 80, 90, 92, 95, 101, 102, 103, 107, 111, 129, 132, 137, 141, 146, 148, 149, 150, 151, 152, 153, 156, 157, 162, 164, 166, 167, 170, 175, 177], "check_season": 74, "check_text_similar": 68, "checkbox": 24, "checkout": [146, 154], "checkpoint": 143, "chef": 153, "chelsea": 177, "cher": 39, "cherbourg": [171, 173], "cherrim": 143, "cherubi": 143, "chesnaught": 143, "chespin": 143, "chevrolet": 144, "chicken": [148, 149], "chikorita": 143, "child": [68, 101, 103, 171], "childmethod": 103, "children": 173, "chimchar": 143, "chimecho": 143, "china": [37, 53, 54, 57, 68], "chinchou": 143, "chines": 68, "ching": 39, "chingl": 143, "chip": 155, "chirag": 102, "chocol": 155, "choic": [45, 51, 80, 81, 130, 150, 164, 165, 166, 168, 169, 170, 171, 175], "choos": [1, 8, 71, 126, 132, 133, 147, 148, 149, 152, 153, 155, 164, 165, 170, 171, 173, 175, 176, 178], "choose_colorbrewer_palett": 164, "choose_cubehelix_palett": 164, "chose": [0, 24, 152, 154, 166], "chosen": [81, 153, 170, 177], "chp": 52, "chracter": 94, "chronometri": 175, "chunk": [74, 143, 149, 154, 164, 165, 171, 175], "chunksiz": 143, "chw": [149, 150], "ci": [146, 165, 167, 173, 174, 175], "ci_band": 175, "ci_bar": 175, "cinccino": 143, "cir": 101, "circl": [74, 82, 90, 95, 101, 123, 153], "circlemodelv0": 148, "circlemodelv1": 148, "circlemodelv2": 148, "circular": 148, "circum_of_circl": 90, "circumfer": [82, 90, 95], "circumst": [71, 171], "citi": [52, 55, 57, 68, 71, 90, 101, 122, 133, 136, 161, 170], "citizen": 36, "cividi": [164, 167, 170], "cividis_r": 167, "cl": [61, 106], "claim": 161, "clamperl": 143, "clarifi": [39, 71, 96, 162], "clariti": 154, "clark": [37, 74, 77, 94], "clasess": 15, "class": [9, 10, 14, 15, 16, 17, 18, 19, 24, 34, 35, 36, 40, 48, 49, 51, 60, 61, 62, 63, 69, 75, 76, 78, 79, 83, 85, 88, 89, 92, 93, 94, 96, 98, 104, 106, 125, 126, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 149, 151, 152, 153, 156, 157, 165, 169, 171, 172, 173, 175, 176, 177, 178], "class1": 103, "class2": 103, "class_1": 150, "class_2": 150, "class_dict": [150, 156, 157], "class_embed": 154, "class_idx": 150, "class_nam": [149, 150, 151, 152, 153, 154, 156, 157], "class_names_found": 150, "class_suit": 101, "class_to_idx": [150, 156, 157], "class_token": 154, "class_token_embedding_expand": 154, "class_token_embedding_singl": 154, "class_token_posit": 154, "classic": [150, 185], "classif": [0, 10, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 176, 184], "classifi": [0, 5, 10, 14, 15, 16, 17, 18, 19, 70, 148, 149, 150, 151, 152, 154, 155, 156, 157, 173], "classification_report": 148, "classifici": 148, "classinfo": 103, "classmethod": [59, 64], "classnam": [101, 150], "classon": 101, "classtwo": 101, "clauncher": 143, "claus": 122, "clawitz": 143, "claydol": 143, "clayton": 77, "clean": [0, 39, 68, 71, 78, 83, 89, 137, 138, 156, 184, 185], "clean_text": [39, 68], "cleaned_text": 39, "cleaner": [35, 128], "cleans": 175, "clear": [14, 15, 35, 56, 83, 106, 149, 153, 163, 173], "clearer": [72, 89, 163, 177], "clearli": [38, 146], "clefabl": 143, "clefairi": 143, "cleffa": 143, "clich": 39, "click": [24, 149, 155, 185], "client": 176, "clip": 154, "clipboard": 132, "cllose": 165, "clni": 30, "cloak": 143, "clock": [60, 61, 175], "clone": [152, 153, 154, 155], "close": [4, 36, 70, 71, 84, 98, 103, 132, 147, 148, 149, 150, 153, 154, 155, 163, 166, 169, 170, 172, 173, 174, 175, 176], "closer": [34, 93, 106, 147, 148, 150, 166], "closest": 155, "closest_centroids_id": 10, "closur": [22, 41], "closure_result": 36, "cloth": [5, 7, 17, 19, 149], "cloud": [146, 151, 154, 155, 175], "cloudi": 5, "cloyster": 143, "cls_name": 150, "club": [122, 177], "cluster": [0, 3, 148, 171, 172, 176, 178, 180, 184], "cluster_std": 148, "clustergrid": 179, "clustermap": 179, "cm": [10, 14, 25, 107, 111, 148], "cmap": [16, 17, 18, 19, 25, 107, 111, 148, 149, 164, 167, 170, 176, 178, 179], "cmap_cycl": 167, "cmath": 82, "cmd": [87, 153], "cmp": [53, 54, 55], "cmrmap": 167, "cmrmap_r": 167, "cn": 164, "cnn": [150, 151, 154, 156, 157], "cnt": 47, "co": [27, 32, 51, 80, 82, 96, 125, 128, 152, 155, 161, 177], "coat": [7, 17, 19, 149, 153], "cobalion": 143, "code": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 57, 59, 65, 68, 69, 71, 74, 75, 77, 78, 79, 80, 83, 84, 85, 88, 89, 90, 91, 94, 95, 101, 103, 106, 109, 125, 128, 146, 147, 148, 151, 152, 155, 156, 157, 158, 161, 162, 164, 165, 167, 168, 169, 170, 172, 173, 174, 175, 177, 182], "codeobject": 89, "coeffici": [27, 125, 163, 165, 176], "coefici": 27, "coerc": [51, 178], "coercion": 51, "coexist": 166, "cofagrigu": 143, "coffe": 173, "coin": 150, "col": [127, 132, 136, 139, 141, 143, 149, 163, 165, 167, 169, 171, 172, 174, 175, 177], "col1": [132, 133, 134, 136, 137, 140], "col2": [132, 133, 134, 136, 137, 140], "col3": 132, "col_clust": 179, "col_fil": 142, "col_l": 169, "col_label": [132, 134, 136], "col_label1": 141, "col_label2": 141, "col_level": 142, "col_nam": [136, 152, 153, 154, 155, 174], "col_ord": [165, 174, 177], "col_posit": 132, "col_r1": 127, "col_r2": 127, "col_var": 174, "col_width": [152, 153, 154, 155], "col_wrap": [165, 167, 174, 177], "colab": [23, 24, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 185], "cold": [25, 52, 107, 111], "coldest_th": 38, "collabor": 0, "collect": [0, 7, 24, 34, 47, 48, 55, 56, 66, 69, 70, 80, 92, 96, 102, 130, 140, 148, 150, 152, 154, 169, 170, 177], "collector": 68, "colleg": 101, "collid": [83, 96], "colon": [43, 52, 53, 54, 55, 70, 74], "color": [3, 7, 11, 25, 47, 55, 80, 101, 102, 107, 111, 122, 123, 149, 150, 154, 156, 157, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180], "color_channel": [146, 149, 150, 152, 153, 154, 156, 157], "color_cod": [167, 177], "color_map": [16, 17, 18, 19], "color_palett": [164, 173], "colorbrew": 164, "colormap": [164, 173, 179], "colour": [146, 148, 149, 152, 153, 154, 155, 176, 178], "colour_channel": 146, "column": [8, 12, 14, 15, 16, 17, 18, 19, 31, 47, 57, 68, 122, 125, 126, 127, 128, 129, 143, 146, 149, 152, 154, 155, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179], "column_1": 177, "column_2": 177, "column_current_nam": 139, "column_label": [132, 140], "column_nam": 132, "column_on": 132, "column_posit": 132, "com": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 40, 74, 77, 90, 97, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157], "comb": 80, "combe": 143, "combin": [4, 8, 10, 11, 13, 14, 52, 53, 54, 71, 88, 90, 95, 103, 126, 134, 141, 146, 147, 148, 149, 152, 153, 155, 168, 169, 172, 174, 175, 177], "combusken": 143, "come": [24, 35, 38, 48, 49, 51, 52, 57, 71, 74, 85, 87, 96, 104, 106, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 162, 165, 166, 168, 170, 172, 173, 175, 176, 177], "comfort": [37, 57, 174], "comic": 122, "comma": [52, 53, 54, 55, 56, 74, 92, 146, 152, 154], "command": [6, 24, 48, 71, 79, 80, 84, 98, 102, 109, 125, 146, 151, 153, 155, 157, 162, 165, 182], "commenc": [174, 177], "comment": [22, 38, 74, 90, 100, 125, 146, 147, 150], "commentari": 147, "commerc": 24, "commerci": 22, "commiss": 175, "commit": 155, "common": [1, 7, 8, 28, 37, 53, 56, 59, 64, 68, 70, 80, 101, 102, 106, 127, 132, 134, 147, 148, 149, 150, 151, 152, 154, 155, 162, 164, 165, 169, 171, 173, 175, 176, 177], "commonli": [0, 28, 29, 39, 52, 53, 55, 56, 59, 65, 103, 149, 164, 165, 166, 167, 168, 173, 175], "commonmark": [20, 108, 112], "commun": [146, 154, 155], "commut": [28, 29], "comonli": 177, "compact": 57, "compani": [52, 53, 55, 77, 103, 123, 132, 133, 146, 151, 152, 154], "companion": [176, 177], "company_grp": 144, "company_info": 103, "company_nam": 103, "company_sales_data": 123, "compar": [0, 10, 22, 35, 44, 51, 52, 53, 54, 55, 56, 90, 95, 98, 104, 147, 148, 152, 153, 154, 162, 163, 166, 168, 169, 172, 173], "compare_result": 149, "comparis": [163, 166], "comparison": [52, 89, 122, 133, 136, 147, 149, 153, 155, 171, 173, 176], "comparit": 169, "compat": [38, 93, 104, 106, 128, 133, 146, 150, 151, 154, 155, 172], "compatible_format": 84, "compens": [152, 170], "compet": [133, 174], "competit": 163, "compil": [22, 24, 37, 39, 89, 100, 150, 167, 175], "complain": 106, "complement": [39, 95, 162, 170], "complementari": 82, "complet": [47, 48, 49, 52, 54, 56, 68, 80, 81, 84, 96, 103, 123, 129, 144, 150, 153, 155, 169, 173, 175], "complex": [0, 7, 18, 19, 24, 47, 48, 51, 78, 82, 89, 91, 92, 95, 102, 103, 115, 122, 123, 132, 133, 143, 144, 149, 163, 165, 176], "complex128": 129, "complex_number1": 91, "complex_number2": 91, "complexnumb": 102, "compli": 98, "complic": [102, 132, 149, 150, 162, 164], "complier": 98, "compon": [11, 12, 13, 14, 15, 16, 17, 31, 32, 74, 101, 148, 154, 155, 164, 165, 174, 175, 177], "compos": [53, 150, 151, 152, 153, 154, 155, 156, 157], "composit": 150, "composur": 122, "compound": [24, 53, 95], "comprehend": [171, 176], "comprehens": [34, 35, 47, 155, 166], "compress": [149, 150, 151, 154, 155, 156, 157], "compris": [150, 154, 166], "comput": [0, 1, 18, 19, 24, 31, 46, 51, 52, 56, 57, 66, 68, 71, 83, 87, 89, 95, 98, 101, 103, 125, 128, 143, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 160, 163, 166, 169, 170, 171, 172, 173, 175, 177], "computation": [146, 149, 165], "con": [146, 150, 153, 155], "concat": [80, 132, 143, 144, 154, 167, 171, 176, 177], "concaten": [53, 54, 57, 80, 94, 101, 104, 125, 132, 146, 149, 154, 171], "conceal": 164, "concentr": 169, "concept": [22, 23, 26, 72, 89, 96, 103, 105, 125, 148, 151, 154, 155, 164, 165, 166, 168, 171, 173, 175, 176, 177, 184], "conceptu": [83, 171, 172, 174, 185], "concern": [154, 155, 163, 171], "concis": [7, 35, 53, 55, 57, 72, 79, 127, 128, 154], "conclud": [36, 173, 175, 177], "conclus": [106, 152, 154], "concret": [154, 175], "concurr": 66, "conda": [24, 125], "condens": [151, 154, 156, 157], "condit": [31, 34, 35, 37, 43, 44, 45, 46, 47, 48, 49, 55, 56, 68, 70, 78, 79, 89, 93, 95, 127, 136, 138, 175, 176, 177], "condition_inn": 46, "conditon_out": 46, "conduct": [5, 14, 15, 16, 17, 98, 154], "conf_mat": 149, "confid": [152, 153, 155, 165, 167, 169, 171, 172, 173, 175], "config": 76, "configur": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "confin": 143, "confirm": [87, 148], "confis": 149, "conflict": 132, "confmat": 149, "confmat_tensor": 149, "confus": [35, 46, 83, 90, 106, 146, 148, 155, 163, 164, 170, 171, 173, 176], "confusionmatrix": [148, 149], "congratul": [72, 87, 115, 154], "conjuct": 175, "conjunct": [52, 94], "conkeldurr": 143, "connect": [7, 71, 146, 150, 152, 154, 155, 170, 171, 173, 175, 185], "connection_object": 132, "connectionist": [7, 18, 19], "consequ": 0, "consid": [4, 7, 12, 18, 19, 27, 42, 48, 52, 53, 55, 56, 60, 61, 71, 77, 83, 98, 104, 106, 128, 129, 133, 137, 138, 147, 148, 149, 150, 151, 153, 154, 155, 163, 169, 171, 174, 176, 177], "consider": [10, 14, 24, 57, 150, 153, 155, 165, 171, 175, 184], "consist": [4, 7, 9, 10, 14, 16, 17, 18, 19, 31, 53, 55, 70, 84, 85, 89, 103, 127, 148, 149, 152, 153, 154, 165, 173, 178], "consol": [24, 94, 132], "constant": [4, 5, 22, 29, 39, 82, 91, 100, 126, 128, 154, 174, 175], "constantli": [174, 176], "constitut": [7, 18, 19], "constraint": [38, 149, 155], "construct": [37, 38, 44, 49, 71, 78, 83, 84, 87, 101, 126, 127, 132, 147, 148, 154, 155], "constructor": [59, 72, 84, 103, 148], "consum": 175, "consumpt": 155, "contain": [7, 9, 14, 15, 34, 35, 37, 45, 47, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 65, 68, 69, 71, 79, 80, 83, 84, 90, 91, 93, 94, 96, 101, 102, 123, 129, 132, 133, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 172, 173, 175, 178, 185], "contend": 155, "content": [6, 20, 24, 39, 68, 69, 71, 80, 108, 109, 112, 132, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 182], "contest": 24, "context": [52, 76, 104, 147, 149, 150, 151, 152, 156, 157, 162], "contextmanag": 89, "contigu": [52, 171], "continu": [1, 8, 22, 35, 42, 50, 71, 88, 89, 102, 103, 146, 148, 152, 153, 154, 155, 156, 166, 170, 173, 174, 177], "contour": [8, 14, 15, 164, 166, 167], "contrast": [0, 127, 154], "contrastingli": 0, "contribut": [4, 5, 154, 173, 184], "control": [7, 24, 35, 43, 44, 51, 52, 89, 101, 104, 106, 154, 161, 163, 164, 166, 170, 171, 172, 173, 175, 177, 180], "conttinu": 167, "conv": [149, 150], "conv1d": 149, "conv2d": [150, 151, 152, 156, 157], "conv2dnormactiv": 152, "conv3d": 149, "conv_block_1": [150, 151, 156, 157], "conv_block_2": [150, 151, 156, 157], "conv_lay": 149, "conv_layer_2": 149, "convei": [173, 175], "conveni": [4, 5, 28, 29, 125, 154, 163, 165, 166, 169, 172], "convent": [39, 84, 102, 106, 136, 139, 147, 175], "convention": 102, "converg": [3, 4, 28, 29, 150, 165], "convers": [22, 52, 89, 100, 164, 169, 172], "convert": [6, 7, 16, 17, 18, 19, 31, 38, 51, 52, 53, 56, 57, 59, 60, 61, 64, 68, 70, 74, 82, 91, 93, 94, 95, 98, 109, 125, 126, 129, 132, 133, 134, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 169, 173, 182], "convert_celsius_2_fahrenheit": 74, "convert_dictionary_to_python_object": 102, "convient": 132, "convini": [126, 129], "convnet": [129, 149], "convnext": 152, "convnext_smal": [152, 153], "convnext_tini": [152, 153], "convolu": 154, "convolut": [152, 154, 184], "convolv": 149, "cook": [94, 150, 153], "cool": [129, 153, 154, 155, 164, 167], "cool_r": 167, "cooler": 35, "coolwarm": [25, 107, 111, 167, 168, 171, 172, 173, 176], "coolwarm_r": 167, "coordin": 104, "cope": 71, "copi": [24, 52, 56, 69, 80, 101, 128, 129, 132, 136, 137, 138, 139, 141, 142, 146, 147, 149, 150, 154, 155, 170], "copper": [167, 173], "copper_r": 167, "copy2": 155, "copyreg": 84, "copyright": 24, "copysign": [80, 82, 130], "core": [18, 19, 102, 125, 130, 132, 136, 139, 140, 141, 149, 150, 154, 155, 156, 165, 172, 177], "coremltool": 155, "corg": 53, "cori": [47, 52, 74, 77], "cornel": 172, "corner": 127, "corphish": 143, "corr": [132, 178], "corr_func": 176, "corrcoef": 125, "corrctli": [16, 17], "correct": [5, 7, 14, 15, 16, 17, 18, 19, 44, 48, 53, 70, 77, 80, 87, 98, 129, 133, 134, 148, 149, 153, 154, 155, 163, 165, 171, 177], "correctli": [0, 4, 14, 15, 16, 17, 18, 19, 47, 72, 148, 149, 153, 154, 155, 176], "correl": [0, 125, 132, 163, 166, 167, 169, 174, 176, 177, 179], "correspond": [0, 7, 11, 31, 32, 55, 65, 70, 72, 80, 90, 96, 98, 102, 106, 127, 166, 169, 172, 173, 174, 175, 177], "corrupt": [11, 13], "corsola": 143, "cosh": [80, 82], "cosin": [27, 80, 82, 125, 154], "cosine_dist": 30, "coss": 30, "cost": [11, 12, 13, 14, 15, 16, 17, 18, 19, 146, 148, 149, 152, 153, 154, 155], "cost_histori": [11, 12, 13], "cottone": 143, "couch": 150, "could": [7, 8, 24, 34, 49, 52, 68, 71, 83, 85, 96, 101, 102, 106, 128, 129, 136, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 163, 164, 169, 170, 172, 173, 175], "couldn": [106, 146, 150, 152, 153, 154, 155, 167], "count": [7, 8, 39, 47, 48, 49, 52, 54, 68, 74, 88, 101, 102, 106, 122, 132, 143, 146, 150, 154, 155, 161, 166, 169, 172, 175, 177, 180], "counter": [47, 48, 102], "counterintuit": 35, "counterpart": [35, 52, 82, 146], "counti": 70, "countplot": [169, 172, 173], "countri": [4, 9, 11, 13, 37, 40, 45, 47, 52, 53, 54, 55, 57, 68, 70, 71, 74, 90, 101, 122, 166, 175], "countries_data": 68, "countries_details_data": 37, "countries_to_look_at": 122, "country_lst_on": 71, "country_lst_two": 71, "coupl": [4, 5, 68, 148, 149, 150, 153, 154, 155, 164, 170, 171, 172, 173], "cours": [23, 24, 52, 74, 80, 88, 95, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 161, 163, 165, 166, 167, 169, 170, 171, 173, 175], "course_nam": 74, "coursera": [1, 3, 4, 5, 7, 9], "cous": [11, 12, 13], "cov": [165, 176], "covari": 165, "cover": [36, 37, 39, 68, 70, 132, 133, 134, 138, 139, 141, 161, 163, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 177, 184], "coverd": 148, "coverg": 165, "covert": 98, "cow": 154, "cp1252": 68, "cplai": 24, "cpu": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "cpu_count": [150, 151, 155, 157], "cradili": 143, "craft": [152, 153, 155, 169], "cram": 176, "cramer": 31, "cranido": 143, "crash": [71, 155], "crawdaunt": 143, "crazi": [146, 154], "creat": [0, 8, 11, 17, 19, 22, 24, 25, 34, 36, 37, 38, 39, 47, 48, 51, 59, 61, 62, 63, 64, 68, 69, 70, 71, 74, 75, 76, 78, 84, 85, 87, 88, 90, 91, 92, 96, 98, 101, 103, 104, 106, 107, 111, 125, 127, 128, 129, 135, 136, 137, 138, 139, 140, 141, 144, 159, 162, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185], "create_dataload": [151, 152, 153, 154, 155, 157], "create_effnetb0": 153, "create_effnetb2": 153, "create_effnetb2_model": 155, "create_vit_model": 155, "create_writ": 153, "creation": [68, 126, 148, 150, 151, 154, 155, 184], "creativ": [148, 153], "creator": [106, 150], "credit": [24, 148, 162], "cresselia": 143, "cript": 68, "cristiano": 122, "criteria": [0, 36, 37, 155], "criterion": [148, 149, 154], "critic": [71, 175, 176], "croagunk": 143, "crobat": 143, "croconaw": 143, "crop": 150, "crop_siz": [152, 153, 154, 155], "cross": [7, 78, 147, 148, 175, 177], "crossentropi": 148, "crossentropyloss": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "crustl": 143, "cryogon": 143, "css": [52, 53, 101], "css4": 164, "csv": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 122, 123, 133, 140, 141, 142, 143, 153, 161, 166, 172, 173, 175, 177], "csv_exampl": 68, "csv_reader": 68, "ctitl": 30, "ctrl": [24, 48, 70], "cu102": 154, "cu113": [147, 150, 152, 153, 155], "cu116": 146, "cu118": [149, 154], "cubchoo": 143, "cube": [36, 48, 57, 77, 79, 94], "cubehelix": 167, "cubehelix_palett": 164, "cubehelix_r": 167, "cubic": 4, "cubon": 143, "cuda": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "cum": [52, 56], "cumbersom": 165, "cumsum": [125, 130], "cumul": [0, 125], "cup": 173, "curat": [0, 154, 165, 185], "curiou": [154, 165], "curious": 177, "curli": [39, 52, 55, 56, 94], "current": [0, 3, 4, 5, 11, 12, 13, 18, 19, 22, 36, 47, 48, 49, 60, 64, 65, 66, 67, 68, 71, 76, 80, 81, 84, 87, 96, 101, 102, 103, 141, 142, 147, 148, 149, 150, 152, 153, 154, 155, 163, 164, 165, 167, 169, 177], "current_datetime_hostnam": 153, "current_examples_indic": 10, "current_file_nam": 69, "current_palett": 164, "current_salari": 90, "current_tim": 63, "current_year": [74, 77], "current_year_2021": 90, "curri": [57, 101], "curriculum": [147, 149, 155], "cursor": 68, "curtain": 177, "curv": [11, 12, 13, 14, 15, 16, 17, 147, 153, 166, 172], "custom": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 80, 84, 133, 147, 148, 149, 151, 155, 156, 162, 163, 164, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177], "custom_imag": 150, "custom_image_path": [150, 152, 153, 154], "custom_image_pr": 150, "custom_image_pred_class": 150, "custom_image_pred_label": 150, "custom_image_pred_prob": 150, "custom_image_transform": 150, "custom_image_transformed_with_batch_s": 150, "custom_image_uint8": 150, "custom_lin": [25, 107, 111], "customerror": 72, "customis": [152, 153], "customiz": [152, 155, 162, 175, 177], "cut": [9, 16, 17, 18, 19, 52, 148, 171, 172, 174], "cyan": 164, "cycl": [164, 167], "cycler": [25, 107, 111], "cylind": [132, 133, 144], "cyndaquil": 143, "cython": 170, "d": [0, 3, 30, 45, 47, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 68, 71, 74, 90, 91, 92, 94, 102, 103, 104, 123, 126, 129, 132, 137, 138, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 166, 170, 172, 176, 178], "d1": [62, 103], "d2": 62, "d3": 62, "d4": 62, "d75c9779269a": 72, "d_model": 154, "da": [30, 173], "daaaat": 39, "daaat": 39, "daat": 39, "dad": [150, 152, 153, 154, 155], "dai": [23, 39, 51, 52, 60, 61, 62, 63, 64, 65, 74, 76, 146, 152, 153, 154, 155, 162, 164, 165, 168, 169, 170, 171, 172, 173, 174, 175, 177], "daili": 165, "danc": [101, 154], "daniel": [146, 147], "dark": [143, 149, 162, 164, 167, 173], "dark2": 167, "dark2_r": 167, "darkgrid": [162, 169, 171, 172, 175], "darkrai": 143, "darmanitanstandard": 143, "darmanitanzen": 143, "darumaka": 143, "dash": 168, "dashboard": [169, 170], "dat": [39, 69], "data": [0, 4, 5, 7, 9, 24, 25, 34, 35, 36, 37, 39, 40, 47, 48, 52, 53, 54, 55, 56, 61, 68, 69, 71, 74, 77, 80, 84, 90, 91, 93, 94, 95, 98, 101, 103, 107, 111, 115, 125, 127, 128, 135, 136, 137, 138, 139, 140, 142, 145, 159, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 185], "data1": [53, 132, 166], "data2": 166, "data_1": [68, 69], "data_10_perc": 153, "data_10_percent_path": 153, "data_20_perc": 153, "data_20_percent_path": [153, 155], "data_analysi": 173, "data_dir": 155, "data_fold": 150, "data_folder_1": 157, "data_folder_2": 157, "data_load": [149, 150], "data_path": [150, 151, 152, 153, 156, 157], "data_point": 168, "data_setup": [152, 153, 154, 155, 156, 157, 159], "data_str": 61, "data_transform": [150, 151, 156, 157], "data_typ": 133, "databas": [64, 68, 132, 155], "datafam": 134, "datafram": [11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 122, 126, 143, 144, 145, 148, 149, 150, 153, 155, 161, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "dataload": 147, "dataloader_nam": 153, "datalod": 153, "datapoint": [150, 156, 157, 163, 164, 169, 172, 174, 175, 177], "datasci": [52, 75, 95], "dataseri": 132, "dataset": [0, 8, 10, 11, 12, 13, 15, 122, 129, 132, 135, 136, 137, 138, 139, 140, 142, 143, 147, 148, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180], "datatyp": [22, 52, 54, 82, 92, 93, 100, 132, 133, 147, 150, 152, 177], "date": [11, 61, 63, 132, 152, 153, 161, 165, 167, 175, 177], "date_object": [59, 61], "date_rang": 132, "date_str": [59, 61], "date_tim": 60, "date_time1": 60, "date_time2": 60, "dateclass": 59, "datetim": [22, 62, 67, 80, 132, 153], "datetime64": 130, "datetime_capi": 59, "datetime_london": [59, 63], "datetime_ni": [59, 63], "datetime_object": 59, "datetimeindex": 132, "daughter": 101, "dave": 97, "david": [77, 94], "db": 30, "dct": 71, "dd": [59, 61, 62, 153], "dd6f749658a4": 38, "ddot": 31, "de": [27, 39, 122], "deal": [26, 38, 49, 51, 52, 68, 93, 129, 132, 146, 147, 148, 149, 154, 155, 161, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177], "dealt": [161, 165, 169], "debat": [149, 151, 155], "debug": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 70, 78, 85, 89, 155], "dec": [24, 37, 60, 61, 65, 87], "decai": [150, 154], "decemb": [45, 64], "decend": 143, "decent": [169, 172, 173], "decept": 171, "decid": [0, 4, 5, 8, 11, 13, 38, 42, 55, 139, 146, 148, 150, 155, 165, 166, 171, 172, 173, 175, 177], "decim": [38, 52, 60, 61, 84, 90, 91, 92, 94, 95, 126, 153, 155], "decis": [0, 9, 46, 148, 153], "deck": [171, 173, 177], "declar": [36, 37, 48, 52, 53, 68, 70, 72, 74, 75, 76, 80, 92, 95, 96, 101, 102, 106, 126, 165, 173, 175, 176, 177], "decod": [52, 70], "decompos": [27, 85], "decomposit": [26, 128], "decor": [22, 36, 41, 106, 175, 177], "decorator_with_paramet": 37, "decreas": [7, 11, 12, 13, 14, 15, 16, 17, 48, 78, 150, 161, 164, 166, 171], "decrement": 104, "dedenn": 143, "dedic": [2, 151, 157, 159, 177], "deduc": [165, 172], "deep": [7, 26, 49, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 164, 184], "deepak": [69, 80], "deeper": [59, 147, 148, 154, 161, 165, 167, 172, 174, 175, 177], "deepli": [49, 165], "deerl": 143, "def": [30, 34, 35, 36, 37, 38, 40, 44, 45, 46, 49, 57, 66, 71, 72, 74, 75, 76, 77, 78, 79, 80, 84, 85, 88, 89, 91, 94, 96, 101, 102, 103, 104, 106, 139, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 165, 167, 169, 170, 176, 177], "default": [6, 8, 10, 16, 17, 18, 19, 36, 59, 76, 78, 82, 84, 87, 94, 102, 103, 109, 122, 125, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 162, 164, 165, 167, 168, 171, 172, 174, 175, 177, 178, 182], "default_ord": 52, "default_tim": [149, 150, 152, 155, 156, 157], "default_valu": 132, "defect": 149, "defens": 143, "defer": 141, "defin": [0, 4, 5, 6, 18, 19, 22, 27, 31, 34, 35, 37, 38, 39, 40, 47, 48, 51, 52, 53, 54, 55, 57, 59, 65, 70, 71, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 94, 96, 101, 103, 104, 109, 129, 132, 136, 140, 147, 148, 149, 150, 152, 153, 154, 155, 162, 163, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182], "definit": [24, 32, 37, 47, 74, 77, 79, 80, 84, 89, 94, 101, 102, 103, 106, 154], "defint": [148, 154, 155], "deflat": 155, "degrad": [106, 152, 153], "degre": [4, 11, 12, 13, 14, 15, 16, 17, 38, 80, 82], "dei": 154, "deino": 143, "del": [36, 52, 53, 54, 55, 88, 102], "delai": [65, 66, 155, 163, 169], "delattr": 102, "delcatti": 143, "deleg": 103, "delelop": 24, "delet": [36, 38, 55, 56, 69, 70, 89, 125, 132, 138, 141, 150], "deliber": 70, "delibird": 143, "delici": 155, "delimit": [68, 129, 132, 143], "deliv": 146, "delphox": 143, "delta": 154, "delv": [0, 162, 163, 166, 167], "demand": [35, 162], "demo": [2, 8, 9, 150, 154, 167], "demonstr": [34, 53, 89, 103, 134, 147, 151, 154, 157, 166, 169, 176, 177], "den": 30, "deni": 45, "denim": [164, 170], "denmark": [11, 13, 37, 53, 71, 166], "denomin": 51, "denot": [28, 29, 38, 40, 52, 77, 78, 92, 101, 146], "dens": 154, "densii": 172, "densiti": [8, 163, 164, 166, 167, 168, 170, 172, 175], "deoxysattack": 143, "deoxysdefens": 143, "deoxysnorm": 143, "deoxysspe": 143, "depart": [102, 175], "depat": 102, "depend": [0, 4, 5, 24, 27, 36, 42, 49, 68, 72, 80, 81, 104, 108, 112, 125, 132, 147, 148, 149, 150, 151, 152, 153, 155, 157, 161, 163, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177], "depict": [164, 169, 171, 175], "deploi": [146, 153, 154], "deploy": [154, 160, 184], "deprec": [140, 144, 146, 152, 153, 163, 168, 170], "deprecation_addendum": 170, "depth": [78, 90, 103, 150, 153, 161, 165, 166, 169], "deriv": [4, 5, 7, 71, 72, 101, 103, 106, 175], "derived1": 103, "derived2": 103, "derivedclass": [101, 103], "desc": 149, "descend": [68, 74, 132], "descent": [7, 18, 19, 147, 148, 149, 150, 154, 185], "describ": [4, 5, 7, 14, 15, 16, 17, 31, 74, 77, 80, 89, 95, 101, 132, 146, 147, 148, 149, 154, 155, 161, 166, 171, 173, 174, 175, 176, 177], "descript": [49, 52, 53, 54, 55, 56, 68, 74, 80, 81, 82, 84, 101, 102, 125, 132, 139, 146, 153, 154, 155, 161, 171, 175], "descriptor": [68, 84], "deseri": 147, "deserv": 172, "desgin": 91, "design": [24, 37, 132, 148, 153, 154, 155, 165, 173, 174, 185], "desir": [37, 49, 53, 129, 146, 149, 150, 154, 155, 177, 184], "desk": 24, "desktop": [24, 69], "despin": [162, 172, 173, 174, 176, 177], "despit": [150, 154, 155], "destin": [153, 154, 155], "destroi": [35, 75, 102], "destruct": 102, "destructur": 71, "det": [31, 128], "detach": [68, 147, 154], "detail": [0, 6, 35, 38, 65, 70, 77, 89, 94, 101, 102, 103, 109, 127, 132, 134, 136, 141, 142, 146, 153, 154, 155, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 177, 181, 182], "detect": [0, 2, 4, 5, 18, 19, 70, 127, 149, 155, 164, 184], "determin": [0, 52, 56, 137, 138, 142, 165, 166, 167, 169, 171, 173, 175, 176, 177], "determinist": 81, "dev": [151, 153], "dev20220620": [152, 153], "dev20220824": 155, "devcon": 146, "develop": [10, 14, 22, 24, 39, 45, 72, 83, 90, 98, 101, 106, 116, 146, 151, 152, 153, 155], "deviat": [1, 8, 74, 101, 125, 129, 132, 152, 154, 171, 173], "devic": [94, 98, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157], "device_count": 146, "devop": 155, "dewgong": 143, "dewott": 143, "df": [122, 123, 132, 136, 139, 140, 141, 142, 143, 144, 155, 161, 163, 165, 167, 170, 172, 175, 177, 178], "df1": [132, 166], "df2": [132, 166], "df6ce7ede1dc": 70, "df_xlsx": 143, "dfca0b041b3d": 72, "dhl": 52, "di": [39, 47], "diag": [130, 176], "diag_ax": 176, "diag_indic": 176, "diag_kind": [167, 176], "diag_kw": 167, "diag_sharei": 176, "diagnol": 148, "diagon": [31, 149, 167, 176], "diagram": [96, 135, 139, 142, 154, 168], "dialga": 143, "dialogu": 47, "diamet": 82, "dianci": 143, "dianciemega": 143, "dichotom": [5, 14, 15, 16, 17], "dict": [24, 40, 56, 68, 71, 74, 80, 91, 92, 93, 102, 122, 134, 135, 136, 137, 138, 139, 141, 142, 144, 147, 149, 150, 151, 153, 155, 156, 157, 163, 172, 177, 179], "dict1": [47, 55], "dict2": 47, "dict_1": 102, "dict_item": 55, "dict_kei": [55, 150], "dict_valu": 55, "dictat": 146, "dictionair": 155, "dictionari": [22, 24, 37, 38, 40, 45, 52, 53, 54, 56, 57, 58, 70, 74, 84, 89, 91, 93, 95, 102, 132, 134, 139, 144, 147, 149, 150, 151, 153, 154, 155, 156, 157, 162, 164, 177], "dictionaryliter": 89, "did": [35, 37, 43, 70, 71, 75, 94, 95, 101, 103, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 175], "didn": [52, 101, 104, 146, 148, 149, 150, 155, 162, 171, 172, 177], "die": 177, "diet": [174, 175], "diff": [11, 13, 63], "differ": [7, 8, 11, 18, 19, 36, 37, 39, 40, 42, 47, 48, 49, 51, 52, 53, 54, 55, 60, 64, 65, 66, 68, 69, 70, 71, 74, 75, 77, 79, 80, 83, 85, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 108, 112, 127, 128, 132, 133, 134, 137, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185], "difference_upd": 56, "differenti": 88, "differnt": 152, "difficult": [98, 162, 169, 170, 171, 172, 173], "difficulti": 146, "dig": [59, 146, 175, 177], "diggersbi": 143, "digit": [5, 7, 16, 17, 18, 19, 28, 29, 47, 52, 61, 80, 84, 88, 90, 95, 101, 129, 149, 175], "digit_label": [16, 17, 18, 19], "digit_pixel": [16, 17, 18, 19], "diglett": 143, "dilat": [149, 150, 156, 157], "dim": [146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157], "dim0": 146, "dim1": 146, "dim_feedforward": 154, "dimenion": 146, "dimens": [125, 126, 127, 128, 132, 146, 147, 148, 149, 150, 152, 154, 155, 165, 176, 177], "dimension": [0, 3, 26, 47, 57, 125, 126, 132, 134, 146, 149, 150, 152, 154, 165, 176, 177, 184], "dinner": [74, 165, 168, 169, 170, 171, 172, 173, 177], "dir": [39, 59, 70, 152, 153], "dir_nam": 69, "dir_path": 150, "dir_with_log": 153, "direct": [4, 5, 6, 9, 17, 19, 20, 32, 39, 48, 52, 57, 59, 60, 61, 65, 79, 101, 109, 146, 152, 154, 173, 182], "directli": [24, 35, 53, 72, 74, 80, 83, 96, 98, 101, 102, 128, 148, 150, 151, 154, 155, 157, 162, 168, 174, 175, 185], "directori": [22, 68, 70, 73, 80, 83, 94, 147, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159], "directory_nam": 80, "dirichlet": 175, "dirnam": 150, "dirpath": 150, "disadvantag": [98, 147, 172], "disagre": 51, "discard": 56, "discern": 150, "disclosur": 177, "disconnect": 71, "discontinu": 27, "discourag": 106, "discours": 177, "discov": [0, 146, 147, 148], "discoverd": 147, "discret": [164, 165, 172, 173, 175, 177], "discrimin": [10, 14], "discuss": [39, 44, 51, 52, 54, 80, 85, 89, 94, 103, 132, 133, 134, 135, 136, 141, 142, 148, 150, 151, 152, 154, 155, 156, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185], "diseas": 148, "disengag": 175, "disjoint": 56, "disk": [68, 98, 147, 149], "disp": 146, "dispar": 175, "dispers": [161, 171], "displai": [1, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 45, 46, 47, 48, 49, 52, 59, 69, 71, 72, 84, 87, 91, 95, 98, 102, 103, 109, 122, 129, 135, 155, 162, 164, 166, 169, 170, 171, 172, 173, 175, 176, 177, 178, 182], "display_random_imag": 150, "display_shap": 150, "displaystyl": [27, 30], "displot": 168, "dispos": 175, "dispsid": 103, "disregard": [49, 149], "disrupt": 71, "dissimilarity__util": 30, "dist": [80, 149, 180], "distac": 47, "distanc": [39, 47, 95, 106, 171, 172], "distinct": [0, 127, 175], "distinguish": [7, 10, 14, 15, 18, 19, 56, 68, 106, 164], "distort": 175, "distplot": [163, 176], "distribut": [15, 22, 81, 101, 122, 125, 126, 129, 152, 153, 154, 161, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177], "distriut": 171, "ditribut": 166, "ditto": 143, "div0ssutgadkwstr": 80, "dive": [147, 161, 165, 171, 173, 174, 177], "diverg": 164, "divers": [150, 155], "divid": [37, 42, 48, 53, 59, 70, 80, 82, 83, 85, 90, 94, 95, 125, 128, 130, 132, 133, 136, 148, 149, 150, 155, 169, 171, 173, 174, 175], "dividend": 77, "divis": [31, 32, 37, 42, 48, 49, 57, 70, 71, 74, 90, 95, 104, 125, 128, 146, 154, 155], "divisbl": 154, "divisor": 77, "django": [24, 52], "dll": 80, "do": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 34, 35, 38, 39, 42, 43, 44, 47, 48, 49, 52, 53, 54, 56, 57, 63, 70, 71, 72, 74, 77, 80, 81, 82, 84, 85, 89, 90, 92, 94, 95, 96, 98, 101, 102, 103, 104, 106, 107, 108, 111, 112, 115, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185], "do_someth": 77, "doc": [38, 74, 84, 128, 147, 149], "docstr": [22, 52, 86, 102, 151, 156, 157], "doctor": 39, "document": [6, 25, 68, 69, 74, 84, 89, 101, 102, 107, 109, 111, 112, 126, 127, 128, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 165, 171, 181, 182], "dodg": [144, 169, 170, 171, 172, 173, 174, 175], "dodrio": 143, "doduo": 143, "doe": [4, 11, 13, 35, 37, 38, 39, 43, 47, 48, 49, 52, 53, 54, 56, 57, 61, 68, 70, 71, 74, 75, 77, 80, 82, 84, 89, 90, 92, 94, 95, 96, 98, 101, 102, 103, 104, 126, 128, 132, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 152, 153, 154, 155, 164, 165, 167, 169, 170, 172, 177], "does_exist": 53, "doesn": [10, 38, 45, 47, 48, 49, 52, 54, 55, 61, 80, 93, 102, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 170, 172, 173, 177], "dog": [54, 103, 148, 149, 152, 154, 155], "dohc": [132, 133, 144], "dollar": [25, 107, 111, 122, 123, 153], "domain": [0, 24, 148, 150, 152, 163, 165, 170, 173, 175, 177], "dominantli": 165, "don": [7, 10, 38, 48, 49, 53, 57, 68, 74, 76, 80, 83, 90, 101, 103, 106, 132, 139, 141, 142, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 166, 168, 170, 171, 172, 173, 175, 176, 177], "donald": 68, "done": [24, 31, 32, 35, 37, 38, 43, 44, 47, 48, 49, 52, 57, 68, 83, 87, 93, 94, 98, 103, 106, 133, 137, 140, 146, 147, 148, 149, 150, 153, 154, 155, 159, 162, 163, 164, 167, 169, 170, 172, 173, 174, 175, 176, 177], "dong": [4, 5], "donphan": 143, "door": [0, 102], "dot": [23, 26, 28, 31, 80, 83, 101, 102, 122, 123, 125, 128, 146, 147, 148, 150, 155, 166, 169, 170, 171, 172, 173, 175, 185], "doubl": [40, 52, 74, 79, 89, 91, 92, 95, 101, 102, 103, 104, 146, 152, 153, 154, 155, 162], "doublad": 143, "doubt": [149, 166, 169, 170, 171], "down": [4, 5, 38, 49, 78, 80, 95, 147, 148, 149, 150, 153, 154, 155, 156, 161, 162, 164, 166, 176, 177], "download": [24, 80, 122, 123, 129, 148, 149, 150, 151, 152, 154, 156, 157, 159], "download_data": [153, 154, 155], "downsid": [150, 173], "downtown": 55, "dozen": [149, 153], "dpi": [122, 123], "dr": [68, 80, 101], "draft": [172, 173, 174, 175, 176, 177], "drag": 169, "dragalg": 143, "dragon": 143, "dragonair": 143, "dragonit": 143, "dramat": [146, 155], "drapion": 143, "dratini": 143, "draw": [8, 16, 17, 146, 148, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 177], "draw_fram": 173, "draw_stripplot": 170, "drawn": [106, 167, 170, 171, 175, 177], "dress": [7, 17, 19, 149], "drifblim": 143, "drifloon": 143, "drilbur": 143, "drill": [164, 165], "drink": 91, "drive": [0, 44, 146, 152, 154, 185], "driver": [77, 146, 155, 175], "drop": [9, 11, 13, 16, 17, 18, 19, 35, 141, 142, 143, 164, 165, 177], "drop_dupl": [138, 142], "drope": 136, "dropna": [132, 142, 163, 165, 167, 176, 177], "dropoff_datetim": 175, "dropoff_latitud": 175, "dropoff_longitud": 175, "dropout": [150, 152, 153, 154, 155], "dropout1": 154, "dropout2": 154, "drowze": 143, "druddigon": 143, "dry": [74, 101], "dst": 155, "dt": [27, 30], "dt_object": 64, "dt_object1": 61, "dt_object2": 61, "dt_string": [61, 62], "dtype": [18, 19, 122, 125, 126, 128, 129, 132, 133, 134, 140, 141, 143, 144, 146, 147, 148, 150, 155, 166, 167, 176], "duc": 39, "ducklett": 143, "due": [27, 38, 40, 49, 51, 53, 68, 71, 96, 98, 128, 147, 149, 150, 153, 154, 155, 157, 169], "dugtrio": 143, "dull": 162, "dummi": [157, 166, 173, 177], "dump": [68, 84], "dumpstack": 69, "dunsparc": 143, "duosion": 143, "duplic": [47, 56, 80, 92, 96, 132, 136, 142], "durant": 143, "durat": 175, "dure": [24, 57, 70, 71, 77, 79, 80, 98, 106, 147, 148, 150, 152, 153, 154, 155, 162, 165, 169, 174], "dusclop": 143, "duski": 164, "dusknoir": 143, "duskul": 143, "dusti": 164, "dustox": 143, "dutch": 68, "duti": 161, "dwebbl": 143, "dynam": [22, 92, 96, 98], "dynamicfeatur": 89, "dystopia": [11, 13], "e": [3, 4, 5, 7, 11, 12, 13, 23, 24, 30, 35, 39, 47, 48, 49, 51, 52, 53, 54, 55, 56, 68, 69, 71, 75, 76, 80, 82, 87, 90, 91, 93, 94, 95, 101, 103, 123, 126, 128, 129, 132, 133, 134, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185], "e0e0e0": 122, "e15e5601926f": 106, "e2e604bf92d": 70, "e32e417070a1": 92, "e8fb9ed4ccdc": 175, "each": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 35, 37, 44, 45, 47, 48, 49, 52, 53, 54, 55, 56, 71, 74, 78, 79, 80, 84, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 106, 125, 126, 127, 128, 132, 133, 134, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 177, 178, 184], "eachoth": 154, "earli": [23, 150], "earlier": [146, 147, 153, 155, 161, 162, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "earn": 95, "earth": 74, "eas": 155, "easi": [22, 24, 34, 47, 48, 52, 68, 83, 85, 87, 98, 101, 132, 133, 146, 151, 153, 154, 155, 162, 167, 169, 171, 173, 175, 177, 185], "easier": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 34, 38, 39, 57, 78, 83, 88, 94, 98, 106, 134, 148, 149, 151, 154, 169, 174, 176], "easiest": [152, 155], "easili": [28, 29, 35, 59, 64, 84, 90, 103, 136, 150, 153, 154, 155, 162, 166, 169, 177, 185], "eat": [87, 103, 152, 154, 155], "eaxh": 11, "eb3d2b": 80, "ecc": 146, "economi": [4, 11, 13], "ecosystem": [20, 108, 112, 155], "ed": 47, "ed7c4dc05b92": 75, "edg": [0, 7, 123, 155, 163, 172, 173, 176], "edgecolor": [163, 169, 170, 173, 176, 177], "edit": [154, 155], "editor": [45, 162], "edu": 9, "educ": [39, 153, 154, 169, 175], "educa": 39, "education_level": 172, "edward": 176, "ee": 39, "ee4e8ee8c904": 70, "ee80ca1a52c8": 91, "eelektrik": 143, "eelektross": 143, "eeve": 143, "effect": [52, 68, 76, 80, 101, 149, 150, 152, 154, 155, 164, 166, 169, 173], "effici": [38, 47, 48, 51, 68, 74, 80, 83, 96, 98, 101, 125, 132, 134, 149, 163, 170, 175], "efficientnet": 152, "efficientnet_b0": [152, 153], "efficientnet_b0_weight": [152, 153], "efficientnet_b1": 152, "efficientnet_b2": [152, 153, 155], "efficientnet_b2_weight": [153, 155], "efficientnet_b7": 152, "efficientnet_bx": 152, "efficientnetb0": 153, "efficientnetb2": [153, 155], "effnetb0": 153, "effnetb2": [153, 154], "effnetb2_average_time_per_pr": 155, "effnetb2_food101": 155, "effnetb2_food101_model_path": 155, "effnetb2_food101_result": 155, "effnetb2_foodvision_mini_model_destin": 155, "effnetb2_foodvision_mini_model_path": 155, "effnetb2_model_s": 153, "effnetb2_result": 155, "effnetb2_stat": 155, "effnetb2_test_pred_df": 155, "effnetb2_test_pred_dict": 155, "effnetb2_total_param": 155, "effnetb2_transform": 155, "effnetb2_weight": [153, 155], "effort": [154, 155, 176], "eg": [37, 39, 90, 98], "egg": 80, "eh": 81, "eigenvalu": [26, 128], "eigenvector": 26, "eight": [144, 153], "eighti": 39, "einstein": 39, "either": [39, 42, 43, 45, 65, 71, 72, 84, 89, 95, 98, 103, 132, 133, 139, 146, 147, 148, 149, 150, 151, 156, 157, 161, 162, 164, 165, 168, 169, 171, 172, 173, 175, 176, 177], "ekan": 143, "el": 52, "elabor": [84, 154], "electabuzz": 143, "electivir": 143, "electr": 143, "electrik": 143, "electrod": 143, "eleg": [22, 34, 35, 36, 55, 57, 78], "elegantli": 34, "elekid": 143, "element": [27, 28, 29, 31, 34, 47, 48, 51, 52, 65, 69, 74, 79, 80, 81, 87, 92, 93, 94, 95, 97, 102, 126, 127, 128, 129, 132, 134, 135, 146, 148, 153, 154, 155, 162, 173, 175, 177], "elementari": 171, "elementtre": 68, "elementwis": [31, 32, 128, 129], "elementwise_affin": 154, "elemnet": [55, 92], "elemtnt": 92, "elgyem": 143, "elif": [14, 22, 36, 42, 46, 49, 50, 72, 88, 146], "elimin": [49, 92, 106], "ell": 154, "elliot": 161, "ellipsi": 89, "ello": 52, "els": [16, 17, 18, 19, 22, 34, 36, 39, 42, 43, 46, 50, 52, 53, 55, 57, 68, 74, 77, 78, 80, 85, 88, 91, 94, 101, 102, 122, 133, 136, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 167, 170, 173, 175, 176], "elsewher": [146, 147], "elucid": 173, "email": [5, 14, 15, 16, 17, 24, 39, 40, 68, 97], "email_exchanges_big": 68, "emath": 130, "emb": [25, 107, 111, 155], "embark": [171, 173], "embark_town": [171, 173], "embed": [51, 84], "embed_dim": 154, "embedd": 154, "embedding_dim": 154, "embedding_dimens": 154, "embedding_dropout": 154, "embedding_layer_input_shap": 154, "embedding_layer_output_shap": 154, "embedding_s": 154, "emboar": 143, "emili": 101, "emolga": 143, "emp": [39, 102, 103], "emp_data": 77, "emp_id": [55, 77], "emp_nam": 55, "emphasi": [102, 155, 174, 177], "employe": [101, 102, 103, 175], "employee_info": 103, "empoleon": 143, "empow": [0, 39, 52, 164], "empoye": 77, "empti": [11, 38, 39, 47, 48, 49, 52, 53, 54, 55, 68, 69, 74, 76, 81, 83, 101, 102, 125, 128, 132, 133, 138, 140, 147, 150, 151, 153, 155, 156, 157, 168], "empty_lik": 128, "emul": 155, "en": [148, 168], "enabl": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 103, 146, 147, 150, 151, 155, 176, 184], "encapsul": 36, "enclos": [36, 47, 48, 52, 54, 70, 87, 92, 170], "encod": [31, 52, 68, 70, 71, 149, 161, 177, 178], "encoder_lay": 154, "encount": [70, 71, 128, 148, 175], "encourag": [154, 155, 172], "encrypt": 81, "end": [25, 27, 28, 29, 31, 32, 34, 35, 43, 47, 48, 49, 52, 54, 61, 66, 68, 70, 71, 74, 78, 84, 89, 92, 94, 98, 107, 111, 125, 129, 132, 133, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 165, 166, 167, 170, 173, 175, 176, 177, 185], "end_dim": [149, 150, 154, 156, 157], "end_index": 24, "end_tim": [150, 152, 155, 156, 157], "endindex": 127, "endless": [0, 172], "endpoint": 129, "endswith": [52, 151, 156, 157], "enforc": [89, 93, 155], "engag": 175, "engin": [24, 39, 102, 132, 133, 143, 144, 151, 152, 153, 154, 155, 157, 159, 175], "engine_rotation_spe": 90, "england": [68, 70, 71, 101, 122], "english": [52, 55, 68, 91, 98, 162], "enhanc": [149, 163, 169, 170, 177], "enjoi": [52, 80, 167, 172], "enlarg": 162, "enough": [44, 53, 54, 90, 148, 149, 150, 153, 154, 155, 161, 163, 169, 171, 172, 173, 174, 175, 176], "enrol": 173, "ensembl": [149, 184, 185], "ensur": [57, 68, 89, 103, 147, 150, 152, 153, 154, 155, 164, 167, 169, 173, 175, 176], "ensure_ascii": 68, "entei": 143, "enter": [43, 44, 45, 46, 48, 49, 71, 72, 74, 85, 89, 94, 95, 103, 175, 177], "enterpris": [24, 154], "entir": [34, 35, 52, 53, 54, 55, 68, 98, 103, 135, 147, 154, 155, 168, 172, 173, 175, 177], "entireti": 177, "entiti": [32, 88, 101], "entri": [18, 19, 45, 47, 55, 71, 132, 133, 140, 150], "entropi": [147, 148], "enuemer": 47, "enum": 152, "enumer": [10, 11, 14, 15, 16, 17, 30, 47, 52, 56, 149, 150, 151, 154, 156, 157, 170, 173], "env": [24, 150, 155], "environ": [23, 80, 98, 150, 151, 153, 155, 165, 177], "eof": 68, "eoferror": 70, "ep": [130, 154], "epar": 68, "epic": 155, "epitom": 176, "epoch": [65, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "epoch_count": 147, "epsilon": [8, 18, 19], "eq": [80, 148, 154], "equal": [27, 31, 32, 34, 43, 44, 45, 46, 47, 48, 49, 51, 53, 77, 78, 80, 82, 87, 90, 91, 95, 104, 123, 125, 128, 132, 139, 146, 148, 149, 150, 154, 155, 168, 171, 173, 175], "equal1": 80, "equat": [5, 7, 12, 31, 74, 148, 163], "equip": [129, 166], "equival": [35, 37, 38, 47, 49, 52, 53, 55, 57, 59, 60, 61, 68, 79, 91, 95, 102, 103, 106, 127, 128, 146, 148, 152, 153, 154], "er": 39, "era": 177, "eras": [68, 150], "erf": [80, 82], "erfc": [80, 82], "eric": 77, "erp": 24, "err_kw": 175, "err_palett": 175, "err_styl": 175, "errcolor": 173, "errno": 70, "error": [0, 7, 24, 34, 37, 38, 49, 51, 52, 55, 56, 68, 71, 72, 74, 75, 77, 82, 88, 89, 92, 93, 94, 98, 101, 102, 103, 104, 128, 133, 141, 147, 148, 149, 150, 151, 152, 154, 155, 163, 164, 173, 174], "errstat": 130, "errwidth": 173, "escap": [25, 69, 107, 111], "escavali": 143, "especi": [26, 98, 106, 125, 146, 148, 155], "espeon": 143, "espurr": 143, "essai": 153, "essenc": [146, 147, 149, 150, 152, 153, 154, 155, 157], "essenti": [23, 103, 125, 129, 148, 149, 150, 151, 152, 154, 173], "essesnti": 115, "establish": [155, 167, 175], "estim": [4, 8, 12, 147, 150, 152, 163, 165, 166, 167, 168, 169, 172, 173, 174, 175], "estonia": 71, "et": [68, 154], "eta": 149, "etc": [4, 7, 16, 17, 18, 19, 24, 25, 34, 35, 47, 48, 49, 51, 52, 54, 55, 56, 59, 60, 61, 65, 74, 79, 80, 88, 89, 90, 93, 95, 96, 98, 101, 102, 107, 111, 125, 127, 128, 129, 132, 140, 143, 144, 147, 154, 161, 166, 167, 170, 174, 175, 185], "ethan": [57, 74, 77, 94], "ethic": 184, "etre": 68, "eu": 149, "eucl": 30, "euclidean": [32, 82, 95], "euclidean_dist": 30, "europ": [59, 63], "eval": [24, 74, 94, 147, 148, 149, 150, 151, 152, 155, 156, 157], "eval_model": 149, "evalu": [42, 43, 44, 45, 48, 49, 68, 79, 94, 95, 98, 146, 147, 153, 155], "evalut": [149, 155], "evan": 161, "even": [22, 24, 35, 36, 37, 38, 42, 44, 45, 47, 48, 49, 51, 52, 53, 57, 68, 71, 74, 75, 77, 78, 79, 84, 89, 90, 93, 94, 95, 98, 102, 103, 106, 128, 129, 133, 134, 137, 138, 146, 147, 148, 149, 150, 152, 153, 154, 155, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "even_list": 79, "even_no": 79, "even_num": 74, "even_numb": [37, 47, 57, 79], "even_odd": 74, "evenli": [125, 129], "evenodd": 77, "evens_and_odd": 74, "event": [8, 71], "eventu": [154, 174, 176], "ever": [39, 47, 52, 96, 146, 147, 167, 170, 177], "everi": [0, 5, 7, 8, 10, 14, 15, 16, 17, 18, 19, 24, 44, 47, 49, 51, 52, 56, 57, 61, 71, 78, 80, 92, 96, 98, 101, 102, 103, 104, 106, 126, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 164, 165, 166, 168, 170, 171, 175, 176, 177], "everon": 150, "everybodi": 52, "everyon": [77, 166], "everyth": [37, 53, 54, 55, 56, 72, 80, 92, 96, 101, 102, 146, 147, 148, 150, 153, 154, 155, 170, 173, 174], "everytim": [146, 157, 170], "everywher": [34, 146, 149, 155], "evid": [90, 163, 165, 169], "evok": 164, "evolv": 155, "ew": 52, "eward": 39, "ex": [0, 39, 98], "exact": [4, 51, 147, 162, 169, 171], "exactli": [37, 39, 49, 52, 71, 106, 148, 153, 155, 156, 162, 169], "exam": 147, "examin": 165, "exampl": [0, 1, 3, 4, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 25, 31, 32, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 65, 68, 70, 71, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 88, 89, 91, 92, 93, 94, 96, 97, 101, 102, 104, 106, 107, 111, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 162, 163, 164, 166, 167, 168, 169, 173, 174, 175, 177, 178, 185], "example_1": 155, "example_2": 155, "example_3": 155, "example_list": 155, "example_writ": 153, "exaplan": [70, 101], "exc_info": 71, "excadril": 143, "exceed": 78, "excel": [22, 35, 68, 132, 147, 148, 149, 152, 153, 155], "excel_book": 68, "except": [7, 18, 19, 22, 24, 34, 37, 39, 52, 53, 68, 73, 80, 84, 88, 89, 102, 137, 146, 147, 148, 149, 150, 152, 153, 154, 155, 162, 164, 165, 169, 171, 173], "exception": 166, "exception1": 71, "exception2": 71, "exceptioni": 71, "exceptionii": 71, "exceptionn": 71, "excercis": 131, "exceric": 185, "exchang": 155, "excit": [0, 153, 154], "exclud": [40, 56, 155, 161, 175, 176], "exclus": [68, 80, 126, 132, 136], "excus": 177, "execut": [6, 24, 34, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 57, 65, 66, 68, 71, 74, 75, 80, 85, 87, 89, 94, 96, 98, 101, 102, 109, 136, 139, 141, 142, 147, 155, 177, 182, 185], "exeggcut": 143, "exeggutor": 143, "exercis": [22, 75, 76, 143, 145, 147, 148, 149, 150, 152, 154, 155, 161, 174, 175], "exerics": 146, "exhaust": [34, 47, 98, 154, 165], "exist": [4, 31, 37, 38, 39, 45, 52, 53, 54, 55, 56, 57, 68, 70, 80, 96, 101, 102, 103, 106, 132, 135, 136, 137, 138, 139, 141, 142, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165, 173, 177, 178], "exist_ok": [147, 149, 150, 151, 152, 153, 155, 156, 157], "exit": [47, 48, 49, 68, 70, 80, 87], "exmapl": 154, "exmpl": 52, "exp": [30, 51, 80, 82, 90, 128, 130, 148], "expand": [31, 79, 84, 129, 150, 154, 174], "expandtab": 52, "expect": [7, 11, 13, 27, 39, 71, 95, 132, 140, 146, 147, 148, 149, 150, 152, 155, 169, 171, 172, 175, 177], "expens": [78, 101, 146, 155], "experi": [0, 24, 146, 147, 148, 150, 151, 152, 154, 160, 162, 165, 166, 169, 170, 171, 173, 177, 184], "experiment": [24, 146, 151, 153, 155, 185], "experiment_nam": 153, "experiment_numb": 153, "expert": [0, 172], "expir": 155, "explain": [5, 14, 15, 16, 17, 37, 56, 78, 89, 96, 106, 129, 137, 140, 147, 148, 149, 150, 151, 156, 157, 161, 162, 164, 165, 166, 170, 175], "explan": [40, 43, 44, 45, 47, 48, 49, 52, 57, 59, 62, 64, 66, 71, 72, 75, 76, 77, 79, 81, 82, 85, 93, 95, 101, 102, 103, 104, 106, 116, 128, 129, 154, 159, 170], "explanatori": 163, "explicit": [0, 28, 29, 89, 106, 128, 164, 170, 172, 173], "explicitli": [0, 36, 51, 57, 68, 74, 90, 126, 155, 162, 173], "explod": 122, "exploit": 98, "explor": [0, 39, 65, 115, 146, 147, 148, 149, 150, 151, 152, 153, 162, 165, 167, 170, 172], "exploratori": [0, 162], "explos": 154, "exploud": 143, "expm1": [80, 82], "expon": [34, 47, 52, 82, 94], "exponenti": [28, 52, 80, 81, 91, 95, 128, 148, 172, 175], "export": [84, 147], "expovari": 81, "express": [28, 29, 38, 39, 43, 44, 45, 48, 49, 52, 53, 55, 57, 74, 77, 79, 89, 91, 93, 94, 95, 97, 104, 132, 146, 175], "expression1": 46, "expression2": 46, "expression3": 46, "expression4": 46, "extempor": 174, "extend": [38, 52, 74, 89, 101, 103, 141, 164, 171, 172, 173], "extens": [8, 20, 24, 36, 80, 84, 87, 89, 94, 108, 112, 122, 123, 149, 151, 153, 154, 155, 156, 157, 166, 175], "extent": [170, 175], "extern": [49, 71, 153], "extra": [38, 69, 70, 89, 139, 146, 156, 157, 159, 170, 171, 174], "extra_repr": 149, "extrac": [16, 17], "extract": [0, 8, 10, 14, 15, 16, 17, 18, 19, 39, 68, 92, 132, 149, 150, 152, 153, 154, 155, 170, 178], "extractal": [150, 151, 152, 153, 156, 157], "extractor": 152, "extrapol": 166, "extrem": [132, 155, 162, 163, 164, 165, 170, 172, 175, 177], "ey": [31, 126, 130, 155, 173], "f": [27, 32, 36, 45, 46, 51, 52, 60, 61, 68, 71, 72, 74, 77, 80, 84, 94, 97, 101, 102, 106, 123, 128, 129, 136, 139, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 167, 170, 172, 175], "f09af94986b4": 54, "f1": [1, 8, 148], "f1_histori": 8, "f1_score": 148, "f1score": 148, "f2db54e8947c": 170, "f3f4b74da706": 54, "f45": 39, "f49307ce4aaa": 56, "f6b2789c4214": 141, "f7b055f5764d": 35, "f7d40ce0c112": 38, "f7ffd6347533": 70, "fab": [80, 82], "fab2e1af2c65": 106, "fabric": 177, "fabul": 169, "face": [7, 78, 150, 161, 176], "facebook": [52, 146], "facecolor": [122, 169, 173], "facecream": 123, "facecremsalesdata": 123, "faceprep": 49, "facet": [162, 165, 174, 176, 177], "facet_kw": 174, "facetgrid": [165, 166, 167, 171, 174, 175, 176, 180], "facewashsalesdata": 123, "facil": 80, "facilit": [31, 171, 173], "fact": [34, 37, 53, 54, 90, 125, 154, 155, 165, 172, 174, 175], "factor": [26, 29, 49, 155, 163, 167, 171, 172, 173, 175, 180], "factori": [28, 51, 74, 78, 80, 82, 84], "factorplot": [169, 171, 172, 174, 175], "fade": [164, 171], "fahrenheit": 38, "fail": [4, 5, 44, 45, 48, 68, 70, 132, 146, 147, 150, 164], "fair": [147, 148, 149, 150, 152, 153, 154, 155, 167, 175], "fairi": 143, "fairli": [35, 149, 154], "faith": [152, 155], "fake": 175, "falcon": 52, "fall": [43, 51, 70, 85, 92, 169, 175], "fallback": 126, "fals": [1, 8, 11, 13, 16, 17, 18, 19, 30, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 68, 74, 80, 84, 88, 90, 91, 94, 95, 103, 104, 126, 127, 129, 130, 132, 136, 137, 138, 139, 141, 142, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179], "falsi": 95, "famili": [5, 11, 13, 84, 155, 166, 173, 175], "familiar": [38, 52, 54, 102, 123, 144, 147, 148, 150, 167, 170, 172, 173, 174], "fan": [146, 154, 170, 177], "fanci": [127, 132], "fandango": 24, "fanstast": 155, "fantast": [148, 151, 153, 154, 155], "far": [39, 45, 90, 106, 129, 143, 146, 147, 148, 149, 150, 152, 153, 154, 155, 162, 163, 164, 165], "fare": [171, 173, 175], "farfetch": 143, "fasewash": 123, "fashion": [5, 7, 17, 19, 103, 149, 153, 155], "fashionmnist": [149, 150], "fashionmnistmodelv0": 149, "fashionmnistmodelv1": 149, "fashionmnistmodelv2": 149, "fast": [68, 125, 132, 136, 146, 151, 152, 153, 154, 155, 175], "fastai": 152, "fastapi": 155, "faster": [51, 54, 57, 92, 98, 101, 103, 128, 147, 149, 153, 154], "fastest": [155, 185], "fat": 174, "fatal": 161, "fatorplot": 169, "faustomoral": 155, "favorit": 54, "favour": 154, "favourit": 155, "fbf7cddd4b2a": 70, "fc": [122, 173], "fdel": 38, "fearow": 143, "feasibl": 141, "feat": [153, 154], "featur": [0, 1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 37, 101, 103, 104, 136, 146, 147, 148, 149, 150, 152, 161, 163, 164, 165, 166, 167, 169, 171, 172, 175, 176, 177, 185], "feature_map_height": 154, "feature_map_width": 154, "feb": [60, 61, 87], "februari": [45, 60, 61, 146], "fed": [0, 154], "feder": 68, "feeba": 143, "feed": [44, 146, 152, 172, 184], "feedback": [44, 74, 155], "feedforward": [18, 19, 154], "feedpars": 24, "feel": [45, 154, 155, 161, 165, 166, 167, 169, 170, 171], "femal": [68, 101, 143, 161, 165, 168, 170, 171, 172, 173, 177], "female_dinn": 172, "female_lunch": 172, "fenc": [154, 171], "fennekin": 143, "feraligatr": 143, "ferrose": 143, "ferrothorn": 143, "fetch": [12, 80, 132, 162, 165, 166, 169, 171, 173, 175, 176, 177], "few": [36, 37, 38, 47, 48, 51, 52, 55, 59, 115, 129, 132, 135, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "fewer": [22, 154, 175, 176], "fffbe51149a7": 61, "fget": 38, "fh": 71, "fi": 57, "fib": 80, "fibo": 80, "fibo1": 80, "fibonacci": [35, 48, 80], "fibonacci_numb": 35, "fiction": 173, "fiddl": 174, "field": [11, 13, 52, 68, 91, 132, 135, 154, 155, 164, 175], "fifa_data": 122, "fig": [25, 30, 53, 56, 107, 111, 149, 150, 154, 155, 163, 168, 172], "fight": [11, 12, 13, 14, 15, 16, 17, 18, 19, 143], "fighth": [16, 17, 18, 19], "fignam": 30, "figsiz": [8, 10, 11, 13, 16, 17, 18, 19, 25, 27, 107, 111, 122, 147, 148, 149, 150, 154, 155, 164, 172, 173, 175, 179], "figur": [8, 10, 11, 16, 17, 18, 19, 27, 46, 72, 83, 88, 89, 95, 103, 122, 123, 147, 148, 149, 150, 152, 153, 155, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 179], "file": [6, 24, 34, 35, 37, 52, 70, 71, 72, 76, 77, 80, 83, 84, 87, 88, 90, 94, 98, 109, 123, 132, 140, 141, 142, 143, 147, 150, 151, 152, 153, 156, 157, 158, 159, 177, 182], "file_data": 68, "file_extens": 155, "file_nam": 132, "filedata": 129, "fileexistserror": 80, "filenam": [68, 80, 94, 132, 147, 150, 151, 153, 155, 156, 157, 166], "fileno": 68, "filenotfounderror": [68, 70, 150], "filepath": [147, 150, 152, 153, 154, 155], "files": [153, 155], "fill": [122, 125, 126, 129, 146, 150, 151, 153, 155, 156, 157, 166, 185], "fillna": 132, "filter": [53, 55, 57, 142, 149], "filter_cond": 132, "filterwarn": [163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "fin": 71, "final": [7, 27, 35, 37, 47, 48, 49, 52, 53, 68, 70, 75, 76, 88, 90, 94, 96, 106, 128, 142, 147, 149, 150, 153, 154, 155, 157, 164, 167, 171, 172, 173, 175, 176, 177], "finali": 129, "finaltext": 94, "financ": 125, "financi": 51, "find": [1, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 32, 35, 37, 39, 47, 48, 52, 53, 56, 57, 59, 63, 68, 71, 74, 78, 80, 85, 90, 92, 95, 101, 103, 106, 127, 128, 129, 132, 136, 138, 147, 148, 149, 150, 151, 153, 155, 156, 157, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 185], "find_class": 150, "find_even_numb": 74, "find_most_common_word": 68, "find_most_frequent_word": 68, "findarea": 103, "fine": [88, 94, 147, 148, 150, 152, 154, 175], "finer": 162, "finfo": 130, "finish": [36, 47, 89, 149, 153, 154, 155, 156, 157, 165, 168], "finit": [27, 34, 51], "finland": [11, 13, 37, 45, 47, 52, 53, 54, 57, 68, 71, 90, 101], "finneon": 143, "fintech": 170, "fir": 163, "fire": [143, 155], "firm": 171, "firmer": 176, "first": [0, 7, 8, 9, 16, 17, 18, 19, 27, 31, 34, 35, 36, 37, 38, 39, 42, 43, 44, 46, 47, 48, 49, 52, 54, 57, 59, 60, 61, 65, 68, 69, 70, 71, 74, 75, 77, 80, 84, 85, 87, 89, 90, 94, 96, 98, 101, 102, 103, 104, 106, 122, 127, 128, 132, 139, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 162, 164, 165, 167, 169, 171, 172, 173, 174, 175, 176, 177, 185], "first_lett": 52, "first_nam": [37, 39, 45, 47, 52, 55, 74, 90, 93], "first_name_to_list": 93, "first_nm": 77, "first_numb": 94, "firstnam": [39, 40, 74, 77, 90, 94, 101], "fisher": [10, 14], "fit": [0, 1, 4, 5, 11, 12, 13, 84, 147, 149, 150, 154, 155, 156, 157, 163, 165, 166, 167, 168, 171, 172, 175], "fit_fn": 163, "fit_reg": 165, "five": [39, 47, 71, 103, 122, 132, 133, 135, 146, 148, 149, 154, 155], "fix": [25, 47, 70, 77, 98, 107, 111, 132, 147, 148, 149, 150, 154, 165, 175], "flaaffi": 143, "flab\u00e9b\u00e9": 143, "flag": [12, 16, 17, 18, 19, 39, 122, 130, 136, 137, 138, 139, 141, 142, 143, 151, 155, 161, 167, 175], "flag_r": 167, "flamer": 143, "flaot": 51, "flareon": 143, "flase": 95, "flask": [24, 52], "flat": 130, "flat_latency_grid": 8, "flat_prob": 8, "flat_throughput_grid": 8, "flatten": [8, 10, 11, 12, 13, 14, 15, 57, 125, 149, 150, 151, 156, 157, 169], "flatten_model": 149, "flattened_list": 57, "flattn": 154, "flavor": [20, 108, 112], "flavour": [146, 153], "flee": 161, "fleme": 47, "fletchind": 143, "fletchl": 143, "flexibl": [24, 40, 92, 94, 132, 146, 147, 163, 165, 168, 169, 170], "flexibli": 168, "flierprop": 171, "fliersiz": 171, "flight": [161, 178, 179], "fligth": 178, "flip": [150, 162], "float": [24, 38, 46, 49, 52, 53, 54, 56, 59, 66, 70, 71, 80, 81, 82, 85, 89, 91, 92, 93, 95, 103, 126, 132, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 164, 169, 170, 172, 173], "float16": 146, "float32": [146, 147, 148, 150, 152], "float64": [122, 126, 128, 132, 133, 134, 140, 146], "float64index": 132, "float_1": 91, "float_16_tensor": 146, "float_2": 91, "float_32_tensor": 146, "float_numb": 94, "floatingpointerror": 70, "floattensor": 150, "floatzel": 143, "floett": 143, "floor": [80, 82, 90, 95, 102, 104, 130, 148, 169], "floor_divis": 90, "florg": 143, "flow": [10, 47, 48, 49, 52, 68, 71, 147, 154, 176], "flowchart": 0, "flower": [3, 5, 10, 14, 15, 47, 161, 169], "floyd": 47, "fluctuat": 175, "flush": [48, 66, 68, 84, 94], "fly": [35, 101, 102, 103, 143, 155], "flygon": 143, "flying_test": 101, "fmod": [80, 82], "fmri": 175, "fmt": 122, "fn": [1, 155], "fo": 39, "focu": [146, 147, 154, 155, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177], "focus": [94, 101, 148, 150, 151, 153, 154, 155], "foe": 80, "folder": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 37, 69, 80, 132, 143, 144, 149, 150, 151, 152, 153, 156, 164, 166, 167, 172, 173, 175], "follow": [0, 1, 3, 4, 5, 6, 7, 17, 19, 22, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 42, 44, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 68, 70, 71, 72, 74, 77, 78, 80, 81, 83, 84, 85, 87, 89, 90, 91, 94, 95, 96, 98, 101, 102, 103, 104, 106, 109, 115, 127, 128, 129, 132, 133, 134, 136, 137, 138, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 162, 164, 175, 176, 177, 178, 182], "fom": 48, "font": [122, 162, 170, 173, 175], "font_scal": [162, 172], "fontdict": 122, "fontnam": 122, "fontsiz": [122, 149, 150, 154, 155, 172, 177], "fontweight": [122, 172, 173, 177], "foo": [39, 53, 55], "food": [91, 92, 148, 150, 151, 154, 155], "food101": [150, 153], "food101_class_nam": 155, "food101_class_names_load": 155, "food101_train_transform": 155, "food_imag": 150, "food_list": 54, "food_nam": 155, "food_staff": 74, "food_tupl": 54, "foodvis": [152, 153, 154], "foodvision_big": 155, "foodvision_big_class_names_path": 155, "foodvision_big_demo_path": 155, "foodvision_mini": 155, "foodvision_mini_demo_path": 155, "foodvision_mini_exampl": 155, "foodvision_mini_examples_path": 155, "foongu": 143, "foot": 122, "footbal": [39, 177], "football_plot": 177, "footprint": [154, 155], "forc": [72, 126, 133, 155, 161], "force_edgecolor": 176, "forcibli": 84, "ford": [103, 144], "forest": 149, "forev": 48, "forget": [7, 89, 154, 155], "forgot": [70, 150], "forgotten": 48, "form": [4, 7, 8, 10, 12, 14, 36, 43, 47, 51, 52, 55, 57, 60, 61, 68, 69, 77, 79, 80, 85, 89, 92, 98, 101, 125, 126, 128, 132, 136, 137, 140, 143, 148, 149, 151, 152, 153, 154, 155, 156, 157, 169, 170, 171, 172, 173, 174, 175, 176, 177], "formal": [77, 106, 154], "format": [9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 37, 40, 45, 47, 54, 55, 64, 65, 68, 80, 89, 101, 102, 104, 132, 133, 140, 146, 148, 149, 150, 151, 152, 153, 154, 155, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "format_regex": 61, "format_vers": 84, "former": [89, 103], "formfe": 52, "formul": 47, "formula": [1, 4, 5, 39, 74, 147, 148, 154], "forretress": 143, "fortan": 129, "forth": 80, "fortun": [22, 51], "forum": [148, 151, 152, 155, 169, 170, 171, 173], "forward": [47, 52, 69, 70, 92, 146, 147, 148, 149, 151, 152, 154, 156, 157, 175, 178], "forward_cal": [149, 150], "found": [32, 36, 39, 47, 49, 52, 55, 61, 70, 71, 80, 95, 98, 103, 126, 136, 139, 146, 147, 148, 149, 150, 152, 153, 154, 155, 164, 171, 173, 175, 178], "foundat": [150, 154, 174], "founder": [152, 154], "four": [9, 10, 14, 39, 42, 47, 61, 74, 89, 91, 94, 103, 106, 129, 132, 133, 144, 147, 148, 149, 155, 161, 162, 171, 177], "fourth": [39, 48, 94, 136], "fp": 1, "frac": [11, 13, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 95, 148], "fraction": [61, 82, 163], "fradul": 155, "frame": [15, 16, 17, 18, 19, 78, 89, 132, 136, 139, 140, 141, 149, 155, 171, 176, 177], "frameobject": 89, "framework": [7, 18, 19, 24, 116, 146, 154, 177], "francisco": 161, "frank": 77, "fraud": [148, 155], "fraudul": [5, 14, 15, 16, 17, 155], "fraxur": 143, "free": [0, 22, 45, 68, 146, 153, 154, 155, 166, 167, 169, 170, 171, 173, 175, 185], "freecodecamp": 155, "freed": 68, "freedom": [4, 11, 13, 153, 176], "freeli": [22, 175], "freez": [154, 155], "french": [68, 155], "freq_dist": 101, "frequenc": [101, 132, 171, 172], "frequent": [39, 49, 53, 68, 80, 127, 128, 132, 154, 155, 171, 174], "fresh": [147, 148], "fresher": 177, "frexp": [80, 82], "fri": [65, 170, 172, 173], "fridman": 152, "friend": [5, 146, 152, 154, 155], "friendli": [35, 57, 155], "frillish": 143, "frist": 148, "froaki": 143, "frogadi": 143, "from": [0, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 27, 28, 29, 30, 34, 35, 36, 37, 38, 39, 45, 47, 48, 49, 51, 52, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 81, 82, 84, 88, 89, 90, 91, 92, 93, 95, 96, 97, 98, 101, 102, 103, 104, 106, 107, 111, 115, 122, 123, 125, 126, 127, 128, 139, 140, 141, 147, 149, 150, 151, 153, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "from_arrai": [136, 139], "from_dict": [132, 144], "from_numpi": [146, 148], "from_tupl": [135, 142], "fromarrai": 130, "fromit": 130, "fromtimestamp": [59, 60, 64], "fron": [11, 13], "front": [39, 52, 146, 153, 154, 173], "front_end": 53, "frontend": 162, "froslass": 143, "frown": 106, "froze": 152, "frozen": [152, 153, 154, 155], "fruit": [39, 45, 47, 53, 54, 56, 71, 89, 91, 102, 134, 173], "fruit1": 134, "fruit2": 134, "fruit3": 134, "fruit4": 134, "fruits1": 91, "fruits2": 91, "fruits3": 91, "fruits4": 91, "fruits_and_veg": 71, "fruits_df": 134, "fruits_dict": 134, "fruits_list": 134, "fruits_veget": 54, "fset": 38, "fsize": 30, "fsum": [80, 82], "fucntion": [75, 76], "fulfil": [146, 165], "full": [9, 16, 17, 18, 19, 24, 59, 60, 61, 68, 69, 74, 80, 83, 90, 95, 126, 128, 146, 147, 148, 150, 153, 154, 155, 157, 172], "full_backward_hook": [149, 150], "full_data": 68, "full_lik": 126, "full_nam": [74, 77, 90], "full_stack": 53, "fulli": [146, 153, 154, 155, 173], "fun": [39, 74, 75, 76, 77, 80, 90, 95, 147, 149, 152, 154, 155, 157, 164, 176], "fun1": [75, 76, 103], "fun2": [75, 76, 103], "fun3": [76, 103], "func": [37, 139, 170], "func1": 101, "func2": 101, "function": [2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 28, 29, 34, 38, 39, 40, 42, 48, 49, 51, 59, 65, 66, 68, 69, 70, 71, 75, 81, 83, 87, 88, 89, 90, 91, 92, 93, 96, 101, 102, 106, 108, 112, 123, 125, 129, 132, 134, 146, 152, 159, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177], "function_nam": 74, "functionis": 153, "functionnam": 71, "functool": 79, "fund": 155, "fundament": [101, 132, 153, 154, 155, 160, 164], "fungi": 74, "fur": 7, "furfrou": 143, "furret": 143, "further": [3, 11, 12, 13, 14, 15, 16, 17, 35, 52, 68, 70, 72, 74, 94, 96, 98, 132, 133, 141, 147, 148, 150, 153, 154, 155, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185], "furthermor": [35, 37, 38, 53, 74, 80, 96, 101, 106, 162], "furthest": 39, "furtur": 152, "fusion": [150, 151, 156, 157], "futur": [47, 49, 68, 90, 106, 140, 146, 147, 148, 149, 150, 151, 153, 155, 157, 164, 168, 174, 175, 177, 185], "futurewarn": [140, 144, 164, 168], "g": [0, 4, 5, 7, 11, 13, 23, 37, 49, 53, 54, 68, 90, 122, 123, 126, 128, 129, 132, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179], "ga": 122, "gabit": 143, "gain": [154, 165, 166, 174, 175], "gallad": 143, "gallademega": 143, "galvantula": 143, "gam": 175, "game": [24, 83, 147], "gamma": [80, 81, 82, 175], "gammavari": 81, "gap": 88, "garbag": [68, 70, 102, 137], "garbodor": 143, "garchomp": 143, "garchompmega": 143, "gardevoir": 143, "gardevoirmega": 143, "gari": 77, "garlic": 155, "gas_pric": 122, "gas_price_figur": 122, "gastli": 143, "gastrodon": 143, "gate": 57, "gather": [132, 133, 137, 154, 170], "gaug": [169, 170], "gauss": 81, "gaussian": [81, 129, 154, 165, 166, 168, 175], "gaussian_anomali": 8, "gaussian_anomaly_detect": 8, "gaussiananomalydetect": 8, "gaussiankd": 172, "gave": 68, "gca": [170, 176, 177], "gcd": 80, "gcp": 146, "gdp": [4, 11, 13, 175], "gea": 122, "geeksforgeek": [4, 5], "gelu": 154, "gender": [55, 68, 101, 161, 165, 169, 170, 172, 173, 177], "gender_domin": 172, "gener": [4, 5, 7, 11, 14, 15, 18, 19, 22, 24, 29, 32, 34, 37, 41, 42, 47, 48, 51, 52, 54, 70, 71, 72, 74, 78, 79, 80, 81, 83, 84, 89, 92, 95, 98, 101, 102, 103, 106, 115, 123, 126, 127, 136, 139, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184, 185], "generaliz": [149, 150], "generate_color": 80, "generate_full_nam": 74, "generate_group": 77, "generatig": 163, "generatingdata": [165, 167], "generatorexit": 70, "generos": [11, 13], "genesect": 143, "genexpr": 35, "genfromtxt": [129, 130], "gengar": 143, "gengarmega": 143, "genotyp": 169, "gentleman": 175, "geodud": 143, "geograph": 175, "geometr": 32, "georg": 154, "geq": 27, "gereet": 74, "germain": 122, "german": 68, "germancar": 144, "germani": 144, "get": [4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 20, 22, 31, 34, 35, 36, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 56, 57, 61, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 77, 79, 80, 89, 90, 95, 96, 101, 102, 103, 104, 106, 108, 109, 112, 126, 127, 129, 133, 135, 139, 140, 142, 144, 147, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 185], "get_cost": [11, 13], "get_data": 102, "get_first_ten_countri": 37, "get_group": 144, "get_height": 173, "get_last_ten_countri": 37, "get_offset": 169, "get_string_list": 37, "get_temperatur": 38, "get_width": 173, "get_x": 173, "get_xlim": 170, "get_xticklabel": 173, "get_yticklabel": 173, "getattr": [102, 103, 170], "getcwd": 80, "getcwdb": 69, "getdata": 102, "getdatalim": 169, "getrandbit": 81, "getroot": 68, "getstat": 81, "ggplot": 122, "ghost": 143, "gi": 146, "gibl": 143, "gift": 37, "gigabyt": 177, "gigalith": 143, "girafarig": 143, "giratinaalt": 143, "giratinaorigin": 143, "gist": 166, "gist_earth": 167, "gist_earth_r": 167, "gist_grai": 167, "gist_gray_r": 167, "gist_heat": 167, "gist_heat_r": 167, "gist_ncar": 167, "gist_ncar_r": 167, "gist_rainbow": 167, "gist_rainbow_r": 167, "gist_stern": 167, "gist_stern_r": 167, "gist_yarg": 167, "gist_yarg_r": 167, "git": [151, 152, 153, 154, 155], "gitattribut": 155, "github": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 90, 122, 123, 149, 150, 151, 152, 153, 154, 155, 156, 157], "githubusercont": 155, "give": [14, 15, 24, 34, 37, 39, 43, 44, 45, 47, 49, 51, 52, 71, 74, 80, 82, 88, 90, 95, 101, 102, 115, 125, 126, 128, 129, 132, 133, 134, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177], "giveawai": 167, "given": [1, 3, 4, 27, 28, 29, 32, 35, 37, 40, 42, 43, 47, 48, 49, 52, 56, 59, 61, 65, 66, 70, 71, 74, 77, 80, 84, 87, 88, 91, 94, 96, 103, 106, 125, 126, 129, 133, 146, 148, 149, 150, 151, 152, 153, 154, 155, 165, 169, 170, 172, 175, 177], "gkdive": 122, "gkhandl": 122, "gkkick": 122, "gkposit": 122, "gkreflex": 122, "glaceon": 143, "glali": 143, "glaliemega": 143, "glameow": 143, "glanc": 90, "gligar": 143, "glimps": [147, 172], "gliscor": 143, "glob": [150, 152, 153, 155], "global": [22, 36, 70, 79, 86, 88, 96, 154], "global_lang": 75, "global_step": 153, "global_var": [75, 76], "globalglob": 75, "gloom": 143, "glu": 163, "gmtoff": 61, "gmtoff_fract": 61, "gnbu": 167, "gnbu_r": 167, "gnome": 146, "gnuplot": 167, "gnuplot2": 167, "gnuplot2_r": 167, "gnuplot_r": 167, "go": [4, 5, 7, 8, 11, 16, 17, 18, 19, 24, 27, 37, 38, 46, 47, 49, 51, 71, 74, 78, 89, 95, 96, 98, 101, 104, 106, 125, 143, 160, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185], "goal": [0, 130, 149, 150, 153, 154, 155, 158, 162, 165, 166, 174, 185], "god": 55, "goe": [11, 12, 13, 14, 15, 16, 17, 36, 66, 70, 71, 72, 80, 101, 106, 136, 139, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 166, 172], "gogh": 24, "gogoat": 143, "going_modular": [151, 152, 153, 154, 155, 157, 158], "goku": [153, 155], "golbat": 143, "goldeen": 143, "golduck": 143, "golem": 143, "golett": 143, "golurk": 143, "gone": [146, 150, 153, 154, 155, 165, 169, 175], "gonna": 175, "good": [16, 17, 18, 19, 36, 47, 52, 54, 68, 71, 72, 74, 77, 80, 85, 89, 94, 122, 123, 132, 146, 147, 148, 149, 150, 152, 153, 154, 155, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177], "goodra": 143, "googl": [24, 52, 84, 103, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 175], "googol": 91, "goomi": 143, "gorebyss": 143, "got": [37, 40, 76, 80, 92, 93, 104, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 171, 172, 185], "gothita": 143, "gothitel": 143, "gothorita": 143, "gotten": 153, "gourgeistaverag": 143, "gourgeistlarg": 143, "gourgeistsmal": 143, "gourgeistsup": 143, "govern": [11, 13, 169, 175], "gpt": 184, "gpu": [147, 148, 150, 151, 152, 153, 154, 155, 157], "gr": 155, "grab": 173, "gracefulli": [49, 141], "grad": [147, 148, 149, 150, 151, 156, 157], "grad_fn": [146, 148, 149, 154], "grade": [43, 44, 45, 122, 133, 169], "gradient": [18, 19, 147, 148, 149, 150, 152, 154, 185], "gradual": 154, "graduat": 172, "grai": [149, 164, 167, 169, 170, 177], "graido": 155, "granbul": 143, "grandpar": 103, "grant": 45, "grape": 47, "graph": [0, 4, 123, 147, 153, 166, 169, 173, 175], "graph_obj": 11, "graphic": [24, 71, 146, 151, 154, 170, 172, 176, 178], "grass": 143, "gravel": 143, "graviti": [74, 90, 93, 99], "gray_r": 167, "grayscal": [9, 17, 19, 149, 150, 164], "great": [42, 96, 104, 149, 150, 152, 154, 163, 169, 170, 175, 176, 177, 178], "greater": [43, 45, 46, 48, 49, 72, 80, 82, 90, 95, 104, 125, 128, 132], "greatest": [152, 154, 155], "greek": [28, 29, 101], "green": [16, 17, 18, 19, 47, 89, 146, 147, 149, 153, 164, 167, 168, 170], "greens_r": 167, "greet": [37, 74, 77, 94, 102], "greet_modul": 80, "grei": [16, 17, 18, 19, 162, 164, 167, 168, 173], "greninja": 143, "gretta": 77, "greyish": 164, "greys_r": 167, "grid": [8, 11, 13, 123, 125, 126, 155, 162, 167, 172, 174, 175, 176, 177], "grid_kw": 167, "gridlin": 123, "gridsiz": 172, "gridspec": 177, "gridspec_kw": [172, 177], "grimer": 143, "grip": [171, 176], "grotl": 143, "groudon": 143, "groudonprim": 143, "ground": [101, 143, 147, 148, 154, 155], "group": [0, 24, 132, 144, 150, 154, 162, 165, 169, 171, 172, 173, 175], "groupbi": [144, 170, 172], "grouper": 172, "grovyl": 143, "grow": [22, 74, 83, 94, 154], "growlith": 143, "growth": [11, 12, 13, 175], "grumpig": 143, "gt": 80, "guarante": [54, 68, 71, 153, 177], "guava": [47, 53, 56, 173], "guess": [14, 15, 38, 72, 126, 132, 147, 148, 150, 152, 153, 154, 161, 170, 171, 173, 174], "guest": 45, "gui": [24, 71, 163, 167, 169, 173, 175], "guid": [0, 22, 25, 107, 111, 146, 147, 149, 150, 151, 153, 155, 156, 157, 163, 164, 166], "guidanc": [0, 164], "guidebook": 155, "guidelin": 146, "gulpin": 143, "gun": 161, "gunmet": 164, "gurdurr": 143, "guthri": 161, "gyarado": 143, "gyaradosmega": 143, "gz": [80, 149], "h": [0, 35, 39, 47, 48, 49, 52, 53, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 93, 95, 128, 149, 150, 152, 154, 161, 171, 173], "h1": 129, "h2": 129, "ha": [3, 7, 11, 13, 16, 17, 18, 19, 22, 24, 27, 28, 29, 32, 34, 36, 37, 38, 39, 40, 42, 44, 45, 47, 49, 51, 52, 55, 56, 57, 59, 65, 66, 68, 69, 70, 71, 72, 74, 76, 77, 79, 80, 83, 87, 89, 90, 91, 92, 93, 95, 96, 98, 101, 102, 103, 106, 122, 127, 128, 129, 132, 133, 134, 135, 138, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177], "habit": 175, "hack": 172, "hacker_new": 68, "had": [36, 37, 70, 74, 77, 80, 128, 148, 149, 150, 152, 154, 155, 156, 157, 162, 166, 167, 170, 171, 172, 173, 174, 175, 177], "hadlei": [165, 175], "hadn": 150, "half": [53, 146, 148, 153, 164, 174], "halt": 71, "halv": 149, "hamm": 30, "hamming_distance_a": 30, "hamming_distance_b": 30, "hamper": 80, "hamster": 154, "hand": [0, 47, 55, 56, 68, 75, 77, 98, 101, 102, 146, 147, 148, 150, 152, 153, 155, 162, 165, 166, 167, 170, 173, 175, 177], "handcraft": [150, 154], "handel": [22, 73], "handi": [24, 122, 123, 132, 143, 144, 150, 154, 157, 165, 166, 169, 170, 172, 175, 176, 177], "handl": [5, 24, 34, 35, 36, 49, 52, 65, 66, 68, 69, 70, 72, 77, 125, 127, 133, 141, 148, 150, 152, 153, 154, 155, 166, 173, 175], "handler": 49, "handwritten": [5, 7, 16, 18, 149], "hang": 146, "hank": 77, "happen": [27, 34, 35, 36, 40, 47, 48, 96, 98, 103, 104, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163], "happi": [4, 11, 13, 49, 52, 53, 74, 87, 94, 101, 147, 166, 171, 175], "happin": 13, "happind": [11, 13], "happini": 143, "har": [150, 154], "hard": [22, 39, 68, 78, 89, 94, 146, 147, 148, 151, 153, 154, 155, 177], "hardcod": [147, 155], "harder": [150, 153], "hardtop": 144, "hardwar": [18, 19, 51, 98, 146, 147, 149, 150, 152, 153, 154, 155, 157], "hariyama": 143, "harmless": 163, "harmon": [1, 27], "harper": 77, "harri": [102, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142], "harvard": 172, "has_w2": 90, "hasattr": 102, "hash": [52, 84, 89], "hashabl": 56, "hasn": [147, 148, 150, 153], "hat": [32, 150, 153], "hatch": 122, "hatchback": [132, 133, 144], "haunter": 143, "have": [0, 1, 4, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 23, 27, 31, 32, 34, 35, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 62, 63, 64, 66, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 87, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 103, 104, 106, 109, 115, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 185], "haven": [59, 147, 148, 152, 154, 167, 169, 170, 175], "hawk": 39, "hawlucha": 143, "haxoru": 143, "hazi": 177, "he": [39, 45, 52, 68, 71, 72, 101, 150, 154, 176], "head": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 122, 132, 143, 144, 146, 148, 152, 155, 161, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 177, 179], "header": [74, 77, 135, 136, 139, 141, 142, 143, 172, 177], "health": [11, 13, 148], "heard": 155, "heart": [26, 148, 154], "heat": [177, 180], "heatmap": [177, 179], "heatmor": 143, "heatran": 143, "heavi": [122, 150, 172, 175], "heavili": [167, 168], "hei": [39, 54, 154], "height": [53, 95, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 163, 166, 167, 173], "height_ratio": 172, "held": 175, "heliolisk": 143, "helioptil": 143, "hello": [22, 24, 35, 36, 37, 39, 43, 44, 47, 52, 53, 54, 56, 66, 70, 74, 77, 80, 84, 89, 90, 92, 93, 94, 95, 96, 100, 102, 103, 157, 169], "hello009": 52, "hello99": 52, "hello99world66": 52, "hello_world": 157, "hellohellohello": 52, "helloworld": [47, 48, 49, 52, 53, 54, 56], "help": [11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 24, 39, 42, 47, 48, 49, 53, 59, 60, 61, 64, 65, 71, 72, 74, 78, 80, 85, 88, 90, 96, 101, 106, 108, 112, 122, 123, 125, 132, 133, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 159, 162, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 177, 185], "helper": [47, 148, 149, 151, 158], "helper_funct": [148, 149, 152, 154, 155], "helsinki": 68, "henc": [42, 43, 47, 48, 49, 51, 52, 53, 54, 57, 59, 68, 75, 79, 80, 92, 94, 95, 96, 98, 101, 104, 127, 146, 147, 148, 154, 161, 162, 165, 166, 173, 174, 175, 177], "her": [94, 174], "heracross": 143, "heracrossmega": 143, "herdier": 143, "here": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 34, 35, 36, 37, 38, 39, 45, 47, 48, 49, 51, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 70, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 89, 90, 91, 92, 94, 95, 96, 101, 102, 103, 104, 107, 108, 111, 112, 115, 127, 128, 129, 133, 134, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185], "hereon": 177, "heterogen": [54, 132, 134, 140], "hex": [51, 52, 164, 166, 168], "hexa": 80, "hexadecim": [51, 52, 80, 91, 94], "hexagon": 166, "hexpoint": 106, "hf": 155, "hh": 52, "hhmm": [60, 61], "hi": [39, 55, 66, 71, 94, 154, 174, 175], "hiberfil": 69, "hidden": [0, 7, 34, 101, 148, 149, 150, 151, 153, 154, 156, 157], "hidden_unit": [148, 149, 150, 151, 156, 157], "hide": [36, 38, 101, 164, 172], "hiden": 149, "hierarch": [132, 133, 135, 142, 179], "hierarchi": 83, "high": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 81, 122, 123, 125, 126, 132, 146, 149, 150, 152, 153, 154, 162, 166, 171, 172, 173, 174, 176], "higher": [11, 12, 13, 14, 15, 16, 17, 18, 19, 44, 79, 93, 98, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 165, 166, 172, 174], "higher_order_funct": 36, "highest": [8, 80, 132, 146, 148, 149, 150, 153, 161, 166, 169, 171, 173], "highli": [0, 68, 102, 106, 125, 149, 154, 155, 162, 166, 167, 169, 170, 171, 172, 173, 176], "highlight": [154, 155, 163, 165, 177, 179], "hill": [4, 5], "himself": 106, "hint": [72, 130, 144, 146, 148, 149, 150, 152, 154, 173], "hippopota": 143, "hippowdon": 143, "hispan": 161, "hist": [8, 11, 13, 122, 123, 167, 168, 176, 177], "hist_kw": 163, "histogram": [8, 11, 13, 163, 166, 167, 168, 170, 173, 176], "histohram": [8, 11, 13], "histori": 8, "histplot": 168, "histtyp": 176, "hit": [70, 155], "hitmonchan": 143, "hitmonle": 143, "hitmontop": 143, "hl": 164, "hls_palett": 164, "hmm": [154, 155, 172, 176], "hmmm": [153, 174], "ho": [52, 143, 152, 153, 154, 155], "hobbi": 133, "hoffman": 161, "hold": [16, 17, 18, 19, 53, 76, 77, 90, 106, 126, 150, 155, 157, 169, 172, 174, 177], "holi": 154, "home": [101, 146], "homemad": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "homepag": 155, "homework": [166, 167, 170, 173, 175], "homogen": [54, 126], "hon": 24, "honchkrow": 143, "honda": 144, "honedg": 143, "honei": 49, "honest": 169, "honestli": [167, 171, 172, 175], "honk": 96, "honor": 175, "hood": [171, 172], "hook": 150, "hoopahoopa": 143, "hoorai": 43, "hoothoot": 143, "hope": [47, 52, 74, 95, 146, 161, 165, 167, 173, 175, 176], "hopefulli": [149, 150, 152, 154, 155], "hoppip": 143, "horac": [150, 154], "horitzont": 129, "horizon": [150, 174], "horizont": [31, 39, 52, 125, 129, 150, 154, 162, 169, 170, 171, 172, 173, 175, 177], "horizontalalign": 154, "horrai": 43, "horsea": 143, "horsepow": [132, 133, 143, 144], "hose": 147, "host": [146, 153, 155], "hostnam": [71, 153], "hot": [25, 107, 111, 155, 167], "hot_r": 167, "hotz": 154, "houndoom": 143, "houndoommega": 143, "houndour": 143, "hour": [60, 61, 63, 64, 65, 95, 103, 122, 147, 154, 155, 174, 185], "hous": [0, 102, 146, 175], "how": [0, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 35, 36, 37, 38, 39, 42, 44, 47, 48, 49, 51, 54, 55, 57, 59, 65, 68, 70, 71, 72, 75, 76, 77, 79, 81, 82, 84, 93, 94, 95, 98, 101, 102, 103, 104, 109, 132, 133, 134, 136, 138, 139, 140, 141, 142, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 165, 166, 170, 172, 173, 174, 175, 176, 177, 182, 185], "howard": [147, 152], "howdi": 39, "howev": [38, 39, 43, 44, 47, 54, 56, 57, 66, 71, 72, 76, 89, 90, 92, 93, 96, 98, 101, 102, 103, 104, 106, 126, 127, 128, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 178], "hp": 143, "href": 146, "hspace": [16, 17, 18, 19, 172], "hstack": [8, 11, 125, 176], "hsv": [165, 167, 170, 171, 173, 174], "hsv_r": [167, 170], "html": [24, 25, 52, 53, 68, 101, 107, 111, 128, 132, 147, 148, 149, 164, 175, 179], "http": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 122, 128, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 175, 179], "hu": 49, "hub": [152, 154], "hue": [164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "hue_kw": [176, 177], "hue_ord": [165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "hug": 150, "huge": [32, 92, 142, 152, 154, 164, 169, 172, 175, 177], "huggingfac": [149, 152, 154], "huggingface_hub": 155, "human": [0, 38, 39, 57, 89, 98, 147, 155, 176, 184], "hundr": [38, 95, 146, 177], "hungari": 166, "hungri": [44, 152], "hunt": [40, 57, 74, 94, 154], "huntail": 143, "husl": [164, 173], "huyen": 155, "hwc": [149, 150], "hybrid": [154, 172], "hydreigon": 143, "hyperbol": 82, "hyperparamat": 185, "hyperparamet": [147, 148, 149, 151, 153, 154, 157], "hypno": 143, "hypot": [80, 82], "hypothesi": 7, "i": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 34, 35, 36, 37, 38, 40, 42, 43, 44, 45, 46, 49, 51, 57, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 75, 77, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 102, 103, 104, 107, 109, 110, 111, 113, 116, 122, 123, 125, 126, 127, 128, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 184], "i1": 31, "i2": 31, "i3": 31, "i9": 155, "i_1": 31, "i_2": 31, "i_3": 31, "i_m": 31, "i_n": 31, "i_num": 72, "ia": [37, 161], "iat": 132, "ibm": 52, "ic": [9, 143], "icefir": [167, 169, 170, 171, 172, 175, 176, 177], "icefire_r": 167, "iceland": [11, 13, 71], "icon": [24, 154, 185], "id": [43, 74, 77, 80, 96, 102, 122, 142, 146, 151, 161, 162, 173, 174, 175], "id_var": [171, 177], "idea": [28, 29, 34, 35, 85, 89, 94, 96, 106, 147, 148, 149, 151, 152, 153, 154, 155, 167, 169, 170, 171, 175, 176, 177], "ideal": [48, 147, 148, 149, 152, 153, 154, 155, 161, 162, 164, 169, 172, 173, 175, 176], "ident": [28, 29, 125, 126, 128, 132, 142, 166, 173, 174, 176], "identif": 8, "identifi": [0, 7, 22, 37, 39, 52, 57, 71, 74, 79, 80, 83, 89, 90, 95, 96, 100, 101, 132, 133, 134, 137, 139, 141, 149, 155, 173, 175], "identitytransform": 170, "ideologi": 154, "idual": 154, "idx": [150, 154], "idx1": 149, "idx3": 149, "ieee754_realbin": 30, "ifetch": 171, "ifram": 155, "igglybuff": 143, "igma": 29, "ignor": [47, 48, 49, 84, 89, 136, 139, 147, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179], "ignore_index": [137, 138], "igor": 151, "ii": [25, 107, 111, 165], "iii": 161, "iinfo": 130, "ij": [28, 29, 31], "ill": 90, "illeg": [70, 89], "illumin": 164, "illumis": 143, "illustr": [3, 4, 5, 10, 11, 12, 13, 14, 15, 16, 35, 47, 48, 56, 71, 72, 85, 94, 106, 150, 154, 161, 162, 163, 170, 172, 176, 177], "iloc": [132, 143], "imag": [0, 4, 5, 7, 9, 16, 17, 18, 19, 24, 25, 68, 78, 91, 102, 107, 111, 146, 147, 148, 149, 151, 156, 157, 159, 162, 164, 166, 175, 176, 177], "image01": [150, 151, 157], "image02": 150, "image101": 150, "image102": 150, "image154": 150, "image155": 150, "image167": 150, "image24": 150, "image25": 150, "image37": 150, "image_batch": 154, "image_class": 150, "image_conv_feature_map": 154, "image_out_of_conv": 154, "image_out_of_conv_flatten": 154, "image_out_of_conv_flattened_reshap": 154, "image_patch_1": 154, "image_patch_1_posit": 154, "image_patch_2": 154, "image_patch_2_posit": 154, "image_patch_3": 154, "image_patch_3_posit": 154, "image_path": [150, 151, 152, 153, 154, 155, 156, 157], "image_path_list": 150, "image_permut": 154, "image_resolut": 154, "image_s": [16, 17, 18, 19, 152, 153], "image_transform": 152, "imageclassif": [152, 153, 154, 155], "imagefold": [151, 156, 157], "imagefoldercustom": 150, "imagenet": [148, 150, 152, 153, 154, 155], "imagenet1k_v1": 152, "imagenet_v1": 152, "imagenet_v2": 152, "imagin": [39, 96, 132, 147, 148, 149, 153, 154, 155], "imaginari": [51, 56, 70, 91, 92, 130, 165], "imbal": 163, "imdisk": 69, "img": [69, 149, 150, 152, 155, 156, 157, 166], "img_as_arrai": 150, "img_batch": [150, 156, 157], "img_custom": 150, "img_permut": 150, "img_singl": [150, 156, 157], "img_siz": 154, "imgseek": 24, "imit": 12, "immedi": [35, 44, 47, 48, 65, 66, 71, 74, 87, 106, 154, 155, 161, 185], "immens": 163, "immut": [47, 52, 53, 54, 55, 56, 74, 91, 92, 129], "imp": 80, "impact": [165, 170], "imperfect": 51, "implement": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 36, 37, 38, 49, 51, 53, 54, 72, 74, 80, 89, 98, 101, 103, 104, 106, 128, 146, 147, 148, 149, 152, 154, 165, 166, 167, 177, 184, 185], "impli": [52, 53, 68, 69, 89, 95], "implic": 170, "implicit": [52, 106], "implicitli": [51, 89, 106, 144], "import": [0, 1, 22, 24, 25, 27, 28, 29, 30, 31, 32, 37, 39, 42, 48, 51, 54, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 76, 79, 81, 82, 84, 88, 89, 90, 92, 96, 98, 100, 101, 106, 107, 111, 122, 123, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "import_ipynb": 80, "importantli": 149, "importerror": 70, "importlib": 80, "imposs": [94, 154, 155, 172], "improp": 70, "improv": [0, 11, 12, 13, 14, 15, 16, 17, 18, 19, 74, 132, 141, 146, 147, 149, 150, 152, 153, 154, 155, 184], "imshow": [16, 17, 18, 19, 149, 150, 152, 154], "in_channel": [149, 150, 151, 154, 156, 157], "in_featur": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "inan": 172, "inbuilt": [91, 129, 136], "inc": 37, "incas": 146, "inch": 122, "incid": [161, 173], "includ": [6, 24, 25, 34, 39, 44, 47, 48, 49, 52, 53, 68, 71, 80, 84, 85, 87, 92, 98, 102, 106, 107, 109, 111, 123, 126, 129, 132, 133, 144, 147, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 167, 171, 177, 178, 182, 185], "inclus": [80, 81, 126, 132, 164], "incom": [68, 77, 101, 166], "incompat": 154, "incomplet": 89, "inconsist": [70, 146], "incorpor": [149, 150, 153, 154, 162], "incorrect": [44, 48, 70, 89, 98, 155], "increas": [7, 11, 12, 13, 14, 15, 16, 17, 48, 49, 53, 89, 148, 149, 150, 152, 153, 154, 155, 164, 166, 170, 171, 174, 175, 177], "incred": 153, "increment": [47, 48, 49, 76, 104], "ind": 53, "inde": [170, 171, 172, 173, 177], "indefinit": 48, "indent": [22, 43, 44, 46, 47, 49, 68, 70, 74, 76, 100], "indentationerror": [70, 89], "independ": [4, 5, 12, 14, 15, 16, 17, 98, 162, 165, 173, 174], "index": [3, 4, 11, 13, 14, 15, 16, 17, 18, 19, 28, 29, 30, 35, 39, 48, 52, 55, 56, 65, 70, 71, 80, 92, 94, 125, 126, 143, 144, 147, 148, 149, 150, 152, 153, 154, 155, 166, 173, 175, 176, 177], "index1": 133, "index2": 133, "index_on": 132, "indexerror": [52, 53, 54], "india": [37, 53, 54, 57, 68], "indianr": 168, "indic": [1, 8, 12, 16, 17, 18, 19, 43, 52, 53, 54, 65, 68, 70, 89, 127, 136, 137, 140, 147, 151, 152, 153, 154, 155, 156, 157, 161, 165, 167, 169, 171, 172, 173, 175], "indirect": 103, "indirectli": 72, "individu": [52, 55, 68, 80, 127, 148, 151, 154, 163, 167, 169, 171, 172, 173, 174, 175, 176, 178], "indivis": 175, "indonesia": [54, 68], "industri": [0, 133, 134, 146], "ineffici": [47, 78], "inf": [34, 80, 128, 130, 170], "infam": 154, "infer": [90, 129, 132, 133, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 166, 170, 172, 174, 175, 176, 177], "inference_mod": [148, 149, 150, 151, 152, 155, 156, 157], "infernap": 143, "inferno": 167, "inferno_r": 167, "infin": [27, 28, 29, 82, 128, 130], "infinit": [28, 29, 48, 51, 66, 78, 95, 146, 149, 152], "infit": 34, "influenc": [148, 155], "influenti": 153, "info": [18, 19, 84, 102, 103, 106, 130, 151, 152, 153, 154, 155, 156, 157, 168], "inform": [0, 6, 8, 25, 45, 59, 68, 69, 71, 76, 90, 106, 107, 109, 111, 132, 133, 149, 150, 152, 153, 154, 155, 169, 171, 173, 174, 175, 176, 177, 182], "infti": [27, 28, 29, 30], "ing": 39, "ingredi": [148, 150], "inher": [0, 164], "inheret": 153, "inherit": [22, 71, 72, 105, 106, 150, 154], "inhomogen": 127, "init": [6, 8, 106, 109, 153, 182], "init_notebook_mod": 11, "initi": [3, 11, 12, 13, 18, 19, 34, 35, 47, 48, 49, 52, 53, 56, 68, 75, 81, 83, 90, 96, 101, 102, 103, 106, 125, 126, 138, 147, 148, 150, 154, 165, 168, 176, 177], "initialzi": 147, "inkai": 143, "inlcud": 154, "inlin": [11, 27, 30, 79, 112, 122, 153, 154, 155, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "inner": [2, 7, 36, 37, 47, 48, 49, 75, 128, 132, 146, 170, 171, 172], "inner_arg": 170, "inner_f": 170, "inner_fun": 75, "inner_func": 96, "inner_funct": 96, "inner_kwarg": 170, "innermost": [48, 49], "inplac": [132, 136, 137, 138, 139, 141, 142, 143, 152, 153, 154, 155, 173], "input": [0, 4, 5, 7, 11, 13, 17, 18, 19, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 85, 88, 90, 91, 92, 93, 95, 98, 101, 102, 103, 104, 106, 108, 112, 127, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 150, 151, 152, 153, 156, 157, 159, 165, 169, 170, 171, 175, 176, 177, 178], "input_featur": 148, "input_i": 148, "input_param_nam": 13, "input_param_name_1": 11, "input_param_name_2": 11, "input_s": [150, 152, 153, 154, 155], "input_shap": [149, 150, 151, 152, 153, 156, 157], "input_to_model": 153, "inputsid": 103, "insert": [52, 55, 56, 84, 102, 125, 133, 142], "insid": [34, 36, 37, 38, 39, 40, 43, 44, 46, 49, 52, 53, 54, 55, 56, 57, 66, 68, 69, 71, 74, 75, 76, 77, 80, 84, 85, 87, 89, 90, 91, 92, 93, 94, 96, 101, 102, 103, 104, 106, 132, 146, 147, 149, 151, 152, 153, 154, 155, 157, 166, 171, 172, 173, 174, 177], "insight": [0, 166, 170, 171, 173], "inspect": [106, 139, 147, 149, 150, 153, 154], "inspir": [7, 18, 19, 56, 154], "insrantli": 24, "inst_creat": 106, "insta": 127, "instal": [68, 80, 87, 146, 148, 149, 150, 152, 153, 154, 155, 163], "instanc": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 37, 47, 51, 53, 61, 68, 70, 71, 80, 84, 89, 90, 92, 96, 103, 106, 128, 129, 132, 139, 140, 147, 148, 149, 150, 151, 154, 155, 156, 157, 169, 172, 177, 178], "instant": 79, "instanti": [51, 59, 101, 102, 106, 147, 148, 149, 151, 153, 154, 155, 156, 157], "instantli": 49, "instead": [7, 9, 16, 17, 18, 19, 24, 35, 36, 38, 40, 44, 48, 70, 80, 90, 98, 101, 102, 103, 104, 128, 132, 134, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 161, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 177], "instens": 150, "institut": 149, "instruct": [0, 6, 43, 66, 71, 89, 109, 151, 162, 181, 182], "int": [16, 17, 18, 19, 24, 34, 36, 37, 47, 48, 51, 52, 53, 54, 70, 71, 72, 84, 91, 92, 93, 94, 95, 102, 103, 122, 138, 139, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "int32": [126, 128, 129], "int64": [18, 19, 126, 129, 132, 133, 143, 144, 148, 155], "int8": [146, 152], "int_": 27, "int_1": 91, "int_2": 91, "intact": 165, "integ": [43, 45, 47, 49, 51, 52, 53, 54, 55, 56, 57, 59, 68, 71, 74, 78, 80, 81, 82, 84, 89, 91, 92, 93, 95, 125, 126, 132, 133, 134, 146, 148, 150, 151, 153, 156, 157], "integr": [151, 153], "intel": [98, 155], "intellig": [146, 149, 165, 173, 184], "intellij": 162, "intend": [9, 17, 19, 166, 177], "intens": [150, 165], "intent": [84, 165, 173], "inter": [171, 173, 174], "interac": 155, "interact": [0, 7, 11, 23, 24, 25, 35, 68, 80, 87, 94, 102, 107, 111, 132, 146, 153, 155, 162], "intercept": [57, 95, 163], "intercept_stderr": 163, "interchang": [132, 146, 170], "interest": [0, 35, 37, 39, 71, 96, 102, 138, 147, 154, 157, 162, 163, 164, 172, 173, 174, 175, 176], "interfac": [24, 38, 71, 101, 162, 164], "interg": 93, "intermedi": 98, "intermediari": [98, 154], "intern": [34, 35, 38, 49, 52, 53, 68, 70, 77, 81, 101, 102, 104, 133, 147, 148, 149, 164], "internet": [24, 155, 167], "interp": 130, "interpol": [150, 152, 153, 154, 155, 156, 157, 166, 175], "interpolationmod": [150, 152, 153, 154, 155], "interpret": [22, 24, 35, 39, 43, 47, 48, 49, 52, 70, 71, 74, 77, 78, 80, 84, 87, 88, 89, 93, 94, 95, 96, 100, 148, 150, 165, 173, 174, 175, 176], "interquartil": 172, "interrelationship": 177, "interrupt": 70, "intersect": [47, 92], "intersect1d": 130, "intersection_upd": 56, "interspers": 148, "interv": [5, 14, 15, 16, 17, 27, 28, 29, 122, 125, 129, 162, 165, 167, 169, 171, 172, 173, 174, 175], "intervent": 184, "interview": [175, 184], "intimid": [154, 155], "intiuit": 24, "intrigu": [0, 161], "intrins": [161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "intro": [40, 181], "introduc": [7, 38, 52, 87, 147, 148, 149, 153, 154, 171, 172, 176, 177], "introduct": [2, 52, 148, 149, 153, 154, 184], "introductori": 166, "intrud": 149, "intuit": [8, 23, 38, 132, 147, 149, 150, 153, 169], "inv": [31, 125], "invalid": [15, 46, 52, 70, 71, 80, 88, 90, 93, 94, 128], "inventor": 47, "invers": [26, 49, 65, 82, 125, 128], "invert": [31, 39], "invest": 173, "investig": [148, 153], "invis": 172, "invoc": [79, 165], "invok": [37, 57, 102, 104], "involv": [0, 51, 93, 95, 103, 146, 147, 148, 149, 150, 151, 154, 155, 161, 166, 169, 171, 175, 184], "io": [148, 149, 150, 151, 155, 156, 157, 159], "ioerror": 71, "ion": [25, 107, 111], "iot": 185, "ip": 175, "iplot": 11, "ipykernel_3695928": 146, "ipynb": [20, 24, 69, 80, 108, 112, 146, 150, 153, 155, 158], "ipynb_checkpoint": [69, 155], "ipython": [24, 34, 35, 36, 37, 38, 40, 48, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 88, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 127, 128, 136, 139, 141, 144, 149, 155, 162, 164, 166, 170, 175], "iqr": 171, "ireland": 166, "iri": [3, 5, 10, 14, 122, 161, 164, 166, 167, 169, 170, 171, 179], "iris_data": [122, 179], "iris_typ": [10, 14], "iron": 34, "irrespect": 49, "is_avail": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "is_cal": 37, "is_dir": [150, 151, 152, 153, 156, 157], "is_empti": 74, "is_even": [37, 74], "is_fil": [148, 149, 150, 152, 153, 154], "is_light_on": 90, "is_mar": [45, 47], "is_marri": 90, "is_name_long": 37, "is_odd": 37, "is_prim": 74, "is_return": 37, "is_uniqu": 141, "is_valid_vari": 39, "isalnum": 52, "isalpha": [48, 52], "isatti": 68, "isclos": [80, 149], "isdecim": [48, 52], "isdigit": 52, "isdisjoint": 56, "isfinit": [80, 82], "isidentifi": 52, "isin": [171, 173], "isinf": [80, 82], "isinst": [51, 92, 102, 103], "island": 37, "islow": 52, "isn": [7, 18, 19, 132, 139, 146, 147, 149, 150, 151, 153, 154, 155, 157, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "isnan": [80, 82], "isnul": 132, "isnumer": 52, "isol": [24, 96], "isotrop": [28, 29], "isprint": 52, "isqrt": 80, "isspac": [49, 52], "issu": [5, 51, 57, 76, 123, 146, 147, 148, 149, 150, 155, 164, 172, 176], "issubset": 56, "issuecom": 155, "issuperset": 56, "istitl": 52, "isupp": 52, "isuzu": 144, "ital": 147, "item": [8, 11, 13, 16, 17, 18, 19, 34, 35, 37, 39, 40, 47, 48, 52, 56, 57, 70, 71, 74, 79, 80, 84, 92, 102, 125, 133, 136, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 173], "items": [126, 129, 130], "iter": [4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 35, 37, 41, 49, 57, 70, 78, 80, 82, 94, 97, 133, 149, 150, 151, 153, 154, 155, 156, 157, 162, 173, 175, 177], "iter_obj": 34, "iteract": 155, "iterrow": [132, 143, 155], "itertool": 167, "its": [0, 1, 4, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 35, 36, 37, 47, 48, 51, 52, 53, 54, 55, 56, 59, 60, 61, 68, 74, 75, 77, 80, 84, 92, 95, 96, 98, 101, 102, 103, 106, 132, 133, 134, 135, 136, 138, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 166, 170, 171, 172, 177, 178, 179], "itself": [7, 18, 19, 34, 36, 38, 47, 52, 54, 55, 56, 68, 72, 74, 78, 98, 101, 102, 103, 106, 146, 147, 154, 165, 172, 173, 176, 184], "iv": 39, "ivan": 77, "ivysaur": 143, "j": [4, 5, 7, 28, 29, 30, 37, 47, 48, 49, 52, 53, 60, 61, 68, 90, 91, 102, 125, 126, 133, 154, 163, 176], "jack": 135, "jaguar": 144, "jai": 154, "jam": 52, "jan": [60, 61, 87, 146, 161], "jane": [102, 135], "januari": [39, 45, 49, 59, 60, 61, 64, 65], "japan": [68, 144], "japanesecar": 144, "jargon": 95, "jason": 93, "java": [22, 47, 48, 52, 53, 55, 68, 89, 101, 106], "javascrip": 68, "javascript": [39, 52, 57, 68, 71, 98, 101], "jellic": 143, "jenner": 47, "jeremi": [147, 152], "jet": [164, 167], "jet_r": 167, "jetbrain": 162, "jft": 154, "jigglypuff": 143, "jill": 135, "jirachi": 143, "jit": [149, 150], "jitter": [170, 175], "jlufe": 55, "jo": [8, 39, 155], "job": [0, 39, 52, 98, 146, 164, 165, 169, 172, 176], "joe": [132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 161], "john": [28, 54, 77, 122, 161, 175], "join": [30, 52, 53, 54, 56, 68, 94, 153, 154, 155, 172], "joined_df": 132, "joint": [165, 174, 180], "jointgrid": [166, 168], "jointplot": [166, 167], "jolteon": 143, "joltik": 143, "jose": 135, "journal": 165, "journei": [153, 165, 177, 185], "jpeg": [150, 151, 152, 153, 154, 155, 157], "jpg": [150, 152, 153, 155], "jr": [122, 143], "json": [24, 80, 132], "json_exampl": 68, "json_str": 132, "jude": 39, "juic": 91, "jul": 87, "juli": [45, 154, 155], "jumbl": [148, 165], "jump": [27, 49, 52, 154, 165, 171, 173, 177], "jumpluff": 143, "jun": [60, 62, 87], "jun21_00": 153, "june": [45, 49, 59, 60, 61, 62, 65, 153, 163], "jupyt": [6, 9, 20, 22, 25, 70, 94, 107, 108, 109, 111, 112, 150, 151, 153, 156, 157, 162, 164, 181, 182, 184, 185], "jupytext": [6, 109, 182], "just": [5, 9, 16, 17, 18, 19, 34, 35, 37, 49, 52, 79, 83, 84, 87, 89, 92, 94, 106, 132, 134, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "justcount": 102, "justifi": [52, 94], "juventu": 122, "jvm": 98, "jynx": 143, "k": [2, 28, 29, 32, 47, 48, 52, 81, 122, 123, 149, 150, 152, 153, 154, 155, 161, 163, 164, 169, 170], "k_depth": 175, "k_mean": 10, "kabuto": 143, "kabutop": 143, "kadabra": 143, "kaggl": [9, 174], "kakuna": 143, "kangaskhan": 143, "kangaskhanmega": 143, "kappa": 81, "kapur": 5, "karen": 175, "karpathi": 146, "karrablast": 143, "kate": 54, "kb": [80, 149], "kcsy2": 80, "kde": [163, 166, 168, 172, 176], "kdeplot": [164, 166, 167, 176, 177], "kecleon": 143, "keen": [37, 174], "keep": [4, 5, 25, 27, 35, 39, 48, 77, 83, 102, 107, 111, 133, 138, 146, 148, 149, 150, 152, 153, 154, 155, 161, 163, 164, 165, 166, 172, 173, 174, 175, 176, 177], "keepdim": 130, "kei": [37, 40, 42, 45, 47, 53, 54, 56, 70, 71, 89, 91, 92, 95, 132, 134, 139, 141, 144, 147, 148, 150, 151, 153, 154, 155, 156, 157, 167, 176], "keldeoordinari": 143, "keldeoresolut": 143, "kenel": 168, "kenneth": [161, 164], "kept": [83, 147, 149, 154, 164], "kera": [155, 184], "kernel": [6, 24, 109, 149, 154, 162, 164, 167, 168, 172, 175, 182], "kernel_density_estim": 168, "kernel_list": 168, "kernel_s": [149, 150, 151, 154, 156, 157], "keyboard": 22, "keyboardinterrupt": [48, 66, 70, 71], "keyerror": [55, 56, 135, 136, 139, 141], "keyword": [22, 36, 37, 40, 43, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 71, 74, 75, 79, 80, 84, 86, 90, 94, 96, 100, 101, 102, 106, 122, 164, 166, 175, 177], "keyword_ord": 52, "kg": 51, "kid": 163, "kilcher": 154, "kill": 177, "kind": [7, 34, 35, 71, 74, 77, 89, 108, 112, 122, 132, 139, 140, 146, 147, 148, 149, 150, 151, 152, 154, 155, 157, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177], "kindli": 177, "kingdra": 143, "kingler": 143, "kingma": 154, "kirlia": 143, "kit": 155, "kivi": 24, "kiwi": [47, 56], "klang": 143, "klefki": 143, "klink": 143, "klinklang": 143, "km": 103, "kmean": 10, "knew": 150, "know": [10, 23, 35, 36, 37, 38, 45, 47, 48, 49, 51, 71, 74, 77, 78, 80, 87, 90, 92, 94, 98, 103, 104, 106, 125, 127, 129, 135, 136, 139, 141, 146, 147, 148, 150, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185], "knowledg": [7, 72, 150, 152, 175, 176], "known": [1, 8, 10, 11, 13, 24, 28, 29, 36, 47, 48, 51, 54, 55, 75, 79, 90, 93, 98, 101, 102, 104, 128, 146, 147, 148, 149, 150, 151, 154, 155, 161, 165, 167, 169, 170, 171, 173, 175, 176, 177], "knoxvil": 161, "koehrsen": 148, "kof": 143, "kool": 52, "korea": 122, "krabbi": 143, "kricketot": 143, "kricketun": 143, "kristian": 155, "krokorok": 143, "krookodil": 143, "kw": [170, 176, 177], "kwarg": [37, 41, 71, 106, 139, 149, 150, 167, 170, 176, 177], "kwiatkowski": 147, "kyogr": 143, "kyogreprim": 143, "kyurem": 143, "kyuremblack": 143, "kyuremwhit": 143, "l": [7, 11, 27, 35, 39, 47, 48, 49, 52, 53, 54, 55, 56, 71, 79, 93, 122, 147, 154, 155, 173], "l1": 148, "l1loss": [147, 148], "l2": 148, "la_": [25, 107, 111], "label": [0, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 110, 122, 123, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 147, 149, 150, 152, 154, 155, 156, 157, 165, 172, 173, 175, 176, 177, 179, 181], "label_batch": [150, 154, 156, 157], "label_custom": 150, "label_dist": 168, "label_map": [17, 19], "label_out": 154, "label_singl": [150, 156, 157], "label_smooth": 155, "labelbottom": [16, 17, 18, 19], "labelleft": [16, 17, 18, 19], "labels": 155, "labl": [132, 148], "labour": 166, "lack": [0, 152], "laet": [17, 19], "lairon": 143, "lam": 169, "lambd": 81, "lambda": [27, 30, 35, 37, 88, 132, 172], "lampent": 143, "lampi\u00e3o": 30, "land": [37, 115], "landorusincarn": 143, "landorustherian": 143, "lane": 149, "langchain": 184, "languag": [22, 24, 37, 38, 39, 47, 48, 49, 52, 53, 55, 57, 68, 70, 74, 87, 88, 89, 90, 94, 95, 101, 102, 106, 108, 112, 146, 149, 152, 154, 176, 184], "lanturn": 143, "laod": 179, "lapra": 143, "larg": [0, 24, 27, 28, 29, 30, 31, 32, 35, 53, 69, 70, 72, 80, 85, 95, 98, 122, 123, 126, 128, 132, 135, 142, 144, 146, 147, 149, 150, 152, 153, 154, 155, 162, 163, 170, 171, 175], "larger": [24, 36, 74, 83, 93, 98, 128, 146, 147, 149, 150, 151, 152, 153, 154, 155, 175], "largest": [56, 80, 82, 146, 154, 155], "larvesta": 143, "larvitar": 143, "last": [7, 24, 34, 35, 36, 37, 38, 40, 47, 48, 49, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 84, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 127, 128, 129, 132, 139, 141, 142, 146, 149, 150, 153, 154, 155, 162, 166, 167, 170, 172, 173, 175, 177], "last_index": [52, 136], "last_lett": 52, "last_nam": [37, 45, 47, 52, 55, 74, 90], "last_nm": 77, "lastli": [68, 171, 173, 177], "lastnam": [40, 74, 77, 90, 94, 101], "late": [161, 163], "latenc": [1, 8, 9, 149, 155], "latency_from": 8, "latency_grid": 8, "latency_rang": 8, "latency_to": 8, "latent": [154, 174], "later": [35, 38, 49, 72, 84, 89, 90, 94, 95, 102, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 165, 167, 169, 170, 171, 174, 177], "latest": [24, 146, 150, 152, 153, 154, 155, 163, 175], "latex": 154, "latia": 143, "latiasmega": 143, "latio": 143, "latiosmega": 143, "latitud": 175, "latter": [103, 146, 153], "lattic": 176, "latvia": 166, "launch": [24, 153, 155], "layer": [0, 7, 101, 146, 147, 148, 149, 150, 151, 155, 156, 157], "layer_1": 148, "layer_2": 148, "layer_3": 148, "layer_norm": 154, "layer_numb": [18, 19], "layer_stack": 149, "layout": [11, 151, 155, 157, 177], "lazi": [35, 47], "lb": 122, "ldexp": [80, 82], "ldot": [52, 154], "lead": [52, 70, 80, 148, 149, 152, 153, 154], "leafeon": 143, "leap": 174, "learn": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 34, 35, 36, 38, 39, 40, 44, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 115, 123, 125, 132, 134, 135, 137, 139, 140, 141, 142, 144, 148, 149, 150, 151, 156, 157, 159, 160, 161, 165, 166, 167, 171, 173, 174, 175, 176, 177, 178], "learnabl": [153, 154], "learnable_embed": 154, "learner": [146, 153], "learning_r": [11, 12, 13, 151, 157], "learnpytorch": 159, "learnt": [18, 19, 169, 170, 171, 175, 177], "least": [7, 18, 19, 24, 35, 39, 53, 55, 66, 89, 96, 102, 106, 128, 148, 149, 150, 152, 154, 155, 163, 166, 167, 169, 170, 171, 173, 175], "leav": [48, 56, 147, 148, 149, 150, 152, 153, 155, 167, 169, 170, 172, 173, 175, 177], "leavanni": 143, "lectur": [52, 149, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "lecun": 154, "ledft": 163, "ledian": 143, "ledyba": 143, "lee": [122, 161], "left": [16, 17, 18, 19, 27, 28, 30, 32, 34, 39, 47, 52, 60, 61, 63, 83, 94, 95, 103, 104, 122, 123, 127, 132, 148, 149, 150, 152, 153, 154, 155, 162, 163, 166, 170, 172, 173, 174], "leftov": 149, "leg": [55, 103], "legandari": 143, "legend": [8, 10, 13, 14, 15, 16, 17, 25, 107, 111, 122, 123, 147, 150, 155, 165, 167, 170, 172, 173, 174, 175, 176, 177], "legend_": 170, "legend_el": 155, "legend_out": [165, 174, 177], "legendari": 143, "lego": [147, 154], "lembk": 161, "lemon": [47, 71], "len": [14, 15, 16, 17, 18, 19, 28, 29, 30, 35, 37, 47, 48, 49, 52, 56, 57, 61, 90, 95, 125, 136, 139, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "length": [9, 10, 14, 35, 39, 40, 47, 51, 52, 53, 56, 81, 90, 92, 95, 101, 103, 122, 125, 128, 132, 139, 141, 143, 144, 148, 149, 150, 152, 153, 154, 155, 156, 157, 161, 163, 165, 166, 169, 173, 177], "length_1": 155, "length_2": 155, "lengthi": [35, 83, 172], "leq": 27, "lesli": 161, "less": [8, 11, 13, 35, 43, 44, 45, 48, 49, 57, 66, 72, 82, 95, 98, 104, 132, 146, 147, 148, 150, 152, 153, 154, 155, 165, 176], "lesser": [44, 132], "lesson": [132, 152, 153], "let": [1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 56, 57, 59, 65, 66, 68, 70, 71, 74, 75, 76, 78, 79, 80, 84, 93, 94, 95, 96, 101, 102, 103, 104, 106, 109, 126, 127, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182], "letter": [28, 29, 37, 39, 47, 48, 49, 52, 56, 57, 70, 80, 88, 90, 146], "lettervalu": [174, 180], "level": [5, 8, 14, 15, 16, 17, 22, 24, 46, 51, 83, 115, 122, 132, 133, 135, 136, 141, 149, 150, 153, 155, 157, 161, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "level_0": 133, "level_index": 136, "leverag": [146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 159, 175], "lewi": 161, "lex": 152, "lf": 155, "lfloor": 95, "lgamma": [80, 82], "li": 26, "lib": [52, 61, 80, 130, 136, 139, 140, 141, 146, 149, 150, 161, 164, 168, 170], "librari": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 28, 29, 52, 82, 85, 89, 123, 125, 132, 133, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 184, 185], "licens": [24, 132, 143, 144, 155], "lickilicki": 143, "lickitung": 143, "lie": 106, "liepard": 143, "life": [11, 13, 23, 75, 154, 176, 185], "lifecycl": 153, "light": [122, 153, 154, 155, 164], "light_medium": 122, "lightblu": 163, "lighter": 177, "like": [0, 1, 3, 4, 5, 6, 7, 14, 15, 16, 17, 22, 24, 31, 32, 34, 35, 37, 38, 39, 44, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 77, 79, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 106, 108, 109, 112, 122, 123, 125, 128, 129, 132, 133, 134, 135, 136, 140, 141, 142, 143, 147, 148, 149, 151, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185], "likelihood": 168, "likewis": [140, 142], "lileep": 143, "lillig": 143, "lillipup": 143, "lim_": [27, 28, 29, 30], "lime": 71, "limit": [47, 51, 72, 75, 78, 92, 104, 146, 150, 152, 153, 154, 155, 161, 163, 169, 172, 175, 176, 177, 179], "limitless": 165, "limousin": 175, "linalg": [31, 125, 128, 130], "line": [4, 6, 11, 12, 13, 14, 15, 16, 17, 22, 24, 25, 26, 36, 38, 39, 42, 48, 49, 52, 56, 57, 68, 70, 71, 74, 75, 77, 79, 80, 88, 91, 92, 95, 96, 98, 102, 107, 108, 109, 111, 112, 128, 129, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177, 182], "line2d": [25, 107, 111], "line_count": 68, "line_kw": [165, 166], "linear": [2, 5, 7, 8, 10, 16, 17, 18, 19, 23, 57, 74, 103, 125, 146, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 169, 171, 174, 175, 177, 184], "linear1": 154, "linear2": 154, "linear_lay": [147, 154], "linear_layer_stack": 148, "linear_regress": [11, 12, 13], "linearli": [7, 18, 19, 165, 175], "linearregress": [11, 12, 13], "linearregressionmodel": 147, "linearregressionmodelv2": 147, "linearsegmentedcolormap": 164, "linecollect": 170, "linefe": 52, "lineplot": 175, "liner": 5, "linestyl": [122, 123, 173], "linewidth": [122, 123, 162, 163, 169, 170, 171, 172, 175, 176, 177, 178], "link": [24, 98, 146, 150, 151, 152, 153, 154, 155, 164, 165, 166, 174, 175, 177], "linoon": 143, "linregress": 163, "linregressresult": 163, "linspac": [11, 12, 13, 14, 15, 25, 107, 111, 125, 130, 162, 168, 175, 177], "linux": 68, "list": [9, 10, 14, 22, 34, 35, 37, 39, 40, 51, 56, 58, 59, 68, 70, 79, 81, 82, 83, 84, 88, 89, 91, 93, 94, 95, 101, 102, 103, 104, 106, 125, 126, 127, 128, 129, 132, 136, 138, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177], "list1": [47, 53, 74, 79, 80, 92, 134], "list2": [53, 79, 134], "list3": 53, "list_": 35, "list_1": 102, "list_enumer": 52, "list_nam": 53, "list_of_class_nam": 150, "list_of_cmap": 176, "list_of_hexa_color": 80, "list_of_list": [47, 57], "list_of_rgb_color": 80, "list_siz": 47, "listdir": 155, "listedcolormap": 173, "listliter": 89, "liter": [22, 52, 60, 61, 70, 71, 77, 84, 89, 90, 93, 94, 95, 100], "lithuania": 166, "litleo": 143, "littl": [8, 10, 16, 17, 18, 19, 96, 103, 127, 146, 148, 149, 153, 154, 155, 163, 165, 169, 170, 172, 173, 174, 176, 177], "litwick": 143, "live": [37, 45, 52, 68, 71, 95, 101, 147, 153, 154, 155], "liverpool": 177, "livestream": 154, "ljust": [30, 52, 94], "ll": [20, 35, 36, 47, 49, 51, 53, 54, 55, 56, 68, 69, 71, 74, 75, 76, 79, 83, 87, 101, 102, 108, 112, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 178], "llm": 184, "lm": [164, 175, 180], "lmax": 30, "lmplot": [166, 167], "ln_layer": 154, "lo": 39, "load": [68, 80, 84, 98, 152, 154, 156, 157, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180], "load_dataset": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "load_ext": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 153], "load_imag": 150, "load_state_dict": [147, 149, 153, 155], "loaded_effnetb2_food101": 155, "loaded_model_0": 147, "loaded_model_1": 147, "loaded_model_1_pr": 147, "loaded_model_2": 149, "loaded_model_2_result": 149, "loaded_model_pr": 147, "loader": [150, 151, 153, 154, 156, 157], "loc": [122, 123, 129, 132, 143, 155, 170, 172, 173], "loc_var": 75, "local": [4, 5, 22, 24, 35, 36, 59, 61, 62, 63, 64, 65, 66, 70, 76, 79, 86, 96, 102, 103, 106, 132, 146, 147, 149, 152, 167], "local_lang": 75, "local_tim": 65, "localtim": [63, 66], "locat": [0, 37, 39, 52, 53, 68, 70, 80, 83, 90, 94, 95, 103, 123, 143, 148, 150, 152, 153, 155, 156, 157, 170, 171, 172, 175], "locator_param": 163, "locket": 80, "log": [69, 80, 81, 82, 125, 129, 153], "log10": [51, 80, 82], "log1p": [80, 82], "log2": [80, 82], "log_dir": 153, "logarithm": [51, 80, 82], "logdir": 153, "logic": [42, 44, 78, 104, 106, 132, 136, 139, 150, 155, 185], "logical_and": 130, "logical_not": 130, "logist": [2, 165, 166], "logistic_regress": [8, 10, 14, 15, 16, 17], "logisticregress": [14, 15, 16, 17], "logit": [149, 150, 152, 154, 155, 156, 157], "lognormvari": 81, "logo": [68, 69], "logo1": 69, "logspac": [25, 107, 111], "logx": 165, "lombr": 143, "london": [37, 59, 63, 68, 71, 101, 136], "long": [37, 42, 48, 49, 51, 52, 57, 88, 89, 91, 96, 106, 129, 147, 149, 150, 152, 153, 154, 155, 156, 157, 163, 169, 170, 185], "long_nam": 37, "longer": [11, 12, 13, 14, 15, 16, 17, 18, 19, 38, 52, 80, 101, 147, 148, 149, 150, 152, 153, 154, 155, 168], "longest": 149, "longitud": 175, "longtensor": 148, "look": [3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 36, 37, 38, 39, 42, 49, 51, 68, 70, 75, 78, 80, 83, 84, 88, 89, 93, 94, 96, 103, 104, 106, 122, 123, 143, 146, 147, 148, 149, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "lookuna": 52, "lookup": [132, 149], "loop": [4, 22, 37, 40, 42, 50, 52, 53, 54, 55, 56, 66, 68, 71, 74, 77, 89, 94, 128, 132, 146, 151, 153, 154, 155, 156, 157, 173], "loos": 7, "lopunni": 143, "lopunnymega": 143, "lose": [68, 147], "loss": [93, 151, 153, 156, 157, 177], "loss_fn": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "lossfunct": 150, "lost": 52, "lot": [4, 5, 22, 25, 35, 47, 48, 52, 78, 80, 83, 98, 107, 111, 127, 146, 147, 148, 149, 150, 152, 153, 154, 163, 165, 173, 175], "lotad": 143, "loudr": 143, "love": [24, 37, 39, 56, 94, 146, 147, 155], "low": [11, 12, 13, 14, 15, 16, 17, 18, 19, 81, 123, 126, 150, 166, 171, 174], "lower": [28, 29, 39, 52, 93, 123, 127, 128, 146, 147, 149, 150, 153, 154, 155, 163, 171, 172, 174, 175, 176], "lowercas": [39, 52, 80, 88, 90, 146], "lowess": [165, 167], "lowest": [80, 132, 146, 149, 150, 153, 171, 173], "lr": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "lsr": [163, 166], "lst": [36, 57, 71], "lst_one": 71, "lst_two": 71, "lstrip": 52, "lucario": 143, "lucariomega": 143, "lucia": 102, "lucidrain": 154, "luckili": 154, "lucr": 0, "ludicolo": 143, "lugia": 143, "luke": 172, "lumineon": 143, "lump": 171, "lunaton": 143, "lunch": [0, 155, 165, 169, 170, 172, 177], "lut": 179, "luvdisc": 143, "luxembourg": 166, "luxio": 143, "luxrai": 143, "lvplot": 175, "lw": [25, 107, 111, 169, 170, 173, 175, 177], "m": [3, 4, 5, 8, 28, 29, 31, 39, 47, 49, 53, 54, 59, 60, 61, 62, 63, 64, 65, 66, 80, 82, 87, 88, 90, 93, 94, 95, 103, 122, 123, 146, 147, 149, 150, 152, 153, 154, 155, 161, 164, 169, 171, 173, 177], "m1": [31, 146], "m2": [31, 146], "m3": 146, "m_": [28, 29, 31], "ma": [39, 149], "maaan": 39, "mac": 146, "machamp": 143, "machin": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 45, 103, 115, 146, 147, 148, 149, 150, 151, 152, 157, 165, 173, 174, 176, 177, 185], "machine_learn": 173, "machineri": 132, "machok": 143, "machop": 143, "maco": [69, 146], "macreadi": 0, "macro_cas": 90, "made": [39, 70, 72, 80, 96, 98, 102, 147, 148, 149, 150, 151, 152, 153, 155, 175], "madrid": 122, "mae": [147, 148], "magbi": 143, "magcargo": 143, "magic": [37, 104, 153, 154, 155, 157, 162], "magikarp": 143, "magma": [164, 165, 167], "magma_r": 167, "magmar": 143, "magmortar": 143, "magnemit": 143, "magnet": 175, "magneton": 143, "magnezon": 143, "magnitud": [4, 5, 32, 103, 104, 150, 165, 173], "mai": [1, 3, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 35, 39, 45, 49, 51, 52, 53, 54, 56, 59, 60, 66, 68, 71, 72, 74, 76, 77, 83, 87, 93, 96, 98, 101, 102, 103, 106, 127, 132, 133, 134, 136, 137, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "mail": [39, 130], "mailbox": 80, "main": [28, 29, 31, 39, 51, 54, 75, 76, 80, 84, 90, 101, 102, 103, 106, 146, 147, 148, 149, 151, 156, 157, 158, 159, 169, 173, 175, 178], "main1": 76, "main_tag": 153, "mainli": [47, 154, 157], "maintain": [85, 165], "mainten": 184, "major": [8, 35, 94, 148, 151, 154, 156, 157, 169, 170, 173, 174], "majorli": [132, 133, 165, 169, 170, 174, 175, 177], "make": [0, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 25, 28, 29, 35, 36, 37, 38, 39, 40, 46, 47, 49, 51, 52, 53, 54, 55, 56, 57, 68, 70, 71, 72, 74, 75, 76, 78, 80, 83, 85, 88, 89, 90, 93, 94, 95, 96, 98, 101, 103, 104, 106, 107, 111, 125, 127, 128, 132, 133, 134, 136, 137, 139, 159, 161, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185], "make_blob": [148, 176], "make_circl": 148, "make_kd": 167, "make_multiplier_of": 36, "make_predict": 149, "make_pretti": 37, "make_sound": 106, "make_uppercas": 37, "makedir": 157, "mako": [167, 175, 179], "mako_r": 167, "makuhita": 143, "malamar": 143, "male": [68, 101, 143, 161, 165, 168, 170, 171, 172, 173, 177], "male_dinn": 172, "male_lunch": 172, "malign": [5, 14, 15, 16, 17], "mammal": 103, "mammalnam": 103, "mamoswin": 143, "man": [38, 39, 171, 173], "manadatori": 165, "manag": [39, 74, 80, 83, 147, 149, 150, 151, 152, 153, 154, 156, 157, 175], "manaphi": 143, "manchest": [101, 122], "mandatori": [54, 59, 74, 77, 89, 102, 106, 165, 169, 170, 177], "mandibuzz": 143, "manectr": 143, "manectricmega": 143, "mango": [45, 47, 53, 56, 71, 74, 91, 94, 134, 173], "manh": 30, "manhattan": 170, "manhattan_dist": 30, "mani": [4, 5, 6, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 23, 24, 28, 29, 39, 47, 48, 49, 52, 54, 56, 68, 69, 71, 72, 80, 84, 90, 95, 101, 102, 106, 108, 109, 112, 122, 128, 129, 132, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 163, 164, 170, 175, 176, 178, 182, 185], "manipul": [38, 52, 59, 80, 102, 128, 132, 142, 149, 150, 154, 177], "mankei": 143, "manner": [37, 42, 47, 48, 103, 169, 175], "manner_of_death": 161, "mantin": 143, "mantissa": 82, "mantyk": 143, "manual": [0, 4, 5, 7, 34, 71, 72, 129, 147, 154, 155], "manual_se": [146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157], "manual_transform": [152, 153, 154], "manufactur": [102, 149], "map": [0, 7, 17, 19, 26, 57, 89, 96, 132, 139, 147, 148, 150, 154, 164, 166, 167, 170, 172, 176, 177, 180], "map_datafram": 177, "map_diag": [167, 176], "map_loc": 155, "map_low": [167, 176], "map_offdiag": 176, "map_upp": [167, 176], "mapper": 139, "mappingmethod": 89, "mapsto": 30, "maptplotlib": 177, "mar": 87, "maractu": 143, "march": [39, 45, 49, 149], "mareep": 143, "margin": [11, 150, 166, 169], "margin_titl": [174, 177], "maril": 143, "marit": 53, "marital_statu": 55, "mariya": 47, "mark": [42, 43, 47, 55, 74, 84, 87, 89, 94, 102, 122, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 168, 170, 173], "markdown": [24, 151, 154, 181], "markdownfil": [6, 109, 182], "markedli": [20, 108, 112], "marker": [10, 11, 69, 122, 123, 161, 165, 166, 167, 170, 171, 173, 175, 176, 177], "markeredgecolor": 122, "markerfacecolor": 123, "markers": 122, "market": [0, 101], "marks_df": 132, "marks_dict": 132, "marksaroufim": 146, "markup": [108, 112], "marowak": 143, "marri": [45, 90], "marshtomp": 143, "martrix": 146, "mask": [136, 177], "masquerain": 143, "mass": [74, 90, 132], "massiv": [132, 135], "master": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "masterstudentclass": 102, "mat": 127, "mat1": [146, 149, 150], "mat2": [146, 150], "match": [61, 77, 136, 139, 141, 146, 147, 148, 150, 152, 153, 154, 155, 166, 168, 171, 172, 177], "match_replac": 39, "materi": [7, 147, 151, 152, 154, 158], "math": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 51, 55, 70, 86, 94, 107, 111, 154], "mathbb": [31, 32, 154], "mathbf": [148, 154], "mathemat": [24, 28, 29, 32, 47, 56, 57, 80, 90, 95, 104, 132, 148, 154, 163, 166, 171, 173, 175, 184, 185], "mathemet": 115, "mathew": 122, "mathpix": 154, "matlab": [45, 47, 68, 90, 98, 101, 127, 128], "matmul": [128, 146], "matplotlib": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 30, 107, 111, 147, 148, 149, 150, 152, 153, 154, 155, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180], "matric": [26, 33, 128], "matrix": [7, 8, 16, 17, 18, 19, 26, 28, 29, 57, 125, 126, 127, 129, 132, 148, 153, 176, 177, 178, 179], "matrixmultipl": 146, "matruc": 128, "matter": [37, 49, 71, 74, 77, 90, 146, 150, 153, 169], "matthew": 161, "mawil": 143, "mawilemega": 143, "max": [4, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 30, 34, 35, 56, 101, 103, 125, 128, 129, 130, 132, 144, 149, 150, 152, 155, 161, 166, 168, 169, 177], "max_inst": 106, "max_iter": [10, 14, 15, 16, 17, 18, 19], "max_pool_lay": 149, "max_pool_tensor": 149, "max_row": 132, "max_siz": [150, 153, 154, 156, 157], "max_spe": 103, "maxim": 0, "maximum": [10, 14, 15, 16, 17, 18, 19, 39, 48, 78, 101, 122, 125, 128, 129, 132, 146, 148, 149, 150, 168, 171, 172], "maxpoo2d": 149, "maxpool2d": [150, 151, 156, 157], "maxsiz": 80, "maxsplit": 39, "maxyear": 59, "mayb": [47, 147, 175], "mazda": 144, "maze": 0, "mb": [8, 18, 19, 149, 150, 152, 153, 154, 155], "mbconv": 152, "mbox": [25, 107, 111], "md": [6, 20, 108, 109, 112, 182], "mdkir": 155, "mdoel": 153, "me": [44, 52, 94, 151, 152, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 175, 176, 177], "mealtim": 155, "mean": [1, 2, 4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 31, 32, 36, 38, 39, 43, 44, 47, 48, 49, 52, 53, 54, 56, 59, 60, 61, 65, 70, 75, 77, 80, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 104, 106, 107, 111, 125, 126, 129, 132, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 163, 165, 166, 169, 170, 171, 173, 174, 175, 176, 177], "meaning": [134, 149, 177], "meant": [152, 161], "meantim": 149, "meantin": 148, "meanwhil": [166, 170, 173, 175, 177], "measur": [0, 9, 10, 14, 33, 101, 147, 148, 149, 161, 163, 166, 169, 170, 171, 174, 175], "mechan": [23, 84, 128, 154, 165, 175, 178], "median": [53, 80, 101, 122, 125, 129, 132, 170, 171, 172, 173, 175], "medianprop": 122, "medicham": 143, "medichammega": 143, "meditit": 143, "medium": [25, 35, 107, 111, 122, 146, 164], "medium_heavi": 122, "meet": [43, 170, 171], "mega": 143, "megabyt": [153, 154, 155], "meganium": 143, "melina": 68, "mellon": 7, "meloettaaria": 143, "meloettapirouett": 143, "melt": [169, 170, 171, 177], "melt_df": 171, "member": [38, 56, 101, 102, 166, 172], "memor": [28, 29, 165], "memori": [18, 19, 34, 47, 51, 52, 53, 68, 70, 78, 90, 92, 95, 96, 98, 101, 102, 125, 129, 132, 146, 147, 149, 150, 154, 162, 175], "memoryerror": [70, 71], "men": 164, "mennen": 47, "mention": [7, 35, 52, 71, 84, 132, 153, 154, 162, 166, 170, 173, 174, 175, 177], "menu": [91, 150, 164], "meow": 106, "meowsticfemal": 143, "meowsticmal": 143, "meowth": 143, "merced": 144, "mere": 106, "merg": [104, 132, 154, 155, 172], "meshgrid": [8, 130, 148], "mesprit": 143, "mess": 143, "messag": [4, 5, 36, 43, 44, 45, 46, 70, 71, 72, 74, 77, 84, 146, 155], "messi": [47, 48, 122], "met": [36, 44, 48, 138], "meta": [39, 146], "metadata": 150, "metagross": 143, "metagrossmega": 143, "metang": 143, "metapod": 143, "metaprogram": 37, "meter": [90, 175], "meth": 106, "method": [24, 28, 29, 31, 34, 35, 36, 37, 38, 47, 48, 57, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 77, 80, 83, 84, 89, 94, 98, 102, 104, 106, 128, 132, 133, 136, 139, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 161, 165, 166, 171, 172, 173, 174, 175, 176, 177, 179, 185], "meticul": 153, "metric": [0, 146, 147, 150, 151, 152, 153, 155, 156, 157, 179], "mew": 143, "mewtwo": 143, "mewtwomega": 143, "mib": 154, "michael": 161, "michel": 68, "microchip": [5, 15], "microsecond": [60, 61, 63], "microsoft": [52, 146, 155], "mid": 95, "middl": [45, 53, 54, 71, 127, 148, 150, 169, 171, 172, 173], "mienfoo": 143, "mienshao": 143, "mig": 146, "might": [1, 4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 36, 42, 48, 49, 51, 66, 71, 89, 94, 106, 126, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 163, 165, 169, 170, 171, 172, 173, 174, 176, 177], "mightyena": 143, "milaan": [37, 45, 47, 52, 55, 57, 68, 70, 71, 74, 77, 80, 90, 93, 95, 101, 103, 144], "milan": [52, 68, 102], "mile": 173, "mileag": [132, 133, 143, 167, 169], "mileagedf": 144, "mileston": [153, 154, 155], "milk": 74, "million": [152, 153], "milot": 143, "miltank": 143, "mime": 143, "mimic": [149, 154], "min": [4, 11, 12, 13, 14, 15, 56, 101, 125, 128, 129, 130, 132, 161, 166, 168, 169, 174, 177], "min_row": 132, "minccino": 143, "mind": [27, 42, 57, 77, 149, 150, 151, 153, 154], "mine": [146, 147, 154, 155], "mini": [149, 151, 152, 153, 154, 172], "minim": [3, 7, 79, 151, 153, 156, 157, 161], "minimum": [4, 5, 11, 12, 13, 14, 15, 16, 17, 18, 19, 53, 122, 125, 129, 132, 146, 148, 163, 171, 172, 185], "mink": 30, "minkowski_distance_a": 30, "minkowski_distance_b": 30, "minu": [95, 171], "minun": 143, "minut": [18, 19, 60, 61, 63, 64, 65, 146, 147, 148, 149, 150, 152, 153, 155, 169, 170, 174], "minyear": 59, "mirror": [78, 176], "misc": 84, "misdreavu": 143, "misinterpret": 164, "mislead": 166, "mismagiu": 143, "mismatch": [106, 146, 148, 149], "miss": [11, 12, 13, 14, 15, 16, 17, 44, 70, 71, 77, 126, 133, 142, 155, 173, 175], "missing_label": 139, "mission": 94, "mistak": [53, 70, 98, 171], "mit": [148, 149, 155, 172], "mitsubishi": 144, "mix": [53, 54, 55, 56, 77, 126, 127, 146, 153, 155, 169, 170, 171, 175], "mix_fruit": [47, 53, 56], "mkdir": [80, 147, 149, 150, 151, 152, 153, 155, 156, 157], "ml": [2, 23, 151, 153, 155, 173, 185], "mlc": 170, "mlflow": 153, "mlop": [153, 155], "mlp": 7, "mlp_block": 154, "mlp_block_output": 154, "mlp_dropout": 154, "mlp_layer": 154, "mlp_size": 154, "mlpblock": 154, "mlxtend": 149, "mm": [59, 61, 62, 146, 153], "mn": [31, 39], "mnemon": 90, "mnist": [5, 7, 16, 17, 18, 19, 149], "mo": 39, "mobil": [146, 152, 155], "mod": [80, 130], "modal": 172, "mode": [11, 24, 68, 71, 80, 81, 101, 102, 143, 147, 148, 149, 150, 152, 155, 158, 159, 170, 171], "model": [0, 4, 8, 98, 101, 102, 115, 158, 159, 160, 163, 165, 167, 174, 175, 176, 184, 185], "model_": 176, "model_0": [147, 148, 149, 150, 151, 156, 157], "model_0_df": 150, "model_0_result": [149, 150, 156, 157], "model_1": [147, 149, 150, 157], "model_1_df": 150, "model_1_result": [149, 150], "model_2": [148, 150, 157], "model_2_result": 149, "model_3": 148, "model_4": 148, "model_acc": 149, "model_build": [157, 159], "model_loss": 149, "model_nam": [147, 149, 151, 153, 154, 155, 156, 157], "model_path": [147, 149], "model_s": 155, "model_save_path": [147, 149, 151, 156, 157], "model_select": 148, "model_size_legend": 155, "model_weight": 153, "modern": [149, 152, 153, 154], "modf": [80, 82], "modif": [38, 101, 103, 129, 136, 139, 141, 142, 170, 173, 174, 175, 177], "modifi": [36, 37, 38, 45, 47, 48, 52, 53, 54, 55, 57, 66, 68, 75, 76, 80, 92, 94, 95, 127, 132, 137, 143, 149, 153, 170, 172, 174, 175, 184], "modul": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 64, 66, 68, 69, 70, 71, 72, 75, 77, 78, 79, 86, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 106, 127, 128, 136, 139, 141, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 165, 170, 175, 177], "modula": 106, "modular": [74, 152, 153, 154, 155, 160], "modulo": [70, 104], "modulu": [90, 95, 104], "mohanda": [153, 155], "moistur": [123, 170], "moisturizersalesdata": 123, "moltr": 143, "moment": [96, 150, 170, 177], "momentum": [148, 154], "mon": [49, 60, 61, 153], "mondai": [60, 61, 65], "monei": [169, 170], "monetari": 154, "monferno": 143, "mongodb": 53, "monitor": [155, 184], "monkei": 172, "monoton": 103, "month": [49, 60, 61, 62, 63, 64, 65, 74, 89, 154, 173, 175, 178], "month_numb": 123, "monthli": 155, "monthlist": 123, "moon": 74, "moral": 163, "mordern": 22, "more": [0, 4, 5, 6, 7, 11, 12, 13, 14, 15, 16, 17, 20, 23, 24, 25, 28, 29, 31, 34, 35, 36, 37, 38, 40, 42, 44, 45, 47, 49, 51, 53, 54, 55, 56, 57, 59, 60, 65, 66, 68, 69, 70, 71, 72, 74, 75, 77, 79, 80, 81, 84, 88, 89, 90, 91, 96, 98, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 123, 126, 127, 128, 129, 132, 133, 138, 141, 143, 144, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 181, 182, 185], "moreland": 164, "moreov": [0, 68], "morn": [74, 77, 94], "morphism": 101, "most": [0, 22, 24, 26, 28, 34, 35, 36, 37, 38, 39, 40, 48, 51, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 74, 75, 76, 77, 78, 80, 89, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 106, 108, 112, 127, 128, 132, 134, 136, 139, 141, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 164, 169, 170, 171, 172, 173, 174, 175, 177, 178], "most_frequent_word": 39, "most_populated_countri": [68, 74], "most_spoken_languag": [68, 74], "mostli": [48, 52, 153, 154, 155, 164, 177], "mothim": 143, "motiv": 39, "motorcycl": 7, "motto": [146, 147, 148, 149, 153, 154], "mous": [53, 54], "move": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 43, 47, 49, 68, 96, 139, 148, 149, 150, 151, 154, 162, 163, 166, 169, 170, 171, 173, 175, 176, 177], "movement": 0, "movi": 176, "mp": 146, "mpimg": [16, 17, 18, 19], "mpl": 173, "mr": 143, "mrdbourk": [150, 151, 152, 153, 154, 155, 156, 157], "mri": 175, "mro": 103, "msa_block": 154, "msa_block_output": 154, "msa_lay": 154, "msablock": 154, "msc": 24, "mse": 148, "mseloss": 148, "msg": [36, 37, 74, 77, 161, 168], "mt": 31, "mtransform": 170, "mu": [8, 81], "mu_param": 8, "much": [0, 4, 7, 11, 12, 13, 22, 24, 28, 29, 35, 38, 55, 80, 129, 146, 147, 148, 149, 150, 151, 154, 155, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177], "mudkip": 143, "muk": 143, "mul": [80, 146], "mulitpl": 146, "mult": [150, 152], "multi": [91, 92, 101, 133, 134, 149, 150, 152, 153, 155, 172, 176, 177], "multiclass": [148, 149], "multideriv": 103, "multidimension": [125, 127, 132], "multihead": 154, "multihead_attn": 154, "multihead_self_attention_block": 154, "multiheadattent": 154, "multiheadselfattentionblock": 154, "multiindex": [132, 135, 136, 139, 142], "multilay": 7, "multilayer_perceptron": [18, 19], "multilayerperceptron": [18, 19], "multilevel": 173, "multilin": [39, 52, 79, 89, 91, 92], "multiline_str": [52, 91], "multimedia": 24, "multip": 26, "multipl": [0, 4, 7, 12, 18, 19, 24, 28, 29, 35, 37, 45, 47, 49, 52, 53, 56, 57, 68, 75, 77, 79, 88, 89, 91, 95, 98, 101, 102, 104, 106, 125, 126, 132, 133, 135, 137, 138, 142, 144, 147, 148, 149, 153, 154, 155, 163, 164, 165, 169, 170, 171, 172, 175, 176, 177], "multiple_vari": 57, "multipli": [11, 12, 13, 14, 15, 16, 17, 31, 36, 47, 48, 54, 59, 74, 78, 84, 85, 90, 94, 95, 125, 128, 146, 150], "multitouch": 24, "multivari": [2, 4, 5, 8, 177], "multivariate_gaussian": 8, "multivariate_norm": [164, 165, 166, 176], "mumbai": 57, "munchlax": 143, "munna": 143, "murkrow": 143, "musharna": 143, "mushroom": 54, "music": 83, "must": [27, 31, 34, 36, 37, 46, 47, 51, 52, 53, 54, 55, 56, 68, 69, 71, 74, 75, 77, 78, 80, 81, 83, 84, 88, 89, 90, 92, 93, 96, 98, 102, 103, 106, 123, 127, 133, 137, 138, 146, 147, 148, 154, 155, 162, 163, 170, 177], "mut": 169, "mutabl": [47, 53, 54, 55, 56, 92, 132], "mutat": 127, "mute": 172, "mutlipl": [146, 155], "mv": [152, 153, 154, 155], "mx": 146, "my": [5, 48, 51, 52, 68, 71, 75, 76, 84, 90, 92, 102, 106, 122, 123, 146, 148, 149, 150, 152, 153, 155, 164, 169, 171, 172, 173, 175], "my_addit": 85, "my_ag": 44, "my_data": 69, "my_dict": 55, "my_dict1": 55, "my_dict2": 55, "my_dict3": 55, "my_func": 75, "my_gen": 35, "my_info": 53, "my_it": 34, "my_list": [34, 35, 53, 79, 126, 132], "my_list1": [53, 126], "my_list2": [53, 126], "my_list3": 53, "my_list4": 53, "my_list5": 53, "my_matrix": 126, "my_modul": 80, "my_nam": 90, "my_set": [47, 56], "my_str": [35, 52], "my_tupl": 54, "my_tuple1": 54, "my_tuple2": 54, "my_tuple3": 54, "my_tuple4": 54, "my_vaccin": 47, "myclass": 88, "mygraph": 122, "mymethod": 103, "mynewclass": 102, "myst": 181, "mysteri": 96, "n": [3, 4, 5, 8, 10, 12, 25, 27, 28, 29, 30, 31, 32, 34, 35, 36, 40, 43, 44, 47, 48, 49, 52, 53, 54, 57, 68, 71, 72, 74, 77, 78, 79, 80, 84, 87, 89, 90, 91, 93, 94, 97, 101, 102, 103, 107, 111, 125, 126, 129, 132, 133, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 161, 169, 171, 172, 173, 175, 176], "n0": 47, "n1": 47, "n10": 47, "n21": 47, "n28": 47, "n3": 47, "n36": 47, "n45": 47, "n6": 47, "n_": 31, "n_boot": [165, 173, 174, 175], "n_color": 164, "n_featur": [148, 176], "n_list": 53, "n_sampl": [148, 176], "n_tupl": 54, "na": [132, 136, 137, 142], "na_valu": 144, "nacho": 155, "nafter": [136, 137, 138, 141, 142], "nail": 161, "naiv": [106, 153], "name": [11, 17, 19, 24, 35, 36, 37, 38, 39, 40, 47, 48, 49, 51, 52, 53, 54, 55, 57, 59, 60, 61, 65, 66, 68, 69, 70, 71, 74, 75, 77, 79, 83, 84, 85, 88, 89, 91, 92, 93, 95, 97, 101, 102, 103, 104, 106, 122, 123, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 146, 147, 148, 149, 151, 152, 153, 154, 156, 157, 161, 164, 165, 166, 168, 169, 173, 175, 177], "named_tupl": 65, "nameerror": [36, 38, 52, 53, 54, 55, 71, 75, 91, 92, 102], "nameless": 79, "names_upper_cas": 37, "namespac": [22, 36, 38, 79, 80, 83, 89, 100, 102, 106, 125, 148], "nan": [80, 82, 126, 128, 130, 133, 138, 142, 143, 144, 161, 165, 171, 173], "nand": 147, "napr": 87, "narrow": [154, 172], "nat": [132, 133, 135, 136, 137, 138, 139, 140, 141, 142], "nation": [122, 149], "nativ": [95, 153, 161, 162], "natu": 143, "natur": [1, 8, 24, 37, 48, 80, 82, 96, 125, 147, 152, 154, 155, 175, 184], "naug": 87, "navig": [0, 154], "nayron": [18, 19], "nb": 151, "nbagg": 162, "nbin": 163, "nbyte": 126, "nchw": [149, 150], "ncol": [149, 154, 163, 172, 173], "ncolumn": 139, "ncongratul": 72, "ncontain": 68, "nconv_layer_2": 149, "ndarrai": [125, 126, 129, 132, 133, 134, 146, 178], "ndata": 40, "ndatafram": 142, "ndec": 87, "ndenumer": [130, 163], "ndframe": 132, "ndim": [30, 125, 126, 146], "ndindex": 130, "ndo": 52, "ne": 122, "nearest": [3, 10, 150, 155], "nearli": [52, 79, 95, 125, 153], "neat": 89, "neatli": 165, "necessari": [24, 34, 46, 48, 84, 141, 147, 150, 151, 153, 154, 155, 156, 157, 158, 162, 167], "necessarili": [132, 149, 154, 155, 161, 165, 170, 171, 177], "necessit": 0, "need": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 35, 38, 39, 42, 44, 47, 48, 51, 52, 53, 54, 57, 59, 61, 62, 63, 65, 68, 69, 71, 72, 74, 75, 76, 77, 79, 80, 85, 87, 90, 92, 93, 94, 98, 102, 103, 104, 106, 109, 115, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 169, 170, 171, 173, 174, 175, 176, 178, 182, 185], "need_weight": 154, "neg": [1, 4, 5, 15, 29, 39, 43, 44, 45, 46, 52, 57, 68, 82, 91, 94, 130, 135, 148, 150, 166, 172], "negat": [39, 95], "negative_numb": 94, "neither": [27, 46, 52, 75, 82, 152, 172], "nenter": 72, "nenuemer": 47, "neq": [30, 31], "nescessarili": 128, "nest": [22, 28, 29, 37, 42, 44, 45, 50, 53, 54, 55, 75, 78, 96, 125, 126, 134, 170, 172, 173], "netflix": 151, "netherland": [11, 13], "network": [0, 2, 71, 115, 129, 146, 147, 150, 151, 152, 154, 155, 156, 157, 184, 185], "networkerror": 71, "neural": [0, 2, 115, 129, 146, 147, 150, 152, 154, 155, 184, 185], "neural_network": [18, 19, 148], "neuron": [18, 19, 148, 149], "never": [34, 48, 49, 51, 71, 90, 95, 98, 132, 147, 154, 155, 162, 164, 169], "new": [0, 1, 4, 5, 11, 12, 13, 16, 17, 18, 19, 23, 24, 37, 38, 39, 42, 48, 52, 54, 56, 57, 60, 61, 63, 64, 68, 72, 76, 79, 87, 90, 94, 96, 101, 102, 103, 104, 106, 122, 127, 129, 132, 133, 136, 137, 138, 139, 141, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177], "new_": 132, "new_ag": 139, "new_axi": 136, "new_col": 139, "new_col_nam": 132, "new_df": 143, "new_dict": 55, "new_file_nam": 69, "new_head": 142, "new_index": 139, "new_list": 79, "new_mark": 139, "new_nam": 139, "new_sig": 170, "new_str": 39, "new_valu": 132, "new_year": 63, "new_york": [59, 63], "newaxi": [30, 176], "newdir": 69, "newer": [147, 149, 153, 154], "newli": [106, 142, 147], "newlin": [39, 52, 68, 84, 87, 89, 91, 94, 155], "newshap": 129, "newslett": 155, "newton": 74, "next": [7, 34, 35, 43, 45, 47, 48, 49, 52, 68, 70, 71, 80, 81, 89, 98, 146, 147, 148, 149, 150, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "neymar": [47, 48, 122], "nf": 132, "nfeb": 87, "nfirst": 148, "nfor": 47, "ng": 39, "ngood": 52, "nhead": 154, "nhow": 94, "nhwc": 149, "ni": 47, "nice": [146, 147, 148, 150, 152, 153, 154, 155, 162, 164, 169, 170, 175], "nicer": [52, 173], "nichol": 161, "nidok": 143, "nidoqueen": 143, "nidoran": 143, "nidorina": 143, "nidorino": 143, "nigeria": 68, "night": [77, 172], "nightli": [152, 153, 154, 155], "nikla": [4, 5], "nin": 52, "nincada": 143, "nine": 39, "ninetal": 143, "nineti": 52, "ninjask": 143, "nipy_spectr": 167, "nipy_spectral_r": [167, 169], "nissan": 144, "nj": 31, "njul": 87, "njun": 87, "nlabel": 148, "nlist": 140, "nlp": [152, 154], "nm": 31, "nmai": 87, "nmar": 87, "nmax": 149, "nmulti": 89, "nn": [146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 172], "nnew": 146, "nnov": 87, "nnumber": 154, "no_grad": 147, "no_of_nonna_valu": 138, "no_of_sid": 103, "nob": 163, "noct": 87, "noctowl": 143, "node": [7, 18, 19, 53], "nohtyp": 52, "noibat": 143, "nois": [148, 165, 170], "noisier": 172, "noivern": 143, "nomin": [5, 14, 15, 16, 17], "non": [2, 4, 5, 7, 10, 18, 19, 31, 36, 40, 43, 48, 52, 68, 69, 77, 81, 102, 132, 138, 150, 152, 154, 155, 161, 162, 165, 167, 169, 175], "non_full_backward_hook": [149, 150], "nondynamicallyquantizablelinear": 154, "none": [37, 38, 39, 43, 47, 48, 55, 65, 68, 71, 74, 77, 81, 84, 88, 89, 91, 102, 129, 130, 132, 133, 136, 137, 138, 139, 141, 142, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "nonlinear": [4, 7, 12, 18, 19, 165], "nonloc": [22, 76, 86, 88, 96], "nonlov": 75, "nonmarinemamm": 103, "nonneg": [125, 126], "nonparametr": [165, 167], "nonwingedmamm": 103, "nonzero": 130, "nor": [27, 46, 52, 71, 75, 82, 172], "noraml": 154, "nordic_countri": 71, "norm": [32, 38, 82, 128, 154, 163, 168, 170], "norm1": 154, "norm2": 154, "norm_first": 154, "normal": [8, 12, 16, 17, 18, 19, 32, 36, 37, 39, 48, 49, 52, 57, 71, 72, 75, 79, 80, 81, 102, 126, 129, 135, 143, 151, 152, 153, 154, 155, 156, 163, 165, 166, 167, 168, 171, 172, 179], "normal_arrai": 129, "normalis": 178, "normalize_data": [12, 16, 17, 18, 19], "normalized_shap": 154, "normalvari": 81, "north": 173, "norwai": [11, 13, 53, 71], "nosepass": 143, "notaion": 127, "notat": [4, 5, 56, 94, 122, 127, 147, 172], "notation3": 94, "notch": [147, 149, 150, 153, 155, 171], "note": [4, 5, 28, 29, 34, 35, 36, 38, 42, 48, 49, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 66, 69, 71, 74, 75, 77, 80, 84, 89, 90, 91, 94, 95, 96, 101, 102, 103, 108, 112, 123, 126, 127, 128, 132, 133, 135, 136, 139, 140, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 161, 162, 164, 165, 166, 167, 170, 171, 172, 173, 175, 176, 177, 185], "notebook": [9, 11, 20, 26, 70, 94, 108, 112, 146, 148, 149, 150, 152, 153, 154, 155, 158, 159, 162, 164, 165, 166, 167, 174, 175, 177, 181, 184, 185], "notepad": 87, "noth": [39, 43, 47, 48, 49, 56, 74, 90, 101, 128, 150, 155, 170, 171, 172, 178], "notic": [27, 28, 29, 37, 49, 51, 55, 57, 59, 70, 92, 94, 102, 103, 132, 146, 147, 149, 150, 151, 152, 153, 154, 155, 157, 162, 163, 165, 167, 169, 170, 171, 172, 173, 175, 176], "notif": [7, 24], "notimplementederror": 70, "notion": [51, 104], "notnul": 132, "notpad": 87, "noutput": [44, 146], "nov": [87, 147], "novemb": 45, "now": [5, 7, 8, 10, 11, 12, 13, 14, 15, 22, 27, 35, 36, 37, 38, 39, 42, 43, 44, 47, 48, 57, 59, 60, 62, 63, 64, 68, 70, 71, 74, 75, 76, 77, 79, 80, 83, 84, 87, 89, 91, 93, 94, 96, 101, 102, 103, 104, 106, 128, 139, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 185], "nowher": 132, "np": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 28, 29, 30, 31, 32, 107, 111, 122, 125, 126, 127, 128, 129, 132, 138, 142, 144, 146, 150, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "npatch": 154, "nperfect": 89, "nresult": 140, "nrow": [149, 154, 163, 172], "nsep": 87, "nshape": 150, "nsheet": 68, "nsize": 150, "nt": 27, "ntest": [149, 150, 156, 157], "nthi": [68, 72], "ntorchvis": 149, "ntotal": 154, "ntrain": 149, "null": [27, 47, 48, 56, 132, 138, 165, 177], "num": [30, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 52, 56, 71, 74, 77, 78, 79, 89, 90, 94, 102, 129, 132, 133, 144, 153, 155, 168], "num1": [43, 44, 45, 46, 74, 77, 85, 90, 94, 102], "num2": [43, 44, 45, 46, 74, 77, 85, 90, 94, 102], "num3": 94, "num4": 94, "num_1": [45, 90], "num_2": [45, 90], "num_cel": [16, 17, 18, 19], "num_class": [148, 149, 154, 155], "num_clust": 10, "num_epoch": [150, 151, 153, 156, 157], "num_exampl": [8, 10, 14, 15], "num_featur": 148, "num_flo": 93, "num_float": 93, "num_head": 154, "num_images_to_plot": [152, 153], "num_int": 93, "num_iter": [11, 12, 13], "num_lay": 154, "num_list": [57, 79], "num_magnitude_bin": [150, 155], "num_new": 93, "num_on": 74, "num_param": [152, 153, 154, 155], "num_patch": 154, "num_perceptron": [18, 19], "num_point": [165, 167], "num_str": 93, "num_sum": 93, "num_top_class": 155, "num_training_exampl": [16, 17, 18, 19], "num_transformer_lay": 154, "num_two": 74, "num_work": [150, 151, 155, 156, 157], "numb": 11, "number": [0, 1, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 82, 84, 85, 88, 89, 90, 93, 95, 97, 102, 103, 104, 106, 122, 123, 125, 132, 133, 134, 135, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "number33": 94, "number_arithmet": 46, "number_list": 57, "number_of_paramet": 155, "number_of_patch": 154, "number_of_token": 154, "numbermethod": 89, "numbers_int": 37, "numbers_squar": 37, "numbers_str": 37, "numbers_to_displai": [16, 17, 18, 19], "numel": [143, 155], "numer": [17, 19, 24, 47, 48, 51, 52, 72, 80, 90, 94, 104, 125, 126, 132, 146, 148, 150, 154, 164, 166, 168, 169, 171, 172, 173, 175, 178], "numpi": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 30, 31, 32, 47, 84, 107, 111, 122, 123, 127, 128, 132, 138, 142, 147, 148, 149, 150, 154, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184], "numpy_array_from_list": 126, "numpy_tensor": 146, "nutrifi": [150, 152, 155], "nuzleaf": 143, "nvar": 163, "nvidia": [146, 152], "ny": [59, 63], "nyc": 175, "nyc_taxi": 175, "nyear": 65, "nzip": 47, "o": [22, 24, 35, 39, 47, 49, 52, 53, 54, 55, 56, 57, 69, 73, 91, 92, 93, 94, 100, 122, 123, 142, 150, 151, 152, 153, 155, 156, 157, 161, 162, 165, 173, 176], "ob": 102, "obama": 68, "obj": [24, 34, 38, 57, 101, 102, 106, 136, 147, 149, 151, 156, 157], "obj1": 103, "obj2": 103, "object": [0, 3, 24, 28, 29, 34, 35, 36, 37, 38, 47, 51, 52, 53, 54, 55, 56, 60, 62, 64, 65, 69, 70, 71, 72, 74, 77, 78, 79, 80, 81, 84, 89, 90, 92, 93, 94, 95, 96, 103, 104, 106, 125, 126, 128, 129, 133, 134, 139, 140, 141, 143, 147, 149, 152, 154, 164, 165, 166, 167, 169, 170, 173, 176, 177], "object1": 103, "object_nam": 102, "observ": [0, 3, 8, 10, 37, 38, 43, 49, 101, 132, 142, 154, 162, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 177, 178], "obtain": [52, 80, 153, 154, 166, 173, 177], "obviou": [38, 52, 95, 155], "obvious": 170, "occas": 129, "occass": [165, 169], "occur": [39, 48, 49, 52, 68, 70, 71, 72, 76, 85, 93, 129, 146, 149, 155, 171], "occurr": [39, 52, 56, 102, 137, 173], "ocean": [167, 176], "ocean_r": 167, "ocr": 155, "oct": 87, "octadecim": 51, "octal": [51, 52, 91, 94], "octilleri": 143, "octob": 45, "od": 101, "odd": [27, 34, 42, 47, 48, 53, 55, 57, 71, 74, 77, 106, 129], "odd_numb": [37, 57], "odd_squar": 55, "oddish": 143, "ofcours": [173, 175, 177], "ofen": 155, "off": [6, 20, 52, 68, 108, 109, 112, 132, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 162, 173, 175, 182], "offer": [0, 24, 51, 53, 81, 95, 127, 130, 146, 148, 149, 151, 155, 161, 164, 167, 169, 170, 172, 173, 174, 175, 176, 177], "offic": 161, "offici": [22, 84, 154, 155, 165, 169, 171, 174, 175], "offlin": [11, 155, 172], "offset": [27, 60, 61, 68, 146, 162, 173], "offspr": 169, "often": [1, 5, 8, 48, 52, 53, 87, 94, 101, 106, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 164, 166, 167, 169, 170, 171, 173, 175, 176, 177], "oh": [143, 150, 173], "ohc": [132, 133, 144], "ohcf": 144, "ohcv": [132, 133, 144], "ohh": 155, "ok": [52, 89, 154, 155, 161], "okai": [89, 147, 148, 150, 153, 154, 155, 166, 167, 169, 170, 172], "old": [39, 44, 71, 84, 94, 101, 106, 130, 132, 139, 152, 153, 163, 166], "old_col": 139, "old_nam": 132, "older": [44, 95, 147], "oliv": 164, "omanyt": 143, "omastar": 143, "omit": [39, 154], "omma": 68, "onc": [4, 5, 24, 35, 39, 47, 49, 52, 54, 55, 56, 59, 68, 71, 74, 75, 77, 80, 87, 90, 92, 98, 135, 136, 139, 146, 147, 148, 149, 150, 151, 153, 154, 155, 161, 162, 164, 167, 170, 171, 172, 173, 174, 175, 176, 177, 185], "one": [0, 4, 5, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 24, 34, 35, 36, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 60, 66, 68, 71, 75, 77, 78, 79, 80, 83, 84, 87, 88, 89, 91, 92, 93, 95, 96, 98, 102, 103, 104, 106, 108, 112, 115, 126, 127, 128, 129, 132, 133, 134, 136, 137, 139, 141, 142, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179], "onedr": 69, "onedrivetemp": 69, "ones": [5, 52, 80, 125, 126, 128, 129, 130, 139, 141, 148, 149, 150, 151, 152, 153, 154, 155, 169, 171], "ones_lik": 146, "ongo": 175, "onion": 71, "onix": 143, "onli": [7, 13, 22, 27, 35, 36, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 68, 69, 70, 71, 72, 75, 76, 77, 79, 80, 84, 87, 89, 90, 92, 95, 96, 98, 101, 102, 103, 104, 106, 126, 127, 132, 135, 136, 137, 138, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 170, 172, 173, 175, 176, 177], "onlin": [5, 14, 15, 16, 17, 22, 149, 151, 154, 155, 157, 164, 172, 175], "onnx": 155, "onto": [147, 154, 155, 166, 174], "onward": 154, "ooo": 52, "oop": [22, 71, 105], "opac": [11, 164], "opaqu": 164, "open": [0, 22, 24, 70, 71, 80, 84, 89, 125, 132, 143, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 184], "open_workbook": 68, "openai": [146, 184], "openerp": 24, "openvino": 155, "oper": [1, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 24, 28, 29, 35, 36, 37, 39, 40, 47, 48, 51, 57, 59, 68, 70, 71, 74, 75, 77, 83, 85, 89, 90, 92, 94, 97, 98, 100, 101, 102, 105, 115, 126, 129, 132, 136, 137, 139, 140, 141, 142, 148, 149, 150, 151, 153, 154, 155, 156, 157, 175, 185], "operand": [51, 52, 53, 70, 71, 93, 95, 104], "operatornam": 154, "opim": 150, "opinion": [169, 173, 175], "opportun": [0, 49, 148, 149, 150, 153, 154, 155, 163], "opposit": [79, 132], "optim": [0, 3, 4, 5, 11, 12, 13, 14, 15, 16, 17, 49, 55, 92, 98, 136, 150, 151, 152, 153, 155, 156, 157, 185], "option": [4, 5, 38, 39, 45, 47, 48, 51, 52, 53, 54, 55, 57, 71, 72, 74, 77, 84, 94, 101, 102, 103, 126, 129, 133, 140, 147, 148, 149, 152, 153, 155, 156, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "oracl": 52, "orang": [45, 47, 53, 56, 71, 91, 95, 134, 155, 164, 167], "oranges_r": 167, "orbital_period": 172, "order": [4, 7, 8, 16, 17, 18, 19, 35, 47, 48, 52, 68, 69, 74, 75, 77, 79, 80, 83, 92, 94, 102, 129, 132, 133, 139, 140, 146, 147, 148, 149, 150, 154, 162, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177], "ordereddict": [140, 147, 149], "ordin": [5, 14, 15, 16, 17, 173], "ordinari": 37, "ore": [39, 177], "org": [24, 122, 128, 147, 148, 149, 152, 153, 154, 155, 168, 175, 179], "organ": [24, 53, 59, 74, 80, 83, 94, 101, 152, 175, 179], "orient": [34, 36, 38, 72, 102, 103, 104, 106, 133, 140, 150, 162, 169, 170, 171, 172, 173, 174, 175], "origin": [8, 9, 10, 17, 19, 36, 37, 39, 69, 98, 104, 106, 127, 129, 132, 133, 136, 137, 138, 140, 142, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 166, 171, 175, 176, 179], "orrd": 167, "orrd_r": 167, "orthogonol": 26, "oserror": 70, "oshawott": 143, "ot": [39, 46], "otat": 68, "other": [0, 5, 6, 7, 10, 14, 15, 22, 24, 31, 32, 34, 35, 37, 39, 47, 48, 51, 52, 57, 65, 68, 70, 71, 72, 74, 75, 77, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 92, 95, 98, 101, 102, 103, 104, 106, 109, 125, 126, 128, 129, 132, 133, 137, 138, 140, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 184], "other_mag": 104, "otherwis": [49, 52, 68, 71, 77, 98, 102, 103, 128, 133, 138, 139, 146, 147, 148, 150, 152, 154, 155], "othwerwis": 48, "ou": 175, "ouput": [148, 155], "our": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 34, 38, 39, 44, 48, 49, 51, 68, 69, 70, 71, 72, 74, 78, 80, 83, 84, 85, 87, 88, 94, 101, 104, 106, 122, 129, 132, 133, 135, 142, 146, 147, 151, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "our_plot": 167, "ourselv": [68, 85, 87, 148, 149, 150, 154, 155], "out": [14, 24, 25, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 68, 70, 72, 74, 77, 79, 80, 87, 88, 89, 90, 91, 92, 95, 104, 107, 111, 127, 129, 130, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177], "out_channel": [149, 150, 151, 154, 156, 157], "out_featur": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "out_i": 148, "out_proj": 154, "outcom": [42, 74, 154, 165], "outer": [36, 46, 47, 48, 75, 128, 132, 146, 155, 171], "outer_fun": 75, "outer_funct": 96, "outermost": 96, "outisd": 152, "outlier": [165, 166, 171, 173, 175, 179], "outlier_prop": 175, "outliers_indic": 8, "outlin": [122, 154, 170], "outout": 90, "outperform": [0, 155], "output": [0, 4, 5, 6, 7, 11, 13, 18, 19, 34, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 49, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 71, 72, 74, 75, 76, 77, 79, 80, 87, 93, 95, 98, 102, 103, 104, 109, 126, 128, 132, 135, 139, 140, 146, 147, 150, 151, 153, 156, 157, 162, 175, 182, 184], "output_featur": 148, "output_param_nam": [11, 13], "output_s": [152, 153, 154, 155], "output_shap": [149, 150, 151, 152, 156, 157], "outrun": 154, "outsid": [43, 46, 47, 49, 53, 54, 75, 76, 101, 102, 127, 146, 147, 150, 153, 154, 166, 175, 177], "outstand": [153, 154, 155], "outweigh": [149, 155], "over": [0, 11, 12, 13, 14, 15, 16, 17, 34, 35, 37, 47, 48, 49, 79, 88, 89, 91, 103, 122, 126, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 168, 170, 173, 175, 176], "overal": [98, 122, 146, 150, 153, 154, 155, 162, 167, 172, 173, 175, 176], "overcom": 51, "overcorrect": 148, "overfit": [11, 12, 13, 14, 15, 16, 17, 18, 19, 148, 149, 152, 154, 155], "overflow": [78, 130], "overflowerror": [70, 95], "overhead": 150, "overkil": 35, "overlai": [166, 173], "overlap": [169, 170, 175], "overli": 176, "overload": [22, 105, 128], "overplot": 176, "overrid": [72, 106, 150], "overridden": [72, 103], "overset": 30, "overtim": 155, "overview": [14, 15, 20, 27, 30, 89, 108, 112, 129, 146, 147, 165, 166, 173, 174], "overwhelm": 154, "overwrit": [55, 68, 77, 146, 150, 155, 157], "overwritten": 68, "ow": 39, "own": [34, 70, 71, 72, 79, 80, 83, 84, 85, 87, 94, 96, 106, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 170, 171, 172, 173, 175], "oxford": [94, 172], "p": [1, 24, 27, 30, 31, 39, 47, 49, 52, 53, 54, 56, 57, 60, 61, 66, 90, 94, 97, 101, 146, 150, 152, 153, 154, 155, 163, 167, 170, 173], "p0": 146, "p1": [97, 101, 104, 106, 178], "p100": [146, 152], "p2": [97, 101, 104, 106], "p3": [104, 106], "p4": 106, "p5": 106, "p6": 106, "p7": 106, "p8": 146, "p_": 31, "p_letter": 57, "p_list": 24, "pa": 161, "pachirisu": 143, "pack": [37, 54, 154], "packag": [22, 68, 80, 86, 89, 132, 136, 139, 140, 141, 146, 147, 149, 150, 151, 152, 153, 154, 155, 161, 164, 168, 170, 172, 174, 175, 176, 177], "packagesin": 83, "packing_person_info": 71, "pad": [52, 60, 61, 94, 95, 149, 150, 151, 154, 156, 157], "padding_mod": 150, "page": [6, 66, 81, 82, 89, 104, 109, 146, 147, 148, 151, 152, 154, 164, 174, 182], "pagefil": 69, "pai": [95, 150, 154, 155], "pain": 176, "pair": [11, 14, 15, 47, 52, 56, 82, 92, 93, 132, 133, 139, 140, 148, 167, 170, 172, 174, 175, 176], "paired_r": 167, "pairgrid": [163, 167, 168, 177, 180], "pairplot": [163, 167, 176, 177], "pairwis": 168, "pakistan": 68, "pal": [30, 177], "pale": [164, 170], "palett": [153, 163, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180], "palkia": 143, "palpitoad": 143, "palplot": 164, "pancham": 143, "panda": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 47, 122, 123, 147, 148, 149, 150, 155, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 184], "panel": [174, 176], "pangoro": 143, "panopt": 149, "panpour": 143, "pansag": 143, "pansear": 143, "paper": [0, 146, 150, 152, 155, 160, 162, 164, 165, 175, 184], "paperswithcod": [150, 152, 154], "par": [152, 154], "para": 143, "para1": 37, "para2": 37, "para3": 37, "paradigm": [101, 155], "paragraph": [39, 154], "parallel": [78, 177], "param": [8, 9, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 165, 170, 171, 175, 176, 177], "param1": 57, "param2": 57, "param3": 57, "param_1": [5, 9, 15], "param_2": [5, 9, 15], "paramet": [5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 39, 40, 52, 57, 68, 75, 79, 80, 84, 87, 91, 98, 101, 103, 106, 122, 129, 133, 134, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "parameter": 102, "parameter1": [74, 84], "parameter2": 74, "parametr": [102, 175], "paramount": 150, "paranthes": 52, "paranthesi": [54, 89], "parasect": 143, "parch": [171, 173], "parent": [72, 147, 149, 150, 151, 152, 153, 155, 156, 157, 169], "parentattr": 103, "parenthes": [35, 39, 47, 52, 54, 70, 79, 87, 89, 91, 92, 162], "parenthesi": [35, 70, 75, 129], "parentmethod": 103, "pareto": [81, 173], "paretovari": 81, "pari": 122, "park": [152, 165], "parmar": [37, 45, 47, 52, 57, 68, 74, 77, 80, 90, 101], "parramet": 177, "parrot": [101, 102], "pars": [65, 68, 70, 98, 132], "parser": 70, "part": [1, 37, 39, 47, 48, 49, 51, 52, 80, 82, 91, 92, 95, 96, 122, 125, 127, 137, 140, 146, 147, 148, 149, 152, 153, 154, 155, 158, 159, 161, 171, 175], "parti": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 59, 83], "partial": [7, 152], "particl": 39, "particuar": [17, 18, 19], "particular": [42, 47, 48, 49, 51, 55, 56, 59, 64, 80, 90, 92, 101, 103, 126, 132, 135, 136, 138, 139, 140, 142, 147, 148, 150, 154, 161, 162, 163, 165, 166, 170, 171, 172, 173, 175, 176, 177], "particularli": [52, 171, 172], "partit": [3, 10, 52], "pass": [22, 34, 36, 37, 39, 40, 42, 43, 44, 50, 52, 59, 60, 61, 65, 70, 71, 72, 77, 79, 80, 84, 88, 90, 101, 102, 103, 106, 126, 132, 133, 134, 135, 136, 139, 141, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 175, 176, 177], "passag": 175, "passeng": [173, 175, 177, 178], "passenger_count": 175, "password": 44, "password_check": 44, "past": [123, 147, 149, 150, 151, 152, 153, 154, 155, 157, 162, 167, 170, 171, 172, 175], "pastel1": [167, 172], "pastel1_r": 167, "pastel2": 167, "pastel2_r": 167, "pat": 115, "patch": [155, 169, 173, 176], "patch_and_position_embed": 154, "patch_artist": 122, "patch_embed": 154, "patch_embedded_imag": 154, "patch_embedded_image_with_class_embed": 154, "patch_embedding_class_token": 154, "patch_embedding_lay": 154, "patch_embedding_with_class_token": 154, "patch_height": 154, "patch_siz": 154, "patch_width": 154, "patchcollect": 175, "patched_image_through_mlp_block": 154, "patched_image_through_msa_block": 154, "patchembed": 154, "patcher": 154, "patchifi": 154, "path": [6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 68, 69, 83, 94, 109, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 182], "path_to_dir": 155, "path_to_model": 155, "pathcollect": [169, 170], "pathlib": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "patienc": 165, "patrat": 143, "pattern": [0, 31, 37, 98, 122, 146, 147, 148, 149, 150, 152, 153, 154, 155, 164, 176], "paul": 161, "paus": 35, "pawniard": 143, "pc": 155, "pca": 174, "pcie": 146, "pclass": [171, 173], "pctdistanc": 122, "pd": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 122, 123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 155, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "pd_data": 8, "pd_test_data": [16, 17, 18, 19], "pd_train_data": [16, 17, 18, 19], "pdf": [165, 166, 168, 180], "peach": 173, "peak": [144, 166, 172], "pear": [45, 53, 56], "pearl": 98, "pearsonr": 176, "peculiar": [106, 132], "pedestrian": 7, "peek": [16, 17, 18, 19, 161], "peggi": [101, 103], "pelipp": 143, "penal": 0, "penguin": [101, 103], "penicillin": 47, "peo": 39, "peopl": [39, 52, 56, 146, 149, 150, 151, 152, 154, 155, 161, 164, 170, 175], "pep": 84, "per": [11, 13, 72, 95, 122, 123, 133, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 161, 162, 164, 165, 171, 172, 173, 175, 177], "peramet": 77, "perceiv": 164, "percent": [37, 153, 155], "percentag": [14, 15, 16, 17, 18, 19, 47, 94, 101, 123, 132, 135, 139, 142, 155, 169, 171, 173, 175], "percentil": [101, 129, 132, 175], "percep": [18, 19], "percept": 172, "perceptron": 7, "perceptron_index": [18, 19], "perf": 146, "perfect": [1, 48, 89, 148, 155], "perfectli": [88, 89, 147], "perflog": 69, "perform": [0, 7, 10, 18, 19, 24, 34, 36, 40, 42, 47, 48, 51, 52, 53, 54, 55, 56, 57, 68, 71, 74, 79, 80, 85, 87, 92, 93, 94, 95, 98, 101, 104, 115, 125, 128, 132, 136, 139, 141, 142, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 173, 185], "performan": 148, "perhap": [150, 152, 153, 154, 155], "perimet": [74, 95, 103], "perimeter_of_circl": 74, "period": [27, 79, 84, 132, 155, 175], "periodic_function1": 27, "periodic_function2": 27, "perl": 24, "perm": 80, "perman": [68, 155], "permiss": 71, "permit": 173, "permut": [146, 150, 154, 178], "permutebackward0": 154, "persev": 150, "persian": 143, "persist": 146, "person": [0, 45, 47, 68, 74, 77, 84, 89, 90, 95, 101, 102, 103, 148, 150, 153, 154, 155, 170, 173, 175], "person_dct": 68, "person_info": [90, 101, 103], "person_json": 68, "personaccount": 101, "perspect": [149, 150, 153, 154], "petal": [9, 10, 14, 161, 169], "petal_length": [3, 5, 10, 14, 161, 164, 166, 167, 169, 170, 176, 179], "petal_width": [3, 5, 10, 14, 161, 169, 170, 176, 179], "petallengthcm": 122, "petalwidthcm": 122, "petilil": 143, "ph": 172, "phanpi": 143, "phantump": 143, "phase": 27, "phenomen": 154, "philosohpi": 148, "philosoph": 155, "phion": 143, "phone": [40, 94, 97, 155], "phone_num": 97, "phone_numb": 94, "photo": [122, 148, 149, 150, 152, 153, 154, 155], "photograph": 0, "php": [55, 98], "phrase": 52, "physic": [78, 101, 154, 161], "pi": [27, 29, 30, 39, 51, 52, 70, 74, 80, 82, 90, 94, 95, 99, 101, 143, 155], "picalo": 24, "pichu": 143, "pick": [3, 8, 10, 14, 127, 147, 149, 150, 153, 154, 161, 164, 165, 167, 173, 175], "pickl": [84, 147], "pickler": 84, "pickletool": 84, "pickup_datetim": 175, "pickup_latitud": 175, "pickup_longitud": 175, "pictori": 173, "pictur": [3, 4, 5, 7, 16, 17, 18, 19, 49, 154, 177], "pid": 146, "pidgei": 143, "pidgeot": 143, "pidgeotmega": 143, "pidgeotto": 143, "pidov": 143, "pie": 155, "piec": [38, 127, 146, 147, 149, 150, 151, 153, 154, 155, 157, 173], "piechart": 122, "pignit": 143, "pikachu": 143, "pil": [149, 150, 152, 155], "pile": 173, "piloswin": 143, "pin": 154, "pin_memori": [151, 154, 157], "pineappl": 173, "pineco": 143, "pink": [47, 164, 167], "pink_r": 167, "pinsir": 143, "pinsirmega": 143, "pip": [24, 68, 80, 148, 149, 150, 152, 153, 154, 155], "pip3": [152, 153, 154, 155], "pipe": 172, "pipelin": [0, 150, 152, 153, 154, 155, 157, 172], "piplein": 150, "piplup": 143, "pivot": [132, 178], "pivot_t": 132, "pixel": [5, 7, 9, 16, 17, 18, 19, 122, 146, 149, 150, 154], "pixel1": [17, 19], "pixel2": [17, 19], "pixel3": [17, 19], "pixel4": [17, 19], "pixel5": [17, 19], "pixel6": [17, 19], "pixel7": [17, 19], "pixel775": [17, 19], "pixel776": [17, 19], "pixel777": [17, 19], "pixel778": [17, 19], "pixel779": [17, 19], "pixel780": [17, 19], "pixel781": [17, 19], "pixel782": [17, 19], "pixel783": [17, 19], "pixel784": [17, 19], "pixel8": [17, 19], "pixel9": [17, 19], "piyg": 167, "piyg_r": 167, "pizel": [17, 18, 19], "pizza": [150, 151, 152, 153, 154, 155, 156, 157], "pizza_steak_sushi": [150, 151, 152, 153, 154, 156, 157], "pizza_steak_sushi_20_perc": [153, 155], "place": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 37, 38, 51, 52, 53, 54, 55, 56, 59, 68, 71, 72, 77, 78, 80, 83, 89, 90, 92, 94, 103, 106, 146, 147, 149, 150, 151, 152, 153, 154, 155, 161, 173, 177, 178], "placehold": [49, 52, 94], "plai": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 89, 96, 103, 132, 146, 148, 155, 162, 164, 165, 167, 169, 170, 171, 173, 174, 175, 176, 177], "plain": [14, 15, 34, 106, 154, 172], "plan": [101, 148, 155, 175], "plane": [11, 15, 26], "planet": 172, "planets_data": 172, "plant": 148, "plasma": [167, 172, 175], "plasma_r": 167, "plate": 173, "platform": [22, 24, 68, 98, 146, 175], "player": [47, 48, 101, 103, 122], "playground": [7, 148], "ple": 39, "pleas": [48, 133, 152, 155, 162, 164, 165, 166, 168, 172, 173, 175, 177], "plenti": [70, 132, 147, 148, 150, 152, 153, 154, 155], "plot": [4, 25, 107, 111, 147, 148, 149, 153, 155, 161, 176, 177, 178, 179, 180], "plot_confusion_matrix": [148, 149], "plot_data": 11, "plot_decision_boundari": 148, "plot_figur": 11, "plot_func": 177, "plot_function1": 27, "plot_function2": 27, "plot_index": [16, 17, 18, 19], "plot_joint": 166, "plot_kw": 167, "plot_layout": 11, "plot_loss_curv": [150, 152, 154, 155], "plot_predict": [147, 148], "plot_predictions_trac": 11, "plot_test_trac": 11, "plot_training_trac": 11, "plot_transformed_imag": 150, "plotcontour": 30, "plotdist": 30, "plotli": [11, 166], "plotlin": 123, "plotnonfinit": 170, "plotter": 170, "plottext": 30, "plotting_context": 162, "plt": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 27, 30, 107, 111, 122, 123, 147, 148, 149, 150, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "plu": [95, 146, 150, 174], "plug": 155, "plusl": 143, "pm": [29, 60, 61, 66], "png": [30, 68, 69, 122, 123, 150, 166], "po": [136, 154, 173], "pocoo": 24, "podcast": [147, 152], "poetri": 24, "pofession": 177, "point": [4, 5, 8, 35, 36, 38, 39, 51, 52, 56, 65, 66, 70, 80, 81, 82, 91, 92, 95, 102, 104, 106, 122, 129, 146, 147, 148, 149, 150, 152, 153, 155, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178], "point_color": 170, "pointer": 68, "pointplot": [169, 173], "poison": 143, "poisson": 169, "pokemon": 143, "pokemon_data": 143, "poli": 101, "polic": 161, "policekillingsu": 161, "polio": 47, "polito": 143, "poliwag": 143, "poliwhirl": 143, "poliwrath": 143, "pollut": 38, "poloclub": [149, 150, 151, 156, 157], "poly1d": 163, "polyfit": 163, "polygon": 103, "polynomi": [11, 12, 13, 14, 15, 16, 17, 125, 165], "polynomial_degre": [11, 12, 13, 14, 15, 16, 17], "ponyta": 143, "poochyena": 143, "pool": 149, "poor": [146, 147, 148, 150, 152, 155], "poorli": [150, 164], "pop": [42, 55, 56, 122, 167, 171, 176, 179], "popitem": 55, "popul": [37, 57, 68, 74, 81, 152, 153, 175, 177], "popular": [22, 24, 52, 66, 80, 84, 98, 101, 146, 147, 148, 150, 154, 157], "populu": 152, "poriod": 27, "porsch": 144, "port": 98, "portabl": [22, 84, 98], "portal": 174, "portfolio": [155, 184], "portion": [52, 53, 71, 75, 96, 149, 150, 152, 153, 154, 161], "portrai": 164, "portug": 122, "portugues": 68, "porygon": 143, "porygon2": 143, "posit": [0, 1, 15, 29, 37, 39, 40, 43, 44, 45, 46, 52, 57, 71, 74, 78, 79, 82, 91, 132, 141, 142, 148, 150, 164, 166, 169, 170, 171, 173, 177], "position_embed": 154, "positional_or_keyword": 139, "positional_ord": 52, "positive_even_numb": 57, "positive_no": 79, "positive_numb": 94, "posixpath": [150, 153, 154, 155, 156, 157], "possess": 165, "possibl": [0, 8, 11, 16, 17, 18, 19, 38, 39, 44, 47, 49, 52, 54, 57, 71, 78, 80, 83, 90, 91, 94, 122, 128, 129, 132, 134, 135, 147, 148, 150, 151, 152, 154, 155, 164, 167, 169, 172, 175, 177, 178, 185], "possibli": [7, 102, 150, 173], "post": [25, 64, 107, 111, 150, 151, 153, 154, 155, 161, 164, 169, 170, 171, 172], "postag": 176, "postal": 149, "poster": 162, "potato": [71, 74, 95], "potenti": [122, 132, 147, 148, 149, 150, 153, 154, 155, 167, 174, 176], "pound": 174, "pow": [70, 80, 82], "pow2": [53, 57], "power": [34, 35, 47, 52, 53, 57, 70, 80, 82, 89, 90, 95, 96, 103, 104, 108, 112, 116, 125, 126, 128, 132, 146, 147, 149, 150, 152, 153, 154, 155, 175, 177], "powtwo": [34, 35], "powtwogen": 35, "pp": 39, "pple": 39, "ppp": 28, "pprint": 147, "practic": [22, 23, 28, 29, 39, 54, 71, 72, 74, 80, 85, 106, 126, 132, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 166, 172, 173, 174, 175, 177, 184], "practical_estimation_of_the_bandwidth": 168, "praction": [152, 153], "practition": [153, 154], "pre": [0, 80, 98, 147, 150, 152, 154, 165, 173, 174, 175, 177], "prebuilt": 24, "prec": 30, "preced": [43, 60, 61, 71, 77, 89, 103, 166], "precis": [1, 51, 95, 137, 142, 146, 148, 162, 165, 169, 175, 177], "precision_histori": 8, "precision_scor": 148, "preciss": [8, 16, 17, 18, 19], "pred": [148, 149, 150, 152, 155, 156, 157], "pred_and_plot": 154, "pred_and_plot_imag": [150, 152, 153, 154, 159], "pred_and_stor": 155, "pred_class": [149, 155], "pred_dict": 155, "pred_label": [149, 155], "pred_labels_and_prob": 155, "pred_list": 155, "pred_logit": [149, 155], "pred_prob": [149, 155], "pred_tim": 155, "predefin": [0, 5, 11, 68, 74, 80, 93, 162], "predicit": [148, 155], "prediciton": 149, "predict": [0, 4, 5, 14, 15, 98, 156, 157, 159, 165, 175], "predicted_label": [16, 17, 18, 19], "predictions_num": [11, 12, 13], "predicton": 149, "predictor": 165, "predomin": 26, "prefer": [35, 36, 51, 89, 103, 122, 133, 147, 148, 149, 150, 151, 155, 162, 169, 172, 173], "prefix": [51, 83, 96, 101, 102, 162, 164], "preidction": 152, "premis": [149, 150, 152, 154, 155], "prepar": [151, 152, 153, 155, 156, 157, 159, 161, 176, 184], "prepend": [128, 154], "preprend": 154, "preprocess": [150, 152, 154, 155], "presenc": [6, 51, 95, 109, 154, 166, 182], "present": [45, 47, 49, 52, 55, 56, 69, 71, 79, 84, 95, 132, 135, 136, 139, 146, 149, 150, 153, 154, 155, 157, 162, 163, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 185], "preserv": [51, 155], "preset": 162, "press": [48, 89, 153, 164], "pression": 39, "pressur": 175, "pretrain": [148, 149, 150, 155], "pretrained_effnetb2_food101_model_s": 155, "pretrained_effnetb2_model_s": 155, "pretrained_vit": 154, "pretrained_vit_model_s": [154, 155], "pretrained_vit_result": 154, "pretrained_vit_transform": 154, "pretrained_vit_weight": 154, "pretti": [14, 15, 24, 37, 64, 87, 92, 132, 147, 148, 150, 152, 153, 155, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "prevent": [11, 12, 13, 14, 15, 16, 17, 18, 19, 83, 90, 101, 103, 149, 150, 152, 154, 155], "preview": [161, 163, 165, 166, 167, 171, 172, 173, 175, 177], "previou": [7, 38, 44, 51, 68, 75, 80, 96, 106, 127, 146, 147, 148, 149, 151, 152, 153, 154, 155, 162, 166, 167, 169, 170, 171, 172, 174, 175, 177], "previous": [71, 80, 150, 151, 152, 153, 154, 155, 166, 167, 170, 172, 175, 176, 177], "prgn": 167, "prgn_r": 167, "price": [0, 4, 5, 101, 102, 122, 132, 133, 134, 143, 154, 175], "price_df": 134, "price_list": 134, "pricedf": 144, "primari": [150, 154, 164, 175], "primarili": [47, 48], "prime": [47, 48, 74, 154], "primeap": 143, "princeton": 175, "princip": 174, "principl": [101, 150, 153, 154, 175], "prinplup": 143, "print": [6, 8, 10, 11, 12, 13, 14, 15, 18, 19, 24, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 49, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 89, 90, 91, 92, 93, 95, 96, 97, 101, 102, 103, 104, 106, 109, 122, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 169, 175, 182], "print_data": 75, "print_full_nam": 37, "print_fullnam": [74, 77], "print_hello": 66, "print_hello_three_tim": 66, "print_hi": 66, "print_hi_three_tim": 66, "print_list": 74, "print_msg": 36, "print_this_to_screen": 88, "print_train_tim": 149, "printer": [36, 37], "printf": 52, "printhello": 96, "printinfo": 77, "printnam": 101, "printstudentdata": 102, "prior": [7, 147, 149, 150, 152, 175], "priori": 0, "prism": [167, 176], "prism_r": 167, "privaci": [155, 184], "privat": [38, 80, 101, 102, 155], "privatenam": 89, "privileg": 176, "pro": [146, 150, 153, 155], "prob": [148, 150, 152, 155, 156, 157], "probabl": [1, 5, 8, 11, 12, 13, 23, 51, 90, 122, 126, 147, 149, 150, 152, 153, 154, 155, 156, 157, 164, 166, 171, 172, 178, 184], "problem": [0, 12, 24, 29, 36, 38, 40, 52, 71, 78, 101, 147, 149, 150, 152, 153, 154, 155, 164, 172, 176, 177, 185], "probopass": 143, "proce": [7, 49, 94, 167], "procedur": [102, 175], "process": [0, 7, 11, 13, 14, 15, 17, 18, 19, 24, 28, 29, 31, 35, 48, 49, 54, 57, 66, 71, 78, 93, 98, 101, 102, 103, 106, 132, 134, 138, 146, 149, 150, 152, 154, 155, 165, 176, 177, 184], "processor": [98, 149], "prod": [28, 80], "prod_": 28, "prod_i": 28, "prod_j": 28, "produc": [9, 15, 35, 39, 44, 71, 87, 103, 122, 123, 128, 136, 139, 146, 147, 148, 149, 153, 154, 155, 162, 184], "product": [11, 23, 26, 78, 80, 84, 90, 98, 104, 125, 128, 146, 149, 150, 151, 154, 164, 165, 166, 167, 177, 184], "profession": [122, 162, 163, 164, 169, 170, 172], "profici": 165, "profil": [153, 155], "profit_rang": 123, "profitlist": 123, "program": [0, 7, 18, 19, 24, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 57, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 72, 74, 75, 76, 79, 80, 82, 83, 84, 85, 89, 90, 91, 92, 93, 94, 96, 102, 103, 104, 106, 150, 151, 153, 155, 165, 175, 184], "programdata": [61, 69, 80, 136, 139, 140, 141, 161, 164, 168, 170], "programm": [0, 38, 51, 57, 71, 74, 84, 89, 91, 101, 106, 167], "programmar": 85, "programmat": [147, 153], "progress": [24, 147, 148, 149, 150, 153], "project": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 59, 83, 85, 147, 148, 150, 151, 153, 154, 155, 157, 165, 167, 174, 177, 184], "promin": 169, "promis": [106, 150, 154, 161, 167, 175], "promot": [93, 95], "prompt": [45, 74, 80, 94, 95, 125, 155], "prone": [150, 154], "pronoun": 101, "pronounc": [154, 176], "prop": [147, 155, 170, 173], "prop_cycl": [25, 107, 111], "proper": [70, 101, 137, 155], "properli": [68, 69, 70, 87, 102, 171, 172, 177], "properti": [22, 41, 80, 101, 103, 135, 170, 175], "propon": 152, "proport": [0, 4, 5, 11, 13, 16, 17, 18, 19, 32, 148, 155, 171, 173, 175], "propos": 106, "prospect": 0, "protect": [54, 71, 92, 101, 102], "protein": [146, 147], "protocol": [24, 34], "prototyp": [3, 10, 22, 102], "proud": 153, "proven": 152, "provid": [0, 22, 24, 36, 38, 42, 47, 49, 51, 52, 53, 55, 66, 69, 71, 72, 74, 77, 80, 84, 94, 101, 102, 103, 123, 125, 128, 130, 132, 133, 134, 136, 139, 144, 149, 151, 154, 155, 164, 166, 169, 171, 175, 176, 177, 185], "proxi": [70, 103, 155], "prune": 163, "pseudo": [71, 81], "pseudocod": 154, "pseudocolor": 164, "pseudorandom": 146, "psychic": 143, "psyduck": 143, "pt": [147, 151, 156, 157], "pth": [147, 149, 151, 153, 154, 155, 156, 157], "ptp": 169, "pubic": 155, "public": [84, 101, 153, 154, 155], "publicli": 153, "publish": [152, 154, 155, 175], "pubu": 167, "pubu_r": 167, "pubugn": 167, "pubugn_r": 167, "pull": [127, 154, 164, 173, 174, 177], "pullov": [17, 19, 149], "puls": 174, "pumpkabooaverag": 143, "pumpkaboolarg": 143, "pumpkaboosmal": 143, "pumpkaboosup": 143, "punctuat": 80, "puor": 167, "puor_r": 167, "pupitar": 143, "purchas": [0, 148, 150, 155], "purd": 167, "purd_r": 167, "pure": [147, 153, 155], "purpl": [164, 167, 169], "purples_r": 167, "purpos": [7, 22, 24, 42, 68, 72, 79, 80, 81, 89, 90, 101, 102, 103, 104, 108, 112, 134, 146, 147, 148, 150, 153, 154, 157, 163, 164, 165, 170, 171, 174, 175, 177], "purrloin": 143, "purugli": 143, "push": 155, "put": [38, 39, 43, 44, 49, 52, 53, 71, 87, 94, 96, 130, 149, 151, 152, 153, 155, 156, 157], "puzzl": [149, 154, 155], "pvalu": 163, "pwr": 146, "py": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 37, 52, 61, 72, 76, 80, 83, 84, 87, 90, 94, 136, 139, 140, 141, 146, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 161, 164, 168, 170], "py3": 80, "py_list": 53, "py_tupl": 54, "pybrain": 24, "pyc": 155, "pycharm": [24, 162], "pydata": [161, 175, 179], "pygam": 24, "pykyra": 24, "pynb": 80, "pyplot": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 27, 107, 111, 122, 123, 147, 148, 149, 150, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "pyqt": 24, "pyramid": [24, 47, 52], "pyroar": 143, "pyscript": 80, "pyth0ndatatyp": 52, "pytho": 52, "python": [97, 98, 122, 127, 128, 135, 136, 139, 142, 146, 147, 149, 150, 152, 153, 154, 156, 158, 159, 163, 165, 167, 170, 172, 175, 176, 184, 185], "python3": [55, 71, 149, 150, 155], "python32": 52, "python38": 80, "python4datasci": 80, "python99": [44, 68, 69], "python_datatyp": 52, "python_dataypes_2021": 52, "python_learn": 69, "python_studi": 69, "pythonblogsoftwar": 24, "pythondatatyp": 52, "pythonpath": 80, "pythonregex": 39, "pythonthi": 89, "pythonwikiengin": 24, "pythonwin": 80, "pytorch": [47, 156, 159, 184], "pytorch_project": 157, "pytz": [59, 63], "pyweek": 24, "q": [31, 90, 146, 149, 152, 153, 154, 155, 167, 171], "qkv": 154, "quad": [27, 31, 32], "quadrat": 74, "quagsir": 143, "qualit": [152, 153, 164], "qualiti": [122, 123, 149, 150, 152], "quantil": [122, 171], "quantit": [152, 171, 173, 176], "quantiti": 173, "quantiz": 164, "quarter": 175, "quarterli": 177, "quartet": 167, "quartil": [122, 171, 172, 173], "queen": 170, "queenstown": 171, "queri": [132, 154, 165, 175], "question": [48, 53, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 176], "quick": [84, 130, 150, 151, 154, 155, 163, 170, 176], "quicker": [152, 153, 155], "quickest": 155, "quickli": [129, 150, 151, 152, 153, 154, 162, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177], "quilava": 143, "quilladin": 143, "quintero": 161, "quit": [7, 11, 13, 47, 54, 70, 71, 127, 129, 146, 147, 150, 152, 153, 154, 155, 163, 165, 166, 167, 168, 169, 170, 174, 175, 177, 178], "quot": [52, 68, 74, 84, 89, 91, 92, 147, 154, 162, 164], "quotat": [84, 87], "quux": 53, "quz": 53, "qwilfish": 143, "r": [4, 11, 12, 13, 30, 31, 32, 45, 47, 48, 49, 52, 53, 54, 55, 56, 61, 66, 68, 69, 71, 74, 90, 91, 95, 101, 102, 122, 123, 127, 132, 140, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "r1": 126, "race": [161, 169], "ractangular": 31, "rad": [32, 122], "rad2deg": 32, "radian": [80, 82], "radiu": [90, 95, 101], "raichu": 143, "raikou": 143, "rain": 5, "rainbow": [164, 167, 170, 172, 173, 175], "rainbow_r": 167, "rais": [8, 34, 35, 38, 49, 52, 53, 54, 55, 56, 61, 68, 70, 72, 80, 82, 84, 88, 95, 104, 106, 136, 141, 150, 170], "ralt": 143, "ram": 68, "ramen": 155, "ramp": 164, "rampardo": 143, "ran": [47, 70, 71, 87, 101, 102, 146], "rana": 126, "rand": [80, 132, 146, 167, 169, 175, 176, 178], "randaug": 150, "randint": [80, 81, 149, 167, 176], "randn": [25, 107, 111, 147, 149, 153, 154, 168, 171, 175], "random": [1, 3, 8, 11, 13, 16, 17, 18, 19, 22, 25, 51, 56, 68, 86, 107, 111, 125, 132, 147, 148, 152, 153, 154, 155, 156, 157, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "random_idx": 149, "random_image_path": [150, 155], "random_image_size_tensor": 146, "random_image_tensor": 154, "random_index": 154, "random_input_imag": 154, "random_input_image_error": 154, "random_numb": 80, "random_sampl": 126, "random_samples_idx": 150, "random_se": [146, 148], "random_split": 155, "random_split_1": 155, "random_split_2": 155, "random_st": [148, 176], "random_tensor": [146, 149], "random_tensor_a": 146, "random_tensor_b": 146, "random_tensor_c": 146, "random_tensor_d": 146, "random_user_id": 80, "randomhorizontalflip": 150, "randomli": [3, 147, 148, 150, 152, 153, 155, 163, 175], "randomlist": 71, "randomst": 165, "randon": 176, "randrang": [51, 80, 81], "rang": [4, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 27, 28, 29, 35, 39, 48, 49, 52, 53, 54, 55, 57, 66, 70, 71, 72, 74, 80, 81, 89, 92, 101, 103, 107, 111, 125, 126, 127, 128, 132, 133, 134, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "rangeindex": [18, 19, 132, 142], "rank": [9, 11, 13, 125, 126, 127, 128], "rapid": 22, "rapidash": 143, "rapidli": [22, 155], "rare": [8, 71, 106, 146], "raspberri": 155, "rate": [4, 5, 11, 12, 13, 95, 122, 147, 148, 149, 150, 151, 153, 154, 155, 157, 166, 169, 170, 174], "rather": [5, 7, 18, 19, 59, 66, 80, 84, 89, 103, 132, 133, 135, 139, 141, 142, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 171, 173, 175], "ratic": 143, "ratio": [0, 5, 14, 15, 16, 17, 82, 155, 177], "ration": 51, "rational": 155, "rattata": 143, "raw": [39, 91, 149, 150, 151, 152, 153, 154, 155, 156, 157, 175], "raw_str": 91, "rayquaza": 143, "rayquazamega": 143, "rb": 68, "rbg": 179, "rc": [162, 164, 173], "rcparam": [25, 27, 107, 111, 173, 175, 176], "rdbm": 177, "rdbu": [148, 167], "rdbu_r": 167, "rdgy": 167, "rdgy_r": 167, "rdpu": 167, "rdpu_r": 167, "rdylbu": [148, 167], "rdylbu_r": 167, "rdylgn": 167, "rdylgn_r": 167, "re": [0, 7, 11, 24, 48, 52, 53, 74, 80, 132, 141, 142, 143, 156, 158, 161, 162, 163, 165, 166, 167, 169, 170, 171, 172, 173, 175, 177], "rea": 47, "reacal": 8, "reach": [1, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 38, 47, 49, 68, 115, 150], "react": [52, 53, 68], "read": [22, 35, 36, 39, 40, 66, 70, 71, 74, 75, 76, 84, 89, 90, 96, 98, 102, 126, 127, 128, 132, 140, 146, 147, 148, 149, 150, 152, 153, 154, 155, 161, 165, 166, 176, 184], "read_clipboard": 132, "read_csv": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 122, 123, 132, 133, 140, 143, 144, 161, 166, 172, 173], "read_excel": [132, 143], "read_html": 132, "read_imag": 150, "read_json": 132, "read_sql": 132, "read_tabl": 132, "readabl": [22, 28, 29, 42, 57, 68, 79, 80, 89, 98, 106, 133], "reader": 68, "readi": [71, 101, 103, 146, 147, 149, 150, 152, 153, 154, 155, 185], "readili": [85, 94], "readlin": [68, 155], "readm": 68, "readthedoc": 148, "real": [1, 3, 4, 7, 8, 10, 23, 24, 31, 51, 90, 91, 92, 101, 102, 132, 147, 148, 150, 151, 152, 153, 155, 157, 165, 170, 171, 172, 175, 176, 184], "realiti": [90, 154], "realiz": 172, "realli": [16, 17, 18, 19, 39, 101, 102, 146, 147, 149, 150, 152, 153, 154, 155, 161, 163, 165, 166, 169, 170, 171, 172, 175, 176, 177, 178], "rearrang": [146, 150, 153, 154], "reason": [4, 12, 35, 36, 37, 38, 51, 74, 79, 96, 102, 106, 129, 138, 146, 149, 154, 155, 161, 163, 170, 172, 177], "reassign": [37, 52, 54, 90, 138, 139, 146, 150], "rebind": 96, "recal": [1, 148, 149, 153, 154], "recalcul": [147, 148], "recall_histori": 8, "recall_scor": 148, "recap": 148, "receiv": [7, 43, 44, 57, 77, 106, 154, 155], "recent": [34, 35, 36, 37, 38, 40, 48, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 127, 136, 139, 141, 146, 149, 150, 152, 170, 175], "reciev": 24, "recip": [147, 151, 155], "reciproc": 71, "recogn": [0, 5, 7, 16, 17, 18, 19, 38, 80, 150, 152, 153], "recognit": [0, 7, 16, 17, 154, 155], "recollect": 167, "recomend": 90, "recommend": [0, 24, 38, 39, 40, 60, 61, 66, 68, 83, 89, 90, 102, 125, 126, 146, 147, 150, 152, 154, 155, 157, 165, 167, 169, 170, 171, 173, 176, 184], "record": [97, 140, 146, 161, 175, 177], "recov": 150, "recoveri": 69, "recreat": [149, 150, 152, 154, 155, 156, 157], "recruit": 150, "rect": [101, 169], "rectangl": [47, 95, 101, 169, 171, 173, 177], "rectangular": [173, 177, 178], "rectifi": [44, 148], "rectifier_": 148, "recur": 106, "recurr": 184, "recurs": [22, 31, 86, 103, 155], "recursionerror": 78, "recursor": 78, "recycl": 69, "red": [4, 8, 16, 17, 18, 19, 47, 89, 102, 122, 123, 146, 147, 149, 153, 164, 167, 168, 170], "redeclar": 90, "redefin": [103, 175], "rediu": 101, "redownload": [152, 155], "reds_r": 167, "reduc": [4, 5, 11, 12, 13, 18, 19, 37, 47, 48, 74, 78, 130, 132, 147, 148, 150, 154, 155, 166, 172, 174, 175], "reduceat": 130, "reduct": [0, 26, 184], "redund": [106, 132, 136], "redux": 53, "refactor": [38, 147], "refect": 165, "refer": [22, 24, 36, 37, 49, 52, 53, 54, 68, 70, 80, 83, 84, 85, 90, 91, 95, 96, 101, 103, 106, 112, 128, 129, 130, 132, 146, 147, 148, 149, 150, 152, 154, 155, 156, 157, 159, 161, 162, 164, 165, 167, 170, 171, 173, 174, 175, 176, 177, 181], "referec": 175, "referenc": [75, 76, 146, 150, 154, 161, 170, 171], "reference_vari": 101, "referenceerror": 70, "refin": 165, "reflect": [78, 147, 154, 155, 165, 169, 171, 173, 175, 177], "reform": 177, "reformat": 52, "refresh": [23, 147, 155, 162], "reg": [39, 164, 166, 167, 168, 175, 180], "regard": [163, 170, 175], "regardless": [43, 146, 147, 155], "regex": [22, 41, 143], "regex101": 39, "regex_pattern": 39, "regic": 143, "regigiga": 143, "regim": [153, 154], "regirock": 143, "regist": [84, 150], "registeel": 143, "reglot": 165, "regplot": [163, 167, 169, 176], "regress": [2, 7, 9, 147, 148, 162, 163, 165, 166, 169, 175, 176, 180, 184], "regular": [20, 39, 47, 52, 57, 108, 112, 132, 148, 149, 150, 152, 153, 154, 155, 156, 171, 175], "regularization_param": [11, 12, 13, 14, 15, 16, 17, 18, 19], "regularli": 101, "reign": 150, "reindex": 136, "reindex_axi": 173, "reinforc": 184, "reinvent": 175, "reiter": 148, "reject": 49, "rel": [98, 149, 152, 162, 169, 173, 175], "relat": [4, 23, 59, 65, 66, 68, 70, 71, 77, 104, 148, 150, 154, 155, 161, 163, 170, 171, 174, 175, 176, 177, 178], "relationa": 132, "relationship": [0, 4, 5, 11, 12, 13, 14, 15, 16, 17, 32, 147, 150, 163, 164, 165, 166, 167, 168, 173, 177], "releas": [71, 74, 122, 146, 152, 154, 155], "relev": [132, 149, 162, 166, 170, 174, 177, 178], "reli": [52, 68, 155], "relicanth": 143, "reload": [8, 147, 174], "reload_ext": 8, "relplot": 175, "relu": [148, 149, 150, 151, 156, 157], "rem": 77, "remain": [9, 16, 17, 18, 19, 54, 68, 95, 148, 149, 150, 152, 154, 155, 161, 162, 165, 166, 167, 169, 174, 175, 176], "remaind": [48, 49, 77, 80, 82, 90, 95, 104, 122], "remean": 49, "rememb": [16, 17, 18, 19, 35, 36, 47, 49, 69, 74, 75, 90, 91, 95, 103, 106, 126, 146, 147, 148, 149, 150, 152, 153, 154, 169, 170, 171, 172, 173, 175, 185], "remind": [147, 148, 153, 155, 164], "remoraid": 143, "remot": [71, 146, 153, 154], "remov": [0, 27, 36, 39, 47, 51, 52, 54, 68, 70, 74, 80, 102, 136, 137, 138, 142, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 162, 165, 168, 170, 171, 172, 175, 176], "remove_item": 74, "remove_sourc": 153, "remove_support_word": 68, "renam": [15, 24, 125, 142, 173, 177], "rename_axi": 139, "render": [11, 13, 24, 69, 108, 112], "rent": 154, "repeat": [0, 47, 48, 52, 53, 54, 55, 68, 74, 78, 85, 87, 101, 103, 126, 129, 146, 147, 149, 154, 155, 175, 177], "repeatedli": [42, 47, 48, 49], "repetit": [39, 47], "rephras": 171, "replac": [9, 17, 19, 35, 38, 39, 49, 52, 57, 90, 102, 103, 127, 132, 139, 141, 144, 155, 162, 164, 166, 168, 170, 172, 175], "replic": [147, 149, 151, 155, 156, 157, 160, 175], "repo": [148, 149, 155], "report": [11, 13, 148], "repositori": [9, 37, 52, 146, 151, 154, 155, 157], "repr": 24, "repres": [1, 8, 16, 17, 18, 19, 28, 29, 31, 51, 52, 60, 61, 62, 64, 65, 70, 71, 77, 84, 88, 91, 92, 98, 101, 102, 106, 136, 139, 141, 142, 146, 147, 148, 149, 154, 161, 162, 164, 165, 166, 169, 171, 172, 173, 175, 177, 178], "represent": [0, 24, 51, 52, 60, 61, 84, 101, 132, 147, 150, 152, 153, 154, 155, 161, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "reproduc": [25, 107, 111, 146, 148, 150, 151, 153, 154, 155, 172], "reproducbl": 146, "request": [24, 127, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "requir": [0, 4, 11, 12, 13, 24, 26, 34, 35, 38, 42, 47, 48, 51, 57, 70, 71, 72, 74, 77, 79, 83, 89, 90, 91, 93, 98, 101, 102, 103, 106, 115, 132, 136, 138, 139, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 185], "required_datatyp": 93, "requires_grad": [146, 147, 148, 152, 153, 154, 155], "requis": 170, "rerun": 147, "resampl": 175, "resarch": 52, "rescu": [35, 38], "research": [52, 56, 146, 148, 149, 150, 152, 155, 160, 164, 165, 170, 171, 173, 174, 177, 184], "resembl": [175, 177], "reserv": [88, 90], "reset": [146, 147, 149, 150, 162], "reset_index": [132, 133, 143, 173], "resghap": 8, "reshap": [0, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 30, 125, 128, 130, 150, 152, 154, 178], "reshiram": 143, "resid": [80, 168], "residplot": 176, "residu": [11, 13, 154, 167], "resiz": [68, 122, 125, 150, 151, 152, 153, 154, 156, 157], "resize_s": [152, 153, 154, 155], "resnet": [152, 154], "resnet18": 152, "resnet50": 152, "resolut": [122, 154], "resolv": [134, 154, 155, 176], "reson": 175, "resourc": [34, 68, 71, 146, 147, 152, 154, 164, 166, 167, 172, 173, 174, 175], "respecitv": 150, "respect": [52, 59, 66, 71, 77, 92, 93, 94, 102, 133, 135, 139, 140, 146, 147, 148, 149, 154, 155, 157, 163, 164, 165, 166, 173, 174, 175, 176, 177], "respectivv": 173, "respons": [104, 155, 170, 174, 184], "rest": [6, 47, 49, 52, 53, 68, 71, 74, 84, 109, 136, 139, 149, 150, 154, 155, 162, 165, 167, 169, 170, 171, 173, 174, 175, 176, 182], "restart": [35, 47, 80, 149, 153, 154, 155, 162], "restaur": [165, 169, 170, 172], "restor": 81, "restrict": [38, 101, 106, 172], "restructur": 84, "result": [3, 7, 11, 12, 13, 27, 28, 29, 31, 32, 34, 35, 36, 37, 39, 40, 44, 45, 47, 48, 49, 51, 52, 53, 54, 65, 66, 70, 71, 74, 75, 77, 78, 80, 85, 88, 89, 94, 95, 103, 104, 127, 128, 129, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 151, 152, 154, 156, 157, 158, 162, 164, 165, 166, 167, 173, 174, 175, 176, 177], "resurc": 174, "ret": 170, "retain": [149, 154], "rethink": 152, "retriev": [38, 52, 55, 77, 84, 92, 141, 146, 152], "return": [8, 11, 13, 16, 17, 18, 19, 24, 30, 34, 35, 37, 38, 39, 45, 47, 48, 52, 56, 57, 59, 60, 61, 62, 64, 65, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 84, 85, 87, 88, 89, 94, 95, 101, 102, 103, 104, 106, 126, 127, 128, 129, 132, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 162, 163, 164, 169, 170, 172, 175, 176, 177], "reuniclu": 143, "reus": [24, 38, 101, 127, 150, 151, 153, 154, 156, 157], "reusabl": [40, 74, 80, 101, 103, 151, 154, 157, 158], "rev": 122, "rev_str": 35, "reveal": [106, 150, 154, 155, 164, 176, 185], "revenu": 164, "revers": [35, 37, 52, 54, 55, 74, 125, 146, 164], "reverse_list": 74, "reverse_list1": 74, "review": [125, 150, 154, 155, 169, 170], "revis": [172, 173], "revisit": [166, 167], "revolut": 122, "revolution": 0, "reward": [0, 39, 52], "rewrit": [44, 74, 151, 157], "rewritten": 57, "rf": [152, 153, 154, 155], "rfind": 52, "rfloor": 95, "rgb": [11, 80, 149, 150, 152, 156, 157, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "rgb_color_gen": 80, "rgba": [164, 166], "rhydon": 143, "rhyhorn": 143, "rhyperior": 143, "rich": [171, 175, 176], "richard": 153, "rid": [148, 162, 168, 170, 172], "right": [27, 28, 30, 32, 42, 52, 72, 77, 84, 89, 94, 95, 102, 103, 104, 122, 123, 127, 132, 146, 147, 148, 149, 150, 152, 153, 154, 155, 162, 163, 165, 166, 169, 170, 171, 172, 173, 174, 177], "rightarrow": [27, 28, 29, 31, 32], "rigor": 175, "rindex": 52, "riolu": 143, "rise": 154, "risk": [175, 176], "rjust": [30, 52, 94], "rm": [152, 153, 154, 155], "rmdir": 80, "rmtree": [69, 155], "road": 152, "roam": 80, "robert": [147, 164], "robot": 0, "robust": [22, 98, 129, 150, 165, 179], "rock": 143, "rocket": [24, 167, 169, 170, 172, 173, 174, 175, 176, 177], "rocket_r": 167, "rodriguez": 161, "roduct": 28, "roger": 122, "roggenrola": 143, "rohan": 5, "roi": 175, "role": [20, 89, 103, 132, 184], "roll": [130, 141, 147, 154], "romeo_and_juliet": 68, "romero": [132, 133, 144], "ronald": [10, 14], "ronaldo": [47, 48, 122], "room": 4, "root": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 68, 71, 80, 82, 125, 128, 149, 150, 155, 156, 157], "rose": 135, "roselia": 143, "roserad": 143, "ross": 149, "rot": 164, "rotat": [150, 154, 155, 164], "rotom": 143, "rotomfan": 143, "rotomfrost": 143, "rotomheat": 143, "rotommow": 143, "rotomwash": 143, "rough": 175, "roughli": [154, 155, 166, 177], "round": [31, 35, 43, 52, 57, 80, 93, 95, 148, 155], "rout": 155, "routin": [87, 128, 173, 175], "row": [8, 9, 12, 15, 16, 17, 18, 19, 31, 47, 48, 57, 68, 122, 125, 126, 127, 128, 129, 132, 136, 137, 139, 141, 142, 143, 146, 149, 152, 154, 155, 163, 165, 166, 167, 169, 173, 174, 176, 177, 178, 179], "row1": 138, "row2": 138, "row_color": 179, "row_index": 140, "row_index1": 134, "row_index2": 134, "row_labl": 132, "row_ord": [165, 174, 177], "row_posit": 132, "row_r1": 127, "row_r2": 127, "row_set": [152, 153, 154, 155], "rpm": 144, "rstrip": 52, "rt": 68, "rtol": 149, "rtx": [146, 152], "ru": 71, "rubi": 98, "rufflet": 143, "rug": [163, 168], "rule": [0, 7, 18, 19, 31, 32, 52, 74, 98, 103, 128, 132, 146, 147, 148, 155, 170, 173, 177], "run": [6, 22, 23, 24, 34, 35, 36, 37, 47, 48, 49, 51, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 74, 75, 76, 77, 80, 89, 90, 96, 98, 101, 103, 109, 147, 148, 149, 150, 151, 152, 154, 157, 158, 162, 164, 172, 174, 175, 182], "runnabl": 98, "runtim": [70, 71, 80, 103, 147, 149, 150, 152, 153, 154, 155, 157, 161], "runtimeerror": [70, 71, 146, 149, 150], "runtimewarn": 128, "russia": [37, 53, 71], "russian": 68, "rvalu": 163, "rvert_": 27, "rw": 147, "rwightman": 152, "s1": [59, 101, 141, 142], "s2": [59, 101, 141, 142], "s3": [141, 142, 149], "s4": 142, "s_car": 103, "sabley": 143, "sableyemega": 143, "sacrific": [146, 149, 155], "sad": 36, "safe": [54, 68, 101, 164, 168], "safer": [68, 69], "sagemak": 155, "sai": [1, 4, 5, 7, 37, 39, 48, 77, 80, 90, 102, 103, 132, 146, 148, 149, 150, 151, 152, 153, 154, 155, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 176, 177], "said": [1, 8, 52, 103, 128, 148, 150, 154, 162, 164, 165, 166], "saint": 122, "sake": [133, 161], "salam": 143, "salamencemega": 143, "salari": [72, 101, 103, 122, 136], "salarynotinrangeerror": 72, "sale": 175, "sales_data_of_bathingsoap": 123, "salesdata": 123, "salk": 47, "salmon": 173, "sam": [133, 135, 136, 137, 138, 139, 142], "same": [7, 9, 17, 19, 20, 28, 29, 31, 32, 34, 35, 37, 40, 43, 44, 47, 49, 52, 56, 71, 74, 75, 76, 77, 79, 80, 81, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 108, 112, 123, 125, 126, 127, 128, 129, 132, 135, 136, 137, 139, 140, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177], "sampl": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 25, 34, 68, 81, 91, 101, 103, 107, 111, 126, 129, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 166, 167, 169, 170, 171, 172, 175, 176, 177], "sample_1": 171, "sample_2": 171, "sample_3": 171, "sample_cmap": 164, "sample_color": 164, "sample_combo": 171, "sample_melt": [169, 177], "samsung": 77, "samurott": 143, "san": [122, 161], "sandal": [7, 17, 19, 149], "sandil": 143, "sandshrew": 143, "sandslash": 143, "sanitize_sequ": 170, "sapp": 161, "sat": [146, 170, 171, 172, 173], "satisfi": [31, 37, 42, 48, 49, 57, 103, 127, 154], "satur": [164, 171, 172, 173, 175], "save": [24, 30, 34, 35, 80, 87, 98, 122, 146, 148, 150, 152, 153], "save_filepath": 153, "save_model": [151, 153, 154, 155, 156, 157], "saved_model": 157, "saved_model_01": 147, "savefig": [30, 122, 123, 155], "saw": [24, 102, 148, 152, 153, 154, 155], "sawk": 143, "sawsbuck": 143, "scalabl": [155, 177], "scalar": [26, 128, 129, 132, 133, 148, 153, 172, 173], "scale": [0, 122, 129, 148, 149, 151, 152, 153, 154, 155, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "scale_hu": 172, "scan": [98, 150, 176], "scandic": 53, "scandir": 150, "scatter": [8, 10, 11, 12, 13, 14, 15, 134, 147, 148, 155, 163, 165, 167, 168, 169, 170, 174, 176, 177, 180], "scatter3d": 11, "scatter_kw": [165, 166, 167, 169, 176], "scatterbug": 143, "scatterplot": [165, 166, 167, 169, 170, 177], "scc": 166, "scenario": [0, 4, 76, 103, 150, 154, 155, 162, 165, 166, 170, 171, 172, 175, 185], "scene": [11, 146, 147, 149, 153], "sceptil": 143, "sceptilemega": 143, "schedul": [147, 154], "scheme": [154, 164], "school": [23, 51, 133, 146, 172, 173], "scienc": [0, 1, 8, 22, 24, 52, 55, 68, 74, 80, 132, 135, 145, 147, 148, 154, 157, 163, 165, 174, 175, 177, 185], "scientif": [24, 125, 154, 164, 172], "scientist": [148, 153], "scikit": [47, 125, 148, 176, 184], "scipi": [24, 128, 163, 168, 175, 176], "scizor": 143, "scizormega": 143, "scoliped": 143, "scope": [22, 36, 70, 75, 76, 80, 89, 94, 100, 148, 170, 171, 177], "score": [1, 4, 8, 9, 11, 13, 45, 133, 148, 171, 173], "scorebook": 173, "scorecard": [173, 177], "scott": 172, "scrafti": 143, "scraggi": 143, "scratch": [34, 101, 103, 146, 151, 152, 153, 154, 155], "screen": [52, 59, 87, 94, 165, 174], "script": [24, 71, 80, 95, 98, 148, 149, 150, 152, 153, 154, 158], "scroll": 147, "scyther": 143, "sd": [129, 173, 175], "sdk": 155, "seaborn": [166, 167, 168, 173, 174, 175, 176, 177, 178, 179], "seadra": 143, "seagreen": 177, "seak": 143, "sealeo": 143, "search": [38, 52, 55, 83, 96, 103, 144, 149, 153, 154, 155, 174], "season": [45, 74], "second": [7, 31, 34, 35, 37, 46, 47, 52, 53, 54, 57, 60, 61, 63, 64, 65, 66, 70, 71, 75, 77, 80, 85, 90, 94, 95, 102, 103, 106, 127, 135, 136, 139, 141, 144, 146, 148, 149, 150, 152, 153, 154, 155, 156, 157, 162, 170, 171, 172, 173, 175, 177], "second_last": 52, "second_lett": 52, "second_numb": 94, "secondari": 46, "secondli": [146, 165, 175], "secret": [154, 185], "section": [2, 7, 36, 51, 52, 57, 68, 70, 89, 94, 115, 132, 133, 134, 135, 136, 137, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 169, 172, 174, 175, 185], "sector": [14, 15], "secur": [101, 147, 149], "sedan": [132, 133, 144], "see": [4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 34, 35, 36, 37, 38, 39, 40, 44, 47, 48, 49, 51, 52, 55, 57, 66, 68, 70, 71, 74, 75, 76, 77, 79, 80, 81, 84, 87, 88, 89, 92, 93, 94, 95, 98, 101, 103, 104, 106, 107, 108, 109, 111, 112, 125, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 181, 182], "seed": [25, 81, 107, 111, 147, 149, 150, 152, 154, 155, 156, 157, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "seedot": 143, "seek": [68, 146], "seek_set": 68, "seekabl": 68, "seel": 143, "seem": [51, 83, 106, 148, 149, 153, 154, 155, 163, 171, 172, 174, 175, 176, 177], "seen": [36, 38, 68, 90, 106, 132, 133, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 167, 168, 169, 170, 171, 176, 177], "segment": [0, 85, 149, 162, 163, 165, 169, 174], "segreg": [162, 169, 172, 173, 175, 177], "seismic": 167, "seismic_r": 167, "seismitoad": 143, "select": [0, 4, 5, 24, 52, 122, 125, 127, 133, 136, 139, 144, 152, 153, 155, 164, 172, 175, 176, 177], "select_difficulti": 83, "select_threshold": 8, "selectbackward0": [148, 154], "self": [0, 34, 35, 38, 57, 71, 72, 84, 101, 103, 104, 136, 139, 141, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 161, 170], "self_attn": 154, "self_mag": 104, "selfattent": 154, "sell": 101, "semest": 147, "semi": [24, 103, 152], "send": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 175], "sens": [0, 4, 11, 12, 13, 37, 47, 88, 90, 128, 132, 147, 148, 149, 151, 154, 157, 161], "sensat": 154, "sensibl": 104, "sensit": [49, 88, 90, 95, 153, 164, 175], "sent": [7, 155], "sentenc": [39, 47, 52, 56, 94, 95, 154], "sentinel": 34, "sentret": 143, "sep": [60, 61, 84, 87, 94, 129, 143], "sepal": [9, 10, 14, 122, 161, 169], "sepal_length": [10, 14, 161, 167, 169, 170, 176, 179], "sepal_width": [10, 14, 161, 166, 167, 169, 170, 176, 179], "sepallength": 122, "sepallengthcm": 122, "sepalwidthcm": 122, "separ": [7, 18, 19, 44, 47, 51, 52, 53, 54, 55, 56, 57, 68, 69, 71, 72, 74, 88, 89, 90, 92, 94, 95, 96, 101, 103, 123, 134, 140, 147, 148, 149, 150, 162, 163, 165, 167, 169, 171, 172, 175, 176, 177], "separatelli": 15, "seper": 150, "septemb": 45, "seq": [28, 29, 81], "sequenc": [28, 29, 34, 35, 47, 49, 53, 54, 55, 68, 69, 70, 74, 78, 79, 80, 81, 87, 89, 91, 92, 93, 95, 96, 127, 129, 141, 142, 146, 152, 154, 165, 166, 175, 176], "sequencemethod": 89, "sequenti": [0, 141, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "serbian": 68, "seren": 161, "seri": [29, 35, 46, 47, 48, 64, 80, 98, 144, 147, 149, 150, 151, 152, 154, 155, 165, 168, 169, 172, 174, 177, 184], "serial": [84, 147], "serie_function1": 27, "serie_function2": 27, "serif": [173, 175], "serperior": 143, "serv": [3, 9, 10, 17, 19, 72, 84, 108, 112, 147, 154, 174], "server": [1, 8, 153, 155, 175], "servic": [149, 151, 153, 155], "servin": 143, "session": [80, 150, 153], "set": [0, 1, 3, 4, 9, 10, 12, 13, 14, 15, 22, 24, 34, 38, 39, 48, 52, 53, 58, 68, 69, 74, 80, 91, 93, 95, 101, 102, 103, 122, 126, 127, 129, 132, 133, 134, 136, 137, 138, 139, 146, 148, 149, 151, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185], "set1": [165, 167, 170, 173, 177], "set1_r": 167, "set2": [167, 171, 172, 173, 176], "set2_r": 167, "set3": [167, 171, 172], "set3_r": 167, "set_": 170, "set_1": 102, "set_axis_label": [174, 177], "set_context": 162, "set_fonts": 173, "set_hatch": 122, "set_index": [132, 140, 149, 155, 173], "set_opt": 132, "set_printopt": 130, "set_se": [153, 154, 155], "set_styl": [162, 164, 166, 172, 173], "set_temperatur": 38, "set_titl": [123, 150, 155, 174, 177], "set_transform": 170, "set_vis": 176, "set_xlabel": [154, 155, 172, 173, 175], "set_xtick": [154, 173], "set_xticklabel": [172, 174], "set_ylabel": [154, 155, 172, 173, 175], "set_ytick": [154, 173], "setattr": [102, 103], "seterr": 130, "setmaxpric": 101, "setosa": [9, 10, 14, 122, 161, 169, 179], "setstat": 81, "settabl": 51, "setter": 101, "setup": [14, 15, 18, 19, 146, 147, 150, 151, 156, 157], "seven": [47, 80], "sever": [4, 5, 9, 10, 14, 24, 35, 39, 45, 53, 65, 66, 71, 80, 94, 127, 146, 148, 150, 151, 152, 153, 154, 155, 157, 172], "severli": 154, "sevip": 143, "sewaddl": 143, "sex": [148, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177], "sex_tim": 172, "sgd": [147, 148, 149, 154], "sh": 101, "shade": [164, 166], "shadow": 165, "shake": 148, "shall": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "shampoo": 123, "shampoosalesdata": 123, "shanghai": 57, "shape": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 30, 101, 125, 126, 127, 128, 129, 132, 136, 147, 151, 152, 153, 155, 156, 157, 161, 165, 169, 172], "sharabl": 101, "share": [9, 17, 19, 80, 102, 106, 132, 146, 151, 152, 153, 154, 155, 163, 164, 170, 175, 177], "shareabl": [153, 155], "sharei": [30, 154, 163, 165, 174, 177], "sharex": [30, 123, 154, 163, 165, 172, 174, 177], "sharpedo": 143, "sharpedomega": 143, "sharpli": 150, "shayminland": 143, "shayminski": 143, "she": [72, 101], "shedinja": 143, "sheet": [124, 131, 132, 145, 147], "sheet_nam": 68, "shelgon": 143, "shell": [35, 36, 37, 66, 87, 90, 146, 155, 165], "shellder": 143, "shello": 143, "shelmet": 143, "shelton": 161, "shieldon": 143, "shift": [24, 44, 47, 48, 49, 89, 95, 104, 146, 153, 176], "shiftri": 143, "shine": [154, 167, 169, 172], "shinx": 143, "shirt": [17, 19, 149], "shoot": 161, "short": [45, 47, 57, 74, 79, 84, 89, 90, 140, 146, 149, 150, 151, 153, 154, 155, 157, 174], "shortcut": [22, 31, 146], "shorten": 71, "shorthand": 122, "shortli": [154, 155, 165, 172, 176], "shot": [161, 173, 175], "should": [4, 5, 6, 8, 11, 12, 13, 14, 15, 16, 17, 35, 36, 37, 39, 40, 43, 44, 47, 51, 55, 57, 68, 69, 71, 74, 80, 84, 89, 90, 94, 98, 102, 106, 109, 122, 123, 127, 128, 132, 133, 136, 137, 140, 141, 142, 146, 147, 148, 151, 154, 155, 156, 157, 163, 164, 165, 166, 170, 171, 175, 177, 182, 184], "shouldn": [149, 150, 153, 170, 175], "shout": 154, "show": [4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 34, 48, 49, 52, 60, 61, 65, 75, 77, 78, 79, 80, 91, 98, 101, 102, 104, 108, 109, 112, 122, 132, 133, 135, 138, 139, 140, 142, 146, 147, 149, 150, 152, 154, 155, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 182], "show_config": 130, "showcap": 169, "showcas": [146, 152, 154, 155], "showflier": [169, 171], "shown": [3, 34, 37, 38, 44, 47, 49, 52, 53, 70, 83, 98, 101, 132, 133, 134, 136, 137, 138, 139, 140, 151, 162, 171, 173, 178], "showroom": 132, "shroomish": 143, "shuckl": 143, "shuffl": [51, 80, 81, 149, 150, 151, 155, 156, 157], "shuffle_list": 80, "shuppet": 143, "shutil": [69, 155], "sibl": 7, "sibsp": [171, 173], "side": [95, 103, 132, 146, 149, 150, 151, 156, 157, 162, 169, 171, 177], "sig": 170, "sight": 34, "sigilyph": 143, "sigma": [8, 28, 81], "sigma_squar": 8, "sigmoid": [5, 7, 148], "sigmoidbackward0": 148, "sign": [25, 29, 77, 82, 89, 90, 107, 111, 155, 165, 170], "signal": [0, 7, 155, 175], "signatur": 106, "signific": [23, 51, 90, 132, 149, 154, 161, 164, 165], "significantli": [8, 11, 12, 13], "signs_of_mental_il": 161, "silcoon": 143, "silenc": 140, "silu": 152, "silver": 150, "silverman": 172, "simiar": 92, "similar": [0, 4, 7, 8, 11, 13, 33, 35, 37, 39, 40, 47, 48, 52, 54, 57, 68, 74, 80, 83, 89, 96, 102, 108, 112, 127, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 165, 166, 168, 169, 170, 172, 174, 175, 177, 178, 179], "similari": 95, "similarity_": 30, "similarli": [31, 32, 38, 39, 51, 52, 56, 68, 69, 75, 76, 83, 91, 92, 96, 101, 102, 103, 104, 106, 135, 142, 149, 154, 161, 163, 164], "similiar": [148, 149, 153, 154], "simipour": 143, "simisag": 143, "simisear": 143, "simmon": 164, "simpl": [7, 18, 19, 20, 22, 24, 34, 35, 36, 37, 38, 48, 52, 55, 59, 68, 71, 72, 80, 87, 91, 95, 97, 98, 102, 106, 108, 112, 134, 136, 139, 140, 142, 147, 148, 150, 153, 155, 156, 157, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 184], "simple_transform": [150, 153], "simpler": [24, 78, 148, 165, 166, 172, 176], "simplest": [43, 47, 52, 80, 126, 128, 149, 154, 155, 165, 171, 173], "simpli": [34, 35, 37, 38, 48, 52, 74, 83, 89, 95, 96, 102, 103, 128, 136, 154, 174], "simplier": [11, 12, 13, 14, 15, 16, 17, 18, 19], "simplif": 154, "simplifi": [5, 7, 37, 136, 150, 154], "simul": 104, "simultan": [4, 5, 77, 166, 167, 172, 175], "sin": [11, 12, 13, 14, 15, 16, 17, 27, 80, 82, 125, 128, 162, 175, 177], "sinc": [7, 8, 10, 11, 12, 13, 35, 37, 39, 44, 47, 49, 53, 54, 55, 56, 65, 66, 68, 71, 74, 77, 80, 81, 87, 92, 101, 102, 103, 104, 106, 127, 129, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 167, 168, 169], "sine": [27, 80, 82, 125, 162, 175], "sing": [94, 101, 146], "singapor": 54, "singl": [4, 11, 13, 26, 37, 39, 47, 52, 53, 56, 66, 71, 76, 79, 91, 92, 94, 98, 101, 106, 126, 127, 132, 134, 141, 146, 148, 149, 151, 153, 155, 156, 157, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 179], "single_feature_map": 154, "single_flattened_feature_map": 154, "singular": [31, 128], "sinh": [51, 80, 82], "sinlg": 155, "sinplot": 162, "sinusoid": [4, 11, 12, 13, 14, 15, 16, 17, 177], "sinusoid_degre": [11, 12, 13, 14, 15, 16, 17], "site": [80, 136, 139, 140, 141, 150, 161, 164, 168, 170], "situat": [35, 46, 54, 71, 74, 77, 93, 162], "six": [37, 80, 106, 132, 133, 144, 164], "size": [4, 5, 8, 9, 11, 12, 13, 16, 17, 18, 19, 47, 48, 49, 52, 68, 83, 101, 125, 126, 128, 129, 132, 133, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179], "size_func": 176, "skarmori": 143, "sketch": [101, 102], "skew": [155, 175], "skiddo": 143, "skill": [0, 45, 47, 55, 68, 90, 101, 103, 122, 152, 154, 155, 175, 176], "skinnier": 172, "skip": [43, 44, 47, 48, 49, 52, 71, 77, 148, 149, 150, 152, 153, 154, 155, 157], "skiploom": 143, "skitti": 143, "sklearn": [148, 149, 176], "skorupi": 143, "skrelp": 143, "skuntank": 143, "sky": 164, "slake": 143, "slakoth": 143, "slash": [52, 69, 172], "sleep": [22, 67, 80, 87], "slice": [56, 89, 92, 127, 132, 176], "slice_a": 127, "slicebackward0": [148, 154], "slidingtackl": 122, "sliggoo": 143, "slight": [20, 54, 108, 112, 149, 155, 177], "slightli": [66, 88, 146, 147, 150, 152, 153, 154, 155, 161, 170], "slope": [57, 74, 95, 163, 173], "slot": 127, "slow": [128, 136, 155], "slowbro": 143, "slowbromega": 143, "slower": [98, 155], "slowk": 143, "slowli": [150, 153, 154, 155, 169, 170, 171, 175], "slowpok": 143, "slugma": 143, "slurpuff": 143, "small": [7, 11, 12, 13, 20, 49, 57, 72, 80, 85, 98, 108, 112, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 167, 169, 173, 175, 176, 177], "smaller": [45, 46, 74, 93, 125, 128, 135, 146, 147, 149, 150, 152, 153, 154, 155, 167, 169, 176], "smallest": [56, 82, 154], "smallpox": 47, "smart": [90, 154, 155], "smart_divid": 37, "smartphon": [149, 154, 155], "smash": 152, "smeargl": 143, "smfyb": 80, "smi": 146, "smim": 133, "smith": 133, "smoke": [148, 175, 177], "smoker": [165, 168, 169, 170, 171, 172, 173, 174, 175, 177], "smoochum": 143, "smoot": 175, "smooth": [155, 172, 175], "smoother": 165, "smoothli": 77, "sn": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "snake": 90, "snake_cas": 90, "sname": 139, "sneak": 161, "sneaker": [17, 19, 149], "sneaki": 154, "sneasel": 143, "snivi": 143, "snorlax": 143, "snorunt": 143, "snover": 143, "snow": 5, "snubbul": 143, "so": [1, 3, 6, 7, 14, 15, 17, 18, 19, 22, 27, 31, 32, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 52, 53, 54, 56, 68, 70, 71, 74, 75, 77, 79, 80, 81, 85, 88, 89, 90, 91, 93, 95, 96, 98, 101, 102, 103, 104, 106, 109, 122, 125, 127, 128, 132, 133, 136, 138, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182], "soar": 174, "soccer": [122, 177], "social": [1, 8], "socket": 24, "sofifa": 122, "softmax": [146, 148, 149, 150, 151, 152, 155, 156, 157], "softwar": [22, 24, 45, 152, 154, 155, 165], "sold": 123, "sole": [163, 164, 175], "solid": [155, 162], "solosi": 143, "solrock": 143, "solut": [0, 36, 38, 40, 70, 74, 76, 93, 123, 128, 144, 155, 172, 175, 177], "solv": [31, 57, 76, 101, 134, 154, 164, 165, 185], "solve_quadratic_eqn": 74, "some": [1, 5, 7, 20, 21, 23, 24, 25, 28, 29, 34, 35, 36, 37, 38, 39, 42, 45, 47, 48, 51, 52, 53, 54, 55, 56, 57, 68, 70, 71, 74, 76, 78, 80, 84, 87, 90, 92, 94, 95, 98, 101, 103, 106, 107, 108, 110, 111, 112, 113, 127, 128, 129, 132, 133, 136, 138, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 175, 176, 177, 181, 185], "some_tensor": 146, "some_transform": [151, 157], "somedai": 175, "somehow": [165, 173], "someon": [85, 146, 148, 151, 154, 155, 175], "someth": [17, 18, 19, 34, 35, 39, 44, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 78, 80, 89, 94, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177], "sometim": [47, 49, 52, 71, 72, 74, 77, 78, 87, 94, 101, 126, 132, 139, 140, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 162, 170, 172, 176], "somewher": [49, 53, 147, 149, 164, 171], "song": [83, 101, 146, 147, 150, 155], "soon": [47, 70, 101, 102, 148, 149, 154, 165, 167], "sophist": 146, "sort": [37, 47, 56, 80, 142, 147, 149, 150, 153, 155, 169, 170, 172, 177], "sort_valu": [132, 143, 144, 172, 173, 177], "sorted_point": 39, "sota": 150, "sought": 0, "sound": [28, 29, 150, 155, 163, 173], "soup": 91, "sourc": [3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 84, 87, 89, 94, 98, 125, 127, 129, 132, 137, 140, 143, 144, 146, 147, 150, 151, 152, 153, 154, 155, 161, 184], "south": 122, "southampton": [171, 173], "sp": [140, 143], "space": [26, 39, 42, 45, 47, 49, 52, 70, 74, 77, 84, 87, 89, 94, 115, 125, 129, 132, 148, 149, 150, 152, 154, 164, 166, 168, 172, 175, 177], "spain": 122, "spam": [4, 5, 14, 15, 16, 17], "span": [108, 112, 169, 177], "spanish": 68, "spatial": [154, 173, 175], "speak": [34, 35, 106, 146, 173, 177], "speaker": 162, "spearow": 143, "speci": [9, 10, 14, 101, 102, 122, 161, 164, 167, 169, 170, 176, 179], "special": [4, 12, 34, 37, 40, 88, 89, 90, 102, 106, 108, 112, 132, 150, 154, 157, 161, 162, 174, 176, 177], "specialattribut": 89, "specialidentifi": 89, "specialmethod": 89, "specif": [0, 4, 7, 11, 13, 16, 17, 18, 19, 40, 47, 48, 52, 68, 74, 80, 84, 85, 93, 94, 98, 101, 103, 108, 112, 123, 127, 132, 136, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 162, 163, 164, 165, 166, 170, 171, 172, 174, 175, 176, 177, 178], "specifi": [0, 37, 38, 47, 49, 52, 66, 68, 69, 71, 79, 81, 89, 90, 91, 103, 104, 122, 125, 126, 127, 129, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 152, 153, 154, 155, 157, 164, 166, 167, 175, 177], "specifici": [148, 150], "spectral": 167, "spectral_r": 167, "speech": 68, "speech_barack_obama": 68, "speech_donald_trump": 68, "speech_melina_trump": 68, "speech_michelle_obama": 68, "speed": [103, 132, 143, 146, 150, 152, 153, 154, 177], "speed_of_light": 90, "speedup": [148, 154], "spelt": 148, "spend": [147, 148, 149, 150, 152, 154], "spent": [150, 155], "spewpa": 143, "spheal": 143, "sphere": 24, "sphinx": [20, 84, 108, 112], "spike": 175, "spinarak": 143, "spinda": 143, "spine": [162, 166, 171, 172], "spirit": [150, 153, 175], "spiritomb": 143, "split": [3, 9, 10, 15, 24, 30, 37, 47, 52, 56, 94, 125, 132, 140, 149, 152, 153, 155, 162, 169, 170, 172, 176], "split_dataset": 155, "split_siz": 155, "split_string_decor": 37, "splitlin": 68, "splitted_str": 37, "spoink": 143, "spoke": 162, "spoken": [37, 68, 74], "sporad": 150, "sport": 103, "sports_car_info": 103, "sportscar": 103, "spread": [155, 165, 171, 172, 175, 177], "spreadsheet": [68, 132, 147, 149], "spring": [45, 74, 106, 167, 171, 173], "spring_r": 167, "sprinkl": 154, "sprintf": [52, 94], "spritze": 143, "spyder": 162, "sqaur": [16, 17, 18, 19], "sql": [53, 132, 140], "sqr": 79, "sqrt": [16, 17, 18, 19, 30, 32, 80, 82, 125, 128, 130], "squar": [3, 4, 16, 17, 18, 19, 31, 35, 36, 37, 43, 47, 48, 49, 52, 53, 54, 55, 57, 79, 80, 82, 84, 101, 106, 125, 126, 128, 146, 148, 149, 150, 156, 163, 166, 167, 176, 177, 178], "square_numb": [74, 77], "squeez": [53, 148, 149, 150, 154], "squeezebackward0": 148, "squeezebackward1": 149, "squirtl": 143, "sr": 139, "src": 155, "ssh": 146, "sss": 29, "st": 55, "st_size": [153, 154, 155], "stabil": 174, "stabl": [147, 148], "stack": [53, 78, 79, 128, 129, 130, 133, 149, 154, 161, 173, 174, 175, 177], "stackexchang": 5, "stackoverflow": 146, "stackplot": 123, "stage": [150, 153, 154, 163, 175], "stai": [133, 136, 146, 149, 154, 155, 163], "stair": 154, "stakehold": 176, "stamp": [175, 176], "stan": 37, "stand": [20, 37, 68, 108, 112, 147, 148, 149, 150, 153, 154, 155, 171], "standard": [24, 31, 71, 72, 74, 80, 82, 84, 90, 94, 101, 125, 126, 129, 132, 135, 142, 147, 148, 149, 150, 151, 152, 153, 154, 163, 164, 165, 171, 173, 179], "standard_scal": 179, "standardtransform": [150, 156, 157], "standingtackl": 122, "standpoint": 153, "stantler": 143, "star": [37, 47, 97, 152], "staraptor": 143, "starat": 143, "staravia": 143, "starli": 143, "starmi": 143, "start": [0, 6, 7, 20, 22, 34, 35, 37, 42, 43, 47, 48, 52, 53, 54, 66, 68, 71, 74, 81, 83, 88, 89, 90, 92, 96, 108, 109, 112, 115, 125, 127, 129, 132, 133, 134, 135, 136, 138, 139, 141, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 169, 170, 171, 172, 173, 175, 177, 182, 185], "start_dim": [149, 150, 154, 156, 157], "start_index": 24, "start_tim": [150, 152, 155, 156, 157], "startindex": 127, "startswith": 52, "staryu": 143, "stat": [129, 153, 154, 161, 163, 166, 168, 172, 173, 175, 176], "stat_meth": 106, "state": [0, 25, 35, 68, 81, 96, 101, 107, 111, 122, 126, 147, 148, 149, 150, 151, 152, 154, 155, 161, 166, 170, 171], "state_dict": [149, 151, 153, 155, 156, 157], "statement": [22, 35, 50, 53, 55, 59, 66, 68, 70, 72, 79, 87, 94, 95, 98, 100, 101, 102, 127, 177], "static": [94, 106], "staticmethod": 106, "statist": [1, 4, 8, 12, 45, 51, 101, 144, 155, 161, 163, 165, 166, 169, 171, 172, 173, 174, 175, 176, 177, 180, 184, 185], "statistician": 176, "statsmodel": [167, 172], "statu": [53, 148, 161], "std": [101, 102, 125, 129, 130, 132, 152, 153, 154, 155, 161, 166, 168, 173, 177], "std1": 102, "std2": 102, "std3": 102, "stderr": 163, "stdev": 80, "stdout": [84, 94], "steadi": 169, "steak": [150, 151, 152, 153, 154, 155, 156, 157], "steak_sushi": 154, "steel": [27, 143, 161], "steelix": 143, "steelixmega": 143, "stem": [150, 155], "step": [0, 4, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 27, 37, 47, 52, 53, 54, 68, 78, 81, 94, 96, 102, 125, 129, 132, 142, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 176], "step3": 94, "step_siz": 47, "stephen": 176, "stepsiz": 127, "stetement": 45, "stick": [146, 148, 149, 152, 153, 154, 155, 172, 173, 175], "still": [28, 29, 36, 52, 84, 89, 101, 102, 106, 133, 135, 136, 139, 142, 146, 147, 148, 149, 150, 152, 154, 155, 162, 163, 165, 173, 174, 175, 176], "sting": 68, "stochast": [147, 148, 154, 175], "stock": [167, 172, 173], "stockprice_data": 132, "stoke": 177, "stone": [148, 149], "stop": [39, 47, 48, 49, 52, 53, 54, 68, 71, 74, 78, 81, 90, 125, 129, 132, 142, 150, 153, 155, 175], "stopiter": [34, 35, 49, 70], "storag": [101, 146, 150, 154, 155], "store": [24, 34, 35, 36, 38, 47, 49, 51, 52, 53, 60, 64, 68, 71, 72, 76, 83, 90, 93, 94, 95, 96, 98, 101, 103, 128, 132, 133, 134, 140, 146, 147, 149, 150, 151, 152, 153, 154, 156, 162, 167, 175], "store_and_fwd_flag": 175, "stori": [149, 155, 174], "stoutland": 143, "str": [10, 15, 24, 39, 49, 52, 53, 61, 68, 70, 74, 84, 92, 93, 94, 102, 103, 104, 122, 139, 143, 149, 150, 151, 152, 153, 155, 156, 157, 172, 173], "str1": 52, "str2": 52, "str3": 52, "str4": 52, "straight": [4, 70, 92, 146, 147, 149, 154, 155, 157, 166, 178], "straightforward": 164, "strang": 154, "strat": 52, "strategi": 132, "strawberri": [91, 102], "stream": [68, 84], "streamlin": 158, "streamlit": 155, "street": [45, 47], "strength": 7, "stress": [102, 165], "strftime": [22, 61, 62, 63, 64, 66, 67, 153], "strict": 146, "strictli": 163, "stride": [149, 150, 151, 154, 156, 157], "stride_trick": 130, "string": [22, 34, 35, 36, 37, 38, 43, 49, 51, 54, 56, 58, 62, 63, 64, 65, 68, 69, 70, 71, 74, 79, 87, 89, 90, 93, 95, 101, 102, 104, 132, 133, 139, 141, 150, 153, 155, 164, 165, 177], "string1": 52, "string2": 52, "stringifi": 68, "stringmethod": 89, "strip": [52, 122, 139, 155, 161, 164, 169, 171, 174, 175, 180], "strip_data": 170, "stripplot": [161, 164, 169, 170, 171, 175], "strive": 128, "strlist": 172, "stroke": 144, "strong": 27, "stronger": 166, "strongli": 154, "strptime": [22, 60, 67], "structur": [0, 9, 17, 19, 20, 24, 37, 42, 47, 53, 68, 70, 83, 84, 88, 101, 108, 112, 122, 123, 132, 133, 134, 140, 141, 142, 143, 144, 146, 147, 149, 150, 151, 152, 154, 157, 158, 161, 169, 177, 184], "struggl": 170, "stuck": [154, 172], "stud": 101, "stud1": 133, "stud2": 133, "stud3": 133, "stud_ag": 139, "stud_mark": 139, "stud_nam": 139, "student": [45, 47, 53, 55, 94, 101, 102, 132, 133, 135, 136, 140, 141, 142, 169, 170, 173, 177], "student_count": 102, "student_data": 140, "student_df": [132, 133, 135, 136, 137, 138, 139, 141, 142], "student_dict": [132, 133, 135, 136, 137, 138, 139, 141, 142], "student_id": 173, "student_nam": 47, "studentdf": 140, "studentdict": 140, "students_enrol": 172, "studentstud": 102, "studi": [23, 26, 35, 87, 101, 129, 147, 152, 166, 175, 177, 178, 184, 185], "studnet": 102, "stuff": 103, "stunfisk": 143, "stunki": 143, "style": [89, 90, 94, 122, 129, 132, 133, 136, 139, 143, 144, 147, 149, 151, 152, 156, 157, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "sub": [36, 54, 69, 74, 78, 83, 84, 125, 173, 175, 177], "subarrai": 127, "subcategori": 173, "subclass": [71, 84, 103, 147, 148, 149, 150, 154], "subdirectori": [69, 83, 150], "subdiretori": 150, "subdivid": 175, "subgroup": 39, "subject": [146, 163, 175], "subplot": [8, 10, 16, 17, 18, 19, 25, 30, 107, 111, 148, 149, 150, 154, 155, 162, 163, 172, 174, 176, 177], "subplot_kw": 177, "subplots_adjust": [16, 17, 18, 19], "subprocess": [150, 156, 157], "subscript": [89, 92], "subsect": [156, 157], "subsequ": [0, 34, 53, 149, 150, 154, 157], "subset": [0, 11, 16, 17, 18, 19, 56, 66, 132, 137, 138, 150, 152, 153, 165, 176, 177, 184], "substack": 146, "substitut": [39, 103], "substr": [39, 52], "substract": [95, 125, 146], "subtract": [26, 51, 74, 90, 95, 104, 125, 128, 146], "success": [0, 35, 39, 148, 150, 155, 175], "successful": [14, 15, 24], "successfulli": [38, 71, 147, 153, 155, 170, 172], "sudden": 71, "suddenli": 152, "sudowoodo": 143, "sugar": 37, "suggest": [59, 70, 147, 153, 154, 165, 171, 177], "suhsi": 153, "suicun": 143, "suit": [98, 101, 132, 148, 150, 151, 153, 154, 155, 164, 169, 170, 175], "suitabl": [35, 52, 165, 173], "sulli": 154, "sum": [3, 7, 14, 15, 16, 17, 18, 19, 27, 28, 29, 30, 31, 32, 35, 36, 40, 47, 48, 51, 53, 56, 59, 74, 77, 80, 82, 84, 85, 89, 93, 101, 104, 123, 125, 128, 129, 143, 144, 148, 150, 151, 155, 156, 157, 168, 171, 173], "sum1": 94, "sum_": [27, 29, 30], "sum_1": 31, "sum_al": 71, "sum_all_num": 77, "sum_all_numb": 74, "sum_i": [29, 32], "sum_j": 29, "sum_numb": 36, "sum_of_even": 74, "sum_of_five_num": 71, "sum_of_kd": 168, "sum_of_numb": 74, "sum_of_odd": 74, "sum_two_numb": 74, "sumbackward0": 148, "summar": [36, 84, 133, 148, 154, 161, 170], "summari": [84, 122, 150, 153, 155, 171, 172, 173, 176], "summaris": [146, 150], "summat": [28, 36, 128], "summer": [45, 74, 167], "summer_r": 167, "sun": [39, 60, 61, 165, 168, 170, 171, 172, 173, 177], "sundai": [60, 61], "sunflora": 143, "sung": 155, "sunkern": 143, "sunni": 5, "sunroof": 102, "super": [72, 101, 106, 129, 136, 139, 147, 148, 149, 150, 151, 154, 156, 157, 177], "superclass": 103, "superhead": 177, "superior": 0, "supervis": [7, 18, 19, 148, 184, 185], "suppli": [69, 71, 139], "support": [6, 15, 24, 47, 49, 51, 53, 54, 56, 68, 74, 82, 90, 91, 92, 98, 101, 103, 109, 128, 151, 152, 153, 164, 165, 168, 173, 175, 177, 182], "support_word": 68, "suppos": [35, 38, 40, 42, 49, 57, 59, 80, 83, 84, 101, 104, 106, 128, 133, 134, 138, 139, 140, 141, 142, 175], "suppport": [10, 14], "supress": 136, "suptitl": [30, 150, 154, 168, 172, 177], "sure": [4, 24, 25, 39, 40, 71, 76, 107, 111, 125, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 162, 165, 169, 171, 172, 173, 175], "surfac": [74, 146, 155], "surfaceaxi": 11, "surnam": [77, 84, 135, 142], "surpris": 155, "surround": [0, 35, 89, 91], "surskit": 143, "survei": 164, "surviv": [171, 173], "suryansh": [4, 5], "sushi": [150, 151, 152, 153, 154, 155, 156, 157], "susmelj": 151, "suspect": 171, "suspend": [65, 66], "suspens": 66, "suspicion": 8, "sutton": 153, "svd": [26, 130], "sw": 71, "swablu": 143, "swadloon": 143, "swahili": 68, "swalot": 143, "swampert": 143, "swampertmega": 143, "swanna": 143, "swap": [52, 74, 146, 154], "swapcas": 52, "swapfil": 69, "swarm": [161, 171, 174], "swarmplot": [161, 164, 169, 170, 171], "sweden": [11, 13, 53, 71], "sweet": 49, "swellow": 143, "swim": [101, 103], "swinub": 143, "swirlix": 143, "switch": [146, 162, 166, 175], "switzerland": [11, 13, 166], "swoobat": 143, "sx": 52, "sy": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 59, 69, 70, 71, 83, 84, 94, 146, 153], "syantax": 53, "sylveon": 143, "symbol": [28, 29, 37, 39, 40, 52, 80, 84, 88, 89, 90, 95, 104, 146, 154], "symmetr": 47, "symmetri": 7, "symmetric_differ": 56, "symmetric_difference_upd": 56, "synaps": 7, "sync": 125, "syntact": [37, 74, 87], "syntax": [20, 22, 35, 37, 38, 39, 52, 53, 54, 55, 56, 69, 71, 74, 79, 84, 88, 93, 94, 98, 101, 102, 103, 108, 112, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 162, 174, 175, 177], "syntaxerror": [52, 70, 77, 88, 90], "syntaxwarn": 95, "synthet": 177, "system": [7, 18, 19, 24, 31, 34, 49, 51, 65, 68, 69, 70, 80, 89, 104, 147, 150, 155, 184], "systemerror": 70, "systemexit": 70, "t": [7, 10, 11, 17, 18, 19, 25, 27, 31, 32, 38, 45, 47, 48, 49, 52, 53, 54, 55, 56, 57, 59, 61, 63, 65, 68, 71, 74, 76, 80, 83, 87, 90, 91, 92, 93, 94, 98, 101, 102, 103, 104, 106, 107, 111, 125, 128, 129, 130, 132, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "t1": [54, 59, 63, 65, 66], "t10": 164, "t10k": 149, "t2": [54, 59, 63, 66], "t3": [54, 59, 63], "t4": [54, 59], "t5": 59, "t6": 59, "t_i": 27, "tab": [42, 52, 70, 89, 91, 155, 164], "tab10": 167, "tab10_r": 167, "tab20": 167, "tab20_r": 167, "tab20b": 167, "tab20b_r": 167, "tab20c": 167, "tab20c_r": 167, "taberror": 70, "tabl": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 47, 49, 51, 60, 61, 80, 95, 104, 132, 133, 140, 146, 147, 148, 149, 153, 169, 178], "table_nam": 132, "tableau": [164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "tableau_20": [166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "tabul": [53, 55, 104], "tabular": [68, 132, 141, 142, 148, 155], "tackl": [0, 165], "taco": 155, "tag": [5, 24, 68], "tag_scalar_dict": 153, "tail": [7, 132, 143, 144, 175], "taillow": 143, "take": [4, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 34, 35, 36, 37, 39, 40, 43, 47, 48, 51, 52, 53, 56, 57, 59, 60, 61, 62, 63, 65, 66, 68, 69, 71, 74, 75, 76, 77, 78, 79, 80, 84, 89, 90, 94, 98, 101, 102, 103, 106, 128, 132, 133, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 178], "taken": [68, 147, 155, 174, 175], "talk": [65, 66, 146, 148, 149, 154, 155, 162, 167, 171, 177], "talli": 177, "talonflam": 143, "tamper": [52, 57, 90, 101], "tan": [80, 82], "tangela": 143, "tangent": [80, 82], "tangrowth": 143, "tanh": [80, 82], "tap": 176, "tar": 80, "targ_dir": 150, "targ_imag": 150, "targ_image_adjust": 150, "targ_label": 150, "targ_sampl": 150, "target": [0, 5, 14, 15, 16, 17, 66, 98, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 164], "target_dir": [151, 153, 154, 155, 156, 157], "target_dir_path": [151, 156, 157], "target_directori": 150, "target_fil": 153, "target_imag": 150, "target_image_pr": [150, 152], "target_image_pred_label": [150, 152], "target_image_pred_prob": [150, 152], "target_transform": [149, 150, 156, 157], "taser": 161, "task": [0, 7, 18, 19, 24, 37, 47, 48, 53, 55, 56, 62, 65, 66, 71, 74, 78, 80, 85, 87, 94, 95, 98, 104, 148, 149, 150, 152, 154, 164, 174, 175, 184], "tau": 80, "tauro": 143, "taxi": 175, "tchapter": 52, "tchp": 52, "tdatatyp": 52, "te": 39, "tea": 39, "teach": [0, 37, 39, 52, 56, 130, 149, 158], "teacher": [39, 52, 56, 68], "teal": 164, "team": [77, 122, 150, 151, 153, 154, 155, 175, 177], "teas": 154, "tech": 185, "technic": [34, 106, 154], "techniqu": [0, 7, 18, 19, 36, 80, 148, 150, 152, 153, 154, 155, 169, 170, 175, 176, 184, 185], "technologi": [0, 146, 149], "teddiursa": 143, "tediou": 150, "tell": [43, 44, 49, 68, 71, 87, 94, 127, 146, 147, 148, 149, 150, 153, 154, 155, 163], "temp": [74, 90, 146], "temp_convert": 71, "temperatur": [38, 74], "tempor": 175, "temporari": [103, 172], "temporarili": 162, "tempt": 155, "ten": [36, 37, 47, 68, 74, 123, 155], "ten_zero": 146, "tend": [27, 103], "tendenc": [101, 161, 165, 169, 171, 172, 173], "tensor": [26, 147, 149, 150, 151, 153, 154, 156, 157], "tensor_a": 146, "tensor_b": 146, "tensor_back_on_cpu": 146, "tensor_c": 146, "tensor_d": 146, "tensor_float16": 146, "tensor_int8": 146, "tensor_on_gpu": 146, "tensordot": 130, "tensorflow": [7, 125, 148, 153, 184], "tentacool": 143, "tentacruel": 143, "tepig": 143, "terabyt": 177, "term": [4, 5, 29, 35, 37, 78, 85, 146, 148, 149, 152, 154, 155, 162, 163, 165, 166, 169, 170, 171, 172, 173, 174, 175, 177], "termin": [34, 35, 47, 48, 49, 70, 71, 87, 125, 151, 155], "terrain": 167, "terrain_r": 167, "terrakion": 143, "terrif": 155, "terrifi": 153, "territori": 166, "ters": 90, "tesla": [146, 155], "test": [12, 14, 15, 24, 39, 43, 44, 48, 49, 68, 69, 70, 71, 76, 80, 87, 95, 102, 143, 146, 151, 153, 154, 156, 157, 173, 175], "test1": 80, "test_1": [68, 69], "test_2": [68, 69], "test_acc": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "test_accuraci": [150, 151, 156, 157], "test_cost": [11, 13], "test_data": [11, 13, 16, 17, 18, 19, 147, 148, 149, 150, 151, 155, 156, 157], "test_data_custom": 150, "test_data_food101_20_perc": 155, "test_data_path": 155, "test_data_simpl": 150, "test_dataload": [149, 150, 151, 152, 153, 154, 155, 156, 157], "test_dataloader_custom": 150, "test_dataloader_effnetb2": 155, "test_dataloader_food101_20_perc": 155, "test_dataloader_pretrain": 154, "test_dataloader_simpl": 150, "test_dataloader_vit": 155, "test_dir": [150, 151, 152, 153, 154, 155, 156, 157], "test_express": 48, "test_imag": 149, "test_image01": 151, "test_image02": 151, "test_image_01": 157, "test_image_02": 157, "test_image_path_list": [152, 153], "test_image_path_sampl": [152, 153], "test_image_through_conv": 149, "test_image_through_conv_and_max_pool": 149, "test_label": [147, 148, 149], "test_logit": 148, "test_loss": [147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "test_loss_valu": 147, "test_modul": 80, "test_pr": [147, 148, 149], "test_precis": [16, 17, 18, 19], "test_pred_dict": 155, "test_pred_label": [150, 151, 156, 157], "test_pred_logit": [150, 151, 156, 157], "test_predict": [11, 13], "test_predictions_t": [11, 13], "test_sampl": 149, "test_siz": 148, "test_step": [149, 153], "test_str": 39, "test_transform": 150, "tester": 39, "testfil": [69, 71], "tex": [25, 107, 111], "text": [6, 20, 21, 27, 32, 39, 44, 52, 68, 74, 84, 95, 108, 109, 110, 112, 113, 132, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 166, 168, 172, 173, 175, 177, 181, 182, 184], "text_1": 68, "textbook": 154, "textcoord": 173, "textiobas": 68, "textiowrapp": 68, "textual": [52, 62], "textwrap": 52, "th": [1, 4, 5, 12, 39, 52], "tha": 39, "thailand": 54, "than": [4, 8, 10, 11, 16, 17, 18, 19, 22, 24, 35, 36, 39, 40, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 57, 59, 60, 66, 72, 78, 79, 80, 82, 90, 91, 92, 94, 95, 96, 98, 102, 103, 104, 106, 125, 127, 128, 132, 133, 135, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 164, 167, 169, 171, 172, 173, 174, 175, 177], "thank": [94, 147, 148, 149, 152, 153, 154, 155, 165], "that_particular_class": 173, "that_particular_class_men": 173, "thei": [0, 7, 8, 11, 13, 18, 19, 34, 35, 37, 38, 42, 44, 46, 49, 51, 52, 53, 54, 55, 56, 68, 70, 72, 74, 75, 76, 78, 79, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 94, 95, 96, 98, 101, 102, 106, 108, 112, 126, 128, 132, 137, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177], "theirs": [13, 35, 45], "them": [8, 14, 15, 16, 17, 18, 19, 24, 32, 34, 36, 51, 52, 53, 54, 55, 56, 66, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 82, 90, 94, 95, 96, 101, 102, 103, 104, 115, 129, 132, 134, 146, 147, 148, 149, 150, 152, 153, 154, 161, 162, 164, 166, 167, 169, 170, 172, 175, 177, 178, 185], "theme": [162, 164], "themselv": [39, 154, 184], "theorem": 0, "theoret": [28, 29, 34], "theori": [35, 171, 174], "therefor": [38, 39, 52, 98, 101, 150, 155], "thermodynam": 38, "theta": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 27, 32], "theta_index": 15, "theta_t": [11, 12, 13], "thi": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 115, 122, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 185], "thick": [162, 172, 173], "thicken": 162, "thin": 172, "thing": [6, 24, 27, 35, 37, 42, 47, 49, 52, 57, 69, 80, 89, 96, 102, 103, 106, 109, 126, 129, 132, 146, 147, 149, 150, 152, 153, 154, 155, 163, 164, 165, 171, 177, 182, 185], "think": [64, 90, 101, 102, 126, 146, 147, 148, 149, 150, 152, 154, 155, 162, 165, 171, 173, 174], "third": [24, 52, 59, 80, 83, 92, 94, 103, 122, 129, 132, 135, 146, 147, 155, 165, 171, 173], "thirti": 52, "this_is_a_long_vari": 88, "thise": 170, "thorugh": 149, "those": [24, 42, 66, 75, 79, 80, 81, 85, 96, 101, 102, 108, 112, 130, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 162, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177], "though": [18, 19, 52, 71, 75, 84, 103, 128, 132, 133, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163, 164, 170, 172, 173, 174, 175, 176, 177], "thought": [42, 149, 155, 164, 170, 171, 172, 173], "thousand": [38, 146, 149], "thread": [65, 66, 80, 155], "threat": 161, "threat_level": 161, "threaten": 161, "three": [3, 7, 9, 10, 14, 15, 18, 19, 38, 39, 40, 42, 47, 48, 52, 53, 54, 57, 59, 68, 76, 77, 90, 93, 94, 96, 102, 103, 106, 132, 135, 138, 139, 140, 146, 147, 148, 149, 150, 152, 154, 155, 161, 165, 169, 170, 171, 175, 176, 177, 178], "thresh": [132, 138], "threshold": [1, 7], "thrice": 171, "throguh": 154, "throh": 143, "through": [0, 8, 16, 17, 18, 19, 35, 47, 48, 49, 51, 57, 71, 77, 78, 87, 104, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 177, 178, 184, 185], "throughout": [89, 146, 150, 151, 153, 154, 155, 156, 157, 163, 165, 169, 176], "throughput": [8, 9], "throughput_from": 8, "throughput_grid": 8, "throughput_rang": 8, "throughput_to": 8, "throw": [24, 71, 75, 98, 133, 135, 136, 139, 141, 153, 155], "thu": [10, 27, 38, 47, 48, 52, 65, 71, 89, 98, 101, 106, 152, 154, 155, 164, 165, 166, 171, 172, 173, 175, 176, 177, 178], "thumb": [147, 148, 150, 152, 154, 170, 173], "thundurusincarn": 143, "thundurustherian": 143, "thur": [170, 173], "thursdai": 171, "ti": [68, 165], "tick": [154, 155, 162, 167, 168, 174, 176, 177], "tick_param": [16, 17, 18, 19, 155], "ticket": 173, "ticklabel_format": 172, "tickmark": 122, "tidi": [165, 169, 170, 174], "tier": 154, "tight": [30, 153, 185], "tightli": 166, "tile": 128, "till": [47, 48, 49, 68, 92, 133, 136, 139, 142, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177], "tim": 161, "timburr": 143, "time": [0, 5, 7, 24, 30, 31, 34, 35, 37, 42, 46, 47, 48, 49, 51, 52, 54, 61, 75, 78, 79, 80, 88, 89, 90, 96, 98, 102, 103, 104, 106, 122, 128, 132, 136, 137, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 184, 185], "time_for_pr": 155, "time_left_for_newyear": 63, "time_per_pred_cpu": 155, "time_str": 65, "timedelta": 63, "timedelta64": 130, "timeit": [149, 150, 152, 155, 156, 157], "timeout": 146, "timepoint": 175, "timer": [149, 150, 152, 155, 156, 157], "times2": 31, "times3": 36, "times5": 36, "timescal": 155, "timeseri": 180, "timestamp": [22, 67, 153], "timm": [149, 152, 154], "timplay": 24, "tine": 152, "ting": 39, "tini": 172, "tinyvgg": [149, 151, 152, 159], "tip": [39, 152, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177], "tire": 169, "tirtouga": 143, "titan": [146, 152, 161, 163, 171, 175, 177], "titl": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 45, 52, 122, 123, 147, 148, 149, 150, 152, 154, 155, 165, 168, 177, 178], "title_text": 149, "tivat": 39, "tk": 24, "tkinter": 80, "tlc": 175, "tm_hour": 65, "tm_isdst": 65, "tm_mdai": 65, "tm_min": 65, "tm_mon": 65, "tm_sec": 65, "tm_wdai": 65, "tm_ydai": 65, "tm_year": 65, "tmp": [69, 146], "to_csv": [132, 143, 144], "to_dict": 132, "to_excel": [132, 143], "to_fahreheit": 38, "to_fahrenheit": 38, "to_json": 132, "to_sql": 132, "todai": [0, 63, 64, 163, 166, 170, 171, 172, 173, 174, 175, 176], "togekiss": 143, "togepi": 143, "toget": 143, "togeth": [7, 8, 18, 19, 35, 52, 90, 98, 104, 128, 151, 153, 155, 157, 166, 169, 171, 175], "toi": [148, 149, 161], "told": [49, 166], "toler": 149, "tolist": [122, 123, 172], "tomato": [71, 74, 95], "ton": [52, 80], "too": [4, 5, 37, 70, 72, 95, 96, 146, 147, 148, 149, 150, 152, 153, 154, 155, 170], "took": [37, 149, 150, 152, 155, 156, 157], "tool": [39, 84, 108, 112, 122, 123, 125, 132, 143, 144, 148, 153, 154, 155, 166, 175, 176, 177, 184, 185], "toolkit": [24, 146], "tooth": 123, "toothpastesalesdata": 123, "top": [6, 8, 16, 17, 18, 19, 90, 109, 125, 127, 128, 132, 146, 148, 149, 151, 154, 155, 157, 162, 164, 165, 166, 171, 172, 173, 175, 177, 182], "topbar": 173, "topic": [52, 77, 123, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 164, 167, 169, 171, 172, 173, 175, 176, 177, 185], "toprow": 135, "torch": [146, 148, 149, 150, 151, 152, 153, 155, 156, 157], "torch_transformer_encoder_lay": 154, "torchaudio": [150, 152, 153, 154, 155], "torchdata": 150, "torchic": 143, "torchinfo": [153, 154, 155], "torchmetr": [148, 149], "torchmetrics_accuraci": 148, "torchrec": [150, 152], "torchscript": 155, "torchserv": 155, "torchtext": [150, 152], "torchvis": [149, 151, 153, 155, 156, 157], "torkoal": 143, "tornadusincarn": 143, "tornadustherian": 143, "torterra": 143, "total": [7, 10, 14, 47, 48, 51, 59, 74, 77, 79, 90, 92, 102, 104, 126, 132, 143, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 165, 166, 169, 170, 171, 172, 173, 174, 175, 177], "total_bil": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "total_expens": 101, "total_incom": 101, "total_profit": 123, "total_second": 59, "total_stud": 172, "total_tim": 149, "total_train_time_model_0": 149, "total_train_time_model_1": 149, "total_train_time_model_2": 149, "total_women_per_class": 173, "totensor": [149, 150, 151, 152, 153, 154, 156, 157], "totodil": 143, "touch": [129, 166, 177, 185], "tough": 154, "toward": [147, 150, 154, 155, 185], "town": [171, 173], "toxicroak": 143, "toyotadf": 144, "tp": 1, "tpuv3": 154, "tpython": 52, "tqdm": [149, 150, 151, 153, 155, 156, 157], "trace": [128, 153, 165, 175], "traceback": [34, 35, 36, 37, 38, 40, 48, 52, 53, 54, 55, 56, 61, 66, 68, 70, 71, 72, 75, 76, 77, 78, 80, 89, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 127, 136, 139, 141, 146, 149, 150, 170, 175], "track": [35, 146, 147, 150, 152, 154, 155, 160, 171, 173, 175], "tracker": 153, "tractor": 146, "tradeoff": [150, 152], "tradit": [0, 115, 151, 156, 157], "trail": [51, 52, 54], "train": [0, 1, 3, 4, 7, 9, 115, 146, 158, 159], "train_acc": [149, 150, 151, 152, 153, 154, 155, 156, 157], "train_accuraci": [150, 151, 156, 157], "train_cost": [11, 13], "train_data": [11, 13, 16, 17, 18, 19, 147, 148, 149, 150, 151, 155, 156, 157], "train_data_aug": 150, "train_data_custom": 150, "train_data_food101_20_perc": 155, "train_data_simpl": 150, "train_dataload": [149, 150, 151, 152, 153, 154, 155, 156, 157], "train_dataloader_10_perc": 153, "train_dataloader_20_perc": 153, "train_dataloader_aug": 150, "train_dataloader_custom": 150, "train_dataloader_effnetb2": 155, "train_dataloader_food101_20_perc": 155, "train_dataloader_pretrain": 154, "train_dataloader_simpl": 150, "train_dataloader_vit": 155, "train_dir": [150, 151, 152, 153, 154, 155, 156, 157], "train_dir_10_perc": 153, "train_dir_20_perc": 153, "train_features_batch": 149, "train_image01": 151, "train_image_01": 157, "train_image_02": 157, "train_label": [147, 148], "train_labels_batch": 149, "train_loss": [149, 150, 151, 152, 153, 154, 155, 156, 157], "train_loss_valu": 147, "train_precis": [16, 17, 18, 19], "train_split": [147, 148], "train_step": [149, 153], "train_test_split": 148, "train_time_end_model_2": 149, "train_time_end_on_cpu": 149, "train_time_end_on_gpu": 149, "train_time_start_model_2": 149, "train_time_start_on_cpu": 149, "train_time_start_on_gpu": 149, "train_transform": 150, "train_transform_trivial_aug": 150, "trainabl": [150, 152, 153, 154, 155], "trainbl": 155, "traingin": 12, "training_tim": 149, "traininggggggg": 155, "trainint": [12, 13], "tranform": [52, 150], "tranquil": 143, "transact": [5, 14, 15, 16, 17, 148, 155], "transax": 176, "transcript": 68, "transfer": [35, 47, 48, 49, 148, 149, 150, 153, 154, 155, 159, 160, 184], "transform": [7, 26, 31, 98, 146, 149, 151, 156, 157, 164, 184], "transformed_imag": [150, 152, 155], "transformer_encod": 154, "transformer_encoder_block": 154, "transformerencod": 154, "transformerencoderblock": 154, "transformerencoderlay": 154, "translat": [70, 98, 102, 164], "transluc": 175, "transmit": 7, "transpar": [164, 166, 170], "transpos": [26, 27, 57, 125, 128, 133, 134, 140, 146, 169], "transposed_row": 57, "transposit": 31, "trapinch": 143, "travel": [7, 94, 151, 154, 173], "travers": [7, 47, 150], "treasur": 154, "treat": [6, 36, 39, 70, 75, 76, 101, 109, 128, 155, 182], "tree": [0, 10, 14, 68], "treecko": 143, "trekhleb": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "trelli": [176, 177], "trend": [152, 153, 154, 155, 165, 169, 171, 175], "treven": 143, "tri": [37, 70, 94, 101, 104, 126, 139, 146, 148, 150, 152, 154, 155, 163, 166, 171, 172, 175], "trial": 0, "triangl": [47, 95, 103, 176], "triangular": 81, "trick": [125, 127, 146, 148, 150, 163, 170], "tricki": 54, "trigger": 49, "trignometr": 175, "trigonometri": 51, "trip": 175, "trip_dur": 175, "tripl": [52, 74, 84, 89, 91, 92, 154], "triu_indices_from": 176, "trivial": 150, "trivialaug": 150, "trivialaugmentwid": [150, 155], "tropiu": 143, "troubl": [151, 152], "troubleshoot": 148, "trouser": [17, 19, 149], "trubbish": 143, "truck": [7, 103], "truck_info": 103, "true": [1, 12, 16, 17, 18, 19, 30, 34, 35, 37, 39, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 54, 56, 66, 68, 70, 72, 74, 79, 80, 82, 88, 89, 90, 91, 92, 94, 95, 102, 103, 104, 122, 123, 126, 127, 129, 132, 136, 137, 138, 139, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179], "true_divid": 128, "truli": [153, 155], "trump": 68, "trunc": [80, 82, 130], "truncat": [51, 68, 82, 92, 93, 95, 165], "trust": [11, 13, 147], "trusti": 153, "trustworthi": 175, "truth": [95, 147, 148, 149, 150, 155], "truth_label": 149, "truthvalu": 89, "try": [0, 4, 8, 10, 14, 15, 17, 18, 19, 34, 36, 39, 43, 44, 45, 49, 52, 53, 54, 55, 57, 59, 68, 70, 72, 74, 75, 77, 88, 89, 90, 92, 93, 95, 96, 101, 102, 104, 106, 128, 133, 136, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "tryton": 24, "tsplot": 175, "tsv": 132, "tt": 61, "ttopic": 52, "tue": 60, "tuft": 176, "tukei": 175, "tumor": [5, 14, 15, 16, 17], "tune": [136, 147, 152, 154, 155, 175, 185], "tupl": [22, 24, 34, 35, 36, 37, 39, 40, 52, 56, 57, 58, 65, 68, 74, 77, 80, 89, 91, 93, 94, 95, 102, 103, 125, 126, 129, 133, 134, 144, 149, 150, 151, 152, 155, 156, 157, 164, 166], "tuple1": 92, "tuple_1": 102, "tupleliter": 89, "tuppl": 126, "turn": [34, 51, 68, 71, 95, 98, 104, 146, 147, 149, 151, 152, 153, 156, 157, 158, 169, 171, 172, 175, 176, 177], "turtwig": 143, "tutori": [22, 34, 37, 44, 52, 68, 90, 96, 103, 104, 125, 144, 150, 153, 155, 163, 175], "tweak": [150, 152, 154, 162, 164, 169, 174, 177], "tweet": [147, 155], "twelv": 39, "twice": [103, 153], "twilight": 164, "twitch": 154, "twitter": [150, 154], "two": [6, 8, 10, 14, 15, 24, 31, 32, 34, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 51, 53, 54, 55, 56, 57, 61, 66, 68, 70, 71, 72, 75, 77, 78, 80, 83, 84, 85, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 106, 108, 109, 112, 126, 127, 128, 132, 134, 135, 136, 139, 140, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 161, 162, 163, 165, 166, 168, 169, 171, 172, 173, 174, 175, 176, 177, 182], "two_power_of_f": 57, "tworld": 87, "txt": [39, 69, 70, 71, 129, 143], "ty": 52, "tympol": 143, "tynamo": 143, "typ": 55, "type": [4, 5, 7, 10, 14, 17, 19, 24, 34, 36, 39, 40, 42, 47, 48, 49, 52, 56, 57, 59, 61, 63, 64, 70, 71, 75, 77, 78, 80, 87, 88, 89, 90, 95, 96, 98, 100, 101, 104, 106, 122, 125, 127, 128, 129, 132, 139, 140, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "type1": 143, "typecast": 93, "typeerror": [40, 52, 53, 55, 56, 71, 77, 80, 92, 93, 104, 146], "typeobject": 89, "typhlos": 143, "typic": [7, 49, 104, 128, 132, 147, 148, 149, 152, 154, 155, 172, 175], "typo": 70, "tyranitar": 143, "tyranitarmega": 143, "tyrantrum": 143, "tyrogu": 143, "tyrunt": 143, "tz_london": [59, 63], "tz_ny": [59, 63], "tzinfo": 59, "tzname": 61, "u": [0, 14, 15, 32, 34, 36, 37, 38, 39, 40, 42, 44, 45, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 68, 69, 70, 71, 74, 77, 80, 85, 87, 91, 94, 96, 98, 101, 102, 103, 104, 106, 122, 123, 128, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "u00dc": 91, "u00dcnic": 91, "u00f6": 91, "u00f6d": 91, "u_": 32, "u_1": 32, "u_2": 32, "u_i": 32, "u_n": 32, "ubgxofi7uxswaykn": 80, "ubyt": 149, "uci": 9, "ui": 24, "uint8": 150, "uk": 59, "ukool": 52, "ular": 39, "ultim": [154, 174], "um": 29, "umbreon": 143, "umpteen": 170, "unari": [89, 95], "unarm": 161, "unauthor": 101, "unavail": 177, "unawar": 175, "unbound": 143, "unboundlocalerror": [70, 75, 76], "uncertainti": 175, "unchang": [56, 91, 146, 149], "unchart": 166, "unclear": 132, "uncom": [56, 148, 149, 152, 153, 154, 155], "uncommon": 171, "uncorr": 146, "und": 39, "undefin": 102, "under": [0, 31, 47, 49, 51, 59, 70, 82, 85, 92, 122, 142, 147, 153, 155, 171, 172, 175, 176], "underfit": [148, 152, 154], "underli": [68, 82, 96, 98, 125, 132, 139, 147, 152, 164, 166, 169, 170, 172, 173, 174, 175, 177, 178], "undermin": 176, "underscor": [0, 38, 80, 88, 90, 101, 102, 103, 104], "underset": 30, "understand": [0, 6, 11, 12, 13, 14, 15, 16, 17, 22, 23, 26, 36, 37, 39, 42, 47, 48, 49, 51, 57, 84, 85, 89, 96, 98, 101, 106, 109, 115, 122, 123, 132, 133, 146, 147, 148, 149, 150, 151, 152, 154, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 182, 184, 185], "understood": [27, 98], "undestand": 27, "undetermin": 161, "undoubtedli": 162, "unequ": 154, "unexpect": [49, 71], "unfamiliar": [147, 164], "unfez": 143, "unfrozen": 153, "unhandl": 70, "unhash": 56, "unicod": [39, 52, 70, 89, 90, 92], "unicodedecodeerror": 70, "unicodeencodeerror": 70, "unicodeerror": 70, "unicodetranslateerror": 70, "unifi": 91, "uniform": [52, 80, 81, 126, 129, 130, 175, 176], "uniform_data": 178, "unifrom": [16, 17], "unind": [43, 89], "unint": 123, "union": [47, 92], "uniqu": [47, 55, 56, 74, 80, 81, 92, 96, 106, 132, 134, 141, 150, 175, 179], "unique_label": [14, 15, 16, 17], "unit": [18, 19, 68, 122, 123, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 161, 165, 166, 172, 173, 174, 175, 177], "univari": [2, 4, 168, 170, 171, 174, 176, 177], "univers": [0, 7, 94, 172, 173], "university_nam": 172, "unix": [59, 64, 65], "unknowingli": 102, "unknown": [4, 10, 11, 12, 13, 16, 17, 18, 19, 45, 70, 136, 139, 141, 161, 171, 175], "unknowncol": 139, "unlabel": 0, "unless": [39, 46, 74, 89, 146, 148, 149, 152, 162, 165, 175], "unlik": [35, 53, 54, 68, 102, 126, 128, 132, 135, 148, 154, 157, 165, 175], "unlimit": [71, 148, 152, 155], "unmodifi": 148, "unnam": [122, 144, 174], "unnecessari": [38, 154], "unobserv": 174, "unoffici": 150, "unord": [47, 55, 56, 92, 132], "unorderd": 56, "unown": 143, "unpack": [52, 53, 54], "unpackbit": 130, "unpacking_person_info": 71, "unpickl": [84, 147], "unravel": 0, "unravel_index": 130, "unreferenc": [68, 102], "unruffl": 172, "unseen": [147, 150, 154], "unsqueez": [147, 148, 149, 150, 152, 154, 155, 156, 157], "unstructur": 149, "unsuccess": 39, "unsuervis": 10, "unsupervis": [10, 184, 185], "unsuperwis": 10, "unsupport": [70, 93, 104], "unsur": [39, 40, 154], "until": [4, 34, 47, 48, 49, 68, 71, 72, 77, 78, 94, 128, 141, 154, 155], "untrain": [152, 153, 154], "untrained_pr": 148, "unusu": [36, 51], "unzip": [150, 151, 152, 153, 155, 156, 157], "uolp": 52, "up": [11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 34, 38, 42, 47, 48, 49, 51, 68, 71, 74, 75, 77, 78, 85, 87, 89, 92, 93, 94, 98, 125, 132, 143, 146, 147, 148, 149, 151, 155, 156, 163, 164, 165, 166, 168, 171, 173, 176, 177, 185], "upcom": [152, 155, 161, 163, 169, 177], "updat": [4, 5, 38, 48, 53, 56, 76, 132, 135, 136, 137, 138, 139, 141, 142, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 163, 167, 170, 176], "upfront": [98, 146], "upgrad": [149, 150, 154, 155], "upload": [150, 153], "upon": [0, 34, 49, 72, 103, 104, 106, 149, 153, 154, 161, 170, 175, 176, 177, 185], "upper": [28, 29, 37, 39, 52, 94, 123, 139, 146, 163, 171, 172, 175, 176], "uppercas": [37, 39, 52, 53, 80, 88, 90, 95, 146], "uppercase_decor": 37, "upscal": 149, "uptil": 92, "upto": [170, 175, 177], "upward": [152, 174], "urg": 167, "url": [132, 149, 152, 153, 154, 155, 168], "ursar": 143, "us": [0, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 28, 29, 31, 34, 37, 40, 42, 43, 44, 45, 46, 49, 52, 55, 56, 57, 61, 62, 64, 65, 66, 68, 69, 70, 72, 74, 75, 77, 78, 81, 82, 83, 85, 87, 88, 89, 91, 92, 93, 95, 96, 97, 98, 102, 103, 104, 109, 122, 126, 127, 128, 129, 132, 137, 138, 142, 143, 148, 151, 156, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 184], "usa": [37, 122], "usabl": [38, 84, 146, 150, 154, 155], "usag": [18, 19, 23, 38, 79, 98, 132, 133, 146, 148, 151, 153, 156, 157, 164, 165, 172, 177], "usd": [122, 154, 172, 177], "useabl": 24, "useless": 7, "user": [22, 24, 34, 37, 42, 44, 45, 47, 48, 51, 55, 57, 69, 70, 71, 73, 74, 77, 80, 86, 89, 90, 93, 95, 104, 130, 136, 139, 144, 146, 153], "user_check": 45, "user_id_gen_by_us": 80, "userwarn": [146, 152, 161], "usless": 0, "usr": [146, 149], "usual": [0, 27, 37, 48, 49, 57, 71, 74, 83, 90, 92, 98, 103, 126, 132, 138, 146, 148, 149, 150, 151, 152, 154, 155, 156, 157, 165, 171], "utc": [59, 60, 61, 64, 65], "utf": [68, 71], "uti": 155, "util": [7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 57, 139, 146, 147, 149, 150, 152, 153, 154, 155, 156, 157, 159, 173, 177], "utmost": [164, 171, 175, 176], "uv": 32, "uxi": 143, "v": [7, 24, 26, 32, 47, 52, 55, 68, 71, 90, 100, 128, 148, 149, 150, 152, 153, 165, 167, 169, 170, 174, 180], "v0": [152, 153, 154, 155, 162], "v1": [104, 129, 177], "v2": [104, 129, 177], "v3": 24, "v_": 32, "v_1": [32, 177], "v_2": [32, 177], "v_i": 32, "v_n": 32, "va": [163, 173], "vaccin": 47, "vagu": [7, 18, 19, 165], "vairabl": 94, "val": [38, 47, 49], "valid": [5, 11, 13, 15, 16, 17, 18, 19, 39, 52, 54, 74, 88, 89, 96, 106, 132, 147, 149, 150, 155, 156, 164], "valu": [1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 26, 27, 32, 34, 35, 37, 38, 39, 40, 43, 44, 46, 47, 48, 51, 52, 56, 57, 59, 65, 68, 70, 71, 72, 75, 76, 77, 79, 80, 81, 82, 84, 87, 89, 91, 92, 93, 95, 96, 102, 122, 125, 126, 127, 128, 129, 132, 134, 136, 137, 139, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178], "valuabl": [0, 17, 18, 19], "value1": 53, "value2": 53, "value3": 53, "value_count": [122, 132, 144, 148, 155], "value_var": 177, "valueerror": [38, 71, 93, 94, 106, 127, 133, 141, 169], "valuen": 53, "valuetoolargeerror": 72, "valuetoosmallerror": 72, "vanilla": 154, "vanillish": 143, "vanillit": 143, "vanillux": 143, "vaporeon": 143, "var": [71, 77, 101, 122, 167, 176], "var_1": 88, "var_nam": [152, 153, 154, 155, 169, 170, 171], "var_scope_test": 75, "vari": [8, 11, 13, 71, 88, 101, 132, 148, 150, 152, 153, 154, 155, 162, 164, 169, 177], "variabel": 178, "variabl": [1, 5, 7, 8, 11, 12, 13, 14, 15, 16, 17, 22, 24, 28, 29, 35, 38, 39, 40, 43, 44, 45, 47, 48, 49, 51, 52, 53, 57, 59, 60, 62, 64, 70, 71, 74, 79, 80, 83, 84, 88, 91, 92, 93, 94, 95, 100, 102, 103, 106, 136, 138, 139, 141, 142, 146, 147, 149, 154, 155, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177], "variable1": 88, "varianc": [1, 3, 101, 126, 129, 165], "variant": [152, 154], "variat": [1, 20, 44, 45, 47, 108, 112, 164, 166, 169, 170, 171, 172, 173, 174, 175, 177], "varieti": [24, 52, 150, 169, 173, 176, 177], "variou": [0, 2, 24, 37, 39, 47, 48, 51, 52, 53, 54, 55, 57, 68, 80, 84, 91, 92, 95, 96, 125, 132, 137, 140, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 162, 163, 166, 167, 173, 176, 177, 178, 185], "variti": 169, "vartupl": 77, "vast": [0, 125, 132, 135, 154, 155], "vaswani": 154, "vdot": [31, 32], "ve": [16, 17, 18, 19, 39, 71, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177], "vec": 32, "vector": [3, 4, 11, 16, 17, 18, 19, 26, 30, 31, 33, 104, 128, 129, 148, 149, 152, 153, 154, 169, 173, 175], "veg": 71, "veget": [54, 71], "vehicl": [103, 132, 175], "vehicle_info": 103, "vendor": [151, 155, 175], "vendor_id": 175, "veniped": 143, "venomoth": 143, "venonat": 143, "venusaur": 143, "venusaurmega": 143, "venv": [24, 155], "verbos": [90, 152, 153], "verdana": 173, "verfi": 155, "veri": [0, 1, 4, 5, 8, 22, 24, 27, 28, 29, 35, 42, 48, 52, 53, 55, 56, 57, 68, 79, 87, 89, 92, 98, 106, 115, 125, 128, 129, 132, 133, 135, 136, 138, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 163, 164, 165, 167, 168, 169, 171, 172, 173, 175, 176, 177], "veriabl": 75, "verifi": [103, 146, 153, 154, 155], "verify_integr": 141, "verison": 149, "versa": [31, 147], "versatil": [52, 53, 176], "versicolor": [9, 10, 14, 161, 169], "version": [24, 66, 68, 79, 80, 81, 95, 128, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 164, 168, 176], "versor": 32, "versu": [147, 149, 154, 155], "vert": 170, "vertex": 155, "vertiac": 172, "vertic": [39, 52, 106, 128, 129, 169, 170, 171, 172, 173, 174, 177], "verticalalign": 154, "vespiquen": 143, "vgg": 152, "vgg16": 152, "via": [38, 49, 103, 147, 149, 150, 151, 152, 153, 154, 155, 157, 175], "viabl": 154, "vibrava": 143, "vice": [31, 147], "victini": 143, "victreebel": 143, "video": [24, 146, 147, 148, 149, 150, 154, 155, 177, 185], "view": [70, 103, 127, 130, 135, 146, 148, 149, 152, 154, 155, 161, 163, 165, 173, 174, 178], "viewabl": 153, "viewer": 164, "vigoroth": 143, "vijai": 102, "vileplum": 143, "violin": [164, 171, 173, 174, 175, 180], "violinplot": [169, 170, 172], "virginica": [9, 10, 14, 161, 169], "viridi": [164, 167, 173], "viridian": 164, "viridis_r": 167, "virizion": 143, "virtual": 171, "virtualenv": 24, "visibl": [75, 80, 94, 102, 165, 172, 175, 176, 177], "visibli": 163, "vision": [146, 148, 150, 151, 152, 154, 155, 160], "visiontransform": 152, "visit": [22, 34, 38, 39, 52, 59, 65, 66, 70, 72, 74, 75, 81, 82, 84, 89, 103, 104, 132, 165], "visual": [0, 11, 12, 13, 27, 52, 53, 103, 115, 122, 123, 146, 147, 148, 151, 152, 153, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 185], "visuali": 165, "visualizaion": 177, "visualstudio": 24, "vit": 152, "vit_average_time_per_pr": 155, "vit_b_16": [152, 154, 155], "vit_b_16_weight": [154, 155], "vit_b_32": 152, "vit_result": 155, "vit_stat": 155, "vit_test_pred_df": 155, "vit_test_pred_dict": 155, "vit_total_param": 155, "vit_transform": 155, "vividli": 175, "vivillon": 143, "vlag": 167, "vlag_r": 167, "vmax": [18, 19, 170, 178], "vmin": [18, 19, 170, 178], "volatil": [68, 146], "volbeat": 143, "volcanion": 143, "volcarona": 143, "volkswagen": [132, 133, 144], "voltorb": 143, "volum": 69, "volvo": [132, 133, 144], "vonmis": 81, "vonmisesvari": 81, "vowel": [53, 54, 90, 91], "vpython": 24, "vscode": [24, 146, 153], "vstack": 125, "vullabi": 143, "vulpix": 143, "vv": 128, "vysxuyy7rje0xreyvcvzxa": 153, "w": [0, 47, 48, 49, 52, 53, 54, 56, 60, 61, 68, 71, 128, 146, 149, 150, 152, 154, 155, 161, 164, 176, 177], "w_i": 30, "wa": [0, 14, 15, 34, 35, 36, 37, 38, 39, 44, 47, 49, 52, 57, 68, 70, 71, 75, 80, 87, 90, 94, 103, 104, 106, 127, 128, 133, 146, 147, 148, 149, 150, 152, 153, 154, 155, 159, 161, 162, 163, 165, 171, 173, 175, 176, 177], "wage": 175, "wagon": [132, 133, 144], "wai": [0, 22, 24, 34, 35, 37, 38, 42, 46, 47, 48, 51, 52, 54, 55, 56, 57, 59, 62, 63, 68, 71, 72, 77, 80, 83, 85, 89, 92, 94, 95, 96, 104, 106, 122, 126, 127, 132, 133, 134, 135, 136, 140, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 178, 185], "wailmer": 143, "wailord": 143, "wait": [44, 66, 149, 150, 153, 154, 155], "walk": [150, 154, 174], "walk_through_dir": 150, "walkthrough": 154, "wall": [146, 153], "walli": 28, "walrein": 143, "wandb": 153, "wang": 154, "want": [4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 35, 37, 38, 39, 42, 44, 46, 47, 48, 49, 51, 52, 53, 68, 69, 71, 75, 80, 83, 87, 89, 90, 94, 96, 101, 102, 103, 104, 106, 107, 111, 122, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 161, 162, 163, 164, 165, 167, 170, 171, 172, 175, 176, 177, 185], "warm": [103, 164], "warmup": 154, "warn": [98, 128, 140, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "wartortl": 143, "wash": 123, "washington": 161, "wasn": [153, 155], "wast": 185, "wat": 167, "watch": [47, 147, 148, 149, 185], "watchog": 143, "water": 143, "watev": 52, "watson": 47, "wave": [162, 177], "wb": [68, 148, 149, 150, 151, 152, 153, 154, 156, 157], "we": [0, 1, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 26, 27, 31, 32, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 104, 106, 115, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 156, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 185], "weak": [70, 84], "weapon": [161, 175], "wear": 161, "weather": 5, "weavil": 143, "web": [22, 24, 98, 155, 164], "web_tech": 52, "webpag": 149, "websit": [24, 90, 146, 147, 148, 149, 150, 151, 156, 157, 164], "wed": 146, "weedl": 143, "week": [59, 60, 61, 63, 74, 154, 170, 172, 173], "weekdai": [60, 61], "weekend": [171, 173], "weekli": [95, 122], "weep": 103, "weepinbel": 143, "weez": 143, "weibul": 81, "weibullvari": 81, "weight": [7, 74, 122, 136, 146, 147, 148, 149, 150, 152, 153, 154, 155, 163, 167, 173, 175], "weight_decai": 154, "weight_of_object": 74, "weird": 132, "weirder": 37, "welcom": [37, 52, 68, 74, 80, 87, 101, 153, 155, 165, 170, 171, 172, 174, 175, 176, 177], "well": [4, 5, 11, 12, 13, 16, 17, 18, 19, 24, 25, 36, 42, 44, 45, 47, 48, 49, 51, 52, 63, 69, 71, 79, 83, 89, 90, 95, 96, 101, 102, 103, 104, 107, 111, 132, 134, 135, 136, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177], "went": [71, 148, 149, 152, 153], "were": [9, 10, 14, 27, 39, 40, 49, 68, 70, 71, 77, 94, 95, 103, 106, 128, 146, 147, 150, 152, 153, 154, 155, 159, 161, 169, 174], "weren": 154, "wget": 155, "what": [4, 5, 7, 11, 13, 14, 15, 16, 17, 18, 19, 22, 27, 35, 36, 37, 38, 39, 40, 43, 49, 51, 57, 64, 71, 75, 81, 84, 88, 89, 95, 102, 104, 123, 144, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 175, 176, 177, 184], "whatev": [87, 102, 104, 146, 147, 149, 150, 151, 157, 165], "whatsoev": 177, "wheel": [132, 133, 143, 144, 154, 175], "when": [4, 5, 6, 10, 14, 15, 16, 17, 27, 28, 29, 31, 32, 34, 35, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 52, 54, 57, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 106, 108, 109, 112, 122, 123, 126, 128, 129, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 162, 163, 164, 165, 166, 167, 169, 170, 171, 172, 173, 174, 175, 177, 182], "whenev": [38, 48, 70, 84, 102, 106, 136, 139, 141, 142, 146, 153, 172, 173], "where": [0, 1, 3, 5, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 27, 28, 29, 34, 36, 37, 38, 46, 48, 49, 51, 52, 53, 54, 57, 65, 68, 70, 71, 74, 75, 76, 80, 92, 93, 94, 95, 96, 98, 102, 103, 106, 127, 128, 130, 132, 134, 135, 136, 137, 139, 140, 141, 142, 146, 147, 148, 150, 153, 156, 157, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "wherea": [39, 47, 51, 54, 59, 60, 75, 98, 101, 106, 108, 112, 133, 140, 141, 142, 150, 162, 166, 175, 176], "wherev": [152, 155], "whether": [0, 5, 14, 15, 16, 17, 18, 19, 20, 42, 43, 44, 49, 68, 71, 72, 76, 84, 95, 103, 108, 112, 127, 132, 136, 137, 138, 139, 141, 142, 147, 148, 149, 150, 152, 153, 154, 155, 165, 166, 167, 174, 175], "whi": [170, 171], "which": [0, 3, 4, 5, 6, 7, 8, 9, 10, 12, 15, 16, 17, 18, 19, 23, 24, 28, 29, 31, 32, 34, 35, 36, 37, 38, 39, 40, 45, 47, 49, 51, 52, 54, 55, 56, 57, 62, 64, 66, 68, 69, 71, 72, 74, 75, 79, 80, 85, 89, 90, 91, 92, 93, 94, 96, 98, 101, 102, 103, 104, 106, 109, 122, 123, 125, 126, 127, 128, 129, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 153, 154, 155, 157, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 182, 185], "whichev": [166, 172], "while": [22, 34, 35, 38, 40, 42, 50, 51, 52, 55, 56, 66, 68, 70, 72, 74, 77, 79, 80, 83, 88, 89, 93, 95, 96, 98, 101, 102, 103, 106, 127, 133, 134, 138, 140, 141, 147, 149, 150, 152, 153, 154, 155, 161, 164, 165, 166, 167, 169, 171, 172, 173, 174, 175, 176, 177], "whilst": [148, 149, 151, 154, 155, 176], "whimsicott": 143, "whirliped": 143, "whiscash": 143, "whisker": [7, 11, 13, 170, 171, 173, 175], "whiskerprop": 169, "whismur": 143, "white": [7, 42, 49, 52, 161, 162, 172, 173], "whitegrid": [162, 164, 165, 166, 167, 170, 172, 173, 175, 177], "whitespac": [47, 52, 89], "whl": [152, 153, 154, 155], "who": [44, 52, 130, 155, 161, 171, 173, 175, 185], "whoisthi": [101, 103], "whole": [24, 39, 49, 52, 66, 74, 80, 95, 132, 133, 135, 147, 149, 150, 151, 152, 153, 154, 155], "whoop": 37, "whose": [1, 8, 75, 79, 90, 102, 136, 139, 154], "why": [35, 37, 38, 44, 51, 52, 70, 71, 84, 89, 128, 147, 148, 149, 150, 156, 157, 161, 169, 170, 171, 173], "wichita": 161, "wickham": 165, "wide": [24, 94, 129, 132, 139, 146, 149, 150, 152, 153, 154, 155, 169, 170, 173], "wide_to_long": 169, "widen": 177, "wider": [148, 172, 175], "widespread": [133, 153], "width": [9, 10, 11, 14, 52, 95, 101, 123, 146, 149, 150, 152, 153, 154, 155, 156, 157, 161, 166, 167, 169, 171, 172, 173, 175, 177], "width_ratio": 177, "wigglytuff": 143, "wightman": 149, "wiki": [148, 168], "wikipedia": [1, 3, 4, 5, 7, 146, 147, 148, 152, 168], "wild": [148, 155], "wilder": 175, "win": 177, "win32": [24, 80], "wind": 146, "window": [24, 68, 69, 87, 102, 161, 164, 175], "winerror": [68, 80], "wingul": 143, "winre_backup_partit": 69, "winreag": 69, "winter": [45, 74, 167], "winter_r": [167, 176], "wirh": 143, "wise": [123, 125, 132, 140, 143, 146, 154, 164, 167, 175], "wish": [38, 39, 49, 52, 74, 94, 155, 164, 166, 171, 173, 175, 176, 177], "wistia": 167, "wistia_r": 167, "within": [0, 3, 24, 34, 39, 48, 49, 54, 68, 69, 74, 76, 83, 92, 101, 103, 129, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 161, 162, 163, 167, 169, 170, 171, 172, 173, 175, 177, 179], "without": [0, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 34, 37, 43, 49, 52, 54, 56, 57, 60, 61, 68, 71, 76, 77, 79, 80, 83, 95, 96, 98, 101, 102, 103, 104, 128, 129, 136, 138, 141, 143, 146, 147, 149, 153, 154, 155, 161, 162, 163, 164, 169, 171, 172, 173, 175, 176, 177, 184], "woah": [147, 152, 154, 155], "wobbuffet": 143, "wolpert": 0, "woman": [39, 171, 173], "won": [74, 103, 129, 132, 146, 147, 148, 149, 150, 152, 154, 155, 161, 162, 165, 169, 175, 177], "wonder": [59, 74, 148, 149, 150, 152, 153, 154, 155, 175], "wont": [102, 146], "woo": 101, "woobat": 143, "woohoo": [147, 150, 151, 154, 155], "wooper": 143, "wor": 52, "word": [0, 5, 7, 28, 29, 32, 47, 49, 52, 56, 57, 68, 80, 88, 90, 95, 101, 102, 103, 146, 148, 149, 150, 152, 153, 154, 155, 165, 166, 173, 176], "work": [0, 4, 5, 7, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 25, 35, 36, 37, 39, 40, 47, 48, 49, 51, 53, 55, 57, 59, 68, 69, 71, 75, 78, 80, 85, 92, 94, 95, 98, 101, 102, 103, 104, 107, 111, 125, 127, 128, 132, 135, 139, 146, 147, 148, 149, 150, 152, 153, 154, 155, 161, 162, 164, 165, 166, 167, 170, 172, 175, 176, 177, 185], "workabl": 185, "workbook": 175, "worker": [150, 151, 157], "workflow": [148, 149, 150, 153, 155, 160, 177], "workload": [85, 154], "workplac": 167, "works_for_al": 37, "world": [4, 10, 11, 13, 22, 23, 24, 44, 47, 52, 70, 74, 78, 80, 84, 90, 92, 95, 96, 100, 101, 102, 132, 146, 147, 148, 149, 150, 152, 153, 154, 155, 157, 162, 165, 170, 171, 175, 184], "world66": 52, "wormadampl": 143, "wormadamsandi": 143, "wormadamtrash": 143, "worri": [90, 153, 154, 168, 177], "wors": [148, 149, 154], "worst": [1, 148], "worth": [153, 154, 155, 169, 170, 174], "would": [0, 6, 7, 23, 24, 34, 36, 37, 38, 40, 42, 47, 49, 57, 68, 69, 70, 71, 77, 78, 80, 83, 85, 88, 89, 90, 94, 102, 103, 106, 109, 115, 146, 147, 148, 149, 150, 152, 153, 154, 155, 161, 163, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 182, 185], "wouldn": [154, 155, 165, 173, 176], "wrangl": [145, 167, 175], "wrap": [77, 101, 139, 154], "wrapper": [37, 139, 165, 170, 176], "wrapper___slow_conv2d_forward": 150, "wrapper_accepting_paramet": 37, "wrapper_addmm": 149, "wrapper_cuda_addmm": 149, "writ": 80, "writabl": 68, "write": [5, 6, 20, 22, 24, 39, 45, 47, 48, 49, 52, 54, 57, 70, 74, 75, 76, 80, 84, 85, 89, 90, 91, 92, 94, 95, 98, 101, 103, 106, 108, 109, 112, 126, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 172, 181, 182], "writeabl": 130, "writefil": [151, 155, 157], "writelin": 68, "written": [6, 24, 43, 51, 52, 57, 68, 71, 74, 80, 84, 85, 87, 88, 90, 91, 92, 98, 108, 109, 112, 150, 151, 152, 153, 154, 155, 157, 182], "wrong": [44, 45, 71, 72, 146, 147, 148, 149, 150, 153, 155], "wrote": [68, 87, 89, 148, 151, 152, 153, 154], "wspace": [16, 17, 18, 19], "wt": 169, "wtxmut": 169, "wurmpl": 143, "www": 24, "wxwidget": 24, "wynaut": 143, "x": [1, 3, 4, 5, 8, 10, 11, 12, 13, 14, 15, 16, 17, 24, 28, 29, 30, 31, 35, 36, 37, 39, 40, 43, 44, 45, 46, 47, 51, 52, 53, 54, 55, 57, 60, 61, 68, 74, 75, 76, 77, 79, 80, 82, 84, 89, 90, 91, 92, 94, 95, 102, 103, 104, 106, 122, 123, 125, 126, 127, 128, 129, 132, 133, 139, 143, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178], "x1": [11, 12, 13, 14, 15, 16, 17, 75, 95, 148, 166], "x11": 164, "x2": [11, 12, 13, 14, 15, 16, 17, 95, 122, 148, 166], "x3": 95, "x45": 52, "x48": 52, "x58": 52, "x61": 52, "x86": 69, "x_": [28, 29], "x_1": [28, 29], "x_2": [28, 29], "x_3": [28, 29], "x_4": [28, 29], "x_5": [28, 29], "x_axi": [10, 11, 14, 15, 168], "x_bin": 165, "x_blob": 148, "x_blob_test": 148, "x_blob_train": 148, "x_ci": 165, "x_data": 169, "x_estim": 165, "x_flatten": 154, "x_i": [28, 29, 30, 148], "x_index": [11, 14, 15], "x_input": 154, "x_jitter": 165, "x_m": [28, 29], "x_max": [11, 14, 15, 168], "x_med": 170, "x_min": [11, 14, 15, 168], "x_origin": 146, "x_output_mlp_block": 154, "x_output_msa_block": 154, "x_partial": 165, "x_patch": 154, "x_permut": 146, "x_predict": [11, 12, 13], "x_regress": 148, "x_reshap": 146, "x_sampl": 148, "x_squeez": 146, "x_stack": 146, "x_sum": 48, "x_test": [11, 13, 16, 17, 18, 19, 147, 148], "x_test_regress": 148, "x_train": [10, 11, 13, 14, 15, 16, 17, 18, 19, 147, 148], "x_train_regress": 148, "x_unsqueez": 146, "x_valu": 11, "x_var": [167, 176], "x_y_index": 11, "xatu": 143, "xavier": 172, "xaxi": [11, 173], "xeon": 155, "xernea": 143, "xgboost": 149, "xhh": 52, "xkcd": 164, "xkcd_palett": 164, "xkcd_rgb": [164, 170], "xl": 68, "xlabel": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 122, 123, 147, 149, 150, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175], "xlim": [163, 177], "xlist": 172, "xlrd": 68, "xlsx": 143, "xmax": 169, "xmin": 169, "xml": 24, "xml_exampl": 68, "xor": [95, 104], "xorg": 146, "xtick": [122, 123, 154, 173], "xticklabel": [154, 177], "xy": [155, 173, 176], "xycoord": [163, 176], "xytext": 173, "xyz": [47, 54, 69, 71, 94, 146], "xyzvalu": 94, "xz": 39, "y": [4, 5, 8, 11, 12, 13, 14, 15, 28, 29, 30, 35, 39, 40, 45, 46, 47, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 74, 75, 77, 79, 80, 82, 90, 91, 92, 94, 95, 102, 103, 104, 106, 122, 123, 125, 126, 128, 129, 132, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "y1": [95, 166], "y134sdnnjb2rllxjlbw90zq": 146, "y2": [95, 166], "y3": 95, "y312sdnnjb2rllxjlbw90zq": 146, "y_axi": [10, 11, 14, 15], "y_blob": 148, "y_blob_test": 148, "y_blob_train": 148, "y_data": 169, "y_i": [28, 29, 30], "y_index": [11, 14, 15], "y_jitter": 165, "y_logit": [148, 149], "y_max": [11, 14, 15], "y_med": 170, "y_min": [11, 14, 15], "y_partial": 165, "y_pred": [147, 148, 149, 150, 151, 156, 157], "y_pred_class": [150, 151, 156, 157], "y_pred_label": 148, "y_pred_prob": 148, "y_pred_tensor": 149, "y_predict": [11, 12, 13], "y_regress": 148, "y_sampl": 148, "y_test": [11, 13, 16, 17, 18, 19, 147, 148], "y_test_predict": [16, 17, 18, 19], "y_test_regress": 148, "y_train": [11, 13, 14, 15, 16, 17, 18, 19, 147, 148], "y_train_predict": [14, 15, 16, 17, 18, 19], "y_train_regress": 148, "y_true": [148, 149], "y_valu": 11, "y_var": [167, 176], "ya": 30, "yamask": 143, "yanma": 143, "yanmega": 143, "yannic": 154, "yaxi": [11, 173], "yb": 30, "ycarc5yrrupyg00": 80, "yd7efwnqkns7qxat": 80, "ye": [35, 37, 49, 55, 70, 133, 136, 139, 148, 149, 150, 152, 154, 157, 165, 171, 173, 176, 177], "yeah": 155, "year": [44, 47, 52, 60, 61, 62, 63, 64, 65, 71, 84, 95, 97, 101, 106, 122, 154, 173, 177, 178], "year2021": 90, "year_2021": 90, "year_born": 71, "yellow": 175, "yesmail": 40, "yet": [24, 49, 147, 149, 150, 152, 153, 154, 155, 173], "yield": [34, 35, 88, 127, 128, 162], "yj": [51, 92], "ylabel": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 122, 123, 147, 149, 161, 162, 163, 164, 165, 168, 169, 170, 171, 172, 173, 175], "ylgn": 167, "ylgn_r": 167, "ylgnbu": 167, "ylgnbu_r": 167, "ylim": [163, 168, 176, 177], "ylist": 172, "ylorbr": 167, "ylorbr_r": 167, "ylorrd": 167, "ylorrd_r": 167, "ymax": 169, "ymin": 169, "yo": [39, 163], "you": [0, 3, 4, 5, 6, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 48, 49, 51, 52, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 102, 103, 104, 106, 107, 108, 109, 111, 112, 115, 123, 125, 126, 127, 128, 129, 132, 133, 134, 136, 139, 140, 141, 142, 144, 147, 148, 149, 150, 155, 156, 157, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 185], "your": [6, 20, 23, 25, 34, 36, 39, 42, 43, 44, 49, 52, 53, 54, 63, 68, 69, 71, 72, 74, 80, 82, 83, 87, 88, 89, 90, 94, 95, 98, 101, 102, 107, 108, 109, 111, 112, 115, 122, 125, 128, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 182, 185], "your_ag": 44, "your_space_nam": 155, "your_usernam": 155, "yourself": [57, 59, 74, 90, 94, 101, 146, 148, 153, 175], "youtub": [147, 153, 154, 155], "yt": 30, "ytho": 52, "ython": 39, "ytick": [122, 123, 154, 168, 176], "yticklabel": 154, "yveltal": 143, "yy": [59, 62], "yyyi": [59, 61, 153], "z": [7, 11, 14, 15, 40, 47, 52, 53, 54, 60, 61, 77, 88, 90, 95, 103, 126, 132, 143, 146, 148, 154, 176], "z_predict": 11, "z_score": 179, "z_setosa": 14, "z_versicolor": 14, "z_virginica": 14, "za": 52, "zalando": [9, 17, 19, 149], "zangoos": 143, "zapdo": 143, "zaxi": 11, "zealand": [11, 13], "zebstrika": 143, "zekrom": 143, "zen": [96, 106], "zero": [7, 11, 14, 15, 27, 34, 37, 38, 43, 44, 45, 46, 48, 49, 51, 52, 57, 60, 61, 70, 71, 91, 93, 95, 102, 106, 125, 126, 128, 129, 136, 139, 143, 147, 148, 149, 150, 151, 154, 155, 156, 157, 173, 176], "zero_grad": [147, 148, 149, 150, 151, 156, 157], "zero_to_ten": 146, "zero_to_ten_deprec": 146, "zerodivisionerror": [37, 70, 71], "zeros_lik": 146, "zfill": 52, "zigzagoon": 143, "zip": [30, 47, 80, 92, 126, 134, 140, 150, 151, 152, 153, 154, 155, 156, 157, 170, 173, 176, 179], "zip_ref": [150, 151, 152, 153, 156, 157], "zipcod": [45, 47], "zipfil": [150, 151, 152, 153, 156, 157], "zone": [60, 61, 63], "zoroark": 143, "zorua": 143, "zubat": 143, "zurich": 136, "zweilou": 143, "zxoyh": 80, "zygarde50": 143, "\u00b5": 146, "\u00f6": 91, "\u00fb": 32, "\u00fc": 91, "\u00fcnic\u00f6d": 91, "\u03b8": 32, "\u03c0": 74}, "titles": ["Introduction to Machine Learning! \ud83d\ude80", "Anomaly Detection Using Gaussian Distribution", "Concepts at glance", "K-Means Algorithm", "Linear Regression", "Logistic Regression", "Notebooks with MyST Markdown", "Neural Network", "Anomaly Detection Using Gaussian Distribution", "Datasets", "K-Means Algorithm Demo", "Multivariate Linear Regression Demo", "Non-linear Regression Demo", "Univariate Linear Regression Demo", "Logistic Regression With Linear Boundary Demo", "Logistic Regression With Non-Linear Boundary Demo", "Multivariate Logistic Regression Demo", "Multivariate Logistic Regression Demo", "Neural Network (Multilayer Perceptron) Demo", "Neural Network (Multilayer Perceptron) Demo", "Markdown Files", "Here\u2019s my sample title", "Learn Python Programming", "Mathematics for Machine Learning", "Getting Started with Python", "Content with notebooks", "Linear Algebra", "Calculus - Fourier Series", "Capital-pi notation", "Capital-sigma notation", "Dissimilarity Measure", "Linear Algebra - Matrices", "Linear Algebra - Vectors", "Mathematics essentials", "Python Iterators", "Python Python Generators", "Python Closures", "Python Decorators", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">&#64;property</span></code> decorator", "Python RegEx", "Python <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">*args</span></code></strong> and <strong><code class=\"docutils literal notranslate\"><span class=\"pre\">**kwargs</span></code></strong>", "Python Advanced Topics", "Python Flow-Control (Decision-Making) Statements", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-else</span></code> statement", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">if-elif-else</span></code> statement", "Python Nested <code class=\"docutils literal notranslate\"><span class=\"pre\">if</span></code> statement", "Loops in Python", "Loops in Python", "Control Statements in Python", "Python Flow Control", "Python Numbers, Type Conversion and Mathematics", "Python Strings", "Python List", "Python Tuple", "Python Dictionary", "Python Sets", "Python List Comprehension", "Python Data Types", "Python datetime", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strftime()</span></code>", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">strptime()</span></code>", "How to get current date and time in Python?", "Python Get Current time", "Python timestamp to datetime and vice-versa", "Python time Module", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">sleep()</span></code>", "Python Date &amp; Time Module", "Python File I/O", "Python Directory and Files Management", "Python Errors and Built-in Exceptions", "Python Exceptions Handling Using <code class=\"docutils literal notranslate\"><span class=\"pre\">try</span></code>, <code class=\"docutils literal notranslate\"><span class=\"pre\">except</span></code> and <code class=\"docutils literal notranslate\"><span class=\"pre\">finally</span></code> statement", "Python Custom Exceptions", "Python Files", "Python Functions", "Python Global, Local and Nonlocal variables", "Python <code class=\"docutils literal notranslate\"><span class=\"pre\">global</span></code> Keyword", "Function Argument and Parameter", "Python Recursion", "Python Anonymous/<strong><code class=\"docutils literal notranslate\"><span class=\"pre\">lambda</span></code></strong> Function", "Python Modules", "Python Random Module", "Python Mathematical Functions", "Python Package", "Python Docstrings", "Python User-defined Functions", "Python Functions", "Python Hello, World", "Python Keywords and Identifiers", "Python Statement, Indentation and Comments", "Python Variables and Constants", "Python Literals", "Python Data Types", "Python Type Conversion and Type Casting", "Python Input, Output and Import", "Python Operators", "Python Namespace and Scope", "Data structures and algorithms", "Differences Between Interpreter and Compiler", "&lt;no title&gt;", "Python Introduction", "Python OOPs Concepts", "Python  Classes and Objects", "Python Inheritance", "Python Operator Overloading", "Python Object Class", "self in Python, Demystified", "Content with notebooks", "Markdown Files", "Notebooks with MyST Markdown", "Here\u2019s my sample title", "Content with notebooks", "Markdown Files", "Here\u2019s my sample title", "Introduction to HuggingFace", "Tools to get a launch \ud83d\ude80\ud83d\udc68\u200d\ud83d\ude80", "Table of Contents", "Langchain modules", "LangGraphs", "LangServe", "LangSmith", "Langchain expression language", "Matplotlib", "Python Matplotlib", "Python Matplotlib", "Python NumPy", "Python NumPy Array:", "Array indexing", "Array math", "Arrays reorganizing", "Python NumPy Exercises", "Python Numpy Module", "Python Pandas", "Create Pandas DataFrame from Python Dictionary", "Create Pandas DataFrame from Python List", "Pandas DataFrame head, tail, at, iat", "Drop columns in pandas DataFrame", "Drop duplicates in pandas DataFrame", "Drop columns with NA in pandas DataFrame", "Rename columns in Pandas DataFrame", "Convert Pandas DataFrame to Python dictionary", "Set index in pandas DataFrame", "Reset index in pandas DataFrame", "Python Pandas", "Python Pandas", "Python Pandas Module", "PyTorch Fundamentals", "PyTorch Workflow Fundamentals", "PyTorch Neural Network Classification", "PyTorch Computer Vision", "PyTorch Custom Datasets", "PyTorch Going Modular", "PyTorch Transfer Learning", "PyTorch Experiment Tracking", "PyTorch Paper Replicating", "PyTorch Model Deployment", "Going Modular: Part 1 (cell mode)", "Going Modular: Part 2 (script mode)", "05. PyTorch Going Modular", "Going Modular Scripts", "Pytorch", "Loading Datasets in Seaborn", "Controlling Aesthetics of Seaborn Plots", "Matplotlib vs. Seaborn Plotting Code", "Seaborn Color Palettes", "LM Plot and Reg Plot", "Scatter Plot and Joint Plot", "Additional Regression Plots", "What is Distribution Plots?", "Seaborn: Categorical Data Plots", "Seaborn: Strip Plot", "Seaborn: Box Plot", "Seaborn: Violin Plot", "Bar Plot, Point Plot and Count plot", "Factor Plot", "Time Series &amp; LV Plot", "PairGrid", "FacetGrid", "What is heat map?", "What is cluster map?", "Python Seaborn", "Here\u2019s my sample title", "Notebooks with MyST Markdown", "Tools required to work with neural networks", "AI/ML Learning Path", "Welcome to my technical diary \ud83e\udd2f"], "titleterms": {"": [21, 39, 53, 55, 59, 60, 62, 87, 110, 113, 130, 144, 147, 150, 153, 154, 155, 156, 157, 168, 181], "0": [39, 130, 142, 149, 150], "05": 158, "1": [0, 27, 35, 37, 39, 45, 46, 47, 49, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 70, 71, 74, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 116, 122, 123, 130, 136, 139, 142, 144, 146, 149, 150, 154, 155, 156, 157, 168, 170, 173, 176], "10": [39, 59, 123, 130, 144, 155], "100": 130, "100th": 130, "10x10": 130, "10x3": 130, "11": [39, 59, 130, 155], "12": [59, 130], "13": [59, 130], "14": [59, 130], "15": [59, 130], "16": [59, 130], "16x16": 130, "17": 130, "18": 130, "19": 130, "1d": [127, 130], "2": [0, 35, 37, 39, 45, 46, 47, 49, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 66, 68, 70, 74, 80, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 116, 122, 123, 130, 144, 146, 149, 150, 154, 155, 156, 157, 168, 173], "20": 130, "2016": 130, "2017": 9, "21": 130, "22": 130, "23": 130, "24": 130, "25": 130, "26": 130, "27": 130, "28": 130, "29": 130, "2d": [127, 130], "2x2x2": 130, "3": [0, 35, 37, 39, 45, 47, 49, 52, 53, 54, 56, 59, 60, 62, 63, 66, 68, 70, 74, 80, 84, 89, 90, 91, 92, 94, 95, 116, 122, 123, 130, 144, 146, 149, 154, 155, 168, 173], "30": 130, "31": 130, "32": 130, "33": 130, "34": 130, "35": 130, "36": 130, "37": 130, "38": 130, "39": 130, "3x3": 130, "3x4": 130, "4": [0, 35, 39, 59, 63, 66, 68, 70, 84, 89, 92, 95, 123, 130, 144, 146, 154, 155, 168], "40": 130, "41": 130, "42": 130, "43": 130, "44": 130, "45": 130, "46": 130, "47": 130, "48": 130, "49": 130, "4x4": 130, "5": [39, 59, 63, 70, 84, 92, 95, 123, 130, 144, 155, 168], "50": 130, "51": 130, "52": 130, "53": 130, "54": 130, "55": 130, "56": 130, "57": 130, "58": 130, "59": 130, "5x2": 130, "6": [39, 59, 63, 70, 92, 95, 123, 130, 144, 155], "60": 130, "61": 130, "62": 130, "63": 130, "64": 130, "65": 130, "66": 130, "67": 130, "68": 130, "69": 130, "6x3": 130, "6x6": 130, "7": [39, 59, 70, 123, 130, 144, 155], "70": 130, "71": 130, "72": 130, "73": 130, "74": 130, "75": 130, "76": 130, "77": 130, "78": 130, "79": 130, "8": [39, 59, 70, 123, 130, 144, 155], "80": 130, "81": 130, "82": 130, "83": 130, "84": 130, "85": 130, "86": 130, "87": 130, "88": 130, "89": 130, "8x8": 130, "9": [39, 59, 70, 123, 130, 144, 150], "90": 130, "91": 130, "92": 130, "93": 130, "94": 130, "95": 130, "96": 130, "97": 130, "98": 130, "99": 130, "9_": 39, "9x9": 130, "A": [39, 130], "Be": [106, 127], "By": 39, "For": 57, "If": [53, 55], "In": [24, 53, 80, 102], "Into": [11, 13, 16, 17, 18, 19], "No": 71, "Of": 103, "One": [5, 39, 44, 146], "The": [3, 38, 43, 44, 52, 53, 54, 55, 68, 71, 80, 133, 136, 137, 138, 139, 140, 141, 142, 148, 150, 154], "These": 168, "To": [106, 132], "With": [14, 15], "_": 39, "__doc__": 84, "__init__": 106, "__new__": 106, "about": 22, "accept": 94, "access": [47, 52, 53, 54, 55, 94, 102], "accumul": 130, "across": [76, 155], "activ": 148, "ad": [55, 125, 139], "add": [6, 53, 55, 109, 130, 182], "addit": [31, 32, 167], "adjust": [148, 153], "advanc": [22, 41, 52, 129, 184], "advantag": [54, 78, 80, 85], "aesthet": 162, "aggreg": [143, 146], "agnost": [149, 150], "ai": 184, "algebra": [26, 31, 32], "algorithm": [1, 3, 7, 10, 97], "align": 94, "all": [5, 52, 53, 55, 80, 123, 130, 136, 137, 138, 139, 144, 146, 147, 154], "allow": 168, "alphabet": 39, "alphanumer": 39, "alreadi": 55, "also": [39, 126], "altern": 39, "amount": 143, "an": [6, 34, 39, 53, 55, 56, 71, 102, 109, 130, 147, 150, 154, 155, 182], "analyz": [11, 12, 13, 14, 15, 16, 17], "anatomi": [171, 172], "angl": 32, "ani": [39, 53, 55, 74, 130], "anomali": [1, 8], "anonym": 79, "anoth": 77, "anyth": 55, "app": 155, "appart": 52, "appear": 53, "append": 53, "appl": 146, "appli": 132, "applic": 24, "appropri": 60, "ar": [39, 53, 55, 56, 79, 80, 83, 85, 130, 133, 138, 153, 168], "arang": 129, "arbitrari": [77, 130], "architectur": 148, "area": [24, 130], "arg": 40, "argmax": 126, "argmin": 126, "argument": [53, 71, 74, 77, 94], "arithmat": 95, "arithmet": 95, "around": 130, "arrai": [125, 126, 127, 128, 129, 130], "artifici": 9, "asarrai": 129, "ascend": [53, 54, 55], "asctim": 65, "assign": [90, 95], "attent": 154, "attribut": [68, 84, 102, 126, 130, 132], "attributeerror": 70, "audienc": 185, "augment": 150, "auto": 152, "automat": 153, "avail": 55, "averag": [130, 144], "avoid": 106, "awai": 130, "axi": [130, 136, 139, 168], "b": [39, 47, 48, 130], "back": [37, 146], "background": 169, "backpropag": 7, "backslash": 39, "backward": 47, "balanc": 150, "bar": [122, 123, 173], "base": [130, 152, 153], "baselin": 149, "basic": [52, 77, 122, 125, 126, 146], "batch": [4, 5, 149], "bath": 123, "becom": [130, 150], "befor": 39, "begin": 39, "beginn": [2, 184], "below": 130, "best": [8, 149, 153], "better": [56, 149], "between": [32, 35, 59, 63, 98, 130, 150, 156, 157], "big": 155, "binari": 130, "bincount": 130, "bit": [56, 130], "bitwis": 95, "blank": 87, "block": [25, 107, 111, 130, 154], "blue": 148, "boolean": [74, 91, 95, 127, 129, 130], "bootstrap": 130, "border": 130, "both": [94, 98, 130], "bottom": 135, "boundari": [14, 15], "box": [122, 170, 171], "boxplot": 173, "brace": 39, "bracket": 39, "break": [47, 48, 49, 52, 87], "breath": 24, "bring": 155, "broadcast": [128, 129], "build": [34, 130, 147, 148, 149, 150, 153, 155, 164], "built": [37, 52, 53, 54, 55, 56, 70, 80, 102], "byte": 130, "c": [47, 48, 130], "calcul": [14, 15, 16, 17, 18, 19, 24, 123, 154], "calculu": 27, "call": 74, "can": [57, 106, 130, 146, 148, 151, 152, 154], "canberra": 30, "capit": [28, 29], "car": 144, "care": [127, 130], "caret": 39, "cart": 39, "cartesian": 130, "case": 185, "cast": 93, "catch": [49, 71], "categor": [169, 170], "cauchi": 130, "cell": [6, 109, 151, 156, 157, 182], "center": 130, "chain": 37, "chang": [52, 53, 54, 55, 68, 69, 90, 130, 133, 134, 142, 143, 146, 152, 153], "charact": [39, 52, 91], "chart": [122, 123], "chdir": 69, "chebyshev": 30, "check": [24, 125, 130, 147, 154, 155], "checkerboard": 130, "choic": 24, "cij": 130, "circl": 148, "class": [5, 7, 22, 37, 38, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 59, 64, 65, 68, 70, 71, 72, 74, 80, 84, 90, 95, 101, 102, 103, 105, 130, 148, 150, 154, 155], "class_nam": 155, "classif": [5, 7, 148], "classifi": 153, "claus": 71, "clean": [132, 144], "clear": [53, 55], "clock": 66, "close": 68, "closest": 130, "closur": [36, 37], "cluster": [10, 179], "cnn": 149, "code": [24, 25, 60, 61, 87, 98, 107, 111, 149, 150, 153, 154, 163], "collect": [91, 155], "color": [130, 164, 178], "column": [130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144], "combin": [57, 125, 130, 132, 150, 151, 154, 156, 157], "comma": 90, "command": [87, 130], "comment": [84, 89], "common": [52, 123, 130, 146], "compani": 144, "compar": [130, 136, 149, 150, 155], "comparis": [80, 98], "comparison": [95, 104, 125], "compil": [53, 98], "complier": 54, "compon": 87, "compos": 130, "comprehens": [53, 55, 57], "comput": [7, 130, 146, 149], "con": 151, "concaten": [52, 144], "concept": [2, 24, 101, 185], "conclus": 116, "condit": [42, 57, 132, 143, 144], "confid": 130, "configur": 130, "confus": 149, "consecut": 130, "consid": [39, 130], "constant": [80, 90], "construct": [130, 150], "constructor": [101, 102, 106, 132, 133, 134], "consum": 130, "contain": [39, 130], "content": [25, 107, 111, 116, 147], "contigu": 130, "continu": [47, 48, 49], "control": [22, 42, 47, 48, 49, 50, 162], "conv2d": [149, 154], "convent": 90, "convers": [51, 91, 93, 132], "convert": [54, 130, 140], "convolut": 149, "coordin": 130, "copi": [53, 55, 125, 127, 130], "core": 185, "correspond": 130, "cosin": 30, "cost": [3, 4, 5, 7], "count": [53, 144, 173], "cours": 185, "cover": [130, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "cpu": 146, "cream": 123, "creat": [6, 35, 52, 53, 54, 55, 56, 57, 60, 66, 72, 80, 102, 109, 126, 130, 132, 133, 134, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 164, 182], "creation": [132, 152], "csv": [68, 132, 144], "ctime": 65, "cubehelix": 164, "current": [59, 62, 63, 69], "curriculum": 152, "curv": [150, 152, 154, 155], "custom": [34, 72, 132, 134, 150, 152, 153, 154], "d": [39, 130], "dai": 59, "data": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 51, 58, 92, 97, 102, 122, 123, 129, 132, 133, 134, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 169, 178, 184], "data_setup": 151, "datafram": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142], "dataload": [149, 150, 151, 152, 153, 154, 155, 156, 157], "dataset": [9, 16, 17, 18, 19, 144, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 168, 173, 176], "datatyp": [24, 56, 126, 146], "date": [22, 59, 60, 62, 64, 67, 130], "datetim": [59, 60, 61, 63, 64], "deal": 150, "decim": [39, 51, 80], "decis": [14, 15, 42], "declar": 90, "decor": [37, 38], "deep": [0, 24, 146], "default": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 77, 80, 90, 95, 101], "defin": [36, 72, 74, 85, 102, 106, 133, 137, 138, 139], "definit": [3, 4, 5, 7], "degre": 130, "del": 136, "delet": [52, 53, 54, 68, 102, 136], "demo": [1, 3, 4, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 155], "demystifi": 106, "densiti": 1, "depend": [8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "deploi": 155, "deploy": 155, "descend": [53, 54, 55], "descent": [4, 5, 11, 12, 13, 14, 15, 16, 17], "describ": [130, 143], "descript": 3, "desir": 143, "detail": 144, "detect": [1, 8], "determin": [31, 128], "devic": [149, 150], "diagon": 130, "diari": 185, "dict": [53, 54, 55, 132, 133, 140], "dict2": 55, "dictionari": [47, 55, 68, 71, 92, 133, 140], "differ": [0, 35, 43, 44, 56, 59, 62, 63, 87, 98, 130, 153, 155, 156, 157], "digit": [9, 39, 66], "dimens": 130, "dimension": 130, "dir": 80, "direct": [108, 112], "directori": [69, 155], "disadvantag": 78, "discuss": 168, "disk": 123, "displai": [94, 123, 132, 150], "dissimilar": 30, "distanc": [30, 130], "distort": 3, "distplot": 168, "distribut": [1, 8, 130, 168], "dive": 24, "do": [36, 157], "docstr": [74, 84, 89], "document": [129, 130], "doe": [55, 149], "dollar": 39, "dot": [32, 130], "down": 87, "download": [153, 155], "draw": [14, 15, 130, 170, 176], "drop": [132, 136, 137, 138], "drop_dupl": 137, "dropna": 138, "dtype": 130, "duplic": [137, 138, 141], "durat": 59, "e": 130, "each": [123, 130, 144, 176], "easi": 35, "editor": 24, "effici": 35, "effnetb2": 155, "einsum": 130, "either": [53, 54, 55], "eleg": 53, "element": [53, 54, 55, 56, 125, 130], "elif": 45, "els": [44, 45, 47, 48, 49, 71], "embed": 154, "empti": 56, "encapsul": 101, "encod": 154, "end": [39, 53, 87], "engin": 185, "enjoi": 185, "enumer": [71, 130], "environ": 24, "equal": [55, 130], "equat": [4, 154], "equidist": 130, "equival": [39, 130], "error": [53, 70, 116, 136, 139, 146], "escap": [39, 52], "essenti": [33, 147, 185], "estim": 1, "etc": [53, 146], "euclidian": 30, "evalu": [1, 148, 149, 150, 151, 152, 156, 157], "even": 27, "everi": 130, "everytim": 106, "exampl": [6, 7, 27, 28, 29, 39, 46, 47, 48, 49, 59, 60, 61, 62, 63, 64, 66, 72, 76, 80, 87, 90, 95, 103, 109, 122, 140, 154, 155, 182], "except": [49, 70, 71, 72, 135], "exclud": 130, "exercis": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 80, 90, 95, 101, 123, 130, 144], "exist": 130, "expens": 144, "experi": [149, 153, 155], "expert": 184, "explicit": 93, "explicitli": 106, "explor": 154, "export": [132, 143], "express": [35, 121, 130, 139], "extend": 53, "extens": 68, "extra": [147, 148, 149, 150, 151, 152, 153, 154, 155], "extract": 130, "extractor": [153, 154, 155], "f": [39, 130], "face": [123, 155], "facetgrid": 177, "facewash": 123, "factor": 174, "fals": [53, 55], "faq": [48, 49], "fashion": 9, "faster": [130, 146, 155], "featur": [4, 116, 153, 154, 155], "feedforward": 7, "fifa": 122, "figur": 154, "file": [20, 22, 68, 69, 73, 108, 112, 129, 130, 144, 154, 155], "fill": 130, "filter": [37, 79, 132, 143], "final": 71, "find": [8, 130, 144, 146, 152, 154], "findal": 39, "fing": 8, "first": [21, 53, 110, 113, 130, 135, 136, 137, 144, 181], "fit": [8, 148], "five": 144, "fix": 130, "flatten": [129, 154], "float": [51, 94, 130], "flow": [22, 42, 50], "flower": 9, "folder": [155, 157], "follow": [123, 130, 144], "food101": 155, "foodvis": 155, "form": [27, 150], "format": [52, 59, 60, 61, 62, 84, 94, 143, 178], "forward": [7, 150], "four": [130, 154], "fourier": 27, "fraction": 51, "frame": 144, "freez": [152, 153], "frequent": 130, "from": [53, 54, 55, 56, 59, 60, 80, 83, 94, 129, 130, 132, 133, 134, 135, 136, 137, 138, 142, 144, 146, 148, 152, 154], "from_dict": 133, "fromkei": 55, "frozenset": 56, "function": [3, 4, 5, 7, 22, 27, 35, 36, 37, 47, 52, 53, 54, 55, 56, 57, 74, 76, 77, 78, 79, 80, 82, 84, 85, 86, 94, 103, 104, 126, 128, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157], "fundament": [146, 147], "further": 149, "g": 130, "game": 130, "gaussian": [1, 8, 130], "gener": [27, 35, 57, 129, 130, 164], "get": [24, 37, 53, 55, 59, 62, 63, 69, 94, 115, 123, 130, 132, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "getcwd": 69, "getter": 38, "give": 55, "given": [53, 54, 55, 130, 144], "glanc": 2, "global": [75, 76], "gmtime": 65, "go": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159], "good": 185, "got": 157, "gpu": [146, 149], "gradient": [4, 5, 7, 11, 12, 13, 14, 15, 16, 17], "gradio": 155, "graph": 122, "group": [39, 170], "groupbi": [132, 143], "h": 130, "ha": [130, 157], "ham": 30, "hand": [43, 44, 154], "handl": [59, 71, 116], "handwritten": 9, "happen": 106, "happi": 9, "hard": 123, "have": 36, "head": [135, 153, 154], "header": 140, "heat": 178, "heatmap": 178, "hello": [71, 87], "help": [84, 89, 151, 152], "helper": [150, 153], "here": [21, 52, 106, 110, 113, 181], "hidden": [17, 18, 19], "hide": 102, "hierarch": [103, 134], "higesht": 144, "high": 98, "higher": [36, 37], "histogram": [122, 123], "hold": 24, "hour": 59, "how": [22, 52, 53, 56, 60, 61, 62, 74, 80, 87, 125, 130, 135, 150, 155], "hstack": 129, "hug": 155, "huggingfac": [114, 155], "hybrid": 103, "hypothesi": [4, 5], "i": [0, 20, 31, 32, 39, 47, 48, 52, 53, 54, 55, 56, 68, 74, 76, 78, 82, 96, 98, 106, 108, 112, 129, 130, 132, 138, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 178, 179, 185], "iat": 135, "idea": 150, "ideal": 150, "ident": [31, 95, 130], "identifi": 88, "ignor": [52, 130], "illustr": [17, 18, 19], "iloc": 136, "imag": [130, 150, 152, 153, 154, 155], "imagefold": 150, "immut": 130, "implement": [7, 35, 130, 168], "implicit": 93, "import": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 80, 83, 94, 116, 125, 130, 132, 146, 150], "improv": 148, "includ": 153, "indent": 89, "index": [47, 53, 54, 127, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 146], "indexerror": 70, "indic": 130, "infer": 147, "inference_mod": 147, "infinit": [34, 35], "info": 132, "inform": [24, 146], "inherit": [101, 103], "init": [10, 11, 12, 13, 14, 15, 16, 17, 18, 19], "initi": [7, 116], "inlin": 89, "inner": 130, "inplac": 130, "input": [94, 148, 149, 154, 155], "insert": [53, 132], "insid": [24, 47, 48, 59, 130], "inspect": [52, 132, 155], "instal": [24, 116, 125], "instanc": [57, 101, 102, 153], "instead": 51, "int": 130, "integ": [94, 127, 130], "interact": 164, "interfac": 155, "interleav": 130, "intermedi": 184, "intern": 106, "interpret": [98, 130], "intersect": 56, "interv": 130, "introduct": [0, 22, 24, 40, 100, 114, 116, 146], "invers": 31, "iri": [9, 176], "issubclass": 103, "item": [53, 54, 55, 130], "iter": [34, 42, 47, 48, 52, 53, 54, 55, 56, 130, 132], "itm": 55, "its": 94, "j": 130, "januari": 130, "java": 98, "join": 132, "joint": 166, "jointplot": 168, "journei": 24, "json": 68, "jupyt": [1, 3, 4, 5, 7, 24], "just": 130, "justif": 94, "k": [3, 10], "kdeplot": 168, "keep": [137, 141], "kei": [55, 57, 74, 93, 98, 101, 133, 140], "keyerror": 70, "keyword": [76, 77, 88, 103], "kind": 153, "kwarg": 40, "label": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 80, 90, 95, 101, 135, 148], "lambda": [57, 79, 139], "langchain": [116, 117, 121], "langgraph": 118, "langserv": 119, "langsmith": 120, "languag": [98, 121], "larg": [130, 143], "largest": 130, "last": [123, 130, 135, 136, 137, 144], "launch": 115, "layer": [17, 18, 19, 152, 153, 154], "layernorm": 154, "lead": 139, "learn": [0, 22, 23, 37, 146, 147, 152, 153, 154, 155, 184, 185], "least": 138, "len": [53, 54, 55], "length": [55, 77, 130, 133], "let": [87, 90, 168], "letter": 175, "level": [37, 39, 45, 47, 53, 54, 56, 64, 68, 71, 74, 80, 90, 98, 101, 139, 142, 184], "librari": [122, 126, 149], "life": [130, 155], "like": [101, 130, 146, 150], "line": [43, 44, 47, 84, 87, 89, 90, 94, 122, 123, 130, 148], "linear": [4, 9, 11, 12, 13, 14, 15, 26, 31, 32, 147, 148, 149], "linspac": 129, "list": [24, 44, 45, 47, 48, 52, 53, 54, 55, 57, 60, 61, 69, 71, 74, 80, 92, 130, 133, 134, 139, 140, 141, 155], "listdir": 69, "liter": 91, "lm": 165, "lmplot": 165, "ln": 154, "load": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 122, 126, 129, 143, 147, 149, 150, 153, 155, 161], "loc": 136, "local": [60, 75, 155], "localtim": 65, "logic": [45, 70, 95], "logist": [5, 7, 10, 14, 15, 16, 17], "logit": 148, "logspac": 129, "look": [101, 150], "loop": [34, 35, 47, 48, 49, 57, 147, 148, 149, 150], "loss": [147, 148, 149, 150, 152, 154, 155], "lv": 175, "machin": [0, 23, 98, 153, 154, 155, 184], "made": 154, "main": [150, 152, 153, 154, 155], "make": [42, 69, 130, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "manag": [24, 69], "manhattan": 30, "mani": 126, "manipul": [125, 146], "manual": [152, 153], "map": [37, 79, 155, 178, 179], "mark": 39, "markdown": [6, 20, 25, 107, 108, 109, 111, 112, 182], "mask": 129, "match": [39, 53], "math": [80, 82, 128], "mathemat": [23, 33, 51, 82, 125, 128], "matplotlib": [22, 122, 123, 124, 163], "matric": [31, 127, 130, 146], "matrix": [31, 128, 130, 146, 149], "max": [53, 54, 126, 146], "maximum": [53, 54, 130], "maxpool2d": 149, "mean": [3, 10, 130, 146], "measur": 30, "member": 103, "membership": [52, 53, 54, 55, 56, 95], "memori": [35, 130], "merg": 144, "metacharact": 39, "metadata": [6, 109, 132, 182], "method": [39, 52, 53, 54, 55, 56, 68, 101, 103, 126, 130], "metric": [148, 149], "microchip": 9, "microsecond": 59, "mileag": 144, "min": [53, 54, 126, 146], "mini": 155, "minimum": [54, 130], "minkowski": 30, "minut": 59, "miscellan": 129, "miss": [138, 148, 154], "mkdir": 69, "mktime": 65, "ml": [0, 184], "mlp": [18, 19, 154], "mnist": 9, "mode": [151, 156, 157], "model": [5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "model_1": 148, "model_2": 149, "model_build": 151, "modif": 132, "modifi": [56, 101, 102], "modul": [22, 63, 65, 67, 76, 80, 81, 82, 83, 84, 117, 131, 145, 146, 154], "modular": [151, 156, 157, 158, 159], "modulenotfounderror": 70, "month": [59, 123, 130], "more": [39, 52, 125, 148], "most": [123, 130, 144, 146], "move": [146, 155], "msa": 154, "mul": 130, "mulitpli": 130, "multi": [5, 7, 84, 89, 135, 136, 139, 141, 142, 148, 154], "multidimension": [28, 29], "multilay": [18, 19, 154], "multilevel": 103, "multilin": [94, 123], "multinomi": 130, "multipl": [31, 32, 71, 74, 80, 90, 94, 103, 128, 134, 136, 139, 141, 146], "multipli": 130, "multithread": 66, "multivari": [11, 16, 17], "mutli": 148, "my": [21, 110, 113, 151, 154, 181, 185], "myst": [6, 20, 25, 107, 108, 109, 111, 112, 182], "n": [39, 130, 135, 136], "na": 138, "name": [80, 90, 94, 96, 130, 134, 142, 144, 150, 155], "nameerror": 70, "namespac": 96, "nearest": 130, "necessari": [122, 130], "need": [101, 146, 152], "neg": [53, 54, 59], "negat": 130, "nest": [36, 46, 47, 48, 49, 57, 76, 133], "network": [7, 18, 19, 148, 149, 183], "neural": [7, 18, 19, 148, 149, 183], "neuron": 7, "new": [53, 55, 69, 130, 142, 185], "nn": [149, 154], "non": [9, 12, 15, 39, 130, 148, 149], "nonloc": [36, 75], "normal": [1, 4, 35, 130], "notat": [28, 29], "note": 151, "notebook": [6, 24, 25, 107, 109, 111, 151, 156, 157, 182], "np": 130, "nth": 130, "null": 130, "number": [48, 51, 53, 54, 55, 57, 91, 92, 94, 126, 129, 130, 138, 141, 142], "numer": [91, 130], "numpi": [22, 125, 126, 129, 130, 131, 146], "o": [68, 80], "object": [22, 39, 59, 61, 63, 68, 98, 101, 102, 105, 132], "observ": 170, "old": [52, 141], "onc": 130, "one": [39, 43, 47, 90, 94, 130, 138, 140, 149, 150], "ones": 146, "onli": [94, 130, 133], "oop": 101, "open": 68, "oper": [9, 31, 32, 45, 52, 53, 54, 55, 56, 80, 95, 104, 125, 128, 146], "opposit": 39, "optim": [147, 148, 149, 154], "option": [132, 150], "order": [36, 37, 53, 54, 55, 103, 130], "orient": 101, "orthogon": 32, "other": [53, 54, 55, 56, 142, 150], "otherwis": [53, 54], "our": [143, 148, 149, 150, 152, 153, 154, 155], "outer": [49, 130], "outlier": 8, "outlin": 155, "output": [25, 94, 101, 107, 111, 130, 148, 149, 152, 154, 155], "over": [54, 130], "overfit": [4, 5, 150], "overload": 104, "overrid": [101, 103], "overview": [154, 155], "p": 130, "p0": 130, "p1": 130, "pack": 71, "packag": [24, 83, 84, 116, 130], "pad": 130, "pair": 55, "pairgrid": 176, "pairplot": 168, "pairwis": 176, "palett": 164, "panda": [22, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "paper": 154, "parallel": 32, "paramet": [1, 4, 9, 36, 37, 74, 77, 102, 132, 140, 153], "parent": [101, 103], "part": [130, 151, 156, 157, 173, 176], "pass": [47, 48, 49, 53, 55, 74, 150], "patch": 154, "path": [80, 130, 184], "pattern": [39, 47, 48, 130], "per": 144, "percentil": 130, "perceptron": [17, 18, 19, 154], "perform": [149, 155], "period": 39, "perspect": 148, "pi": 28, "pie": [122, 123], "piec": 148, "pipelin": 35, "place": [130, 136, 137, 138, 139, 141, 142], "placehold": 125, "plot": [8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 122, 123, 150, 152, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175], "plu": 39, "point": [57, 63, 93, 94, 101, 130, 173], "polar": 130, "polymorph": 101, "polynomi": 4, "pop": [53, 136], "posit": [68, 77, 94, 130, 135, 136, 139, 146, 154], "power": 130, "practic": 94, "precis": [8, 14, 15, 16, 17, 18, 19], "predict": [11, 12, 13, 16, 17, 18, 19, 147, 148, 149, 150, 152, 153, 154, 155], "prefix": [39, 139], "prepar": [15, 147, 148, 149, 150, 154], "prepara": [10, 14], "prerequisit": 37, "pretrain": [152, 153, 154], "price": 144, "print": [16, 17, 47, 48, 59, 87, 94, 130, 132, 144], "printabl": 55, "privat": 103, "pro": 151, "probabl": 148, "problem": [4, 5, 94, 148], "process": 52, "produc": [55, 130], "product": [28, 32, 123, 130], "profit": 123, "program": [22, 66, 71, 87, 98, 101, 130], "progress": [8, 11, 12, 13, 14, 15, 16, 17], "propag": 7, "properti": [28, 29, 31, 38, 102, 123], "provid": 126, "put": [146, 147, 148, 150, 154], "py": [151, 155], "python": [22, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 100, 101, 102, 103, 104, 105, 106, 123, 124, 125, 126, 130, 131, 132, 133, 134, 140, 141, 143, 144, 145, 151, 155, 157, 180], "python3": 53, "pytorch": [146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 160], "quantifi": 39, "question": [39, 123], "quickli": [6, 109, 182], "quiz": 127, "r": [39, 130], "rais": [71, 139], "rand": 126, "randint": 126, "randn": 126, "random": [7, 80, 81, 126, 129, 130, 146, 149, 150], "randomli": 130, "rang": [47, 123, 130, 136, 141, 142, 146], "rank": 130, "raw": [52, 148], "re": [39, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "read": [68, 123, 130, 143], "readi": 148, "real": [122, 130, 185], "recal": 8, "recommend": 130, "record": 130, "recreat": 148, "recurs": 78, "red": 148, "reduc": 79, "refer": [1, 3, 4, 5, 7], "reg": 165, "regardless": 130, "regex": 39, "regplot": 165, "regress": [4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 167], "regular": [4, 5, 130], "reinforc": 0, "relat": [52, 95], "relationship": 176, "reload": 80, "rememb": [40, 57, 88, 93, 101], "remov": [53, 55, 56, 69, 125, 139], "renam": [69, 80, 132, 139], "reorgan": 129, "repeat": 130, "replac": 130, "replic": [52, 148, 150, 154], "report": 9, "repres": [35, 59, 63, 130], "represent": [55, 130], "requir": [133, 155, 183], "resampl": 130, "research": 154, "reset": [137, 138, 142], "reset_index": 142, "reshap": [129, 146], "residplot": 167, "resolut": 103, "resourc": [22, 124, 131, 145, 148, 149, 150, 151, 153, 155, 160, 180], "result": [10, 16, 17, 130, 149, 150, 153, 155], "return": [36, 53, 54, 55, 74], "revers": [47, 48, 53, 130], "rmdir": 69, "role": [108, 112], "round": 130, "row": [130, 133, 134, 135, 138, 140, 144], "rsourc": 154, "rugplot": 168, "rule": [76, 88, 90], "run": [87, 146, 153, 155, 156], "sale": 123, "same": [53, 54, 130, 154], "sampl": [21, 108, 110, 112, 113, 130, 181], "save": [68, 123, 143, 147, 149, 151, 154, 155, 156, 157], "scalar": [31, 32, 130, 146], "scale": 4, "scatter": [123, 166], "scatterplot": 176, "scienc": 184, "scope": 96, "script": [84, 130, 151, 155, 156, 157, 159], "seaborn": [161, 162, 163, 164, 165, 169, 170, 171, 172, 180], "search": [39, 80], "second": [59, 130], "section": [21, 110, 113, 181], "see": [90, 123, 148], "seed": [146, 153], "segment": 130, "select": [8, 130, 132, 135, 146], "self": [102, 106, 154], "semicolon": 90, "separ": 97, "seq": [54, 55], "sequenc": [39, 52, 97], "sequenti": 164, "seri": [27, 132, 140, 141, 153, 175], "server": 9, "set": [5, 7, 11, 16, 17, 18, 19, 47, 55, 56, 92, 130, 135, 141, 147, 150, 152, 153, 154], "set_axi": 139, "set_index": 141, "setdefault": 55, "setter": 38, "setup": [148, 149, 152, 153, 154, 155], "shallow": [53, 55], "shape": [130, 146, 148, 149, 150, 154], "share": [76, 130], "shift": 130, "short": [43, 44], "shortcut": [43, 44], "should": [53, 54, 101, 130, 149, 150, 152, 153], "show": 123, "sigma": 29, "sign": [94, 130], "signific": 146, "silicon": 146, "similar": [55, 98], "singl": [74, 84, 89, 103, 133, 136, 139, 150, 154], "sixth": 130, "size": [130, 154, 155], "sleep": [65, 66], "slice": [52, 53, 54, 125], "slide": 130, "small": 130, "soap": 123, "solut": [4, 5], "some": 168, "sort": [53, 54, 55, 125, 130, 132, 143, 144], "space": [139, 155], "span": [37, 39, 44, 45, 47, 52, 53, 54, 55, 56, 57, 64, 68, 70, 71, 74, 80, 90, 95, 101], "special": [39, 91, 95, 104], "specif": [24, 53, 54, 55, 71, 135, 154], "specifi": [39, 53, 94], "speed": [149, 155], "split": [11, 13, 16, 17, 18, 19, 39, 147, 148, 154], "spread": 71, "squar": 39, "squeez": 146, "stack": [123, 146], "stai": 106, "star": 39, "start": [24, 39, 142], "stat": 155, "state_dict": 147, "statement": [42, 43, 44, 45, 46, 47, 48, 49, 57, 71, 74, 80, 89], "statist": [80, 125, 129, 132, 143], "step": [98, 149], "store": [155, 157], "str": 55, "straight": 148, "stream": 35, "strftime": [59, 60, 65], "string": [24, 39, 47, 48, 52, 53, 55, 57, 59, 60, 61, 80, 84, 91, 92, 94], "strip": 170, "strptime": [59, 61, 65], "struct_tim": 65, "structur": [97, 130, 155, 185], "style": [52, 123], "sub": 39, "subclass": 130, "subn": 39, "subpart": 130, "subplot": 123, "subsequ": 130, "subset": [13, 125, 130, 155], "subtract": [31, 32, 130], "suffix": 139, "suit": 152, "sum": [130, 146], "summari": [39, 52, 53, 54, 55, 56, 127, 132, 152, 154], "summarywrit": 153, "summat": 29, "super": 103, "supervis": 0, "support": 52, "suppress": 136, "swap": 130, "swarm": [169, 170], "sy": 80, "symmetr": 56, "syntax": [43, 44, 45, 46, 47, 48, 57, 70], "system": 0, "t": 39, "tabl": [116, 154], "tail": 135, "takeawai": [150, 152, 153, 154, 155], "target": 185, "technic": 185, "tell": 130, "tensor": [146, 148], "tensorboard": 153, "terminologi": 154, "test": [9, 11, 13, 16, 17, 18, 19, 53, 54, 55, 56, 132, 147, 148, 149, 150, 152, 155], "test_step": [150, 151, 156, 157], "text": 94, "than": [56, 130], "thei": 130, "them": [130, 151, 155, 156, 157], "thi": [53, 55, 101, 123, 146, 156, 157], "thing": [40, 88, 148, 151], "threshold": 8, "through": [34, 52, 53, 54, 55, 56, 149, 150], "throw": [53, 54], "tile": 130, "time": [22, 39, 53, 59, 60, 62, 63, 64, 65, 66, 67, 127, 130, 149, 155, 175], "timedelata": 63, "timedelta": 59, "timestamp": [59, 60, 64], "timezon": [59, 63], "tinyvgg": [150, 156, 157], "tip": [173, 176], "titan": 173, "titl": [21, 110, 113, 181], "to_dict": 140, "todai": [59, 62, 130], "togeth": [147, 148, 150, 154], "token": 154, "tomorrow": 130, "tool": [115, 183], "toolbox": 185, "toothpast": 123, "top": [135, 170], "topic": [22, 41, 89, 184], "torch": [147, 154], "torchinfo": [150, 152], "torchvis": [150, 152, 154], "total": [55, 123, 130, 144], "toward": 151, "toyota": 144, "track": 153, "tradeoff": [149, 155], "trail": 139, "train": [5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157], "train_step": [150, 151, 156, 157], "transfer": [42, 152], "transform": [150, 152, 153, 154, 155], "transpos": 31, "triangl": 130, "tricki": 56, "triplet": 130, "true": [53, 55, 130], "try": [71, 150], "tupl": [47, 53, 54, 55, 71, 92], "turn": [148, 150, 154, 155], "tutori": 24, "two": [52, 59, 63, 74, 130, 141, 144, 151], "txt": [68, 155], "type": [0, 22, 51, 53, 54, 55, 58, 68, 74, 91, 92, 93, 94, 102, 103, 126, 130, 133, 134, 155], "typeerror": [54, 70], "typic": 0, "u": [90, 168], "ubyt": 130, "under": 130, "underfit": 150, "underscor": 39, "unequ": 130, "unicod": 91, "union": 56, "uniqu": 130, "unit": [7, 32], "univari": 13, "univers": 128, "unpack": [71, 97], "unsqueez": 146, "unsupervis": 0, "untidi": 178, "up": [80, 150, 152, 153, 154], "upcom": 24, "updat": [55, 144, 153], "upload": 155, "us": [1, 8, 24, 35, 36, 38, 39, 47, 48, 51, 53, 54, 59, 60, 63, 71, 76, 79, 80, 84, 90, 94, 101, 106, 116, 123, 125, 130, 133, 134, 135, 136, 139, 140, 141, 144, 146, 147, 149, 150, 152, 153, 154, 155, 185], "user": [72, 85, 94, 133], "util": [116, 151], "v": [5, 39, 57, 84, 98, 133, 136, 151, 155, 163], "valid": 90, "valu": [36, 53, 54, 55, 74, 90, 94, 101, 130, 133, 135, 138, 140, 175], "valueerror": [61, 70], "variabl": [4, 36, 55, 75, 76, 77, 90, 96, 97, 101, 133, 170], "variou": 94, "vector": [7, 32, 130, 146], "versa": 64, "version": [125, 130], "vertic": [130, 168], "vice": 64, "view": [132, 153], "violin": [170, 172], "violinplot": 173, "virtual": 24, "vision": 149, "visual": [8, 149, 150, 154, 155, 168], "vit": [154, 155], "vstack": 129, "w": [39, 130], "wai": [39, 53, 153, 155], "want": [57, 151], "warn": 130, "we": [24, 36, 54, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157], "welcom": 185, "what": [0, 20, 31, 32, 47, 48, 52, 53, 54, 55, 56, 59, 74, 76, 78, 79, 80, 82, 83, 85, 96, 98, 106, 108, 112, 129, 130, 132, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 178, 179], "when": [36, 48, 51, 53, 55, 127, 130], "where": [39, 133, 138, 149, 151, 152, 154, 155], "which": [53, 130, 152], "while": [47, 48, 49, 94, 132, 139], "whisker": 122, "whitespac": 39, "who": 146, "whose": 130, "why": [0, 22, 47, 48, 54, 103, 106, 125, 146, 151, 152, 153, 154, 155], "wich": 130, "wide": 178, "widget": 164, "width": 94, "wild": [151, 157], "window": 130, "without": [38, 74, 130, 140, 142, 150], "word": 39, "work": [34, 52, 60, 61, 143, 151, 183], "workflow": [0, 147, 151, 154], "world": [9, 71, 87, 122, 185], "would": [55, 151], "wrap": 80, "write": [68, 71, 87, 88, 130], "writer": 153, "x": [9, 130], "xi": 130, "xlsx": 68, "xml": 68, "y": [9, 130], "yaml": [6, 109, 182], "year": [59, 123], "yesterdai": 130, "yj": 130, "you": [57, 101, 146, 151, 152, 153, 154], "your": [24, 123], "z": [39, 130], "z0": 39, "za": 39, "zero": [39, 130, 146], "zip": 71}})